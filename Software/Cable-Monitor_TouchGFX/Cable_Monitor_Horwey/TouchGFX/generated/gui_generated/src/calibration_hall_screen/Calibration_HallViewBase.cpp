/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/calibration_hall_screen/Calibration_HallViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Calibration_HallViewBase::Calibration_HallViewBase() :
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler),
    frameCountInteraction2Interval(0)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
    add(image1);

    CALIBRATION_HSL_S.setPosition(0, 160, 207, 27);
    CALIBRATION_HSL_S.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    CALIBRATION_HSL_S.setLinespacing(0);
    Unicode::snprintf(CALIBRATION_HSL_SBuffer, CALIBRATION_HSL_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_96IR).getText());
    CALIBRATION_HSL_S.setWildcard(CALIBRATION_HSL_SBuffer);
    CALIBRATION_HSL_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T1XZ));
    add(CALIBRATION_HSL_S);

    CALIBRATION_HSL_F.setPosition(25, 187, 207, 22);
    CALIBRATION_HSL_F.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    CALIBRATION_HSL_F.setLinespacing(0);
    Unicode::snprintf(CALIBRATION_HSL_FBuffer, CALIBRATION_HSL_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PU07).getText());
    CALIBRATION_HSL_F.setWildcard(CALIBRATION_HSL_FBuffer);
    CALIBRATION_HSL_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AFGX));
    add(CALIBRATION_HSL_F);

    CALIBRATION_HSR_F.setPosition(25, 119, 207, 22);
    CALIBRATION_HSR_F.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    CALIBRATION_HSR_F.setLinespacing(0);
    Unicode::snprintf(CALIBRATION_HSR_FBuffer, CALIBRATION_HSR_F_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IPYE).getText());
    CALIBRATION_HSR_F.setWildcard(CALIBRATION_HSR_FBuffer);
    CALIBRATION_HSR_F.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0EGP));
    add(CALIBRATION_HSR_F);

    CALIBRATION_HSR_S.setPosition(0, 92, 207, 27);
    CALIBRATION_HSR_S.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    CALIBRATION_HSR_S.setLinespacing(0);
    Unicode::snprintf(CALIBRATION_HSR_SBuffer, CALIBRATION_HSR_S_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KCM3).getText());
    CALIBRATION_HSR_S.setWildcard(CALIBRATION_HSR_SBuffer);
    CALIBRATION_HSR_S.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MWJ));
    add(CALIBRATION_HSR_S);

    buttonWithLabel3.setXY(33, 257);
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
    buttonWithLabel3.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ZEVR));
    buttonWithLabel3.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel3.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel3.setAction(buttonCallback);
    add(buttonWithLabel3);

    textArea3.setXY(32, 60);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
    add(textArea3);

    line1.setPosition(0, 50, 240, 10);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(235, 5);
    line1.setLineWidth(1);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    textArea2.setXY(69, 35);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
    add(textArea2);

    textArea1.setXY(54, 12);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
    add(textArea1);
}

Calibration_HallViewBase::~Calibration_HallViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_HallViewBase::setupScreen()
{

}

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}

void Calibration_HallViewBase::handleTickEvent()
{
    frameCountInteraction2Interval++;
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
    {
        //Interaction2
        //When every N tick call virtual function
        //Call function_cali_hall_sensor
        function_cali_hall_sensor();
        frameCountInteraction2Interval = 0;
    }
}

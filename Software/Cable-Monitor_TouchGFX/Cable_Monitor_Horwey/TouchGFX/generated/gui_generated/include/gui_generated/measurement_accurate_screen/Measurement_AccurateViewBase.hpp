/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MEASUREMENT_ACCURATEVIEWBASE_HPP
#define MEASUREMENT_ACCURATEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/measurement_accurate_screen/Measurement_AccuratePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class Measurement_AccurateViewBase : public touchgfx::View<Measurement_AccuratePresenter>
{
public:
    Measurement_AccurateViewBase();
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image_return;
    touchgfx::TextAreaWithOneWildcard textArea_auto_off;
    touchgfx::ButtonWithLabel buttonWithLabel_Return;
    touchgfx::ButtonWithLabel buttonWithLabel_3Phase;
    touchgfx::ButtonWithLabel buttonWithLabel_1Phase;
    touchgfx::Line line2;
    touchgfx::PainterRGB565 line2Painter;
    touchgfx::TextArea textArea_menu;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextArea textArea_name;
    touchgfx::TextArea textArea_title;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_AUTO_OFF_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textArea_auto_offBuffer[TEXTAREA_AUTO_OFF_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Measurement_AccurateViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // MEASUREMENT_ACCURATEVIEWBASE_HPP

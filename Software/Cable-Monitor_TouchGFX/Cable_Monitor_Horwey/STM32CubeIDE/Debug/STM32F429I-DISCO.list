
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002e8a8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171e8  0802ea58  0802ea58  0003ea58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08045c40  08045c40  00055c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08049938  08049938  00059938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000734  08049b84  08049b84  00059b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  0804a2b8  0804a2b8  0005a2b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cf3a8  080cf3a8  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cf3a8  080cf3a8  000df3a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cf3b0  080cf3b0  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cf3b0  080cf3b0  000df3b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cf3c4  080cf3c4  000df3c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cf3c8  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000170  080cf534  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014474  080cf534  000e4474  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00097369  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00177637  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00251025  00000000  00000000  001776ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002cad3  00000000  00000000  003c86ef  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004490  00000000  00000000  003f51c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00120a22  00000000  00000000  003f9658  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 000087fe  00000000  00000000  0051a07a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003597d  00000000  00000000  00522878  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003b885  00000000  00000000  005581f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000cdac  00000000  00000000  00593a7c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    0000350f  00000000  00000000  005a0828  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000150  00000000  00000000  005a3d37  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ea40 	.word	0x0802ea40

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802ea40 	.word	0x0802ea40

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_dmul>:
 8000350:	b570      	push	{r4, r5, r6, lr}
 8000352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800035a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800035e:	bf1d      	ittte	ne
 8000360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000364:	ea94 0f0c 	teqne	r4, ip
 8000368:	ea95 0f0c 	teqne	r5, ip
 800036c:	f000 f8de 	bleq	800052c <__aeabi_dmul+0x1dc>
 8000370:	442c      	add	r4, r5
 8000372:	ea81 0603 	eor.w	r6, r1, r3
 8000376:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800037a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800037e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000382:	bf18      	it	ne
 8000384:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000388:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800038c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000390:	d038      	beq.n	8000404 <__aeabi_dmul+0xb4>
 8000392:	fba0 ce02 	umull	ip, lr, r0, r2
 8000396:	f04f 0500 	mov.w	r5, #0
 800039a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800039e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80003a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80003a6:	f04f 0600 	mov.w	r6, #0
 80003aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80003ae:	f09c 0f00 	teq	ip, #0
 80003b2:	bf18      	it	ne
 80003b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80003b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80003bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80003c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80003c4:	d204      	bcs.n	80003d0 <__aeabi_dmul+0x80>
 80003c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80003ca:	416d      	adcs	r5, r5
 80003cc:	eb46 0606 	adc.w	r6, r6, r6
 80003d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80003d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80003d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80003dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80003e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80003e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80003e8:	bf88      	it	hi
 80003ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80003ee:	d81e      	bhi.n	800042e <__aeabi_dmul+0xde>
 80003f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80003f4:	bf08      	it	eq
 80003f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80003fa:	f150 0000 	adcs.w	r0, r0, #0
 80003fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000408:	ea46 0101 	orr.w	r1, r6, r1
 800040c:	ea40 0002 	orr.w	r0, r0, r2
 8000410:	ea81 0103 	eor.w	r1, r1, r3
 8000414:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000418:	bfc2      	ittt	gt
 800041a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800041e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000422:	bd70      	popgt	{r4, r5, r6, pc}
 8000424:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000428:	f04f 0e00 	mov.w	lr, #0
 800042c:	3c01      	subs	r4, #1
 800042e:	f300 80ab 	bgt.w	8000588 <__aeabi_dmul+0x238>
 8000432:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000436:	bfde      	ittt	le
 8000438:	2000      	movle	r0, #0
 800043a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800043e:	bd70      	pople	{r4, r5, r6, pc}
 8000440:	f1c4 0400 	rsb	r4, r4, #0
 8000444:	3c20      	subs	r4, #32
 8000446:	da35      	bge.n	80004b4 <__aeabi_dmul+0x164>
 8000448:	340c      	adds	r4, #12
 800044a:	dc1b      	bgt.n	8000484 <__aeabi_dmul+0x134>
 800044c:	f104 0414 	add.w	r4, r4, #20
 8000450:	f1c4 0520 	rsb	r5, r4, #32
 8000454:	fa00 f305 	lsl.w	r3, r0, r5
 8000458:	fa20 f004 	lsr.w	r0, r0, r4
 800045c:	fa01 f205 	lsl.w	r2, r1, r5
 8000460:	ea40 0002 	orr.w	r0, r0, r2
 8000464:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000468:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800046c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000470:	fa21 f604 	lsr.w	r6, r1, r4
 8000474:	eb42 0106 	adc.w	r1, r2, r6
 8000478:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800047c:	bf08      	it	eq
 800047e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000482:	bd70      	pop	{r4, r5, r6, pc}
 8000484:	f1c4 040c 	rsb	r4, r4, #12
 8000488:	f1c4 0520 	rsb	r5, r4, #32
 800048c:	fa00 f304 	lsl.w	r3, r0, r4
 8000490:	fa20 f005 	lsr.w	r0, r0, r5
 8000494:	fa01 f204 	lsl.w	r2, r1, r4
 8000498:	ea40 0002 	orr.w	r0, r0, r2
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80004a4:	f141 0100 	adc.w	r1, r1, #0
 80004a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004ac:	bf08      	it	eq
 80004ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004b2:	bd70      	pop	{r4, r5, r6, pc}
 80004b4:	f1c4 0520 	rsb	r5, r4, #32
 80004b8:	fa00 f205 	lsl.w	r2, r0, r5
 80004bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80004c0:	fa20 f304 	lsr.w	r3, r0, r4
 80004c4:	fa01 f205 	lsl.w	r2, r1, r5
 80004c8:	ea43 0302 	orr.w	r3, r3, r2
 80004cc:	fa21 f004 	lsr.w	r0, r1, r4
 80004d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004d4:	fa21 f204 	lsr.w	r2, r1, r4
 80004d8:	ea20 0002 	bic.w	r0, r0, r2
 80004dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80004e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80004e4:	bf08      	it	eq
 80004e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80004ea:	bd70      	pop	{r4, r5, r6, pc}
 80004ec:	f094 0f00 	teq	r4, #0
 80004f0:	d10f      	bne.n	8000512 <__aeabi_dmul+0x1c2>
 80004f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80004f6:	0040      	lsls	r0, r0, #1
 80004f8:	eb41 0101 	adc.w	r1, r1, r1
 80004fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000500:	bf08      	it	eq
 8000502:	3c01      	subeq	r4, #1
 8000504:	d0f7      	beq.n	80004f6 <__aeabi_dmul+0x1a6>
 8000506:	ea41 0106 	orr.w	r1, r1, r6
 800050a:	f095 0f00 	teq	r5, #0
 800050e:	bf18      	it	ne
 8000510:	4770      	bxne	lr
 8000512:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000516:	0052      	lsls	r2, r2, #1
 8000518:	eb43 0303 	adc.w	r3, r3, r3
 800051c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000520:	bf08      	it	eq
 8000522:	3d01      	subeq	r5, #1
 8000524:	d0f7      	beq.n	8000516 <__aeabi_dmul+0x1c6>
 8000526:	ea43 0306 	orr.w	r3, r3, r6
 800052a:	4770      	bx	lr
 800052c:	ea94 0f0c 	teq	r4, ip
 8000530:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000534:	bf18      	it	ne
 8000536:	ea95 0f0c 	teqne	r5, ip
 800053a:	d00c      	beq.n	8000556 <__aeabi_dmul+0x206>
 800053c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000540:	bf18      	it	ne
 8000542:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000546:	d1d1      	bne.n	80004ec <__aeabi_dmul+0x19c>
 8000548:	ea81 0103 	eor.w	r1, r1, r3
 800054c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000550:	f04f 0000 	mov.w	r0, #0
 8000554:	bd70      	pop	{r4, r5, r6, pc}
 8000556:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800055a:	bf06      	itte	eq
 800055c:	4610      	moveq	r0, r2
 800055e:	4619      	moveq	r1, r3
 8000560:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000564:	d019      	beq.n	800059a <__aeabi_dmul+0x24a>
 8000566:	ea94 0f0c 	teq	r4, ip
 800056a:	d102      	bne.n	8000572 <__aeabi_dmul+0x222>
 800056c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000570:	d113      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000572:	ea95 0f0c 	teq	r5, ip
 8000576:	d105      	bne.n	8000584 <__aeabi_dmul+0x234>
 8000578:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800057c:	bf1c      	itt	ne
 800057e:	4610      	movne	r0, r2
 8000580:	4619      	movne	r1, r3
 8000582:	d10a      	bne.n	800059a <__aeabi_dmul+0x24a>
 8000584:	ea81 0103 	eor.w	r1, r1, r3
 8000588:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800058c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000590:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000594:	f04f 0000 	mov.w	r0, #0
 8000598:	bd70      	pop	{r4, r5, r6, pc}
 800059a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800059e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80005a2:	bd70      	pop	{r4, r5, r6, pc}

080005a4 <__aeabi_drsub>:
 80005a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e002      	b.n	80005b0 <__adddf3>
 80005aa:	bf00      	nop

080005ac <__aeabi_dsub>:
 80005ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080005b0 <__adddf3>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80005b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80005ba:	ea94 0f05 	teq	r4, r5
 80005be:	bf08      	it	eq
 80005c0:	ea90 0f02 	teqeq	r0, r2
 80005c4:	bf1f      	itttt	ne
 80005c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80005ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80005ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80005d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80005d6:	f000 80e2 	beq.w	800079e <__adddf3+0x1ee>
 80005da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80005de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80005e2:	bfb8      	it	lt
 80005e4:	426d      	neglt	r5, r5
 80005e6:	dd0c      	ble.n	8000602 <__adddf3+0x52>
 80005e8:	442c      	add	r4, r5
 80005ea:	ea80 0202 	eor.w	r2, r0, r2
 80005ee:	ea81 0303 	eor.w	r3, r1, r3
 80005f2:	ea82 0000 	eor.w	r0, r2, r0
 80005f6:	ea83 0101 	eor.w	r1, r3, r1
 80005fa:	ea80 0202 	eor.w	r2, r0, r2
 80005fe:	ea81 0303 	eor.w	r3, r1, r3
 8000602:	2d36      	cmp	r5, #54	; 0x36
 8000604:	bf88      	it	hi
 8000606:	bd30      	pophi	{r4, r5, pc}
 8000608:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800060c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000610:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000614:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000618:	d002      	beq.n	8000620 <__adddf3+0x70>
 800061a:	4240      	negs	r0, r0
 800061c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000620:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000624:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000628:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800062c:	d002      	beq.n	8000634 <__adddf3+0x84>
 800062e:	4252      	negs	r2, r2
 8000630:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000634:	ea94 0f05 	teq	r4, r5
 8000638:	f000 80a7 	beq.w	800078a <__adddf3+0x1da>
 800063c:	f1a4 0401 	sub.w	r4, r4, #1
 8000640:	f1d5 0e20 	rsbs	lr, r5, #32
 8000644:	db0d      	blt.n	8000662 <__adddf3+0xb2>
 8000646:	fa02 fc0e 	lsl.w	ip, r2, lr
 800064a:	fa22 f205 	lsr.w	r2, r2, r5
 800064e:	1880      	adds	r0, r0, r2
 8000650:	f141 0100 	adc.w	r1, r1, #0
 8000654:	fa03 f20e 	lsl.w	r2, r3, lr
 8000658:	1880      	adds	r0, r0, r2
 800065a:	fa43 f305 	asr.w	r3, r3, r5
 800065e:	4159      	adcs	r1, r3
 8000660:	e00e      	b.n	8000680 <__adddf3+0xd0>
 8000662:	f1a5 0520 	sub.w	r5, r5, #32
 8000666:	f10e 0e20 	add.w	lr, lr, #32
 800066a:	2a01      	cmp	r2, #1
 800066c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000670:	bf28      	it	cs
 8000672:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000676:	fa43 f305 	asr.w	r3, r3, r5
 800067a:	18c0      	adds	r0, r0, r3
 800067c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000680:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000684:	d507      	bpl.n	8000696 <__adddf3+0xe6>
 8000686:	f04f 0e00 	mov.w	lr, #0
 800068a:	f1dc 0c00 	rsbs	ip, ip, #0
 800068e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000692:	eb6e 0101 	sbc.w	r1, lr, r1
 8000696:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800069a:	d31b      	bcc.n	80006d4 <__adddf3+0x124>
 800069c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80006a0:	d30c      	bcc.n	80006bc <__adddf3+0x10c>
 80006a2:	0849      	lsrs	r1, r1, #1
 80006a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80006a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80006ac:	f104 0401 	add.w	r4, r4, #1
 80006b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80006b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80006b8:	f080 809a 	bcs.w	80007f0 <__adddf3+0x240>
 80006bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80006c0:	bf08      	it	eq
 80006c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80006c6:	f150 0000 	adcs.w	r0, r0, #0
 80006ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ce:	ea41 0105 	orr.w	r1, r1, r5
 80006d2:	bd30      	pop	{r4, r5, pc}
 80006d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80006d8:	4140      	adcs	r0, r0
 80006da:	eb41 0101 	adc.w	r1, r1, r1
 80006de:	3c01      	subs	r4, #1
 80006e0:	bf28      	it	cs
 80006e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80006e6:	d2e9      	bcs.n	80006bc <__adddf3+0x10c>
 80006e8:	f091 0f00 	teq	r1, #0
 80006ec:	bf04      	itt	eq
 80006ee:	4601      	moveq	r1, r0
 80006f0:	2000      	moveq	r0, #0
 80006f2:	fab1 f381 	clz	r3, r1
 80006f6:	bf08      	it	eq
 80006f8:	3320      	addeq	r3, #32
 80006fa:	f1a3 030b 	sub.w	r3, r3, #11
 80006fe:	f1b3 0220 	subs.w	r2, r3, #32
 8000702:	da0c      	bge.n	800071e <__adddf3+0x16e>
 8000704:	320c      	adds	r2, #12
 8000706:	dd08      	ble.n	800071a <__adddf3+0x16a>
 8000708:	f102 0c14 	add.w	ip, r2, #20
 800070c:	f1c2 020c 	rsb	r2, r2, #12
 8000710:	fa01 f00c 	lsl.w	r0, r1, ip
 8000714:	fa21 f102 	lsr.w	r1, r1, r2
 8000718:	e00c      	b.n	8000734 <__adddf3+0x184>
 800071a:	f102 0214 	add.w	r2, r2, #20
 800071e:	bfd8      	it	le
 8000720:	f1c2 0c20 	rsble	ip, r2, #32
 8000724:	fa01 f102 	lsl.w	r1, r1, r2
 8000728:	fa20 fc0c 	lsr.w	ip, r0, ip
 800072c:	bfdc      	itt	le
 800072e:	ea41 010c 	orrle.w	r1, r1, ip
 8000732:	4090      	lslle	r0, r2
 8000734:	1ae4      	subs	r4, r4, r3
 8000736:	bfa2      	ittt	ge
 8000738:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800073c:	4329      	orrge	r1, r5
 800073e:	bd30      	popge	{r4, r5, pc}
 8000740:	ea6f 0404 	mvn.w	r4, r4
 8000744:	3c1f      	subs	r4, #31
 8000746:	da1c      	bge.n	8000782 <__adddf3+0x1d2>
 8000748:	340c      	adds	r4, #12
 800074a:	dc0e      	bgt.n	800076a <__adddf3+0x1ba>
 800074c:	f104 0414 	add.w	r4, r4, #20
 8000750:	f1c4 0220 	rsb	r2, r4, #32
 8000754:	fa20 f004 	lsr.w	r0, r0, r4
 8000758:	fa01 f302 	lsl.w	r3, r1, r2
 800075c:	ea40 0003 	orr.w	r0, r0, r3
 8000760:	fa21 f304 	lsr.w	r3, r1, r4
 8000764:	ea45 0103 	orr.w	r1, r5, r3
 8000768:	bd30      	pop	{r4, r5, pc}
 800076a:	f1c4 040c 	rsb	r4, r4, #12
 800076e:	f1c4 0220 	rsb	r2, r4, #32
 8000772:	fa20 f002 	lsr.w	r0, r0, r2
 8000776:	fa01 f304 	lsl.w	r3, r1, r4
 800077a:	ea40 0003 	orr.w	r0, r0, r3
 800077e:	4629      	mov	r1, r5
 8000780:	bd30      	pop	{r4, r5, pc}
 8000782:	fa21 f004 	lsr.w	r0, r1, r4
 8000786:	4629      	mov	r1, r5
 8000788:	bd30      	pop	{r4, r5, pc}
 800078a:	f094 0f00 	teq	r4, #0
 800078e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000792:	bf06      	itte	eq
 8000794:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000798:	3401      	addeq	r4, #1
 800079a:	3d01      	subne	r5, #1
 800079c:	e74e      	b.n	800063c <__adddf3+0x8c>
 800079e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80007a2:	bf18      	it	ne
 80007a4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80007a8:	d029      	beq.n	80007fe <__adddf3+0x24e>
 80007aa:	ea94 0f05 	teq	r4, r5
 80007ae:	bf08      	it	eq
 80007b0:	ea90 0f02 	teqeq	r0, r2
 80007b4:	d005      	beq.n	80007c2 <__adddf3+0x212>
 80007b6:	ea54 0c00 	orrs.w	ip, r4, r0
 80007ba:	bf04      	itt	eq
 80007bc:	4619      	moveq	r1, r3
 80007be:	4610      	moveq	r0, r2
 80007c0:	bd30      	pop	{r4, r5, pc}
 80007c2:	ea91 0f03 	teq	r1, r3
 80007c6:	bf1e      	ittt	ne
 80007c8:	2100      	movne	r1, #0
 80007ca:	2000      	movne	r0, #0
 80007cc:	bd30      	popne	{r4, r5, pc}
 80007ce:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80007d2:	d105      	bne.n	80007e0 <__adddf3+0x230>
 80007d4:	0040      	lsls	r0, r0, #1
 80007d6:	4149      	adcs	r1, r1
 80007d8:	bf28      	it	cs
 80007da:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80007de:	bd30      	pop	{r4, r5, pc}
 80007e0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80007e4:	bf3c      	itt	cc
 80007e6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80007ea:	bd30      	popcc	{r4, r5, pc}
 80007ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80007f4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd30      	pop	{r4, r5, pc}
 80007fe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000802:	bf1a      	itte	ne
 8000804:	4619      	movne	r1, r3
 8000806:	4610      	movne	r0, r2
 8000808:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800080c:	bf1c      	itt	ne
 800080e:	460b      	movne	r3, r1
 8000810:	4602      	movne	r2, r0
 8000812:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000816:	bf06      	itte	eq
 8000818:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800081c:	ea91 0f03 	teqeq	r1, r3
 8000820:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop

08000828 <__aeabi_ui2d>:
 8000828:	f090 0f00 	teq	r0, #0
 800082c:	bf04      	itt	eq
 800082e:	2100      	moveq	r1, #0
 8000830:	4770      	bxeq	lr
 8000832:	b530      	push	{r4, r5, lr}
 8000834:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000838:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800083c:	f04f 0500 	mov.w	r5, #0
 8000840:	f04f 0100 	mov.w	r1, #0
 8000844:	e750      	b.n	80006e8 <__adddf3+0x138>
 8000846:	bf00      	nop

08000848 <__aeabi_i2d>:
 8000848:	f090 0f00 	teq	r0, #0
 800084c:	bf04      	itt	eq
 800084e:	2100      	moveq	r1, #0
 8000850:	4770      	bxeq	lr
 8000852:	b530      	push	{r4, r5, lr}
 8000854:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000858:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800085c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000860:	bf48      	it	mi
 8000862:	4240      	negmi	r0, r0
 8000864:	f04f 0100 	mov.w	r1, #0
 8000868:	e73e      	b.n	80006e8 <__adddf3+0x138>
 800086a:	bf00      	nop

0800086c <__aeabi_f2d>:
 800086c:	0042      	lsls	r2, r0, #1
 800086e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000872:	ea4f 0131 	mov.w	r1, r1, rrx
 8000876:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800087a:	bf1f      	itttt	ne
 800087c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000880:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000884:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000888:	4770      	bxne	lr
 800088a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800088e:	bf08      	it	eq
 8000890:	4770      	bxeq	lr
 8000892:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000896:	bf04      	itt	eq
 8000898:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800089c:	4770      	bxeq	lr
 800089e:	b530      	push	{r4, r5, lr}
 80008a0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80008a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80008a8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80008ac:	e71c      	b.n	80006e8 <__adddf3+0x138>
 80008ae:	bf00      	nop

080008b0 <__aeabi_ul2d>:
 80008b0:	ea50 0201 	orrs.w	r2, r0, r1
 80008b4:	bf08      	it	eq
 80008b6:	4770      	bxeq	lr
 80008b8:	b530      	push	{r4, r5, lr}
 80008ba:	f04f 0500 	mov.w	r5, #0
 80008be:	e00a      	b.n	80008d6 <__aeabi_l2d+0x16>

080008c0 <__aeabi_l2d>:
 80008c0:	ea50 0201 	orrs.w	r2, r0, r1
 80008c4:	bf08      	it	eq
 80008c6:	4770      	bxeq	lr
 80008c8:	b530      	push	{r4, r5, lr}
 80008ca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80008ce:	d502      	bpl.n	80008d6 <__aeabi_l2d+0x16>
 80008d0:	4240      	negs	r0, r0
 80008d2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80008d6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80008da:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80008de:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80008e2:	f43f aed8 	beq.w	8000696 <__adddf3+0xe6>
 80008e6:	f04f 0203 	mov.w	r2, #3
 80008ea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008ee:	bf18      	it	ne
 80008f0:	3203      	addne	r2, #3
 80008f2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80008f6:	bf18      	it	ne
 80008f8:	3203      	addne	r2, #3
 80008fa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80008fe:	f1c2 0320 	rsb	r3, r2, #32
 8000902:	fa00 fc03 	lsl.w	ip, r0, r3
 8000906:	fa20 f002 	lsr.w	r0, r0, r2
 800090a:	fa01 fe03 	lsl.w	lr, r1, r3
 800090e:	ea40 000e 	orr.w	r0, r0, lr
 8000912:	fa21 f102 	lsr.w	r1, r1, r2
 8000916:	4414      	add	r4, r2
 8000918:	e6bd      	b.n	8000696 <__adddf3+0xe6>
 800091a:	bf00      	nop

0800091c <__aeabi_d2f>:
 800091c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000920:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000924:	bf24      	itt	cs
 8000926:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800092a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800092e:	d90d      	bls.n	800094c <__aeabi_d2f+0x30>
 8000930:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000934:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000938:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800093c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000940:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000944:	bf08      	it	eq
 8000946:	f020 0001 	biceq.w	r0, r0, #1
 800094a:	4770      	bx	lr
 800094c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000950:	d121      	bne.n	8000996 <__aeabi_d2f+0x7a>
 8000952:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000956:	bfbc      	itt	lt
 8000958:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800095c:	4770      	bxlt	lr
 800095e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000962:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000966:	f1c2 0218 	rsb	r2, r2, #24
 800096a:	f1c2 0c20 	rsb	ip, r2, #32
 800096e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000972:	fa20 f002 	lsr.w	r0, r0, r2
 8000976:	bf18      	it	ne
 8000978:	f040 0001 	orrne.w	r0, r0, #1
 800097c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000980:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000984:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000988:	ea40 000c 	orr.w	r0, r0, ip
 800098c:	fa23 f302 	lsr.w	r3, r3, r2
 8000990:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000994:	e7cc      	b.n	8000930 <__aeabi_d2f+0x14>
 8000996:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800099a:	d107      	bne.n	80009ac <__aeabi_d2f+0x90>
 800099c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009a0:	bf1e      	ittt	ne
 80009a2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009a6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009aa:	4770      	bxne	lr
 80009ac:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009b0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009b4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009b8:	4770      	bx	lr
 80009ba:	bf00      	nop

080009bc <__aeabi_uldivmod>:
 80009bc:	b953      	cbnz	r3, 80009d4 <__aeabi_uldivmod+0x18>
 80009be:	b94a      	cbnz	r2, 80009d4 <__aeabi_uldivmod+0x18>
 80009c0:	2900      	cmp	r1, #0
 80009c2:	bf08      	it	eq
 80009c4:	2800      	cmpeq	r0, #0
 80009c6:	bf1c      	itt	ne
 80009c8:	f04f 31ff 	movne.w	r1, #4294967295
 80009cc:	f04f 30ff 	movne.w	r0, #4294967295
 80009d0:	f000 b970 	b.w	8000cb4 <__aeabi_idiv0>
 80009d4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009d8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009dc:	f000 f806 	bl	80009ec <__udivmoddi4>
 80009e0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009e8:	b004      	add	sp, #16
 80009ea:	4770      	bx	lr

080009ec <__udivmoddi4>:
 80009ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009f0:	9e08      	ldr	r6, [sp, #32]
 80009f2:	460d      	mov	r5, r1
 80009f4:	4604      	mov	r4, r0
 80009f6:	460f      	mov	r7, r1
 80009f8:	2b00      	cmp	r3, #0
 80009fa:	d14a      	bne.n	8000a92 <__udivmoddi4+0xa6>
 80009fc:	428a      	cmp	r2, r1
 80009fe:	4694      	mov	ip, r2
 8000a00:	d965      	bls.n	8000ace <__udivmoddi4+0xe2>
 8000a02:	fab2 f382 	clz	r3, r2
 8000a06:	b143      	cbz	r3, 8000a1a <__udivmoddi4+0x2e>
 8000a08:	fa02 fc03 	lsl.w	ip, r2, r3
 8000a0c:	f1c3 0220 	rsb	r2, r3, #32
 8000a10:	409f      	lsls	r7, r3
 8000a12:	fa20 f202 	lsr.w	r2, r0, r2
 8000a16:	4317      	orrs	r7, r2
 8000a18:	409c      	lsls	r4, r3
 8000a1a:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000a1e:	fa1f f58c 	uxth.w	r5, ip
 8000a22:	fbb7 f1fe 	udiv	r1, r7, lr
 8000a26:	0c22      	lsrs	r2, r4, #16
 8000a28:	fb0e 7711 	mls	r7, lr, r1, r7
 8000a2c:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000a30:	fb01 f005 	mul.w	r0, r1, r5
 8000a34:	4290      	cmp	r0, r2
 8000a36:	d90a      	bls.n	8000a4e <__udivmoddi4+0x62>
 8000a38:	eb1c 0202 	adds.w	r2, ip, r2
 8000a3c:	f101 37ff 	add.w	r7, r1, #4294967295
 8000a40:	f080 811c 	bcs.w	8000c7c <__udivmoddi4+0x290>
 8000a44:	4290      	cmp	r0, r2
 8000a46:	f240 8119 	bls.w	8000c7c <__udivmoddi4+0x290>
 8000a4a:	3902      	subs	r1, #2
 8000a4c:	4462      	add	r2, ip
 8000a4e:	1a12      	subs	r2, r2, r0
 8000a50:	b2a4      	uxth	r4, r4
 8000a52:	fbb2 f0fe 	udiv	r0, r2, lr
 8000a56:	fb0e 2210 	mls	r2, lr, r0, r2
 8000a5a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000a5e:	fb00 f505 	mul.w	r5, r0, r5
 8000a62:	42a5      	cmp	r5, r4
 8000a64:	d90a      	bls.n	8000a7c <__udivmoddi4+0x90>
 8000a66:	eb1c 0404 	adds.w	r4, ip, r4
 8000a6a:	f100 32ff 	add.w	r2, r0, #4294967295
 8000a6e:	f080 8107 	bcs.w	8000c80 <__udivmoddi4+0x294>
 8000a72:	42a5      	cmp	r5, r4
 8000a74:	f240 8104 	bls.w	8000c80 <__udivmoddi4+0x294>
 8000a78:	4464      	add	r4, ip
 8000a7a:	3802      	subs	r0, #2
 8000a7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000a80:	1b64      	subs	r4, r4, r5
 8000a82:	2100      	movs	r1, #0
 8000a84:	b11e      	cbz	r6, 8000a8e <__udivmoddi4+0xa2>
 8000a86:	40dc      	lsrs	r4, r3
 8000a88:	2300      	movs	r3, #0
 8000a8a:	e9c6 4300 	strd	r4, r3, [r6]
 8000a8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a92:	428b      	cmp	r3, r1
 8000a94:	d908      	bls.n	8000aa8 <__udivmoddi4+0xbc>
 8000a96:	2e00      	cmp	r6, #0
 8000a98:	f000 80ed 	beq.w	8000c76 <__udivmoddi4+0x28a>
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	e9c6 0500 	strd	r0, r5, [r6]
 8000aa2:	4608      	mov	r0, r1
 8000aa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa8:	fab3 f183 	clz	r1, r3
 8000aac:	2900      	cmp	r1, #0
 8000aae:	d149      	bne.n	8000b44 <__udivmoddi4+0x158>
 8000ab0:	42ab      	cmp	r3, r5
 8000ab2:	d302      	bcc.n	8000aba <__udivmoddi4+0xce>
 8000ab4:	4282      	cmp	r2, r0
 8000ab6:	f200 80f8 	bhi.w	8000caa <__udivmoddi4+0x2be>
 8000aba:	1a84      	subs	r4, r0, r2
 8000abc:	eb65 0203 	sbc.w	r2, r5, r3
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	4617      	mov	r7, r2
 8000ac4:	2e00      	cmp	r6, #0
 8000ac6:	d0e2      	beq.n	8000a8e <__udivmoddi4+0xa2>
 8000ac8:	e9c6 4700 	strd	r4, r7, [r6]
 8000acc:	e7df      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000ace:	b902      	cbnz	r2, 8000ad2 <__udivmoddi4+0xe6>
 8000ad0:	deff      	udf	#255	; 0xff
 8000ad2:	fab2 f382 	clz	r3, r2
 8000ad6:	2b00      	cmp	r3, #0
 8000ad8:	f040 8090 	bne.w	8000bfc <__udivmoddi4+0x210>
 8000adc:	1a8a      	subs	r2, r1, r2
 8000ade:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000ae2:	fa1f fe8c 	uxth.w	lr, ip
 8000ae6:	2101      	movs	r1, #1
 8000ae8:	fbb2 f5f7 	udiv	r5, r2, r7
 8000aec:	fb07 2015 	mls	r0, r7, r5, r2
 8000af0:	0c22      	lsrs	r2, r4, #16
 8000af2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000af6:	fb0e f005 	mul.w	r0, lr, r5
 8000afa:	4290      	cmp	r0, r2
 8000afc:	d908      	bls.n	8000b10 <__udivmoddi4+0x124>
 8000afe:	eb1c 0202 	adds.w	r2, ip, r2
 8000b02:	f105 38ff 	add.w	r8, r5, #4294967295
 8000b06:	d202      	bcs.n	8000b0e <__udivmoddi4+0x122>
 8000b08:	4290      	cmp	r0, r2
 8000b0a:	f200 80cb 	bhi.w	8000ca4 <__udivmoddi4+0x2b8>
 8000b0e:	4645      	mov	r5, r8
 8000b10:	1a12      	subs	r2, r2, r0
 8000b12:	b2a4      	uxth	r4, r4
 8000b14:	fbb2 f0f7 	udiv	r0, r2, r7
 8000b18:	fb07 2210 	mls	r2, r7, r0, r2
 8000b1c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000b20:	fb0e fe00 	mul.w	lr, lr, r0
 8000b24:	45a6      	cmp	lr, r4
 8000b26:	d908      	bls.n	8000b3a <__udivmoddi4+0x14e>
 8000b28:	eb1c 0404 	adds.w	r4, ip, r4
 8000b2c:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b30:	d202      	bcs.n	8000b38 <__udivmoddi4+0x14c>
 8000b32:	45a6      	cmp	lr, r4
 8000b34:	f200 80bb 	bhi.w	8000cae <__udivmoddi4+0x2c2>
 8000b38:	4610      	mov	r0, r2
 8000b3a:	eba4 040e 	sub.w	r4, r4, lr
 8000b3e:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000b42:	e79f      	b.n	8000a84 <__udivmoddi4+0x98>
 8000b44:	f1c1 0720 	rsb	r7, r1, #32
 8000b48:	408b      	lsls	r3, r1
 8000b4a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b52:	fa05 f401 	lsl.w	r4, r5, r1
 8000b56:	fa20 f307 	lsr.w	r3, r0, r7
 8000b5a:	40fd      	lsrs	r5, r7
 8000b5c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b60:	4323      	orrs	r3, r4
 8000b62:	fbb5 f8f9 	udiv	r8, r5, r9
 8000b66:	fa1f fe8c 	uxth.w	lr, ip
 8000b6a:	fb09 5518 	mls	r5, r9, r8, r5
 8000b6e:	0c1c      	lsrs	r4, r3, #16
 8000b70:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000b74:	fb08 f50e 	mul.w	r5, r8, lr
 8000b78:	42a5      	cmp	r5, r4
 8000b7a:	fa02 f201 	lsl.w	r2, r2, r1
 8000b7e:	fa00 f001 	lsl.w	r0, r0, r1
 8000b82:	d90b      	bls.n	8000b9c <__udivmoddi4+0x1b0>
 8000b84:	eb1c 0404 	adds.w	r4, ip, r4
 8000b88:	f108 3aff 	add.w	sl, r8, #4294967295
 8000b8c:	f080 8088 	bcs.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b90:	42a5      	cmp	r5, r4
 8000b92:	f240 8085 	bls.w	8000ca0 <__udivmoddi4+0x2b4>
 8000b96:	f1a8 0802 	sub.w	r8, r8, #2
 8000b9a:	4464      	add	r4, ip
 8000b9c:	1b64      	subs	r4, r4, r5
 8000b9e:	b29d      	uxth	r5, r3
 8000ba0:	fbb4 f3f9 	udiv	r3, r4, r9
 8000ba4:	fb09 4413 	mls	r4, r9, r3, r4
 8000ba8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000bac:	fb03 fe0e 	mul.w	lr, r3, lr
 8000bb0:	45a6      	cmp	lr, r4
 8000bb2:	d908      	bls.n	8000bc6 <__udivmoddi4+0x1da>
 8000bb4:	eb1c 0404 	adds.w	r4, ip, r4
 8000bb8:	f103 35ff 	add.w	r5, r3, #4294967295
 8000bbc:	d26c      	bcs.n	8000c98 <__udivmoddi4+0x2ac>
 8000bbe:	45a6      	cmp	lr, r4
 8000bc0:	d96a      	bls.n	8000c98 <__udivmoddi4+0x2ac>
 8000bc2:	3b02      	subs	r3, #2
 8000bc4:	4464      	add	r4, ip
 8000bc6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bca:	fba3 9502 	umull	r9, r5, r3, r2
 8000bce:	eba4 040e 	sub.w	r4, r4, lr
 8000bd2:	42ac      	cmp	r4, r5
 8000bd4:	46c8      	mov	r8, r9
 8000bd6:	46ae      	mov	lr, r5
 8000bd8:	d356      	bcc.n	8000c88 <__udivmoddi4+0x29c>
 8000bda:	d053      	beq.n	8000c84 <__udivmoddi4+0x298>
 8000bdc:	b156      	cbz	r6, 8000bf4 <__udivmoddi4+0x208>
 8000bde:	ebb0 0208 	subs.w	r2, r0, r8
 8000be2:	eb64 040e 	sbc.w	r4, r4, lr
 8000be6:	fa04 f707 	lsl.w	r7, r4, r7
 8000bea:	40ca      	lsrs	r2, r1
 8000bec:	40cc      	lsrs	r4, r1
 8000bee:	4317      	orrs	r7, r2
 8000bf0:	e9c6 7400 	strd	r7, r4, [r6]
 8000bf4:	4618      	mov	r0, r3
 8000bf6:	2100      	movs	r1, #0
 8000bf8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bfc:	f1c3 0120 	rsb	r1, r3, #32
 8000c00:	fa02 fc03 	lsl.w	ip, r2, r3
 8000c04:	fa20 f201 	lsr.w	r2, r0, r1
 8000c08:	fa25 f101 	lsr.w	r1, r5, r1
 8000c0c:	409d      	lsls	r5, r3
 8000c0e:	432a      	orrs	r2, r5
 8000c10:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c14:	fa1f fe8c 	uxth.w	lr, ip
 8000c18:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c1c:	fb07 1510 	mls	r5, r7, r0, r1
 8000c20:	0c11      	lsrs	r1, r2, #16
 8000c22:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000c26:	fb00 f50e 	mul.w	r5, r0, lr
 8000c2a:	428d      	cmp	r5, r1
 8000c2c:	fa04 f403 	lsl.w	r4, r4, r3
 8000c30:	d908      	bls.n	8000c44 <__udivmoddi4+0x258>
 8000c32:	eb1c 0101 	adds.w	r1, ip, r1
 8000c36:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c3a:	d22f      	bcs.n	8000c9c <__udivmoddi4+0x2b0>
 8000c3c:	428d      	cmp	r5, r1
 8000c3e:	d92d      	bls.n	8000c9c <__udivmoddi4+0x2b0>
 8000c40:	3802      	subs	r0, #2
 8000c42:	4461      	add	r1, ip
 8000c44:	1b49      	subs	r1, r1, r5
 8000c46:	b292      	uxth	r2, r2
 8000c48:	fbb1 f5f7 	udiv	r5, r1, r7
 8000c4c:	fb07 1115 	mls	r1, r7, r5, r1
 8000c50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c54:	fb05 f10e 	mul.w	r1, r5, lr
 8000c58:	4291      	cmp	r1, r2
 8000c5a:	d908      	bls.n	8000c6e <__udivmoddi4+0x282>
 8000c5c:	eb1c 0202 	adds.w	r2, ip, r2
 8000c60:	f105 38ff 	add.w	r8, r5, #4294967295
 8000c64:	d216      	bcs.n	8000c94 <__udivmoddi4+0x2a8>
 8000c66:	4291      	cmp	r1, r2
 8000c68:	d914      	bls.n	8000c94 <__udivmoddi4+0x2a8>
 8000c6a:	3d02      	subs	r5, #2
 8000c6c:	4462      	add	r2, ip
 8000c6e:	1a52      	subs	r2, r2, r1
 8000c70:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000c74:	e738      	b.n	8000ae8 <__udivmoddi4+0xfc>
 8000c76:	4631      	mov	r1, r6
 8000c78:	4630      	mov	r0, r6
 8000c7a:	e708      	b.n	8000a8e <__udivmoddi4+0xa2>
 8000c7c:	4639      	mov	r1, r7
 8000c7e:	e6e6      	b.n	8000a4e <__udivmoddi4+0x62>
 8000c80:	4610      	mov	r0, r2
 8000c82:	e6fb      	b.n	8000a7c <__udivmoddi4+0x90>
 8000c84:	4548      	cmp	r0, r9
 8000c86:	d2a9      	bcs.n	8000bdc <__udivmoddi4+0x1f0>
 8000c88:	ebb9 0802 	subs.w	r8, r9, r2
 8000c8c:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000c90:	3b01      	subs	r3, #1
 8000c92:	e7a3      	b.n	8000bdc <__udivmoddi4+0x1f0>
 8000c94:	4645      	mov	r5, r8
 8000c96:	e7ea      	b.n	8000c6e <__udivmoddi4+0x282>
 8000c98:	462b      	mov	r3, r5
 8000c9a:	e794      	b.n	8000bc6 <__udivmoddi4+0x1da>
 8000c9c:	4640      	mov	r0, r8
 8000c9e:	e7d1      	b.n	8000c44 <__udivmoddi4+0x258>
 8000ca0:	46d0      	mov	r8, sl
 8000ca2:	e77b      	b.n	8000b9c <__udivmoddi4+0x1b0>
 8000ca4:	3d02      	subs	r5, #2
 8000ca6:	4462      	add	r2, ip
 8000ca8:	e732      	b.n	8000b10 <__udivmoddi4+0x124>
 8000caa:	4608      	mov	r0, r1
 8000cac:	e70a      	b.n	8000ac4 <__udivmoddi4+0xd8>
 8000cae:	4464      	add	r4, ip
 8000cb0:	3802      	subs	r0, #2
 8000cb2:	e742      	b.n	8000b3a <__udivmoddi4+0x14e>

08000cb4 <__aeabi_idiv0>:
 8000cb4:	4770      	bx	lr
 8000cb6:	bf00      	nop

08000cb8 <Reset_Handler>:
    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 

  ldr   sp, =_estack       /* set stack pointer */
 8000cb8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000cf0 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cbc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cbe:	e003      	b.n	8000cc8 <LoopCopyDataInit>

08000cc0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cc0:	4b0c      	ldr	r3, [pc, #48]	; (8000cf4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cc2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cc4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cc6:	3104      	adds	r1, #4

08000cc8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000cc8:	480b      	ldr	r0, [pc, #44]	; (8000cf8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000cca:	4b0c      	ldr	r3, [pc, #48]	; (8000cfc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ccc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000cce:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000cd0:	d3f6      	bcc.n	8000cc0 <CopyDataInit>
  ldr  r2, =_sbss
 8000cd2:	4a0b      	ldr	r2, [pc, #44]	; (8000d00 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cd4:	e002      	b.n	8000cdc <LoopFillZerobss>

08000cd6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cd6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cd8:	f842 3b04 	str.w	r3, [r2], #4

08000cdc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cdc:	4b09      	ldr	r3, [pc, #36]	; (8000d04 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cde:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000ce0:	d3f9      	bcc.n	8000cd6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000ce2:	f00a fc33 	bl	800b54c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ce6:	f02d f92f 	bl	802df48 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000cea:	f000 fd03 	bl	80016f4 <main>
  bx  lr    
 8000cee:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000cf0:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000cf4:	080cf3c8 	.word	0x080cf3c8
  ldr  r0, =_sdata
 8000cf8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000cfc:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000d00:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000d04:	20014474 	.word	0x20014474

08000d08 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d08:	e7fe      	b.n	8000d08 <ADC_IRQHandler>
	...

08000d0c <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 8000d0c:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 8000d10:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 8000d14:	4293      	cmp	r3, r2
 8000d16:	d905      	bls.n	8000d24 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 8000d18:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 8000d1c:	4291      	cmp	r1, r2
 8000d1e:	d803      	bhi.n	8000d28 <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 8000d20:	2001      	movs	r0, #1
 8000d22:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 8000d24:	2000      	movs	r0, #0
 8000d26:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 8000d28:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 8000d2c:	4291      	cmp	r1, r2
 8000d2e:	d960      	bls.n	8000df2 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 8000d30:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 8000d34:	4293      	cmp	r3, r2
 8000d36:	d95e      	bls.n	8000df6 <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 8000d38:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 8000d3c:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 8000d40:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8000d44:	4291      	cmp	r1, r2
 8000d46:	d95a      	bls.n	8000dfe <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 8000d48:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 8000d4c:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 8000d50:	4291      	cmp	r1, r2
 8000d52:	d952      	bls.n	8000dfa <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 8000d54:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 8000d58:	4291      	cmp	r1, r2
 8000d5a:	d952      	bls.n	8000e02 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 8000d5c:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 8000d60:	4291      	cmp	r1, r2
 8000d62:	d950      	bls.n	8000e06 <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 8000d64:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 8000d68:	4291      	cmp	r1, r2
 8000d6a:	d94e      	bls.n	8000e0a <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000d6c:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000d70:	4291      	cmp	r1, r2
 8000d72:	d94c      	bls.n	8000e0e <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000d74:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 8000d78:	4291      	cmp	r1, r2
 8000d7a:	d94a      	bls.n	8000e12 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000d7c:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000d80:	4291      	cmp	r1, r2
 8000d82:	d948      	bls.n	8000e16 <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000d84:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 8000d88:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000d8c:	4288      	cmp	r0, r1
 8000d8e:	d944      	bls.n	8000e1a <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000d90:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000d94:	458c      	cmp	ip, r1
 8000d96:	d942      	bls.n	8000e1e <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 8000d98:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000d9c:	458c      	cmp	ip, r1
 8000d9e:	d940      	bls.n	8000e22 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000da0:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000da4:	4288      	cmp	r0, r1
 8000da6:	d93e      	bls.n	8000e26 <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 8000da8:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000dac:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000db0:	4288      	cmp	r0, r1
 8000db2:	d93a      	bls.n	8000e2a <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000db4:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 8000db8:	4291      	cmp	r1, r2
 8000dba:	d938      	bls.n	8000e2e <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000dbc:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000dc0:	4291      	cmp	r1, r2
 8000dc2:	d938      	bls.n	8000e36 <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000dc4:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 8000dc8:	4291      	cmp	r1, r2
 8000dca:	d932      	bls.n	8000e32 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000dcc:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000dd0:	4291      	cmp	r1, r2
 8000dd2:	d936      	bls.n	8000e42 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000dd4:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 8000dd8:	4291      	cmp	r1, r2
 8000dda:	d930      	bls.n	8000e3e <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000ddc:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000de0:	4291      	cmp	r1, r2
 8000de2:	d92a      	bls.n	8000e3a <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000de4:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 8000de8:	4293      	cmp	r3, r2
 8000dea:	bf94      	ite	ls
 8000dec:	2017      	movls	r0, #23
 8000dee:	2000      	movhi	r0, #0
 8000df0:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000df2:	2002      	movs	r0, #2
 8000df4:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 8000df6:	2003      	movs	r0, #3
 8000df8:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 8000dfa:	2005      	movs	r0, #5
 8000dfc:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000dfe:	2004      	movs	r0, #4
 8000e00:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000e02:	2006      	movs	r0, #6
 8000e04:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 8000e06:	2007      	movs	r0, #7
 8000e08:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 8000e0a:	2008      	movs	r0, #8
 8000e0c:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 8000e0e:	2009      	movs	r0, #9
 8000e10:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 8000e12:	200a      	movs	r0, #10
 8000e14:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 8000e16:	200b      	movs	r0, #11
 8000e18:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 8000e1a:	200c      	movs	r0, #12
 8000e1c:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 8000e1e:	200d      	movs	r0, #13
 8000e20:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 8000e22:	200e      	movs	r0, #14
 8000e24:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 8000e26:	200f      	movs	r0, #15
 8000e28:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 8000e2a:	2010      	movs	r0, #16
 8000e2c:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 8000e2e:	2011      	movs	r0, #17
 8000e30:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 8000e32:	2013      	movs	r0, #19
 8000e34:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 8000e36:	2012      	movs	r0, #18
 8000e38:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 8000e3a:	2016      	movs	r0, #22
  }
  return sector;
}
 8000e3c:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 8000e3e:	2015      	movs	r0, #21
 8000e40:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 8000e42:	2014      	movs	r0, #20
 8000e44:	4770      	bx	lr
 8000e46:	bf00      	nop

08000e48 <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 8000e48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e4a:	4607      	mov	r7, r0
 8000e4c:	b083      	sub	sp, #12
 8000e4e:	4616      	mov	r6, r2
 8000e50:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 8000e52:	f00a fd39 	bl	800b8c8 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 8000e56:	4638      	mov	r0, r7
 8000e58:	f7ff ff58 	bl	8000d0c <GetSector>
 8000e5c:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 8000e5e:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 8000e62:	f7ff ff53 	bl	8000d0c <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e66:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e68:	4813      	ldr	r0, [pc, #76]	; (8000eb8 <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 8000e6a:	1b1b      	subs	r3, r3, r4
 8000e6c:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000e70:	2300      	movs	r3, #0
 8000e72:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e74:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 8000e76:	2302      	movs	r3, #2
 8000e78:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000e7a:	f00a fda3 	bl	800b9c4 <HAL_FLASHEx_Erase>
 8000e7e:	b988      	cbnz	r0, 8000ea4 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000e80:	b1a6      	cbz	r6, 8000eac <Flash_Write_Data+0x64>
 8000e82:	1b7f      	subs	r7, r7, r5
 8000e84:	4604      	mov	r4, r0
 8000e86:	3d04      	subs	r5, #4
 8000e88:	3704      	adds	r7, #4
 8000e8a:	e001      	b.n	8000e90 <Flash_Write_Data+0x48>
 8000e8c:	42a6      	cmp	r6, r4
 8000e8e:	d00d      	beq.n	8000eac <Flash_Write_Data+0x64>
 8000e90:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e92:	2300      	movs	r3, #0
 8000e94:	f855 2f04 	ldr.w	r2, [r5, #4]!
 8000e98:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 8000e9a:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000e9c:	f00a fc72 	bl	800b784 <HAL_FLASH_Program>
 8000ea0:	2800      	cmp	r0, #0
 8000ea2:	d0f3      	beq.n	8000e8c <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000ea4:	f00a fd2e 	bl	800b904 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 8000ea8:	b003      	add	sp, #12
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000eac:	f00a fd20 	bl	800b8f0 <HAL_FLASH_Lock>
	   return 0;
 8000eb0:	2000      	movs	r0, #0
}
 8000eb2:	b003      	add	sp, #12
 8000eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb6:	bf00      	nop
 8000eb8:	2000018c 	.word	0x2000018c

08000ebc <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000ebc:	460b      	mov	r3, r1
 8000ebe:	3201      	adds	r2, #1
 8000ec0:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000ec4:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 8000ec6:	581a      	ldr	r2, [r3, r0]
 8000ec8:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000ecc:	428b      	cmp	r3, r1
 8000ece:	d1fa      	bne.n	8000ec6 <Flash_Read_Data+0xa>
	}
}
 8000ed0:	4770      	bx	lr
 8000ed2:	bf00      	nop

08000ed4 <calculate_freq_and_signalstrength>:
 *are calculated.
 * @param samples Pointer to the array of input samples.
 * @return FFT structure containing the calculated main frequency and signal
 *strength.
 **/
FFT calculate_freq_and_signalstrength(float32_t input_samples[]) {
 8000ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed8:	ed2d 8b02 	vpush	{d8}
 8000edc:	b088      	sub	sp, #32
 8000ede:	af00      	add	r7, sp, #0
 8000ee0:	4605      	mov	r5, r0
 8000ee2:	460e      	mov	r6, r1
    // Perform FFT using CMSIS-DSP library
    const uint8_t fft_size = MEAS_get_num_of_samples();
 8000ee4:	f001 f968 	bl	80021b8 <MEAS_get_num_of_samples>
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
 8000ee8:	4604      	mov	r4, r0
 8000eea:	2800      	cmp	r0, #0
 8000eec:	f000 8089 	beq.w	8001002 <calculate_freq_and_signalstrength+0x12e>
 8000ef0:	2204      	movs	r2, #4
        input_samples[i] -= 2047.5;
 8000ef2:	ed9f 7a45 	vldr	s14, [pc, #276]	; 8001008 <calculate_freq_and_signalstrength+0x134>
 8000ef6:	4633      	mov	r3, r6
 8000ef8:	fb12 6200 	smlabb	r2, r2, r0, r6
 8000efc:	edd3 7a00 	vldr	s15, [r3]
 8000f00:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8000f04:	ece3 7a01 	vstmia	r3!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8000f08:	429a      	cmp	r2, r3
 8000f0a:	d1f7      	bne.n	8000efc <calculate_freq_and_signalstrength+0x28>
    }
    // Create an array for the FFT output
    float32_t fft_complex_output[2 * fft_size];
 8000f0c:	b223      	sxth	r3, r4
 8000f0e:	00db      	lsls	r3, r3, #3
 8000f10:	ebad 0d03 	sub.w	sp, sp, r3
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
    // Create an instance of the FFT structure
    FFT fft;
    // Calculate the main frequency
    float main_frequency =
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f14:	ee07 4a90 	vmov	s15, r4
    float32_t fft_complex_output[2 * fft_size];
 8000f18:	46e8      	mov	r8, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f1a:	b2a1      	uxth	r1, r4
 8000f1c:	f107 0008 	add.w	r0, r7, #8
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f20:	eef8 8ae7 	vcvt.f32.s32	s17, s15
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8000f24:	f02a fd64 	bl	802b9f0 <arm_rfft_fast_init_f32>
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4631      	mov	r1, r6
 8000f2c:	f107 0008 	add.w	r0, r7, #8
 8000f30:	4642      	mov	r2, r8
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f32:	f3c4 0647 	ubfx	r6, r4, #1, #8
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8000f36:	f02a fddf 	bl	802baf8 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000f3a:	4632      	mov	r2, r6
 8000f3c:	4641      	mov	r1, r8
 8000f3e:	4640      	mov	r0, r8
 8000f40:	f02b fa48 	bl	802c3d4 <arm_cmplx_mag_f32>
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000f44:	463b      	mov	r3, r7
 8000f46:	1d3a      	adds	r2, r7, #4
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4640      	mov	r0, r8
 8000f4c:	f02a fce8 	bl	802b920 <arm_max_f32>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f50:	edd7 7a00 	vldr	s15, [r7]
 8000f54:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000f58:	f001 f930 	bl	80021bc <MEAS_get_samp_freq>
 8000f5c:	ee07 0a90 	vmov	s15, r0
 8000f60:	eef8 7a67 	vcvt.f32.u32	s15, s15
    uint8_t given_frequency = 0;
    // Check if the main frequency is in the range of 45-55 Hz
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f64:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800100c <calculate_freq_and_signalstrength+0x138>
        (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000f68:	ee67 7a88 	vmul.f32	s15, s15, s16
    float main_frequency =
 8000f6c:	ee87 8aa8 	vdiv.f32	s16, s15, s17
    if (main_frequency <= 55 && main_frequency >= 45) {
 8000f70:	eeb4 8ac7 	vcmpe.f32	s16, s14
 8000f74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f78:	d817      	bhi.n	8000faa <calculate_freq_and_signalstrength+0xd6>
 8000f7a:	eddf 7a25 	vldr	s15, [pc, #148]	; 8001010 <calculate_freq_and_signalstrength+0x13c>
 8000f7e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000f86:	db28      	blt.n	8000fda <calculate_freq_and_signalstrength+0x106>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
        // If yes, round the given frequency to 60 Hz
        given_frequency = 60;
    } else given_frequency = 0;
    // calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000f88:	f001 f918 	bl	80021bc <MEAS_get_samp_freq>
 8000f8c:	2332      	movs	r3, #50	; 0x32
 8000f8e:	fb04 f303 	mul.w	r3, r4, r3
 8000f92:	fbb3 f0f0 	udiv	r0, r3, r0
    // set the signal strength to 0
    float signal_strength = 0;
    // check if the given frequency is 50 or 60 Hz
    if (given_frequency != 0) {
        // calculate the signal strength
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000f96:	eb08 0080 	add.w	r0, r8, r0, lsl #2
 8000f9a:	edd0 7a00 	vldr	s15, [r0]
 8000f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
        fft.error = CALC_ERROR_NONE;
 8000fa2:	2301      	movs	r3, #1
        signal_strength = 2 * fft_complex_output[index] / fft_size;
 8000fa4:	ee87 7aa8 	vdiv.f32	s14, s15, s17
        fft.error = CALC_ERROR_NONE;
 8000fa8:	e00b      	b.n	8000fc2 <calculate_freq_and_signalstrength+0xee>
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000faa:	eddf 7a1a 	vldr	s15, [pc, #104]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fae:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fb6:	d91c      	bls.n	8000ff2 <calculate_freq_and_signalstrength+0x11e>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000fb8:	f001 f900 	bl	80021bc <MEAS_get_samp_freq>
    float signal_strength = 0;
 8000fbc:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001018 <calculate_freq_and_signalstrength+0x144>
    } else fft.error = CALC_ERROR_FREQUENCY;  // if the given frequency is not 50 or 60 Hz
 8000fc0:	2300      	movs	r3, #0
    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
}
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	3720      	adds	r7, #32
    return fft;
 8000fc6:	ed85 8a00 	vstr	s16, [r5]
 8000fca:	ed85 7a01 	vstr	s14, [r5, #4]
 8000fce:	722b      	strb	r3, [r5, #8]
}
 8000fd0:	46bd      	mov	sp, r7
 8000fd2:	ecbd 8b02 	vpop	{d8}
 8000fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    } else if (main_frequency <= 65 && main_frequency >= 55) {
 8000fda:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8001014 <calculate_freq_and_signalstrength+0x140>
 8000fde:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8000fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000fe6:	d8e7      	bhi.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
 8000fe8:	eeb4 8a47 	vcmp.f32	s16, s14
 8000fec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000ff0:	d1e2      	bne.n	8000fb8 <calculate_freq_and_signalstrength+0xe4>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000ff2:	f001 f8e3 	bl	80021bc <MEAS_get_samp_freq>
 8000ff6:	ebc4 1304 	rsb	r3, r4, r4, lsl #4
 8000ffa:	009b      	lsls	r3, r3, #2
 8000ffc:	fbb3 f0f0 	udiv	r0, r3, r0
    if (given_frequency != 0) {
 8001000:	e7c9      	b.n	8000f96 <calculate_freq_and_signalstrength+0xc2>
    for (uint32_t i = 0; i < fft_size; i++) {
 8001002:	4603      	mov	r3, r0
 8001004:	e784      	b.n	8000f10 <calculate_freq_and_signalstrength+0x3c>
 8001006:	bf00      	nop
 8001008:	44fff000 	.word	0x44fff000
 800100c:	425c0000 	.word	0x425c0000
 8001010:	42340000 	.word	0x42340000
 8001014:	42820000 	.word	0x42820000
 8001018:	00000000 	.word	0x00000000

0800101c <accurate_FFT>:
 * to obtain accurate results and returns the calculated values in an instance of the
 * ACCU_FFT structure.
 *
 * @return The calculated signal strength and main frequency for each channel.
 */
ACCU_FFT accurate_FFT(void){
 800101c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001020:	ed2d 8b04 	vpush	{d8-d9}
 8001024:	b0a7      	sub	sp, #156	; 0x9c
 8001026:	af00      	add	r7, sp, #0
 8001028:	6078      	str	r0, [r7, #4]
    float32_t accu_strength_HSR[ACCURATE_MEASUREMENT_LOOPS];
    float32_t accu_strength_HSL[ACCURATE_MEASUREMENT_LOOPS];

    uint32_t* samples;

    uint8_t buffer_size = MEAS_get_num_of_samples();
 800102a:	f001 f8c5 	bl	80021b8 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 800102e:	b203      	sxth	r3, r0
 8001030:	009b      	lsls	r3, r3, #2
 8001032:	3307      	adds	r3, #7
 8001034:	f023 0307 	bic.w	r3, r3, #7
 8001038:	ebad 0d03 	sub.w	sp, sp, r3
 800103c:	466a      	mov	r2, sp
    float32_t samples_PL[buffer_size];
 800103e:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PR[buffer_size];
 8001042:	ee08 2a10 	vmov	s16, r2
    float32_t samples_PL[buffer_size];
 8001046:	466a      	mov	r2, sp
    float32_t samples_HSR[buffer_size];
 8001048:	ebad 0d03 	sub.w	sp, sp, r3
    float32_t samples_PL[buffer_size];
 800104c:	ee08 2a90 	vmov	s17, r2
    float32_t samples_HSR[buffer_size];
 8001050:	466a      	mov	r2, sp
    float32_t samples_HSL[buffer_size];
 8001052:	ebad 0d03 	sub.w	sp, sp, r3
 8001056:	466b      	mov	r3, sp
 8001058:	ee09 3a90 	vmov	s19, r3
 800105c:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001060:	613b      	str	r3, [r7, #16]
 8001062:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001066:	617b      	str	r3, [r7, #20]
 8001068:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800106c:	60fb      	str	r3, [r7, #12]
    float32_t samples_HSR[buffer_size];
 800106e:	ee09 2a10 	vmov	s18, r2
 8001072:	f107 0364 	add.w	r3, r7, #100	; 0x64
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001076:	4682      	mov	sl, r0

    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001078:	60bb      	str	r3, [r7, #8]
        // Start the measurement
        samples = MEAS_start_measure();
 800107a:	f001 f86f 	bl	800215c <MEAS_start_measure>
 800107e:	4605      	mov	r5, r0

        // Convert the samples to the specific channel
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001080:	f1ba 0f00 	cmp.w	sl, #0
 8001084:	d03e      	beq.n	8001104 <accurate_FFT+0xe8>
 8001086:	ee18 9a10 	vmov	r9, s16
 800108a:	ee18 8a90 	vmov	r8, s17
 800108e:	ee19 6a10 	vmov	r6, s18
 8001092:	ee19 ba90 	vmov	fp, s19
 8001096:	2400      	movs	r4, #0
            samples_PR[j] = (float32_t)samples[j * MEAS_get_num_of_chan()];
 8001098:	f001 f88c 	bl	80021b4 <MEAS_get_num_of_chan>
 800109c:	fb04 f000 	mul.w	r0, r4, r0
 80010a0:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010a4:	edd3 7a00 	vldr	s15, [r3]
 80010a8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010ac:	ece9 7a01 	vstmia	r9!, {s15}
            samples_PL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 1];
 80010b0:	f001 f880 	bl	80021b4 <MEAS_get_num_of_chan>
 80010b4:	fb04 f000 	mul.w	r0, r4, r0
 80010b8:	3001      	adds	r0, #1
 80010ba:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010be:	edd3 7a00 	vldr	s15, [r3]
 80010c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010c6:	ece8 7a01 	vstmia	r8!, {s15}
            samples_HSR[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 2];
 80010ca:	f001 f873 	bl	80021b4 <MEAS_get_num_of_chan>
 80010ce:	fb04 f000 	mul.w	r0, r4, r0
 80010d2:	3002      	adds	r0, #2
 80010d4:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010d8:	edd3 7a00 	vldr	s15, [r3]
 80010dc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e0:	ece6 7a01 	vstmia	r6!, {s15}
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010e4:	f001 f866 	bl	80021b4 <MEAS_get_num_of_chan>
 80010e8:	fb04 f000 	mul.w	r0, r4, r0
 80010ec:	3003      	adds	r0, #3
 80010ee:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 80010f2:	edd3 7a00 	vldr	s15, [r3]
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010f6:	3401      	adds	r4, #1
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
        for (uint32_t j = 0; j < buffer_size; j++) {
 80010fc:	45a2      	cmp	sl, r4
            samples_HSL[j] = (float32_t)samples[j * MEAS_get_num_of_chan() + 3];
 80010fe:	eceb 7a01 	vstmia	fp!, {s15}
        for (uint32_t j = 0; j < buffer_size; j++) {
 8001102:	d1c9      	bne.n	8001098 <accurate_FFT+0x7c>
        }
        // Calculate the Signal Strength and the main frequency for each channel using FFT

        fft = calculate_freq_and_signalstrength(samples_PR);
 8001104:	ee18 1a10 	vmov	r1, s16
 8001108:	f107 001c 	add.w	r0, r7, #28
 800110c:	f7ff fee2 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PR[i] = fft.signal_strength;
 8001110:	697c      	ldr	r4, [r7, #20]
 8001112:	6a3b      	ldr	r3, [r7, #32]
 8001114:	f844 3b04 	str.w	r3, [r4], #4
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001118:	ee18 1a90 	vmov	r1, s17
 800111c:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PR[i] = fft.signal_strength;
 8001120:	617c      	str	r4, [r7, #20]
        fft = calculate_freq_and_signalstrength(samples_PL);
 8001122:	f7ff fed7 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_PL[i] = fft.signal_strength;
 8001126:	693a      	ldr	r2, [r7, #16]
 8001128:	6a3b      	ldr	r3, [r7, #32]
 800112a:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSR);
 800112e:	ee19 1a10 	vmov	r1, s18
 8001132:	f107 001c 	add.w	r0, r7, #28
        accu_strength_PL[i] = fft.signal_strength;
 8001136:	613a      	str	r2, [r7, #16]
        fft = calculate_freq_and_signalstrength(samples_HSR);
 8001138:	f7ff fecc 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSR[i] = fft.signal_strength;
 800113c:	68fa      	ldr	r2, [r7, #12]
 800113e:	6a3b      	ldr	r3, [r7, #32]
 8001140:	f842 3b04 	str.w	r3, [r2], #4
        fft = calculate_freq_and_signalstrength(samples_HSL);
 8001144:	ee19 1a90 	vmov	r1, s19
 8001148:	f107 001c 	add.w	r0, r7, #28
        accu_strength_HSR[i] = fft.signal_strength;
 800114c:	60fa      	str	r2, [r7, #12]
        fft = calculate_freq_and_signalstrength(samples_HSL);
 800114e:	f7ff fec1 	bl	8000ed4 <calculate_freq_and_signalstrength>
        accu_strength_HSL[i] = fft.signal_strength;
 8001152:	68ba      	ldr	r2, [r7, #8]
 8001154:	6a3b      	ldr	r3, [r7, #32]
 8001156:	f842 3b04 	str.w	r3, [r2], #4
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 800115a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800115e:	429c      	cmp	r4, r3
        accu_strength_HSL[i] = fft.signal_strength;
 8001160:	60ba      	str	r2, [r7, #8]
    for(uint8_t i = 0; i < ACCURATE_MEASUREMENT_LOOPS; i++){
 8001162:	d18a      	bne.n	800107a <accurate_FFT+0x5e>
        //current[i] = single_meas.current;
    }
    arm_mean_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr);
 8001164:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8001168:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800116c:	2105      	movs	r1, #5
 800116e:	f02a fba3 	bl	802b8b8 <arm_mean_f32>
    //arm_std_f32(accu_strength_PR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pr_std_dev);
    arm_mean_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl);
 8001172:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001176:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 800117a:	2105      	movs	r1, #5
 800117c:	f02a fb9c 	bl	802b8b8 <arm_mean_f32>
    //arm_std_f32(accu_strength_PL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_pl_std_dev);
    arm_mean_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr);
 8001180:	f107 0288 	add.w	r2, r7, #136	; 0x88
 8001184:	f107 0050 	add.w	r0, r7, #80	; 0x50
 8001188:	2105      	movs	r1, #5
 800118a:	f02a fb95 	bl	802b8b8 <arm_mean_f32>
    //arm_std_f32(accu_strength_HSR, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsr_std_dev);
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
    //arm_std_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl_std_dev);

    return accu_fft;
 800118e:	f107 0478 	add.w	r4, r7, #120	; 0x78
    arm_mean_f32(accu_strength_HSL, ACCURATE_MEASUREMENT_LOOPS, &accu_fft.signal_strength_hsl);
 8001192:	f107 0290 	add.w	r2, r7, #144	; 0x90
 8001196:	f107 0064 	add.w	r0, r7, #100	; 0x64
 800119a:	2105      	movs	r1, #5
 800119c:	f02a fb8c 	bl	802b8b8 <arm_mean_f32>
    return accu_fft;
 80011a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80011a2:	687e      	ldr	r6, [r7, #4]
 80011a4:	4635      	mov	r5, r6
 80011a6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80011a8:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
}
 80011ac:	379c      	adds	r7, #156	; 0x9c
    return accu_fft;
 80011ae:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80011b2:	4630      	mov	r0, r6
 80011b4:	46bd      	mov	sp, r7
 80011b6:	ecbd 8b04 	vpop	{d8-d9}
 80011ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80011be:	bf00      	nop

080011c0 <calculate_coefficients_single_pad>:
    // s = x_0, x_1, x_2 d= y_0, y_1, y_2
    // Calculate the coefficients for the distance approximation from an approximation based on a second degree polynomial
    // a=((x_0^(2)*(x_1-x_2)*y_0-x_0*(x_1^(2)*y_1-x_2^(2)*y_2)+x_1*(x_1*y_1-x_2*y_2)*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 80011c0:	ed90 6a02 	vldr	s12, [r0, #8]
 80011c4:	edd0 7a01 	vldr	s15, [r0, #4]
 80011c8:	ed90 5a00 	vldr	s10, [r0]
 80011cc:	ed91 7a02 	vldr	s14, [r1, #8]
 80011d0:	edd1 4a00 	vldr	s9, [r1]
 80011d4:	ed91 4a01 	vldr	s8, [r1, #4]
 80011d8:	ee66 6a06 	vmul.f32	s13, s12, s12
 80011dc:	ee77 5ac6 	vsub.f32	s11, s15, s12
 80011e0:	ee65 4a24 	vmul.f32	s9, s10, s9
 80011e4:	ee66 6a87 	vmul.f32	s13, s13, s14
 80011e8:	ee27 7a46 	vnmul.f32	s14, s14, s12
 80011ec:	eee5 6aa4 	vfma.f32	s13, s11, s9
 80011f0:	eea7 7a84 	vfma.f32	s14, s15, s8
 80011f4:	ee67 3aa7 	vmul.f32	s7, s15, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80011f8:	ee77 4a86 	vadd.f32	s9, s15, s12
 80011fc:	eee4 6a63 	vfms.f32	s13, s8, s7
 8001200:	ee67 7a86 	vmul.f32	s15, s15, s12
 8001204:	ee35 6a64 	vsub.f32	s12, s10, s9
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001208:	ee27 7a27 	vmul.f32	s14, s14, s15
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800120c:	eee5 7a06 	vfma.f32	s15, s10, s12
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 8001210:	eea5 7a26 	vfma.f32	s14, s10, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001214:	ee65 5aa7 	vmul.f32	s11, s11, s15
 8001218:	eec7 7a25 	vdiv.f32	s15, s14, s11
    *a = (POW2(s[0]) * (s[1] - s[2]) * d[0] - s[0] * (POW2(s[1]) * d[1] - POW2(s[2]) * d[2]) + s[1] * (s[1] * d[1] - s[2] * d[2]) * s[2])
 800121c:	edc2 7a00 	vstr	s15, [r2]
    // b = ((−(x_0^(2)*(x_1^(2)*(y_0-y_1)-x_2^(2)*(y_0-y_2))+x_1^(2)*x_2^(2)*(y_1-y_2)))/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS

    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001220:	edd0 7a01 	vldr	s15, [r0, #4]
 8001224:	ed91 3a01 	vldr	s6, [r1, #4]
 8001228:	ed91 7a00 	vldr	s14, [r1]
 800122c:	edd0 6a02 	vldr	s13, [r0, #8]
 8001230:	edd1 5a02 	vldr	s11, [r1, #8]
 8001234:	edd0 4a00 	vldr	s9, [r0]
 8001238:	ee67 2aa7 	vmul.f32	s5, s15, s15
 800123c:	ee33 6a47 	vsub.f32	s12, s6, s14
 8001240:	ee26 5aa6 	vmul.f32	s10, s13, s13
 8001244:	ee37 7a65 	vsub.f32	s14, s14, s11
 8001248:	ee26 6a22 	vmul.f32	s12, s12, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800124c:	ee77 3aa6 	vadd.f32	s7, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001250:	eea7 6a05 	vfma.f32	s12, s14, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001254:	ee27 4aa6 	vmul.f32	s8, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001258:	ee24 7aa4 	vmul.f32	s14, s9, s9
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 800125c:	ee74 3ae3 	vsub.f32	s7, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001260:	ee25 5a22 	vmul.f32	s10, s10, s5
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001264:	eea4 4aa3 	vfma.f32	s8, s9, s7
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001268:	ee75 5ac3 	vsub.f32	s11, s11, s6
 800126c:	ee27 7a06 	vmul.f32	s14, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001270:	ee77 7ae6 	vsub.f32	s15, s15, s13
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001274:	eea5 7a25 	vfma.f32	s14, s10, s11
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 8001278:	ee67 7a84 	vmul.f32	s15, s15, s8
 800127c:	eec7 6a27 	vdiv.f32	s13, s14, s15
    *b = (-(POW2(s[0]) * (POW2(s[1]) * (d[0] - d[1]) - POW2(s[2]) * (d[0] - d[2])) + POW2(s[1]) * POW2(s[2]) * (d[1] - d[2])))
 8001280:	edc3 6a00 	vstr	s13, [r3]

    // c=((x_0*(x_0*(x_1*(y_0-y_1)-x_2*(y_0-y_2))+x_1*x_2*(y_1-y_2))*x_1*x_2)/((x_0^(2)-x_0*(x_1+x_2)+x_1*x_2)*(x_1-x_2)))
    // -> Result of Nspire CAS
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 8001284:	edd1 7a00 	vldr	s15, [r1]
 8001288:	ed91 4a02 	vldr	s8, [r1, #8]
 800128c:	ed90 6a02 	vldr	s12, [r0, #8]
 8001290:	edd1 6a01 	vldr	s13, [r1, #4]
 8001294:	ed90 7a01 	vldr	s14, [r0, #4]
 8001298:	9b00      	ldr	r3, [sp, #0]
 800129a:	ee74 5a67 	vsub.f32	s11, s8, s15
 800129e:	ee77 4ae6 	vsub.f32	s9, s15, s13
 80012a2:	ee65 5a86 	vmul.f32	s11, s11, s12
 80012a6:	edd0 7a00 	vldr	s15, [r0]
 80012aa:	eee7 5a24 	vfma.f32	s11, s14, s9
 80012ae:	ee27 5a06 	vmul.f32	s10, s14, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012b2:	ee77 4a06 	vadd.f32	s9, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012b6:	ee76 6ac4 	vsub.f32	s13, s13, s8
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ba:	ee77 4ae4 	vsub.f32	s9, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012be:	ee66 6a85 	vmul.f32	s13, s13, s10
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012c2:	eea7 5aa4 	vfma.f32	s10, s15, s9
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012c6:	eee7 6aa5 	vfma.f32	s13, s15, s11
 80012ca:	ee67 7a87 	vmul.f32	s15, s15, s14
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012ce:	ee37 7a46 	vsub.f32	s14, s14, s12
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012d2:	ee67 7a86 	vmul.f32	s15, s15, s12
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012d6:	ee27 7a05 	vmul.f32	s14, s14, s10
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012da:	ee67 7aa6 	vmul.f32	s15, s15, s13
    / ((POW2(s[0]) - s[0] * (s[1] + s[2]) + s[1] * s[2]) * (s[1] - s[2]));
 80012de:	eec7 6a87 	vdiv.f32	s13, s15, s14
    *c = ((s[0] * (s[0] * (s[1] * (d[0] - d[1]) - s[2] * (d[0] - d[2])) + s[1] * s[2] * (d[1] - d[2])) * s[1] * s[2]))
 80012e2:	edc3 6a00 	vstr	s13, [r3]
}
 80012e6:	4770      	bx	lr

080012e8 <calculate_distance_and_angle>:
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012e8:	b530      	push	{r4, r5, lr}
    float32_t distance[3] = {10, 50, 100};
 80012ea:	4b37      	ldr	r3, [pc, #220]	; (80013c8 <calculate_distance_and_angle+0xe0>)
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012ec:	ed2d 8b02 	vpush	{d8}
    float32_t distance[3] = {10, 50, 100};
 80012f0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
DISTANCE_ANGLE calculate_distance_and_angle(float32_t signal_strength_r, float32_t signal_strength_l){
 80012f4:	b097      	sub	sp, #92	; 0x5c
    float32_t distance[3] = {10, 50, 100};
 80012f6:	f10d 0e1c 	add.w	lr, sp, #28
 80012fa:	e88e 0007 	stmia.w	lr, {r0, r1, r2}
    float32_t signal_r[3] = {1030, 717, 543};
 80012fe:	f103 020c 	add.w	r2, r3, #12
 8001302:	ca07      	ldmia	r2, {r0, r1, r2}
 8001304:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8001308:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
    float32_t signal_l[3] = {920, 655, 553};
 800130c:	f103 0218 	add.w	r2, r3, #24
 8001310:	ca07      	ldmia	r2, {r0, r1, r2}
 8001312:	ac0d      	add	r4, sp, #52	; 0x34
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 8001314:	ab12      	add	r3, sp, #72	; 0x48
 8001316:	9300      	str	r3, [sp, #0]
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 8001318:	ad15      	add	r5, sp, #84	; 0x54
    float32_t signal_l[3] = {920, 655, 553};
 800131a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    calculate_coefficients_single_pad(signal_pr, distance, &calibration.a_r, &calibration.b_r, &calibration.c_r);
 800131e:	ab11      	add	r3, sp, #68	; 0x44
 8001320:	4660      	mov	r0, ip
 8001322:	4671      	mov	r1, lr
 8001324:	aa10      	add	r2, sp, #64	; 0x40
 8001326:	f7ff ff4b 	bl	80011c0 <calculate_coefficients_single_pad>
    calculate_coefficients_single_pad(signal_pl, distance, &calibration.a_l, &calibration.b_l, &calibration.c_l);
 800132a:	ab14      	add	r3, sp, #80	; 0x50
 800132c:	aa13      	add	r2, sp, #76	; 0x4c
 800132e:	4620      	mov	r0, r4
 8001330:	9500      	str	r5, [sp, #0]
 8001332:	f7ff ff45 	bl	80011c0 <calculate_coefficients_single_pad>
    return calibration;
 8001336:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
 800133a:	eddd 7a14 	vldr	s15, [sp, #80]	; 0x50
 800133e:	eddd 6a15 	vldr	s13, [sp, #84]	; 0x54
 8001342:	ed9d 6a10 	vldr	s12, [sp, #64]	; 0x40
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001346:	ee87 8a00 	vdiv.f32	s16, s14, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800134a:	eec7 8aa0 	vdiv.f32	s17, s15, s1
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800134e:	ee20 0a00 	vmul.f32	s0, s0, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001352:	ee60 0aa0 	vmul.f32	s1, s1, s1
    return calibration;
 8001356:	eddd 7a12 	vldr	s15, [sp, #72]	; 0x48
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800135a:	ee87 7a80 	vdiv.f32	s14, s15, s0
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800135e:	eec6 7aa0 	vdiv.f32	s15, s13, s1
    return calibration;
 8001362:	eddd 6a13 	vldr	s13, [sp, #76]	; 0x4c
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 8001366:	ee38 8a06 	vadd.f32	s16, s16, s12
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 800136a:	ee78 8aa6 	vadd.f32	s17, s17, s13
    float32_t calc_distance = calibration.a_r + (calibration.b_r / signal_strength_r) + (calibration.c_r / POW2(signal_strength_r));
 800136e:	ee38 8a07 	vadd.f32	s16, s16, s14
    calc_distance = calibration.a_l + (calibration.b_l / signal_strength_l) + (calibration.c_l / POW2(signal_strength_l));
 8001372:	ee78 8aa7 	vadd.f32	s17, s17, s15
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 8001376:	ee78 7ac8 	vsub.f32	s15, s17, s16
 800137a:	ee17 0a90 	vmov	r0, s15
 800137e:	f7ff fa75 	bl	800086c <__aeabi_f2d>
 8001382:	a30f      	add	r3, pc, #60	; (adr r3, 80013c0 <calculate_distance_and_angle+0xd8>)
 8001384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001388:	f7fe ffe2 	bl	8000350 <__aeabi_dmul>
 800138c:	f7ff fac6 	bl	800091c <__aeabi_d2f>
 8001390:	ee00 0a10 	vmov	s0, r0
 8001394:	f02b fc34 	bl	802cc00 <atanf>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 8001398:	ee38 1a28 	vadd.f32	s2, s16, s17
    dist_angle.angle = atanf((dist_angle.distance_l - dist_angle.distance_r) / (2 * D_P)) * (180 / PI);
 800139c:	eddf 1a0b 	vldr	s3, [pc, #44]	; 80013cc <calculate_distance_and_angle+0xe4>
    dist_angle.distance = (dist_angle.distance_l + dist_angle.distance_r) / 2;
 80013a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
}
 80013a4:	ee60 1a21 	vmul.f32	s3, s0, s3
 80013a8:	ee21 1a07 	vmul.f32	s2, s2, s14
 80013ac:	eef0 0a68 	vmov.f32	s1, s17
 80013b0:	eeb0 0a48 	vmov.f32	s0, s16
 80013b4:	b017      	add	sp, #92	; 0x5c
 80013b6:	ecbd 8b02 	vpop	{d8}
 80013ba:	bd30      	pop	{r4, r5, pc}
 80013bc:	f3af 8000 	nop.w
 80013c0:	a8ef1b4a 	.word	0xa8ef1b4a
 80013c4:	3f99fd66 	.word	0x3f99fd66
 80013c8:	0802ea58 	.word	0x0802ea58
 80013cc:	42652ee0 	.word	0x42652ee0

080013d0 <single_measurement>:
SINGLE_MEAS single_measurement(uint32_t* samples) {
 80013d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80013d4:	ed2d 8b04 	vpush	{d8-d9}
 80013d8:	b093      	sub	sp, #76	; 0x4c
 80013da:	af00      	add	r7, sp, #0
 80013dc:	4605      	mov	r5, r0
    uint8_t buffer_size = MEAS_get_num_of_samples();
 80013de:	f000 feeb 	bl	80021b8 <MEAS_get_num_of_samples>
    float32_t samples_PR[buffer_size];
 80013e2:	b203      	sxth	r3, r0
 80013e4:	009b      	lsls	r3, r3, #2
 80013e6:	3307      	adds	r3, #7
 80013e8:	f023 0307 	bic.w	r3, r3, #7
 80013ec:	ebad 0d03 	sub.w	sp, sp, r3
 80013f0:	46e9      	mov	r9, sp
    float32_t samples_PL[buffer_size];
 80013f2:	ebad 0d03 	sub.w	sp, sp, r3
 80013f6:	46e8      	mov	r8, sp
    float32_t samples_HSR[buffer_size];
 80013f8:	ebad 0d03 	sub.w	sp, sp, r3
 80013fc:	466e      	mov	r6, sp
    float32_t samples_HSL[buffer_size];
 80013fe:	ebad 0d03 	sub.w	sp, sp, r3
 8001402:	46eb      	mov	fp, sp
    float32_t samples_PR[buffer_size];
 8001404:	ee08 9a10 	vmov	s16, r9
    float32_t samples_PL[buffer_size];
 8001408:	ee08 8a90 	vmov	s17, r8
    float32_t samples_HSR[buffer_size];
 800140c:	ee09 6a10 	vmov	s18, r6
    float32_t samples_HSL[buffer_size];
 8001410:	ee09 ba90 	vmov	s19, fp
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001414:	b3b8      	cbz	r0, 8001486 <single_measurement+0xb6>
 8001416:	4682      	mov	sl, r0
 8001418:	2400      	movs	r4, #0
        samples_PR[i] = (float32_t)samples[i * MEAS_get_num_of_chan()];
 800141a:	f000 fecb 	bl	80021b4 <MEAS_get_num_of_chan>
 800141e:	fb04 f000 	mul.w	r0, r4, r0
 8001422:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001426:	edd3 7a00 	vldr	s15, [r3]
 800142a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800142e:	ece9 7a01 	vstmia	r9!, {s15}
        samples_PL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 1];
 8001432:	f000 febf 	bl	80021b4 <MEAS_get_num_of_chan>
 8001436:	fb04 f000 	mul.w	r0, r4, r0
 800143a:	3001      	adds	r0, #1
 800143c:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001440:	edd3 7a00 	vldr	s15, [r3]
 8001444:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001448:	ece8 7a01 	vstmia	r8!, {s15}
        samples_HSR[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 2];
 800144c:	f000 feb2 	bl	80021b4 <MEAS_get_num_of_chan>
 8001450:	fb04 f000 	mul.w	r0, r4, r0
 8001454:	3002      	adds	r0, #2
 8001456:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 800145a:	edd3 7a00 	vldr	s15, [r3]
 800145e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001462:	ece6 7a01 	vstmia	r6!, {s15}
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001466:	f000 fea5 	bl	80021b4 <MEAS_get_num_of_chan>
 800146a:	fb04 f000 	mul.w	r0, r4, r0
 800146e:	3003      	adds	r0, #3
 8001470:	eb05 0380 	add.w	r3, r5, r0, lsl #2
 8001474:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001478:	3401      	adds	r4, #1
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 800147a:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < buffer_size; i++) {
 800147e:	45a2      	cmp	sl, r4
        samples_HSL[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + 3];
 8001480:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < buffer_size; i++) {
 8001484:	d1c9      	bne.n	800141a <single_measurement+0x4a>
    fft = calculate_freq_and_signalstrength(samples_PR);
 8001486:	ee18 1a10 	vmov	r1, s16
 800148a:	f107 001c 	add.w	r0, r7, #28
 800148e:	f7ff fd21 	bl	8000ed4 <calculate_freq_and_signalstrength>
 8001492:	ed97 0a08 	vldr	s0, [r7, #32]
 8001496:	ed97 8a07 	vldr	s16, [r7, #28]
 800149a:	ed87 0a00 	vstr	s0, [r7]
    fft = calculate_freq_and_signalstrength(samples_PL);
 800149e:	ee18 1a90 	vmov	r1, s17
 80014a2:	f107 001c 	add.w	r0, r7, #28
 80014a6:	f7ff fd15 	bl	8000ed4 <calculate_freq_and_signalstrength>
 80014aa:	edd7 0a08 	vldr	s1, [r7, #32]
 80014ae:	edd7 8a07 	vldr	s17, [r7, #28]
 80014b2:	edc7 0a01 	vstr	s1, [r7, #4]
    fft = calculate_freq_and_signalstrength(samples_HSR);
 80014b6:	ee19 1a10 	vmov	r1, s18
 80014ba:	f107 001c 	add.w	r0, r7, #28
 80014be:	f7ff fd09 	bl	8000ed4 <calculate_freq_and_signalstrength>
    fft = calculate_freq_and_signalstrength(samples_HSL);
 80014c2:	f107 001c 	add.w	r0, r7, #28
 80014c6:	ee19 1a90 	vmov	r1, s19
 80014ca:	f7ff fd03 	bl	8000ed4 <calculate_freq_and_signalstrength>
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 80014ce:	edd7 0a01 	vldr	s1, [r7, #4]
 80014d2:	ed97 0a00 	vldr	s0, [r7]
 80014d6:	f7ff ff07 	bl	80012e8 <calculate_distance_and_angle>
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 80014da:	ee38 8a28 	vadd.f32	s16, s16, s17
    DISTANCE_ANGLE dist_angle = calculate_distance_and_angle(signal_strength_PR, signal_strength_PL);
 80014de:	eeb0 0a41 	vmov.f32	s0, s2
    single_meas.frequency = (main_frequency_PR + main_frequency_PL) / 2;
 80014e2:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
}
 80014e6:	eef0 0a61 	vmov.f32	s1, s3
 80014ea:	ee28 1a01 	vmul.f32	s2, s16, s2
 80014ee:	eddf 1a04 	vldr	s3, [pc, #16]	; 8001500 <single_measurement+0x130>
 80014f2:	374c      	adds	r7, #76	; 0x4c
 80014f4:	46bd      	mov	sp, r7
 80014f6:	ecbd 8b04 	vpop	{d8-d9}
 80014fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014fe:	bf00      	nop
 8001500:	00000000 	.word	0x00000000

08001504 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001504:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001506:	2064      	movs	r0, #100	; 0x64
 8001508:	f00e fa06 	bl	800f918 <osDelay>
  for(;;)
 800150c:	e7fb      	b.n	8001506 <StartDefaultTask+0x2>
 800150e:	bf00      	nop

08001510 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001510:	b580      	push	{r7, lr}
 8001512:	4c19      	ldr	r4, [pc, #100]	; (8001578 <StartTimeoutTask+0x68>)
 8001514:	f8df 8074 	ldr.w	r8, [pc, #116]	; 800158c <StartTimeoutTask+0x7c>
 8001518:	4e18      	ldr	r6, [pc, #96]	; (800157c <StartTimeoutTask+0x6c>)
 800151a:	4d19      	ldr	r5, [pc, #100]	; (8001580 <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800151c:	4f19      	ldr	r7, [pc, #100]	; (8001584 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 800151e:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001520:	4915      	ldr	r1, [pc, #84]	; (8001578 <StartTimeoutTask+0x68>)
 8001522:	2300      	movs	r3, #0
 8001524:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 8001526:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800152a:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800152e:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001532:	f00e faed 	bl	800fb10 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001536:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001538:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800153a:	4638      	mov	r0, r7
 800153c:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 800153e:	b912      	cbnz	r2, 8001546 <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 8001540:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001542:	f00a fc13 	bl	800bd6c <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001546:	4810      	ldr	r0, [pc, #64]	; (8001588 <StartTimeoutTask+0x78>)
 8001548:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800154c:	f00a fc12 	bl	800bd74 <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8001550:	2100      	movs	r1, #0
 8001552:	4630      	mov	r0, r6
 8001554:	f00d fd08 	bl	800ef68 <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 8001558:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800155a:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 800155c:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800155e:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 8001560:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001562:	f00d fc91 	bl	800ee88 <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 8001566:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 8001568:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 800156c:	330a      	adds	r3, #10
 800156e:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 8001570:	f00e f9d2 	bl	800f918 <osDelay>
  {
 8001574:	e7d3      	b.n	800151e <StartTimeoutTask+0xe>
 8001576:	bf00      	nop
 8001578:	20000010 	.word	0x20000010
 800157c:	20000374 	.word	0x20000374
 8001580:	2000000c 	.word	0x2000000c
 8001584:	40021000 	.word	0x40021000
 8001588:	40021800 	.word	0x40021800
 800158c:	200001d8 	.word	0x200001d8

08001590 <gyro_disable>:
{
 8001590:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001592:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001594:	4e1f      	ldr	r6, [pc, #124]	; (8001614 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001596:	4d20      	ldr	r5, [pc, #128]	; (8001618 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8001598:	4c20      	ldr	r4, [pc, #128]	; (800161c <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800159a:	2700      	movs	r7, #0
 800159c:	9700      	str	r7, [sp, #0]
 800159e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015a0:	f043 0304 	orr.w	r3, r3, #4
 80015a4:	6333      	str	r3, [r6, #48]	; 0x30
 80015a6:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015a8:	f003 0304 	and.w	r3, r3, #4
 80015ac:	9300      	str	r3, [sp, #0]
 80015ae:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80015b0:	682b      	ldr	r3, [r5, #0]
 80015b2:	f023 030c 	bic.w	r3, r3, #12
 80015b6:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 80015b8:	682b      	ldr	r3, [r5, #0]
 80015ba:	f043 0304 	orr.w	r3, r3, #4
 80015be:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 80015c0:	69ab      	ldr	r3, [r5, #24]
 80015c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80015c6:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 80015c8:	200a      	movs	r0, #10
 80015ca:	f009 fff9 	bl	800b5c0 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 80015ce:	682b      	ldr	r3, [r5, #0]
 80015d0:	f043 030c 	orr.w	r3, r3, #12
 80015d4:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80015d6:	9701      	str	r7, [sp, #4]
 80015d8:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015da:	f043 0320 	orr.w	r3, r3, #32
 80015de:	6333      	str	r3, [r6, #48]	; 0x30
 80015e0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80015e2:	f003 0320 	and.w	r3, r3, #32
 80015e6:	9301      	str	r3, [sp, #4]
 80015e8:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80015ea:	68a3      	ldr	r3, [r4, #8]
 80015ec:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80015f0:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 80015f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015f4:	f023 030f 	bic.w	r3, r3, #15
 80015f8:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 80015fa:	68e3      	ldr	r3, [r4, #12]
 80015fc:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001600:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001602:	200a      	movs	r0, #10
 8001604:	f009 ffdc 	bl	800b5c0 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8001608:	6823      	ldr	r3, [r4, #0]
 800160a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800160e:	6023      	str	r3, [r4, #0]
}
 8001610:	b003      	add	sp, #12
 8001612:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001614:	40023800 	.word	0x40023800
 8001618:	40020800 	.word	0x40020800
 800161c:	40021400 	.word	0x40021400

08001620 <setCalibrationFlashValues>:
{
 8001620:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001624:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8001626:	009b      	lsls	r3, r3, #2
 8001628:	3307      	adds	r3, #7
 800162a:	466d      	mov	r5, sp
 800162c:	08db      	lsrs	r3, r3, #3
 800162e:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8001632:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8001634:	469d      	mov	sp, r3
 8001636:	466d      	mov	r5, sp
{
 8001638:	4616      	mov	r6, r2
 800163a:	4681      	mov	r9, r0
 800163c:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 800163e:	4622      	mov	r2, r4
 8001640:	4629      	mov	r1, r5
 8001642:	f7ff fc3b 	bl	8000ebc <Flash_Read_Data>
	Rx_Data[index] = value;
 8001646:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 800164a:	4622      	mov	r2, r4
 800164c:	4629      	mov	r1, r5
 800164e:	4648      	mov	r0, r9
 8001650:	f7ff fbfa 	bl	8000e48 <Flash_Write_Data>
}
 8001654:	46bd      	mov	sp, r7
 8001656:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800165a:	bf00      	nop

0800165c <SystemClock_Config>:
{
 800165c:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800165e:	2400      	movs	r4, #0
{
 8001660:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001662:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8001666:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800166a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 800166e:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001672:	4a1e      	ldr	r2, [pc, #120]	; (80016ec <SystemClock_Config+0x90>)
 8001674:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001676:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001678:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800167a:	4b1d      	ldr	r3, [pc, #116]	; (80016f0 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800167c:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001680:	6411      	str	r1, [r2, #64]	; 0x40
 8001682:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8001684:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8001688:	9201      	str	r2, [sp, #4]
 800168a:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800168c:	9402      	str	r4, [sp, #8]
 800168e:	681a      	ldr	r2, [r3, #0]
 8001690:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001694:	601a      	str	r2, [r3, #0]
 8001696:	681b      	ldr	r3, [r3, #0]
 8001698:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800169c:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 800169e:	2201      	movs	r2, #1
 80016a0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016a4:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016a8:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016aa:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016ac:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016ae:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016b2:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016b6:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016ba:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016bc:	2202      	movs	r2, #2
 80016be:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016c0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016c2:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016c6:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016c8:	f00c f98e 	bl	800d9e8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80016cc:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80016ce:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016d2:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016d6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016da:	a803      	add	r0, sp, #12
 80016dc:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016de:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016e2:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016e4:	f00c fb98 	bl	800de18 <HAL_RCC_ClockConfig>
}
 80016e8:	b015      	add	sp, #84	; 0x54
 80016ea:	bd30      	pop	{r4, r5, pc}
 80016ec:	40023800 	.word	0x40023800
 80016f0:	40007000 	.word	0x40007000

080016f4 <main>:
{
 80016f4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016f8:	2400      	movs	r4, #0
{
 80016fa:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 80016fc:	f009 ff34 	bl	800b568 <HAL_Init>
  SystemClock_Config();
 8001700:	f7ff ffac 	bl	800165c <SystemClock_Config>
  gyro_disable();
 8001704:	f7ff ff44 	bl	8001590 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001708:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800170c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001710:	4bc3      	ldr	r3, [pc, #780]	; (8001a20 <main+0x32c>)
 8001712:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001714:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001716:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001718:	48c2      	ldr	r0, [pc, #776]	; (8001a24 <main+0x330>)
  hi2c3.Instance = I2C3;
 800171a:	f8df a33c 	ldr.w	sl, [pc, #828]	; 8001a58 <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800171e:	f041 0110 	orr.w	r1, r1, #16
 8001722:	6319      	str	r1, [r3, #48]	; 0x30
 8001724:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001726:	f001 0110 	and.w	r1, r1, #16
 800172a:	9100      	str	r1, [sp, #0]
 800172c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800172e:	9401      	str	r4, [sp, #4]
 8001730:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001732:	f041 0120 	orr.w	r1, r1, #32
 8001736:	6319      	str	r1, [r3, #48]	; 0x30
 8001738:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800173a:	f001 0120 	and.w	r1, r1, #32
 800173e:	9101      	str	r1, [sp, #4]
 8001740:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001742:	9402      	str	r4, [sp, #8]
 8001744:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001746:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800174a:	6319      	str	r1, [r3, #48]	; 0x30
 800174c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800174e:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001752:	9102      	str	r1, [sp, #8]
 8001754:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001756:	9403      	str	r4, [sp, #12]
 8001758:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800175a:	f041 0104 	orr.w	r1, r1, #4
 800175e:	6319      	str	r1, [r3, #48]	; 0x30
 8001760:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001762:	f001 0104 	and.w	r1, r1, #4
 8001766:	9103      	str	r1, [sp, #12]
 8001768:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800176a:	9404      	str	r4, [sp, #16]
 800176c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800176e:	f041 0101 	orr.w	r1, r1, #1
 8001772:	6319      	str	r1, [r3, #48]	; 0x30
 8001774:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001776:	f001 0101 	and.w	r1, r1, #1
 800177a:	9104      	str	r1, [sp, #16]
 800177c:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800177e:	9405      	str	r4, [sp, #20]
 8001780:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001782:	f041 0102 	orr.w	r1, r1, #2
 8001786:	6319      	str	r1, [r3, #48]	; 0x30
 8001788:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800178a:	f001 0102 	and.w	r1, r1, #2
 800178e:	9105      	str	r1, [sp, #20]
 8001790:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001792:	9406      	str	r4, [sp, #24]
 8001794:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001796:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800179a:	6319      	str	r1, [r3, #48]	; 0x30
 800179c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800179e:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80017a2:	9106      	str	r1, [sp, #24]
 80017a4:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017a6:	9407      	str	r4, [sp, #28]
 80017a8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017aa:	f041 0108 	orr.w	r1, r1, #8
 80017ae:	6319      	str	r1, [r3, #48]	; 0x30
 80017b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017b2:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017b6:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017b8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017ba:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017bc:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017be:	f00a fad5 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80017c2:	4898      	ldr	r0, [pc, #608]	; (8001a24 <main+0x330>)
 80017c4:	2120      	movs	r1, #32
 80017c6:	2201      	movs	r2, #1
 80017c8:	f00a fad0 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 80017cc:	4896      	ldr	r0, [pc, #600]	; (8001a28 <main+0x334>)
 80017ce:	4622      	mov	r2, r4
 80017d0:	2114      	movs	r1, #20
 80017d2:	f00a facb 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80017d6:	4895      	ldr	r0, [pc, #596]	; (8001a2c <main+0x338>)
 80017d8:	4622      	mov	r2, r4
 80017da:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80017de:	f00a fac5 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80017e2:	4893      	ldr	r0, [pc, #588]	; (8001a30 <main+0x33c>)
 80017e4:	4622      	mov	r2, r4
 80017e6:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80017ea:	f00a fabf 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 80017ee:	4891      	ldr	r0, [pc, #580]	; (8001a34 <main+0x340>)
 80017f0:	4622      	mov	r2, r4
 80017f2:	2104      	movs	r1, #4
 80017f4:	f00a faba 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 80017f8:	2201      	movs	r2, #1
 80017fa:	488e      	ldr	r0, [pc, #568]	; (8001a34 <main+0x340>)
 80017fc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001800:	f00a fab4 	bl	800bd6c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001804:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001808:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800180c:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800180e:	4885      	ldr	r0, [pc, #532]	; (8001a24 <main+0x330>)
 8001810:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001812:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001814:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001818:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800181c:	f00a f962 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001820:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001824:	487f      	ldr	r0, [pc, #508]	; (8001a24 <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001826:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001828:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800182a:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800182c:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800182e:	f00a f959 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001832:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001834:	487b      	ldr	r0, [pc, #492]	; (8001a24 <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001836:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001838:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800183a:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800183c:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800183e:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001842:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001844:	f00a f94e 	bl	800bae4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001848:	4877      	ldr	r0, [pc, #476]	; (8001a28 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800184a:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800184c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 800184e:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001852:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001856:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001858:	f00a f944 	bl	800bae4 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800185c:	4872      	ldr	r0, [pc, #456]	; (8001a28 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800185e:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8001860:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001862:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8001866:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 800186a:	f00a f93b 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800186e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001872:	486e      	ldr	r0, [pc, #440]	; (8001a2c <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001874:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001876:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001878:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800187c:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800187e:	f00a f931 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001882:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001886:	486a      	ldr	r0, [pc, #424]	; (8001a30 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001888:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800188a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800188c:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001890:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001892:	f00a f927 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8001896:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800189a:	4866      	ldr	r0, [pc, #408]	; (8001a34 <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 800189c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800189e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018a0:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018a4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018a6:	f00a f91d 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80018aa:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018ae:	4862      	ldr	r0, [pc, #392]	; (8001a38 <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 80018b0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018b2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 80018b4:	230f      	movs	r3, #15
 80018b6:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018b8:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018bc:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80018be:	f00a f911 	bl	800bae4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80018c2:	2105      	movs	r1, #5
 80018c4:	4622      	mov	r2, r4
 80018c6:	2009      	movs	r0, #9
 80018c8:	f009 fe9e 	bl	800b608 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80018cc:	2009      	movs	r0, #9
 80018ce:	f009 fed9 	bl	800b684 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80018d2:	485a      	ldr	r0, [pc, #360]	; (8001a3c <main+0x348>)
 80018d4:	4a5a      	ldr	r2, [pc, #360]	; (8001a40 <main+0x34c>)
 80018d6:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80018d8:	f009 fee2 	bl	800b6a0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80018dc:	4959      	ldr	r1, [pc, #356]	; (8001a44 <main+0x350>)
 80018de:	4a5a      	ldr	r2, [pc, #360]	; (8001a48 <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018e0:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 80018e2:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80018e6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80018ea:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80018ee:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80018f2:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018f6:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018fa:	f00a fc9d 	bl	800c238 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80018fe:	4649      	mov	r1, r9
 8001900:	4650      	mov	r0, sl
 8001902:	f00b fe65 	bl	800d5d0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001906:	4621      	mov	r1, r4
 8001908:	4650      	mov	r0, sl
 800190a:	f00b fe81 	bl	800d610 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800190e:	f8df c14c 	ldr.w	ip, [pc, #332]	; 8001a5c <main+0x368>
  hspi5.Instance = SPI5;
 8001912:	484e      	ldr	r0, [pc, #312]	; (8001a4c <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001914:	f8df a148 	ldr.w	sl, [pc, #328]	; 8001a60 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001918:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800191a:	f44f 7282 	mov.w	r2, #260	; 0x104
 800191e:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001922:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8001926:	2218      	movs	r2, #24
 8001928:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800192c:	220a      	movs	r2, #10
 800192e:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001930:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001934:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001938:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800193c:	f00c fd5a 	bl	800e3f4 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001940:	2207      	movs	r2, #7
 8001942:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8001944:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001946:	4a42      	ldr	r2, [pc, #264]	; (8001a50 <main+0x35c>)
 8001948:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800194c:	2040      	movs	r0, #64	; 0x40
 800194e:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001952:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001956:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800195a:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800195e:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001960:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001964:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001966:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 800196a:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 800196e:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001972:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001976:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800197a:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 800197e:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 8001980:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8001982:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001984:	f00c fc44 	bl	800e210 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001988:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800198c:	a90b      	add	r1, sp, #44	; 0x2c
 800198e:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001990:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001994:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001998:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800199a:	f00c fc5b 	bl	800e254 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800199e:	4640      	mov	r0, r8
 80019a0:	f009 fe0e 	bl	800b5c0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019a4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019a8:	a90b      	add	r1, sp, #44	; 0x2c
 80019aa:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019ac:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019b0:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019b4:	f00c fc4e 	bl	800e254 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019b8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019bc:	a90b      	add	r1, sp, #44	; 0x2c
 80019be:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019c0:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019c4:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019c8:	f00c fc44 	bl	800e254 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80019cc:	f44f 720c 	mov.w	r2, #560	; 0x230
 80019d0:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80019d2:	9908      	ldr	r1, [sp, #32]
 80019d4:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019d6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019da:	a90b      	add	r1, sp, #44	; 0x2c
 80019dc:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019de:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 80019e2:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019e6:	f00c fc35 	bl	800e254 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80019ea:	4650      	mov	r0, sl
 80019ec:	f240 516a 	movw	r1, #1386	; 0x56a
 80019f0:	f00c fc4e 	bl	800e290 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 80019f4:	f8df a06c 	ldr.w	sl, [pc, #108]	; 8001a64 <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80019f8:	2234      	movs	r2, #52	; 0x34
 80019fa:	4621      	mov	r1, r4
 80019fc:	a80f      	add	r0, sp, #60	; 0x3c
 80019fe:	f02c f9a4 	bl	802dd4a <memset>
  hltdc.Instance = LTDC;
 8001a02:	4a14      	ldr	r2, [pc, #80]	; (8001a54 <main+0x360>)
 8001a04:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 8001a08:	2209      	movs	r2, #9
 8001a0a:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001a0e:	221d      	movs	r2, #29
 8001a10:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001a14:	f240 130d 	movw	r3, #269	; 0x10d
 8001a18:	f240 1243 	movw	r2, #323	; 0x143
 8001a1c:	e024      	b.n	8001a68 <main+0x374>
 8001a1e:	bf00      	nop
 8001a20:	40023800 	.word	0x40023800
 8001a24:	40021000 	.word	0x40021000
 8001a28:	40020800 	.word	0x40020800
 8001a2c:	40020400 	.word	0x40020400
 8001a30:	40020c00 	.word	0x40020c00
 8001a34:	40021800 	.word	0x40021800
 8001a38:	40020000 	.word	0x40020000
 8001a3c:	200001e4 	.word	0x200001e4
 8001a40:	40023000 	.word	0x40023000
 8001a44:	40005c00 	.word	0x40005c00
 8001a48:	000186a0 	.word	0x000186a0
 8001a4c:	2000031c 	.word	0x2000031c
 8001a50:	a0000140 	.word	0xa0000140
 8001a54:	40016800 	.word	0x40016800
 8001a58:	200001ec 	.word	0x200001ec
 8001a5c:	40015000 	.word	0x40015000
 8001a60:	200002e8 	.word	0x200002e8
 8001a64:	20000240 	.word	0x20000240
 8001a68:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001a6c:	f240 1117 	movw	r1, #279	; 0x117
 8001a70:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8001a74:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a78:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 8001a7a:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8001a7e:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8001a82:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001a86:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001a8a:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8001a8e:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a92:	f00b fde1 	bl	800d658 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001a96:	23f0      	movs	r3, #240	; 0xf0
 8001a98:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001a9a:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001a9c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001aa0:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001aa2:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001aa4:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001aa6:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001aaa:	4622      	mov	r2, r4
 8001aac:	a90f      	add	r1, sp, #60	; 0x3c
 8001aae:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8001ab0:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001ab2:	2305      	movs	r3, #5
 8001ab4:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001ab8:	f8df 826c 	ldr.w	r8, [pc, #620]	; 8001d28 <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001abc:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8001abe:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001ac0:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8001ac2:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001ac4:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001ac6:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001aca:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001ace:	f00b fe99 	bl	800d804 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001ad2:	4b82      	ldr	r3, [pc, #520]	; (8001cdc <main+0x5e8>)
 8001ad4:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8001ad8:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8001ada:	f8df a250 	ldr.w	sl, [pc, #592]	; 8001d2c <main+0x638>
  LcdDrv->Init();
 8001ade:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001ae0:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8001ae4:	f8df 8248 	ldr.w	r8, [pc, #584]	; 8001d30 <main+0x63c>
  LcdDrv->DisplayOff();
 8001ae8:	68db      	ldr	r3, [r3, #12]
 8001aea:	4798      	blx	r3
  htim3.Instance = TIM3;
 8001aec:	4b7c      	ldr	r3, [pc, #496]	; (8001ce0 <main+0x5ec>)
 8001aee:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001af2:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8001af4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001af8:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001afc:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b00:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b04:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b08:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001b0c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b10:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b14:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b18:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b1c:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001b1e:	f00d f859 	bl	800ebd4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b26:	a90b      	add	r1, sp, #44	; 0x2c
 8001b28:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b2a:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b2c:	f00d fb7c 	bl	800f228 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b30:	a90f      	add	r1, sp, #60	; 0x3c
 8001b32:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001b34:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b38:	f00d fc26 	bl	800f388 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b3c:	a909      	add	r1, sp, #36	; 0x24
 8001b3e:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b40:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b44:	f00d fd5e 	bl	800f604 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8001b48:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8001b4a:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8001b4e:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8001b50:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b54:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b56:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8001b58:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001b5c:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8001b60:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b64:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b68:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b70:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b74:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001b78:	f00d f82c 	bl	800ebd4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b7c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b80:	a90f      	add	r1, sp, #60	; 0x3c
 8001b82:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b84:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8001b86:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001b8a:	f00d fb4d 	bl	800f228 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b8e:	a90b      	add	r1, sp, #44	; 0x2c
 8001b90:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b92:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001b96:	f00d fd35 	bl	800f604 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001b9a:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001b9e:	4621      	mov	r1, r4
 8001ba0:	4650      	mov	r0, sl
 8001ba2:	f00d f971 	bl	800ee88 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001ba6:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001ba8:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001bac:	4650      	mov	r0, sl
 8001bae:	f00d f96b 	bl	800ee88 <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 8001bb2:	4f4c      	ldr	r7, [pc, #304]	; (8001ce4 <main+0x5f0>)
  TIM2->CCR3 = 50;
 8001bb4:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001bb8:	4631      	mov	r1, r6
 8001bba:	4650      	mov	r0, sl
 8001bbc:	f00d f964 	bl	800ee88 <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001bc0:	4949      	ldr	r1, [pc, #292]	; (8001ce8 <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001bc2:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 8001bc4:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 8001bc6:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bc8:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001bcc:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001bce:	2380      	movs	r3, #128	; 0x80
 8001bd0:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 8001bd2:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001bd6:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001bda:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001bde:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001be2:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001be4:	f00c fff6 	bl	800ebd4 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001be8:	4638      	mov	r0, r7
 8001bea:	f00d f8bf 	bl	800ed6c <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001bee:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001bf2:	4622      	mov	r2, r4
 8001bf4:	a90f      	add	r1, sp, #60	; 0x3c
 8001bf6:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001bf8:	4e3c      	ldr	r6, [pc, #240]	; (8001cec <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001bfa:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001bfc:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c00:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c04:	f00d fa00 	bl	800f008 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001c08:	4638      	mov	r0, r7
 8001c0a:	f000 fcfd 	bl	8002608 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001c0e:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001c10:	4f37      	ldr	r7, [pc, #220]	; (8001cf0 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 8001c12:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001c14:	2380      	movs	r3, #128	; 0x80
 8001c16:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001c18:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001c1a:	2353      	movs	r3, #83	; 0x53
 8001c1c:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001c20:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001c24:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001c28:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001c2c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001c30:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001c34:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c36:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c38:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001c3a:	f00c ffcb 	bl	800ebd4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c3e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001c42:	a90b      	add	r1, sp, #44	; 0x2c
 8001c44:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001c46:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 8001c48:	f00d faee 	bl	800f228 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 8001c4c:	4630      	mov	r0, r6
 8001c4e:	f00d f88d 	bl	800ed6c <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c52:	4622      	mov	r2, r4
 8001c54:	a90f      	add	r1, sp, #60	; 0x3c
 8001c56:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c58:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c5c:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c60:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c62:	f00d f9d1 	bl	800f008 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001c66:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 8001c68:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 8001c6c:	4630      	mov	r0, r6
 8001c6e:	f00d f90b 	bl	800ee88 <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 8001c72:	4630      	mov	r0, r6
 8001c74:	f000 fcc8 	bl	8002608 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001c78:	f000 fe5c 	bl	8002934 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001c7c:	f000 fe58 	bl	8002930 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001c80:	f7ff fc86 	bl	8001590 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001c84:	f000 f958 	bl	8001f38 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001c88:	f000 f98a 	bl	8001fa0 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001c8c:	4919      	ldr	r1, [pc, #100]	; (8001cf4 <main+0x600>)
 8001c8e:	481a      	ldr	r0, [pc, #104]	; (8001cf8 <main+0x604>)
 8001c90:	220c      	movs	r2, #12
 8001c92:	f7ff f913 	bl	8000ebc <Flash_Read_Data>
  osKernelInitialize();
 8001c96:	f00d fdc7 	bl	800f828 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001c9a:	4629      	mov	r1, r5
 8001c9c:	4a17      	ldr	r2, [pc, #92]	; (8001cfc <main+0x608>)
 8001c9e:	4648      	mov	r0, r9
 8001ca0:	f00d fefc 	bl	800fa9c <osMessageQueueNew>
 8001ca4:	4b16      	ldr	r3, [pc, #88]	; (8001d00 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001ca6:	4a17      	ldr	r2, [pc, #92]	; (8001d04 <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001ca8:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001caa:	4621      	mov	r1, r4
 8001cac:	4816      	ldr	r0, [pc, #88]	; (8001d08 <main+0x614>)
 8001cae:	f00d fde7 	bl	800f880 <osThreadNew>
 8001cb2:	4b16      	ldr	r3, [pc, #88]	; (8001d0c <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cb4:	4a16      	ldr	r2, [pc, #88]	; (8001d10 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001cb6:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cb8:	4621      	mov	r1, r4
 8001cba:	4816      	ldr	r0, [pc, #88]	; (8001d14 <main+0x620>)
 8001cbc:	f00d fde0 	bl	800f880 <osThreadNew>
 8001cc0:	4b15      	ldr	r3, [pc, #84]	; (8001d18 <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cc2:	4a16      	ldr	r2, [pc, #88]	; (8001d1c <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cc4:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001cc6:	4621      	mov	r1, r4
 8001cc8:	4815      	ldr	r0, [pc, #84]	; (8001d20 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001cca:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001ccc:	f00d fdd8 	bl	800f880 <osThreadNew>
 8001cd0:	4b14      	ldr	r3, [pc, #80]	; (8001d24 <main+0x630>)
 8001cd2:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001cd4:	f00d fdba 	bl	800f84c <osKernelStart>
  while (1)
 8001cd8:	e7fe      	b.n	8001cd8 <main+0x5e4>
 8001cda:	bf00      	nop
 8001cdc:	2000001c 	.word	0x2000001c
 8001ce0:	40000400 	.word	0x40000400
 8001ce4:	20000374 	.word	0x20000374
 8001ce8:	40002000 	.word	0x40002000
 8001cec:	2000044c 	.word	0x2000044c
 8001cf0:	40014000 	.word	0x40014000
 8001cf4:	200001a0 	.word	0x200001a0
 8001cf8:	081e0000 	.word	0x081e0000
 8001cfc:	0802eb14 	.word	0x0802eb14
 8001d00:	200001d8 	.word	0x200001d8
 8001d04:	0802eb50 	.word	0x0802eb50
 8001d08:	08001505 	.word	0x08001505
 8001d0c:	200001e0 	.word	0x200001e0
 8001d10:	0802eaf0 	.word	0x0802eaf0
 8001d14:	08002945 	.word	0x08002945
 8001d18:	200001d0 	.word	0x200001d0
 8001d1c:	0802eb2c 	.word	0x0802eb2c
 8001d20:	08001511 	.word	0x08001511
 8001d24:	200001dc 	.word	0x200001dc
 8001d28:	200001d4 	.word	0x200001d4
 8001d2c:	200003bc 	.word	0x200003bc
 8001d30:	20000404 	.word	0x20000404

08001d34 <IOE_Init>:
 8001d34:	4770      	bx	lr
 8001d36:	bf00      	nop

08001d38 <IOE_ITConfig>:
 8001d38:	4770      	bx	lr
 8001d3a:	bf00      	nop

08001d3c <IOE_Write>:
{
 8001d3c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d3e:	4c09      	ldr	r4, [pc, #36]	; (8001d64 <IOE_Write+0x28>)
{
 8001d40:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d42:	6824      	ldr	r4, [r4, #0]
 8001d44:	9402      	str	r4, [sp, #8]
{
 8001d46:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001d48:	2301      	movs	r3, #1
 8001d4a:	f88d 4017 	strb.w	r4, [sp, #23]
 8001d4e:	f10d 0417 	add.w	r4, sp, #23
 8001d52:	460a      	mov	r2, r1
 8001d54:	9301      	str	r3, [sp, #4]
 8001d56:	4601      	mov	r1, r0
 8001d58:	9400      	str	r4, [sp, #0]
 8001d5a:	4803      	ldr	r0, [pc, #12]	; (8001d68 <IOE_Write+0x2c>)
 8001d5c:	f00a fb34 	bl	800c3c8 <HAL_I2C_Mem_Write>
}
 8001d60:	b006      	add	sp, #24
 8001d62:	bd10      	pop	{r4, pc}
 8001d64:	20000004 	.word	0x20000004
 8001d68:	200001ec 	.word	0x200001ec

08001d6c <IOE_Read>:
{
 8001d6c:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d6e:	4b0b      	ldr	r3, [pc, #44]	; (8001d9c <IOE_Read+0x30>)
{
 8001d70:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	9302      	str	r3, [sp, #8]
{
 8001d76:	4684      	mov	ip, r0
 8001d78:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d7a:	2301      	movs	r3, #1
 8001d7c:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001d80:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d82:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001d86:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001d8a:	4661      	mov	r1, ip
 8001d8c:	4804      	ldr	r0, [pc, #16]	; (8001da0 <IOE_Read+0x34>)
 8001d8e:	f00a fc0d 	bl	800c5ac <HAL_I2C_Mem_Read>
}
 8001d92:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001d96:	b007      	add	sp, #28
 8001d98:	f85d fb04 	ldr.w	pc, [sp], #4
 8001d9c:	20000004 	.word	0x20000004
 8001da0:	200001ec 	.word	0x200001ec

08001da4 <IOE_ReadMultiple>:
{
 8001da4:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001da6:	4c09      	ldr	r4, [pc, #36]	; (8001dcc <IOE_ReadMultiple+0x28>)
{
 8001da8:	b084      	sub	sp, #16
 8001daa:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001dac:	6820      	ldr	r0, [r4, #0]
 8001dae:	9002      	str	r0, [sp, #8]
 8001db0:	e9cd 2300 	strd	r2, r3, [sp]
 8001db4:	4806      	ldr	r0, [pc, #24]	; (8001dd0 <IOE_ReadMultiple+0x2c>)
 8001db6:	460a      	mov	r2, r1
 8001db8:	2301      	movs	r3, #1
 8001dba:	4661      	mov	r1, ip
 8001dbc:	f00a fbf6 	bl	800c5ac <HAL_I2C_Mem_Read>
}
 8001dc0:	3800      	subs	r0, #0
 8001dc2:	bf18      	it	ne
 8001dc4:	2001      	movne	r0, #1
 8001dc6:	b004      	add	sp, #16
 8001dc8:	bd10      	pop	{r4, pc}
 8001dca:	bf00      	nop
 8001dcc:	20000004 	.word	0x20000004
 8001dd0:	200001ec 	.word	0x200001ec

08001dd4 <IOE_Delay>:
 8001dd4:	f009 bbf4 	b.w	800b5c0 <HAL_Delay>

08001dd8 <LCD_IO_Init>:
{
 8001dd8:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dda:	4806      	ldr	r0, [pc, #24]	; (8001df4 <LCD_IO_Init+0x1c>)
 8001ddc:	2200      	movs	r2, #0
 8001dde:	2104      	movs	r1, #4
 8001de0:	f009 ffc4 	bl	800bd6c <HAL_GPIO_WritePin>
}
 8001de4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001de8:	4802      	ldr	r0, [pc, #8]	; (8001df4 <LCD_IO_Init+0x1c>)
 8001dea:	2201      	movs	r2, #1
 8001dec:	2104      	movs	r1, #4
 8001dee:	f009 bfbd 	b.w	800bd6c <HAL_GPIO_WritePin>
 8001df2:	bf00      	nop
 8001df4:	40020800 	.word	0x40020800

08001df8 <LCD_IO_WriteData>:
{
 8001df8:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001dfa:	4d10      	ldr	r5, [pc, #64]	; (8001e3c <LCD_IO_WriteData+0x44>)
{
 8001dfc:	b083      	sub	sp, #12
 8001dfe:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001e00:	2201      	movs	r2, #1
 8001e02:	480f      	ldr	r0, [pc, #60]	; (8001e40 <LCD_IO_WriteData+0x48>)
 8001e04:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e08:	f009 ffb0 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e0c:	4628      	mov	r0, r5
 8001e0e:	2200      	movs	r2, #0
 8001e10:	2104      	movs	r1, #4
 8001e12:	f009 ffab 	bl	800bd6c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e16:	4b0b      	ldr	r3, [pc, #44]	; (8001e44 <LCD_IO_WriteData+0x4c>)
 8001e18:	480b      	ldr	r0, [pc, #44]	; (8001e48 <LCD_IO_WriteData+0x50>)
 8001e1a:	681b      	ldr	r3, [r3, #0]
 8001e1c:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001e20:	f10d 0106 	add.w	r1, sp, #6
 8001e24:	2201      	movs	r2, #1
 8001e26:	f00c fb47 	bl	800e4b8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e2a:	2201      	movs	r2, #1
 8001e2c:	2104      	movs	r1, #4
 8001e2e:	4628      	mov	r0, r5
}
 8001e30:	b003      	add	sp, #12
 8001e32:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e36:	f009 bf99 	b.w	800bd6c <HAL_GPIO_WritePin>
 8001e3a:	bf00      	nop
 8001e3c:	40020800 	.word	0x40020800
 8001e40:	40020c00 	.word	0x40020c00
 8001e44:	20000008 	.word	0x20000008
 8001e48:	2000031c 	.word	0x2000031c

08001e4c <LCD_IO_WriteReg>:
{
 8001e4c:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e4e:	4d10      	ldr	r5, [pc, #64]	; (8001e90 <LCD_IO_WriteReg+0x44>)
{
 8001e50:	b083      	sub	sp, #12
 8001e52:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001e54:	2200      	movs	r2, #0
 8001e56:	480f      	ldr	r0, [pc, #60]	; (8001e94 <LCD_IO_WriteReg+0x48>)
 8001e58:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001e5c:	f009 ff86 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001e60:	4628      	mov	r0, r5
 8001e62:	2200      	movs	r2, #0
 8001e64:	2104      	movs	r1, #4
 8001e66:	f009 ff81 	bl	800bd6c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e6a:	4b0b      	ldr	r3, [pc, #44]	; (8001e98 <LCD_IO_WriteReg+0x4c>)
 8001e6c:	480b      	ldr	r0, [pc, #44]	; (8001e9c <LCD_IO_WriteReg+0x50>)
 8001e6e:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001e70:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001e74:	f10d 0106 	add.w	r1, sp, #6
 8001e78:	2201      	movs	r2, #1
 8001e7a:	f00c fb1d 	bl	800e4b8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e7e:	2201      	movs	r2, #1
 8001e80:	2104      	movs	r1, #4
 8001e82:	4628      	mov	r0, r5
}
 8001e84:	b003      	add	sp, #12
 8001e86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001e8a:	f009 bf6f 	b.w	800bd6c <HAL_GPIO_WritePin>
 8001e8e:	bf00      	nop
 8001e90:	40020800 	.word	0x40020800
 8001e94:	40020c00 	.word	0x40020c00
 8001e98:	20000008 	.word	0x20000008
 8001e9c:	2000031c 	.word	0x2000031c

08001ea0 <LCD_IO_ReadData>:
{
 8001ea0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ea4:	4e19      	ldr	r6, [pc, #100]	; (8001f0c <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ea6:	4f1a      	ldr	r7, [pc, #104]	; (8001f10 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ea8:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001f14 <LCD_IO_ReadData+0x74>
 8001eac:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001f18 <LCD_IO_ReadData+0x78>
{
 8001eb0:	b083      	sub	sp, #12
 8001eb2:	460c      	mov	r4, r1
 8001eb4:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001eb6:	2200      	movs	r2, #0
 8001eb8:	4630      	mov	r0, r6
 8001eba:	2104      	movs	r1, #4
 8001ebc:	f009 ff56 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001ec0:	4638      	mov	r0, r7
 8001ec2:	2200      	movs	r2, #0
 8001ec4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ec8:	f009 ff50 	bl	800bd6c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001ecc:	f8d9 3000 	ldr.w	r3, [r9]
 8001ed0:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001ed4:	a901      	add	r1, sp, #4
 8001ed6:	2201      	movs	r2, #1
 8001ed8:	4640      	mov	r0, r8
 8001eda:	f00c faed 	bl	800e4b8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001ede:	f8d9 3000 	ldr.w	r3, [r9]
 8001ee2:	4622      	mov	r2, r4
 8001ee4:	a901      	add	r1, sp, #4
 8001ee6:	4640      	mov	r0, r8
 8001ee8:	f00c fd8e 	bl	800ea08 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001eec:	4638      	mov	r0, r7
 8001eee:	2201      	movs	r2, #1
 8001ef0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001ef4:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ef6:	f009 ff39 	bl	800bd6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001efa:	4630      	mov	r0, r6
 8001efc:	2201      	movs	r2, #1
 8001efe:	2104      	movs	r1, #4
 8001f00:	f009 ff34 	bl	800bd6c <HAL_GPIO_WritePin>
}
 8001f04:	4620      	mov	r0, r4
 8001f06:	b003      	add	sp, #12
 8001f08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001f0c:	40020800 	.word	0x40020800
 8001f10:	40020c00 	.word	0x40020c00
 8001f14:	20000008 	.word	0x20000008
 8001f18:	2000031c 	.word	0x2000031c

08001f1c <LCD_Delay>:
  HAL_Delay(Delay);
 8001f1c:	f009 bb50 	b.w	800b5c0 <HAL_Delay>

08001f20 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001f20:	4b03      	ldr	r3, [pc, #12]	; (8001f30 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001f22:	6802      	ldr	r2, [r0, #0]
 8001f24:	429a      	cmp	r2, r3
 8001f26:	d000      	beq.n	8001f2a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001f28:	4770      	bx	lr
    HAL_IncTick();
 8001f2a:	f009 bb37 	b.w	800b59c <HAL_IncTick>
 8001f2e:	bf00      	nop
 8001f30:	40001000 	.word	0x40001000

08001f34 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001f34:	4770      	bx	lr
 8001f36:	bf00      	nop

08001f38 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001f38:	b410      	push	{r4}
 8001f3a:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001f3c:	4b15      	ldr	r3, [pc, #84]	; (8001f94 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f3e:	4916      	ldr	r1, [pc, #88]	; (8001f98 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001f40:	2400      	movs	r4, #0
 8001f42:	9400      	str	r4, [sp, #0]
 8001f44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f46:	f042 0220 	orr.w	r2, r2, #32
 8001f4a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f4e:	f002 0220 	and.w	r2, r2, #32
 8001f52:	9200      	str	r2, [sp, #0]
 8001f54:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f56:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001f58:	4a10      	ldr	r2, [pc, #64]	; (8001f9c <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001f5a:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001f5e:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001f60:	6808      	ldr	r0, [r1, #0]
 8001f62:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001f66:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001f68:	9401      	str	r4, [sp, #4]
 8001f6a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001f6c:	f041 0104 	orr.w	r1, r1, #4
 8001f70:	6319      	str	r1, [r3, #48]	; 0x30
 8001f72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f74:	f003 0304 	and.w	r3, r3, #4
 8001f78:	9301      	str	r3, [sp, #4]
 8001f7a:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001f7c:	6813      	ldr	r3, [r2, #0]
 8001f7e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001f82:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001f84:	6813      	ldr	r3, [r2, #0]
 8001f86:	f043 030c 	orr.w	r3, r3, #12
 8001f8a:	6013      	str	r3, [r2, #0]
}
 8001f8c:	b003      	add	sp, #12
 8001f8e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f92:	4770      	bx	lr
 8001f94:	40023800 	.word	0x40023800
 8001f98:	40021400 	.word	0x40021400
 8001f9c:	40020800 	.word	0x40020800

08001fa0 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001fa0:	b410      	push	{r4}
 8001fa2:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fa4:	4a0e      	ldr	r2, [pc, #56]	; (8001fe0 <MEAS_timer_init+0x40>)
 8001fa6:	2000      	movs	r0, #0
 8001fa8:	9001      	str	r0, [sp, #4]
 8001faa:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001fac:	f041 0101 	orr.w	r1, r1, #1
 8001fb0:	6411      	str	r1, [r2, #64]	; 0x40
 8001fb2:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fb4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fb8:	f002 0201 	and.w	r2, r2, #1
 8001fbc:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fbe:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001fc2:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001fc4:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001fc6:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001fc8:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001fca:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001fcc:	4905      	ldr	r1, [pc, #20]	; (8001fe4 <MEAS_timer_init+0x44>)
 8001fce:	f042 0220 	orr.w	r2, r2, #32
 8001fd2:	605a      	str	r2, [r3, #4]
 8001fd4:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001fd8:	b003      	add	sp, #12
 8001fda:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001fde:	4770      	bx	lr
 8001fe0:	40023800 	.word	0x40023800
 8001fe4:	e000e100 	.word	0xe000e100

08001fe8 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001fe8:	b410      	push	{r4}
 8001fea:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001fec:	4a36      	ldr	r2, [pc, #216]	; (80020c8 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001fee:	4b37      	ldr	r3, [pc, #220]	; (80020cc <MEAS_ADC3_scan_init+0xe4>)
 8001ff0:	4c37      	ldr	r4, [pc, #220]	; (80020d0 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ff2:	2100      	movs	r1, #0
 8001ff4:	9100      	str	r1, [sp, #0]
 8001ff6:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001ff8:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001ffc:	6450      	str	r0, [r2, #68]	; 0x44
 8001ffe:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002000:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8002004:	9000      	str	r0, [sp, #0]
 8002006:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8002008:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800200a:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800200e:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8002010:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002012:	f040 0004 	orr.w	r0, r0, #4
 8002016:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8002018:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800201a:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 800201e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8002020:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002022:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8002026:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8002028:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800202a:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800202e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8002030:	6858      	ldr	r0, [r3, #4]
 8002032:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8002036:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8002038:	6898      	ldr	r0, [r3, #8]
 800203a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800203e:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8002040:	6898      	ldr	r0, [r3, #8]
 8002042:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8002046:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8002048:	6898      	ldr	r0, [r3, #8]
 800204a:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800204e:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8002050:	9101      	str	r1, [sp, #4]
 8002052:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8002054:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8002058:	6310      	str	r0, [r2, #48]	; 0x30
 800205a:	6b12      	ldr	r2, [r2, #48]	; 0x30
 800205c:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8002060:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8002062:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8002066:	9a01      	ldr	r2, [sp, #4]
 8002068:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800206c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800206e:	f022 0201 	bic.w	r2, r2, #1
 8002072:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8002074:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002076:	07d2      	lsls	r2, r2, #31
 8002078:	d4fc      	bmi.n	8002074 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800207a:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800207c:	4815      	ldr	r0, [pc, #84]	; (80020d4 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800207e:	4916      	ldr	r1, [pc, #88]	; (80020d8 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8002080:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002084:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8002086:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002088:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800208c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800208e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002090:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8002094:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8002096:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002098:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800209c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800209e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020a0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80020a4:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 80020a6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020a8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80020ac:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80020ae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80020b0:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 80020b4:	f042 0210 	orr.w	r2, r2, #16
 80020b8:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 80020ba:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80020bc:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80020be:	6359      	str	r1, [r3, #52]	; 0x34
}
 80020c0:	b003      	add	sp, #12
 80020c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80020c6:	4770      	bx	lr
 80020c8:	40023800 	.word	0x40023800
 80020cc:	40012200 	.word	0x40012200
 80020d0:	e000e100 	.word	0xe000e100
 80020d4:	4001224c 	.word	0x4001224c
 80020d8:	20000494 	.word	0x20000494

080020dc <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 80020dc:	4b1b      	ldr	r3, [pc, #108]	; (800214c <DMA2_Stream1_IRQHandler+0x70>)
 80020de:	681a      	ldr	r2, [r3, #0]
 80020e0:	0511      	lsls	r1, r2, #20
 80020e2:	d400      	bmi.n	80020e6 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 80020e4:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020e6:	4a1a      	ldr	r2, [pc, #104]	; (8002150 <DMA2_Stream1_IRQHandler+0x74>)
 80020e8:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80020ec:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80020f0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80020f4:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80020f8:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 80020fc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80020fe:	f022 0201 	bic.w	r2, r2, #1
 8002102:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8002104:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002106:	07d2      	lsls	r2, r2, #31
 8002108:	d4fc      	bmi.n	8002104 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800210a:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800210c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8002110:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8002114:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8002116:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002118:	490e      	ldr	r1, [pc, #56]	; (8002154 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800211a:	f023 0301 	bic.w	r3, r3, #1
 800211e:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002120:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002122:	4b0d      	ldr	r3, [pc, #52]	; (8002158 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8002124:	f020 0001 	bic.w	r0, r0, #1
 8002128:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 800212a:	6888      	ldr	r0, [r1, #8]
 800212c:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8002130:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8002132:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002134:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8002138:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 800213a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800213c:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8002140:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8002142:	6813      	ldr	r3, [r2, #0]
 8002144:	f023 0301 	bic.w	r3, r3, #1
 8002148:	6013      	str	r3, [r2, #0]
}
 800214a:	4770      	bx	lr
 800214c:	40026400 	.word	0x40026400
 8002150:	e000e100 	.word	0xe000e100
 8002154:	40012200 	.word	0x40012200
 8002158:	40023800 	.word	0x40023800

0800215c <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 800215c:	b510      	push	{r4, lr}
        buffer[i] = 0;
 800215e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8002162:	2100      	movs	r1, #0
 8002164:	480f      	ldr	r0, [pc, #60]	; (80021a4 <MEAS_start_measure+0x48>)
 8002166:	f02b fdf0 	bl	802dd4a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 800216a:	f7ff ff3d 	bl	8001fe8 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800216e:	4a0e      	ldr	r2, [pc, #56]	; (80021a8 <MEAS_start_measure+0x4c>)
 8002170:	490e      	ldr	r1, [pc, #56]	; (80021ac <MEAS_start_measure+0x50>)
 8002172:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002174:	480e      	ldr	r0, [pc, #56]	; (80021b0 <MEAS_start_measure+0x54>)
 8002176:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800217a:	f043 0301 	orr.w	r3, r3, #1
 800217e:	6293      	str	r3, [r2, #40]	; 0x28
 8002180:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002184:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002186:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002188:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800218c:	f043 0301 	orr.w	r3, r3, #1
 8002190:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002192:	680b      	ldr	r3, [r1, #0]
 8002194:	f043 0301 	orr.w	r3, r3, #1
 8002198:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800219a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800219c:	07db      	lsls	r3, r3, #31
 800219e:	d4fc      	bmi.n	800219a <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 80021a0:	4800      	ldr	r0, [pc, #0]	; (80021a4 <MEAS_start_measure+0x48>)
 80021a2:	bd10      	pop	{r4, pc}
 80021a4:	20000494 	.word	0x20000494
 80021a8:	40026400 	.word	0x40026400
 80021ac:	e000e100 	.word	0xe000e100
 80021b0:	40012200 	.word	0x40012200

080021b4 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 80021b4:	2004      	movs	r0, #4
 80021b6:	4770      	bx	lr

080021b8 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 80021b8:	2040      	movs	r0, #64	; 0x40
 80021ba:	4770      	bx	lr

080021bc <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 80021bc:	f44f 7020 	mov.w	r0, #640	; 0x280
 80021c0:	4770      	bx	lr
 80021c2:	bf00      	nop

080021c4 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80021c4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80021c6:	4b0e      	ldr	r3, [pc, #56]	; (8002200 <HAL_MspInit+0x3c>)
 80021c8:	2200      	movs	r2, #0
 80021ca:	9200      	str	r2, [sp, #0]
 80021cc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80021ce:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80021d2:	6459      	str	r1, [r3, #68]	; 0x44
 80021d4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80021d6:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80021da:	9000      	str	r0, [sp, #0]
 80021dc:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80021de:	9201      	str	r2, [sp, #4]
 80021e0:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80021e2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80021e6:	6418      	str	r0, [r3, #64]	; 0x40
 80021e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80021ee:	9301      	str	r3, [sp, #4]
 80021f0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021f2:	210f      	movs	r1, #15
 80021f4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80021f8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80021fa:	f009 ba05 	b.w	800b608 <HAL_NVIC_SetPriority>
 80021fe:	bf00      	nop
 8002200:	40023800 	.word	0x40023800

08002204 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002204:	4b0b      	ldr	r3, [pc, #44]	; (8002234 <HAL_CRC_MspInit+0x30>)
 8002206:	6802      	ldr	r2, [r0, #0]
 8002208:	429a      	cmp	r2, r3
 800220a:	d000      	beq.n	800220e <HAL_CRC_MspInit+0xa>
 800220c:	4770      	bx	lr
{
 800220e:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002210:	2200      	movs	r2, #0
 8002212:	9201      	str	r2, [sp, #4]
 8002214:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8002218:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800221c:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8002220:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8002224:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002226:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800222a:	9301      	str	r3, [sp, #4]
 800222c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800222e:	b002      	add	sp, #8
 8002230:	4770      	bx	lr
 8002232:	bf00      	nop
 8002234:	40023000 	.word	0x40023000

08002238 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002238:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 800223c:	4b2e      	ldr	r3, [pc, #184]	; (80022f8 <HAL_I2C_MspInit+0xc0>)
 800223e:	6802      	ldr	r2, [r0, #0]
{
 8002240:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002242:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8002244:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002246:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800224a:	e9cd 4406 	strd	r4, r4, [sp, #24]
 800224e:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8002250:	d002      	beq.n	8002258 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002252:	b00a      	add	sp, #40	; 0x28
 8002254:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002258:	4d28      	ldr	r5, [pc, #160]	; (80022fc <HAL_I2C_MspInit+0xc4>)
 800225a:	9401      	str	r4, [sp, #4]
 800225c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800225e:	4828      	ldr	r0, [pc, #160]	; (8002300 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002260:	f043 0304 	orr.w	r3, r3, #4
 8002264:	632b      	str	r3, [r5, #48]	; 0x30
 8002266:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002268:	f003 0304 	and.w	r3, r3, #4
 800226c:	9301      	str	r3, [sp, #4]
 800226e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002270:	9402      	str	r4, [sp, #8]
 8002272:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002274:	f043 0301 	orr.w	r3, r3, #1
 8002278:	632b      	str	r3, [r5, #48]	; 0x30
 800227a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800227c:	f003 0301 	and.w	r3, r3, #1
 8002280:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002282:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002286:	f04f 0801 	mov.w	r8, #1
 800228a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800228e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002290:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002292:	2312      	movs	r3, #18
 8002294:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002298:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800229c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800229e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022a0:	f009 fc20 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022a4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022a6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80022aa:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022ac:	4815      	ldr	r0, [pc, #84]	; (8002304 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80022ae:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80022b0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80022b4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022b8:	f009 fc14 	bl	800bae4 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022bc:	9403      	str	r4, [sp, #12]
 80022be:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80022c0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022c4:	642b      	str	r3, [r5, #64]	; 0x40
 80022c6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80022c8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022cc:	4622      	mov	r2, r4
 80022ce:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022d0:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022d2:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80022d4:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80022d6:	f009 f997 	bl	800b608 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80022da:	2048      	movs	r0, #72	; 0x48
 80022dc:	f009 f9d2 	bl	800b684 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80022e0:	6a2b      	ldr	r3, [r5, #32]
 80022e2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80022e6:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80022e8:	6a2b      	ldr	r3, [r5, #32]
 80022ea:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80022ee:	622b      	str	r3, [r5, #32]
}
 80022f0:	b00a      	add	sp, #40	; 0x28
 80022f2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80022f6:	bf00      	nop
 80022f8:	40005c00 	.word	0x40005c00
 80022fc:	40023800 	.word	0x40023800
 8002300:	40020800 	.word	0x40020800
 8002304:	40020000 	.word	0x40020000

08002308 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002308:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800230c:	4604      	mov	r4, r0
 800230e:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002310:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002312:	2230      	movs	r2, #48	; 0x30
 8002314:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002316:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800231a:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800231e:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002320:	f02b fd13 	bl	802dd4a <memset>
  if(hltdc->Instance==LTDC)
 8002324:	4b67      	ldr	r3, [pc, #412]	; (80024c4 <HAL_LTDC_MspInit+0x1bc>)
 8002326:	6822      	ldr	r2, [r4, #0]
 8002328:	429a      	cmp	r2, r3
 800232a:	d002      	beq.n	8002332 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800232c:	b01a      	add	sp, #104	; 0x68
 800232e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002332:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002334:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002336:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002338:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800233a:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800233c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002340:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002342:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002344:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002346:	f00b fe37 	bl	800dfb8 <HAL_RCCEx_PeriphCLKConfig>
 800234a:	2800      	cmp	r0, #0
 800234c:	f040 80b7 	bne.w	80024be <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002350:	4b5d      	ldr	r3, [pc, #372]	; (80024c8 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002352:	485e      	ldr	r0, [pc, #376]	; (80024cc <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002354:	2400      	movs	r4, #0
 8002356:	9401      	str	r4, [sp, #4]
 8002358:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800235a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800235e:	645a      	str	r2, [r3, #68]	; 0x44
 8002360:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002362:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8002366:	9201      	str	r2, [sp, #4]
 8002368:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800236a:	9402      	str	r4, [sp, #8]
 800236c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800236e:	f042 0220 	orr.w	r2, r2, #32
 8002372:	631a      	str	r2, [r3, #48]	; 0x30
 8002374:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002376:	f002 0220 	and.w	r2, r2, #32
 800237a:	9202      	str	r2, [sp, #8]
 800237c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800237e:	9403      	str	r4, [sp, #12]
 8002380:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002382:	f042 0201 	orr.w	r2, r2, #1
 8002386:	631a      	str	r2, [r3, #48]	; 0x30
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f002 0201 	and.w	r2, r2, #1
 800238e:	9203      	str	r2, [sp, #12]
 8002390:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002392:	9404      	str	r4, [sp, #16]
 8002394:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002396:	f042 0202 	orr.w	r2, r2, #2
 800239a:	631a      	str	r2, [r3, #48]	; 0x30
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f002 0202 	and.w	r2, r2, #2
 80023a2:	9204      	str	r2, [sp, #16]
 80023a4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80023a6:	9405      	str	r4, [sp, #20]
 80023a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023aa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80023ae:	631a      	str	r2, [r3, #48]	; 0x30
 80023b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023b2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80023b6:	9205      	str	r2, [sp, #20]
 80023b8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80023ba:	9406      	str	r4, [sp, #24]
 80023bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023be:	f042 0204 	orr.w	r2, r2, #4
 80023c2:	631a      	str	r2, [r3, #48]	; 0x30
 80023c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023c6:	f002 0204 	and.w	r2, r2, #4
 80023ca:	9206      	str	r2, [sp, #24]
 80023cc:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023ce:	9407      	str	r4, [sp, #28]
 80023d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023d2:	f042 0208 	orr.w	r2, r2, #8
 80023d6:	631a      	str	r2, [r3, #48]	; 0x30
 80023d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023da:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80023de:	2600      	movs	r6, #0
 80023e0:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023e2:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023e4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80023e8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80023ec:	2302      	movs	r3, #2
 80023ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023f2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80023f6:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80023f8:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023fa:	f009 fb73 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80023fe:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002400:	f641 0258 	movw	r2, #6232	; 0x1858
 8002404:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002406:	4832      	ldr	r0, [pc, #200]	; (80024d0 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002408:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800240a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800240e:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002412:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002416:	f009 fb65 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800241a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800241c:	2203      	movs	r2, #3
 800241e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002420:	482c      	ldr	r0, [pc, #176]	; (80024d4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002422:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002426:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800242a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800242e:	f009 fb59 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002432:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002434:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002438:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800243a:	4826      	ldr	r0, [pc, #152]	; (80024d4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800243c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800243e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002442:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002446:	f009 fb4d 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800244a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800244c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002450:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002452:	4821      	ldr	r0, [pc, #132]	; (80024d8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002454:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002456:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800245a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800245e:	f009 fb41 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002462:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002464:	22c0      	movs	r2, #192	; 0xc0
 8002466:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002468:	481c      	ldr	r0, [pc, #112]	; (80024dc <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800246a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800246c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002470:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002474:	f009 fb36 	bl	800bae4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002478:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800247a:	2208      	movs	r2, #8
 800247c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800247e:	4818      	ldr	r0, [pc, #96]	; (80024e0 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002480:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002482:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002486:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800248a:	f009 fb2b 	bl	800bae4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800248e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002490:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002492:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002496:	4810      	ldr	r0, [pc, #64]	; (80024d8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002498:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800249c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80024a0:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80024a4:	f009 fb1e 	bl	800bae4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80024a8:	4622      	mov	r2, r4
 80024aa:	2105      	movs	r1, #5
 80024ac:	2058      	movs	r0, #88	; 0x58
 80024ae:	f009 f8ab 	bl	800b608 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80024b2:	2058      	movs	r0, #88	; 0x58
 80024b4:	f009 f8e6 	bl	800b684 <HAL_NVIC_EnableIRQ>
}
 80024b8:	b01a      	add	sp, #104	; 0x68
 80024ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80024be:	f7ff fd39 	bl	8001f34 <Error_Handler>
 80024c2:	e745      	b.n	8002350 <HAL_LTDC_MspInit+0x48>
 80024c4:	40016800 	.word	0x40016800
 80024c8:	40023800 	.word	0x40023800
 80024cc:	40021400 	.word	0x40021400
 80024d0:	40020000 	.word	0x40020000
 80024d4:	40020400 	.word	0x40020400
 80024d8:	40021800 	.word	0x40021800
 80024dc:	40020800 	.word	0x40020800
 80024e0:	40020c00 	.word	0x40020c00
 80024e4:	00000000 	.word	0x00000000

080024e8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80024e8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80024ea:	4a1b      	ldr	r2, [pc, #108]	; (8002558 <HAL_SPI_MspInit+0x70>)
 80024ec:	6801      	ldr	r1, [r0, #0]
{
 80024ee:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024f0:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80024f2:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024f4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80024f8:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80024fc:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80024fe:	d001      	beq.n	8002504 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002500:	b008      	add	sp, #32
 8002502:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002504:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002508:	9300      	str	r3, [sp, #0]
 800250a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800250c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002510:	6450      	str	r0, [r2, #68]	; 0x44
 8002512:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002514:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002518:	9000      	str	r0, [sp, #0]
 800251a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800251c:	9301      	str	r3, [sp, #4]
 800251e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002520:	480e      	ldr	r0, [pc, #56]	; (800255c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002522:	f043 0320 	orr.w	r3, r3, #32
 8002526:	6313      	str	r3, [r2, #48]	; 0x30
 8002528:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800252a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002550 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800252e:	f003 0320 	and.w	r3, r3, #32
 8002532:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002534:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002536:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002538:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800253a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800253e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002542:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002544:	f009 face 	bl	800bae4 <HAL_GPIO_Init>
}
 8002548:	b008      	add	sp, #32
 800254a:	bd10      	pop	{r4, pc}
 800254c:	f3af 8000 	nop.w
 8002550:	00000380 	.word	0x00000380
 8002554:	00000002 	.word	0x00000002
 8002558:	40015000 	.word	0x40015000
 800255c:	40021400 	.word	0x40021400

08002560 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 8002560:	6803      	ldr	r3, [r0, #0]
 8002562:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8002566:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 8002568:	d018      	beq.n	800259c <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 800256a:	4a22      	ldr	r2, [pc, #136]	; (80025f4 <HAL_TIM_Base_MspInit+0x94>)
 800256c:	4293      	cmp	r3, r2
 800256e:	d007      	beq.n	8002580 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 8002570:	4a21      	ldr	r2, [pc, #132]	; (80025f8 <HAL_TIM_Base_MspInit+0x98>)
 8002572:	4293      	cmp	r3, r2
 8002574:	d021      	beq.n	80025ba <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 8002576:	4a21      	ldr	r2, [pc, #132]	; (80025fc <HAL_TIM_Base_MspInit+0x9c>)
 8002578:	4293      	cmp	r3, r2
 800257a:	d02c      	beq.n	80025d6 <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 800257c:	b004      	add	sp, #16
 800257e:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002580:	4b1f      	ldr	r3, [pc, #124]	; (8002600 <HAL_TIM_Base_MspInit+0xa0>)
 8002582:	2200      	movs	r2, #0
 8002584:	9201      	str	r2, [sp, #4]
 8002586:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002588:	f042 0202 	orr.w	r2, r2, #2
 800258c:	641a      	str	r2, [r3, #64]	; 0x40
 800258e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002590:	f003 0302 	and.w	r3, r3, #2
 8002594:	9301      	str	r3, [sp, #4]
 8002596:	9b01      	ldr	r3, [sp, #4]
}
 8002598:	b004      	add	sp, #16
 800259a:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 800259c:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80025a0:	2200      	movs	r2, #0
 80025a2:	9200      	str	r2, [sp, #0]
 80025a4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025a6:	f042 0201 	orr.w	r2, r2, #1
 80025aa:	641a      	str	r2, [r3, #64]	; 0x40
 80025ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025ae:	f003 0301 	and.w	r3, r3, #1
 80025b2:	9300      	str	r3, [sp, #0]
 80025b4:	9b00      	ldr	r3, [sp, #0]
}
 80025b6:	b004      	add	sp, #16
 80025b8:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 80025ba:	4b11      	ldr	r3, [pc, #68]	; (8002600 <HAL_TIM_Base_MspInit+0xa0>)
 80025bc:	2200      	movs	r2, #0
 80025be:	9202      	str	r2, [sp, #8]
 80025c0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80025c2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80025c6:	645a      	str	r2, [r3, #68]	; 0x44
 80025c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025ca:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80025ce:	9302      	str	r3, [sp, #8]
 80025d0:	9b02      	ldr	r3, [sp, #8]
}
 80025d2:	b004      	add	sp, #16
 80025d4:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 80025d6:	4b0a      	ldr	r3, [pc, #40]	; (8002600 <HAL_TIM_Base_MspInit+0xa0>)
 80025d8:	2200      	movs	r2, #0
 80025da:	9203      	str	r2, [sp, #12]
 80025dc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80025de:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80025e2:	641a      	str	r2, [r3, #64]	; 0x40
 80025e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80025ea:	9303      	str	r3, [sp, #12]
 80025ec:	9b03      	ldr	r3, [sp, #12]
}
 80025ee:	b004      	add	sp, #16
 80025f0:	4770      	bx	lr
 80025f2:	bf00      	nop
 80025f4:	40000400 	.word	0x40000400
 80025f8:	40014000 	.word	0x40014000
 80025fc:	40002000 	.word	0x40002000
 8002600:	40023800 	.word	0x40023800
 8002604:	00000000 	.word	0x00000000

08002608 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002608:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 800260a:	6802      	ldr	r2, [r0, #0]
 800260c:	4924      	ldr	r1, [pc, #144]	; (80026a0 <HAL_TIM_MspPostInit+0x98>)
{
 800260e:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002610:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 8002612:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002614:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002618:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800261c:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 800261e:	d005      	beq.n	800262c <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8002620:	4920      	ldr	r1, [pc, #128]	; (80026a4 <HAL_TIM_MspPostInit+0x9c>)
 8002622:	428a      	cmp	r2, r1
 8002624:	d01a      	beq.n	800265c <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8002626:	b009      	add	sp, #36	; 0x24
 8002628:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800262c:	4a1e      	ldr	r2, [pc, #120]	; (80026a8 <HAL_TIM_MspPostInit+0xa0>)
 800262e:	9300      	str	r3, [sp, #0]
 8002630:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002632:	481e      	ldr	r0, [pc, #120]	; (80026ac <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002634:	f043 0301 	orr.w	r3, r3, #1
 8002638:	6313      	str	r3, [r2, #48]	; 0x30
 800263a:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800263c:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8002690 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002640:	f003 0301 	and.w	r3, r3, #1
 8002644:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002646:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002648:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800264a:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800264e:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8002650:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002652:	f009 fa47 	bl	800bae4 <HAL_GPIO_Init>
}
 8002656:	b009      	add	sp, #36	; 0x24
 8002658:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800265c:	4a12      	ldr	r2, [pc, #72]	; (80026a8 <HAL_TIM_MspPostInit+0xa0>)
 800265e:	9301      	str	r3, [sp, #4]
 8002660:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8002662:	f043 0301 	orr.w	r3, r3, #1
 8002666:	6313      	str	r3, [r2, #48]	; 0x30
 8002668:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 800266a:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 8002698 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800266e:	f003 0301 	and.w	r3, r3, #1
 8002672:	9301      	str	r3, [sp, #4]
 8002674:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8002676:	480d      	ldr	r0, [pc, #52]	; (80026ac <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002678:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 800267a:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 800267c:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 800267e:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002682:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8002684:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8002686:	f009 fa2d 	bl	800bae4 <HAL_GPIO_Init>
}
 800268a:	b009      	add	sp, #36	; 0x24
 800268c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002690:	00000004 	.word	0x00000004
 8002694:	00000002 	.word	0x00000002
 8002698:	00000080 	.word	0x00000080
 800269c:	00000002 	.word	0x00000002
 80026a0:	40014000 	.word	0x40014000
 80026a4:	40002000 	.word	0x40002000
 80026a8:	40023800 	.word	0x40023800
 80026ac:	40020000 	.word	0x40020000

080026b0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80026b2:	4b2b      	ldr	r3, [pc, #172]	; (8002760 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80026b4:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 80026b6:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80026b8:	2200      	movs	r2, #0
 80026ba:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80026bc:	2c00      	cmp	r4, #0
 80026be:	d14c      	bne.n	800275a <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80026c0:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80026c2:	4a28      	ldr	r2, [pc, #160]	; (8002764 <HAL_SDRAM_MspInit+0xb4>)
 80026c4:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80026c6:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026c8:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026ca:	4827      	ldr	r0, [pc, #156]	; (8002768 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80026cc:	433b      	orrs	r3, r7
 80026ce:	6393      	str	r3, [r2, #56]	; 0x38
 80026d0:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80026d2:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80026d4:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026d6:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026d8:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80026dc:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026de:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80026e0:	2302      	movs	r3, #2
 80026e2:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026e6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80026ea:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80026ec:	f009 f9fa 	bl	800bae4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f0:	481e      	ldr	r0, [pc, #120]	; (800276c <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80026f2:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80026f4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80026f6:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80026f8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80026fc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002700:	f009 f9f0 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002704:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002708:	4819      	ldr	r0, [pc, #100]	; (8002770 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800270a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800270c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800270e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002712:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002716:	f009 f9e5 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800271a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800271e:	4815      	ldr	r0, [pc, #84]	; (8002774 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002720:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002722:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002724:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002728:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800272c:	f009 f9da 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002730:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002734:	4810      	ldr	r0, [pc, #64]	; (8002778 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002736:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002738:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800273a:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800273e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002742:	f009 f9cf 	bl	800bae4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002746:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002748:	480c      	ldr	r0, [pc, #48]	; (800277c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800274a:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800274c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800274e:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002752:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002754:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002756:	f009 f9c5 	bl	800bae4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800275a:	b009      	add	sp, #36	; 0x24
 800275c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800275e:	bf00      	nop
 8002760:	20000894 	.word	0x20000894
 8002764:	40023800 	.word	0x40023800
 8002768:	40021400 	.word	0x40021400
 800276c:	40020800 	.word	0x40020800
 8002770:	40021800 	.word	0x40021800
 8002774:	40021000 	.word	0x40021000
 8002778:	40020c00 	.word	0x40020c00
 800277c:	40020400 	.word	0x40020400

08002780 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002780:	b570      	push	{r4, r5, r6, lr}
 8002782:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002784:	4b23      	ldr	r3, [pc, #140]	; (8002814 <HAL_InitTick+0x94>)
 8002786:	2200      	movs	r2, #0
 8002788:	9202      	str	r2, [sp, #8]
 800278a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800278c:	f042 0210 	orr.w	r2, r2, #16
 8002790:	641a      	str	r2, [r3, #64]	; 0x40
 8002792:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002794:	f003 0310 	and.w	r3, r3, #16
 8002798:	9302      	str	r3, [sp, #8]
{
 800279a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800279c:	a901      	add	r1, sp, #4
 800279e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80027a0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80027a2:	f00b fbe7 	bl	800df74 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80027a6:	9b06      	ldr	r3, [sp, #24]
 80027a8:	b9d3      	cbnz	r3, 80027e0 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80027aa:	f00b fbd3 	bl	800df54 <HAL_RCC_GetPCLK1Freq>
 80027ae:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027b0:	4a19      	ldr	r2, [pc, #100]	; (8002818 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80027b2:	4c1a      	ldr	r4, [pc, #104]	; (800281c <HAL_InitTick+0x9c>)
 80027b4:	491a      	ldr	r1, [pc, #104]	; (8002820 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80027b6:	fba2 2303 	umull	r2, r3, r2, r3
 80027ba:	0c9b      	lsrs	r3, r3, #18
 80027bc:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80027be:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80027c0:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80027c4:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027c6:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80027ca:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027cc:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80027ce:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80027d0:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80027d2:	f00c f9ff 	bl	800ebd4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80027d6:	4606      	mov	r6, r0
 80027d8:	b130      	cbz	r0, 80027e8 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80027da:	4630      	mov	r0, r6
 80027dc:	b008      	add	sp, #32
 80027de:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80027e0:	f00b fbb8 	bl	800df54 <HAL_RCC_GetPCLK1Freq>
 80027e4:	0043      	lsls	r3, r0, #1
 80027e6:	e7e3      	b.n	80027b0 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80027e8:	4620      	mov	r0, r4
 80027ea:	f00c fa81 	bl	800ecf0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80027ee:	4606      	mov	r6, r0
 80027f0:	2800      	cmp	r0, #0
 80027f2:	d1f2      	bne.n	80027da <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80027f4:	2036      	movs	r0, #54	; 0x36
 80027f6:	f008 ff45 	bl	800b684 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80027fa:	2d0f      	cmp	r5, #15
 80027fc:	d901      	bls.n	8002802 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 80027fe:	2601      	movs	r6, #1
 8002800:	e7eb      	b.n	80027da <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002802:	4632      	mov	r2, r6
 8002804:	4629      	mov	r1, r5
 8002806:	2036      	movs	r0, #54	; 0x36
 8002808:	f008 fefe 	bl	800b608 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800280c:	4b05      	ldr	r3, [pc, #20]	; (8002824 <HAL_InitTick+0xa4>)
 800280e:	601d      	str	r5, [r3, #0]
 8002810:	e7e3      	b.n	80027da <HAL_InitTick+0x5a>
 8002812:	bf00      	nop
 8002814:	40023800 	.word	0x40023800
 8002818:	431bde83 	.word	0x431bde83
 800281c:	20000898 	.word	0x20000898
 8002820:	40001000 	.word	0x40001000
 8002824:	20000084 	.word	0x20000084

08002828 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002828:	4770      	bx	lr
 800282a:	bf00      	nop

0800282c <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800282c:	e7fe      	b.n	800282c <HardFault_Handler>
 800282e:	bf00      	nop

08002830 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002830:	e7fe      	b.n	8002830 <MemManage_Handler>
 8002832:	bf00      	nop

08002834 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002834:	e7fe      	b.n	8002834 <BusFault_Handler>
 8002836:	bf00      	nop

08002838 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002838:	e7fe      	b.n	8002838 <UsageFault_Handler>
 800283a:	bf00      	nop

0800283c <DebugMon_Handler>:
 800283c:	4770      	bx	lr
 800283e:	bf00      	nop

08002840 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002840:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8002842:	20c8      	movs	r0, #200	; 0xc8
 8002844:	f008 febc 	bl	800b5c0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002848:	4804      	ldr	r0, [pc, #16]	; (800285c <EXTI3_IRQHandler+0x1c>)
 800284a:	2200      	movs	r2, #0
 800284c:	2120      	movs	r1, #32
 800284e:	f009 fa8d 	bl	800bd6c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8002852:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8002856:	2008      	movs	r0, #8
 8002858:	f009 ba98 	b.w	800bd8c <HAL_GPIO_EXTI_IRQHandler>
 800285c:	40021000 	.word	0x40021000

08002860 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002860:	4801      	ldr	r0, [pc, #4]	; (8002868 <TIM6_DAC_IRQHandler+0x8>)
 8002862:	f00c be25 	b.w	800f4b0 <HAL_TIM_IRQHandler>
 8002866:	bf00      	nop
 8002868:	20000898 	.word	0x20000898

0800286c <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 800286c:	4801      	ldr	r0, [pc, #4]	; (8002874 <I2C3_EV_IRQHandler+0x8>)
 800286e:	f00a b9ed 	b.w	800cc4c <HAL_I2C_EV_IRQHandler>
 8002872:	bf00      	nop
 8002874:	200001ec 	.word	0x200001ec

08002878 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002878:	4801      	ldr	r0, [pc, #4]	; (8002880 <LTDC_IRQHandler+0x8>)
 800287a:	f00a bf61 	b.w	800d740 <HAL_LTDC_IRQHandler>
 800287e:	bf00      	nop
 8002880:	20000240 	.word	0x20000240

08002884 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002884:	2001      	movs	r0, #1
 8002886:	4770      	bx	lr

08002888 <_kill>:

int _kill(int pid, int sig)
{
 8002888:	b508      	push	{r3, lr}
	errno = EINVAL;
 800288a:	f02b fb57 	bl	802df3c <__errno>
 800288e:	2316      	movs	r3, #22
 8002890:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002892:	f04f 30ff 	mov.w	r0, #4294967295
 8002896:	bd08      	pop	{r3, pc}

08002898 <_exit>:

void _exit (int status)
{
 8002898:	b508      	push	{r3, lr}
	errno = EINVAL;
 800289a:	f02b fb4f 	bl	802df3c <__errno>
 800289e:	2316      	movs	r3, #22
 80028a0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80028a2:	e7fe      	b.n	80028a2 <_exit+0xa>

080028a4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80028a4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028a6:	1e16      	subs	r6, r2, #0
 80028a8:	dd07      	ble.n	80028ba <_read+0x16>
 80028aa:	460c      	mov	r4, r1
 80028ac:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80028ae:	f3af 8000 	nop.w
 80028b2:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028b6:	42a5      	cmp	r5, r4
 80028b8:	d1f9      	bne.n	80028ae <_read+0xa>
	}

return len;
}
 80028ba:	4630      	mov	r0, r6
 80028bc:	bd70      	pop	{r4, r5, r6, pc}
 80028be:	bf00      	nop

080028c0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80028c0:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028c2:	1e16      	subs	r6, r2, #0
 80028c4:	dd07      	ble.n	80028d6 <_write+0x16>
 80028c6:	460c      	mov	r4, r1
 80028c8:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80028ca:	f814 0b01 	ldrb.w	r0, [r4], #1
 80028ce:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80028d2:	42ac      	cmp	r4, r5
 80028d4:	d1f9      	bne.n	80028ca <_write+0xa>
	}
	return len;
}
 80028d6:	4630      	mov	r0, r6
 80028d8:	bd70      	pop	{r4, r5, r6, pc}
 80028da:	bf00      	nop

080028dc <_close>:

int _close(int file)
{
	return -1;
}
 80028dc:	f04f 30ff 	mov.w	r0, #4294967295
 80028e0:	4770      	bx	lr
 80028e2:	bf00      	nop

080028e4 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80028e4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80028e8:	604b      	str	r3, [r1, #4]
	return 0;
}
 80028ea:	2000      	movs	r0, #0
 80028ec:	4770      	bx	lr
 80028ee:	bf00      	nop

080028f0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80028f0:	2001      	movs	r0, #1
 80028f2:	4770      	bx	lr

080028f4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80028f4:	2000      	movs	r0, #0
 80028f6:	4770      	bx	lr

080028f8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80028f8:	4a0b      	ldr	r2, [pc, #44]	; (8002928 <_sbrk+0x30>)
{
 80028fa:	b508      	push	{r3, lr}
 80028fc:	4603      	mov	r3, r0
	if (heap_end == 0)
 80028fe:	6810      	ldr	r0, [r2, #0]
 8002900:	b128      	cbz	r0, 800290e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002902:	4403      	add	r3, r0
 8002904:	4669      	mov	r1, sp
 8002906:	428b      	cmp	r3, r1
 8002908:	d807      	bhi.n	800291a <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800290a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 800290c:	bd08      	pop	{r3, pc}
		heap_end = &end;
 800290e:	4807      	ldr	r0, [pc, #28]	; (800292c <_sbrk+0x34>)
 8002910:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002912:	4403      	add	r3, r0
 8002914:	4669      	mov	r1, sp
 8002916:	428b      	cmp	r3, r1
 8002918:	d9f7      	bls.n	800290a <_sbrk+0x12>
		errno = ENOMEM;
 800291a:	f02b fb0f 	bl	802df3c <__errno>
 800291e:	230c      	movs	r3, #12
 8002920:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002922:	f04f 30ff 	mov.w	r0, #4294967295
}
 8002926:	bd08      	pop	{r3, pc}
 8002928:	200008e0 	.word	0x200008e0
 800292c:	20014478 	.word	0x20014478

08002930 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8002930:	4770      	bx	lr
 8002932:	bf00      	nop

08002934 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8002934:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8002936:	f000 fbab 	bl	8003090 <touchgfx_components_init>
  touchgfx_init();
}
 800293a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 800293e:	f000 bb33 	b.w	8002fa8 <touchgfx_init>
 8002942:	bf00      	nop

08002944 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8002944:	f000 bba6 	b.w	8003094 <touchgfx_taskEntry>

08002948 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8002948:	4770      	bx	lr

0800294a <_ZN20STM32TouchControllerD0Ev>:
 800294a:	b510      	push	{r4, lr}
 800294c:	2104      	movs	r1, #4
 800294e:	4604      	mov	r4, r0
 8002950:	f02a f90f 	bl	802cb72 <_ZdlPvj>
 8002954:	4620      	mov	r0, r4
 8002956:	bd10      	pop	{r4, pc}

08002958 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8002958:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800295a:	4b0c      	ldr	r3, [pc, #48]	; (800298c <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800295c:	4c0c      	ldr	r4, [pc, #48]	; (8002990 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 800295e:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8002960:	4b0c      	ldr	r3, [pc, #48]	; (8002994 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002962:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8002964:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8002966:	6863      	ldr	r3, [r4, #4]
 8002968:	4798      	blx	r3
 800296a:	f640 0311 	movw	r3, #2065	; 0x811
 800296e:	4298      	cmp	r0, r3
 8002970:	d10a      	bne.n	8002988 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8002972:	4d09      	ldr	r5, [pc, #36]	; (8002998 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8002974:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8002976:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8002978:	2082      	movs	r0, #130	; 0x82
 800297a:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 800297c:	682b      	ldr	r3, [r5, #0]
 800297e:	2082      	movs	r0, #130	; 0x82
 8002980:	68db      	ldr	r3, [r3, #12]
 8002982:	4798      	blx	r3
 8002984:	2000      	movs	r0, #0
    }

    return ret;
}
 8002986:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8002988:	2001      	movs	r0, #1
 800298a:	e7fc      	b.n	8002986 <_Z11BSP_TS_Inittt+0x2e>
 800298c:	200008e4 	.word	0x200008e4
 8002990:	20000054 	.word	0x20000054
 8002994:	200008e6 	.word	0x200008e6
 8002998:	200008e8 	.word	0x200008e8

0800299c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800299c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80029a0:	20f0      	movs	r0, #240	; 0xf0
 80029a2:	f7ff bfd9 	b.w	8002958 <_Z11BSP_TS_Inittt>
	...

080029a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80029a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80029aa:	4d33      	ldr	r5, [pc, #204]	; (8002a78 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 80029ac:	682b      	ldr	r3, [r5, #0]
{
 80029ae:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80029b0:	691b      	ldr	r3, [r3, #16]
 80029b2:	2082      	movs	r0, #130	; 0x82
 80029b4:	4798      	blx	r3
 80029b6:	b280      	uxth	r0, r0
 80029b8:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80029ba:	2800      	cmp	r0, #0
 80029bc:	d04a      	beq.n	8002a54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80029be:	682b      	ldr	r3, [r5, #0]
 80029c0:	f10d 0206 	add.w	r2, sp, #6
 80029c4:	695b      	ldr	r3, [r3, #20]
 80029c6:	a901      	add	r1, sp, #4
 80029c8:	2082      	movs	r0, #130	; 0x82
 80029ca:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 80029cc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80029d0:	f640 6274 	movw	r2, #3700	; 0xe74
 80029d4:	4293      	cmp	r3, r2
 80029d6:	d93f      	bls.n	8002a58 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 80029d8:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 80029dc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80029e0:	1ad2      	subs	r2, r2, r3
 80029e2:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 80029e4:	2a0a      	cmp	r2, #10
 80029e6:	d93d      	bls.n	8002a64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 80029e8:	230b      	movs	r3, #11
 80029ea:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 80029ee:	4b23      	ldr	r3, [pc, #140]	; (8002a7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 80029f0:	881b      	ldrh	r3, [r3, #0]
 80029f2:	429a      	cmp	r2, r3
 80029f4:	d901      	bls.n	80029fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 80029f6:	3b01      	subs	r3, #1
 80029f8:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80029fa:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80029fe:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8002a02:	428b      	cmp	r3, r1
 8002a04:	d830      	bhi.n	8002a68 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8002a06:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8002a0a:	330e      	adds	r3, #14
 8002a0c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8002a0e:	210f      	movs	r1, #15
 8002a10:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8002a14:	491a      	ldr	r1, [pc, #104]	; (8002a80 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8002a16:	8809      	ldrh	r1, [r1, #0]
 8002a18:	428b      	cmp	r3, r1
 8002a1a:	d901      	bls.n	8002a20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8002a1c:	3901      	subs	r1, #1
 8002a1e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a20:	4e18      	ldr	r6, [pc, #96]	; (8002a84 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a22:	4d19      	ldr	r5, [pc, #100]	; (8002a88 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a24:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a26:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a28:	4283      	cmp	r3, r0
 8002a2a:	b281      	uxth	r1, r0
 8002a2c:	bf8c      	ite	hi
 8002a2e:	1a59      	subhi	r1, r3, r1
 8002a30:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a32:	b2b8      	uxth	r0, r7
 8002a34:	42ba      	cmp	r2, r7
 8002a36:	bf8c      	ite	hi
 8002a38:	1a10      	subhi	r0, r2, r0
 8002a3a:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8002a3c:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8002a3e:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8002a40:	4401      	add	r1, r0
 8002a42:	2905      	cmp	r1, #5
        {
            _x = x;
 8002a44:	bfc8      	it	gt
 8002a46:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8002a48:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8002a4a:	bfc8      	it	gt
 8002a4c:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8002a4e:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8002a50:	682b      	ldr	r3, [r5, #0]
 8002a52:	80a3      	strh	r3, [r4, #4]
    }
}
 8002a54:	b003      	add	sp, #12
 8002a56:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8002a58:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8002a5a:	bf9c      	itt	ls
 8002a5c:	23b4      	movls	r3, #180	; 0xb4
 8002a5e:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8002a62:	e7bb      	b.n	80029dc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8002a64:	2200      	movs	r2, #0
 8002a66:	e7c8      	b.n	80029fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8002a68:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8002a6c:	3308      	adds	r3, #8
 8002a6e:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8002a70:	2b0e      	cmp	r3, #14
 8002a72:	d8cc      	bhi.n	8002a0e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8002a74:	2300      	movs	r3, #0
 8002a76:	e7d3      	b.n	8002a20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8002a78:	200008e8 	.word	0x200008e8
 8002a7c:	200008e6 	.word	0x200008e6
 8002a80:	200008e4 	.word	0x200008e4
 8002a84:	200008ec 	.word	0x200008ec
 8002a88:	200008f0 	.word	0x200008f0

08002a8c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8002a8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8002a8e:	4668      	mov	r0, sp
{
 8002a90:	460d      	mov	r5, r1
 8002a92:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8002a94:	f7ff ff88 	bl	80029a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8002a98:	f8bd 0000 	ldrh.w	r0, [sp]
 8002a9c:	b148      	cbz	r0, 8002ab2 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8002a9e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8002aa2:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8002aa4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8002aa8:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8002aaa:	4b03      	ldr	r3, [pc, #12]	; (8002ab8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8002aac:	223c      	movs	r2, #60	; 0x3c
 8002aae:	601a      	str	r2, [r3, #0]
        return true;
 8002ab0:	2001      	movs	r0, #1
}
 8002ab2:	b003      	add	sp, #12
 8002ab4:	bd30      	pop	{r4, r5, pc}
 8002ab6:	bf00      	nop
 8002ab8:	20000010 	.word	0x20000010

08002abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8002abc:	b110      	cbz	r0, 8002ac4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8002abe:	2802      	cmp	r0, #2
 8002ac0:	d009      	beq.n	8002ad6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8002ac2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8002ac4:	4b07      	ldr	r3, [pc, #28]	; (8002ae4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002ac6:	681a      	ldr	r2, [r3, #0]
 8002ac8:	fab2 f282 	clz	r2, r2
 8002acc:	0952      	lsrs	r2, r2, #5
 8002ace:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8002ad0:	4805      	ldr	r0, [pc, #20]	; (8002ae8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8002ad2:	f009 b94b 	b.w	800bd6c <HAL_GPIO_WritePin>
 8002ad6:	4b03      	ldr	r3, [pc, #12]	; (8002ae4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8002ad8:	689a      	ldr	r2, [r3, #8]
 8002ada:	fab2 f282 	clz	r2, r2
 8002ade:	0952      	lsrs	r2, r2, #5
 8002ae0:	2110      	movs	r1, #16
 8002ae2:	e7f5      	b.n	8002ad0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8002ae4:	200008f4 	.word	0x200008f4
 8002ae8:	40021000 	.word	0x40021000

08002aec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8002aec:	b110      	cbz	r0, 8002af4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8002aee:	2802      	cmp	r0, #2
 8002af0:	d009      	beq.n	8002b06 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8002af2:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8002af4:	4b07      	ldr	r3, [pc, #28]	; (8002b14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002af6:	681a      	ldr	r2, [r3, #0]
 8002af8:	3a00      	subs	r2, #0
 8002afa:	bf18      	it	ne
 8002afc:	2201      	movne	r2, #1
 8002afe:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8002b00:	4805      	ldr	r0, [pc, #20]	; (8002b18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8002b02:	f009 b933 	b.w	800bd6c <HAL_GPIO_WritePin>
 8002b06:	4b03      	ldr	r3, [pc, #12]	; (8002b14 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8002b08:	689a      	ldr	r2, [r3, #8]
 8002b0a:	3a00      	subs	r2, #0
 8002b0c:	bf18      	it	ne
 8002b0e:	2201      	movne	r2, #1
 8002b10:	2110      	movs	r1, #16
 8002b12:	e7f5      	b.n	8002b00 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8002b14:	200008f4 	.word	0x200008f4
 8002b18:	40021000 	.word	0x40021000

08002b1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8002b1c:	b110      	cbz	r0, 8002b24 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8002b1e:	2802      	cmp	r0, #2
 8002b20:	d004      	beq.n	8002b2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8002b22:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002b24:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b26:	4802      	ldr	r0, [pc, #8]	; (8002b30 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8002b28:	f009 b924 	b.w	800bd74 <HAL_GPIO_TogglePin>
 8002b2c:	2110      	movs	r1, #16
 8002b2e:	e7fa      	b.n	8002b26 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8002b30:	40021000 	.word	0x40021000

08002b34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8002b34:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8002b36:	b130      	cbz	r0, 8002b46 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8002b38:	2802      	cmp	r0, #2
 8002b3a:	d009      	beq.n	8002b50 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8002b3c:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8002b3e:	1e43      	subs	r3, r0, #1
 8002b40:	4258      	negs	r0, r3
 8002b42:	4158      	adcs	r0, r3
 8002b44:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8002b46:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b48:	4802      	ldr	r0, [pc, #8]	; (8002b54 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8002b4a:	f009 f909 	bl	800bd60 <HAL_GPIO_ReadPin>
        break;
 8002b4e:	e7f6      	b.n	8002b3e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8002b50:	2110      	movs	r1, #16
 8002b52:	e7f9      	b.n	8002b48 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8002b54:	40021000 	.word	0x40021000

08002b58 <_ZN8touchgfx4GPIO4initEv>:
{
 8002b58:	b570      	push	{r4, r5, r6, lr}
 8002b5a:	4d08      	ldr	r5, [pc, #32]	; (8002b7c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8002b5c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8002b5e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8002b60:	b2e0      	uxtb	r0, r4
 8002b62:	f7ff ffe7 	bl	8002b34 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8002b66:	b118      	cbz	r0, 8002b70 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8002b68:	682b      	ldr	r3, [r5, #0]
 8002b6a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8002b6c:	bf18      	it	ne
 8002b6e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8002b70:	3401      	adds	r4, #1
 8002b72:	2c05      	cmp	r4, #5
 8002b74:	f105 0504 	add.w	r5, r5, #4
 8002b78:	d1f2      	bne.n	8002b60 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8002b7a:	bd70      	pop	{r4, r5, r6, pc}
 8002b7c:	200008f4 	.word	0x200008f4

08002b80 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8002b80:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8002b82:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8002b86:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002b8a:	4770      	bx	lr

08002b8c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002b8c:	2000      	movs	r0, #0
 8002b8e:	4770      	bx	lr

08002b90 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b90:	4b03      	ldr	r3, [pc, #12]	; (8002ba0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8002b92:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002b94:	3900      	subs	r1, #0
 8002b96:	bf18      	it	ne
 8002b98:	2101      	movne	r1, #1
 8002b9a:	7019      	strb	r1, [r3, #0]
    }
 8002b9c:	4770      	bx	lr
 8002b9e:	bf00      	nop
 8002ba0:	2001383b 	.word	0x2001383b

08002ba4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8002ba4:	2000      	movs	r0, #0
 8002ba6:	4770      	bx	lr

08002ba8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002ba8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002baa:	b10b      	cbz	r3, 8002bb0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002bac:	4608      	mov	r0, r1
 8002bae:	4718      	bx	r3
        }
    }
 8002bb0:	4770      	bx	lr

08002bb2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8002bb2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002bb6:	4770      	bx	lr

08002bb8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002bb8:	6840      	ldr	r0, [r0, #4]
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	699b      	ldr	r3, [r3, #24]
 8002bbe:	4718      	bx	r3

08002bc0 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002bc0:	4770      	bx	lr

08002bc2 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8002bc2:	4770      	bx	lr

08002bc4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8002bc4:	4770      	bx	lr
	...

08002bc8 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002bc8:	b510      	push	{r4, lr}
 8002bca:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002bcc:	f000 fb4e 	bl	800326c <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002bd0:	6823      	ldr	r3, [r4, #0]
 8002bd2:	4903      	ldr	r1, [pc, #12]	; (8002be0 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8002bd4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002bd8:	4620      	mov	r0, r4
}
 8002bda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002bde:	4718      	bx	r3
 8002be0:	d0000000 	.word	0xd0000000

08002be4 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8002be4:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8002be6:	6803      	ldr	r3, [r0, #0]
{
 8002be8:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002bea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002bee:	4798      	blx	r3
    enableInterrupts();
 8002bf0:	6823      	ldr	r3, [r4, #0]
 8002bf2:	4620      	mov	r0, r4
 8002bf4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8002bf6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002bf8:	f000 f8ec 	bl	8002dd4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002bfc:	6823      	ldr	r3, [r4, #0]
 8002bfe:	4620      	mov	r0, r4
 8002c00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c02:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8002c04:	2029      	movs	r0, #41	; 0x29
 8002c06:	f7ff f921 	bl	8001e4c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002c0a:	f000 f8e3 	bl	8002dd4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002c0e:	6823      	ldr	r3, [r4, #0]
 8002c10:	4620      	mov	r0, r4
 8002c12:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c14:	4798      	blx	r3
    for (;;)
 8002c16:	e7f8      	b.n	8002c0a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002c18 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002c18:	b510      	push	{r4, lr}
 8002c1a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002c1c:	f011 fa86 	bl	801412c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002c20:	6823      	ldr	r3, [r4, #0]
 8002c22:	4620      	mov	r0, r4
 8002c24:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8002c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8002c2c:	4718      	bx	r3

08002c2e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8002c2e:	f000 bb0f 	b.w	8003250 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08002c32 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8002c32:	f000 bb13 	b.w	800325c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08002c36 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8002c36:	f000 bb37 	b.w	80032a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08002c3a <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8002c3a:	f000 badf 	b.w	80031fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08002c3e <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8002c3e:	f000 bae5 	b.w	800320c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08002c42 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8002c42:	f000 bb3d 	b.w	80032c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08002c46 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8002c46:	f000 bae9 	b.w	800321c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08002c4a <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8002c4a:	f010 bcda 	b.w	8013602 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08002c4e <_ZN11TouchGFXHALD0Ev>:
 8002c4e:	b510      	push	{r4, lr}
 8002c50:	217c      	movs	r1, #124	; 0x7c
 8002c52:	4604      	mov	r4, r0
 8002c54:	f029 ff8d 	bl	802cb72 <_ZdlPvj>
 8002c58:	4620      	mov	r0, r4
 8002c5a:	bd10      	pop	{r4, pc}

08002c5c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8002c5c:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8002c60:	b11b      	cbz	r3, 8002c6a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8002c62:	6840      	ldr	r0, [r0, #4]
 8002c64:	6803      	ldr	r3, [r0, #0]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	4718      	bx	r3
    }
 8002c6a:	4618      	mov	r0, r3
 8002c6c:	4770      	bx	lr
	...

08002c70 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002c70:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8002c72:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8002c76:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002c7a:	4b0c      	ldr	r3, [pc, #48]	; (8002cac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002c7c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002c7e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002c80:	d009      	beq.n	8002c96 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8002c82:	b93a      	cbnz	r2, 8002c94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c84:	4a0a      	ldr	r2, [pc, #40]	; (8002cb0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002c86:	490b      	ldr	r1, [pc, #44]	; (8002cb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c88:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002c8a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002c8c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c8e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002c90:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8002c92:	701a      	strb	r2, [r3, #0]
    }
 8002c94:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8002c96:	2a00      	cmp	r2, #0
 8002c98:	d0fc      	beq.n	8002c94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c9a:	4a05      	ldr	r2, [pc, #20]	; (8002cb0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002c9c:	4905      	ldr	r1, [pc, #20]	; (8002cb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002c9e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002ca0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8002ca2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002ca4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8002ca6:	2200      	movs	r2, #0
 8002ca8:	e7f3      	b.n	8002c92 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002caa:	bf00      	nop
 8002cac:	20013834 	.word	0x20013834
 8002cb0:	20013830 	.word	0x20013830
 8002cb4:	20013832 	.word	0x20013832

08002cb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002cb8:	b570      	push	{r4, r5, r6, lr}
 8002cba:	460d      	mov	r5, r1
 8002cbc:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002cbe:	b935      	cbnz	r5, 8002cce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002cc0:	4b09      	ldr	r3, [pc, #36]	; (8002ce8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8002cc2:	4a0a      	ldr	r2, [pc, #40]	; (8002cec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8002cc4:	480a      	ldr	r0, [pc, #40]	; (8002cf0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8002cc6:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002cca:	f02a fe39 	bl	802d940 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002cce:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8002cd2:	4b08      	ldr	r3, [pc, #32]	; (8002cf4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8002cd4:	3a00      	subs	r2, #0
 8002cd6:	bf18      	it	ne
 8002cd8:	2201      	movne	r2, #1
 8002cda:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002cdc:	6803      	ldr	r3, [r0, #0]
    }
 8002cde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8002ce2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ce6:	4718      	bx	r3
 8002ce8:	0802eb8c 	.word	0x0802eb8c
 8002cec:	0802ebc4 	.word	0x0802ebc4
 8002cf0:	0802ec12 	.word	0x0802ec12
 8002cf4:	2001383a 	.word	0x2001383a

08002cf8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002cf8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002cfa:	4b09      	ldr	r3, [pc, #36]	; (8002d20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002cfc:	881b      	ldrh	r3, [r3, #0]
 8002cfe:	428b      	cmp	r3, r1
 8002d00:	d803      	bhi.n	8002d0a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8002d02:	4b08      	ldr	r3, [pc, #32]	; (8002d24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8002d04:	881b      	ldrh	r3, [r3, #0]
 8002d06:	4293      	cmp	r3, r2
 8002d08:	d905      	bls.n	8002d16 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002d0a:	4b07      	ldr	r3, [pc, #28]	; (8002d28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002d0c:	4a07      	ldr	r2, [pc, #28]	; (8002d2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002d0e:	4808      	ldr	r0, [pc, #32]	; (8002d30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002d10:	219e      	movs	r1, #158	; 0x9e
 8002d12:	f02a fe15 	bl	802d940 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8002d16:	4b07      	ldr	r3, [pc, #28]	; (8002d34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002d18:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002d1a:	4b07      	ldr	r3, [pc, #28]	; (8002d38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002d1c:	801a      	strh	r2, [r3, #0]
    }
 8002d1e:	bd08      	pop	{r3, pc}
 8002d20:	20013830 	.word	0x20013830
 8002d24:	20013832 	.word	0x20013832
 8002d28:	0802ec57 	.word	0x0802ec57
 8002d2c:	0802ecba 	.word	0x0802ecba
 8002d30:	0802ec12 	.word	0x0802ec12
 8002d34:	20013836 	.word	0x20013836
 8002d38:	20013838 	.word	0x20013838

08002d3c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002d3c:	2101      	movs	r1, #1
{
 8002d3e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002d40:	2200      	movs	r2, #0
 8002d42:	4608      	mov	r0, r1
 8002d44:	f00c fdf6 	bl	800f934 <osSemaphoreNew>
 8002d48:	4b0a      	ldr	r3, [pc, #40]	; (8002d74 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8002d4a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002d4c:	b928      	cbnz	r0, 8002d5a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002d4e:	4b0a      	ldr	r3, [pc, #40]	; (8002d78 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002d50:	4a0a      	ldr	r2, [pc, #40]	; (8002d7c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002d52:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002d54:	480a      	ldr	r0, [pc, #40]	; (8002d80 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8002d56:	f02a fdf3 	bl	802d940 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8002d5a:	2200      	movs	r2, #0
 8002d5c:	2104      	movs	r1, #4
 8002d5e:	2001      	movs	r0, #1
 8002d60:	f00c fe9c 	bl	800fa9c <osMessageQueueNew>
 8002d64:	4b07      	ldr	r3, [pc, #28]	; (8002d84 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8002d66:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002d68:	b918      	cbnz	r0, 8002d72 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002d6a:	4b07      	ldr	r3, [pc, #28]	; (8002d88 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002d6c:	4a03      	ldr	r2, [pc, #12]	; (8002d7c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002d6e:	212c      	movs	r1, #44	; 0x2c
 8002d70:	e7f0      	b.n	8002d54 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002d72:	bd08      	pop	{r3, pc}
 8002d74:	20000908 	.word	0x20000908
 8002d78:	0802edd8 	.word	0x0802edd8
 8002d7c:	0802ee21 	.word	0x0802ee21
 8002d80:	0802ee50 	.word	0x0802ee50
 8002d84:	20000904 	.word	0x20000904
 8002d88:	0802eeca 	.word	0x0802eeca

08002d8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002d8c:	4b02      	ldr	r3, [pc, #8]	; (8002d98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002d8e:	f04f 31ff 	mov.w	r1, #4294967295
 8002d92:	6818      	ldr	r0, [r3, #0]
 8002d94:	f00c be22 	b.w	800f9dc <osSemaphoreAcquire>
 8002d98:	20000908 	.word	0x20000908

08002d9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002d9c:	4b01      	ldr	r3, [pc, #4]	; (8002da4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002d9e:	6818      	ldr	r0, [r3, #0]
 8002da0:	f00c be50 	b.w	800fa44 <osSemaphoreRelease>
 8002da4:	20000908 	.word	0x20000908

08002da8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002da8:	4b02      	ldr	r3, [pc, #8]	; (8002db4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002daa:	2100      	movs	r1, #0
 8002dac:	6818      	ldr	r0, [r3, #0]
 8002dae:	f00c be15 	b.w	800f9dc <osSemaphoreAcquire>
 8002db2:	bf00      	nop
 8002db4:	20000908 	.word	0x20000908

08002db8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002db8:	f7ff bff0 	b.w	8002d9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002dbc <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002dbc:	4803      	ldr	r0, [pc, #12]	; (8002dcc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002dbe:	4904      	ldr	r1, [pc, #16]	; (8002dd0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002dc0:	6800      	ldr	r0, [r0, #0]
 8002dc2:	2300      	movs	r3, #0
 8002dc4:	461a      	mov	r2, r3
 8002dc6:	f00c bea3 	b.w	800fb10 <osMessageQueuePut>
 8002dca:	bf00      	nop
 8002dcc:	20000904 	.word	0x20000904
 8002dd0:	20000014 	.word	0x20000014

08002dd4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8002dd4:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8002dd6:	4c08      	ldr	r4, [pc, #32]	; (8002df8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002dd8:	2300      	movs	r3, #0
 8002dda:	461a      	mov	r2, r3
 8002ddc:	a901      	add	r1, sp, #4
 8002dde:	6820      	ldr	r0, [r4, #0]
 8002de0:	f00c fecc 	bl	800fb7c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8002de4:	6820      	ldr	r0, [r4, #0]
 8002de6:	f04f 33ff 	mov.w	r3, #4294967295
 8002dea:	2200      	movs	r2, #0
 8002dec:	a901      	add	r1, sp, #4
 8002dee:	f00c fec5 	bl	800fb7c <osMessageQueueGet>
}
 8002df2:	b002      	add	sp, #8
 8002df4:	bd10      	pop	{r4, pc}
 8002df6:	bf00      	nop
 8002df8:	20000904 	.word	0x20000904

08002dfc <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002dfc:	4770      	bx	lr

08002dfe <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002dfe:	2000      	movs	r0, #0
 8002e00:	4770      	bx	lr

08002e02 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8002e02:	4770      	bx	lr

08002e04 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8002e04:	4770      	bx	lr

08002e06 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8002e06:	2000      	movs	r0, #0
 8002e08:	4770      	bx	lr

08002e0a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002e0a:	4770      	bx	lr

08002e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002e0c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002e0e:	4a03      	ldr	r2, [pc, #12]	; (8002e1c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002e10:	4b03      	ldr	r3, [pc, #12]	; (8002e20 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8002e12:	4804      	ldr	r0, [pc, #16]	; (8002e24 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8002e14:	2122      	movs	r1, #34	; 0x22
 8002e16:	f02a fd93 	bl	802d940 <__assert_func>
 8002e1a:	bf00      	nop
 8002e1c:	0802ef2f 	.word	0x0802ef2f
 8002e20:	0802ef0c 	.word	0x0802ef0c
 8002e24:	0802ef6d 	.word	0x0802ef6d

08002e28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8002e28:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002e2a:	4a03      	ldr	r2, [pc, #12]	; (8002e38 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002e2c:	4b03      	ldr	r3, [pc, #12]	; (8002e3c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002e2e:	4804      	ldr	r0, [pc, #16]	; (8002e40 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002e30:	2127      	movs	r1, #39	; 0x27
 8002e32:	f02a fd85 	bl	802d940 <__assert_func>
 8002e36:	bf00      	nop
 8002e38:	0802efe5 	.word	0x0802efe5
 8002e3c:	0802ef0c 	.word	0x0802ef0c
 8002e40:	0802ef6d 	.word	0x0802ef6d

08002e44 <_ZN8STM32DMAD0Ev>:
 8002e44:	b510      	push	{r4, lr}
 8002e46:	2144      	movs	r1, #68	; 0x44
 8002e48:	4604      	mov	r4, r0
 8002e4a:	f029 fe92 	bl	802cb72 <_ZdlPvj>
 8002e4e:	4620      	mov	r0, r4
 8002e50:	bd10      	pop	{r4, pc}
	...

08002e54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002e54:	b538      	push	{r3, r4, r5, lr}
 8002e56:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8002e58:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8002e5a:	2500      	movs	r5, #0
 8002e5c:	4b06      	ldr	r3, [pc, #24]	; (8002e78 <_ZN8STM32DMAC1Ev+0x24>)
 8002e5e:	7225      	strb	r5, [r4, #8]
 8002e60:	300c      	adds	r0, #12
 8002e62:	6060      	str	r0, [r4, #4]
 8002e64:	7265      	strb	r5, [r4, #9]
 8002e66:	2201      	movs	r2, #1
 8002e68:	f841 3b20 	str.w	r3, [r1], #32
 8002e6c:	f011 fab6 	bl	80143dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002e70:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002e72:	4620      	mov	r0, r4
 8002e74:	bd38      	pop	{r3, r4, r5, pc}
 8002e76:	bf00      	nop
 8002e78:	0802f02c 	.word	0x0802f02c

08002e7c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002e7c:	2001      	movs	r0, #1
 8002e7e:	4770      	bx	lr

08002e80 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002e80:	2038      	movs	r0, #56	; 0x38
 8002e82:	4770      	bx	lr

08002e84 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002e84:	2338      	movs	r3, #56	; 0x38
 8002e86:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e8a:	3008      	adds	r0, #8
 8002e8c:	4770      	bx	lr

08002e8e <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002e8e:	2338      	movs	r3, #56	; 0x38
 8002e90:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002e94:	3008      	adds	r0, #8
 8002e96:	4770      	bx	lr

08002e98 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002e98:	2001      	movs	r0, #1
 8002e9a:	4770      	bx	lr

08002e9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002e9c:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002ea0:	4770      	bx	lr

08002ea2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ea2:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002ea6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002eaa:	3008      	adds	r0, #8
 8002eac:	4770      	bx	lr

08002eae <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eae:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002eb2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002eb6:	3008      	adds	r0, #8
 8002eb8:	4770      	bx	lr

08002eba <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002eba:	2001      	movs	r0, #1
 8002ebc:	4770      	bx	lr

08002ebe <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002ebe:	2010      	movs	r0, #16
 8002ec0:	4770      	bx	lr

08002ec2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002ec2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ec6:	3008      	adds	r0, #8
 8002ec8:	4770      	bx	lr

08002eca <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002eca:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002ece:	3008      	adds	r0, #8
 8002ed0:	4770      	bx	lr

08002ed2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8002ed2:	4608      	mov	r0, r1
 8002ed4:	f002 bb3c 	b.w	8005550 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002ed8:	b510      	push	{r4, lr}
 8002eda:	4b03      	ldr	r3, [pc, #12]	; (8002ee8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002edc:	6003      	str	r3, [r0, #0]
 8002ede:	4604      	mov	r4, r0
 8002ee0:	f00f faa5 	bl	801242e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	bd10      	pop	{r4, pc}
 8002ee8:	0802f0e4 	.word	0x0802f0e4

08002eec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002eec:	b510      	push	{r4, lr}
 8002eee:	4604      	mov	r4, r0
 8002ef0:	f7ff fff2 	bl	8002ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002ef4:	4620      	mov	r0, r4
 8002ef6:	2140      	movs	r1, #64	; 0x40
 8002ef8:	f029 fe3b 	bl	802cb72 <_ZdlPvj>
 8002efc:	4620      	mov	r0, r4
 8002efe:	bd10      	pop	{r4, pc}

08002f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002f00:	b510      	push	{r4, lr}
 8002f02:	4b03      	ldr	r3, [pc, #12]	; (8002f10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002f04:	6003      	str	r3, [r0, #0]
 8002f06:	4604      	mov	r4, r0
 8002f08:	f00f fa91 	bl	801242e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002f0c:	4620      	mov	r0, r4
 8002f0e:	bd10      	pop	{r4, pc}
 8002f10:	0802f0b0 	.word	0x0802f0b0

08002f14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002f14:	b510      	push	{r4, lr}
 8002f16:	4604      	mov	r4, r0
 8002f18:	f7ff fff2 	bl	8002f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f1c:	4620      	mov	r0, r4
 8002f1e:	f641 510c 	movw	r1, #7436	; 0x1d0c
 8002f22:	f029 fe26 	bl	802cb72 <_ZdlPvj>
 8002f26:	4620      	mov	r0, r4
 8002f28:	bd10      	pop	{r4, pc}
	...

08002f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002f2c:	b510      	push	{r4, lr}
 8002f2e:	4b03      	ldr	r3, [pc, #12]	; (8002f3c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002f30:	6003      	str	r3, [r0, #0]
 8002f32:	4604      	mov	r4, r0
 8002f34:	f00f fa7b 	bl	801242e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002f38:	4620      	mov	r0, r4
 8002f3a:	bd10      	pop	{r4, pc}
 8002f3c:	0802f07c 	.word	0x0802f07c

08002f40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002f40:	b510      	push	{r4, lr}
 8002f42:	4604      	mov	r4, r0
 8002f44:	f7ff fff2 	bl	8002f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f48:	4620      	mov	r0, r4
 8002f4a:	2118      	movs	r1, #24
 8002f4c:	f029 fe11 	bl	802cb72 <_ZdlPvj>
 8002f50:	4620      	mov	r0, r4
 8002f52:	bd10      	pop	{r4, pc}

08002f54 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002f54:	b510      	push	{r4, lr}
 8002f56:	4b09      	ldr	r3, [pc, #36]	; (8002f7c <_ZN12FrontendHeapD1Ev+0x28>)
 8002f58:	6003      	str	r3, [r0, #0]
 8002f5a:	4604      	mov	r4, r0
 8002f5c:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002f60:	3018      	adds	r0, #24
 8002f62:	f7ff ffb9 	bl	8002ed8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8002f66:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002f6a:	f7ff ffc9 	bl	8002f00 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f6e:	f104 0014 	add.w	r0, r4, #20
 8002f72:	f7ff ffdb 	bl	8002f2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002f76:	4620      	mov	r0, r4
 8002f78:	bd10      	pop	{r4, pc}
 8002f7a:	bf00      	nop
 8002f7c:	0802f118 	.word	0x0802f118

08002f80 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002f80:	b508      	push	{r3, lr}
 8002f82:	4802      	ldr	r0, [pc, #8]	; (8002f8c <__tcf_0+0xc>)
 8002f84:	f7ff ffe6 	bl	8002f54 <_ZN12FrontendHeapD1Ev>
 8002f88:	bd08      	pop	{r3, pc}
 8002f8a:	bf00      	nop
 8002f8c:	20000910 	.word	0x20000910

08002f90 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002f90:	b510      	push	{r4, lr}
 8002f92:	4604      	mov	r4, r0
 8002f94:	f7ff ffde 	bl	8002f54 <_ZN12FrontendHeapD1Ev>
 8002f98:	4620      	mov	r0, r4
 8002f9a:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002f9e:	f029 fde8 	bl	802cb72 <_ZdlPvj>
 8002fa2:	4620      	mov	r0, r4
 8002fa4:	bd10      	pop	{r4, pc}
	...

08002fa8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002fa8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002fac:	f000 fa5c 	bl	8003468 <_ZN14BitmapDatabase11getInstanceEv>
 8002fb0:	4605      	mov	r5, r0
 8002fb2:	f000 fa5d 	bl	8003470 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8002fb6:	2400      	movs	r4, #0
 8002fb8:	4601      	mov	r1, r0
 8002fba:	4623      	mov	r3, r4
 8002fbc:	4628      	mov	r0, r5
 8002fbe:	4622      	mov	r2, r4
 8002fc0:	9400      	str	r4, [sp, #0]
 8002fc2:	f019 f929 	bl	801c218 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8002fc6:	4b26      	ldr	r3, [pc, #152]	; (8003060 <touchgfx_init+0xb8>)
 8002fc8:	4a26      	ldr	r2, [pc, #152]	; (8003064 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002fca:	4d27      	ldr	r5, [pc, #156]	; (8003068 <touchgfx_init+0xc0>)
 8002fcc:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002fce:	4620      	mov	r0, r4
 8002fd0:	f007 fb1e 	bl	800a610 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8002fd4:	4825      	ldr	r0, [pc, #148]	; (800306c <touchgfx_init+0xc4>)
 8002fd6:	f019 f887 	bl	801c0e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002fda:	682b      	ldr	r3, [r5, #0]
 8002fdc:	f3bf 8f5b 	dmb	ish
 8002fe0:	07db      	lsls	r3, r3, #31
 8002fe2:	d436      	bmi.n	8003052 <touchgfx_init+0xaa>
 8002fe4:	4628      	mov	r0, r5
 8002fe6:	f029 fdc6 	bl	802cb76 <__cxa_guard_acquire>
 8002fea:	b390      	cbz	r0, 8003052 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002fec:	4c20      	ldr	r4, [pc, #128]	; (8003070 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002fee:	4b21      	ldr	r3, [pc, #132]	; (8003074 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002ff0:	4f21      	ldr	r7, [pc, #132]	; (8003078 <touchgfx_init+0xd0>)
 8002ff2:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 8002ff4:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002ff8:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002ffc:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8003000:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8003002:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8003006:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8003008:	6126      	str	r6, [r4, #16]
 800300a:	f00f fa11 	bl	8012430 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800300e:	4b1b      	ldr	r3, [pc, #108]	; (800307c <touchgfx_init+0xd4>)
 8003010:	6163      	str	r3, [r4, #20]
 8003012:	4640      	mov	r0, r8
 8003014:	f00f fa0c 	bl	8012430 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003018:	4b19      	ldr	r3, [pc, #100]	; (8003080 <touchgfx_init+0xd8>)
 800301a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800301c:	4638      	mov	r0, r7
 800301e:	f00f fa07 	bl	8012430 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8003022:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003026:	4a17      	ldr	r2, [pc, #92]	; (8003084 <touchgfx_init+0xdc>)
 8003028:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 800302c:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8003030:	f007 ff4c 	bl	800aecc <_ZN5ModelC1Ev>
 8003034:	4622      	mov	r2, r4
 8003036:	f1a6 0108 	sub.w	r1, r6, #8
 800303a:	4630      	mov	r0, r6
 800303c:	f007 fc6e 	bl	800a91c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8003040:	4630      	mov	r0, r6
 8003042:	f002 fa85 	bl	8005550 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 8003046:	4810      	ldr	r0, [pc, #64]	; (8003088 <touchgfx_init+0xe0>)
 8003048:	f02a fc98 	bl	802d97c <atexit>
 800304c:	4628      	mov	r0, r5
 800304e:	f029 fd9e 	bl	802cb8e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8003052:	480e      	ldr	r0, [pc, #56]	; (800308c <touchgfx_init+0xe4>)
}
 8003054:	b002      	add	sp, #8
 8003056:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800305a:	f7ff bdb5 	b.w	8002bc8 <_ZN11TouchGFXHAL10initializeEv>
 800305e:	bf00      	nop
 8003060:	200138a0 	.word	0x200138a0
 8003064:	200028b0 	.word	0x200028b0
 8003068:	2000090c 	.word	0x2000090c
 800306c:	20000018 	.word	0x20000018
 8003070:	20000910 	.word	0x20000910
 8003074:	0802f118 	.word	0x0802f118
 8003078:	20002648 	.word	0x20002648
 800307c:	0802f07c 	.word	0x0802f07c
 8003080:	0802f0b0 	.word	0x0802f0b0
 8003084:	0802f0e4 	.word	0x0802f0e4
 8003088:	08002f81 	.word	0x08002f81
 800308c:	20002834 	.word	0x20002834

08003090 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8003090:	4770      	bx	lr
	...

08003094 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8003094:	4801      	ldr	r0, [pc, #4]	; (800309c <touchgfx_taskEntry+0x8>)
 8003096:	f7ff bda5 	b.w	8002be4 <_ZN11TouchGFXHAL9taskEntryEv>
 800309a:	bf00      	nop
 800309c:	20002834 	.word	0x20002834

080030a0 <_GLOBAL__sub_I_touchgfx_init>:
}
 80030a0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 80030a2:	4e22      	ldr	r6, [pc, #136]	; (800312c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 80030a4:	4c22      	ldr	r4, [pc, #136]	; (8003130 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 80030a6:	4d23      	ldr	r5, [pc, #140]	; (8003134 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 80030a8:	4b23      	ldr	r3, [pc, #140]	; (8003138 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80030aa:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 80030ac:	4630      	mov	r0, r6
 80030ae:	f7ff fed1 	bl	8002e54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80030b2:	4628      	mov	r0, r5
 80030b4:	f01d fb7c 	bl	80207b0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 80030b8:	4b20      	ldr	r3, [pc, #128]	; (800313c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030ba:	4821      	ldr	r0, [pc, #132]	; (8003140 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 80030bc:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 80030be:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80030c0:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80030c4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80030c8:	491e      	ldr	r1, [pc, #120]	; (8003144 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80030ca:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80030cc:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80030d0:	491d      	ldr	r1, [pc, #116]	; (8003148 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80030d2:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80030d4:	491d      	ldr	r1, [pc, #116]	; (800314c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80030d6:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80030da:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030dc:	21f0      	movs	r1, #240	; 0xf0
 80030de:	8001      	strh	r1, [r0, #0]
 80030e0:	481b      	ldr	r0, [pc, #108]	; (8003150 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80030e2:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80030e4:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80030e6:	481b      	ldr	r0, [pc, #108]	; (8003154 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80030e8:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80030ec:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80030f0:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80030f4:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80030f8:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80030fc:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8003100:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8003104:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8003108:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 800310c:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8003110:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8003112:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8003116:	8001      	strh	r1, [r0, #0]
 8003118:	480f      	ldr	r0, [pc, #60]	; (8003158 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 800311a:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800311c:	490f      	ldr	r1, [pc, #60]	; (800315c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 800311e:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8003120:	2201      	movs	r2, #1
 8003122:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8003126:	4a0e      	ldr	r2, [pc, #56]	; (8003160 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8003128:	601a      	str	r2, [r3, #0]
}
 800312a:	bd70      	pop	{r4, r5, r6, pc}
 800312c:	200027f0 	.word	0x200027f0
 8003130:	200027ec 	.word	0x200027ec
 8003134:	200028b4 	.word	0x200028b4
 8003138:	0802eb7c 	.word	0x0802eb7c
 800313c:	20002834 	.word	0x20002834
 8003140:	20013830 	.word	0x20013830
 8003144:	01000001 	.word	0x01000001
 8003148:	01010000 	.word	0x01010000
 800314c:	2001383c 	.word	0x2001383c
 8003150:	20013836 	.word	0x20013836
 8003154:	20013832 	.word	0x20013832
 8003158:	20013838 	.word	0x20013838
 800315c:	20013834 	.word	0x20013834
 8003160:	0802ed08 	.word	0x0802ed08

08003164 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8003164:	2000      	movs	r0, #0
 8003166:	4770      	bx	lr

08003168 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8003168:	8081      	strh	r1, [r0, #4]
    }
 800316a:	4770      	bx	lr

0800316c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800316c:	80c1      	strh	r1, [r0, #6]
    }
 800316e:	4770      	bx	lr

08003170 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8003170:	8101      	strh	r1, [r0, #8]
    }
 8003172:	4770      	bx	lr

08003174 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8003174:	8141      	strh	r1, [r0, #10]
    }
 8003176:	4770      	bx	lr

08003178 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8003178:	4770      	bx	lr

0800317a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800317a:	4770      	bx	lr

0800317c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800317c:	4770      	bx	lr

0800317e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800317e:	4770      	bx	lr

08003180 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8003180:	4770      	bx	lr

08003182 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8003182:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8003184:	88c4      	ldrh	r4, [r0, #6]
 8003186:	6803      	ldr	r3, [r0, #0]
 8003188:	1b12      	subs	r2, r2, r4
 800318a:	8884      	ldrh	r4, [r0, #4]
 800318c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800318e:	1b09      	subs	r1, r1, r4
 8003190:	b212      	sxth	r2, r2
    }
 8003192:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8003196:	b209      	sxth	r1, r1
 8003198:	4718      	bx	r3

0800319a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800319a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800319e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80031a0:	f04f 33ff 	mov.w	r3, #4294967295
 80031a4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80031a6:	6813      	ldr	r3, [r2, #0]
 80031a8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80031aa:	6010      	str	r0, [r2, #0]
    }
 80031ac:	4770      	bx	lr

080031ae <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80031ae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80031b2:	b11a      	cbz	r2, 80031bc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80031b4:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80031b8:	b102      	cbz	r2, 80031bc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80031ba:	6018      	str	r0, [r3, #0]
        }
    }
 80031bc:	4770      	bx	lr

080031be <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80031be:	2000      	movs	r0, #0
 80031c0:	4770      	bx	lr

080031c2 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80031c2:	888b      	ldrh	r3, [r1, #4]
 80031c4:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80031c6:	2001      	movs	r0, #1
 80031c8:	4770      	bx	lr

080031ca <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80031ca:	4770      	bx	lr

080031cc <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80031cc:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80031d0:	4770      	bx	lr

080031d2 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80031d2:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80031d6:	4770      	bx	lr

080031d8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80031d8:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031da:	2200      	movs	r2, #0
        return rect.width;
 80031dc:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80031e0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80031e4:	8002      	strh	r2, [r0, #0]
 80031e6:	8042      	strh	r2, [r0, #2]
 80031e8:	8084      	strh	r4, [r0, #4]
 80031ea:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80031ec:	bd10      	pop	{r4, pc}

080031ee <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80031ee:	2200      	movs	r2, #0
 80031f0:	8002      	strh	r2, [r0, #0]
 80031f2:	8042      	strh	r2, [r0, #2]
 80031f4:	8082      	strh	r2, [r0, #4]
 80031f6:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80031f8:	4770      	bx	lr
	...

080031fc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80031fc:	4b02      	ldr	r3, [pc, #8]	; (8003208 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80031fe:	2290      	movs	r2, #144	; 0x90
 8003200:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8003204:	4770      	bx	lr
 8003206:	bf00      	nop
 8003208:	e000e100 	.word	0xe000e100

0800320c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800320c:	4b02      	ldr	r3, [pc, #8]	; (8003218 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 800320e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003212:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8003214:	4770      	bx	lr
 8003216:	bf00      	nop
 8003218:	e000e100 	.word	0xe000e100

0800321c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800321c:	4a09      	ldr	r2, [pc, #36]	; (8003244 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800321e:	490a      	ldr	r1, [pc, #40]	; (8003248 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8003220:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8003222:	480a      	ldr	r0, [pc, #40]	; (800324c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8003224:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003228:	3b01      	subs	r3, #1
 800322a:	b29b      	uxth	r3, r3
 800322c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800322e:	6911      	ldr	r1, [r2, #16]
 8003230:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8003234:	3901      	subs	r1, #1
 8003236:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8003238:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800323a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800323c:	f043 0301 	orr.w	r3, r3, #1
 8003240:	6353      	str	r3, [r2, #52]	; 0x34
}
 8003242:	4770      	bx	lr
 8003244:	40016800 	.word	0x40016800
 8003248:	2000293a 	.word	0x2000293a
 800324c:	20002938 	.word	0x20002938

08003250 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8003250:	4b01      	ldr	r3, [pc, #4]	; (8003258 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8003252:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8003256:	4770      	bx	lr
 8003258:	40016800 	.word	0x40016800

0800325c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800325c:	4b02      	ldr	r3, [pc, #8]	; (8003268 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800325e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8003260:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8003264:	625a      	str	r2, [r3, #36]	; 0x24
}
 8003266:	4770      	bx	lr
 8003268:	40016800 	.word	0x40016800

0800326c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 800326c:	b570      	push	{r4, r5, r6, lr}
 800326e:	4604      	mov	r4, r0
    HAL::initialize();
 8003270:	f010 fa1d 	bl	80136ae <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8003274:	6823      	ldr	r3, [r4, #0]
 8003276:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8003278:	f015 fb92 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 800327c:	4601      	mov	r1, r0
 800327e:	4620      	mov	r0, r4
 8003280:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8003282:	6823      	ldr	r3, [r4, #0]
 8003284:	4a05      	ldr	r2, [pc, #20]	; (800329c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8003286:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800328a:	4620      	mov	r0, r4
 800328c:	46ac      	mov	ip, r5
 800328e:	2300      	movs	r3, #0
}
 8003290:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8003294:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8003298:	4760      	bx	ip
 800329a:	bf00      	nop
 800329c:	d004b000 	.word	0xd004b000

080032a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80032a0:	f010 b9ec 	b.w	801367c <_ZN8touchgfx3HAL10beginFrameEv>

080032a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 80032a4:	f010 b9f6 	b.w	8013694 <_ZN8touchgfx3HAL8endFrameEv>

080032a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80032a8:	f010 b9b1 	b.w	801360e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080032ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80032ac:	f010 bb13 	b.w	80138d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080032b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80032b0:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80032b4:	b112      	cbz	r2, 80032bc <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80032b6:	6803      	ldr	r3, [r0, #0]
 80032b8:	695b      	ldr	r3, [r3, #20]
 80032ba:	4718      	bx	r3
    }
 80032bc:	4770      	bx	lr
	...

080032c0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80032c0:	4b04      	ldr	r3, [pc, #16]	; (80032d4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80032c2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80032c6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80032ca:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80032ce:	f3bf 8f6f 	isb	sy
}
 80032d2:	4770      	bx	lr
 80032d4:	e000e100 	.word	0xe000e100

080032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80032d8:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80032da:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80032dc:	4e12      	ldr	r6, [pc, #72]	; (8003328 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80032de:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80032e0:	4b12      	ldr	r3, [pc, #72]	; (800332c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80032e2:	6003      	str	r3, [r0, #0]
 80032e4:	6833      	ldr	r3, [r6, #0]
 80032e6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80032ea:	4605      	mov	r5, r0
 80032ec:	b10a      	cbz	r2, 80032f2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80032ee:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80032f0:	b900      	cbnz	r0, 80032f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80032f2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80032f4:	6803      	ldr	r3, [r0, #0]
 80032f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80032f8:	4798      	blx	r3
        return auxiliaryLCD;
 80032fa:	6833      	ldr	r3, [r6, #0]
 80032fc:	fab0 f480 	clz	r4, r0
 8003300:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003302:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003304:	b130      	cbz	r0, 8003314 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003306:	6803      	ldr	r3, [r0, #0]
 8003308:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800330a:	4798      	blx	r3
 800330c:	2800      	cmp	r0, #0
 800330e:	bf08      	it	eq
 8003310:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003314:	b92c      	cbnz	r4, 8003322 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003316:	4b06      	ldr	r3, [pc, #24]	; (8003330 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003318:	4a06      	ldr	r2, [pc, #24]	; (8003334 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 800331a:	4807      	ldr	r0, [pc, #28]	; (8003338 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 800331c:	212c      	movs	r1, #44	; 0x2c
 800331e:	f02a fb0f 	bl	802d940 <__assert_func>
    }
 8003322:	4628      	mov	r0, r5
 8003324:	bd70      	pop	{r4, r5, r6, pc}
 8003326:	bf00      	nop
 8003328:	2001383c 	.word	0x2001383c
 800332c:	0802f228 	.word	0x0802f228
 8003330:	0802f124 	.word	0x0802f124
 8003334:	0802f182 	.word	0x0802f182
 8003338:	0802f1bb 	.word	0x0802f1bb

0800333c <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 800333c:	4770      	bx	lr
	...

08003340 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8003340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8003344:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 8003346:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 800334a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 800334e:	d105      	bne.n	800335c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8003350:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8003354:	4281      	cmp	r1, r0
 8003356:	d8fb      	bhi.n	8003350 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8003358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800335c:	4f17      	ldr	r7, [pc, #92]	; (80033bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800335e:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003362:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003366:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800336a:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800336e:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8003370:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8003372:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003374:	b2db      	uxtb	r3, r3
 8003376:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8003378:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800337c:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003380:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003384:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003388:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800338c:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003390:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8003394:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8003398:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800339a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800339e:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80033a2:	fb03 4e0e 	mla	lr, r3, lr, r4
 80033a6:	fbbe fef5 	udiv	lr, lr, r5
 80033aa:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80033ae:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80033b2:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 80033b6:	4281      	cmp	r1, r0
 80033b8:	d8de      	bhi.n	8003378 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 80033ba:	e7cd      	b.n	8003358 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 80033bc:	fffff800 	.word	0xfffff800

080033c0 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80033c0:	b510      	push	{r4, lr}
        return instance;
 80033c2:	4c14      	ldr	r4, [pc, #80]	; (8003414 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80033c4:	6823      	ldr	r3, [r4, #0]
 80033c6:	b323      	cbz	r3, 8003412 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80033c8:	4b13      	ldr	r3, [pc, #76]	; (8003418 <HAL_LTDC_LineEventCallback+0x58>)
 80033ca:	4a14      	ldr	r2, [pc, #80]	; (800341c <HAL_LTDC_LineEventCallback+0x5c>)
 80033cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033ce:	8811      	ldrh	r1, [r2, #0]
 80033d0:	428b      	cmp	r3, r1
 80033d2:	d113      	bne.n	80033fc <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80033d4:	4b12      	ldr	r3, [pc, #72]	; (8003420 <HAL_LTDC_LineEventCallback+0x60>)
 80033d6:	8819      	ldrh	r1, [r3, #0]
 80033d8:	f00a fae4 	bl	800d9a4 <HAL_LTDC_ProgramLineEvent>
 80033dc:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80033de:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80033e2:	3301      	adds	r3, #1
 80033e4:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80033e8:	f7ff fce8 	bl	8002dbc <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80033ec:	6820      	ldr	r0, [r4, #0]
 80033ee:	f010 fe9d 	bl	801412c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80033f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80033f6:	2000      	movs	r0, #0
 80033f8:	f7ff bb60 	b.w	8002abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80033fc:	f00a fad2 	bl	800d9a4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8003400:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8003402:	6803      	ldr	r3, [r0, #0]
 8003404:	6a1b      	ldr	r3, [r3, #32]
 8003406:	4798      	blx	r3
    }
 8003408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800340c:	2000      	movs	r0, #0
 800340e:	f7ff bb6d 	b.w	8002aec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8003412:	bd10      	pop	{r4, pc}
 8003414:	2001383c 	.word	0x2001383c
 8003418:	40016800 	.word	0x40016800
 800341c:	2000293a 	.word	0x2000293a
 8003420:	20002938 	.word	0x20002938

08003424 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8003424:	4770      	bx	lr

08003426 <_ZN23ApplicationFontProviderD0Ev>:
 8003426:	b510      	push	{r4, lr}
 8003428:	2104      	movs	r1, #4
 800342a:	4604      	mov	r4, r0
 800342c:	f029 fba1 	bl	802cb72 <_ZdlPvj>
 8003430:	4620      	mov	r0, r4
 8003432:	bd10      	pop	{r4, pc}

08003434 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8003434:	b508      	push	{r3, lr}
    switch (typography)
 8003436:	2903      	cmp	r1, #3
 8003438:	d813      	bhi.n	8003462 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800343a:	e8df f001 	tbb	[pc, r1]
 800343e:	0602      	.short	0x0602
 8003440:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8003442:	f007 f931 	bl	800a6a8 <_ZN17TypedTextDatabase8getFontsEv>
 8003446:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 8003448:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800344a:	f007 f92d 	bl	800a6a8 <_ZN17TypedTextDatabase8getFontsEv>
 800344e:	6840      	ldr	r0, [r0, #4]
 8003450:	e7fa      	b.n	8003448 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8003452:	f007 f929 	bl	800a6a8 <_ZN17TypedTextDatabase8getFontsEv>
 8003456:	6880      	ldr	r0, [r0, #8]
 8003458:	e7f6      	b.n	8003448 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800345a:	f007 f925 	bl	800a6a8 <_ZN17TypedTextDatabase8getFontsEv>
 800345e:	68c0      	ldr	r0, [r0, #12]
 8003460:	e7f2      	b.n	8003448 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8003462:	2000      	movs	r0, #0
 8003464:	e7f0      	b.n	8003448 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08003468 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003468:	4800      	ldr	r0, [pc, #0]	; (800346c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800346a:	4770      	bx	lr
 800346c:	0802f254 	.word	0x0802f254

08003470 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003470:	200c      	movs	r0, #12
 8003472:	4770      	bx	lr

08003474 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8003474:	b513      	push	{r0, r1, r4, lr}
 8003476:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8003478:	b151      	cbz	r1, 8003490 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800347a:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 800347c:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800347e:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003482:	aa01      	add	r2, sp, #4
 8003484:	689c      	ldr	r4, [r3, #8]
 8003486:	f10d 0303 	add.w	r3, sp, #3
 800348a:	47a0      	blx	r4
        return glyph;
    }
 800348c:	b002      	add	sp, #8
 800348e:	bd10      	pop	{r4, pc}
            return 0;
 8003490:	4608      	mov	r0, r1
 8003492:	e7fb      	b.n	800348c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08003494 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8003494:	89c0      	ldrh	r0, [r0, #14]
 8003496:	4770      	bx	lr

08003498 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003498:	8a00      	ldrh	r0, [r0, #16]
 800349a:	4770      	bx	lr

0800349c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800349c:	88c0      	ldrh	r0, [r0, #6]
 800349e:	4770      	bx	lr

080034a0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80034a0:	8880      	ldrh	r0, [r0, #4]
 80034a2:	4770      	bx	lr

080034a4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80034a4:	7a80      	ldrb	r0, [r0, #10]
    }
 80034a6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80034aa:	4770      	bx	lr

080034ac <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80034ac:	7a80      	ldrb	r0, [r0, #10]
    }
 80034ae:	09c0      	lsrs	r0, r0, #7
 80034b0:	4770      	bx	lr

080034b2 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80034b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80034b4:	4770      	bx	lr

080034b6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80034b6:	4770      	bx	lr

080034b8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80034b8:	4770      	bx	lr

080034ba <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80034ba:	4770      	bx	lr

080034bc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80034bc:	4770      	bx	lr

080034be <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80034be:	4770      	bx	lr

080034c0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80034c0:	4770      	bx	lr

080034c2 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80034c2:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80034c4:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80034c6:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80034c8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034ca:	466d      	mov	r5, sp
 80034cc:	4601      	mov	r1, r0
 80034ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80034d2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80034d4:	4628      	mov	r0, r5
 80034d6:	4798      	blx	r3
 80034d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034dc:	343c      	adds	r4, #60	; 0x3c
 80034de:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80034e2:	b005      	add	sp, #20
 80034e4:	bd30      	pop	{r4, r5, pc}

080034e6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80034e6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80034e8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80034ea:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80034ec:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80034ee:	466d      	mov	r5, sp
 80034f0:	4601      	mov	r1, r0
 80034f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80034f6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80034f8:	4628      	mov	r0, r5
 80034fa:	4798      	blx	r3
 80034fc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003500:	343c      	adds	r4, #60	; 0x3c
 8003502:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8003506:	b005      	add	sp, #20
 8003508:	bd30      	pop	{r4, r5, pc}

0800350a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800350a:	2200      	movs	r2, #0
 800350c:	8002      	strh	r2, [r0, #0]
 800350e:	8042      	strh	r2, [r0, #2]
 8003510:	8082      	strh	r2, [r0, #4]
 8003512:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003514:	4770      	bx	lr

08003516 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003516:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800351a:	4770      	bx	lr

0800351c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800351c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800351e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003520:	4604      	mov	r4, r0
        setX(x);
 8003522:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8003524:	4615      	mov	r5, r2
        setX(x);
 8003526:	4798      	blx	r3
        setBaselineY(baselineY);
 8003528:	6823      	ldr	r3, [r4, #0]
 800352a:	4629      	mov	r1, r5
 800352c:	4620      	mov	r0, r4
 800352e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8003530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8003534:	4718      	bx	r3

08003536 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8003536:	2000      	movs	r0, #0
 8003538:	4770      	bx	lr

0800353a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800353a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800353c:	4770      	bx	lr

0800353e <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 800353e:	4770      	bx	lr

08003540 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 8003540:	6803      	ldr	r3, [r0, #0]
 8003542:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003544:	4718      	bx	r3

08003546 <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 8003546:	6803      	ldr	r3, [r0, #0]
 8003548:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800354a:	4718      	bx	r3

0800354c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800354c:	4770      	bx	lr

0800354e <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800354e:	4770      	bx	lr

08003550 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 8003550:	4770      	bx	lr

08003552 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8003552:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8003554:	68c2      	ldr	r2, [r0, #12]
 8003556:	6844      	ldr	r4, [r0, #4]
 8003558:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800355a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800355c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003560:	07d2      	lsls	r2, r2, #31
 8003562:	bf48      	it	mi
 8003564:	5962      	ldrmi	r2, [r4, r5]
 8003566:	689b      	ldr	r3, [r3, #8]
    }
 8003568:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800356a:	bf48      	it	mi
 800356c:	58d3      	ldrmi	r3, [r2, r3]
 800356e:	4718      	bx	r3

08003570 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003570:	6843      	ldr	r3, [r0, #4]
 8003572:	b12b      	cbz	r3, 8003580 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003574:	6883      	ldr	r3, [r0, #8]
 8003576:	b92b      	cbnz	r3, 8003584 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003578:	68c0      	ldr	r0, [r0, #12]
 800357a:	f000 0001 	and.w	r0, r0, #1
 800357e:	4770      	bx	lr
 8003580:	4618      	mov	r0, r3
 8003582:	4770      	bx	lr
 8003584:	2001      	movs	r0, #1
    }
 8003586:	4770      	bx	lr

08003588 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8003588:	b510      	push	{r4, lr}
    }
 800358a:	2108      	movs	r1, #8
    virtual ~TypedText()
 800358c:	4604      	mov	r4, r0
    }
 800358e:	f029 faf0 	bl	802cb72 <_ZdlPvj>
 8003592:	4620      	mov	r0, r4
 8003594:	bd10      	pop	{r4, pc}

08003596 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8003596:	b510      	push	{r4, lr}
 8003598:	214c      	movs	r1, #76	; 0x4c
 800359a:	4604      	mov	r4, r0
 800359c:	f029 fae9 	bl	802cb72 <_ZdlPvj>
 80035a0:	4620      	mov	r0, r4
 80035a2:	bd10      	pop	{r4, pc}

080035a4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80035a4:	b510      	push	{r4, lr}
 80035a6:	2110      	movs	r1, #16
 80035a8:	4604      	mov	r4, r0
 80035aa:	f029 fae2 	bl	802cb72 <_ZdlPvj>
 80035ae:	4620      	mov	r0, r4
 80035b0:	bd10      	pop	{r4, pc}

080035b2 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 80035b2:	b510      	push	{r4, lr}
 80035b4:	218c      	movs	r1, #140	; 0x8c
 80035b6:	4604      	mov	r4, r0
 80035b8:	f029 fadb 	bl	802cb72 <_ZdlPvj>
 80035bc:	4620      	mov	r0, r4
 80035be:	bd10      	pop	{r4, pc}

080035c0 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035c0:	b538      	push	{r3, r4, r5, lr}
 80035c2:	4605      	mov	r5, r0
 80035c4:	4b05      	ldr	r3, [pc, #20]	; (80035dc <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 80035c6:	f845 3be0 	str.w	r3, [r5], #224
 80035ca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80035cc:	f013 fce6 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035d0:	4628      	mov	r0, r5
 80035d2:	f00f fb9b 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80035d6:	4620      	mov	r0, r4
 80035d8:	bd38      	pop	{r3, r4, r5, pc}
 80035da:	bf00      	nop
 80035dc:	0802f63c 	.word	0x0802f63c

080035e0 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80035e0:	b510      	push	{r4, lr}
 80035e2:	4604      	mov	r4, r0
}
 80035e4:	f7ff ffec 	bl	80035c0 <_ZN23Calibration_PadViewBaseD1Ev>
 80035e8:	4620      	mov	r0, r4
 80035ea:	f641 5104 	movw	r1, #7428	; 0x1d04
 80035ee:	f029 fac0 	bl	802cb72 <_ZdlPvj>
 80035f2:	4620      	mov	r0, r4
 80035f4:	bd10      	pop	{r4, pc}

080035f6 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80035f6:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80035f8:	f7ff fe5a 	bl	80032b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80035fc:	bd08      	pop	{r3, pc}
	...

08003600 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003600:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8003602:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8003604:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003606:	4b12      	ldr	r3, [pc, #72]	; (8003650 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8003608:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800360a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800360c:	b28d      	uxth	r5, r1
 800360e:	b92b      	cbnz	r3, 800361c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8003610:	4b10      	ldr	r3, [pc, #64]	; (8003654 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8003612:	4a11      	ldr	r2, [pc, #68]	; (8003658 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8003614:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003616:	4811      	ldr	r0, [pc, #68]	; (800365c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8003618:	f02a f992 	bl	802d940 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800361c:	4910      	ldr	r1, [pc, #64]	; (8003660 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800361e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003620:	8809      	ldrh	r1, [r1, #0]
 8003622:	4291      	cmp	r1, r2
 8003624:	d803      	bhi.n	800362e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8003626:	4b0f      	ldr	r3, [pc, #60]	; (8003664 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8003628:	4a0b      	ldr	r2, [pc, #44]	; (8003658 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800362a:	216d      	movs	r1, #109	; 0x6d
 800362c:	e7f3      	b.n	8003616 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800362e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8003632:	4b0d      	ldr	r3, [pc, #52]	; (8003668 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800363a:	6803      	ldr	r3, [r0, #0]
 800363c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800363e:	4798      	blx	r3
 8003640:	1a28      	subs	r0, r5, r0
 8003642:	b201      	sxth	r1, r0
 8003644:	4633      	mov	r3, r6
 8003646:	4620      	mov	r0, r4
    }
 8003648:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800364c:	4718      	bx	r3
 800364e:	bf00      	nop
 8003650:	20013894 	.word	0x20013894
 8003654:	0802f344 	.word	0x0802f344
 8003658:	0802f386 	.word	0x0802f386
 800365c:	0802f3c1 	.word	0x0802f3c1
 8003660:	20013898 	.word	0x20013898
 8003664:	0802f408 	.word	0x0802f408
 8003668:	2001389c 	.word	0x2001389c

0800366c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800366c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800366e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003670:	4604      	mov	r4, r0
        setX(x);
 8003672:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003674:	4615      	mov	r5, r2
        setX(x);
 8003676:	4798      	blx	r3
        setY(y);
 8003678:	6823      	ldr	r3, [r4, #0]
 800367a:	4629      	mov	r1, r5
 800367c:	4620      	mov	r0, r4
 800367e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003684:	4718      	bx	r3

08003686 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003686:	b570      	push	{r4, r5, r6, lr}
 8003688:	4604      	mov	r4, r0
 800368a:	461d      	mov	r5, r3
 800368c:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003690:	f7ff ffec 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003694:	6823      	ldr	r3, [r4, #0]
 8003696:	4629      	mov	r1, r5
 8003698:	4620      	mov	r0, r4
 800369a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800369c:	4798      	blx	r3
        setHeight(height);
 800369e:	6823      	ldr	r3, [r4, #0]
 80036a0:	4631      	mov	r1, r6
 80036a2:	4620      	mov	r0, r4
 80036a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80036a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80036aa:	4718      	bx	r3

080036ac <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 80036ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 80036b0:	2200      	movs	r2, #0
 80036b2:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 80036b4:	4905      	ldr	r1, [pc, #20]	; (80036cc <_ZN8touchgfx9ContainerC1Ev+0x20>)
 80036b6:	6001      	str	r1, [r0, #0]
 80036b8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80036bc:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80036c0:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80036c4:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80036c8:	6282      	str	r2, [r0, #40]	; 0x28
    }
 80036ca:	4770      	bx	lr
 80036cc:	08031560 	.word	0x08031560

080036d0 <_ZN8touchgfx6WidgetC1Ev>:
 80036d0:	2200      	movs	r2, #0
 80036d2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80036d6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80036da:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80036de:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80036e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80036e6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80036e8:	4a01      	ldr	r2, [pc, #4]	; (80036f0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80036ea:	6002      	str	r2, [r0, #0]
 80036ec:	4770      	bx	lr
 80036ee:	bf00      	nop
 80036f0:	0802f48c 	.word	0x0802f48c

080036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80036f4:	4b1a      	ldr	r3, [pc, #104]	; (8003760 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80036f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80036f8:	881b      	ldrh	r3, [r3, #0]
 80036fa:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80036fc:	428b      	cmp	r3, r1
    void updateTextPosition()
 80036fe:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003700:	d92b      	bls.n	800375a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003702:	4b18      	ldr	r3, [pc, #96]	; (8003764 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	b92b      	cbnz	r3, 8003714 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003708:	4b17      	ldr	r3, [pc, #92]	; (8003768 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800370a:	4a18      	ldr	r2, [pc, #96]	; (800376c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800370c:	4818      	ldr	r0, [pc, #96]	; (8003770 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800370e:	216c      	movs	r1, #108	; 0x6c
 8003710:	f02a f916 	bl	802d940 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003714:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003718:	4b16      	ldr	r3, [pc, #88]	; (8003774 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003720:	4b15      	ldr	r3, [pc, #84]	; (8003778 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003722:	6818      	ldr	r0, [r3, #0]
 8003724:	f006 ffb0 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003728:	682b      	ldr	r3, [r5, #0]
 800372a:	9001      	str	r0, [sp, #4]
 800372c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800372e:	4628      	mov	r0, r5
 8003730:	4798      	blx	r3
 8003732:	682b      	ldr	r3, [r5, #0]
 8003734:	9901      	ldr	r1, [sp, #4]
 8003736:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003738:	4604      	mov	r4, r0
 800373a:	4628      	mov	r0, r5
 800373c:	4798      	blx	r3
 800373e:	682b      	ldr	r3, [r5, #0]
 8003740:	9901      	ldr	r1, [sp, #4]
 8003742:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003744:	fb14 f400 	smulbb	r4, r4, r0
 8003748:	4628      	mov	r0, r5
 800374a:	4798      	blx	r3
 800374c:	b2a4      	uxth	r4, r4
 800374e:	1823      	adds	r3, r4, r0
 8003750:	b21b      	sxth	r3, r3
 8003752:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003756:	b002      	add	sp, #8
 8003758:	bd70      	pop	{r4, r5, r6, pc}
 800375a:	2300      	movs	r3, #0
 800375c:	e7f9      	b.n	8003752 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800375e:	bf00      	nop
 8003760:	20013898 	.word	0x20013898
 8003764:	20013894 	.word	0x20013894
 8003768:	0802f344 	.word	0x0802f344
 800376c:	0802f386 	.word	0x0802f386
 8003770:	0802f3c1 	.word	0x0802f3c1
 8003774:	2001389c 	.word	0x2001389c
 8003778:	200138a0 	.word	0x200138a0

0800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800377c:	2200      	movs	r2, #0
 800377e:	f04f 31ff 	mov.w	r1, #4294967295
 8003782:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8003786:	6082      	str	r2, [r0, #8]
        {
        }
 8003788:	4770      	bx	lr

0800378a <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800378a:	b510      	push	{r4, lr}
 800378c:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 800378e:	f7ff fff5 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8003792:	4620      	mov	r0, r4
 8003794:	bd10      	pop	{r4, pc}
	...

08003798 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003798:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800379a:	2100      	movs	r1, #0
    TextArea()
 800379c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800379e:	2226      	movs	r2, #38	; 0x26
 80037a0:	f02a fad3 	bl	802dd4a <memset>
 80037a4:	4620      	mov	r0, r4
 80037a6:	f7ff ff93 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 80037aa:	4b09      	ldr	r3, [pc, #36]	; (80037d0 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 80037ac:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 80037ae:	4b09      	ldr	r3, [pc, #36]	; (80037d4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80037b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80037b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80037b6:	85a3      	strh	r3, [r4, #44]	; 0x2c
 80037b8:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 80037bc:	2300      	movs	r3, #0
 80037be:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 80037c2:	8723      	strh	r3, [r4, #56]	; 0x38
 80037c4:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 80037c8:	f7ff ffd8 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 80037cc:	4620      	mov	r0, r4
 80037ce:	bd10      	pop	{r4, pc}
 80037d0:	080319b8 	.word	0x080319b8
 80037d4:	0802f4f4 	.word	0x0802f4f4

080037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 80037d8:	b510      	push	{r4, lr}
 80037da:	4604      	mov	r4, r0
        : TextArea()
 80037dc:	f7ff ffdc 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80037e0:	4b02      	ldr	r3, [pc, #8]	; (80037ec <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 80037e2:	6023      	str	r3, [r4, #0]
 80037e4:	2300      	movs	r3, #0
 80037e6:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80037e8:	4620      	mov	r0, r4
 80037ea:	bd10      	pop	{r4, pc}
 80037ec:	0802f594 	.word	0x0802f594

080037f0 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 80037f0:	b510      	push	{r4, lr}
 80037f2:	4604      	mov	r4, r0
 80037f4:	460b      	mov	r3, r1
 80037f6:	490d      	ldr	r1, [pc, #52]	; (800382c <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 80037f8:	f844 1b04 	str.w	r1, [r4], #4
 80037fc:	4602      	mov	r2, r0
 80037fe:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8003802:	e884 0003 	stmia.w	r4, {r0, r1}
 8003806:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 800380a:	f102 040c 	add.w	r4, r2, #12
 800380e:	e884 0003 	stmia.w	r4, {r0, r1}
 8003812:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8003816:	695c      	ldr	r4, [r3, #20]
 8003818:	61d1      	str	r1, [r2, #28]
 800381a:	6a19      	ldr	r1, [r3, #32]
 800381c:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800381e:	6211      	str	r1, [r2, #32]
 8003820:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8003824:	8493      	strh	r3, [r2, #36]	; 0x24
 8003826:	4610      	mov	r0, r2
 8003828:	bd10      	pop	{r4, pc}
 800382a:	bf00      	nop
 800382c:	08031dd8 	.word	0x08031dd8

08003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8003830:	b538      	push	{r3, r4, r5, lr}
 8003832:	460d      	mov	r5, r1
 8003834:	4604      	mov	r4, r0
class Container : public Drawable
 8003836:	f7ff ffdb 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800383a:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800383c:	62a3      	str	r3, [r4, #40]	; 0x28
 800383e:	4b2b      	ldr	r3, [pc, #172]	; (80038ec <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8003840:	6023      	str	r3, [r4, #0]
 8003842:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8003844:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003846:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8003848:	6323      	str	r3, [r4, #48]	; 0x30
 800384a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800384c:	6363      	str	r3, [r4, #52]	; 0x34
 800384e:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8003852:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8003856:	f7ff ffcb 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800385a:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 800385c:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 800385e:	4b24      	ldr	r3, [pc, #144]	; (80038f0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8003860:	63a3      	str	r3, [r4, #56]	; 0x38
 8003862:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8003866:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 800386a:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 800386e:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8003872:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8003876:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800387a:	f7ff ffb9 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800387e:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8003882:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8003886:	4b1b      	ldr	r3, [pc, #108]	; (80038f4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8003888:	66a3      	str	r3, [r4, #104]	; 0x68
 800388a:	f105 0194 	add.w	r1, r5, #148	; 0x94
 800388e:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8003892:	f7ff ffad 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8003896:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 800389a:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 800389e:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 80038a2:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 80038a6:	4b14      	ldr	r3, [pc, #80]	; (80038f8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 80038a8:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80038ac:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 80038b0:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 80038b4:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 80038b8:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 80038bc:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 80038c0:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 80038c4:	f7ff ff94 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 80038c8:	4b0c      	ldr	r3, [pc, #48]	; (80038fc <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 80038ca:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 80038ce:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 80038d2:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 80038d6:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 80038da:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 80038de:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 80038e2:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 80038e6:	4620      	mov	r0, r4
 80038e8:	bd38      	pop	{r3, r4, r5, pc}
 80038ea:	bf00      	nop
 80038ec:	080315f0 	.word	0x080315f0
 80038f0:	080316b4 	.word	0x080316b4
 80038f4:	0802f504 	.word	0x0802f504
 80038f8:	08031ab0 	.word	0x08031ab0
 80038fc:	08031c94 	.word	0x08031c94

08003900 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8003900:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8003902:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003906:	4299      	cmp	r1, r3
{
 8003908:	b0c7      	sub	sp, #284	; 0x11c
 800390a:	4604      	mov	r4, r0
 800390c:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800390e:	d103      	bne.n	8003918 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003910:	f015 f846 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8003914:	f001 fe2c 	bl	8005570 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8003918:	f504 731e 	add.w	r3, r4, #632	; 0x278
 800391c:	429d      	cmp	r5, r3
 800391e:	d122      	bne.n	8003966 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
        SwipeContainer swipeContainer = swipeContainer1;
 8003920:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003924:	4631      	mov	r1, r6
 8003926:	a809      	add	r0, sp, #36	; 0x24
 8003928:	f7ff ff82 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 800392c:	a801      	add	r0, sp, #4
 800392e:	f7fd fb75 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 0, 12);
 8003932:	eddd 7a03 	vldr	s15, [sp, #12]
 8003936:	48cf      	ldr	r0, [pc, #828]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003938:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800393c:	230c      	movs	r3, #12
 800393e:	ee17 7a90 	vmov	r7, s15
 8003942:	ee17 1a90 	vmov	r1, s15
 8003946:	2200      	movs	r2, #0
 8003948:	f7fd fe6a 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 800394c:	4aca      	ldr	r2, [pc, #808]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 800394e:	463b      	mov	r3, r7
 8003950:	210a      	movs	r1, #10
 8003952:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8003956:	f018 f9d1 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 800395a:	4630      	mov	r0, r6
 800395c:	f016 f908 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003960:	a809      	add	r0, sp, #36	; 0x24
 8003962:	f00f f9d3 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8003966:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800396a:	429d      	cmp	r5, r3
 800396c:	d122      	bne.n	80039b4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb4>
        SwipeContainer swipeContainer = swipeContainer1;
 800396e:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003972:	4631      	mov	r1, r6
 8003974:	a809      	add	r0, sp, #36	; 0x24
 8003976:	f7ff ff5b 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 800397a:	a801      	add	r0, sp, #4
 800397c:	f7fd fb4e 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 1, 12);
 8003980:	eddd 7a03 	vldr	s15, [sp, #12]
 8003984:	48bb      	ldr	r0, [pc, #748]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003986:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800398a:	230c      	movs	r3, #12
 800398c:	ee17 7a90 	vmov	r7, s15
 8003990:	ee17 1a90 	vmov	r1, s15
 8003994:	2201      	movs	r2, #1
 8003996:	f7fd fe43 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 800399a:	4ab7      	ldr	r2, [pc, #732]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 800399c:	463b      	mov	r3, r7
 800399e:	210a      	movs	r1, #10
 80039a0:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 80039a4:	f018 f9aa 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039a8:	4630      	mov	r0, r6
 80039aa:	f016 f8e1 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039ae:	a809      	add	r0, sp, #36	; 0x24
 80039b0:	f00f f9ac 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 80039b4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80039b8:	429d      	cmp	r5, r3
 80039ba:	d122      	bne.n	8003a02 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x102>
        SwipeContainer swipeContainer = swipeContainer1;
 80039bc:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80039c0:	4631      	mov	r1, r6
 80039c2:	a809      	add	r0, sp, #36	; 0x24
 80039c4:	f7ff ff34 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 80039c8:	a801      	add	r0, sp, #4
 80039ca:	f7fd fb27 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pl, 2, 12);
 80039ce:	eddd 7a03 	vldr	s15, [sp, #12]
 80039d2:	48a8      	ldr	r0, [pc, #672]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 80039d4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80039d8:	230c      	movs	r3, #12
 80039da:	ee17 7a90 	vmov	r7, s15
 80039de:	ee17 1a90 	vmov	r1, s15
 80039e2:	2202      	movs	r2, #2
 80039e4:	f7fd fe1c 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pl);
 80039e8:	4aa3      	ldr	r2, [pc, #652]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 80039ea:	463b      	mov	r3, r7
 80039ec:	210a      	movs	r1, #10
 80039ee:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 80039f2:	f018 f983 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80039f6:	4630      	mov	r0, r6
 80039f8:	f016 f8ba 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80039fc:	a809      	add	r0, sp, #36	; 0x24
 80039fe:	f00f f985 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8003a02:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8003a06:	429d      	cmp	r5, r3
 8003a08:	d122      	bne.n	8003a50 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x150>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a0a:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a0e:	4631      	mov	r1, r6
 8003a10:	a809      	add	r0, sp, #36	; 0x24
 8003a12:	f7ff ff0d 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a16:	a801      	add	r0, sp, #4
 8003a18:	f7fd fb00 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 3, 12);
 8003a1c:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a20:	4894      	ldr	r0, [pc, #592]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003a22:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a26:	230c      	movs	r3, #12
 8003a28:	ee17 7a90 	vmov	r7, s15
 8003a2c:	ee17 1a90 	vmov	r1, s15
 8003a30:	2203      	movs	r2, #3
 8003a32:	f7fd fdf5 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003a36:	4a90      	ldr	r2, [pc, #576]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003a38:	463b      	mov	r3, r7
 8003a3a:	210a      	movs	r1, #10
 8003a3c:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8003a40:	f018 f95c 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a44:	4630      	mov	r0, r6
 8003a46:	f016 f893 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a4a:	a809      	add	r0, sp, #36	; 0x24
 8003a4c:	f00f f95e 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8003a50:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8003a54:	429d      	cmp	r5, r3
 8003a56:	d122      	bne.n	8003a9e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x19e>
        SwipeContainer swipeContainer = swipeContainer1;
 8003a58:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003a5c:	4631      	mov	r1, r6
 8003a5e:	a809      	add	r0, sp, #36	; 0x24
 8003a60:	f7ff fee6 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003a64:	a801      	add	r0, sp, #4
 8003a66:	f7fd fad9 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 4, 12);
 8003a6a:	eddd 7a01 	vldr	s15, [sp, #4]
 8003a6e:	4881      	ldr	r0, [pc, #516]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003a70:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a74:	230c      	movs	r3, #12
 8003a76:	ee17 7a90 	vmov	r7, s15
 8003a7a:	ee17 1a90 	vmov	r1, s15
 8003a7e:	2204      	movs	r2, #4
 8003a80:	f7fd fdce 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003a84:	4a7c      	ldr	r2, [pc, #496]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003a86:	463b      	mov	r3, r7
 8003a88:	210a      	movs	r1, #10
 8003a8a:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8003a8e:	f018 f935 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003a92:	4630      	mov	r0, r6
 8003a94:	f016 f86c 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003a98:	a809      	add	r0, sp, #36	; 0x24
 8003a9a:	f00f f937 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8003a9e:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8003aa2:	429d      	cmp	r5, r3
 8003aa4:	d122      	bne.n	8003aec <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1ec>
        SwipeContainer swipeContainer = swipeContainer1;
 8003aa6:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003aaa:	4631      	mov	r1, r6
 8003aac:	a809      	add	r0, sp, #36	; 0x24
 8003aae:	f7ff febf 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003ab2:	a801      	add	r0, sp, #4
 8003ab4:	f7fd fab2 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_pr, 5, 12);
 8003ab8:	eddd 7a01 	vldr	s15, [sp, #4]
 8003abc:	486d      	ldr	r0, [pc, #436]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003abe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ac2:	230c      	movs	r3, #12
 8003ac4:	ee17 7a90 	vmov	r7, s15
 8003ac8:	ee17 1a90 	vmov	r1, s15
 8003acc:	2205      	movs	r2, #5
 8003ace:	f7fd fda7 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_pr);
 8003ad2:	4a69      	ldr	r2, [pc, #420]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003ad4:	463b      	mov	r3, r7
 8003ad6:	210a      	movs	r1, #10
 8003ad8:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8003adc:	f018 f90e 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003ae0:	4630      	mov	r0, r6
 8003ae2:	f016 f845 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003ae6:	a809      	add	r0, sp, #36	; 0x24
 8003ae8:	f00f f910 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8003aec:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8003af0:	429d      	cmp	r5, r3
 8003af2:	d122      	bne.n	8003b3a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x23a>
        SwipeContainer swipeContainer = swipeContainer1;
 8003af4:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003af8:	4631      	mov	r1, r6
 8003afa:	a809      	add	r0, sp, #36	; 0x24
 8003afc:	f7ff fe98 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b00:	a801      	add	r0, sp, #4
 8003b02:	f7fd fa8b 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 6, 12);
 8003b06:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b0a:	485a      	ldr	r0, [pc, #360]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003b0c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b10:	230c      	movs	r3, #12
 8003b12:	ee17 7a90 	vmov	r7, s15
 8003b16:	ee17 1a90 	vmov	r1, s15
 8003b1a:	2206      	movs	r2, #6
 8003b1c:	f7fd fd80 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003b20:	4a55      	ldr	r2, [pc, #340]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003b22:	463b      	mov	r3, r7
 8003b24:	210a      	movs	r1, #10
 8003b26:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8003b2a:	f018 f8e7 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b2e:	4630      	mov	r0, r6
 8003b30:	f016 f81e 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b34:	a809      	add	r0, sp, #36	; 0x24
 8003b36:	f00f f8e9 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003b3a:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8003b3e:	429d      	cmp	r5, r3
 8003b40:	d122      	bne.n	8003b88 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x288>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b42:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b46:	4631      	mov	r1, r6
 8003b48:	a809      	add	r0, sp, #36	; 0x24
 8003b4a:	f7ff fe71 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b4e:	a801      	add	r0, sp, #4
 8003b50:	f7fd fa64 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 7, 12);
 8003b54:	eddd 7a07 	vldr	s15, [sp, #28]
 8003b58:	4846      	ldr	r0, [pc, #280]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003b5a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b5e:	230c      	movs	r3, #12
 8003b60:	ee17 7a90 	vmov	r7, s15
 8003b64:	ee17 1a90 	vmov	r1, s15
 8003b68:	2207      	movs	r2, #7
 8003b6a:	f7fd fd59 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003b6e:	4a42      	ldr	r2, [pc, #264]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003b70:	463b      	mov	r3, r7
 8003b72:	210a      	movs	r1, #10
 8003b74:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003b78:	f018 f8c0 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003b7c:	4630      	mov	r0, r6
 8003b7e:	f015 fff7 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003b82:	a809      	add	r0, sp, #36	; 0x24
 8003b84:	f00f f8c2 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003b88:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003b8c:	429d      	cmp	r5, r3
 8003b8e:	d122      	bne.n	8003bd6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2d6>
        SwipeContainer swipeContainer = swipeContainer1;
 8003b90:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003b94:	4631      	mov	r1, r6
 8003b96:	a809      	add	r0, sp, #36	; 0x24
 8003b98:	f7ff fe4a 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003b9c:	a801      	add	r0, sp, #4
 8003b9e:	f7fd fa3d 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsl, 8, 12);
 8003ba2:	eddd 7a07 	vldr	s15, [sp, #28]
 8003ba6:	4833      	ldr	r0, [pc, #204]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003ba8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bac:	230c      	movs	r3, #12
 8003bae:	ee17 7a90 	vmov	r7, s15
 8003bb2:	ee17 1a90 	vmov	r1, s15
 8003bb6:	2208      	movs	r2, #8
 8003bb8:	f7fd fd32 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsl);
 8003bbc:	4a2e      	ldr	r2, [pc, #184]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003bbe:	463b      	mov	r3, r7
 8003bc0:	210a      	movs	r1, #10
 8003bc2:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8003bc6:	f018 f899 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003bca:	4630      	mov	r0, r6
 8003bcc:	f015 ffd0 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003bd0:	a809      	add	r0, sp, #36	; 0x24
 8003bd2:	f00f f89b 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8003bd6:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8003bda:	429d      	cmp	r5, r3
 8003bdc:	d122      	bne.n	8003c24 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x324>
        SwipeContainer swipeContainer = swipeContainer1;
 8003bde:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003be2:	4631      	mov	r1, r6
 8003be4:	a809      	add	r0, sp, #36	; 0x24
 8003be6:	f7ff fe23 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003bea:	a801      	add	r0, sp, #4
 8003bec:	f7fd fa16 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 9, 12);
 8003bf0:	eddd 7a05 	vldr	s15, [sp, #20]
 8003bf4:	481f      	ldr	r0, [pc, #124]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003bf6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bfa:	230c      	movs	r3, #12
 8003bfc:	ee17 7a90 	vmov	r7, s15
 8003c00:	ee17 1a90 	vmov	r1, s15
 8003c04:	2209      	movs	r2, #9
 8003c06:	f7fd fd0b 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003c0a:	4a1b      	ldr	r2, [pc, #108]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003c0c:	463b      	mov	r3, r7
 8003c0e:	210a      	movs	r1, #10
 8003c10:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003c14:	f018 f872 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c18:	4630      	mov	r0, r6
 8003c1a:	f015 ffa9 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c1e:	a809      	add	r0, sp, #36	; 0x24
 8003c20:	f00f f874 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH2)
 8003c24:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003c28:	429d      	cmp	r5, r3
 8003c2a:	d127      	bne.n	8003c7c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x37c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c2c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c30:	4631      	mov	r1, r6
 8003c32:	a809      	add	r0, sp, #36	; 0x24
 8003c34:	f7ff fdfc 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c38:	a801      	add	r0, sp, #4
 8003c3a:	f7fd f9ef 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 10, 12);
 8003c3e:	eddd 7a05 	vldr	s15, [sp, #20]
 8003c42:	480c      	ldr	r0, [pc, #48]	; (8003c74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x374>)
 8003c44:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c48:	230c      	movs	r3, #12
 8003c4a:	ee17 7a90 	vmov	r7, s15
 8003c4e:	ee17 1a90 	vmov	r1, s15
 8003c52:	220a      	movs	r2, #10
 8003c54:	f7fd fce4 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003c58:	4a07      	ldr	r2, [pc, #28]	; (8003c78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x378>)
 8003c5a:	463b      	mov	r3, r7
 8003c5c:	210a      	movs	r1, #10
 8003c5e:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8003c62:	f018 f84b 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003c66:	4630      	mov	r0, r6
 8003c68:	f015 ff82 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003c6c:	a809      	add	r0, sp, #36	; 0x24
 8003c6e:	f00f f84d 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003c72:	e003      	b.n	8003c7c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x37c>
 8003c74:	081e0000 	.word	0x081e0000
 8003c78:	0802f446 	.word	0x0802f446
    if (&src == &buttonWithIcon_RH3)
 8003c7c:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8003c80:	429d      	cmp	r5, r3
 8003c82:	d122      	bne.n	8003cca <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3ca>
        SwipeContainer swipeContainer = swipeContainer1;
 8003c84:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c88:	4631      	mov	r1, r6
 8003c8a:	a809      	add	r0, sp, #36	; 0x24
 8003c8c:	f7ff fdd0 	bl	8003830 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        ACCU_FFT accu_fft = accurate_FFT();
 8003c90:	a801      	add	r0, sp, #4
 8003c92:	f7fd f9c3 	bl	800101c <accurate_FFT>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)accu_fft.signal_strength_hsr, 11, 12);
 8003c96:	eddd 7a05 	vldr	s15, [sp, #20]
 8003c9a:	480d      	ldr	r0, [pc, #52]	; (8003cd0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d0>)
 8003c9c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ca0:	230c      	movs	r3, #12
 8003ca2:	ee17 5a90 	vmov	r5, s15
 8003ca6:	ee17 1a90 	vmov	r1, s15
 8003caa:	220b      	movs	r2, #11
 8003cac:	f7fd fcb8 	bl	8001620 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)accu_fft.signal_strength_hsr);
 8003cb0:	4a08      	ldr	r2, [pc, #32]	; (8003cd4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3d4>)
 8003cb2:	462b      	mov	r3, r5
 8003cb4:	210a      	movs	r1, #10
 8003cb6:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003cba:	f018 f81f 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003cbe:	4630      	mov	r0, r6
 8003cc0:	f015 ff56 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003cc4:	a809      	add	r0, sp, #36	; 0x24
 8003cc6:	f00f f821 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003cca:	b047      	add	sp, #284	; 0x11c
 8003ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003cce:	bf00      	nop
 8003cd0:	081e0000 	.word	0x081e0000
 8003cd4:	0802f446 	.word	0x0802f446

08003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003cd8:	0152      	lsls	r2, r2, #5
 8003cda:	0149      	lsls	r1, r1, #5
 8003cdc:	f010 bf6a 	b.w	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003ce0:	0152      	lsls	r2, r2, #5
 8003ce2:	0149      	lsls	r1, r1, #5
 8003ce4:	f010 bf71 	b.w	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003ce8:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003cea:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003cec:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003cf0:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003cf4:	d004      	beq.n	8003d00 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 8003cf6:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003cfa:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003cfc:	f010 be64 	b.w	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003d00:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003d04:	4770      	bx	lr
	...

08003d08 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d0c:	ed2d 8b10 	vpush	{d8-d15}
 8003d10:	4604      	mov	r4, r0
 8003d12:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003d14:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8003d16:	2500      	movs	r5, #0
 8003d18:	f016 fac2 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8003d1c:	4be5      	ldr	r3, [pc, #916]	; (80040b4 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003d1e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003d20:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003d24:	2226      	movs	r2, #38	; 0x26
 8003d26:	4629      	mov	r1, r5
 8003d28:	4648      	mov	r0, r9
 8003d2a:	f02a f80e 	bl	802dd4a <memset>
 8003d2e:	4648      	mov	r0, r9
 8003d30:	f7ff fcce 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8003d34:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003d38:	26ff      	movs	r6, #255	; 0xff
 8003d3a:	4bdf      	ldr	r3, [pc, #892]	; (80040b8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003d3c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003d3e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003d40:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003d44:	4629      	mov	r1, r5
 8003d46:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003d4a:	4640      	mov	r0, r8
        : color(col)
 8003d4c:	66a5      	str	r5, [r4, #104]	; 0x68
 8003d4e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003d52:	f029 fffa 	bl	802dd4a <memset>
 8003d56:	4640      	mov	r0, r8
 8003d58:	f7ff fcba 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8003d5c:	4bd7      	ldr	r3, [pc, #860]	; (80040bc <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003d5e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003d60:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 8003d64:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003d68:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003d6c:	ae29      	add	r6, sp, #164	; 0xa4
 8003d6e:	4631      	mov	r1, r6
 8003d70:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8003d74:	4640      	mov	r0, r8
 8003d76:	f012 f914 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003d7a:	4658      	mov	r0, fp
 8003d7c:	f012 fa48 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003d80:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8003d84:	4618      	mov	r0, r3
 8003d86:	ee08 3a10 	vmov	s16, r3
 8003d8a:	f00f f8ed 	bl	8012f68 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003d8e:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 8003d92:	4618      	mov	r0, r3
 8003d94:	ee08 3a90 	vmov	s17, r3
 8003d98:	f7ff fc88 	bl	80036ac <_ZN8touchgfx9ContainerC1Ev>
 8003d9c:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003da0:	4618      	mov	r0, r3
 8003da2:	9311      	str	r3, [sp, #68]	; 0x44
 8003da4:	f012 f8d6 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003da8:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003dac:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003db0:	4618      	mov	r0, r3
 8003db2:	9312      	str	r3, [sp, #72]	; 0x48
 8003db4:	f012 f8ce 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003db8:	4638      	mov	r0, r7
 8003dba:	f012 f8cb 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003dbe:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003dc2:	4618      	mov	r0, r3
 8003dc4:	ee0d 3a90 	vmov	s27, r3
 8003dc8:	f7ff fd06 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dcc:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003dd0:	4618      	mov	r0, r3
 8003dd2:	ee0e 3a10 	vmov	s28, r3
 8003dd6:	f7ff fcff 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003dda:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003dde:	4618      	mov	r0, r3
 8003de0:	ee0e 3a90 	vmov	s29, r3
 8003de4:	f7ff fcf8 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003de8:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003dec:	4618      	mov	r0, r3
 8003dee:	ee0a 3a90 	vmov	s21, r3
 8003df2:	f010 fdc9 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8003df6:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003dfa:	4618      	mov	r0, r3
 8003dfc:	931c      	str	r3, [sp, #112]	; 0x70
 8003dfe:	f7ff fa6b 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e02:	4baf      	ldr	r3, [pc, #700]	; (80040c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e04:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003e08:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e0c:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003e10:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003e14:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003e16:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003e1a:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003e1e:	9107      	str	r1, [sp, #28]
 8003e20:	f7ff fcba 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8003e24:	4650      	mov	r0, sl
 8003e26:	f7ff fc41 	bl	80036ac <_ZN8touchgfx9ContainerC1Ev>
 8003e2a:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003e2e:	4608      	mov	r0, r1
 8003e30:	9113      	str	r1, [sp, #76]	; 0x4c
 8003e32:	f012 f88f 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e36:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003e3a:	4608      	mov	r0, r1
 8003e3c:	9114      	str	r1, [sp, #80]	; 0x50
 8003e3e:	f012 f889 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e42:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 8003e46:	4608      	mov	r0, r1
 8003e48:	9115      	str	r1, [sp, #84]	; 0x54
 8003e4a:	f012 f883 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003e4e:	f204 5144 	addw	r1, r4, #1348	; 0x544
 8003e52:	4608      	mov	r0, r1
 8003e54:	9108      	str	r1, [sp, #32]
 8003e56:	f7ff fcbf 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e5a:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003e5e:	4608      	mov	r0, r1
 8003e60:	9109      	str	r1, [sp, #36]	; 0x24
 8003e62:	f7ff fcb9 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e66:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003e6a:	4608      	mov	r0, r1
 8003e6c:	910a      	str	r1, [sp, #40]	; 0x28
 8003e6e:	f7ff fcb3 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003e72:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 8003e76:	4608      	mov	r0, r1
 8003e78:	ee0b 1a10 	vmov	s22, r1
 8003e7c:	f010 fd84 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8003e80:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 8003e84:	4608      	mov	r0, r1
 8003e86:	911d      	str	r1, [sp, #116]	; 0x74
 8003e88:	f7ff fa26 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003e8c:	4b8c      	ldr	r3, [pc, #560]	; (80040c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003e8e:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 8003e92:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003e96:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 8003e9a:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003e9e:	4608      	mov	r0, r1
 8003ea0:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003ea4:	ee0f 1a10 	vmov	s30, r1
 8003ea8:	f7ff fc76 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8003eac:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003eb0:	4608      	mov	r0, r1
 8003eb2:	ee09 1a10 	vmov	s18, r1
 8003eb6:	f7ff fbf9 	bl	80036ac <_ZN8touchgfx9ContainerC1Ev>
 8003eba:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003ebe:	4608      	mov	r0, r1
 8003ec0:	9116      	str	r1, [sp, #88]	; 0x58
 8003ec2:	f012 f847 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ec6:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 8003eca:	4608      	mov	r0, r1
 8003ecc:	9117      	str	r1, [sp, #92]	; 0x5c
 8003ece:	f012 f841 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ed2:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 8003ed6:	4608      	mov	r0, r1
 8003ed8:	9118      	str	r1, [sp, #96]	; 0x60
 8003eda:	f012 f83b 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003ede:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003ee2:	4608      	mov	r0, r1
 8003ee4:	910b      	str	r1, [sp, #44]	; 0x2c
 8003ee6:	f7ff fc77 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003eea:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003eee:	4608      	mov	r0, r1
 8003ef0:	910c      	str	r1, [sp, #48]	; 0x30
 8003ef2:	f7ff fc71 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003ef6:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003efa:	4608      	mov	r0, r1
 8003efc:	910d      	str	r1, [sp, #52]	; 0x34
 8003efe:	f7ff fc6b 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f02:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 8003f06:	4608      	mov	r0, r1
 8003f08:	ee0b 1a90 	vmov	s23, r1
 8003f0c:	f010 fd3c 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8003f10:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003f14:	4608      	mov	r0, r1
 8003f16:	911e      	str	r1, [sp, #120]	; 0x78
 8003f18:	f7ff f9de 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003f1c:	4b68      	ldr	r3, [pc, #416]	; (80040c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003f1e:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003f22:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003f26:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003f2a:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003f2e:	4608      	mov	r0, r1
 8003f30:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003f34:	ee0f 1a90 	vmov	s31, r1
 8003f38:	f7ff fc2e 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8003f3c:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003f40:	4608      	mov	r0, r1
 8003f42:	ee09 1a90 	vmov	s19, r1
 8003f46:	f7ff fbb1 	bl	80036ac <_ZN8touchgfx9ContainerC1Ev>
 8003f4a:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003f4e:	4608      	mov	r0, r1
 8003f50:	9119      	str	r1, [sp, #100]	; 0x64
 8003f52:	f011 ffff 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f56:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003f5a:	4608      	mov	r0, r1
 8003f5c:	911a      	str	r1, [sp, #104]	; 0x68
 8003f5e:	f011 fff9 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f62:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 8003f66:	4608      	mov	r0, r1
 8003f68:	911b      	str	r1, [sp, #108]	; 0x6c
 8003f6a:	f011 fff3 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003f6e:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 8003f72:	4608      	mov	r0, r1
 8003f74:	910e      	str	r1, [sp, #56]	; 0x38
 8003f76:	f7ff fc2f 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f7a:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003f7e:	4608      	mov	r0, r1
 8003f80:	910f      	str	r1, [sp, #60]	; 0x3c
 8003f82:	f7ff fc29 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f86:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003f8a:	4608      	mov	r0, r1
 8003f8c:	9110      	str	r1, [sp, #64]	; 0x40
 8003f8e:	f7ff fc23 	bl	80037d8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003f92:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 8003f96:	4608      	mov	r0, r1
 8003f98:	ee0c 1a10 	vmov	s24, r1
 8003f9c:	f010 fcf4 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8003fa0:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003fa4:	4608      	mov	r0, r1
 8003fa6:	911f      	str	r1, [sp, #124]	; 0x7c
 8003fa8:	f7ff f996 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fac:	4b44      	ldr	r3, [pc, #272]	; (80040c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fae:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003fb2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fb6:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 8003fba:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003fbe:	4608      	mov	r0, r1
 8003fc0:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003fc4:	9103      	str	r1, [sp, #12]
 8003fc6:	f7ff fbe7 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8003fca:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003fce:	4608      	mov	r0, r1
 8003fd0:	ee0c 1a90 	vmov	s25, r1
 8003fd4:	f010 fcd8 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8003fd8:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003fdc:	4608      	mov	r0, r1
 8003fde:	9120      	str	r1, [sp, #128]	; 0x80
 8003fe0:	f7ff f97a 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fe4:	4b36      	ldr	r3, [pc, #216]	; (80040c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003fe6:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003fea:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003fee:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8003ff2:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 8003ff6:	4608      	mov	r0, r1
 8003ff8:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003ffc:	9104      	str	r1, [sp, #16]
 8003ffe:	f7ff fbcb 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8004002:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 8004006:	4608      	mov	r0, r1
 8004008:	ee0d 1a10 	vmov	s26, r1
 800400c:	f010 fcbc 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8004010:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8004014:	4608      	mov	r0, r1
 8004016:	9121      	str	r1, [sp, #132]	; 0x84
 8004018:	f7ff f95e 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800401c:	4b28      	ldr	r3, [pc, #160]	; (80040c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800401e:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8004022:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8004026:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 800402a:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 800402e:	4618      	mov	r0, r3
 8004030:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8004034:	9305      	str	r3, [sp, #20]
 8004036:	f7ff fbaf 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 800403a:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 800403e:	4618      	mov	r0, r3
 8004040:	9306      	str	r3, [sp, #24]
 8004042:	f7ff fba9 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004046:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800404a:	4a1e      	ldr	r2, [pc, #120]	; (80040c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 800404c:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8004050:	4a1d      	ldr	r2, [pc, #116]	; (80040c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 8004052:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 8004056:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 800405a:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800405e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004062:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 8004066:	f012 ff8f 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800406a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800406e:	462a      	mov	r2, r5
 8004070:	4648      	mov	r0, r9
 8004072:	9300      	str	r3, [sp, #0]
 8004074:	4629      	mov	r1, r5
 8004076:	23f0      	movs	r3, #240	; 0xf0
 8004078:	f7ff fb05 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800407c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004080:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8004082:	1d23      	adds	r3, r4, #4
 8004084:	4618      	mov	r0, r3
 8004086:	4649      	mov	r1, r9
 8004088:	ee0a 3a10 	vmov	s20, r3
 800408c:	f00e fbb0 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004090:	462a      	mov	r2, r5
 8004092:	4640      	mov	r0, r8
 8004094:	4629      	mov	r1, r5
 8004096:	f7ff fae9 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800409a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800409c:	4640      	mov	r0, r8
 800409e:	4631      	mov	r1, r6
 80040a0:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040a4:	f011 ff7d 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80040a8:	4641      	mov	r1, r8
 80040aa:	ee1a 0a10 	vmov	r0, s20
 80040ae:	f00e fb9f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80040b2:	e00b      	b.n	80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80040b4:	0802f63c 	.word	0x0802f63c
 80040b8:	08031a48 	.word	0x08031a48
 80040bc:	08031c94 	.word	0x08031c94
 80040c0:	0803177c 	.word	0x0803177c
 80040c4:	0802f624 	.word	0x0802f624
 80040c8:	08003901 	.word	0x08003901
    buttonWithLabel3.setXY(33, 257);
 80040cc:	4658      	mov	r0, fp
 80040ce:	f240 1201 	movw	r2, #257	; 0x101
 80040d2:	2121      	movs	r1, #33	; 0x21
 80040d4:	f7ff faca 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80040d8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80040da:	4632      	mov	r2, r6
 80040dc:	a928      	add	r1, sp, #160	; 0xa0
 80040de:	4658      	mov	r0, fp
 80040e0:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80040e4:	2302      	movs	r3, #2
 80040e6:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80040ea:	f011 fd64 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80040ee:	233b      	movs	r3, #59	; 0x3b
        updateTextPosition();
 80040f0:	4658      	mov	r0, fp
 80040f2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80040f6:	f7ff fafd 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80040fa:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 80040fe:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 8004102:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8004106:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8004108:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800410c:	4659      	mov	r1, fp
 800410e:	ee1a 0a10 	vmov	r0, s20
 8004112:	9302      	str	r3, [sp, #8]
 8004114:	f00e fb6c 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8004118:	ee18 0a10 	vmov	r0, s16
 800411c:	2255      	movs	r2, #85	; 0x55
 800411e:	4629      	mov	r1, r5
 8004120:	f7ff faa4 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004124:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8004126:	ee18 0a10 	vmov	r0, s16
 800412a:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800412e:	4632      	mov	r2, r6
 8004130:	2307      	movs	r3, #7
 8004132:	a928      	add	r1, sp, #160	; 0xa0
 8004134:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8004138:	f00e ffb4 	bl	80130a4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 800413c:	228c      	movs	r2, #140	; 0x8c
 800413e:	ee18 0a10 	vmov	r0, s16
 8004142:	2150      	movs	r1, #80	; 0x50
 8004144:	f00e fe5c 	bl	8012e00 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8004148:	ee18 0a10 	vmov	r0, s16
 800414c:	2132      	movs	r1, #50	; 0x32
 800414e:	f00e fdda 	bl	8012d06 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 8004152:	ee18 0a10 	vmov	r0, s16
 8004156:	2132      	movs	r1, #50	; 0x32
 8004158:	f00e fe50 	bl	8012dfc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 800415c:	4b47      	ldr	r3, [pc, #284]	; (800427c <_ZN23Calibration_PadViewBaseC1Ev+0x574>)
    buttonWithIcon_LP3.setXY(194, 97);
 800415e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004160:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8004164:	2261      	movs	r2, #97	; 0x61
 8004166:	21c2      	movs	r1, #194	; 0xc2
 8004168:	f7ff fa80 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800416c:	f04f 0809 	mov.w	r8, #9
 8004170:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004174:	aa27      	add	r2, sp, #156	; 0x9c
 8004176:	9811      	ldr	r0, [sp, #68]	; 0x44
 8004178:	9600      	str	r6, [sp, #0]
 800417a:	ab28      	add	r3, sp, #160	; 0xa0
 800417c:	a926      	add	r1, sp, #152	; 0x98
 800417e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004182:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004186:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800418a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800418e:	f011 fe4c 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004192:	9b02      	ldr	r3, [sp, #8]
 8004194:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8004198:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 800419a:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 800419e:	ee18 0a90 	vmov	r0, s17
 80041a2:	f00e fb25 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80041a6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041a8:	223d      	movs	r2, #61	; 0x3d
 80041aa:	21c2      	movs	r1, #194	; 0xc2
 80041ac:	f7ff fa5e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041b0:	aa27      	add	r2, sp, #156	; 0x9c
 80041b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041b4:	9600      	str	r6, [sp, #0]
 80041b6:	ab28      	add	r3, sp, #160	; 0xa0
 80041b8:	a926      	add	r1, sp, #152	; 0x98
 80041ba:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80041be:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80041c2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80041c6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80041ca:	f011 fe2e 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80041ce:	9b02      	ldr	r3, [sp, #8]
 80041d0:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80041d4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80041d6:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80041da:	ee18 0a90 	vmov	r0, s17
 80041de:	f00e fb07 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80041e2:	4638      	mov	r0, r7
 80041e4:	2219      	movs	r2, #25
 80041e6:	21c2      	movs	r1, #194	; 0xc2
 80041e8:	f7ff fa40 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80041ec:	aa27      	add	r2, sp, #156	; 0x9c
 80041ee:	4638      	mov	r0, r7
 80041f0:	ab28      	add	r3, sp, #160	; 0xa0
 80041f2:	a926      	add	r1, sp, #152	; 0x98
 80041f4:	9600      	str	r6, [sp, #0]
 80041f6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80041fa:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80041fe:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004202:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004206:	f011 fe10 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800420a:	9b02      	ldr	r3, [sp, #8]
 800420c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8004210:	4639      	mov	r1, r7
 8004212:	ee18 0a90 	vmov	r0, s17
 8004216:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800421a:	f00e fae9 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800421e:	2268      	movs	r2, #104	; 0x68
 8004220:	ee1d 0a90 	vmov	r0, s27
 8004224:	210a      	movs	r1, #10
 8004226:	f7ff fa21 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800422a:	f04f 33ff 	mov.w	r3, #4294967295
 800422e:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 8004232:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8004236:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 800423a:	af22      	add	r7, sp, #136	; 0x88
 800423c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004240:	ee1d 1a90 	vmov	r1, s27
 8004244:	4638      	mov	r0, r7
 8004246:	4798      	blx	r3
 8004248:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800424c:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8004250:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004254:	4b0a      	ldr	r3, [pc, #40]	; (8004280 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
 8004256:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8004258:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 800425c:	b92b      	cbnz	r3, 800426a <_ZN23Calibration_PadViewBaseC1Ev+0x562>
 800425e:	4b09      	ldr	r3, [pc, #36]	; (8004284 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8004260:	4a09      	ldr	r2, [pc, #36]	; (8004288 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004262:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004264:	4809      	ldr	r0, [pc, #36]	; (800428c <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8004266:	f029 fb6b 	bl	802d940 <__assert_func>
 800426a:	4b09      	ldr	r3, [pc, #36]	; (8004290 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 800426c:	881b      	ldrh	r3, [r3, #0]
 800426e:	2b26      	cmp	r3, #38	; 0x26
 8004270:	d812      	bhi.n	8004298 <_ZN23Calibration_PadViewBaseC1Ev+0x590>
 8004272:	4b08      	ldr	r3, [pc, #32]	; (8004294 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8004274:	4a04      	ldr	r2, [pc, #16]	; (8004288 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 8004276:	2161      	movs	r1, #97	; 0x61
 8004278:	e7f4      	b.n	8004264 <_ZN23Calibration_PadViewBaseC1Ev+0x55c>
 800427a:	bf00      	nop
 800427c:	00ac00f0 	.word	0x00ac00f0
 8004280:	20013894 	.word	0x20013894
 8004284:	0802f344 	.word	0x0802f344
 8004288:	0802f449 	.word	0x0802f449
 800428c:	0802f3c1 	.word	0x0802f3c1
 8004290:	20013898 	.word	0x20013898
 8004294:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8004298:	4bdb      	ldr	r3, [pc, #876]	; (8004608 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800429a:	2126      	movs	r1, #38	; 0x26
 800429c:	6818      	ldr	r0, [r3, #0]
 800429e:	f006 f9f3 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80042a2:	4ada      	ldr	r2, [pc, #872]	; (800460c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80042a4:	4603      	mov	r3, r0
 80042a6:	210a      	movs	r1, #10
 80042a8:	4648      	mov	r0, r9
 80042aa:	f017 fd27 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80042ae:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80042b2:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80042b6:	f011 f8a3 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80042ba:	4bd5      	ldr	r3, [pc, #852]	; (8004610 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80042bc:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80042be:	ee1d 0a90 	vmov	r0, s27
 80042c2:	2327      	movs	r3, #39	; 0x27
 80042c4:	4631      	mov	r1, r6
 80042c6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042ca:	f011 f8b9 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80042ce:	ee1d 1a90 	vmov	r1, s27
 80042d2:	ee18 0a90 	vmov	r0, s17
 80042d6:	f00e fa8b 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80042da:	ee1e 0a10 	vmov	r0, s28
 80042de:	2244      	movs	r2, #68	; 0x44
 80042e0:	2116      	movs	r1, #22
 80042e2:	f7ff f9c3 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80042e6:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80042ea:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 80042ee:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80042f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80042f6:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 80042fa:	ee1e 1a10 	vmov	r1, s28
 80042fe:	4638      	mov	r0, r7
 8004300:	4798      	blx	r3
 8004302:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004306:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 800430a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800430e:	4ac1      	ldr	r2, [pc, #772]	; (8004614 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 8004310:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8004312:	f604 6908 	addw	r9, r4, #3592	; 0xe08
 8004316:	2b00      	cmp	r3, #0
 8004318:	d0a1      	beq.n	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800431a:	4abf      	ldr	r2, [pc, #764]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 800431c:	8813      	ldrh	r3, [r2, #0]
 800431e:	2b28      	cmp	r3, #40	; 0x28
 8004320:	d9a7      	bls.n	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004322:	48b9      	ldr	r0, [pc, #740]	; (8004608 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8004324:	2128      	movs	r1, #40	; 0x28
 8004326:	6800      	ldr	r0, [r0, #0]
 8004328:	f006 f9ae 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 800432c:	4ab7      	ldr	r2, [pc, #732]	; (800460c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800432e:	4603      	mov	r3, r0
 8004330:	210a      	movs	r1, #10
 8004332:	4648      	mov	r0, r9
 8004334:	f017 fce2 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP2.resizeToCurrentText();
 8004338:	ee1e 0a10 	vmov	r0, s28
 800433c:	f8c4 9348 	str.w	r9, [r4, #840]	; 0x348
 8004340:	f011 f85e 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004344:	4bb2      	ldr	r3, [pc, #712]	; (8004610 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8004346:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004348:	ee1e 0a10 	vmov	r0, s28
 800434c:	2329      	movs	r3, #41	; 0x29
 800434e:	4631      	mov	r1, r6
 8004350:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004354:	f011 f874 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 8004358:	ee1e 1a10 	vmov	r1, s28
 800435c:	ee18 0a90 	vmov	r0, s17
 8004360:	f00e fa46 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8004364:	2220      	movs	r2, #32
 8004366:	ee1e 0a90 	vmov	r0, s29
 800436a:	2116      	movs	r1, #22
 800436c:	f7ff f97e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004370:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8004374:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 8004378:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800437c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8004380:	f8c4 137c 	str.w	r1, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8004384:	4638      	mov	r0, r7
 8004386:	ee1e 1a90 	vmov	r1, s29
 800438a:	4798      	blx	r3
 800438c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004390:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8004394:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004398:	499e      	ldr	r1, [pc, #632]	; (8004614 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 800439a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 800439c:	f604 691c 	addw	r9, r4, #3612	; 0xe1c
 80043a0:	2b00      	cmp	r3, #0
 80043a2:	f43f af5c 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80043a6:	4a9c      	ldr	r2, [pc, #624]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80043a8:	8813      	ldrh	r3, [r2, #0]
 80043aa:	2b2a      	cmp	r3, #42	; 0x2a
 80043ac:	f67f af61 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80043b0:	4895      	ldr	r0, [pc, #596]	; (8004608 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80043b2:	212a      	movs	r1, #42	; 0x2a
 80043b4:	6800      	ldr	r0, [r0, #0]
 80043b6:	f006 f967 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80043ba:	4a94      	ldr	r2, [pc, #592]	; (800460c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80043bc:	4603      	mov	r3, r0
 80043be:	210a      	movs	r1, #10
 80043c0:	4648      	mov	r0, r9
 80043c2:	f017 fc9b 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP1.resizeToCurrentText();
 80043c6:	ee1e 0a90 	vmov	r0, s29
 80043ca:	f8c4 9394 	str.w	r9, [r4, #916]	; 0x394
 80043ce:	f011 f817 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80043d2:	4b8f      	ldr	r3, [pc, #572]	; (8004610 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80043d4:	9329      	str	r3, [sp, #164]	; 0xa4
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043d6:	ee1e 0a90 	vmov	r0, s29
 80043da:	2331      	movs	r3, #49	; 0x31
 80043dc:	4631      	mov	r1, r6
 80043de:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    line1_LP.setPosition(0, 15, 240, 10);
 80043e2:	f04f 090a 	mov.w	r9, #10
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80043e6:	f011 f82b 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 80043ea:	ee1e 1a90 	vmov	r1, s29
 80043ee:	ee18 0a90 	vmov	r0, s17
 80043f2:	f00e f9fd 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 80043f6:	23f0      	movs	r3, #240	; 0xf0
 80043f8:	ee1a 0a90 	vmov	r0, s21
 80043fc:	220f      	movs	r2, #15
 80043fe:	4629      	mov	r1, r5
 8004400:	f8cd 9000 	str.w	r9, [sp]
 8004404:	f7ff f93f 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004408:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800440c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800440e:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8004412:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8004414:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8004418:	ee1a 0a90 	vmov	r0, s21
 800441c:	f8c4 13c0 	str.w	r1, [r4, #960]	; 0x3c0
 8004420:	4611      	mov	r1, r2
 8004422:	f7ff fc59 	bl	8003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8004426:	2205      	movs	r2, #5
 8004428:	ee1a 0a90 	vmov	r0, s21
 800442c:	21eb      	movs	r1, #235	; 0xeb
 800442e:	f7ff fc57 	bl	8003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8004432:	ee1a 0a90 	vmov	r0, s21
 8004436:	4659      	mov	r1, fp
 8004438:	f7ff fc56 	bl	8003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800443c:	ee1a 0a90 	vmov	r0, s21
 8004440:	4659      	mov	r1, fp
 8004442:	f010 fbcd 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8004446:	ee1a 1a90 	vmov	r1, s21
 800444a:	ee18 0a90 	vmov	r0, s17
 800444e:	f00e f9cf 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8004452:	462a      	mov	r2, r5
 8004454:	9807      	ldr	r0, [sp, #28]
 8004456:	2160      	movs	r1, #96	; 0x60
 8004458:	f7ff f908 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800445c:	f04f 3eff 	mov.w	lr, #4294967295
 8004460:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        boundingArea = calculateBoundingArea();
 8004464:	4638      	mov	r0, r7
 8004466:	9907      	ldr	r1, [sp, #28]
        linespace = space;
 8004468:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800446c:	f010 fd4e 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004470:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004474:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 8004478:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800447c:	4b64      	ldr	r3, [pc, #400]	; (8004610 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 800447e:	9807      	ldr	r0, [sp, #28]
 8004480:	9329      	str	r3, [sp, #164]	; 0xa4
 8004482:	4631      	mov	r1, r6
 8004484:	2325      	movs	r3, #37	; 0x25
 8004486:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800448a:	f010 ffd9 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 800448e:	9907      	ldr	r1, [sp, #28]
 8004490:	ee18 0a90 	vmov	r0, s17
 8004494:	f00e f9ac 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8004498:	ee18 1a90 	vmov	r1, s17
 800449c:	ee18 0a10 	vmov	r0, s16
 80044a0:	f00e fe89 	bl	80131b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80044a4:	4b5d      	ldr	r3, [pc, #372]	; (800461c <_ZN23Calibration_PadViewBaseC1Ev+0x914>)
    buttonWithIcon_RP3.setXY(194, 97);
 80044a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044a8:	f8c4 346c 	str.w	r3, [r4, #1132]	; 0x46c
 80044ac:	2261      	movs	r2, #97	; 0x61
 80044ae:	21c2      	movs	r1, #194	; 0xc2
 80044b0:	f7ff f8dc 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80044b4:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80044b8:	4673      	mov	r3, lr
 80044ba:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80044be:	4672      	mov	r2, lr
 80044c0:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80044c4:	4671      	mov	r1, lr
 80044c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80044c8:	9600      	str	r6, [sp, #0]
 80044ca:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80044ce:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80044d2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80044d6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80044da:	f011 fca6 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80044de:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80044e0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80044e2:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 80044e6:	4650      	mov	r0, sl
 80044e8:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 80044ec:	f00e f980 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 80044f0:	9814      	ldr	r0, [sp, #80]	; 0x50
 80044f2:	223d      	movs	r2, #61	; 0x3d
 80044f4:	21c2      	movs	r1, #194	; 0xc2
 80044f6:	f7ff f8b9 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80044fa:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80044fe:	4673      	mov	r3, lr
 8004500:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8004504:	4672      	mov	r2, lr
 8004506:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800450a:	4671      	mov	r1, lr
 800450c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800450e:	9600      	str	r6, [sp, #0]
 8004510:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8004514:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8004518:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800451c:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004520:	f011 fc83 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004524:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8004526:	9914      	ldr	r1, [sp, #80]	; 0x50
 8004528:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 800452c:	4650      	mov	r0, sl
 800452e:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8004532:	f00e f95d 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8004536:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004538:	2219      	movs	r2, #25
 800453a:	21c2      	movs	r1, #194	; 0xc2
 800453c:	f7ff f896 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004540:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8004544:	4673      	mov	r3, lr
 8004546:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800454a:	4672      	mov	r2, lr
 800454c:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8004550:	4671      	mov	r1, lr
 8004552:	9815      	ldr	r0, [sp, #84]	; 0x54
 8004554:	9600      	str	r6, [sp, #0]
 8004556:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800455a:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800455e:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8004562:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8004566:	f011 fc60 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800456a:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 800456c:	9915      	ldr	r1, [sp, #84]	; 0x54
 800456e:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 8004572:	4650      	mov	r0, sl
 8004574:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8004578:	f00e f93a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 800457c:	2268      	movs	r2, #104	; 0x68
 800457e:	4649      	mov	r1, r9
 8004580:	9808      	ldr	r0, [sp, #32]
 8004582:	f7ff f873 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004586:	f04f 3eff 	mov.w	lr, #4294967295
 800458a:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 800458e:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 8004592:	4630      	mov	r0, r6
 8004594:	f7ff f8f2 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004598:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800459c:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80045a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80045a4:	491b      	ldr	r1, [pc, #108]	; (8004614 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
 80045a6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80045a8:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80045ac:	2b00      	cmp	r3, #0
 80045ae:	f43f ae56 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80045b2:	4a19      	ldr	r2, [pc, #100]	; (8004618 <_ZN23Calibration_PadViewBaseC1Ev+0x910>)
 80045b4:	8813      	ldrh	r3, [r2, #0]
 80045b6:	2b2f      	cmp	r3, #47	; 0x2f
 80045b8:	f67f ae5b 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80045bc:	4812      	ldr	r0, [pc, #72]	; (8004608 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80045be:	212f      	movs	r1, #47	; 0x2f
 80045c0:	6800      	ldr	r0, [r0, #0]
 80045c2:	f006 f861 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80045c6:	4a11      	ldr	r2, [pc, #68]	; (800460c <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80045c8:	4603      	mov	r3, r0
 80045ca:	4649      	mov	r1, r9
 80045cc:	4638      	mov	r0, r7
 80045ce:	f017 fb95 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 80045d2:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 80045d4:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 80045d8:	f010 ff12 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80045dc:	4f0c      	ldr	r7, [pc, #48]	; (8004610 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 80045de:	9808      	ldr	r0, [sp, #32]
 80045e0:	9729      	str	r7, [sp, #164]	; 0xa4
 80045e2:	2330      	movs	r3, #48	; 0x30
 80045e4:	4631      	mov	r1, r6
 80045e6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80045ea:	f010 ff29 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 80045ee:	9908      	ldr	r1, [sp, #32]
 80045f0:	4650      	mov	r0, sl
 80045f2:	f00e f8fd 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 80045f6:	2244      	movs	r2, #68	; 0x44
 80045f8:	2116      	movs	r1, #22
 80045fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80045fc:	f7ff f836 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004600:	f04f 33ff 	mov.w	r3, #4294967295
 8004604:	e00c      	b.n	8004620 <_ZN23Calibration_PadViewBaseC1Ev+0x918>
 8004606:	bf00      	nop
 8004608:	200138a0 	.word	0x200138a0
 800460c:	0802f481 	.word	0x0802f481
 8004610:	0802f4f4 	.word	0x0802f4f4
 8004614:	20013894 	.word	0x20013894
 8004618:	20013898 	.word	0x20013898
 800461c:	00ac00f0 	.word	0x00ac00f0
 8004620:	f8c4 35c0 	str.w	r3, [r4, #1472]	; 0x5c0
        linespace = space;
 8004624:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8004628:	4630      	mov	r0, r6
 800462a:	f7ff f8a7 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800462e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004632:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8004636:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800463a:	49da      	ldr	r1, [pc, #872]	; (80049a4 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>)
 800463c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 800463e:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8004642:	2b00      	cmp	r3, #0
 8004644:	f43f ae0b 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004648:	4ad7      	ldr	r2, [pc, #860]	; (80049a8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 800464a:	8813      	ldrh	r3, [r2, #0]
 800464c:	2b2d      	cmp	r3, #45	; 0x2d
 800464e:	f67f ae10 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004652:	48d6      	ldr	r0, [pc, #856]	; (80049ac <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004654:	f8df b34c 	ldr.w	fp, [pc, #844]	; 80049a4 <_ZN23Calibration_PadViewBaseC1Ev+0xc9c>
        return texts->getText(typedTextId);
 8004658:	6800      	ldr	r0, [r0, #0]
 800465a:	212d      	movs	r1, #45	; 0x2d
 800465c:	f006 f814 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8004660:	4ad3      	ldr	r2, [pc, #844]	; (80049b0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004662:	4603      	mov	r3, r0
 8004664:	4649      	mov	r1, r9
 8004666:	4628      	mov	r0, r5
 8004668:	f017 fb48 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 800466c:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 800466e:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8004672:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8004674:	f010 fec4 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004678:	232e      	movs	r3, #46	; 0x2e
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 800467a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800467c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004680:	4629      	mov	r1, r5
 8004682:	9729      	str	r7, [sp, #164]	; 0xa4
 8004684:	f010 fedc 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8004688:	9909      	ldr	r1, [sp, #36]	; 0x24
 800468a:	4650      	mov	r0, sl
 800468c:	f00e f8b0 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004690:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8004694:	2220      	movs	r2, #32
 8004696:	2116      	movs	r1, #22
 8004698:	980a      	ldr	r0, [sp, #40]	; 0x28
 800469a:	f7fe ffe7 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800469e:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 80046a2:	2600      	movs	r6, #0
 80046a4:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 80046a8:	4628      	mov	r0, r5
 80046aa:	f7ff f867 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80046ae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80046b2:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 80046b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80046ba:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 80046be:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 80046c2:	2b00      	cmp	r3, #0
 80046c4:	f43f adcb 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80046c8:	4ab7      	ldr	r2, [pc, #732]	; (80049a8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80046ca:	8813      	ldrh	r3, [r2, #0]
 80046cc:	2b2c      	cmp	r3, #44	; 0x2c
 80046ce:	f67f add0 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80046d2:	48b6      	ldr	r0, [pc, #728]	; (80049ac <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80046d4:	212c      	movs	r1, #44	; 0x2c
 80046d6:	6800      	ldr	r0, [r0, #0]
 80046d8:	f005 ffd6 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80046dc:	4ab4      	ldr	r2, [pc, #720]	; (80049b0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80046de:	4603      	mov	r3, r0
 80046e0:	4649      	mov	r1, r9
 80046e2:	4638      	mov	r0, r7
 80046e4:	f017 fb0a 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 80046e8:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 80046ea:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 80046ee:	f010 fe87 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80046f2:	4fb0      	ldr	r7, [pc, #704]	; (80049b4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80046f4:	980a      	ldr	r0, [sp, #40]	; 0x28
 80046f6:	9729      	str	r7, [sp, #164]	; 0xa4
 80046f8:	f04f 0e31 	mov.w	lr, #49	; 0x31
 80046fc:	4629      	mov	r1, r5
 80046fe:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004702:	f010 fe9d 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8004706:	4650      	mov	r0, sl
 8004708:	990a      	ldr	r1, [sp, #40]	; 0x28
 800470a:	f00e f871 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 800470e:	ee1b 0a10 	vmov	r0, s22
 8004712:	23f0      	movs	r3, #240	; 0xf0
 8004714:	220f      	movs	r2, #15
 8004716:	4631      	mov	r1, r6
 8004718:	f8cd 9000 	str.w	r9, [sp]
 800471c:	f7fe ffb3 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004720:	f04f 33ff 	mov.w	r3, #4294967295
 8004724:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8004728:	2205      	movs	r2, #5
 800472a:	f8c4 36a4 	str.w	r3, [r4, #1700]	; 0x6a4
 800472e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004730:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8004734:	f8c4 3650 	str.w	r3, [r4, #1616]	; 0x650
 8004738:	4611      	mov	r1, r2
 800473a:	ee1b 0a10 	vmov	r0, s22
 800473e:	f7ff facb 	bl	8003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8004742:	2205      	movs	r2, #5
 8004744:	ee1b 0a10 	vmov	r0, s22
 8004748:	21eb      	movs	r1, #235	; 0xeb
 800474a:	f7ff fac9 	bl	8003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 800474e:	ee1b 0a10 	vmov	r0, s22
 8004752:	2101      	movs	r1, #1
 8004754:	f7ff fac8 	bl	8003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004758:	ee1b 0a10 	vmov	r0, s22
 800475c:	2101      	movs	r1, #1
 800475e:	f010 fa3f 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8004762:	4650      	mov	r0, sl
 8004764:	ee1b 1a10 	vmov	r1, s22
 8004768:	f00e f842 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 800476c:	4632      	mov	r2, r6
 800476e:	ee1f 0a10 	vmov	r0, s30
 8004772:	215c      	movs	r1, #92	; 0x5c
 8004774:	f7fe ff7a 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004778:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800477c:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004780:	4660      	mov	r0, ip
 8004782:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8004786:	f8c4 36dc 	str.w	r3, [r4, #1756]	; 0x6dc
        linespace = space;
 800478a:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 800478e:	f010 fbbd 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004792:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8004796:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 800479a:	ee1f 3a10 	vmov	r3, s30
 800479e:	333c      	adds	r3, #60	; 0x3c
 80047a0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80047a4:	232b      	movs	r3, #43	; 0x2b
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 80047a6:	ee1f 0a10 	vmov	r0, s30
 80047aa:	4629      	mov	r1, r5
 80047ac:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80047b0:	9729      	str	r7, [sp, #164]	; 0xa4
 80047b2:	f010 fe45 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 80047b6:	4650      	mov	r0, sl
 80047b8:	ee1f 1a10 	vmov	r1, s30
 80047bc:	f00e f818 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 80047c0:	4651      	mov	r1, sl
 80047c2:	ee18 0a10 	vmov	r0, s16
 80047c6:	f00e fcf6 	bl	80131b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80047ca:	497b      	ldr	r1, [pc, #492]	; (80049b8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
    buttonWithIcon_LH3.setXY(194, 97);
 80047cc:	9816      	ldr	r0, [sp, #88]	; 0x58
 80047ce:	f8c4 16fc 	str.w	r1, [r4, #1788]	; 0x6fc
 80047d2:	2261      	movs	r2, #97	; 0x61
 80047d4:	21c2      	movs	r1, #194	; 0xc2
 80047d6:	f7fe ff49 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80047da:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 80047de:	4663      	mov	r3, ip
 80047e0:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 80047e4:	4662      	mov	r2, ip
 80047e6:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 80047ea:	2709      	movs	r7, #9
 80047ec:	4661      	mov	r1, ip
 80047ee:	f04f 0801 	mov.w	r8, #1
 80047f2:	9816      	ldr	r0, [sp, #88]	; 0x58
 80047f4:	9500      	str	r5, [sp, #0]
 80047f6:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80047fa:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 80047fe:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004802:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004806:	f011 fb10 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800480a:	9b02      	ldr	r3, [sp, #8]
 800480c:	f8c4 3748 	str.w	r3, [r4, #1864]	; 0x748
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8004810:	9916      	ldr	r1, [sp, #88]	; 0x58
 8004812:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8004816:	ee19 0a10 	vmov	r0, s18
 800481a:	f00d ffe9 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 800481e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8004820:	223d      	movs	r2, #61	; 0x3d
 8004822:	21c2      	movs	r1, #194	; 0xc2
 8004824:	f7fe ff22 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004828:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 800482c:	4663      	mov	r3, ip
 800482e:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8004832:	4662      	mov	r2, ip
 8004834:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004838:	4661      	mov	r1, ip
 800483a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800483c:	9500      	str	r5, [sp, #0]
 800483e:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004842:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004846:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800484a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 800484e:	f011 faec 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004852:	9b02      	ldr	r3, [sp, #8]
 8004854:	f8c4 3784 	str.w	r3, [r4, #1924]	; 0x784
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8004858:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800485a:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 800485e:	ee19 0a10 	vmov	r0, s18
 8004862:	f00d ffc5 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8004866:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004868:	2219      	movs	r2, #25
 800486a:	21c2      	movs	r1, #194	; 0xc2
 800486c:	f7fe fefe 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004870:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8004874:	4663      	mov	r3, ip
 8004876:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 800487a:	4662      	mov	r2, ip
 800487c:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8004880:	4661      	mov	r1, ip
 8004882:	9818      	ldr	r0, [sp, #96]	; 0x60
 8004884:	9500      	str	r5, [sp, #0]
 8004886:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 800488a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 800488e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004892:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004896:	f011 fac8 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800489a:	9b02      	ldr	r3, [sp, #8]
 800489c:	f8c4 37c0 	str.w	r3, [r4, #1984]	; 0x7c0
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 80048a0:	9918      	ldr	r1, [sp, #96]	; 0x60
 80048a2:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 80048a6:	ee19 0a10 	vmov	r0, s18
 80048aa:	f00d ffa1 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 80048ae:	2268      	movs	r2, #104	; 0x68
 80048b0:	4649      	mov	r1, r9
 80048b2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80048b4:	f7fe feda 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048b8:	f04f 3cff 	mov.w	ip, #4294967295
 80048bc:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 80048c0:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 80048c4:	4628      	mov	r0, r5
 80048c6:	f7fe ff59 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80048ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80048ce:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 80048d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048d6:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 80048da:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 80048de:	2b00      	cmp	r3, #0
 80048e0:	f43f acbd 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048e4:	4a30      	ldr	r2, [pc, #192]	; (80049a8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 80048e6:	8813      	ldrh	r3, [r2, #0]
 80048e8:	2b24      	cmp	r3, #36	; 0x24
 80048ea:	f67f acc2 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 80048ee:	482f      	ldr	r0, [pc, #188]	; (80049ac <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80048f0:	2124      	movs	r1, #36	; 0x24
 80048f2:	6800      	ldr	r0, [r0, #0]
 80048f4:	f005 fec8 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80048f8:	4a2d      	ldr	r2, [pc, #180]	; (80049b0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80048fa:	4603      	mov	r3, r0
 80048fc:	4649      	mov	r1, r9
 80048fe:	4650      	mov	r0, sl
 8004900:	f017 f9fc 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8004904:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8004906:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 800490a:	f010 fd79 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800490e:	4b29      	ldr	r3, [pc, #164]	; (80049b4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004910:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004912:	9329      	str	r3, [sp, #164]	; 0xa4
 8004914:	4629      	mov	r1, r5
 8004916:	2327      	movs	r3, #39	; 0x27
 8004918:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800491c:	f010 fd90 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8004920:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004922:	ee19 0a10 	vmov	r0, s18
 8004926:	f00d ff63 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 800492a:	2244      	movs	r2, #68	; 0x44
 800492c:	2116      	movs	r1, #22
 800492e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004930:	f7fe fe9c 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004934:	f04f 3cff 	mov.w	ip, #4294967295
 8004938:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 800493c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8004940:	4628      	mov	r0, r5
 8004942:	f7fe ff1b 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004946:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800494a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 800494e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004952:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8004956:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 800495a:	2b00      	cmp	r3, #0
 800495c:	f43f ac7f 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004960:	4a11      	ldr	r2, [pc, #68]	; (80049a8 <_ZN23Calibration_PadViewBaseC1Ev+0xca0>)
 8004962:	8813      	ldrh	r3, [r2, #0]
 8004964:	2b23      	cmp	r3, #35	; 0x23
 8004966:	f67f ac84 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 800496a:	4810      	ldr	r0, [pc, #64]	; (80049ac <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 800496c:	2123      	movs	r1, #35	; 0x23
 800496e:	6800      	ldr	r0, [r0, #0]
 8004970:	f005 fe8a 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8004974:	4a0e      	ldr	r2, [pc, #56]	; (80049b0 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8004976:	4603      	mov	r3, r0
 8004978:	4649      	mov	r1, r9
 800497a:	4650      	mov	r0, sl
 800497c:	f017 f9be 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8004980:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8004982:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8004986:	f010 fd3b 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800498a:	4b0a      	ldr	r3, [pc, #40]	; (80049b4 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800498c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800498e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004990:	4629      	mov	r1, r5
 8004992:	2329      	movs	r3, #41	; 0x29
 8004994:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004998:	f010 fd52 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 800499c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800499e:	ee19 0a10 	vmov	r0, s18
 80049a2:	e00b      	b.n	80049bc <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>
 80049a4:	20013894 	.word	0x20013894
 80049a8:	20013898 	.word	0x20013898
 80049ac:	200138a0 	.word	0x200138a0
 80049b0:	0802f481 	.word	0x0802f481
 80049b4:	0802f4f4 	.word	0x0802f4f4
 80049b8:	00ac00f0 	.word	0x00ac00f0
 80049bc:	f00d ff18 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 80049c0:	2220      	movs	r2, #32
 80049c2:	2116      	movs	r1, #22
 80049c4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80049c6:	f7fe fe51 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80049ca:	f04f 3cff 	mov.w	ip, #4294967295
 80049ce:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 80049d2:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 80049d6:	4628      	mov	r0, r5
 80049d8:	f7fe fed0 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80049dc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80049e0:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 80049e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049e8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 80049ec:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	f43f ac34 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049f6:	4ada      	ldr	r2, [pc, #872]	; (8004d60 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 80049f8:	8813      	ldrh	r3, [r2, #0]
 80049fa:	2b22      	cmp	r3, #34	; 0x22
 80049fc:	f67f ac39 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004a00:	48d8      	ldr	r0, [pc, #864]	; (8004d64 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004a02:	2122      	movs	r1, #34	; 0x22
 8004a04:	6800      	ldr	r0, [r0, #0]
 8004a06:	f005 fe3f 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8004a0a:	4ad7      	ldr	r2, [pc, #860]	; (8004d68 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004a0c:	4603      	mov	r3, r0
 8004a0e:	4649      	mov	r1, r9
 8004a10:	4650      	mov	r0, sl
 8004a12:	f017 f973 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8004a16:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8004a18:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8004a1c:	f010 fcf0 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004a20:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8004a24:	4bd1      	ldr	r3, [pc, #836]	; (8004d6c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004a26:	980d      	ldr	r0, [sp, #52]	; 0x34
 8004a28:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8004a2c:	4629      	mov	r1, r5
 8004a2e:	9329      	str	r3, [sp, #164]	; 0xa4
 8004a30:	f010 fd06 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8004a34:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004a36:	ee19 0a10 	vmov	r0, s18
 8004a3a:	f00d fed9 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8004a3e:	ee1b 0a90 	vmov	r0, s23
 8004a42:	23f0      	movs	r3, #240	; 0xf0
 8004a44:	220f      	movs	r2, #15
 8004a46:	4631      	mov	r1, r6
 8004a48:	f8cd 9000 	str.w	r9, [sp]
 8004a4c:	f7fe fe1b 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a50:	f04f 30ff 	mov.w	r0, #4294967295
 8004a54:	f64f 73ff 	movw	r3, #65535	; 0xffff
    line1_LH.setStart(5, 5);
 8004a58:	2205      	movs	r2, #5
 8004a5a:	f8c4 0934 	str.w	r0, [r4, #2356]	; 0x934
 8004a5e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8004a60:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
 8004a64:	4611      	mov	r1, r2
 8004a66:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8004a6a:	ee1b 0a90 	vmov	r0, s23
 8004a6e:	f7ff f933 	bl	8003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8004a72:	2205      	movs	r2, #5
 8004a74:	ee1b 0a90 	vmov	r0, s23
 8004a78:	21eb      	movs	r1, #235	; 0xeb
 8004a7a:	f7ff f931 	bl	8003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8004a7e:	ee1b 0a90 	vmov	r0, s23
 8004a82:	4641      	mov	r1, r8
 8004a84:	f7ff f930 	bl	8003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004a88:	ee1b 0a90 	vmov	r0, s23
 8004a8c:	4641      	mov	r1, r8
 8004a8e:	f010 f8a7 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8004a92:	ee1b 1a90 	vmov	r1, s23
 8004a96:	ee19 0a10 	vmov	r0, s18
 8004a9a:	f00d fea9 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8004a9e:	4632      	mov	r2, r6
 8004aa0:	ee1f 0a90 	vmov	r0, s31
 8004aa4:	2149      	movs	r1, #73	; 0x49
 8004aa6:	f7fe fde1 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004aaa:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8004aae:	ee1f 1a90 	vmov	r1, s31
        color = newColor;
 8004ab2:	f8c4 096c 	str.w	r0, [r4, #2412]	; 0x96c
        linespace = space;
 8004ab6:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8004aba:	a822      	add	r0, sp, #136	; 0x88
 8004abc:	f010 fa26 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ac0:	ee1f 0a90 	vmov	r0, s31
 8004ac4:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8004ac8:	a822      	add	r0, sp, #136	; 0x88
 8004aca:	c807      	ldmia	r0, {r0, r1, r2}
 8004acc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004ad0:	4ba6      	ldr	r3, [pc, #664]	; (8004d6c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004ad2:	9329      	str	r3, [sp, #164]	; 0xa4
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8004ad4:	4629      	mov	r1, r5
 8004ad6:	2321      	movs	r3, #33	; 0x21
 8004ad8:	ee1f 0a90 	vmov	r0, s31
 8004adc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004ae0:	f010 fcae 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8004ae4:	ee1f 1a90 	vmov	r1, s31
 8004ae8:	ee19 0a10 	vmov	r0, s18
 8004aec:	f00d fe80 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004af0:	ee19 1a10 	vmov	r1, s18
 8004af4:	ee18 0a10 	vmov	r0, s16
 8004af8:	f00e fb5d 	bl	80131b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004afc:	499c      	ldr	r1, [pc, #624]	; (8004d70 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    buttonWithIcon_RH3.setXY(194, 97);
 8004afe:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004b00:	f8c4 198c 	str.w	r1, [r4, #2444]	; 0x98c
 8004b04:	2261      	movs	r2, #97	; 0x61
 8004b06:	21c2      	movs	r1, #194	; 0xc2
 8004b08:	f7fe fdb0 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b0c:	a927      	add	r1, sp, #156	; 0x9c
 8004b0e:	460a      	mov	r2, r1
 8004b10:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004b12:	9500      	str	r5, [sp, #0]
 8004b14:	ab28      	add	r3, sp, #160	; 0xa0
 8004b16:	a926      	add	r1, sp, #152	; 0x98
 8004b18:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b1c:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b20:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b24:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b28:	f011 f97f 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b2c:	9b02      	ldr	r3, [sp, #8]
 8004b2e:	f8c4 39d8 	str.w	r3, [r4, #2520]	; 0x9d8
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004b32:	9919      	ldr	r1, [sp, #100]	; 0x64
 8004b34:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004b38:	ee19 0a90 	vmov	r0, s19
 8004b3c:	f00d fe58 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8004b40:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b42:	223d      	movs	r2, #61	; 0x3d
 8004b44:	21c2      	movs	r1, #194	; 0xc2
 8004b46:	f7fe fd91 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b4a:	a927      	add	r1, sp, #156	; 0x9c
 8004b4c:	460a      	mov	r2, r1
 8004b4e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004b50:	9500      	str	r5, [sp, #0]
 8004b52:	ab28      	add	r3, sp, #160	; 0xa0
 8004b54:	a926      	add	r1, sp, #152	; 0x98
 8004b56:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b5a:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b5e:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004b62:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004b66:	f011 f960 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004b6a:	9b02      	ldr	r3, [sp, #8]
 8004b6c:	f8c4 3a14 	str.w	r3, [r4, #2580]	; 0xa14
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004b70:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004b72:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004b76:	ee19 0a90 	vmov	r0, s19
 8004b7a:	f00d fe39 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8004b7e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b80:	2219      	movs	r2, #25
 8004b82:	21c2      	movs	r1, #194	; 0xc2
 8004b84:	f7fe fd72 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004b88:	a927      	add	r1, sp, #156	; 0x9c
 8004b8a:	460a      	mov	r2, r1
 8004b8c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004b8e:	9500      	str	r5, [sp, #0]
 8004b90:	ab28      	add	r3, sp, #160	; 0xa0
 8004b92:	a926      	add	r1, sp, #152	; 0x98
 8004b94:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004b98:	f8ad 809c 	strh.w	r8, [sp, #156]	; 0x9c
 8004b9c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8004ba0:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004ba4:	f011 f941 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004ba8:	9b02      	ldr	r3, [sp, #8]
 8004baa:	f8c4 3a50 	str.w	r3, [r4, #2640]	; 0xa50
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8004bae:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8004bb0:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8004bb4:	ee19 0a90 	vmov	r0, s19
 8004bb8:	f00d fe1a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8004bbc:	2268      	movs	r2, #104	; 0x68
 8004bbe:	4649      	mov	r1, r9
 8004bc0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004bc2:	f7fe fd53 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004bc6:	f04f 33ff 	mov.w	r3, #4294967295
 8004bca:	f8c4 3a94 	str.w	r3, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8004bce:	4628      	mov	r0, r5
        linespace = space;
 8004bd0:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004bd4:	f7fe fdd2 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004bd8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004bdc:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8004be0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004be4:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004be8:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8004bec:	2b00      	cmp	r3, #0
 8004bee:	f43f ab36 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004bf2:	4a5b      	ldr	r2, [pc, #364]	; (8004d60 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004bf4:	8813      	ldrh	r3, [r2, #0]
 8004bf6:	2b20      	cmp	r3, #32
 8004bf8:	f67f ab3b 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004bfc:	f8df 8164 	ldr.w	r8, [pc, #356]	; 8004d64 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>
        : typedTextId(id)
 8004c00:	f8df a168 	ldr.w	sl, [pc, #360]	; 8004d6c <_ZN23Calibration_PadViewBaseC1Ev+0x1064>
        return texts->getText(typedTextId);
 8004c04:	f8d8 0000 	ldr.w	r0, [r8]
 8004c08:	2120      	movs	r1, #32
 8004c0a:	f005 fd3d 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8004c0e:	4a56      	ldr	r2, [pc, #344]	; (8004d68 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c10:	4603      	mov	r3, r0
 8004c12:	4649      	mov	r1, r9
 8004c14:	4628      	mov	r0, r5
 8004c16:	f017 f871 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004c1a:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004c1c:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004c20:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8004c22:	f010 fbed 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004c26:	2327      	movs	r3, #39	; 0x27
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004c28:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004c2a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004c2e:	4629      	mov	r1, r5
 8004c30:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004c34:	f010 fc04 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004c38:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004c3a:	ee19 0a90 	vmov	r0, s19
 8004c3e:	f00d fdd7 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8004c42:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8004c46:	2244      	movs	r2, #68	; 0x44
 8004c48:	2116      	movs	r1, #22
 8004c4a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004c4c:	f7fe fd0e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004c50:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8004c54:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004c58:	4628      	mov	r0, r5
 8004c5a:	f7fe fd8f 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004c5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004c62:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8004c66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004c6a:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004c6e:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8004c72:	2b00      	cmp	r3, #0
 8004c74:	f43f aaf3 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004c78:	4a39      	ldr	r2, [pc, #228]	; (8004d60 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004c7a:	8813      	ldrh	r3, [r2, #0]
 8004c7c:	2b1f      	cmp	r3, #31
 8004c7e:	f67f aaf8 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004c82:	211f      	movs	r1, #31
 8004c84:	f8d8 0000 	ldr.w	r0, [r8]
 8004c88:	f005 fcfe 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8004c8c:	4a36      	ldr	r2, [pc, #216]	; (8004d68 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004c8e:	4603      	mov	r3, r0
 8004c90:	210a      	movs	r1, #10
 8004c92:	4648      	mov	r0, r9
 8004c94:	f017 f832 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 8004c98:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 8004c9a:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004c9e:	f010 fbaf 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004ca2:	2329      	movs	r3, #41	; 0x29
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8004ca4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004ca6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004caa:	4629      	mov	r1, r5
 8004cac:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004cb0:	f010 fbc6 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 8004cb4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004cb6:	ee19 0a90 	vmov	r0, s19
 8004cba:	f00d fd99 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004cbe:	2220      	movs	r2, #32
 8004cc0:	2116      	movs	r1, #22
 8004cc2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cc4:	f7fe fcd2 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004cc8:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004ccc:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004cd0:	4628      	mov	r0, r5
 8004cd2:	f7fe fd53 	bl	800377c <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004cd6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004cda:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004cde:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004ce2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004ce6:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004cea:	2b00      	cmp	r3, #0
 8004cec:	f43f aab7 	beq.w	800425e <_ZN23Calibration_PadViewBaseC1Ev+0x556>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004cf0:	4a1b      	ldr	r2, [pc, #108]	; (8004d60 <_ZN23Calibration_PadViewBaseC1Ev+0x1058>)
 8004cf2:	8813      	ldrh	r3, [r2, #0]
 8004cf4:	2b1e      	cmp	r3, #30
 8004cf6:	f67f aabc 	bls.w	8004272 <_ZN23Calibration_PadViewBaseC1Ev+0x56a>
        return texts->getText(typedTextId);
 8004cfa:	f8d8 0000 	ldr.w	r0, [r8]
 8004cfe:	211e      	movs	r1, #30
 8004d00:	f005 fcc2 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8004d04:	4a18      	ldr	r2, [pc, #96]	; (8004d68 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004d06:	4603      	mov	r3, r0
 8004d08:	210a      	movs	r1, #10
 8004d0a:	4648      	mov	r0, r9
 8004d0c:	f016 fff6 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004d10:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004d12:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004d16:	f010 fb73 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004d1a:	2331      	movs	r3, #49	; 0x31
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004d1c:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004d1e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004d22:	4629      	mov	r1, r5
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d24:	f04f 090a 	mov.w	r9, #10
 8004d28:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004d2c:	f010 fb88 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004d30:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004d32:	ee19 0a90 	vmov	r0, s19
 8004d36:	f00d fd5b 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004d3a:	ee1c 0a10 	vmov	r0, s24
 8004d3e:	4631      	mov	r1, r6
 8004d40:	f8cd 9000 	str.w	r9, [sp]
 8004d44:	23f0      	movs	r3, #240	; 0xf0
 8004d46:	220f      	movs	r2, #15
 8004d48:	f7fe fc9d 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004d4c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004d4e:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004d52:	2205      	movs	r2, #5
 8004d54:	ee1c 0a10 	vmov	r0, s24
 8004d58:	4611      	mov	r1, r2
 8004d5a:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 8004d5e:	e009      	b.n	8004d74 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>
 8004d60:	20013898 	.word	0x20013898
 8004d64:	200138a0 	.word	0x200138a0
 8004d68:	0802f481 	.word	0x0802f481
 8004d6c:	0802f4f4 	.word	0x0802f4f4
 8004d70:	00ac00f0 	.word	0x00ac00f0
 8004d74:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 8004d78:	f7fe ffae 	bl	8003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004d7c:	2205      	movs	r2, #5
 8004d7e:	ee1c 0a10 	vmov	r0, s24
 8004d82:	21eb      	movs	r1, #235	; 0xeb
 8004d84:	f7fe ffac 	bl	8003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 8004d88:	ee1c 0a10 	vmov	r0, s24
 8004d8c:	2101      	movs	r1, #1
 8004d8e:	f7fe ffab 	bl	8003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004d92:	ee1c 0a10 	vmov	r0, s24
 8004d96:	2101      	movs	r1, #1
 8004d98:	f00f ff22 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 8004d9c:	ee1c 1a10 	vmov	r1, s24
 8004da0:	ee19 0a90 	vmov	r0, s19
 8004da4:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8004da8:	f00d fd22 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 8004dac:	4632      	mov	r2, r6
 8004dae:	9803      	ldr	r0, [sp, #12]
 8004db0:	2149      	movs	r1, #73	; 0x49
 8004db2:	f7fe fc5b 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004db6:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 8004db8:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 8004dbc:	4640      	mov	r0, r8
        linespace = space;
 8004dbe:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004dc2:	f010 f8a3 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004dc6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004dca:	9b03      	ldr	r3, [sp, #12]
 8004dcc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004dd0:	333c      	adds	r3, #60	; 0x3c
 8004dd2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004dd6:	231d      	movs	r3, #29
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004dd8:	9803      	ldr	r0, [sp, #12]
 8004dda:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004dde:	4629      	mov	r1, r5
 8004de0:	f010 fb2e 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004de4:	9903      	ldr	r1, [sp, #12]
 8004de6:	ee19 0a90 	vmov	r0, s19
 8004dea:	f00d fd01 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004dee:	ee19 1a90 	vmov	r1, s19
 8004df2:	ee18 0a10 	vmov	r0, s16
 8004df6:	f00e f9de 	bl	80131b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 8004dfa:	ee18 0a10 	vmov	r0, s16
 8004dfe:	4631      	mov	r1, r6
 8004e00:	f00e f9ca 	bl	8013198 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004e04:	ee18 1a10 	vmov	r1, s16
 8004e08:	ee1a 0a10 	vmov	r0, s20
 8004e0c:	f00d fcf0 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004e10:	ee1c 0a90 	vmov	r0, s25
 8004e14:	4631      	mov	r1, r6
 8004e16:	f8cd 9000 	str.w	r9, [sp]
 8004e1a:	23f0      	movs	r3, #240	; 0xf0
 8004e1c:	224b      	movs	r2, #75	; 0x4b
 8004e1e:	f7fe fc32 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004e22:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004e26:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 8004e2a:	2205      	movs	r2, #5
 8004e2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004e2e:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004e32:	ee1c 0a90 	vmov	r0, s25
 8004e36:	4611      	mov	r1, r2
 8004e38:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004e3c:	f7fe ff4c 	bl	8003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004e40:	2205      	movs	r2, #5
 8004e42:	ee1c 0a90 	vmov	r0, s25
 8004e46:	21eb      	movs	r1, #235	; 0xeb
 8004e48:	f7fe ff4a 	bl	8003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004e4c:	ee1c 0a90 	vmov	r0, s25
 8004e50:	2101      	movs	r1, #1
 8004e52:	f7fe ff49 	bl	8003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004e56:	ee1c 0a90 	vmov	r0, s25
 8004e5a:	2101      	movs	r1, #1
 8004e5c:	f00f fec0 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004e60:	ee1c 1a90 	vmov	r1, s25
 8004e64:	ee1a 0a10 	vmov	r0, s20
 8004e68:	f00d fcc2 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004e6c:	9804      	ldr	r0, [sp, #16]
 8004e6e:	223c      	movs	r2, #60	; 0x3c
 8004e70:	2146      	movs	r1, #70	; 0x46
 8004e72:	f7fe fbfb 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004e76:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 8004e78:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004e7c:	4640      	mov	r0, r8
        linespace = space;
 8004e7e:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004e82:	f010 f843 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004e86:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004e8a:	9b04      	ldr	r3, [sp, #16]
 8004e8c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004e90:	333c      	adds	r3, #60	; 0x3c
 8004e92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004e96:	233a      	movs	r3, #58	; 0x3a
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004e98:	9804      	ldr	r0, [sp, #16]
 8004e9a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004e9e:	4629      	mov	r1, r5
 8004ea0:	f010 face 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004ea4:	9904      	ldr	r1, [sp, #16]
 8004ea6:	ee1a 0a10 	vmov	r0, s20
 8004eaa:	f00d fca1 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8004eae:	ee1d 0a10 	vmov	r0, s26
 8004eb2:	4631      	mov	r1, r6
 8004eb4:	f8cd 9000 	str.w	r9, [sp]
 8004eb8:	23f0      	movs	r3, #240	; 0xf0
 8004eba:	2232      	movs	r2, #50	; 0x32
 8004ebc:	f7fe fbe3 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ec0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004ec2:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004ec6:	2205      	movs	r2, #5
 8004ec8:	ee1d 0a10 	vmov	r0, s26
 8004ecc:	4611      	mov	r1, r2
 8004ece:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004ed2:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004ed6:	f7fe feff 	bl	8003cd8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 8004eda:	2205      	movs	r2, #5
 8004edc:	ee1d 0a10 	vmov	r0, s26
 8004ee0:	21eb      	movs	r1, #235	; 0xeb
 8004ee2:	f7fe fefd 	bl	8003ce0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004ee6:	ee1d 0a10 	vmov	r0, s26
 8004eea:	2101      	movs	r1, #1
 8004eec:	f7fe fefc 	bl	8003ce8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004ef0:	ee1d 0a10 	vmov	r0, s26
 8004ef4:	2101      	movs	r1, #1
 8004ef6:	f00f fe73 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004efa:	ee1d 1a10 	vmov	r1, s26
 8004efe:	ee1a 0a10 	vmov	r0, s20
 8004f02:	f00d fc75 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004f06:	9805      	ldr	r0, [sp, #20]
 8004f08:	2223      	movs	r2, #35	; 0x23
 8004f0a:	2145      	movs	r1, #69	; 0x45
 8004f0c:	f7fe fbae 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004f10:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004f12:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004f16:	4640      	mov	r0, r8
        linespace = space;
 8004f18:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004f1c:	f00f fff6 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f20:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f24:	9b05      	ldr	r3, [sp, #20]
 8004f26:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f2a:	333c      	adds	r3, #60	; 0x3c
 8004f2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f30:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004f32:	9805      	ldr	r0, [sp, #20]
 8004f34:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f38:	4629      	mov	r1, r5
 8004f3a:	f010 fa81 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f3e:	9905      	ldr	r1, [sp, #20]
 8004f40:	ee1a 0a10 	vmov	r0, s20
 8004f44:	f00d fc54 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8004f48:	9806      	ldr	r0, [sp, #24]
 8004f4a:	220c      	movs	r2, #12
 8004f4c:	2136      	movs	r1, #54	; 0x36
 8004f4e:	f7fe fb8d 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8004f52:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004f54:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 8004f58:	4640      	mov	r0, r8
        linespace = space;
 8004f5a:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004f5e:	f00f ffd5 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f62:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8004f66:	9b06      	ldr	r3, [sp, #24]
 8004f68:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004f6c:	333c      	adds	r3, #60	; 0x3c
 8004f6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004f72:	233d      	movs	r3, #61	; 0x3d
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004f74:	9806      	ldr	r0, [sp, #24]
 8004f76:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004f7a:	4629      	mov	r1, r5
 8004f7c:	f010 fa60 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004f80:	ee1a 0a10 	vmov	r0, s20
 8004f84:	9906      	ldr	r1, [sp, #24]
 8004f86:	f00d fc33 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004f8a:	4620      	mov	r0, r4
 8004f8c:	b02d      	add	sp, #180	; 0xb4
 8004f8e:	ecbd 8b10 	vpop	{d8-d15}
 8004f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f96:	bf00      	nop

08004f98 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004f98:	4770      	bx	lr

08004f9a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8004f9a:	4770      	bx	lr

08004f9c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8004f9c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004fa0:	6808      	ldr	r0, [r1, #0]
 8004fa2:	6849      	ldr	r1, [r1, #4]
 8004fa4:	c303      	stmia	r3!, {r0, r1}
    }
 8004fa6:	4770      	bx	lr

08004fa8 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004fa8:	4770      	bx	lr

08004faa <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8004faa:	4770      	bx	lr

08004fac <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8004fac:	6041      	str	r1, [r0, #4]
    }
 8004fae:	4770      	bx	lr

08004fb0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004fb0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004fb2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004fb4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004fb8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8004fbc:	8002      	strh	r2, [r0, #0]
 8004fbe:	8042      	strh	r2, [r0, #2]
 8004fc0:	8084      	strh	r4, [r0, #4]
 8004fc2:	80c1      	strh	r1, [r0, #6]
        }
 8004fc4:	bd10      	pop	{r4, pc}

08004fc6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004fc6:	4770      	bx	lr

08004fc8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004fc8:	4770      	bx	lr
	...

08004fcc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004fcc:	4b06      	ldr	r3, [pc, #24]	; (8004fe8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004fce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004fd2:	2300      	movs	r3, #0
 8004fd4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004fd8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004fdc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004fe0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004fe4:	4770      	bx	lr
 8004fe6:	bf00      	nop
 8004fe8:	08005389 	.word	0x08005389

08004fec <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004fec:	2301      	movs	r3, #1
 8004fee:	7203      	strb	r3, [r0, #8]
    }
 8004ff0:	4770      	bx	lr

08004ff2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004ff2:	4770      	bx	lr

08004ff4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004ff4:	4770      	bx	lr

08004ff6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004ff6:	4770      	bx	lr

08004ff8 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004ff8:	4770      	bx	lr

08004ffa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8004ffa:	4770      	bx	lr

08004ffc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004ffc:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004ffe:	6840      	ldr	r0, [r0, #4]
 8005000:	6803      	ldr	r3, [r0, #0]
 8005002:	3110      	adds	r1, #16
 8005004:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005006:	4718      	bx	r3

08005008 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8005008:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800500a:	6840      	ldr	r0, [r0, #4]
 800500c:	6803      	ldr	r3, [r0, #0]
 800500e:	3110      	adds	r1, #16
 8005010:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005012:	4718      	bx	r3

08005014 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8005014:	4770      	bx	lr

08005016 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8005016:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8005018:	6840      	ldr	r0, [r0, #4]
 800501a:	6803      	ldr	r3, [r0, #0]
 800501c:	3110      	adds	r1, #16
 800501e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005020:	4718      	bx	r3

08005022 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8005022:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8005024:	6840      	ldr	r0, [r0, #4]
 8005026:	6803      	ldr	r3, [r0, #0]
 8005028:	3110      	adds	r1, #16
 800502a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800502c:	4718      	bx	r3

0800502e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800502e:	4770      	bx	lr

08005030 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8005030:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8005032:	68c2      	ldr	r2, [r0, #12]
 8005034:	6841      	ldr	r1, [r0, #4]
 8005036:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8005038:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800503a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800503e:	07d2      	lsls	r2, r2, #31
 8005040:	bf48      	it	mi
 8005042:	590a      	ldrmi	r2, [r1, r4]
 8005044:	689b      	ldr	r3, [r3, #8]
    }
 8005046:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800504a:	bf48      	it	mi
 800504c:	58d3      	ldrmi	r3, [r2, r3]
 800504e:	4718      	bx	r3

08005050 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8005050:	6843      	ldr	r3, [r0, #4]
 8005052:	b12b      	cbz	r3, 8005060 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8005054:	6883      	ldr	r3, [r0, #8]
 8005056:	b92b      	cbnz	r3, 8005064 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8005058:	68c0      	ldr	r0, [r0, #12]
 800505a:	f000 0001 	and.w	r0, r0, #1
 800505e:	4770      	bx	lr
 8005060:	4618      	mov	r0, r3
 8005062:	4770      	bx	lr
 8005064:	2001      	movs	r0, #1
    }
 8005066:	4770      	bx	lr

08005068 <_ZN8touchgfx12NoTransitionD0Ev>:
 8005068:	b510      	push	{r4, lr}
 800506a:	210c      	movs	r1, #12
 800506c:	4604      	mov	r4, r0
 800506e:	f027 fd80 	bl	802cb72 <_ZdlPvj>
 8005072:	4620      	mov	r0, r4
 8005074:	bd10      	pop	{r4, pc}

08005076 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005076:	b510      	push	{r4, lr}
 8005078:	2110      	movs	r1, #16
 800507a:	4604      	mov	r4, r0
 800507c:	f027 fd79 	bl	802cb72 <_ZdlPvj>
 8005080:	4620      	mov	r0, r4
 8005082:	bd10      	pop	{r4, pc}

08005084 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8005084:	b510      	push	{r4, lr}
 8005086:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800508a:	4604      	mov	r4, r0
 800508c:	f027 fd71 	bl	802cb72 <_ZdlPvj>
 8005090:	4620      	mov	r0, r4
 8005092:	bd10      	pop	{r4, pc}

08005094 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8005094:	b510      	push	{r4, lr}
 8005096:	2138      	movs	r1, #56	; 0x38
 8005098:	4604      	mov	r4, r0
 800509a:	f027 fd6a 	bl	802cb72 <_ZdlPvj>
 800509e:	4620      	mov	r0, r4
 80050a0:	bd10      	pop	{r4, pc}

080050a2 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80050a2:	b510      	push	{r4, lr}
 80050a4:	2128      	movs	r1, #40	; 0x28
 80050a6:	4604      	mov	r4, r0
 80050a8:	f027 fd63 	bl	802cb72 <_ZdlPvj>
 80050ac:	4620      	mov	r0, r4
 80050ae:	bd10      	pop	{r4, pc}

080050b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80050b0:	b510      	push	{r4, lr}
 80050b2:	2138      	movs	r1, #56	; 0x38
 80050b4:	4604      	mov	r4, r0
 80050b6:	f027 fd5c 	bl	802cb72 <_ZdlPvj>
 80050ba:	4620      	mov	r0, r4
 80050bc:	bd10      	pop	{r4, pc}

080050be <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80050be:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80050c0:	f013 fc6e 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 80050c4:	6803      	ldr	r3, [r0, #0]
    }
 80050c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80050ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050cc:	4718      	bx	r3
	...

080050d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80050d0:	b513      	push	{r0, r1, r4, lr}
 80050d2:	4604      	mov	r4, r0
        animationCounter++;
 80050d4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80050d6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80050d8:	3001      	adds	r0, #1
 80050da:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80050dc:	4298      	cmp	r0, r3
        animationCounter++;
 80050de:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80050e0:	d905      	bls.n	80050ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80050e2:	2301      	movs	r3, #1
 80050e4:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80050e6:	2300      	movs	r3, #0
 80050e8:	72a3      	strb	r3, [r4, #10]
    }
 80050ea:	b002      	add	sp, #8
 80050ec:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80050ee:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80050f2:	2100      	movs	r1, #0
 80050f4:	f015 fac4 	bl	801a680 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80050f8:	f010 0201 	ands.w	r2, r0, #1
 80050fc:	b283      	uxth	r3, r0
 80050fe:	d12a      	bne.n	8005156 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005100:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005102:	4a19      	ldr	r2, [pc, #100]	; (8005168 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8005104:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8005108:	89e3      	ldrh	r3, [r4, #14]
 800510a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800510c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8005110:	82a0      	strh	r0, [r4, #20]
 8005112:	2000      	movs	r0, #0
 8005114:	1ad2      	subs	r2, r2, r3
 8005116:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800511a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800511c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800511e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005120:	4a12      	ldr	r2, [pc, #72]	; (800516c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8005122:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8005126:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8005128:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800512c:	691b      	ldr	r3, [r3, #16]
 800512e:	f8ad 1000 	strh.w	r1, [sp]
 8005132:	f8ad 2006 	strh.w	r2, [sp, #6]
 8005136:	4669      	mov	r1, sp
 8005138:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800513a:	7aa3      	ldrb	r3, [r4, #10]
 800513c:	2b01      	cmp	r3, #1
 800513e:	d1d4      	bne.n	80050ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8005140:	4b0b      	ldr	r3, [pc, #44]	; (8005170 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8005142:	781b      	ldrb	r3, [r3, #0]
 8005144:	2b00      	cmp	r3, #0
 8005146:	d0d0      	beq.n	80050ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005148:	f013 fc2a 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800514c:	b002      	add	sp, #8
 800514e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005152:	f013 bc2b 	b.w	80189ac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8005156:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800515a:	2800      	cmp	r0, #0
 800515c:	bfd8      	it	le
 800515e:	460a      	movle	r2, r1
 8005160:	4413      	add	r3, r2
 8005162:	81e3      	strh	r3, [r4, #14]
 8005164:	e7cd      	b.n	8005102 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8005166:	bf00      	nop
 8005168:	20013830 	.word	0x20013830
 800516c:	20013832 	.word	0x20013832
 8005170:	2001383a 	.word	0x2001383a

08005174 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8005174:	b510      	push	{r4, lr}
 8005176:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8005178:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800517c:	b158      	cbz	r0, 8005196 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800517e:	6803      	ldr	r3, [r0, #0]
 8005180:	68db      	ldr	r3, [r3, #12]
 8005182:	4798      	blx	r3
 8005184:	b138      	cbz	r0, 8005196 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8005186:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800518a:	6803      	ldr	r3, [r0, #0]
 800518c:	689b      	ldr	r3, [r3, #8]
 800518e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8005190:	2300      	movs	r3, #0
 8005192:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8005196:	bd10      	pop	{r4, pc}

08005198 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8005198:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800519c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80051a0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051a2:	68a8      	ldr	r0, [r5, #8]
 80051a4:	6803      	ldr	r3, [r0, #0]
 80051a6:	6a1b      	ldr	r3, [r3, #32]
 80051a8:	4798      	blx	r3
 80051aa:	2897      	cmp	r0, #151	; 0x97
 80051ac:	d805      	bhi.n	80051ba <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80051ae:	4b46      	ldr	r3, [pc, #280]	; (80052c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80051b0:	4a46      	ldr	r2, [pc, #280]	; (80052cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051b2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051b4:	4846      	ldr	r0, [pc, #280]	; (80052d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80051b6:	f028 fbc3 	bl	802d940 <__assert_func>
 80051ba:	6868      	ldr	r0, [r5, #4]
 80051bc:	6803      	ldr	r3, [r0, #0]
 80051be:	6a1b      	ldr	r3, [r3, #32]
 80051c0:	4798      	blx	r3
 80051c2:	280f      	cmp	r0, #15
 80051c4:	d803      	bhi.n	80051ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80051c6:	4b43      	ldr	r3, [pc, #268]	; (80052d4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80051c8:	4a40      	ldr	r2, [pc, #256]	; (80052cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051ca:	21a4      	movs	r1, #164	; 0xa4
 80051cc:	e7f2      	b.n	80051b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051ce:	68e8      	ldr	r0, [r5, #12]
 80051d0:	6803      	ldr	r3, [r0, #0]
 80051d2:	6a1b      	ldr	r3, [r3, #32]
 80051d4:	4798      	blx	r3
 80051d6:	280b      	cmp	r0, #11
 80051d8:	d803      	bhi.n	80051e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80051da:	4b3f      	ldr	r3, [pc, #252]	; (80052d8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80051dc:	4a3b      	ldr	r2, [pc, #236]	; (80052cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80051de:	21a5      	movs	r1, #165	; 0xa5
 80051e0:	e7e8      	b.n	80051b4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80051e2:	f013 fbdd 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051e6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80052e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80051ea:	3004      	adds	r0, #4
 80051ec:	f013 fc3e 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051f0:	f8d9 0000 	ldr.w	r0, [r9]
 80051f4:	b110      	cbz	r0, 80051fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80051f6:	6803      	ldr	r3, [r0, #0]
 80051f8:	68db      	ldr	r3, [r3, #12]
 80051fa:	4798      	blx	r3
    if (*currentTrans)
 80051fc:	f8d9 0000 	ldr.w	r0, [r9]
 8005200:	b110      	cbz	r0, 8005208 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8005202:	6803      	ldr	r3, [r0, #0]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	4798      	blx	r3
    if (*currentScreen)
 8005208:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80052e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800520c:	f8d8 0000 	ldr.w	r0, [r8]
 8005210:	b110      	cbz	r0, 8005218 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8005212:	6803      	ldr	r3, [r0, #0]
 8005214:	695b      	ldr	r3, [r3, #20]
 8005216:	4798      	blx	r3
    if (*currentPresenter)
 8005218:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800521c:	b110      	cbz	r0, 8005224 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800521e:	6803      	ldr	r3, [r0, #0]
 8005220:	685b      	ldr	r3, [r3, #4]
 8005222:	4798      	blx	r3
    if (*currentScreen)
 8005224:	f8d8 0000 	ldr.w	r0, [r8]
 8005228:	b110      	cbz	r0, 8005230 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800522a:	6803      	ldr	r3, [r0, #0]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	4798      	blx	r3
    if (*currentPresenter)
 8005230:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005234:	b110      	cbz	r0, 800523c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8005236:	6803      	ldr	r3, [r0, #0]
 8005238:	689b      	ldr	r3, [r3, #8]
 800523a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800523c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800523e:	6803      	ldr	r3, [r0, #0]
 8005240:	2100      	movs	r1, #0
 8005242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005244:	4798      	blx	r3
        : screenContainer(0), done(false)
 8005246:	f04f 0b00 	mov.w	fp, #0
 800524a:	4b24      	ldr	r3, [pc, #144]	; (80052dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 800524c:	6003      	str	r3, [r0, #0]
 800524e:	4604      	mov	r4, r0
 8005250:	f8c0 b004 	str.w	fp, [r0, #4]
 8005254:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005258:	68a8      	ldr	r0, [r5, #8]
 800525a:	6803      	ldr	r3, [r0, #0]
 800525c:	4659      	mov	r1, fp
 800525e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005260:	4798      	blx	r3
 8005262:	4606      	mov	r6, r0
 8005264:	f005 fee4 	bl	800b030 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005268:	6868      	ldr	r0, [r5, #4]
 800526a:	6803      	ldr	r3, [r0, #0]
 800526c:	4659      	mov	r1, fp
 800526e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005270:	4798      	blx	r3
 8005272:	4631      	mov	r1, r6
 8005274:	4605      	mov	r5, r0
 8005276:	f005 feb7 	bl	800afe8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800527a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800527e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005282:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005286:	b1e5      	cbz	r5, 80052c2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8005288:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800528a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800528e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8005290:	f8c5 a008 	str.w	sl, [r5, #8]
 8005294:	4630      	mov	r0, r6
 8005296:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8005298:	63f5      	str	r5, [r6, #60]	; 0x3c
 800529a:	4798      	blx	r3
    newPresenter->activate();
 800529c:	682b      	ldr	r3, [r5, #0]
 800529e:	4628      	mov	r0, r5
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052a4:	4621      	mov	r1, r4
 80052a6:	4630      	mov	r0, r6
 80052a8:	f015 f9a6 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052ac:	6823      	ldr	r3, [r4, #0]
 80052ae:	4620      	mov	r0, r4
 80052b0:	691b      	ldr	r3, [r3, #16]
 80052b2:	4798      	blx	r3
    newTransition->invalidate();
 80052b4:	6823      	ldr	r3, [r4, #0]
 80052b6:	695b      	ldr	r3, [r3, #20]
 80052b8:	4620      	mov	r0, r4
}
 80052ba:	b001      	add	sp, #4
 80052bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052c0:	4718      	bx	r3
    model->bind(newPresenter);
 80052c2:	462b      	mov	r3, r5
 80052c4:	e7e1      	b.n	800528a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80052c6:	bf00      	nop
 80052c8:	0802f670 	.word	0x0802f670
 80052cc:	0802f6fe 	.word	0x0802f6fe
 80052d0:	0802f80c 	.word	0x0802f80c
 80052d4:	0802f853 	.word	0x0802f853
 80052d8:	0802f8f6 	.word	0x0802f8f6
 80052dc:	080309b0 	.word	0x080309b0
 80052e0:	20013884 	.word	0x20013884
 80052e4:	20013880 	.word	0x20013880

080052e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80052e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80052ea:	4604      	mov	r4, r0
        animationCounter++;
 80052ec:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80052ee:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80052f0:	3001      	adds	r0, #1
 80052f2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80052f4:	4298      	cmp	r0, r3
        animationCounter++;
 80052f6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80052f8:	d905      	bls.n	8005306 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80052fa:	2301      	movs	r3, #1
 80052fc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80052fe:	2300      	movs	r3, #0
 8005300:	72a3      	strb	r3, [r4, #10]
    }
 8005302:	b003      	add	sp, #12
 8005304:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005306:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800530a:	2100      	movs	r1, #0
 800530c:	f015 f9b8 	bl	801a680 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8005310:	f010 0201 	ands.w	r2, r0, #1
 8005314:	b283      	uxth	r3, r0
 8005316:	d128      	bne.n	800536a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8005318:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800531a:	4b18      	ldr	r3, [pc, #96]	; (800537c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800531c:	4818      	ldr	r0, [pc, #96]	; (8005380 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800531e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8005320:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005322:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8005324:	f9b0 0000 	ldrsh.w	r0, [r0]
 8005328:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800532c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800532e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8005330:	442b      	add	r3, r5
 8005332:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8005334:	b212      	sxth	r2, r2
 8005336:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800533a:	6803      	ldr	r3, [r0, #0]
 800533c:	8322      	strh	r2, [r4, #24]
 800533e:	f8ad 2000 	strh.w	r2, [sp]
 8005342:	2200      	movs	r2, #0
 8005344:	691b      	ldr	r3, [r3, #16]
 8005346:	f8ad 2002 	strh.w	r2, [sp, #2]
 800534a:	4669      	mov	r1, sp
 800534c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800534e:	7aa3      	ldrb	r3, [r4, #10]
 8005350:	2b01      	cmp	r3, #1
 8005352:	d1d6      	bne.n	8005302 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8005354:	4b0b      	ldr	r3, [pc, #44]	; (8005384 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8005356:	781b      	ldrb	r3, [r3, #0]
 8005358:	2b00      	cmp	r3, #0
 800535a:	d0d2      	beq.n	8005302 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800535c:	f013 fb20 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8005360:	b003      	add	sp, #12
 8005362:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8005366:	f013 bb21 	b.w	80189ac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800536a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800536e:	2800      	cmp	r0, #0
 8005370:	bfd8      	it	le
 8005372:	460a      	movle	r2, r1
 8005374:	4413      	add	r3, r2
 8005376:	81e3      	strh	r3, [r4, #14]
 8005378:	e7cf      	b.n	800531a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800537a:	bf00      	nop
 800537c:	20013830 	.word	0x20013830
 8005380:	20013832 	.word	0x20013832
 8005384:	2001383a 	.word	0x2001383a

08005388 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 8005388:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800538c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8005390:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005392:	68a8      	ldr	r0, [r5, #8]
 8005394:	6803      	ldr	r3, [r0, #0]
 8005396:	6a1b      	ldr	r3, [r3, #32]
 8005398:	4798      	blx	r3
 800539a:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 800539e:	d205      	bcs.n	80053ac <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x24>
 80053a0:	4b45      	ldr	r3, [pc, #276]	; (80054b8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x130>)
 80053a2:	4a46      	ldr	r2, [pc, #280]	; (80054bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053a4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053a6:	4846      	ldr	r0, [pc, #280]	; (80054c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80053a8:	f028 faca 	bl	802d940 <__assert_func>
 80053ac:	6868      	ldr	r0, [r5, #4]
 80053ae:	6803      	ldr	r3, [r0, #0]
 80053b0:	6a1b      	ldr	r3, [r3, #32]
 80053b2:	4798      	blx	r3
 80053b4:	280f      	cmp	r0, #15
 80053b6:	d803      	bhi.n	80053c0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x38>
 80053b8:	4b42      	ldr	r3, [pc, #264]	; (80054c4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80053ba:	4a40      	ldr	r2, [pc, #256]	; (80054bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053bc:	21a4      	movs	r1, #164	; 0xa4
 80053be:	e7f2      	b.n	80053a6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053c0:	68e8      	ldr	r0, [r5, #12]
 80053c2:	6803      	ldr	r3, [r0, #0]
 80053c4:	6a1b      	ldr	r3, [r3, #32]
 80053c6:	4798      	blx	r3
 80053c8:	280b      	cmp	r0, #11
 80053ca:	d803      	bhi.n	80053d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4c>
 80053cc:	4b3e      	ldr	r3, [pc, #248]	; (80054c8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80053ce:	4a3b      	ldr	r2, [pc, #236]	; (80054bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80053d0:	21a5      	movs	r1, #165	; 0xa5
 80053d2:	e7e8      	b.n	80053a6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80053d4:	f013 fae4 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053d8:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80054d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>
 80053dc:	3004      	adds	r0, #4
 80053de:	f013 fb45 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053e2:	f8d9 0000 	ldr.w	r0, [r9]
 80053e6:	b110      	cbz	r0, 80053ee <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80053e8:	6803      	ldr	r3, [r0, #0]
 80053ea:	68db      	ldr	r3, [r3, #12]
 80053ec:	4798      	blx	r3
    if (*currentTrans)
 80053ee:	f8d9 0000 	ldr.w	r0, [r9]
 80053f2:	b110      	cbz	r0, 80053fa <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80053f4:	6803      	ldr	r3, [r0, #0]
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	4798      	blx	r3
    if (*currentScreen)
 80053fa:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80054d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80053fe:	f8d8 0000 	ldr.w	r0, [r8]
 8005402:	b110      	cbz	r0, 800540a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005404:	6803      	ldr	r3, [r0, #0]
 8005406:	695b      	ldr	r3, [r3, #20]
 8005408:	4798      	blx	r3
    if (*currentPresenter)
 800540a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800540e:	b110      	cbz	r0, 8005416 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005410:	6803      	ldr	r3, [r0, #0]
 8005412:	685b      	ldr	r3, [r3, #4]
 8005414:	4798      	blx	r3
    if (*currentScreen)
 8005416:	f8d8 0000 	ldr.w	r0, [r8]
 800541a:	b110      	cbz	r0, 8005422 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 800541c:	6803      	ldr	r3, [r0, #0]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	4798      	blx	r3
    if (*currentPresenter)
 8005422:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005426:	b110      	cbz	r0, 800542e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005428:	6803      	ldr	r3, [r0, #0]
 800542a:	689b      	ldr	r3, [r3, #8]
 800542c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800542e:	68e8      	ldr	r0, [r5, #12]
 8005430:	6803      	ldr	r3, [r0, #0]
 8005432:	2100      	movs	r1, #0
 8005434:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005436:	4798      	blx	r3
 8005438:	f04f 0b00 	mov.w	fp, #0
 800543c:	4b23      	ldr	r3, [pc, #140]	; (80054cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 800543e:	6003      	str	r3, [r0, #0]
 8005440:	4604      	mov	r4, r0
 8005442:	f8c0 b004 	str.w	fp, [r0, #4]
 8005446:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800544a:	68a8      	ldr	r0, [r5, #8]
 800544c:	6803      	ldr	r3, [r0, #0]
 800544e:	4659      	mov	r1, fp
 8005450:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005452:	4798      	blx	r3
 8005454:	4606      	mov	r6, r0
 8005456:	f005 faa7 	bl	800a9a8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800545a:	6868      	ldr	r0, [r5, #4]
 800545c:	6803      	ldr	r3, [r0, #0]
 800545e:	4659      	mov	r1, fp
 8005460:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005462:	4798      	blx	r3
 8005464:	4631      	mov	r1, r6
 8005466:	4605      	mov	r5, r0
 8005468:	f005 fa78 	bl	800a95c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 800546c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8005470:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005474:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005478:	b1e5      	cbz	r5, 80054b4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12c>
 800547a:	1d2b      	adds	r3, r5, #4
 800547c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005480:	6833      	ldr	r3, [r6, #0]
 8005482:	f8c5 a008 	str.w	sl, [r5, #8]
 8005486:	4630      	mov	r0, r6
 8005488:	68db      	ldr	r3, [r3, #12]
 800548a:	63f5      	str	r5, [r6, #60]	; 0x3c
 800548c:	4798      	blx	r3
    newPresenter->activate();
 800548e:	682b      	ldr	r3, [r5, #0]
 8005490:	4628      	mov	r0, r5
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005496:	4621      	mov	r1, r4
 8005498:	4630      	mov	r0, r6
 800549a:	f015 f8ad 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800549e:	6823      	ldr	r3, [r4, #0]
 80054a0:	4620      	mov	r0, r4
 80054a2:	691b      	ldr	r3, [r3, #16]
 80054a4:	4798      	blx	r3
    newTransition->invalidate();
 80054a6:	6823      	ldr	r3, [r4, #0]
 80054a8:	695b      	ldr	r3, [r3, #20]
 80054aa:	4620      	mov	r0, r4
}
 80054ac:	b001      	add	sp, #4
 80054ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054b2:	4718      	bx	r3
    model->bind(newPresenter);
 80054b4:	462b      	mov	r3, r5
 80054b6:	e7e1      	b.n	800547c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf4>
 80054b8:	0802f670 	.word	0x0802f670
 80054bc:	0802f999 	.word	0x0802f999
 80054c0:	0802f80c 	.word	0x0802f80c
 80054c4:	0802f853 	.word	0x0802f853
 80054c8:	0802f8f6 	.word	0x0802f8f6
 80054cc:	080309b0 	.word	0x080309b0
 80054d0:	20013884 	.word	0x20013884
 80054d4:	20013880 	.word	0x20013880

080054d8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80054d8:	4b04      	ldr	r3, [pc, #16]	; (80054ec <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80054da:	681b      	ldr	r3, [r3, #0]
 80054dc:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80054e0:	b10a      	cbz	r2, 80054e6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80054e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80054e4:	b900      	cbnz	r0, 80054e8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80054e6:	6898      	ldr	r0, [r3, #8]
    }
 80054e8:	4770      	bx	lr
 80054ea:	bf00      	nop
 80054ec:	2001383c 	.word	0x2001383c

080054f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80054f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054f2:	4604      	mov	r4, r0
 80054f4:	4617      	mov	r7, r2
 80054f6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80054f8:	f013 fb86 	bl	8018c08 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80054fc:	4b10      	ldr	r3, [pc, #64]	; (8005540 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80054fe:	601c      	str	r4, [r3, #0]
      model(m)
 8005500:	4b10      	ldr	r3, [pc, #64]	; (8005544 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8005502:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8005504:	4b10      	ldr	r3, [pc, #64]	; (8005548 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8005506:	2500      	movs	r5, #0
 8005508:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 800550c:	4b0f      	ldr	r3, [pc, #60]	; (800554c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 800550e:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8005512:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005514:	6803      	ldr	r3, [r0, #0]
 8005516:	2101      	movs	r1, #1
 8005518:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800551a:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 800551e:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8005522:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8005524:	4628      	mov	r0, r5
 8005526:	f005 f873 	bl	800a610 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800552a:	f7ff ffd5 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 800552e:	f01c ff6e 	bl	802240e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8005532:	f7ff ffd1 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8005536:	f01c ffe5 	bl	8022504 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 800553a:	4620      	mov	r0, r4
 800553c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800553e:	bf00      	nop
 8005540:	20013890 	.word	0x20013890
 8005544:	0803095c 	.word	0x0803095c
 8005548:	08030944 	.word	0x08030944
 800554c:	2001383c 	.word	0x2001383c

08005550 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8005550:	4b06      	ldr	r3, [pc, #24]	; (800556c <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8005552:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005556:	2300      	movs	r3, #0
 8005558:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800555c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005560:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005564:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005568:	4770      	bx	lr
 800556a:	bf00      	nop
 800556c:	08005389 	.word	0x08005389

08005570 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8005570:	4b06      	ldr	r3, [pc, #24]	; (800558c <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8005572:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005576:	2300      	movs	r3, #0
 8005578:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800557c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005580:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005584:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005588:	4770      	bx	lr
 800558a:	bf00      	nop
 800558c:	080059f5 	.word	0x080059f5

08005590 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8005590:	4b06      	ldr	r3, [pc, #24]	; (80055ac <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8005592:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005596:	2300      	movs	r3, #0
 8005598:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800559c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055a0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055a4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055a8:	4770      	bx	lr
 80055aa:	bf00      	nop
 80055ac:	08006599 	.word	0x08006599

080055b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80055b0:	4b06      	ldr	r3, [pc, #24]	; (80055cc <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80055b2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055b6:	2300      	movs	r3, #0
 80055b8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055bc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055c0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055c4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055c8:	4770      	bx	lr
 80055ca:	bf00      	nop
 80055cc:	080058b5 	.word	0x080058b5

080055d0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 80055d0:	4b06      	ldr	r3, [pc, #24]	; (80055ec <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 80055d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055d6:	2300      	movs	r3, #0
 80055d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80055e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80055e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80055e8:	4770      	bx	lr
 80055ea:	bf00      	nop
 80055ec:	08006459 	.word	0x08006459

080055f0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 80055f0:	4b06      	ldr	r3, [pc, #24]	; (800560c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 80055f2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80055f6:	2300      	movs	r3, #0
 80055f8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80055fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005600:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005604:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005608:	4770      	bx	lr
 800560a:	bf00      	nop
 800560c:	08006319 	.word	0x08006319

08005610 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8005610:	4b06      	ldr	r3, [pc, #24]	; (800562c <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8005612:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005616:	2300      	movs	r3, #0
 8005618:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800561c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005620:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005624:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005628:	4770      	bx	lr
 800562a:	bf00      	nop
 800562c:	080061d9 	.word	0x080061d9

08005630 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8005630:	4b06      	ldr	r3, [pc, #24]	; (800564c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8005632:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005636:	2300      	movs	r3, #0
 8005638:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800563c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005640:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005644:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005648:	4770      	bx	lr
 800564a:	bf00      	nop
 800564c:	08006099 	.word	0x08006099

08005650 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8005650:	4b06      	ldr	r3, [pc, #24]	; (800566c <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8005652:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005656:	2300      	movs	r3, #0
 8005658:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800565c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005660:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005664:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005668:	4770      	bx	lr
 800566a:	bf00      	nop
 800566c:	08005775 	.word	0x08005775

08005670 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8005670:	4b06      	ldr	r3, [pc, #24]	; (800568c <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8005672:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005676:	2300      	movs	r3, #0
 8005678:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800567c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005680:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005684:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005688:	4770      	bx	lr
 800568a:	bf00      	nop
 800568c:	08005f59 	.word	0x08005f59

08005690 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8005690:	4b06      	ldr	r3, [pc, #24]	; (80056ac <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8005692:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8005696:	2300      	movs	r3, #0
 8005698:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800569c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056a0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056a4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056a8:	4770      	bx	lr
 80056aa:	bf00      	nop
 80056ac:	08005e19 	.word	0x08005e19

080056b0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 80056b0:	4b06      	ldr	r3, [pc, #24]	; (80056cc <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 80056b2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056b6:	2300      	movs	r3, #0
 80056b8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056bc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056c0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056c4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056c8:	4770      	bx	lr
 80056ca:	bf00      	nop
 80056cc:	08005cd9 	.word	0x08005cd9

080056d0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 80056d0:	4b06      	ldr	r3, [pc, #24]	; (80056ec <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 80056d2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056d6:	2300      	movs	r3, #0
 80056d8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056dc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80056e0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80056e4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80056e8:	4770      	bx	lr
 80056ea:	bf00      	nop
 80056ec:	08005b99 	.word	0x08005b99

080056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 80056f0:	4b06      	ldr	r3, [pc, #24]	; (800570c <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 80056f2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80056f6:	2300      	movs	r3, #0
 80056f8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80056fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8005700:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8005704:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8005708:	4770      	bx	lr
 800570a:	bf00      	nop
 800570c:	08005199 	.word	0x08005199

08005710 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8005710:	6803      	ldr	r3, [r0, #0]
 8005712:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005714:	4718      	bx	r3
	...

08005718 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8005718:	4b12      	ldr	r3, [pc, #72]	; (8005764 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 800571a:	b513      	push	{r0, r1, r4, lr}
          solid()
 800571c:	6003      	str	r3, [r0, #0]
 800571e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005722:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005724:	4b10      	ldr	r3, [pc, #64]	; (8005768 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005726:	7241      	strb	r1, [r0, #9]
 8005728:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800572a:	4910      	ldr	r1, [pc, #64]	; (800576c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 800572c:	4b10      	ldr	r3, [pc, #64]	; (8005770 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800572e:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005732:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005736:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005738:	2200      	movs	r2, #0
 800573a:	6042      	str	r2, [r0, #4]
 800573c:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800573e:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005740:	81c2      	strh	r2, [r0, #14]
          solid()
 8005742:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005746:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800574a:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800574e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005752:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005754:	9100      	str	r1, [sp, #0]
 8005756:	3010      	adds	r0, #16
 8005758:	4611      	mov	r1, r2
 800575a:	f7fd ff94 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800575e:	4620      	mov	r0, r4
 8005760:	b002      	add	sp, #8
 8005762:	bd10      	pop	{r4, pc}
 8005764:	080309f8 	.word	0x080309f8
 8005768:	080308dc 	.word	0x080308dc
 800576c:	20013832 	.word	0x20013832
 8005770:	20013830 	.word	0x20013830

08005774 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8005774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005778:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800577c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800577e:	68a0      	ldr	r0, [r4, #8]
 8005780:	6803      	ldr	r3, [r0, #0]
 8005782:	6a1b      	ldr	r3, [r3, #32]
 8005784:	4798      	blx	r3
 8005786:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800578a:	4298      	cmp	r0, r3
 800578c:	d805      	bhi.n	800579a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x26>
 800578e:	4b42      	ldr	r3, [pc, #264]	; (8005898 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8005790:	4a42      	ldr	r2, [pc, #264]	; (800589c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8005792:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005794:	4842      	ldr	r0, [pc, #264]	; (80058a0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8005796:	f028 f8d3 	bl	802d940 <__assert_func>
 800579a:	6860      	ldr	r0, [r4, #4]
 800579c:	6803      	ldr	r3, [r0, #0]
 800579e:	6a1b      	ldr	r3, [r3, #32]
 80057a0:	4798      	blx	r3
 80057a2:	280f      	cmp	r0, #15
 80057a4:	d803      	bhi.n	80057ae <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x3a>
 80057a6:	4b3f      	ldr	r3, [pc, #252]	; (80058a4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 80057a8:	4a3c      	ldr	r2, [pc, #240]	; (800589c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057aa:	21a4      	movs	r1, #164	; 0xa4
 80057ac:	e7f2      	b.n	8005794 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80057ae:	68e0      	ldr	r0, [r4, #12]
 80057b0:	6803      	ldr	r3, [r0, #0]
 80057b2:	6a1b      	ldr	r3, [r3, #32]
 80057b4:	4798      	blx	r3
 80057b6:	2837      	cmp	r0, #55	; 0x37
 80057b8:	d803      	bhi.n	80057c2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4e>
 80057ba:	4b3b      	ldr	r3, [pc, #236]	; (80058a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 80057bc:	4a37      	ldr	r2, [pc, #220]	; (800589c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 80057be:	21a5      	movs	r1, #165	; 0xa5
 80057c0:	e7e8      	b.n	8005794 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80057c2:	f013 f8ed 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057c6:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80058ac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 80057ca:	3004      	adds	r0, #4
 80057cc:	f013 f94e 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057d0:	f8d9 0000 	ldr.w	r0, [r9]
 80057d4:	b110      	cbz	r0, 80057dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 80057d6:	6803      	ldr	r3, [r0, #0]
 80057d8:	68db      	ldr	r3, [r3, #12]
 80057da:	4798      	blx	r3
    if (*currentTrans)
 80057dc:	f8d9 0000 	ldr.w	r0, [r9]
 80057e0:	b110      	cbz	r0, 80057e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 80057e2:	6803      	ldr	r3, [r0, #0]
 80057e4:	681b      	ldr	r3, [r3, #0]
 80057e6:	4798      	blx	r3
    if (*currentScreen)
 80057e8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80058b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 80057ec:	f8d8 0000 	ldr.w	r0, [r8]
 80057f0:	b110      	cbz	r0, 80057f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	695b      	ldr	r3, [r3, #20]
 80057f6:	4798      	blx	r3
    if (*currentPresenter)
 80057f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057fc:	b110      	cbz	r0, 8005804 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057fe:	6803      	ldr	r3, [r0, #0]
 8005800:	685b      	ldr	r3, [r3, #4]
 8005802:	4798      	blx	r3
    if (*currentScreen)
 8005804:	f8d8 0000 	ldr.w	r0, [r8]
 8005808:	b110      	cbz	r0, 8005810 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800580a:	6803      	ldr	r3, [r0, #0]
 800580c:	681b      	ldr	r3, [r3, #0]
 800580e:	4798      	blx	r3
    if (*currentPresenter)
 8005810:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005814:	b110      	cbz	r0, 800581c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005816:	6803      	ldr	r3, [r0, #0]
 8005818:	689b      	ldr	r3, [r3, #8]
 800581a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800581c:	68e0      	ldr	r0, [r4, #12]
 800581e:	2100      	movs	r1, #0
 8005820:	f7ff ff76 	bl	8005710 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005824:	2114      	movs	r1, #20
 8005826:	4605      	mov	r5, r0
 8005828:	f7ff ff76 	bl	8005718 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800582c:	68a0      	ldr	r0, [r4, #8]
 800582e:	6803      	ldr	r3, [r0, #0]
 8005830:	2100      	movs	r1, #0
 8005832:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005834:	4798      	blx	r3
 8005836:	4606      	mov	r6, r0
 8005838:	f005 f976 	bl	800ab28 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800583c:	6860      	ldr	r0, [r4, #4]
 800583e:	6803      	ldr	r3, [r0, #0]
 8005840:	2100      	movs	r1, #0
 8005842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005844:	4798      	blx	r3
 8005846:	4631      	mov	r1, r6
 8005848:	4604      	mov	r4, r0
 800584a:	f005 f947 	bl	800aadc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 800584e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005852:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005856:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800585a:	b1dc      	cbz	r4, 8005894 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x120>
 800585c:	1d23      	adds	r3, r4, #4
 800585e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005862:	6833      	ldr	r3, [r6, #0]
 8005864:	f8c4 a008 	str.w	sl, [r4, #8]
 8005868:	4630      	mov	r0, r6
 800586a:	68db      	ldr	r3, [r3, #12]
 800586c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800586e:	4798      	blx	r3
    newPresenter->activate();
 8005870:	6823      	ldr	r3, [r4, #0]
 8005872:	4620      	mov	r0, r4
 8005874:	681b      	ldr	r3, [r3, #0]
 8005876:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005878:	4629      	mov	r1, r5
 800587a:	4630      	mov	r0, r6
 800587c:	f014 febc 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005880:	682b      	ldr	r3, [r5, #0]
 8005882:	4628      	mov	r0, r5
 8005884:	691b      	ldr	r3, [r3, #16]
 8005886:	4798      	blx	r3
    newTransition->invalidate();
 8005888:	682b      	ldr	r3, [r5, #0]
 800588a:	4628      	mov	r0, r5
 800588c:	695b      	ldr	r3, [r3, #20]
}
 800588e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005892:	4718      	bx	r3
    model->bind(newPresenter);
 8005894:	4623      	mov	r3, r4
 8005896:	e7e2      	b.n	800585e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xea>
 8005898:	0802f670 	.word	0x0802f670
 800589c:	0802faa1 	.word	0x0802faa1
 80058a0:	0802f80c 	.word	0x0802f80c
 80058a4:	0802f853 	.word	0x0802f853
 80058a8:	0802f8f6 	.word	0x0802f8f6
 80058ac:	20013884 	.word	0x20013884
 80058b0:	20013880 	.word	0x20013880

080058b4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 80058b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80058b8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80058bc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80058be:	68a0      	ldr	r0, [r4, #8]
 80058c0:	6803      	ldr	r3, [r0, #0]
 80058c2:	6a1b      	ldr	r3, [r3, #32]
 80058c4:	4798      	blx	r3
 80058c6:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80058ca:	4298      	cmp	r0, r3
 80058cc:	d805      	bhi.n	80058da <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x26>
 80058ce:	4b42      	ldr	r3, [pc, #264]	; (80059d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80058d0:	4a42      	ldr	r2, [pc, #264]	; (80059dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058d2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058d4:	4842      	ldr	r0, [pc, #264]	; (80059e0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80058d6:	f028 f833 	bl	802d940 <__assert_func>
 80058da:	6860      	ldr	r0, [r4, #4]
 80058dc:	6803      	ldr	r3, [r0, #0]
 80058de:	6a1b      	ldr	r3, [r3, #32]
 80058e0:	4798      	blx	r3
 80058e2:	280f      	cmp	r0, #15
 80058e4:	d803      	bhi.n	80058ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x3a>
 80058e6:	4b3f      	ldr	r3, [pc, #252]	; (80059e4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80058e8:	4a3c      	ldr	r2, [pc, #240]	; (80059dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058ea:	21a4      	movs	r1, #164	; 0xa4
 80058ec:	e7f2      	b.n	80058d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058ee:	68e0      	ldr	r0, [r4, #12]
 80058f0:	6803      	ldr	r3, [r0, #0]
 80058f2:	6a1b      	ldr	r3, [r3, #32]
 80058f4:	4798      	blx	r3
 80058f6:	2837      	cmp	r0, #55	; 0x37
 80058f8:	d803      	bhi.n	8005902 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4e>
 80058fa:	4b3b      	ldr	r3, [pc, #236]	; (80059e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80058fc:	4a37      	ldr	r2, [pc, #220]	; (80059dc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80058fe:	21a5      	movs	r1, #165	; 0xa5
 8005900:	e7e8      	b.n	80058d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005902:	f013 f84d 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005906:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059ec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 800590a:	3004      	adds	r0, #4
 800590c:	f013 f8ae 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005910:	f8d9 0000 	ldr.w	r0, [r9]
 8005914:	b110      	cbz	r0, 800591c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8005916:	6803      	ldr	r3, [r0, #0]
 8005918:	68db      	ldr	r3, [r3, #12]
 800591a:	4798      	blx	r3
    if (*currentTrans)
 800591c:	f8d9 0000 	ldr.w	r0, [r9]
 8005920:	b110      	cbz	r0, 8005928 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8005922:	6803      	ldr	r3, [r0, #0]
 8005924:	681b      	ldr	r3, [r3, #0]
 8005926:	4798      	blx	r3
    if (*currentScreen)
 8005928:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80059f0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 800592c:	f8d8 0000 	ldr.w	r0, [r8]
 8005930:	b110      	cbz	r0, 8005938 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005932:	6803      	ldr	r3, [r0, #0]
 8005934:	695b      	ldr	r3, [r3, #20]
 8005936:	4798      	blx	r3
    if (*currentPresenter)
 8005938:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800593c:	b110      	cbz	r0, 8005944 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 800593e:	6803      	ldr	r3, [r0, #0]
 8005940:	685b      	ldr	r3, [r3, #4]
 8005942:	4798      	blx	r3
    if (*currentScreen)
 8005944:	f8d8 0000 	ldr.w	r0, [r8]
 8005948:	b110      	cbz	r0, 8005950 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 800594a:	6803      	ldr	r3, [r0, #0]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	4798      	blx	r3
    if (*currentPresenter)
 8005950:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005954:	b110      	cbz	r0, 800595c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005956:	6803      	ldr	r3, [r0, #0]
 8005958:	689b      	ldr	r3, [r3, #8]
 800595a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800595c:	68e0      	ldr	r0, [r4, #12]
 800595e:	2100      	movs	r1, #0
 8005960:	f7ff fed6 	bl	8005710 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005964:	2114      	movs	r1, #20
 8005966:	4605      	mov	r5, r0
 8005968:	f7ff fed6 	bl	8005718 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800596c:	68a0      	ldr	r0, [r4, #8]
 800596e:	6803      	ldr	r3, [r0, #0]
 8005970:	2100      	movs	r1, #0
 8005972:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005974:	4798      	blx	r3
 8005976:	4606      	mov	r6, r0
 8005978:	f005 f876 	bl	800aa68 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800597c:	6860      	ldr	r0, [r4, #4]
 800597e:	6803      	ldr	r3, [r0, #0]
 8005980:	2100      	movs	r1, #0
 8005982:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005984:	4798      	blx	r3
 8005986:	4631      	mov	r1, r6
 8005988:	4604      	mov	r4, r0
 800598a:	f005 f847 	bl	800aa1c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 800598e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005992:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005996:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800599a:	b1dc      	cbz	r4, 80059d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x120>
 800599c:	1d23      	adds	r3, r4, #4
 800599e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059a2:	6833      	ldr	r3, [r6, #0]
 80059a4:	f8c4 a008 	str.w	sl, [r4, #8]
 80059a8:	4630      	mov	r0, r6
 80059aa:	68db      	ldr	r3, [r3, #12]
 80059ac:	63f4      	str	r4, [r6, #60]	; 0x3c
 80059ae:	4798      	blx	r3
    newPresenter->activate();
 80059b0:	6823      	ldr	r3, [r4, #0]
 80059b2:	4620      	mov	r0, r4
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80059b8:	4629      	mov	r1, r5
 80059ba:	4630      	mov	r0, r6
 80059bc:	f014 fe1c 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80059c0:	682b      	ldr	r3, [r5, #0]
 80059c2:	4628      	mov	r0, r5
 80059c4:	691b      	ldr	r3, [r3, #16]
 80059c6:	4798      	blx	r3
    newTransition->invalidate();
 80059c8:	682b      	ldr	r3, [r5, #0]
 80059ca:	4628      	mov	r0, r5
 80059cc:	695b      	ldr	r3, [r3, #20]
}
 80059ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059d2:	4718      	bx	r3
    model->bind(newPresenter);
 80059d4:	4623      	mov	r3, r4
 80059d6:	e7e2      	b.n	800599e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xea>
 80059d8:	0802f670 	.word	0x0802f670
 80059dc:	0802fbd1 	.word	0x0802fbd1
 80059e0:	0802f80c 	.word	0x0802f80c
 80059e4:	0802f853 	.word	0x0802f853
 80059e8:	0802f8f6 	.word	0x0802f8f6
 80059ec:	20013884 	.word	0x20013884
 80059f0:	20013880 	.word	0x20013880

080059f4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80059f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059f8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059fe:	68a0      	ldr	r0, [r4, #8]
 8005a00:	6803      	ldr	r3, [r0, #0]
 8005a02:	6a1b      	ldr	r3, [r3, #32]
 8005a04:	4798      	blx	r3
 8005a06:	f5b0 5f90 	cmp.w	r0, #4608	; 0x1200
 8005a0a:	d205      	bcs.n	8005a18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x24>
 8005a0c:	4b42      	ldr	r3, [pc, #264]	; (8005b18 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8005a0e:	4a43      	ldr	r2, [pc, #268]	; (8005b1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a10:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005a12:	4843      	ldr	r0, [pc, #268]	; (8005b20 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8005a14:	f027 ff94 	bl	802d940 <__assert_func>
 8005a18:	6860      	ldr	r0, [r4, #4]
 8005a1a:	6803      	ldr	r3, [r0, #0]
 8005a1c:	6a1b      	ldr	r3, [r3, #32]
 8005a1e:	4798      	blx	r3
 8005a20:	280f      	cmp	r0, #15
 8005a22:	d803      	bhi.n	8005a2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x38>
 8005a24:	4b3f      	ldr	r3, [pc, #252]	; (8005b24 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8005a26:	4a3d      	ldr	r2, [pc, #244]	; (8005b1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a28:	21a4      	movs	r1, #164	; 0xa4
 8005a2a:	e7f2      	b.n	8005a12 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a2c:	68e0      	ldr	r0, [r4, #12]
 8005a2e:	6803      	ldr	r3, [r0, #0]
 8005a30:	6a1b      	ldr	r3, [r3, #32]
 8005a32:	4798      	blx	r3
 8005a34:	2837      	cmp	r0, #55	; 0x37
 8005a36:	d803      	bhi.n	8005a40 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4c>
 8005a38:	4b3b      	ldr	r3, [pc, #236]	; (8005b28 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8005a3a:	4a38      	ldr	r2, [pc, #224]	; (8005b1c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8005a3c:	21a5      	movs	r1, #165	; 0xa5
 8005a3e:	e7e8      	b.n	8005a12 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a40:	f012 ffae 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a44:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8005a48:	3004      	adds	r0, #4
 8005a4a:	f013 f80f 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a4e:	f8d9 0000 	ldr.w	r0, [r9]
 8005a52:	b110      	cbz	r0, 8005a5a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a54:	6803      	ldr	r3, [r0, #0]
 8005a56:	68db      	ldr	r3, [r3, #12]
 8005a58:	4798      	blx	r3
    if (*currentTrans)
 8005a5a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a5e:	b110      	cbz	r0, 8005a66 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a60:	6803      	ldr	r3, [r0, #0]
 8005a62:	681b      	ldr	r3, [r3, #0]
 8005a64:	4798      	blx	r3
    if (*currentScreen)
 8005a66:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b30 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8005a6a:	f8d8 0000 	ldr.w	r0, [r8]
 8005a6e:	b110      	cbz	r0, 8005a76 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a70:	6803      	ldr	r3, [r0, #0]
 8005a72:	695b      	ldr	r3, [r3, #20]
 8005a74:	4798      	blx	r3
    if (*currentPresenter)
 8005a76:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a7a:	b110      	cbz	r0, 8005a82 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a7c:	6803      	ldr	r3, [r0, #0]
 8005a7e:	685b      	ldr	r3, [r3, #4]
 8005a80:	4798      	blx	r3
    if (*currentScreen)
 8005a82:	f8d8 0000 	ldr.w	r0, [r8]
 8005a86:	b110      	cbz	r0, 8005a8e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a88:	6803      	ldr	r3, [r0, #0]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	4798      	blx	r3
    if (*currentPresenter)
 8005a8e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a92:	b110      	cbz	r0, 8005a9a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a94:	6803      	ldr	r3, [r0, #0]
 8005a96:	689b      	ldr	r3, [r3, #8]
 8005a98:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a9a:	68e0      	ldr	r0, [r4, #12]
 8005a9c:	2100      	movs	r1, #0
 8005a9e:	f7ff fe37 	bl	8005710 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8005aa2:	2114      	movs	r1, #20
 8005aa4:	4605      	mov	r5, r0
 8005aa6:	f7ff fe37 	bl	8005718 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005aaa:	68a0      	ldr	r0, [r4, #8]
 8005aac:	6803      	ldr	r3, [r0, #0]
 8005aae:	2100      	movs	r1, #0
 8005ab0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ab2:	4798      	blx	r3
 8005ab4:	4606      	mov	r6, r0
 8005ab6:	f004 ff77 	bl	800a9a8 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005aba:	6860      	ldr	r0, [r4, #4]
 8005abc:	6803      	ldr	r3, [r0, #0]
 8005abe:	2100      	movs	r1, #0
 8005ac0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ac2:	4798      	blx	r3
 8005ac4:	4631      	mov	r1, r6
 8005ac6:	4604      	mov	r4, r0
 8005ac8:	f004 ff48 	bl	800a95c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8005acc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ad0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ad4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ad8:	b1dc      	cbz	r4, 8005b12 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x11e>
 8005ada:	1d23      	adds	r3, r4, #4
 8005adc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005ae0:	6833      	ldr	r3, [r6, #0]
 8005ae2:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ae6:	4630      	mov	r0, r6
 8005ae8:	68db      	ldr	r3, [r3, #12]
 8005aea:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005aec:	4798      	blx	r3
    newPresenter->activate();
 8005aee:	6823      	ldr	r3, [r4, #0]
 8005af0:	4620      	mov	r0, r4
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005af6:	4629      	mov	r1, r5
 8005af8:	4630      	mov	r0, r6
 8005afa:	f014 fd7d 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005afe:	682b      	ldr	r3, [r5, #0]
 8005b00:	4628      	mov	r0, r5
 8005b02:	691b      	ldr	r3, [r3, #16]
 8005b04:	4798      	blx	r3
    newTransition->invalidate();
 8005b06:	682b      	ldr	r3, [r5, #0]
 8005b08:	4628      	mov	r0, r5
 8005b0a:	695b      	ldr	r3, [r3, #20]
}
 8005b0c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b10:	4718      	bx	r3
    model->bind(newPresenter);
 8005b12:	4623      	mov	r3, r4
 8005b14:	e7e2      	b.n	8005adc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xe8>
 8005b16:	bf00      	nop
 8005b18:	0802f670 	.word	0x0802f670
 8005b1c:	0802fcef 	.word	0x0802fcef
 8005b20:	0802f80c 	.word	0x0802f80c
 8005b24:	0802f853 	.word	0x0802f853
 8005b28:	0802f8f6 	.word	0x0802f8f6
 8005b2c:	20013884 	.word	0x20013884
 8005b30:	20013880 	.word	0x20013880

08005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8005b34:	6803      	ldr	r3, [r0, #0]
 8005b36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b38:	4718      	bx	r3
	...

08005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005b3c:	4b12      	ldr	r3, [pc, #72]	; (8005b88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b3e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005b40:	6003      	str	r3, [r0, #0]
 8005b42:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b46:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005b48:	4b10      	ldr	r3, [pc, #64]	; (8005b8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005b4a:	7241      	strb	r1, [r0, #9]
 8005b4c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b4e:	4910      	ldr	r1, [pc, #64]	; (8005b90 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005b50:	4b10      	ldr	r3, [pc, #64]	; (8005b94 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b52:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8005b56:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005b5a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005b5c:	2200      	movs	r2, #0
 8005b5e:	6042      	str	r2, [r0, #4]
 8005b60:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8005b62:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8005b64:	81c2      	strh	r2, [r0, #14]
          solid()
 8005b66:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005b6a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005b6e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8005b72:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8005b76:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005b78:	9100      	str	r1, [sp, #0]
 8005b7a:	3010      	adds	r0, #16
 8005b7c:	4611      	mov	r1, r2
 8005b7e:	f7fd fd82 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8005b82:	4620      	mov	r0, r4
 8005b84:	b002      	add	sp, #8
 8005b86:	bd10      	pop	{r4, pc}
 8005b88:	080309d4 	.word	0x080309d4
 8005b8c:	080308dc 	.word	0x080308dc
 8005b90:	20013832 	.word	0x20013832
 8005b94:	20013830 	.word	0x20013830

08005b98 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8005b98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005b9c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ba0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ba2:	68a0      	ldr	r0, [r4, #8]
 8005ba4:	6803      	ldr	r3, [r0, #0]
 8005ba6:	6a1b      	ldr	r3, [r3, #32]
 8005ba8:	4798      	blx	r3
 8005baa:	f241 137b 	movw	r3, #4475	; 0x117b
 8005bae:	4298      	cmp	r0, r3
 8005bb0:	d805      	bhi.n	8005bbe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8005bb2:	4b42      	ldr	r3, [pc, #264]	; (8005cbc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8005bb4:	4a42      	ldr	r2, [pc, #264]	; (8005cc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bb6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005bb8:	4842      	ldr	r0, [pc, #264]	; (8005cc4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8005bba:	f027 fec1 	bl	802d940 <__assert_func>
 8005bbe:	6860      	ldr	r0, [r4, #4]
 8005bc0:	6803      	ldr	r3, [r0, #0]
 8005bc2:	6a1b      	ldr	r3, [r3, #32]
 8005bc4:	4798      	blx	r3
 8005bc6:	280f      	cmp	r0, #15
 8005bc8:	d803      	bhi.n	8005bd2 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005bca:	4b3f      	ldr	r3, [pc, #252]	; (8005cc8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005bcc:	4a3c      	ldr	r2, [pc, #240]	; (8005cc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005bce:	21a4      	movs	r1, #164	; 0xa4
 8005bd0:	e7f2      	b.n	8005bb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005bd2:	68e0      	ldr	r0, [r4, #12]
 8005bd4:	6803      	ldr	r3, [r0, #0]
 8005bd6:	6a1b      	ldr	r3, [r3, #32]
 8005bd8:	4798      	blx	r3
 8005bda:	2837      	cmp	r0, #55	; 0x37
 8005bdc:	d803      	bhi.n	8005be6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005bde:	4b3b      	ldr	r3, [pc, #236]	; (8005ccc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005be0:	4a37      	ldr	r2, [pc, #220]	; (8005cc0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005be2:	21a5      	movs	r1, #165	; 0xa5
 8005be4:	e7e8      	b.n	8005bb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005be6:	f012 fedb 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005bea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005cd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005bee:	3004      	adds	r0, #4
 8005bf0:	f012 ff3c 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005bf4:	f8d9 0000 	ldr.w	r0, [r9]
 8005bf8:	b110      	cbz	r0, 8005c00 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005bfa:	6803      	ldr	r3, [r0, #0]
 8005bfc:	68db      	ldr	r3, [r3, #12]
 8005bfe:	4798      	blx	r3
    if (*currentTrans)
 8005c00:	f8d9 0000 	ldr.w	r0, [r9]
 8005c04:	b110      	cbz	r0, 8005c0c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005c06:	6803      	ldr	r3, [r0, #0]
 8005c08:	681b      	ldr	r3, [r3, #0]
 8005c0a:	4798      	blx	r3
    if (*currentScreen)
 8005c0c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005cd4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005c10:	f8d8 0000 	ldr.w	r0, [r8]
 8005c14:	b110      	cbz	r0, 8005c1c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005c16:	6803      	ldr	r3, [r0, #0]
 8005c18:	695b      	ldr	r3, [r3, #20]
 8005c1a:	4798      	blx	r3
    if (*currentPresenter)
 8005c1c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c20:	b110      	cbz	r0, 8005c28 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005c22:	6803      	ldr	r3, [r0, #0]
 8005c24:	685b      	ldr	r3, [r3, #4]
 8005c26:	4798      	blx	r3
    if (*currentScreen)
 8005c28:	f8d8 0000 	ldr.w	r0, [r8]
 8005c2c:	b110      	cbz	r0, 8005c34 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005c2e:	6803      	ldr	r3, [r0, #0]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	4798      	blx	r3
    if (*currentPresenter)
 8005c34:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005c38:	b110      	cbz	r0, 8005c40 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005c3a:	6803      	ldr	r3, [r0, #0]
 8005c3c:	689b      	ldr	r3, [r3, #8]
 8005c3e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005c40:	68e0      	ldr	r0, [r4, #12]
 8005c42:	2100      	movs	r1, #0
 8005c44:	f7ff ff76 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005c48:	2114      	movs	r1, #20
 8005c4a:	4605      	mov	r5, r0
 8005c4c:	f7ff ff76 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005c50:	68a0      	ldr	r0, [r4, #8]
 8005c52:	6803      	ldr	r3, [r0, #0]
 8005c54:	2100      	movs	r1, #0
 8005c56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c58:	4798      	blx	r3
 8005c5a:	4606      	mov	r6, r0
 8005c5c:	f005 f990 	bl	800af80 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005c60:	6860      	ldr	r0, [r4, #4]
 8005c62:	6803      	ldr	r3, [r0, #0]
 8005c64:	2100      	movs	r1, #0
 8005c66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c68:	4798      	blx	r3
 8005c6a:	4631      	mov	r1, r6
 8005c6c:	4604      	mov	r4, r0
 8005c6e:	f005 f961 	bl	800af34 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8005c72:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005c76:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005c7a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005c7e:	b1dc      	cbz	r4, 8005cb8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005c80:	1d23      	adds	r3, r4, #4
 8005c82:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005c86:	6833      	ldr	r3, [r6, #0]
 8005c88:	f8c4 a008 	str.w	sl, [r4, #8]
 8005c8c:	4630      	mov	r0, r6
 8005c8e:	68db      	ldr	r3, [r3, #12]
 8005c90:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005c92:	4798      	blx	r3
    newPresenter->activate();
 8005c94:	6823      	ldr	r3, [r4, #0]
 8005c96:	4620      	mov	r0, r4
 8005c98:	681b      	ldr	r3, [r3, #0]
 8005c9a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005c9c:	4629      	mov	r1, r5
 8005c9e:	4630      	mov	r0, r6
 8005ca0:	f014 fcaa 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ca4:	682b      	ldr	r3, [r5, #0]
 8005ca6:	4628      	mov	r0, r5
 8005ca8:	691b      	ldr	r3, [r3, #16]
 8005caa:	4798      	blx	r3
    newTransition->invalidate();
 8005cac:	682b      	ldr	r3, [r5, #0]
 8005cae:	4628      	mov	r0, r5
 8005cb0:	695b      	ldr	r3, [r3, #20]
}
 8005cb2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005cb6:	4718      	bx	r3
    model->bind(newPresenter);
 8005cb8:	4623      	mov	r3, r4
 8005cba:	e7e2      	b.n	8005c82 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005cbc:	0802f670 	.word	0x0802f670
 8005cc0:	0802fe09 	.word	0x0802fe09
 8005cc4:	0802f80c 	.word	0x0802f80c
 8005cc8:	0802f853 	.word	0x0802f853
 8005ccc:	0802f8f6 	.word	0x0802f8f6
 8005cd0:	20013884 	.word	0x20013884
 8005cd4:	20013880 	.word	0x20013880

08005cd8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005cdc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ce0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005ce2:	68a0      	ldr	r0, [r4, #8]
 8005ce4:	6803      	ldr	r3, [r0, #0]
 8005ce6:	6a1b      	ldr	r3, [r3, #32]
 8005ce8:	4798      	blx	r3
 8005cea:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005cee:	4298      	cmp	r0, r3
 8005cf0:	d805      	bhi.n	8005cfe <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005cf2:	4b42      	ldr	r3, [pc, #264]	; (8005dfc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005cf4:	4a42      	ldr	r2, [pc, #264]	; (8005e00 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005cf6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005cf8:	4842      	ldr	r0, [pc, #264]	; (8005e04 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005cfa:	f027 fe21 	bl	802d940 <__assert_func>
 8005cfe:	6860      	ldr	r0, [r4, #4]
 8005d00:	6803      	ldr	r3, [r0, #0]
 8005d02:	6a1b      	ldr	r3, [r3, #32]
 8005d04:	4798      	blx	r3
 8005d06:	280f      	cmp	r0, #15
 8005d08:	d803      	bhi.n	8005d12 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005d0a:	4b3f      	ldr	r3, [pc, #252]	; (8005e08 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005d0c:	4a3c      	ldr	r2, [pc, #240]	; (8005e00 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d0e:	21a4      	movs	r1, #164	; 0xa4
 8005d10:	e7f2      	b.n	8005cf8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005d12:	68e0      	ldr	r0, [r4, #12]
 8005d14:	6803      	ldr	r3, [r0, #0]
 8005d16:	6a1b      	ldr	r3, [r3, #32]
 8005d18:	4798      	blx	r3
 8005d1a:	2837      	cmp	r0, #55	; 0x37
 8005d1c:	d803      	bhi.n	8005d26 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005d1e:	4b3b      	ldr	r3, [pc, #236]	; (8005e0c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005d20:	4a37      	ldr	r2, [pc, #220]	; (8005e00 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005d22:	21a5      	movs	r1, #165	; 0xa5
 8005d24:	e7e8      	b.n	8005cf8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005d26:	f012 fe3b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005d2a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005e10 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005d2e:	3004      	adds	r0, #4
 8005d30:	f012 fe9c 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005d34:	f8d9 0000 	ldr.w	r0, [r9]
 8005d38:	b110      	cbz	r0, 8005d40 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005d3a:	6803      	ldr	r3, [r0, #0]
 8005d3c:	68db      	ldr	r3, [r3, #12]
 8005d3e:	4798      	blx	r3
    if (*currentTrans)
 8005d40:	f8d9 0000 	ldr.w	r0, [r9]
 8005d44:	b110      	cbz	r0, 8005d4c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005d46:	6803      	ldr	r3, [r0, #0]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	4798      	blx	r3
    if (*currentScreen)
 8005d4c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005e14 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005d50:	f8d8 0000 	ldr.w	r0, [r8]
 8005d54:	b110      	cbz	r0, 8005d5c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005d56:	6803      	ldr	r3, [r0, #0]
 8005d58:	695b      	ldr	r3, [r3, #20]
 8005d5a:	4798      	blx	r3
    if (*currentPresenter)
 8005d5c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d60:	b110      	cbz	r0, 8005d68 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005d62:	6803      	ldr	r3, [r0, #0]
 8005d64:	685b      	ldr	r3, [r3, #4]
 8005d66:	4798      	blx	r3
    if (*currentScreen)
 8005d68:	f8d8 0000 	ldr.w	r0, [r8]
 8005d6c:	b110      	cbz	r0, 8005d74 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005d6e:	6803      	ldr	r3, [r0, #0]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	4798      	blx	r3
    if (*currentPresenter)
 8005d74:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005d78:	b110      	cbz	r0, 8005d80 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005d7a:	6803      	ldr	r3, [r0, #0]
 8005d7c:	689b      	ldr	r3, [r3, #8]
 8005d7e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005d80:	68e0      	ldr	r0, [r4, #12]
 8005d82:	2100      	movs	r1, #0
 8005d84:	f7ff fed6 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005d88:	2114      	movs	r1, #20
 8005d8a:	4605      	mov	r5, r0
 8005d8c:	f7ff fed6 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005d90:	68a0      	ldr	r0, [r4, #8]
 8005d92:	6803      	ldr	r3, [r0, #0]
 8005d94:	2100      	movs	r1, #0
 8005d96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d98:	4798      	blx	r3
 8005d9a:	4606      	mov	r6, r0
 8005d9c:	f004 fcd0 	bl	800a740 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005da0:	6860      	ldr	r0, [r4, #4]
 8005da2:	6803      	ldr	r3, [r0, #0]
 8005da4:	2100      	movs	r1, #0
 8005da6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005da8:	4798      	blx	r3
 8005daa:	4631      	mov	r1, r6
 8005dac:	4604      	mov	r4, r0
 8005dae:	f004 fca1 	bl	800a6f4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005db2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005db6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005dba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005dbe:	b1dc      	cbz	r4, 8005df8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005dc0:	1d23      	adds	r3, r4, #4
 8005dc2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005dc6:	6833      	ldr	r3, [r6, #0]
 8005dc8:	f8c4 a008 	str.w	sl, [r4, #8]
 8005dcc:	4630      	mov	r0, r6
 8005dce:	68db      	ldr	r3, [r3, #12]
 8005dd0:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005dd2:	4798      	blx	r3
    newPresenter->activate();
 8005dd4:	6823      	ldr	r3, [r4, #0]
 8005dd6:	4620      	mov	r0, r4
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ddc:	4629      	mov	r1, r5
 8005dde:	4630      	mov	r0, r6
 8005de0:	f014 fc0a 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005de4:	682b      	ldr	r3, [r5, #0]
 8005de6:	4628      	mov	r0, r5
 8005de8:	691b      	ldr	r3, [r3, #16]
 8005dea:	4798      	blx	r3
    newTransition->invalidate();
 8005dec:	682b      	ldr	r3, [r5, #0]
 8005dee:	4628      	mov	r0, r5
 8005df0:	695b      	ldr	r3, [r3, #20]
}
 8005df2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005df6:	4718      	bx	r3
    model->bind(newPresenter);
 8005df8:	4623      	mov	r3, r4
 8005dfa:	e7e2      	b.n	8005dc2 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005dfc:	0802f670 	.word	0x0802f670
 8005e00:	0802ff29 	.word	0x0802ff29
 8005e04:	0802f80c 	.word	0x0802f80c
 8005e08:	0802f853 	.word	0x0802f853
 8005e0c:	0802f8f6 	.word	0x0802f8f6
 8005e10:	20013884 	.word	0x20013884
 8005e14:	20013880 	.word	0x20013880

08005e18 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005e18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005e1c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005e20:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005e22:	68a0      	ldr	r0, [r4, #8]
 8005e24:	6803      	ldr	r3, [r0, #0]
 8005e26:	6a1b      	ldr	r3, [r3, #32]
 8005e28:	4798      	blx	r3
 8005e2a:	f241 4377 	movw	r3, #5239	; 0x1477
 8005e2e:	4298      	cmp	r0, r3
 8005e30:	d805      	bhi.n	8005e3e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 8005e32:	4b42      	ldr	r3, [pc, #264]	; (8005f3c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 8005e34:	4a42      	ldr	r2, [pc, #264]	; (8005f40 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e36:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005e38:	4842      	ldr	r0, [pc, #264]	; (8005f44 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005e3a:	f027 fd81 	bl	802d940 <__assert_func>
 8005e3e:	6860      	ldr	r0, [r4, #4]
 8005e40:	6803      	ldr	r3, [r0, #0]
 8005e42:	6a1b      	ldr	r3, [r3, #32]
 8005e44:	4798      	blx	r3
 8005e46:	280f      	cmp	r0, #15
 8005e48:	d803      	bhi.n	8005e52 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005e4a:	4b3f      	ldr	r3, [pc, #252]	; (8005f48 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005e4c:	4a3c      	ldr	r2, [pc, #240]	; (8005f40 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e4e:	21a4      	movs	r1, #164	; 0xa4
 8005e50:	e7f2      	b.n	8005e38 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005e52:	68e0      	ldr	r0, [r4, #12]
 8005e54:	6803      	ldr	r3, [r0, #0]
 8005e56:	6a1b      	ldr	r3, [r3, #32]
 8005e58:	4798      	blx	r3
 8005e5a:	2837      	cmp	r0, #55	; 0x37
 8005e5c:	d803      	bhi.n	8005e66 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005e5e:	4b3b      	ldr	r3, [pc, #236]	; (8005f4c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005e60:	4a37      	ldr	r2, [pc, #220]	; (8005f40 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005e62:	21a5      	movs	r1, #165	; 0xa5
 8005e64:	e7e8      	b.n	8005e38 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005e66:	f012 fd9b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005e6a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005f50 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005e6e:	3004      	adds	r0, #4
 8005e70:	f012 fdfc 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005e74:	f8d9 0000 	ldr.w	r0, [r9]
 8005e78:	b110      	cbz	r0, 8005e80 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005e7a:	6803      	ldr	r3, [r0, #0]
 8005e7c:	68db      	ldr	r3, [r3, #12]
 8005e7e:	4798      	blx	r3
    if (*currentTrans)
 8005e80:	f8d9 0000 	ldr.w	r0, [r9]
 8005e84:	b110      	cbz	r0, 8005e8c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005e86:	6803      	ldr	r3, [r0, #0]
 8005e88:	681b      	ldr	r3, [r3, #0]
 8005e8a:	4798      	blx	r3
    if (*currentScreen)
 8005e8c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005f54 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005e90:	f8d8 0000 	ldr.w	r0, [r8]
 8005e94:	b110      	cbz	r0, 8005e9c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005e96:	6803      	ldr	r3, [r0, #0]
 8005e98:	695b      	ldr	r3, [r3, #20]
 8005e9a:	4798      	blx	r3
    if (*currentPresenter)
 8005e9c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ea0:	b110      	cbz	r0, 8005ea8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005ea2:	6803      	ldr	r3, [r0, #0]
 8005ea4:	685b      	ldr	r3, [r3, #4]
 8005ea6:	4798      	blx	r3
    if (*currentScreen)
 8005ea8:	f8d8 0000 	ldr.w	r0, [r8]
 8005eac:	b110      	cbz	r0, 8005eb4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005eae:	6803      	ldr	r3, [r0, #0]
 8005eb0:	681b      	ldr	r3, [r3, #0]
 8005eb2:	4798      	blx	r3
    if (*currentPresenter)
 8005eb4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005eb8:	b110      	cbz	r0, 8005ec0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005eba:	6803      	ldr	r3, [r0, #0]
 8005ebc:	689b      	ldr	r3, [r3, #8]
 8005ebe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005ec0:	68e0      	ldr	r0, [r4, #12]
 8005ec2:	2100      	movs	r1, #0
 8005ec4:	f7ff fe36 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005ec8:	2114      	movs	r1, #20
 8005eca:	4605      	mov	r5, r0
 8005ecc:	f7ff fe36 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005ed0:	68a0      	ldr	r0, [r4, #8]
 8005ed2:	6803      	ldr	r3, [r0, #0]
 8005ed4:	2100      	movs	r1, #0
 8005ed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ed8:	4798      	blx	r3
 8005eda:	4606      	mov	r6, r0
 8005edc:	f004 fec0 	bl	800ac60 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005ee0:	6860      	ldr	r0, [r4, #4]
 8005ee2:	6803      	ldr	r3, [r0, #0]
 8005ee4:	2100      	movs	r1, #0
 8005ee6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ee8:	4798      	blx	r3
 8005eea:	4631      	mov	r1, r6
 8005eec:	4604      	mov	r4, r0
 8005eee:	f004 fe91 	bl	800ac14 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005ef2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005ef6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005efa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005efe:	b1dc      	cbz	r4, 8005f38 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005f00:	1d23      	adds	r3, r4, #4
 8005f02:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005f06:	6833      	ldr	r3, [r6, #0]
 8005f08:	f8c4 a008 	str.w	sl, [r4, #8]
 8005f0c:	4630      	mov	r0, r6
 8005f0e:	68db      	ldr	r3, [r3, #12]
 8005f10:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005f12:	4798      	blx	r3
    newPresenter->activate();
 8005f14:	6823      	ldr	r3, [r4, #0]
 8005f16:	4620      	mov	r0, r4
 8005f18:	681b      	ldr	r3, [r3, #0]
 8005f1a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005f1c:	4629      	mov	r1, r5
 8005f1e:	4630      	mov	r0, r6
 8005f20:	f014 fb6a 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005f24:	682b      	ldr	r3, [r5, #0]
 8005f26:	4628      	mov	r0, r5
 8005f28:	691b      	ldr	r3, [r3, #16]
 8005f2a:	4798      	blx	r3
    newTransition->invalidate();
 8005f2c:	682b      	ldr	r3, [r5, #0]
 8005f2e:	4628      	mov	r0, r5
 8005f30:	695b      	ldr	r3, [r3, #20]
}
 8005f32:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005f36:	4718      	bx	r3
    model->bind(newPresenter);
 8005f38:	4623      	mov	r3, r4
 8005f3a:	e7e2      	b.n	8005f02 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005f3c:	0802f670 	.word	0x0802f670
 8005f40:	0803004f 	.word	0x0803004f
 8005f44:	0802f80c 	.word	0x0802f80c
 8005f48:	0802f853 	.word	0x0802f853
 8005f4c:	0802f8f6 	.word	0x0802f8f6
 8005f50:	20013884 	.word	0x20013884
 8005f54:	20013880 	.word	0x20013880

08005f58 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005f58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005f5c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005f60:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005f62:	68a0      	ldr	r0, [r4, #8]
 8005f64:	6803      	ldr	r3, [r0, #0]
 8005f66:	6a1b      	ldr	r3, [r3, #32]
 8005f68:	4798      	blx	r3
 8005f6a:	f241 4377 	movw	r3, #5239	; 0x1477
 8005f6e:	4298      	cmp	r0, r3
 8005f70:	d805      	bhi.n	8005f7e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8005f72:	4b42      	ldr	r3, [pc, #264]	; (800607c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8005f74:	4a42      	ldr	r2, [pc, #264]	; (8006080 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f76:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005f78:	4842      	ldr	r0, [pc, #264]	; (8006084 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005f7a:	f027 fce1 	bl	802d940 <__assert_func>
 8005f7e:	6860      	ldr	r0, [r4, #4]
 8005f80:	6803      	ldr	r3, [r0, #0]
 8005f82:	6a1b      	ldr	r3, [r3, #32]
 8005f84:	4798      	blx	r3
 8005f86:	280f      	cmp	r0, #15
 8005f88:	d803      	bhi.n	8005f92 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 8005f8a:	4b3f      	ldr	r3, [pc, #252]	; (8006088 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005f8c:	4a3c      	ldr	r2, [pc, #240]	; (8006080 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005f8e:	21a4      	movs	r1, #164	; 0xa4
 8005f90:	e7f2      	b.n	8005f78 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005f92:	68e0      	ldr	r0, [r4, #12]
 8005f94:	6803      	ldr	r3, [r0, #0]
 8005f96:	6a1b      	ldr	r3, [r3, #32]
 8005f98:	4798      	blx	r3
 8005f9a:	2837      	cmp	r0, #55	; 0x37
 8005f9c:	d803      	bhi.n	8005fa6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005f9e:	4b3b      	ldr	r3, [pc, #236]	; (800608c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005fa0:	4a37      	ldr	r2, [pc, #220]	; (8006080 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005fa2:	21a5      	movs	r1, #165	; 0xa5
 8005fa4:	e7e8      	b.n	8005f78 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005fa6:	f012 fcfb 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005faa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006090 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005fae:	3004      	adds	r0, #4
 8005fb0:	f012 fd5c 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005fb4:	f8d9 0000 	ldr.w	r0, [r9]
 8005fb8:	b110      	cbz	r0, 8005fc0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005fba:	6803      	ldr	r3, [r0, #0]
 8005fbc:	68db      	ldr	r3, [r3, #12]
 8005fbe:	4798      	blx	r3
    if (*currentTrans)
 8005fc0:	f8d9 0000 	ldr.w	r0, [r9]
 8005fc4:	b110      	cbz	r0, 8005fcc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8005fc6:	6803      	ldr	r3, [r0, #0]
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	4798      	blx	r3
    if (*currentScreen)
 8005fcc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006094 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005fd0:	f8d8 0000 	ldr.w	r0, [r8]
 8005fd4:	b110      	cbz	r0, 8005fdc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8005fd6:	6803      	ldr	r3, [r0, #0]
 8005fd8:	695b      	ldr	r3, [r3, #20]
 8005fda:	4798      	blx	r3
    if (*currentPresenter)
 8005fdc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005fe0:	b110      	cbz	r0, 8005fe8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005fe2:	6803      	ldr	r3, [r0, #0]
 8005fe4:	685b      	ldr	r3, [r3, #4]
 8005fe6:	4798      	blx	r3
    if (*currentScreen)
 8005fe8:	f8d8 0000 	ldr.w	r0, [r8]
 8005fec:	b110      	cbz	r0, 8005ff4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005fee:	6803      	ldr	r3, [r0, #0]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	4798      	blx	r3
    if (*currentPresenter)
 8005ff4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005ff8:	b110      	cbz	r0, 8006000 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005ffa:	6803      	ldr	r3, [r0, #0]
 8005ffc:	689b      	ldr	r3, [r3, #8]
 8005ffe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006000:	68e0      	ldr	r0, [r4, #12]
 8006002:	2100      	movs	r1, #0
 8006004:	f7ff fd96 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006008:	2114      	movs	r1, #20
 800600a:	4605      	mov	r5, r0
 800600c:	f7ff fd96 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006010:	68a0      	ldr	r0, [r4, #8]
 8006012:	6803      	ldr	r3, [r0, #0]
 8006014:	2100      	movs	r1, #0
 8006016:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006018:	4798      	blx	r3
 800601a:	4606      	mov	r6, r0
 800601c:	f004 fdde 	bl	800abdc <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006020:	6860      	ldr	r0, [r4, #4]
 8006022:	6803      	ldr	r3, [r0, #0]
 8006024:	2100      	movs	r1, #0
 8006026:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006028:	4798      	blx	r3
 800602a:	4631      	mov	r1, r6
 800602c:	4604      	mov	r4, r0
 800602e:	f004 fdaf 	bl	800ab90 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8006032:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006036:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800603a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800603e:	b1dc      	cbz	r4, 8006078 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8006040:	1d23      	adds	r3, r4, #4
 8006042:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006046:	6833      	ldr	r3, [r6, #0]
 8006048:	f8c4 a008 	str.w	sl, [r4, #8]
 800604c:	4630      	mov	r0, r6
 800604e:	68db      	ldr	r3, [r3, #12]
 8006050:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006052:	4798      	blx	r3
    newPresenter->activate();
 8006054:	6823      	ldr	r3, [r4, #0]
 8006056:	4620      	mov	r0, r4
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800605c:	4629      	mov	r1, r5
 800605e:	4630      	mov	r0, r6
 8006060:	f014 faca 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006064:	682b      	ldr	r3, [r5, #0]
 8006066:	4628      	mov	r0, r5
 8006068:	691b      	ldr	r3, [r3, #16]
 800606a:	4798      	blx	r3
    newTransition->invalidate();
 800606c:	682b      	ldr	r3, [r5, #0]
 800606e:	4628      	mov	r0, r5
 8006070:	695b      	ldr	r3, [r3, #20]
}
 8006072:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006076:	4718      	bx	r3
    model->bind(newPresenter);
 8006078:	4623      	mov	r3, r4
 800607a:	e7e2      	b.n	8006042 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 800607c:	0802f670 	.word	0x0802f670
 8006080:	08030193 	.word	0x08030193
 8006084:	0802f80c 	.word	0x0802f80c
 8006088:	0802f853 	.word	0x0802f853
 800608c:	0802f8f6 	.word	0x0802f8f6
 8006090:	20013884 	.word	0x20013884
 8006094:	20013880 	.word	0x20013880

08006098 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8006098:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800609c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80060a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80060a2:	68a0      	ldr	r0, [r4, #8]
 80060a4:	6803      	ldr	r3, [r0, #0]
 80060a6:	6a1b      	ldr	r3, [r3, #32]
 80060a8:	4798      	blx	r3
 80060aa:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80060ae:	4298      	cmp	r0, r3
 80060b0:	d805      	bhi.n	80060be <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x26>
 80060b2:	4b42      	ldr	r3, [pc, #264]	; (80061bc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80060b4:	4a42      	ldr	r2, [pc, #264]	; (80061c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060b6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80060b8:	4842      	ldr	r0, [pc, #264]	; (80061c4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80060ba:	f027 fc41 	bl	802d940 <__assert_func>
 80060be:	6860      	ldr	r0, [r4, #4]
 80060c0:	6803      	ldr	r3, [r0, #0]
 80060c2:	6a1b      	ldr	r3, [r3, #32]
 80060c4:	4798      	blx	r3
 80060c6:	280f      	cmp	r0, #15
 80060c8:	d803      	bhi.n	80060d2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x3a>
 80060ca:	4b3f      	ldr	r3, [pc, #252]	; (80061c8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80060cc:	4a3c      	ldr	r2, [pc, #240]	; (80061c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060ce:	21a4      	movs	r1, #164	; 0xa4
 80060d0:	e7f2      	b.n	80060b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80060d2:	68e0      	ldr	r0, [r4, #12]
 80060d4:	6803      	ldr	r3, [r0, #0]
 80060d6:	6a1b      	ldr	r3, [r3, #32]
 80060d8:	4798      	blx	r3
 80060da:	2837      	cmp	r0, #55	; 0x37
 80060dc:	d803      	bhi.n	80060e6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4e>
 80060de:	4b3b      	ldr	r3, [pc, #236]	; (80061cc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80060e0:	4a37      	ldr	r2, [pc, #220]	; (80061c0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80060e2:	21a5      	movs	r1, #165	; 0xa5
 80060e4:	e7e8      	b.n	80060b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80060e6:	f012 fc5b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80060ea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80061d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80060ee:	3004      	adds	r0, #4
 80060f0:	f012 fcbc 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80060f4:	f8d9 0000 	ldr.w	r0, [r9]
 80060f8:	b110      	cbz	r0, 8006100 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80060fa:	6803      	ldr	r3, [r0, #0]
 80060fc:	68db      	ldr	r3, [r3, #12]
 80060fe:	4798      	blx	r3
    if (*currentTrans)
 8006100:	f8d9 0000 	ldr.w	r0, [r9]
 8006104:	b110      	cbz	r0, 800610c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006106:	6803      	ldr	r3, [r0, #0]
 8006108:	681b      	ldr	r3, [r3, #0]
 800610a:	4798      	blx	r3
    if (*currentScreen)
 800610c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80061d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8006110:	f8d8 0000 	ldr.w	r0, [r8]
 8006114:	b110      	cbz	r0, 800611c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006116:	6803      	ldr	r3, [r0, #0]
 8006118:	695b      	ldr	r3, [r3, #20]
 800611a:	4798      	blx	r3
    if (*currentPresenter)
 800611c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006120:	b110      	cbz	r0, 8006128 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006122:	6803      	ldr	r3, [r0, #0]
 8006124:	685b      	ldr	r3, [r3, #4]
 8006126:	4798      	blx	r3
    if (*currentScreen)
 8006128:	f8d8 0000 	ldr.w	r0, [r8]
 800612c:	b110      	cbz	r0, 8006134 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800612e:	6803      	ldr	r3, [r0, #0]
 8006130:	681b      	ldr	r3, [r3, #0]
 8006132:	4798      	blx	r3
    if (*currentPresenter)
 8006134:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006138:	b110      	cbz	r0, 8006140 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800613a:	6803      	ldr	r3, [r0, #0]
 800613c:	689b      	ldr	r3, [r3, #8]
 800613e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006140:	68e0      	ldr	r0, [r4, #12]
 8006142:	2100      	movs	r1, #0
 8006144:	f7ff fcf6 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006148:	2114      	movs	r1, #20
 800614a:	4605      	mov	r5, r0
 800614c:	f7ff fcf6 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006150:	68a0      	ldr	r0, [r4, #8]
 8006152:	6803      	ldr	r3, [r0, #0]
 8006154:	2100      	movs	r1, #0
 8006156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006158:	4798      	blx	r3
 800615a:	4606      	mov	r6, r0
 800615c:	f004 fce4 	bl	800ab28 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006160:	6860      	ldr	r0, [r4, #4]
 8006162:	6803      	ldr	r3, [r0, #0]
 8006164:	2100      	movs	r1, #0
 8006166:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006168:	4798      	blx	r3
 800616a:	4631      	mov	r1, r6
 800616c:	4604      	mov	r4, r0
 800616e:	f004 fcb5 	bl	800aadc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8006172:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006176:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800617a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800617e:	b1dc      	cbz	r4, 80061b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x120>
 8006180:	1d23      	adds	r3, r4, #4
 8006182:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006186:	6833      	ldr	r3, [r6, #0]
 8006188:	f8c4 a008 	str.w	sl, [r4, #8]
 800618c:	4630      	mov	r0, r6
 800618e:	68db      	ldr	r3, [r3, #12]
 8006190:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006192:	4798      	blx	r3
    newPresenter->activate();
 8006194:	6823      	ldr	r3, [r4, #0]
 8006196:	4620      	mov	r0, r4
 8006198:	681b      	ldr	r3, [r3, #0]
 800619a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800619c:	4629      	mov	r1, r5
 800619e:	4630      	mov	r0, r6
 80061a0:	f014 fa2a 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80061a4:	682b      	ldr	r3, [r5, #0]
 80061a6:	4628      	mov	r0, r5
 80061a8:	691b      	ldr	r3, [r3, #16]
 80061aa:	4798      	blx	r3
    newTransition->invalidate();
 80061ac:	682b      	ldr	r3, [r5, #0]
 80061ae:	4628      	mov	r0, r5
 80061b0:	695b      	ldr	r3, [r3, #20]
}
 80061b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80061b6:	4718      	bx	r3
    model->bind(newPresenter);
 80061b8:	4623      	mov	r3, r4
 80061ba:	e7e2      	b.n	8006182 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xea>
 80061bc:	0802f670 	.word	0x0802f670
 80061c0:	080302d3 	.word	0x080302d3
 80061c4:	0802f80c 	.word	0x0802f80c
 80061c8:	0802f853 	.word	0x0802f853
 80061cc:	0802f8f6 	.word	0x0802f8f6
 80061d0:	20013884 	.word	0x20013884
 80061d4:	20013880 	.word	0x20013880

080061d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80061d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80061dc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80061e0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80061e2:	68a0      	ldr	r0, [r4, #8]
 80061e4:	6803      	ldr	r3, [r0, #0]
 80061e6:	6a1b      	ldr	r3, [r3, #32]
 80061e8:	4798      	blx	r3
 80061ea:	f241 4377 	movw	r3, #5239	; 0x1477
 80061ee:	4298      	cmp	r0, r3
 80061f0:	d805      	bhi.n	80061fe <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80061f2:	4b42      	ldr	r3, [pc, #264]	; (80062fc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80061f4:	4a42      	ldr	r2, [pc, #264]	; (8006300 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80061f6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80061f8:	4842      	ldr	r0, [pc, #264]	; (8006304 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80061fa:	f027 fba1 	bl	802d940 <__assert_func>
 80061fe:	6860      	ldr	r0, [r4, #4]
 8006200:	6803      	ldr	r3, [r0, #0]
 8006202:	6a1b      	ldr	r3, [r3, #32]
 8006204:	4798      	blx	r3
 8006206:	280f      	cmp	r0, #15
 8006208:	d803      	bhi.n	8006212 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800620a:	4b3f      	ldr	r3, [pc, #252]	; (8006308 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 800620c:	4a3c      	ldr	r2, [pc, #240]	; (8006300 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800620e:	21a4      	movs	r1, #164	; 0xa4
 8006210:	e7f2      	b.n	80061f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006212:	68e0      	ldr	r0, [r4, #12]
 8006214:	6803      	ldr	r3, [r0, #0]
 8006216:	6a1b      	ldr	r3, [r3, #32]
 8006218:	4798      	blx	r3
 800621a:	2837      	cmp	r0, #55	; 0x37
 800621c:	d803      	bhi.n	8006226 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 800621e:	4b3b      	ldr	r3, [pc, #236]	; (800630c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8006220:	4a37      	ldr	r2, [pc, #220]	; (8006300 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8006222:	21a5      	movs	r1, #165	; 0xa5
 8006224:	e7e8      	b.n	80061f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006226:	f012 fbbb 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800622a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006310 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 800622e:	3004      	adds	r0, #4
 8006230:	f012 fc1c 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006234:	f8d9 0000 	ldr.w	r0, [r9]
 8006238:	b110      	cbz	r0, 8006240 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800623a:	6803      	ldr	r3, [r0, #0]
 800623c:	68db      	ldr	r3, [r3, #12]
 800623e:	4798      	blx	r3
    if (*currentTrans)
 8006240:	f8d9 0000 	ldr.w	r0, [r9]
 8006244:	b110      	cbz	r0, 800624c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006246:	6803      	ldr	r3, [r0, #0]
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	4798      	blx	r3
    if (*currentScreen)
 800624c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006314 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8006250:	f8d8 0000 	ldr.w	r0, [r8]
 8006254:	b110      	cbz	r0, 800625c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006256:	6803      	ldr	r3, [r0, #0]
 8006258:	695b      	ldr	r3, [r3, #20]
 800625a:	4798      	blx	r3
    if (*currentPresenter)
 800625c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006260:	b110      	cbz	r0, 8006268 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006262:	6803      	ldr	r3, [r0, #0]
 8006264:	685b      	ldr	r3, [r3, #4]
 8006266:	4798      	blx	r3
    if (*currentScreen)
 8006268:	f8d8 0000 	ldr.w	r0, [r8]
 800626c:	b110      	cbz	r0, 8006274 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800626e:	6803      	ldr	r3, [r0, #0]
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	4798      	blx	r3
    if (*currentPresenter)
 8006274:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006278:	b110      	cbz	r0, 8006280 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800627a:	6803      	ldr	r3, [r0, #0]
 800627c:	689b      	ldr	r3, [r3, #8]
 800627e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006280:	68e0      	ldr	r0, [r4, #12]
 8006282:	2100      	movs	r1, #0
 8006284:	f7ff fc56 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006288:	2114      	movs	r1, #20
 800628a:	4605      	mov	r5, r0
 800628c:	f7ff fc56 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006290:	68a0      	ldr	r0, [r4, #8]
 8006292:	6803      	ldr	r3, [r0, #0]
 8006294:	2100      	movs	r1, #0
 8006296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006298:	4798      	blx	r3
 800629a:	4606      	mov	r6, r0
 800629c:	f004 fe0a 	bl	800aeb4 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80062a0:	6860      	ldr	r0, [r4, #4]
 80062a2:	6803      	ldr	r3, [r0, #0]
 80062a4:	2100      	movs	r1, #0
 80062a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80062a8:	4798      	blx	r3
 80062aa:	4631      	mov	r1, r6
 80062ac:	4604      	mov	r4, r0
 80062ae:	f004 fddb 	bl	800ae68 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80062b2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80062b6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80062ba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80062be:	b1dc      	cbz	r4, 80062f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80062c0:	1d23      	adds	r3, r4, #4
 80062c2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80062c6:	6833      	ldr	r3, [r6, #0]
 80062c8:	f8c4 a008 	str.w	sl, [r4, #8]
 80062cc:	4630      	mov	r0, r6
 80062ce:	68db      	ldr	r3, [r3, #12]
 80062d0:	63f4      	str	r4, [r6, #60]	; 0x3c
 80062d2:	4798      	blx	r3
    newPresenter->activate();
 80062d4:	6823      	ldr	r3, [r4, #0]
 80062d6:	4620      	mov	r0, r4
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80062dc:	4629      	mov	r1, r5
 80062de:	4630      	mov	r0, r6
 80062e0:	f014 f98a 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80062e4:	682b      	ldr	r3, [r5, #0]
 80062e6:	4628      	mov	r0, r5
 80062e8:	691b      	ldr	r3, [r3, #16]
 80062ea:	4798      	blx	r3
    newTransition->invalidate();
 80062ec:	682b      	ldr	r3, [r5, #0]
 80062ee:	4628      	mov	r0, r5
 80062f0:	695b      	ldr	r3, [r3, #20]
}
 80062f2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062f6:	4718      	bx	r3
    model->bind(newPresenter);
 80062f8:	4623      	mov	r3, r4
 80062fa:	e7e2      	b.n	80062c2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 80062fc:	0802f670 	.word	0x0802f670
 8006300:	08030403 	.word	0x08030403
 8006304:	0802f80c 	.word	0x0802f80c
 8006308:	0802f853 	.word	0x0802f853
 800630c:	0802f8f6 	.word	0x0802f8f6
 8006310:	20013884 	.word	0x20013884
 8006314:	20013880 	.word	0x20013880

08006318 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8006318:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800631c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006320:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006322:	68a0      	ldr	r0, [r4, #8]
 8006324:	6803      	ldr	r3, [r0, #0]
 8006326:	6a1b      	ldr	r3, [r3, #32]
 8006328:	4798      	blx	r3
 800632a:	f241 437b 	movw	r3, #5243	; 0x147b
 800632e:	4298      	cmp	r0, r3
 8006330:	d805      	bhi.n	800633e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8006332:	4b42      	ldr	r3, [pc, #264]	; (800643c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8006334:	4a42      	ldr	r2, [pc, #264]	; (8006440 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006336:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006338:	4842      	ldr	r0, [pc, #264]	; (8006444 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 800633a:	f027 fb01 	bl	802d940 <__assert_func>
 800633e:	6860      	ldr	r0, [r4, #4]
 8006340:	6803      	ldr	r3, [r0, #0]
 8006342:	6a1b      	ldr	r3, [r3, #32]
 8006344:	4798      	blx	r3
 8006346:	280f      	cmp	r0, #15
 8006348:	d803      	bhi.n	8006352 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 800634a:	4b3f      	ldr	r3, [pc, #252]	; (8006448 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 800634c:	4a3c      	ldr	r2, [pc, #240]	; (8006440 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800634e:	21a4      	movs	r1, #164	; 0xa4
 8006350:	e7f2      	b.n	8006338 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006352:	68e0      	ldr	r0, [r4, #12]
 8006354:	6803      	ldr	r3, [r0, #0]
 8006356:	6a1b      	ldr	r3, [r3, #32]
 8006358:	4798      	blx	r3
 800635a:	2837      	cmp	r0, #55	; 0x37
 800635c:	d803      	bhi.n	8006366 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 800635e:	4b3b      	ldr	r3, [pc, #236]	; (800644c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8006360:	4a37      	ldr	r2, [pc, #220]	; (8006440 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8006362:	21a5      	movs	r1, #165	; 0xa5
 8006364:	e7e8      	b.n	8006338 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8006366:	f012 fb1b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800636a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006450 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 800636e:	3004      	adds	r0, #4
 8006370:	f012 fb7c 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8006374:	f8d9 0000 	ldr.w	r0, [r9]
 8006378:	b110      	cbz	r0, 8006380 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800637a:	6803      	ldr	r3, [r0, #0]
 800637c:	68db      	ldr	r3, [r3, #12]
 800637e:	4798      	blx	r3
    if (*currentTrans)
 8006380:	f8d9 0000 	ldr.w	r0, [r9]
 8006384:	b110      	cbz	r0, 800638c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006386:	6803      	ldr	r3, [r0, #0]
 8006388:	681b      	ldr	r3, [r3, #0]
 800638a:	4798      	blx	r3
    if (*currentScreen)
 800638c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006454 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8006390:	f8d8 0000 	ldr.w	r0, [r8]
 8006394:	b110      	cbz	r0, 800639c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006396:	6803      	ldr	r3, [r0, #0]
 8006398:	695b      	ldr	r3, [r3, #20]
 800639a:	4798      	blx	r3
    if (*currentPresenter)
 800639c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063a0:	b110      	cbz	r0, 80063a8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80063a2:	6803      	ldr	r3, [r0, #0]
 80063a4:	685b      	ldr	r3, [r3, #4]
 80063a6:	4798      	blx	r3
    if (*currentScreen)
 80063a8:	f8d8 0000 	ldr.w	r0, [r8]
 80063ac:	b110      	cbz	r0, 80063b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80063ae:	6803      	ldr	r3, [r0, #0]
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	4798      	blx	r3
    if (*currentPresenter)
 80063b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80063b8:	b110      	cbz	r0, 80063c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80063ba:	6803      	ldr	r3, [r0, #0]
 80063bc:	689b      	ldr	r3, [r3, #8]
 80063be:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80063c0:	68e0      	ldr	r0, [r4, #12]
 80063c2:	2100      	movs	r1, #0
 80063c4:	f7ff fbb6 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80063c8:	2114      	movs	r1, #20
 80063ca:	4605      	mov	r5, r0
 80063cc:	f7ff fbb6 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80063d0:	68a0      	ldr	r0, [r4, #8]
 80063d2:	6803      	ldr	r3, [r0, #0]
 80063d4:	2100      	movs	r1, #0
 80063d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063d8:	4798      	blx	r3
 80063da:	4606      	mov	r6, r0
 80063dc:	f004 fce2 	bl	800ada4 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80063e0:	6860      	ldr	r0, [r4, #4]
 80063e2:	6803      	ldr	r3, [r0, #0]
 80063e4:	2100      	movs	r1, #0
 80063e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80063e8:	4798      	blx	r3
 80063ea:	4631      	mov	r1, r6
 80063ec:	4604      	mov	r4, r0
 80063ee:	f004 fcb3 	bl	800ad58 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 80063f2:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80063f6:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80063fa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80063fe:	b1dc      	cbz	r4, 8006438 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8006400:	1d23      	adds	r3, r4, #4
 8006402:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006406:	6833      	ldr	r3, [r6, #0]
 8006408:	f8c4 a008 	str.w	sl, [r4, #8]
 800640c:	4630      	mov	r0, r6
 800640e:	68db      	ldr	r3, [r3, #12]
 8006410:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006412:	4798      	blx	r3
    newPresenter->activate();
 8006414:	6823      	ldr	r3, [r4, #0]
 8006416:	4620      	mov	r0, r4
 8006418:	681b      	ldr	r3, [r3, #0]
 800641a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800641c:	4629      	mov	r1, r5
 800641e:	4630      	mov	r0, r6
 8006420:	f014 f8ea 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006424:	682b      	ldr	r3, [r5, #0]
 8006426:	4628      	mov	r0, r5
 8006428:	691b      	ldr	r3, [r3, #16]
 800642a:	4798      	blx	r3
    newTransition->invalidate();
 800642c:	682b      	ldr	r3, [r5, #0]
 800642e:	4628      	mov	r0, r5
 8006430:	695b      	ldr	r3, [r3, #20]
}
 8006432:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006436:	4718      	bx	r3
    model->bind(newPresenter);
 8006438:	4623      	mov	r3, r4
 800643a:	e7e2      	b.n	8006402 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 800643c:	0802f670 	.word	0x0802f670
 8006440:	08030545 	.word	0x08030545
 8006444:	0802f80c 	.word	0x0802f80c
 8006448:	0802f853 	.word	0x0802f853
 800644c:	0802f8f6 	.word	0x0802f8f6
 8006450:	20013884 	.word	0x20013884
 8006454:	20013880 	.word	0x20013880

08006458 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8006458:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800645c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8006460:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006462:	68a0      	ldr	r0, [r4, #8]
 8006464:	6803      	ldr	r3, [r0, #0]
 8006466:	6a1b      	ldr	r3, [r3, #32]
 8006468:	4798      	blx	r3
 800646a:	f241 13c3 	movw	r3, #4547	; 0x11c3
 800646e:	4298      	cmp	r0, r3
 8006470:	d805      	bhi.n	800647e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x26>
 8006472:	4b42      	ldr	r3, [pc, #264]	; (800657c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8006474:	4a42      	ldr	r2, [pc, #264]	; (8006580 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8006476:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006478:	4842      	ldr	r0, [pc, #264]	; (8006584 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 800647a:	f027 fa61 	bl	802d940 <__assert_func>
 800647e:	6860      	ldr	r0, [r4, #4]
 8006480:	6803      	ldr	r3, [r0, #0]
 8006482:	6a1b      	ldr	r3, [r3, #32]
 8006484:	4798      	blx	r3
 8006486:	280f      	cmp	r0, #15
 8006488:	d803      	bhi.n	8006492 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x3a>
 800648a:	4b3f      	ldr	r3, [pc, #252]	; (8006588 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 800648c:	4a3c      	ldr	r2, [pc, #240]	; (8006580 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800648e:	21a4      	movs	r1, #164	; 0xa4
 8006490:	e7f2      	b.n	8006478 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006492:	68e0      	ldr	r0, [r4, #12]
 8006494:	6803      	ldr	r3, [r0, #0]
 8006496:	6a1b      	ldr	r3, [r3, #32]
 8006498:	4798      	blx	r3
 800649a:	2837      	cmp	r0, #55	; 0x37
 800649c:	d803      	bhi.n	80064a6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4e>
 800649e:	4b3b      	ldr	r3, [pc, #236]	; (800658c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80064a0:	4a37      	ldr	r2, [pc, #220]	; (8006580 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80064a2:	21a5      	movs	r1, #165	; 0xa5
 80064a4:	e7e8      	b.n	8006478 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80064a6:	f012 fa7b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80064aa:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8006590 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80064ae:	3004      	adds	r0, #4
 80064b0:	f012 fadc 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80064b4:	f8d9 0000 	ldr.w	r0, [r9]
 80064b8:	b110      	cbz	r0, 80064c0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80064ba:	6803      	ldr	r3, [r0, #0]
 80064bc:	68db      	ldr	r3, [r3, #12]
 80064be:	4798      	blx	r3
    if (*currentTrans)
 80064c0:	f8d9 0000 	ldr.w	r0, [r9]
 80064c4:	b110      	cbz	r0, 80064cc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80064c6:	6803      	ldr	r3, [r0, #0]
 80064c8:	681b      	ldr	r3, [r3, #0]
 80064ca:	4798      	blx	r3
    if (*currentScreen)
 80064cc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8006594 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80064d0:	f8d8 0000 	ldr.w	r0, [r8]
 80064d4:	b110      	cbz	r0, 80064dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80064d6:	6803      	ldr	r3, [r0, #0]
 80064d8:	695b      	ldr	r3, [r3, #20]
 80064da:	4798      	blx	r3
    if (*currentPresenter)
 80064dc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064e0:	b110      	cbz	r0, 80064e8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80064e2:	6803      	ldr	r3, [r0, #0]
 80064e4:	685b      	ldr	r3, [r3, #4]
 80064e6:	4798      	blx	r3
    if (*currentScreen)
 80064e8:	f8d8 0000 	ldr.w	r0, [r8]
 80064ec:	b110      	cbz	r0, 80064f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80064ee:	6803      	ldr	r3, [r0, #0]
 80064f0:	681b      	ldr	r3, [r3, #0]
 80064f2:	4798      	blx	r3
    if (*currentPresenter)
 80064f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80064f8:	b110      	cbz	r0, 8006500 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80064fa:	6803      	ldr	r3, [r0, #0]
 80064fc:	689b      	ldr	r3, [r3, #8]
 80064fe:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006500:	68e0      	ldr	r0, [r4, #12]
 8006502:	2100      	movs	r1, #0
 8006504:	f7ff fb16 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006508:	2114      	movs	r1, #20
 800650a:	4605      	mov	r5, r0
 800650c:	f7ff fb16 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006510:	68a0      	ldr	r0, [r4, #8]
 8006512:	6803      	ldr	r3, [r0, #0]
 8006514:	2100      	movs	r1, #0
 8006516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006518:	4798      	blx	r3
 800651a:	4606      	mov	r6, r0
 800651c:	f004 fbe8 	bl	800acf0 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006520:	6860      	ldr	r0, [r4, #4]
 8006522:	6803      	ldr	r3, [r0, #0]
 8006524:	2100      	movs	r1, #0
 8006526:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006528:	4798      	blx	r3
 800652a:	4631      	mov	r1, r6
 800652c:	4604      	mov	r4, r0
 800652e:	f004 fbb9 	bl	800aca4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8006532:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006536:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800653a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800653e:	b1dc      	cbz	r4, 8006578 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x120>
 8006540:	1d23      	adds	r3, r4, #4
 8006542:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006546:	6833      	ldr	r3, [r6, #0]
 8006548:	f8c4 a008 	str.w	sl, [r4, #8]
 800654c:	4630      	mov	r0, r6
 800654e:	68db      	ldr	r3, [r3, #12]
 8006550:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006552:	4798      	blx	r3
    newPresenter->activate();
 8006554:	6823      	ldr	r3, [r4, #0]
 8006556:	4620      	mov	r0, r4
 8006558:	681b      	ldr	r3, [r3, #0]
 800655a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800655c:	4629      	mov	r1, r5
 800655e:	4630      	mov	r0, r6
 8006560:	f014 f84a 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006564:	682b      	ldr	r3, [r5, #0]
 8006566:	4628      	mov	r0, r5
 8006568:	691b      	ldr	r3, [r3, #16]
 800656a:	4798      	blx	r3
    newTransition->invalidate();
 800656c:	682b      	ldr	r3, [r5, #0]
 800656e:	4628      	mov	r0, r5
 8006570:	695b      	ldr	r3, [r3, #20]
}
 8006572:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006576:	4718      	bx	r3
    model->bind(newPresenter);
 8006578:	4623      	mov	r3, r4
 800657a:	e7e2      	b.n	8006542 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xea>
 800657c:	0802f670 	.word	0x0802f670
 8006580:	08030687 	.word	0x08030687
 8006584:	0802f80c 	.word	0x0802f80c
 8006588:	0802f853 	.word	0x0802f853
 800658c:	0802f8f6 	.word	0x0802f8f6
 8006590:	20013884 	.word	0x20013884
 8006594:	20013880 	.word	0x20013880

08006598 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8006598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800659c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80065a0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80065a2:	68a0      	ldr	r0, [r4, #8]
 80065a4:	6803      	ldr	r3, [r0, #0]
 80065a6:	6a1b      	ldr	r3, [r3, #32]
 80065a8:	4798      	blx	r3
 80065aa:	f241 13c3 	movw	r3, #4547	; 0x11c3
 80065ae:	4298      	cmp	r0, r3
 80065b0:	d805      	bhi.n	80065be <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x26>
 80065b2:	4b42      	ldr	r3, [pc, #264]	; (80066bc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80065b4:	4a42      	ldr	r2, [pc, #264]	; (80066c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065b6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80065b8:	4842      	ldr	r0, [pc, #264]	; (80066c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80065ba:	f027 f9c1 	bl	802d940 <__assert_func>
 80065be:	6860      	ldr	r0, [r4, #4]
 80065c0:	6803      	ldr	r3, [r0, #0]
 80065c2:	6a1b      	ldr	r3, [r3, #32]
 80065c4:	4798      	blx	r3
 80065c6:	280f      	cmp	r0, #15
 80065c8:	d803      	bhi.n	80065d2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x3a>
 80065ca:	4b3f      	ldr	r3, [pc, #252]	; (80066c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 80065cc:	4a3c      	ldr	r2, [pc, #240]	; (80066c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065ce:	21a4      	movs	r1, #164	; 0xa4
 80065d0:	e7f2      	b.n	80065b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80065d2:	68e0      	ldr	r0, [r4, #12]
 80065d4:	6803      	ldr	r3, [r0, #0]
 80065d6:	6a1b      	ldr	r3, [r3, #32]
 80065d8:	4798      	blx	r3
 80065da:	2837      	cmp	r0, #55	; 0x37
 80065dc:	d803      	bhi.n	80065e6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4e>
 80065de:	4b3b      	ldr	r3, [pc, #236]	; (80066cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 80065e0:	4a37      	ldr	r2, [pc, #220]	; (80066c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80065e2:	21a5      	movs	r1, #165	; 0xa5
 80065e4:	e7e8      	b.n	80065b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80065e6:	f012 f9db 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80065ea:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80066d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 80065ee:	3004      	adds	r0, #4
 80065f0:	f012 fa3c 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80065f4:	f8d9 0000 	ldr.w	r0, [r9]
 80065f8:	b110      	cbz	r0, 8006600 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80065fa:	6803      	ldr	r3, [r0, #0]
 80065fc:	68db      	ldr	r3, [r3, #12]
 80065fe:	4798      	blx	r3
    if (*currentTrans)
 8006600:	f8d9 0000 	ldr.w	r0, [r9]
 8006604:	b110      	cbz	r0, 800660c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8006606:	6803      	ldr	r3, [r0, #0]
 8006608:	681b      	ldr	r3, [r3, #0]
 800660a:	4798      	blx	r3
    if (*currentScreen)
 800660c:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80066d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8006610:	f8d8 0000 	ldr.w	r0, [r8]
 8006614:	b110      	cbz	r0, 800661c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8006616:	6803      	ldr	r3, [r0, #0]
 8006618:	695b      	ldr	r3, [r3, #20]
 800661a:	4798      	blx	r3
    if (*currentPresenter)
 800661c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006620:	b110      	cbz	r0, 8006628 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8006622:	6803      	ldr	r3, [r0, #0]
 8006624:	685b      	ldr	r3, [r3, #4]
 8006626:	4798      	blx	r3
    if (*currentScreen)
 8006628:	f8d8 0000 	ldr.w	r0, [r8]
 800662c:	b110      	cbz	r0, 8006634 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800662e:	6803      	ldr	r3, [r0, #0]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	4798      	blx	r3
    if (*currentPresenter)
 8006634:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8006638:	b110      	cbz	r0, 8006640 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800663a:	6803      	ldr	r3, [r0, #0]
 800663c:	689b      	ldr	r3, [r3, #8]
 800663e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8006640:	68e0      	ldr	r0, [r4, #12]
 8006642:	2100      	movs	r1, #0
 8006644:	f7ff fa76 	bl	8005b34 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8006648:	2114      	movs	r1, #20
 800664a:	4605      	mov	r5, r0
 800664c:	f7ff fa76 	bl	8005b3c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8006650:	68a0      	ldr	r0, [r4, #8]
 8006652:	6803      	ldr	r3, [r0, #0]
 8006654:	2100      	movs	r1, #0
 8006656:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006658:	4798      	blx	r3
 800665a:	4606      	mov	r6, r0
 800665c:	f004 fa04 	bl	800aa68 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8006660:	6860      	ldr	r0, [r4, #4]
 8006662:	6803      	ldr	r3, [r0, #0]
 8006664:	2100      	movs	r1, #0
 8006666:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006668:	4798      	blx	r3
 800666a:	4631      	mov	r1, r6
 800666c:	4604      	mov	r4, r0
 800666e:	f004 f9d5 	bl	800aa1c <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8006672:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8006676:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800667a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800667e:	b1dc      	cbz	r4, 80066b8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x120>
 8006680:	1d23      	adds	r3, r4, #4
 8006682:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8006686:	6833      	ldr	r3, [r6, #0]
 8006688:	f8c4 a008 	str.w	sl, [r4, #8]
 800668c:	4630      	mov	r0, r6
 800668e:	68db      	ldr	r3, [r3, #12]
 8006690:	63f4      	str	r4, [r6, #60]	; 0x3c
 8006692:	4798      	blx	r3
    newPresenter->activate();
 8006694:	6823      	ldr	r3, [r4, #0]
 8006696:	4620      	mov	r0, r4
 8006698:	681b      	ldr	r3, [r3, #0]
 800669a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800669c:	4629      	mov	r1, r5
 800669e:	4630      	mov	r0, r6
 80066a0:	f013 ffaa 	bl	801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80066a4:	682b      	ldr	r3, [r5, #0]
 80066a6:	4628      	mov	r0, r5
 80066a8:	691b      	ldr	r3, [r3, #16]
 80066aa:	4798      	blx	r3
    newTransition->invalidate();
 80066ac:	682b      	ldr	r3, [r5, #0]
 80066ae:	4628      	mov	r0, r5
 80066b0:	695b      	ldr	r3, [r3, #20]
}
 80066b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80066b6:	4718      	bx	r3
    model->bind(newPresenter);
 80066b8:	4623      	mov	r3, r4
 80066ba:	e7e2      	b.n	8006682 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xea>
 80066bc:	0802f670 	.word	0x0802f670
 80066c0:	080307b3 	.word	0x080307b3
 80066c4:	0802f80c 	.word	0x0802f80c
 80066c8:	0802f853 	.word	0x0802f853
 80066cc:	0802f8f6 	.word	0x0802f8f6
 80066d0:	20013884 	.word	0x20013884
 80066d4:	20013880 	.word	0x20013880

080066d8 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80066d8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80066da:	4770      	bx	lr

080066dc <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80066dc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80066de:	4770      	bx	lr

080066e0 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80066e0:	4770      	bx	lr

080066e2 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80066e2:	888b      	ldrh	r3, [r1, #4]
 80066e4:	69c0      	ldr	r0, [r0, #28]
 80066e6:	680a      	ldr	r2, [r1, #0]
 80066e8:	0adb      	lsrs	r3, r3, #11
 80066ea:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80066ee:	4410      	add	r0, r2
 80066f0:	4770      	bx	lr

080066f2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80066f2:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80066f4:	b1c2      	cbz	r2, 8006728 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80066f6:	7b13      	ldrb	r3, [r2, #12]
 80066f8:	b1b3      	cbz	r3, 8006728 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80066fa:	7b54      	ldrb	r4, [r2, #13]
 80066fc:	7ad2      	ldrb	r2, [r2, #11]
 80066fe:	0224      	lsls	r4, r4, #8
 8006700:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8006704:	4314      	orrs	r4, r2
 8006706:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8006708:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800670a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800670e:	8813      	ldrh	r3, [r2, #0]
 8006710:	428b      	cmp	r3, r1
 8006712:	d102      	bne.n	800671a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8006714:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8006718:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800671a:	d805      	bhi.n	8006728 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800671c:	3801      	subs	r0, #1
 800671e:	b280      	uxth	r0, r0
 8006720:	3204      	adds	r2, #4
 8006722:	2800      	cmp	r0, #0
 8006724:	d1f3      	bne.n	800670e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8006726:	e7f7      	b.n	8006718 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8006728:	2000      	movs	r0, #0
 800672a:	e7f5      	b.n	8006718 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

0800672c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800672c:	b510      	push	{r4, lr}
 800672e:	212c      	movs	r1, #44	; 0x2c
 8006730:	4604      	mov	r4, r0
 8006732:	f026 fa1e 	bl	802cb72 <_ZdlPvj>
 8006736:	4620      	mov	r0, r4
 8006738:	bd10      	pop	{r4, pc}
	...

0800673c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800673c:	b530      	push	{r4, r5, lr}
 800673e:	b08b      	sub	sp, #44	; 0x2c
 8006740:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8006742:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8006746:	9508      	str	r5, [sp, #32]
 8006748:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 800674c:	9507      	str	r5, [sp, #28]
 800674e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8006752:	9506      	str	r5, [sp, #24]
 8006754:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8006758:	9505      	str	r5, [sp, #20]
 800675a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800675e:	9504      	str	r5, [sp, #16]
 8006760:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8006764:	9503      	str	r5, [sp, #12]
 8006766:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800676a:	9502      	str	r5, [sp, #8]
 800676c:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8006770:	9501      	str	r5, [sp, #4]
 8006772:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8006776:	9500      	str	r5, [sp, #0]
 8006778:	f013 faa8 	bl	8019ccc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800677c:	4b06      	ldr	r3, [pc, #24]	; (8006798 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800677e:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8006780:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006782:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8006784:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006786:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8006788:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800678a:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 800678c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800678e:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8006790:	4620      	mov	r0, r4
 8006792:	b00b      	add	sp, #44	; 0x2c
 8006794:	bd30      	pop	{r4, r5, pc}
 8006796:	bf00      	nop
 8006798:	08030a1c 	.word	0x08030a1c

0800679c <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 800679c:	4770      	bx	lr

0800679e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800679e:	4770      	bx	lr

080067a0 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80067a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067a2:	68c2      	ldr	r2, [r0, #12]
 80067a4:	6844      	ldr	r4, [r0, #4]
 80067a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80067a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80067aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80067ae:	07d2      	lsls	r2, r2, #31
 80067b0:	bf48      	it	mi
 80067b2:	5962      	ldrmi	r2, [r4, r5]
 80067b4:	689b      	ldr	r3, [r3, #8]
    }
 80067b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80067b8:	bf48      	it	mi
 80067ba:	58d3      	ldrmi	r3, [r2, r3]
 80067bc:	4718      	bx	r3

080067be <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80067be:	6843      	ldr	r3, [r0, #4]
 80067c0:	b12b      	cbz	r3, 80067ce <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80067c2:	6883      	ldr	r3, [r0, #8]
 80067c4:	b92b      	cbnz	r3, 80067d2 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80067c6:	68c0      	ldr	r0, [r0, #12]
 80067c8:	f000 0001 	and.w	r0, r0, #1
 80067cc:	4770      	bx	lr
 80067ce:	4618      	mov	r0, r3
 80067d0:	4770      	bx	lr
 80067d2:	2001      	movs	r0, #1
    }
 80067d4:	4770      	bx	lr

080067d6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80067d6:	b510      	push	{r4, lr}
 80067d8:	2110      	movs	r1, #16
 80067da:	4604      	mov	r4, r0
 80067dc:	f026 f9c9 	bl	802cb72 <_ZdlPvj>
 80067e0:	4620      	mov	r0, r4
 80067e2:	bd10      	pop	{r4, pc}

080067e4 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067e4:	b510      	push	{r4, lr}
 80067e6:	4b03      	ldr	r3, [pc, #12]	; (80067f4 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80067e8:	6003      	str	r3, [r0, #0]
 80067ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80067ec:	f010 fbd6 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80067f0:	4620      	mov	r0, r4
 80067f2:	bd10      	pop	{r4, pc}
 80067f4:	08030a94 	.word	0x08030a94

080067f8 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80067f8:	b507      	push	{r0, r1, r2, lr}
 80067fa:	4b07      	ldr	r3, [pc, #28]	; (8006818 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80067fc:	6003      	str	r3, [r0, #0]
 80067fe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006800:	f010 fbcc 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006804:	9801      	ldr	r0, [sp, #4]
 8006806:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800680a:	f026 f9b2 	bl	802cb72 <_ZdlPvj>
 800680e:	9801      	ldr	r0, [sp, #4]
 8006810:	b003      	add	sp, #12
 8006812:	f85d fb04 	ldr.w	pc, [sp], #4
 8006816:	bf00      	nop
 8006818:	08030a94 	.word	0x08030a94

0800681c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800681c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Measure)
 800681e:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 8006822:	4299      	cmp	r1, r3
{
 8006824:	4604      	mov	r4, r0
 8006826:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Measure)
 8006828:	d103      	bne.n	8006832 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800682a:	f012 f8b9 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Measure clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800682e:	f7fe feaf 	bl	8005590 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Calibration)
 8006832:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006836:	429d      	cmp	r5, r3
 8006838:	d103      	bne.n	8006842 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800683a:	f012 f8b1 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Calibration clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 800683e:	f7fe ff37 	bl	80056b0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_ProjectInfo)
 8006842:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006846:	429d      	cmp	r5, r3
 8006848:	d103      	bne.n	8006852 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 800684a:	f012 f8a9 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel_ProjectInfo clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 800684e:	f7fe ff3f 	bl	80056d0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon_turn_off)
 8006852:	f504 7467 	add.w	r4, r4, #924	; 0x39c
 8006856:	42a5      	cmp	r5, r4
 8006858:	d10a      	bne.n	8006870 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon_turn_off clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 800685a:	4806      	ldr	r0, [pc, #24]	; (8006874 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 800685c:	2200      	movs	r2, #0
 800685e:	2120      	movs	r1, #32
 8006860:	f005 fa84 	bl	800bd6c <HAL_GPIO_WritePin>
 8006864:	f012 f89c 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon_turn_off clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8006868:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 800686c:	f7fe bf40 	b.w	80056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8006870:	bd38      	pop	{r3, r4, r5, pc}
 8006872:	bf00      	nop
 8006874:	40021000 	.word	0x40021000

08006878 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8006878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800687c:	ed2d 8b08 	vpush	{d8-d11}
 8006880:	4604      	mov	r4, r0
 8006882:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8006884:	46a2      	mov	sl, r4
        : presenter(0)
 8006886:	2500      	movs	r5, #0
 8006888:	f013 fd0a 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 800688c:	4b75      	ldr	r3, [pc, #468]	; (8006a64 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
 800688e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006890:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006894:	2226      	movs	r2, #38	; 0x26
 8006896:	4629      	mov	r1, r5
 8006898:	4650      	mov	r0, sl
 800689a:	f027 fa56 	bl	802dd4a <memset>
 800689e:	4650      	mov	r0, sl
 80068a0:	f7fc ff16 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 80068a4:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 80068a8:	26ff      	movs	r6, #255	; 0xff
 80068aa:	4b6f      	ldr	r3, [pc, #444]	; (8006a68 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80068ac:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80068ae:	2226      	movs	r2, #38	; 0x26
 80068b0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80068b4:	4629      	mov	r1, r5
 80068b6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80068ba:	4648      	mov	r0, r9
        : color(col)
 80068bc:	66a5      	str	r5, [r4, #104]	; 0x68
 80068be:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80068c2:	f027 fa42 	bl	802dd4a <memset>
 80068c6:	4648      	mov	r0, r9
 80068c8:	f7fc ff02 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 80068cc:	4b67      	ldr	r3, [pc, #412]	; (8006a6c <_ZN17Main_MenuViewBaseC1Ev+0x1f4>)
 80068ce:	66e3      	str	r3, [r4, #108]	; 0x6c
 80068d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80068d4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80068d8:	a90e      	add	r1, sp, #56	; 0x38
 80068da:	4648      	mov	r0, r9
 80068dc:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80068e0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80068e4:	f00f fb5d 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80068e8:	4640      	mov	r0, r8
 80068ea:	f7fc ff55 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80068ee:	4b60      	ldr	r3, [pc, #384]	; (8006a70 <_ZN17Main_MenuViewBaseC1Ev+0x1f8>)
 80068f0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80068f4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80068f8:	4618      	mov	r0, r3
 80068fa:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80068fe:	ee09 3a90 	vmov	s19, r3
 8006902:	f00f fc85 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006906:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800690a:	4618      	mov	r0, r3
 800690c:	ee0a 3a10 	vmov	s20, r3
 8006910:	f00f fc7e 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006914:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006918:	4618      	mov	r0, r3
 800691a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800691e:	ee0a 3a90 	vmov	s21, r3
 8006922:	f00f fc75 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006926:	4638      	mov	r0, r7
 8006928:	f00e f82e 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800692c:	4e51      	ldr	r6, [pc, #324]	; (8006a74 <_ZN17Main_MenuViewBaseC1Ev+0x1fc>)
 800692e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006932:	4618      	mov	r0, r3
 8006934:	9304      	str	r3, [sp, #16]
 8006936:	f7fc fccf 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800693a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800693e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006942:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006946:	4618      	mov	r0, r3
 8006948:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 800694c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006950:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006954:	ee08 3a10 	vmov	s16, r3
 8006958:	f7fc ff1e 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 800695c:	4658      	mov	r0, fp
 800695e:	f00e f813 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8006962:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006966:	4618      	mov	r0, r3
 8006968:	9305      	str	r3, [sp, #20]
 800696a:	f7fc fcb5 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800696e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006972:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006976:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 800697a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 800697e:	4618      	mov	r0, r3
 8006980:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006984:	ee08 3a90 	vmov	s17, r3
 8006988:	f7fc ff06 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 800698c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006990:	4618      	mov	r0, r3
 8006992:	ee09 3a10 	vmov	s18, r3
 8006996:	f7fc feff 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 800699a:	f504 7367 	add.w	r3, r4, #924	; 0x39c
 800699e:	4618      	mov	r0, r3
 80069a0:	ee0b 3a10 	vmov	s22, r3
 80069a4:	f00f fad6 	bl	8015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80069a8:	4a33      	ldr	r2, [pc, #204]	; (8006a78 <_ZN17Main_MenuViewBaseC1Ev+0x200>)
 80069aa:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80069ae:	e9c3 247c 	strd	r2, r4, [r3, #496]	; 0x1f0
 80069b2:	4a32      	ldr	r2, [pc, #200]	; (8006a7c <_ZN17Main_MenuViewBaseC1Ev+0x204>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80069b4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80069b8:	e9c3 257e 	strd	r2, r5, [r3, #504]	; 0x1f8
 80069bc:	f504 7078 	add.w	r0, r4, #992	; 0x3e0
 80069c0:	f010 fae2 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80069c4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80069c8:	462a      	mov	r2, r5
 80069ca:	4650      	mov	r0, sl
 80069cc:	9300      	str	r3, [sp, #0]
 80069ce:	4629      	mov	r1, r5
 80069d0:	23f0      	movs	r3, #240	; 0xf0
 80069d2:	f7fc fe58 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069d6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80069d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80069dc:	66a3      	str	r3, [r4, #104]	; 0x68
 80069de:	4651      	mov	r1, sl
 80069e0:	4630      	mov	r0, r6
 80069e2:	f00b ff05 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80069e6:	462a      	mov	r2, r5
 80069e8:	4648      	mov	r0, r9
 80069ea:	4629      	mov	r1, r5
 80069ec:	f7fc fe3e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80069f0:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80069f2:	4648      	mov	r0, r9
 80069f4:	a90e      	add	r1, sp, #56	; 0x38
 80069f6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80069fa:	f00f fad2 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80069fe:	4649      	mov	r1, r9
 8006a00:	4630      	mov	r0, r6
 8006a02:	f00b fef5 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006a06:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006a0a:	2156      	movs	r1, #86	; 0x56
 8006a0c:	4640      	mov	r0, r8
 8006a0e:	f7fc fe2d 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006a12:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006a16:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006a1a:	f10d 0918 	add.w	r9, sp, #24
        color = newColor;
 8006a1e:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8006a22:	4648      	mov	r0, r9
 8006a24:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8006a28:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006a2c:	4641      	mov	r1, r8
 8006a2e:	4798      	blx	r3
 8006a30:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8006a34:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006a38:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a3c:	4b10      	ldr	r3, [pc, #64]	; (8006a80 <_ZN17Main_MenuViewBaseC1Ev+0x208>)
 8006a3e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8006a40:	f504 7976 	add.w	r9, r4, #984	; 0x3d8
 8006a44:	b92b      	cbnz	r3, 8006a52 <_ZN17Main_MenuViewBaseC1Ev+0x1da>
 8006a46:	4b0f      	ldr	r3, [pc, #60]	; (8006a84 <_ZN17Main_MenuViewBaseC1Ev+0x20c>)
 8006a48:	4a0f      	ldr	r2, [pc, #60]	; (8006a88 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a4a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a4c:	480f      	ldr	r0, [pc, #60]	; (8006a8c <_ZN17Main_MenuViewBaseC1Ev+0x214>)
 8006a4e:	f026 ff77 	bl	802d940 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006a52:	4b0f      	ldr	r3, [pc, #60]	; (8006a90 <_ZN17Main_MenuViewBaseC1Ev+0x218>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a54:	881b      	ldrh	r3, [r3, #0]
 8006a56:	2b54      	cmp	r3, #84	; 0x54
 8006a58:	d81e      	bhi.n	8006a98 <_ZN17Main_MenuViewBaseC1Ev+0x220>
 8006a5a:	4b0e      	ldr	r3, [pc, #56]	; (8006a94 <_ZN17Main_MenuViewBaseC1Ev+0x21c>)
 8006a5c:	4a0a      	ldr	r2, [pc, #40]	; (8006a88 <_ZN17Main_MenuViewBaseC1Ev+0x210>)
 8006a5e:	2161      	movs	r1, #97	; 0x61
 8006a60:	e7f4      	b.n	8006a4c <_ZN17Main_MenuViewBaseC1Ev+0x1d4>
 8006a62:	bf00      	nop
 8006a64:	08030a94 	.word	0x08030a94
 8006a68:	08031a48 	.word	0x08031a48
 8006a6c:	08031c94 	.word	0x08031c94
 8006a70:	0802f594 	.word	0x0802f594
 8006a74:	0803177c 	.word	0x0803177c
 8006a78:	08030a7c 	.word	0x08030a7c
 8006a7c:	0800681d 	.word	0x0800681d
 8006a80:	20013894 	.word	0x20013894
 8006a84:	0802f344 	.word	0x0802f344
 8006a88:	0802f449 	.word	0x0802f449
 8006a8c:	0802f3c1 	.word	0x0802f3c1
 8006a90:	20013898 	.word	0x20013898
 8006a94:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8006a98:	4bc1      	ldr	r3, [pc, #772]	; (8006da0 <_ZN17Main_MenuViewBaseC1Ev+0x528>)
 8006a9a:	2154      	movs	r1, #84	; 0x54
 8006a9c:	6818      	ldr	r0, [r3, #0]
 8006a9e:	f003 fdf3 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8006aa2:	4ac0      	ldr	r2, [pc, #768]	; (8006da4 <_ZN17Main_MenuViewBaseC1Ev+0x52c>)
 8006aa4:	4603      	mov	r3, r0
 8006aa6:	2104      	movs	r1, #4
 8006aa8:	4648      	mov	r0, r9
 8006aaa:	f015 f927 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8006aae:	4640      	mov	r0, r8
        wc1 = value;
 8006ab0:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8006ab4:	f00e fca4 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006ab8:	4bbb      	ldr	r3, [pc, #748]	; (8006da8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006aba:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8006abc:	4640      	mov	r0, r8
 8006abe:	2355      	movs	r3, #85	; 0x55
 8006ac0:	a90e      	add	r1, sp, #56	; 0x38
 8006ac2:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006ac6:	f00e fcbb 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aca:	4641      	mov	r1, r8
 8006acc:	4630      	mov	r0, r6
 8006ace:	f00b fe8f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_ProjectInfo.setXY(33, 240);
 8006ad2:	ee19 0a90 	vmov	r0, s19
 8006ad6:	22f0      	movs	r2, #240	; 0xf0
 8006ad8:	2121      	movs	r1, #33	; 0x21
 8006ada:	f7fc fdc7 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006ade:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel_ProjectInfo.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006ae2:	aa0e      	add	r2, sp, #56	; 0x38
 8006ae4:	f04f 0802 	mov.w	r8, #2
 8006ae8:	a90d      	add	r1, sp, #52	; 0x34
 8006aea:	ee19 0a90 	vmov	r0, s19
 8006aee:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006af2:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006af6:	f00f f85e 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006afa:	236f      	movs	r3, #111	; 0x6f
        updateTextPosition();
 8006afc:	ee19 0a90 	vmov	r0, s19
 8006b00:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 8006b04:	f7fc fdf6 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_ProjectInfo.setAction(buttonCallback);
 8006b08:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8006b0c:	3310      	adds	r3, #16
 8006b0e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8006b12:	ee19 1a90 	vmov	r1, s19
 8006b16:	4630      	mov	r0, r6
        colorPressed = col;
 8006b18:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8006b1c:	9303      	str	r3, [sp, #12]
 8006b1e:	f00b fe67 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Calibration.setXY(33, 170);
 8006b22:	ee1a 0a10 	vmov	r0, s20
 8006b26:	22aa      	movs	r2, #170	; 0xaa
 8006b28:	2121      	movs	r1, #33	; 0x21
 8006b2a:	f7fc fd9f 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Calibration.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b2e:	aa0e      	add	r2, sp, #56	; 0x38
 8006b30:	a90d      	add	r1, sp, #52	; 0x34
 8006b32:	ee1a 0a10 	vmov	r0, s20
 8006b36:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b3a:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b3e:	f00f f83a 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b42:	2370      	movs	r3, #112	; 0x70
        updateTextPosition();
 8006b44:	ee1a 0a10 	vmov	r0, s20
 8006b48:	f8a4 3164 	strh.w	r3, [r4, #356]	; 0x164
 8006b4c:	f7fc fdd2 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b50:	9b03      	ldr	r3, [sp, #12]
 8006b52:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006b56:	ee1a 1a10 	vmov	r1, s20
 8006b5a:	4630      	mov	r0, r6
        colorPressed = col;
 8006b5c:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8006b60:	f00b fe46 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Measure.setXY(33, 100);
 8006b64:	ee1a 0a90 	vmov	r0, s21
 8006b68:	2264      	movs	r2, #100	; 0x64
 8006b6a:	2121      	movs	r1, #33	; 0x21
 8006b6c:	f7fc fd7e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Measure.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b70:	aa0e      	add	r2, sp, #56	; 0x38
 8006b72:	a90d      	add	r1, sp, #52	; 0x34
 8006b74:	ee1a 0a90 	vmov	r0, s21
 8006b78:	f8ad 9034 	strh.w	r9, [sp, #52]	; 0x34
 8006b7c:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 8006b80:	f00f f819 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b84:	2371      	movs	r3, #113	; 0x71
        updateTextPosition();
 8006b86:	ee1a 0a90 	vmov	r0, s21
 8006b8a:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006b8e:	f7fc fdb1 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b92:	9b03      	ldr	r3, [sp, #12]
 8006b94:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006b98:	ee1a 1a90 	vmov	r1, s21
 8006b9c:	4630      	mov	r0, r6
        colorPressed = col;
 8006b9e:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8006ba2:	f00b fe25 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8006ba6:	230a      	movs	r3, #10
 8006ba8:	9300      	str	r3, [sp, #0]
 8006baa:	224b      	movs	r2, #75	; 0x4b
 8006bac:	23f0      	movs	r3, #240	; 0xf0
 8006bae:	4629      	mov	r1, r5
 8006bb0:	4638      	mov	r0, r7
 8006bb2:	f7fc fd68 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006bb6:	9b04      	ldr	r3, [sp, #16]
 8006bb8:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006bbc:	22a0      	movs	r2, #160	; 0xa0
 8006bbe:	4611      	mov	r1, r2
 8006bc0:	4638      	mov	r0, r7
 8006bc2:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006bc6:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8006bca:	f00d fff3 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006bce:	22a0      	movs	r2, #160	; 0xa0
 8006bd0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006bd4:	4638      	mov	r0, r7
 8006bd6:	f00d fff8 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006bda:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8006bde:	2b20      	cmp	r3, #32
 8006be0:	d005      	beq.n	8006bee <_ZN17Main_MenuViewBaseC1Ev+0x376>
        lineWidthQ5 = widthQ5;
 8006be2:	2320      	movs	r3, #32
 8006be4:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8006be8:	4638      	mov	r0, r7
 8006bea:	f00d feed 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006bee:	4638      	mov	r0, r7
 8006bf0:	2101      	movs	r1, #1
 8006bf2:	f00d fff5 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006bf6:	4639      	mov	r1, r7
 8006bf8:	4630      	mov	r0, r6
 8006bfa:	f00b fdf9 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006bfe:	f04f 35ff 	mov.w	r5, #4294967295
    textArea_menu.setXY(88, 60);
 8006c02:	223c      	movs	r2, #60	; 0x3c
 8006c04:	ee18 0a10 	vmov	r0, s16
 8006c08:	2158      	movs	r1, #88	; 0x58
        linespace = space;
 8006c0a:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006c0c:	f10d 0818 	add.w	r8, sp, #24
 8006c10:	f7fc fd2c 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006c14:	ee18 1a10 	vmov	r1, s16
 8006c18:	4640      	mov	r0, r8
        color = newColor;
 8006c1a:	f8c4 5270 	str.w	r5, [r4, #624]	; 0x270
        linespace = space;
 8006c1e:	f8a4 7274 	strh.w	r7, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8006c22:	f00e f973 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c26:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006c2a:	ee18 3a10 	vmov	r3, s16
 8006c2e:	333c      	adds	r3, #60	; 0x3c
 8006c30:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006c34:	4b5c      	ldr	r3, [pc, #368]	; (8006da8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006c36:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006c38:	ee18 0a10 	vmov	r0, s16
 8006c3c:	2344      	movs	r3, #68	; 0x44
 8006c3e:	a90e      	add	r1, sp, #56	; 0x38
 8006c40:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006c44:	f00e fbfc 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c48:	ee18 1a10 	vmov	r1, s16
 8006c4c:	4630      	mov	r0, r6
 8006c4e:	f00b fdcf 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c52:	230a      	movs	r3, #10
 8006c54:	9300      	str	r3, [sp, #0]
 8006c56:	2232      	movs	r2, #50	; 0x32
 8006c58:	23f0      	movs	r3, #240	; 0xf0
 8006c5a:	4639      	mov	r1, r7
 8006c5c:	4658      	mov	r0, fp
 8006c5e:	f7fc fd12 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c62:	9b05      	ldr	r3, [sp, #20]
 8006c64:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c68:	22a0      	movs	r2, #160	; 0xa0
 8006c6a:	4611      	mov	r1, r2
 8006c6c:	4658      	mov	r0, fp
 8006c6e:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006c72:	f8a4 5308 	strh.w	r5, [r4, #776]	; 0x308
 8006c76:	f00d ff9d 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c7a:	22a0      	movs	r2, #160	; 0xa0
 8006c7c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006c80:	4658      	mov	r0, fp
 8006c82:	f00d ffa2 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006c86:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8006c8a:	2b20      	cmp	r3, #32
 8006c8c:	d005      	beq.n	8006c9a <_ZN17Main_MenuViewBaseC1Ev+0x422>
        lineWidthQ5 = widthQ5;
 8006c8e:	2320      	movs	r3, #32
 8006c90:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8006c94:	4658      	mov	r0, fp
 8006c96:	f00d fe97 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006c9a:	4658      	mov	r0, fp
 8006c9c:	2101      	movs	r1, #1
 8006c9e:	f00d ff9f 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006ca2:	4659      	mov	r1, fp
 8006ca4:	4630      	mov	r0, r6
 8006ca6:	f00b fda3 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006caa:	2700      	movs	r7, #0
        boundingArea = calculateBoundingArea();
 8006cac:	ad06      	add	r5, sp, #24
    textArea_name.setXY(69, 35);
 8006cae:	ee18 0a90 	vmov	r0, s17
 8006cb2:	2223      	movs	r2, #35	; 0x23
        color = newColor;
 8006cb4:	f04f 39ff 	mov.w	r9, #4294967295
 8006cb8:	2145      	movs	r1, #69	; 0x45
 8006cba:	f7fc fcd7 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006cbe:	ee18 1a90 	vmov	r1, s17
 8006cc2:	4628      	mov	r0, r5
        color = newColor;
 8006cc4:	f8c4 933c 	str.w	r9, [r4, #828]	; 0x33c
        linespace = space;
 8006cc8:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8006ccc:	f00e f91e 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006cd0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006cd4:	ee18 3a90 	vmov	r3, s17
 8006cd8:	333c      	adds	r3, #60	; 0x3c
 8006cda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8006cde:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8006ce2:	4b31      	ldr	r3, [pc, #196]	; (8006da8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006ce4:	930e      	str	r3, [sp, #56]	; 0x38
 8006ce6:	ee18 0a90 	vmov	r0, s17
 8006cea:	236d      	movs	r3, #109	; 0x6d
 8006cec:	4641      	mov	r1, r8
 8006cee:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006cf2:	f00e fba5 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cf6:	ee18 1a90 	vmov	r1, s17
 8006cfa:	4630      	mov	r0, r6
 8006cfc:	f00b fd78 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8006d00:	ee19 0a10 	vmov	r0, s18
 8006d04:	220c      	movs	r2, #12
 8006d06:	2136      	movs	r1, #54	; 0x36
 8006d08:	f7fc fcb0 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006d0c:	ee19 1a10 	vmov	r1, s18
 8006d10:	4628      	mov	r0, r5
        color = newColor;
 8006d12:	f8c4 9384 	str.w	r9, [r4, #900]	; 0x384
        linespace = space;
 8006d16:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8006d1a:	f00e f8f7 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d1e:	ee19 2a10 	vmov	r2, s18
 8006d22:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8006d26:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006d2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d2e:	4b1e      	ldr	r3, [pc, #120]	; (8006da8 <_ZN17Main_MenuViewBaseC1Ev+0x530>)
 8006d30:	930e      	str	r3, [sp, #56]	; 0x38
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006d32:	ee19 0a10 	vmov	r0, s18
 8006d36:	236e      	movs	r3, #110	; 0x6e
 8006d38:	4641      	mov	r1, r8
 8006d3a:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 8006d3e:	f00e fb7f 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d42:	ee19 1a10 	vmov	r1, s18
 8006d46:	4630      	mov	r0, r6
 8006d48:	f00b fd52 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_turn_off.setXY(198, 5);
 8006d4c:	ee1b 0a10 	vmov	r0, s22
 8006d50:	2205      	movs	r2, #5
 8006d52:	21c6      	movs	r1, #198	; 0xc6
 8006d54:	f7fc fc8a 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006d58:	2301      	movs	r3, #1
 8006d5a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006d5e:	230a      	movs	r3, #10
    buttonWithIcon_turn_off.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8006d60:	ee1b 0a10 	vmov	r0, s22
 8006d64:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8006d68:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8006d6c:	aa0c      	add	r2, sp, #48	; 0x30
 8006d6e:	ab0d      	add	r3, sp, #52	; 0x34
 8006d70:	a90b      	add	r1, sp, #44	; 0x2c
 8006d72:	f8cd 8000 	str.w	r8, [sp]
 8006d76:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8006d7a:	f00f f856 	bl	8015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006d7e:	9b03      	ldr	r3, [sp, #12]
 8006d80:	f8c4 73d4 	str.w	r7, [r4, #980]	; 0x3d4
 8006d84:	4630      	mov	r0, r6
 8006d86:	ee1b 1a10 	vmov	r1, s22
 8006d8a:	f8c4 33c4 	str.w	r3, [r4, #964]	; 0x3c4
 8006d8e:	f00b fd2f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006d92:	4620      	mov	r0, r4
 8006d94:	b011      	add	sp, #68	; 0x44
 8006d96:	ecbd 8b08 	vpop	{d8-d11}
 8006d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d9e:	bf00      	nop
 8006da0:	200138a0 	.word	0x200138a0
 8006da4:	0802f481 	.word	0x0802f481
 8006da8:	0802f4f4 	.word	0x0802f4f4

08006dac <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006dac:	4770      	bx	lr

08006dae <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006dae:	4770      	bx	lr

08006db0 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006db0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006db2:	68c2      	ldr	r2, [r0, #12]
 8006db4:	6844      	ldr	r4, [r0, #4]
 8006db6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006db8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006dba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006dbe:	07d2      	lsls	r2, r2, #31
 8006dc0:	bf48      	it	mi
 8006dc2:	5962      	ldrmi	r2, [r4, r5]
 8006dc4:	689b      	ldr	r3, [r3, #8]
    }
 8006dc6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dc8:	bf48      	it	mi
 8006dca:	58d3      	ldrmi	r3, [r2, r3]
 8006dcc:	4718      	bx	r3

08006dce <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006dce:	6843      	ldr	r3, [r0, #4]
 8006dd0:	b12b      	cbz	r3, 8006dde <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006dd2:	6883      	ldr	r3, [r0, #8]
 8006dd4:	b92b      	cbnz	r3, 8006de2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006dd6:	68c0      	ldr	r0, [r0, #12]
 8006dd8:	f000 0001 	and.w	r0, r0, #1
 8006ddc:	4770      	bx	lr
 8006dde:	4618      	mov	r0, r3
 8006de0:	4770      	bx	lr
 8006de2:	2001      	movs	r0, #1
    }
 8006de4:	4770      	bx	lr

08006de6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006de6:	b510      	push	{r4, lr}
 8006de8:	2110      	movs	r1, #16
 8006dea:	4604      	mov	r4, r0
 8006dec:	f025 fec1 	bl	802cb72 <_ZdlPvj>
 8006df0:	4620      	mov	r0, r4
 8006df2:	bd10      	pop	{r4, pc}

08006df4 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006df4:	b510      	push	{r4, lr}
 8006df6:	4b03      	ldr	r3, [pc, #12]	; (8006e04 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006df8:	6003      	str	r3, [r0, #0]
 8006dfa:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006dfc:	f010 f8ce 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e00:	4620      	mov	r0, r4
 8006e02:	bd10      	pop	{r4, pc}
 8006e04:	08030ae0 	.word	0x08030ae0

08006e08 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006e08:	b507      	push	{r0, r1, r2, lr}
 8006e0a:	4b07      	ldr	r3, [pc, #28]	; (8006e28 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006e0c:	6003      	str	r3, [r0, #0]
 8006e0e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e10:	f010 f8c4 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e14:	9801      	ldr	r0, [sp, #4]
 8006e16:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8006e1a:	f025 feaa 	bl	802cb72 <_ZdlPvj>
 8006e1e:	9801      	ldr	r0, [sp, #4]
 8006e20:	b003      	add	sp, #12
 8006e22:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e26:	bf00      	nop
 8006e28:	08030ae0 	.word	0x08030ae0

08006e2c <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006e2c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 8006e2e:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 8006e32:	4299      	cmp	r1, r3
{
 8006e34:	4604      	mov	r4, r0
 8006e36:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 8006e38:	d103      	bne.n	8006e42 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e3a:	f011 fdb1 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006e3e:	f7fe fb97 	bl	8005570 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_Single)
 8006e42:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006e46:	429d      	cmp	r5, r3
 8006e48:	d103      	bne.n	8006e52 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006e4a:	f011 fda9 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_Single clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006e4e:	f7fe fbbf 	bl	80055d0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_Accurate)
 8006e52:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 8006e56:	42a5      	cmp	r5, r4
 8006e58:	d105      	bne.n	8006e66 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006e5a:	f011 fda1 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_Accurate clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006e5e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8006e62:	f7fe bbe5 	b.w	8005630 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006e66:	bd38      	pop	{r3, r4, r5, pc}

08006e68 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e6c:	ed2d 8b06 	vpush	{d8-d10}
 8006e70:	4604      	mov	r4, r0
 8006e72:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006e74:	46a2      	mov	sl, r4
 8006e76:	2500      	movs	r5, #0
 8006e78:	f013 fa12 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8006e7c:	4b71      	ldr	r3, [pc, #452]	; (8007044 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
 8006e7e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e80:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8006e84:	2226      	movs	r2, #38	; 0x26
 8006e86:	4629      	mov	r1, r5
 8006e88:	4650      	mov	r0, sl
 8006e8a:	f026 ff5e 	bl	802dd4a <memset>
 8006e8e:	4650      	mov	r0, sl
 8006e90:	f7fc fc1e 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8006e94:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8006e98:	26ff      	movs	r6, #255	; 0xff
 8006e9a:	4b6b      	ldr	r3, [pc, #428]	; (8007048 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8006e9c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006e9e:	2226      	movs	r2, #38	; 0x26
 8006ea0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006ea4:	4629      	mov	r1, r5
 8006ea6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006eaa:	4648      	mov	r0, r9
 8006eac:	66a5      	str	r5, [r4, #104]	; 0x68
 8006eae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006eb2:	f026 ff4a 	bl	802dd4a <memset>
 8006eb6:	4648      	mov	r0, r9
 8006eb8:	f7fc fc0a 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8006ebc:	4b63      	ldr	r3, [pc, #396]	; (800704c <_ZN19MeasurementViewBaseC1Ev+0x1e4>)
 8006ebe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ec0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ec4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ec8:	a90a      	add	r1, sp, #40	; 0x28
 8006eca:	4648      	mov	r0, r9
 8006ecc:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006ed0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ed4:	f00f f865 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006ed8:	4640      	mov	r0, r8
 8006eda:	f7fc fc5d 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006ede:	4b5c      	ldr	r3, [pc, #368]	; (8007050 <_ZN19MeasurementViewBaseC1Ev+0x1e8>)
 8006ee0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006ee4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006ee8:	4618      	mov	r0, r3
 8006eea:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006eee:	ee09 3a90 	vmov	s19, r3
 8006ef2:	f00f f98d 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ef6:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8006efa:	4618      	mov	r0, r3
 8006efc:	ee0a 3a10 	vmov	s20, r3
 8006f00:	f00f f986 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f04:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8006f08:	4618      	mov	r0, r3
 8006f0a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 8006f0e:	ee0a 3a90 	vmov	s21, r3
 8006f12:	f00f f97d 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006f16:	4638      	mov	r0, r7
 8006f18:	f00d fd36 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f1c:	4e4d      	ldr	r6, [pc, #308]	; (8007054 <_ZN19MeasurementViewBaseC1Ev+0x1ec>)
 8006f1e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8006f22:	4618      	mov	r0, r3
 8006f24:	9302      	str	r3, [sp, #8]
 8006f26:	f7fc f9d7 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f2a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f2e:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8006f32:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006f36:	4618      	mov	r0, r3
 8006f38:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 8006f3c:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8006f40:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 8006f44:	ee08 3a10 	vmov	s16, r3
 8006f48:	f7fc fc26 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8006f4c:	4658      	mov	r0, fp
 8006f4e:	f00d fd1b 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8006f52:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 8006f56:	4618      	mov	r0, r3
 8006f58:	9303      	str	r3, [sp, #12]
 8006f5a:	f7fc f9bd 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f5e:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8006f62:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8006f66:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8006f6a:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 8006f6e:	4618      	mov	r0, r3
 8006f70:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8006f74:	ee08 3a90 	vmov	s17, r3
 8006f78:	f7fc fc0e 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8006f7c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8006f80:	4618      	mov	r0, r3
 8006f82:	ee09 3a10 	vmov	s18, r3
 8006f86:	f7fc fc07 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f8a:	4a33      	ldr	r2, [pc, #204]	; (8007058 <_ZN19MeasurementViewBaseC1Ev+0x1f0>)
 8006f8c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f90:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8006f94:	4a31      	ldr	r2, [pc, #196]	; (800705c <_ZN19MeasurementViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f96:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f9a:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8006f9e:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8006fa2:	f00f fff1 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006fa6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006faa:	462a      	mov	r2, r5
 8006fac:	4650      	mov	r0, sl
 8006fae:	9300      	str	r3, [sp, #0]
 8006fb0:	4629      	mov	r1, r5
 8006fb2:	23f0      	movs	r3, #240	; 0xf0
 8006fb4:	f7fc fb67 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006fb8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006fba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006fbe:	66a3      	str	r3, [r4, #104]	; 0x68
 8006fc0:	4651      	mov	r1, sl
 8006fc2:	4630      	mov	r0, r6
 8006fc4:	f00b fc14 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8006fc8:	462a      	mov	r2, r5
 8006fca:	4648      	mov	r0, r9
 8006fcc:	4629      	mov	r1, r5
 8006fce:	f7fc fb4d 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006fd2:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006fd4:	4648      	mov	r0, r9
 8006fd6:	a90a      	add	r1, sp, #40	; 0x28
 8006fd8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fdc:	f00e ffe1 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fe0:	4649      	mov	r1, r9
 8006fe2:	4630      	mov	r0, r6
 8006fe4:	f00b fc04 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8006fe8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006fec:	2156      	movs	r1, #86	; 0x56
 8006fee:	4640      	mov	r0, r8
 8006ff0:	f7fc fb3c 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8006ff4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006ff8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006ffc:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007000:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8007004:	4648      	mov	r0, r9
 8007006:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800700a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800700e:	4641      	mov	r1, r8
 8007010:	4798      	blx	r3
 8007012:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007016:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800701a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800701e:	4b10      	ldr	r3, [pc, #64]	; (8007060 <_ZN19MeasurementViewBaseC1Ev+0x1f8>)
 8007020:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8007022:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8007026:	b92b      	cbnz	r3, 8007034 <_ZN19MeasurementViewBaseC1Ev+0x1cc>
 8007028:	4b0e      	ldr	r3, [pc, #56]	; (8007064 <_ZN19MeasurementViewBaseC1Ev+0x1fc>)
 800702a:	4a0f      	ldr	r2, [pc, #60]	; (8007068 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 800702c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800702e:	480f      	ldr	r0, [pc, #60]	; (800706c <_ZN19MeasurementViewBaseC1Ev+0x204>)
 8007030:	f026 fc86 	bl	802d940 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007034:	4b0e      	ldr	r3, [pc, #56]	; (8007070 <_ZN19MeasurementViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007036:	881b      	ldrh	r3, [r3, #0]
 8007038:	2b45      	cmp	r3, #69	; 0x45
 800703a:	d81d      	bhi.n	8007078 <_ZN19MeasurementViewBaseC1Ev+0x210>
 800703c:	4b0d      	ldr	r3, [pc, #52]	; (8007074 <_ZN19MeasurementViewBaseC1Ev+0x20c>)
 800703e:	4a0a      	ldr	r2, [pc, #40]	; (8007068 <_ZN19MeasurementViewBaseC1Ev+0x200>)
 8007040:	2161      	movs	r1, #97	; 0x61
 8007042:	e7f4      	b.n	800702e <_ZN19MeasurementViewBaseC1Ev+0x1c6>
 8007044:	08030ae0 	.word	0x08030ae0
 8007048:	08031a48 	.word	0x08031a48
 800704c:	08031c94 	.word	0x08031c94
 8007050:	0802f594 	.word	0x0802f594
 8007054:	0803177c 	.word	0x0803177c
 8007058:	08030ac8 	.word	0x08030ac8
 800705c:	08006e2d 	.word	0x08006e2d
 8007060:	20013894 	.word	0x20013894
 8007064:	0802f344 	.word	0x0802f344
 8007068:	0802f449 	.word	0x0802f449
 800706c:	0802f3c1 	.word	0x0802f3c1
 8007070:	20013898 	.word	0x20013898
 8007074:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8007078:	4bad      	ldr	r3, [pc, #692]	; (8007330 <_ZN19MeasurementViewBaseC1Ev+0x4c8>)
 800707a:	2145      	movs	r1, #69	; 0x45
 800707c:	6818      	ldr	r0, [r3, #0]
 800707e:	f003 fb03 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8007082:	4aac      	ldr	r2, [pc, #688]	; (8007334 <_ZN19MeasurementViewBaseC1Ev+0x4cc>)
 8007084:	4603      	mov	r3, r0
 8007086:	2104      	movs	r1, #4
 8007088:	4648      	mov	r0, r9
 800708a:	f014 fe37 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800708e:	4640      	mov	r0, r8
        wc1 = value;
 8007090:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8007094:	f00e f9b4 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007098:	4ba7      	ldr	r3, [pc, #668]	; (8007338 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 800709a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800709c:	4640      	mov	r0, r8
 800709e:	2346      	movs	r3, #70	; 0x46
 80070a0:	a90a      	add	r1, sp, #40	; 0x28
 80070a2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070a6:	f00e f9cb 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070aa:	4641      	mov	r1, r8
 80070ac:	4630      	mov	r0, r6
 80070ae:	f00b fb9f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 80070b2:	ee19 0a90 	vmov	r0, s19
 80070b6:	22f0      	movs	r2, #240	; 0xf0
 80070b8:	2121      	movs	r1, #33	; 0x21
 80070ba:	f7fc fad7 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80070be:	f04f 0802 	mov.w	r8, #2
 80070c2:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070c4:	a909      	add	r1, sp, #36	; 0x24
 80070c6:	ee19 0a90 	vmov	r0, s19
 80070ca:	aa0a      	add	r2, sp, #40	; 0x28
 80070cc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80070d0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 80070d4:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80070d8:	f00e fd6d 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80070dc:	226a      	movs	r2, #106	; 0x6a
 80070de:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 80070e2:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 80070e6:	ee19 0a90 	vmov	r0, s19
 80070ea:	f7fc fb03 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80070ee:	ee19 1a90 	vmov	r1, s19
 80070f2:	4630      	mov	r0, r6
        colorPressed = col;
 80070f4:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 80070f8:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 80070fc:	f00b fb78 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Accurate.setXY(33, 170);
 8007100:	ee1a 0a10 	vmov	r0, s20
 8007104:	22aa      	movs	r2, #170	; 0xaa
 8007106:	2121      	movs	r1, #33	; 0x21
 8007108:	f7fc fab0 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800710c:	2303      	movs	r3, #3
    buttonWithLabel_Accurate.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800710e:	a909      	add	r1, sp, #36	; 0x24
 8007110:	ee1a 0a10 	vmov	r0, s20
 8007114:	aa0a      	add	r2, sp, #40	; 0x28
 8007116:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800711a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800711e:	f00e fd4a 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007122:	2269      	movs	r2, #105	; 0x69
 8007124:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8007128:	ee1a 0a10 	vmov	r0, s20
 800712c:	f7fc fae2 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007130:	ee1a 1a10 	vmov	r1, s20
 8007134:	4630      	mov	r0, r6
        colorPressed = col;
 8007136:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 800713a:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 800713e:	f00b fb57 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Single.setXY(33, 100);
 8007142:	ee1a 0a90 	vmov	r0, s21
 8007146:	2264      	movs	r2, #100	; 0x64
 8007148:	2121      	movs	r1, #33	; 0x21
 800714a:	f7fc fa8f 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_Single.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800714e:	aa0a      	add	r2, sp, #40	; 0x28
 8007150:	2303      	movs	r3, #3
 8007152:	a909      	add	r1, sp, #36	; 0x24
 8007154:	ee1a 0a90 	vmov	r0, s21
 8007158:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800715c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007160:	f00e fd29 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007164:	2368      	movs	r3, #104	; 0x68
 8007166:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 800716a:	ee1a 0a90 	vmov	r0, s21
 800716e:	f7fc fac1 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007172:	ee1a 1a90 	vmov	r1, s21
 8007176:	4630      	mov	r0, r6
        colorPressed = col;
 8007178:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800717c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007180:	f00b fb36 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007184:	230a      	movs	r3, #10
 8007186:	9300      	str	r3, [sp, #0]
 8007188:	224b      	movs	r2, #75	; 0x4b
 800718a:	23f0      	movs	r3, #240	; 0xf0
 800718c:	4629      	mov	r1, r5
 800718e:	4638      	mov	r0, r7
 8007190:	f7fc fa79 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007194:	9b02      	ldr	r3, [sp, #8]
 8007196:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800719a:	22a0      	movs	r2, #160	; 0xa0
 800719c:	4611      	mov	r1, r2
 800719e:	4638      	mov	r0, r7
 80071a0:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071a4:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 80071a8:	f00d fd04 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071ac:	22a0      	movs	r2, #160	; 0xa0
 80071ae:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80071b2:	4638      	mov	r0, r7
 80071b4:	f00d fd09 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80071b8:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 80071bc:	2b20      	cmp	r3, #32
 80071be:	d005      	beq.n	80071cc <_ZN19MeasurementViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 80071c0:	2320      	movs	r3, #32
 80071c2:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 80071c6:	4638      	mov	r0, r7
 80071c8:	f00d fbfe 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80071cc:	4638      	mov	r0, r7
 80071ce:	2101      	movs	r1, #1
 80071d0:	f00d fd06 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80071d4:	4639      	mov	r1, r7
 80071d6:	4630      	mov	r0, r6
 80071d8:	f00b fb0a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80071dc:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(61, 60);
 80071e0:	223c      	movs	r2, #60	; 0x3c
 80071e2:	ee18 0a10 	vmov	r0, s16
 80071e6:	213d      	movs	r1, #61	; 0x3d
        linespace = space;
 80071e8:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 80071ec:	ad04      	add	r5, sp, #16
 80071ee:	f7fc fa3d 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80071f2:	ee18 1a10 	vmov	r1, s16
 80071f6:	4628      	mov	r0, r5
        color = newColor;
 80071f8:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 80071fc:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007200:	f00d fe84 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007204:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007208:	ee18 3a10 	vmov	r3, s16
 800720c:	333c      	adds	r3, #60	; 0x3c
 800720e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007212:	4b49      	ldr	r3, [pc, #292]	; (8007338 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007214:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8007216:	ee18 0a10 	vmov	r0, s16
 800721a:	2353      	movs	r3, #83	; 0x53
 800721c:	a90a      	add	r1, sp, #40	; 0x28
 800721e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007222:	f00e f90d 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007226:	ee18 1a10 	vmov	r1, s16
 800722a:	4630      	mov	r0, r6
 800722c:	f00b fae0 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007230:	230a      	movs	r3, #10
 8007232:	9300      	str	r3, [sp, #0]
 8007234:	2232      	movs	r2, #50	; 0x32
 8007236:	23f0      	movs	r3, #240	; 0xf0
 8007238:	4641      	mov	r1, r8
 800723a:	4658      	mov	r0, fp
 800723c:	f7fc fa23 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007240:	9b03      	ldr	r3, [sp, #12]
 8007242:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007246:	22a0      	movs	r2, #160	; 0xa0
 8007248:	4611      	mov	r1, r2
 800724a:	4658      	mov	r0, fp
 800724c:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8007250:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8007254:	f00d fcae 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007258:	22a0      	movs	r2, #160	; 0xa0
 800725a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800725e:	4658      	mov	r0, fp
 8007260:	f00d fcb3 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007264:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8007268:	2b20      	cmp	r3, #32
 800726a:	d005      	beq.n	8007278 <_ZN19MeasurementViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 800726c:	2320      	movs	r3, #32
 800726e:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007272:	4658      	mov	r0, fp
 8007274:	f00d fba8 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007278:	4658      	mov	r0, fp
 800727a:	2101      	movs	r1, #1
 800727c:	f00d fcb0 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007280:	4659      	mov	r1, fp
 8007282:	4630      	mov	r0, r6
 8007284:	f00b fab4 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007288:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800728c:	ee18 0a90 	vmov	r0, s17
 8007290:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007292:	2700      	movs	r7, #0
 8007294:	2145      	movs	r1, #69	; 0x45
 8007296:	f7fc f9e9 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800729a:	ee18 1a90 	vmov	r1, s17
 800729e:	4628      	mov	r0, r5
        color = newColor;
 80072a0:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 80072a4:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 80072a8:	f00d fe30 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80072b0:	ee18 3a90 	vmov	r3, s17
 80072b4:	333c      	adds	r3, #60	; 0x3c
 80072b6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072ba:	4b1f      	ldr	r3, [pc, #124]	; (8007338 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 80072bc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80072be:	ee18 0a90 	vmov	r0, s17
 80072c2:	236b      	movs	r3, #107	; 0x6b
 80072c4:	a90a      	add	r1, sp, #40	; 0x28
 80072c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072ca:	f00e f8b9 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072ce:	ee18 1a90 	vmov	r1, s17
 80072d2:	4630      	mov	r0, r6
 80072d4:	f00b fa8c 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80072d8:	ee19 0a10 	vmov	r0, s18
 80072dc:	220c      	movs	r2, #12
 80072de:	2136      	movs	r1, #54	; 0x36
 80072e0:	f7fc f9c4 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80072e4:	ee19 1a10 	vmov	r1, s18
 80072e8:	4628      	mov	r0, r5
        color = newColor;
 80072ea:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 80072ee:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 80072f2:	f00d fe0b 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072f6:	ee19 2a10 	vmov	r2, s18
 80072fa:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 80072fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007302:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007306:	4b0c      	ldr	r3, [pc, #48]	; (8007338 <_ZN19MeasurementViewBaseC1Ev+0x4d0>)
 8007308:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800730a:	ee19 0a10 	vmov	r0, s18
 800730e:	236c      	movs	r3, #108	; 0x6c
 8007310:	a90a      	add	r1, sp, #40	; 0x28
 8007312:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007316:	f00e f893 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800731a:	4630      	mov	r0, r6
 800731c:	ee19 1a10 	vmov	r1, s18
 8007320:	f00b fa66 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007324:	4620      	mov	r0, r4
 8007326:	b00d      	add	sp, #52	; 0x34
 8007328:	ecbd 8b06 	vpop	{d8-d10}
 800732c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007330:	200138a0 	.word	0x200138a0
 8007334:	0802f481 	.word	0x0802f481
 8007338:	0802f4f4 	.word	0x0802f4f4

0800733c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800733c:	4770      	bx	lr

0800733e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800733e:	4770      	bx	lr

08007340 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007340:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007342:	68c2      	ldr	r2, [r0, #12]
 8007344:	6844      	ldr	r4, [r0, #4]
 8007346:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007348:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800734a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800734e:	07d2      	lsls	r2, r2, #31
 8007350:	bf48      	it	mi
 8007352:	5962      	ldrmi	r2, [r4, r5]
 8007354:	689b      	ldr	r3, [r3, #8]
    }
 8007356:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007358:	bf48      	it	mi
 800735a:	58d3      	ldrmi	r3, [r2, r3]
 800735c:	4718      	bx	r3

0800735e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800735e:	6843      	ldr	r3, [r0, #4]
 8007360:	b12b      	cbz	r3, 800736e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007362:	6883      	ldr	r3, [r0, #8]
 8007364:	b92b      	cbnz	r3, 8007372 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007366:	68c0      	ldr	r0, [r0, #12]
 8007368:	f000 0001 	and.w	r0, r0, #1
 800736c:	4770      	bx	lr
 800736e:	4618      	mov	r0, r3
 8007370:	4770      	bx	lr
 8007372:	2001      	movs	r0, #1
    }
 8007374:	4770      	bx	lr

08007376 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007376:	b510      	push	{r4, lr}
 8007378:	2110      	movs	r1, #16
 800737a:	4604      	mov	r4, r0
 800737c:	f025 fbf9 	bl	802cb72 <_ZdlPvj>
 8007380:	4620      	mov	r0, r4
 8007382:	bd10      	pop	{r4, pc}

08007384 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007384:	b510      	push	{r4, lr}
 8007386:	4b03      	ldr	r3, [pc, #12]	; (8007394 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8007388:	6003      	str	r3, [r0, #0]
 800738a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800738c:	f00f fe06 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007390:	4620      	mov	r0, r4
 8007392:	bd10      	pop	{r4, pc}
 8007394:	08030b2c 	.word	0x08030b2c

08007398 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8007398:	b507      	push	{r0, r1, r2, lr}
 800739a:	4b07      	ldr	r3, [pc, #28]	; (80073b8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 800739c:	6003      	str	r3, [r0, #0]
 800739e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80073a0:	f00f fdfc 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80073a4:	9801      	ldr	r0, [sp, #4]
 80073a6:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80073aa:	f025 fbe2 	bl	802cb72 <_ZdlPvj>
 80073ae:	9801      	ldr	r0, [sp, #4]
 80073b0:	b003      	add	sp, #12
 80073b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80073b6:	bf00      	nop
 80073b8:	08030b2c 	.word	0x08030b2c

080073bc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80073bc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80073be:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80073c2:	4299      	cmp	r1, r3
{
 80073c4:	4604      	mov	r4, r0
 80073c6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80073c8:	d103      	bne.n	80073d2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80073ca:	f011 fae9 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80073ce:	f7fe f8ef 	bl	80055b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80073d2:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 80073d6:	429d      	cmp	r5, r3
 80073d8:	d103      	bne.n	80073e2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80073da:	f011 fae1 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80073de:	f7fe f957 	bl	8005690 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80073e2:	f504 74ba 	add.w	r4, r4, #372	; 0x174
 80073e6:	42a5      	cmp	r5, r4
 80073e8:	d105      	bne.n	80073f6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80073ea:	f011 fad9 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80073ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 80073f2:	f7fe b93d 	b.w	8005670 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80073f6:	bd38      	pop	{r3, r4, r5, pc}

080073f8 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80073f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073fc:	ed2d 8b06 	vpush	{d8-d10}
 8007400:	4604      	mov	r4, r0
 8007402:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8007404:	46a2      	mov	sl, r4
 8007406:	2500      	movs	r5, #0
 8007408:	f012 ff4a 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 800740c:	4b71      	ldr	r3, [pc, #452]	; (80075d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
 800740e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007410:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8007414:	2226      	movs	r2, #38	; 0x26
 8007416:	4629      	mov	r1, r5
 8007418:	4650      	mov	r0, sl
 800741a:	f026 fc96 	bl	802dd4a <memset>
 800741e:	4650      	mov	r0, sl
 8007420:	f7fc f956 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8007424:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8007428:	26ff      	movs	r6, #255	; 0xff
 800742a:	4b6b      	ldr	r3, [pc, #428]	; (80075d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 800742c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800742e:	2226      	movs	r2, #38	; 0x26
 8007430:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007434:	4629      	mov	r1, r5
 8007436:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800743a:	4648      	mov	r0, r9
 800743c:	66a5      	str	r5, [r4, #104]	; 0x68
 800743e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007442:	f026 fc82 	bl	802dd4a <memset>
 8007446:	4648      	mov	r0, r9
 8007448:	f7fc f942 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 800744c:	4b63      	ldr	r3, [pc, #396]	; (80075dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>)
 800744e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007450:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007454:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007458:	a90a      	add	r1, sp, #40	; 0x28
 800745a:	4648      	mov	r0, r9
 800745c:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007460:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007464:	f00e fd9d 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007468:	4640      	mov	r0, r8
 800746a:	f7fc f995 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800746e:	4b5c      	ldr	r3, [pc, #368]	; (80075e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e8>)
 8007470:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007474:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007478:	4618      	mov	r0, r3
 800747a:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800747e:	ee09 3a90 	vmov	s19, r3
 8007482:	f00e fec5 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007486:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 800748a:	4618      	mov	r0, r3
 800748c:	ee0a 3a10 	vmov	s20, r3
 8007490:	f00e febe 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007494:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8007498:	4618      	mov	r0, r3
 800749a:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800749e:	ee0a 3a90 	vmov	s21, r3
 80074a2:	f00e feb5 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80074a6:	4638      	mov	r0, r7
 80074a8:	f00d fa6e 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80074ac:	4e4d      	ldr	r6, [pc, #308]	; (80075e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1ec>)
 80074ae:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80074b2:	4618      	mov	r0, r3
 80074b4:	9302      	str	r3, [sp, #8]
 80074b6:	f7fb ff0f 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074ba:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80074be:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80074c2:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80074c6:	4618      	mov	r0, r3
 80074c8:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80074cc:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80074d0:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80074d4:	ee08 3a10 	vmov	s16, r3
 80074d8:	f7fc f95e 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80074dc:	4658      	mov	r0, fp
 80074de:	f00d fa53 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 80074e2:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80074e6:	4618      	mov	r0, r3
 80074e8:	9303      	str	r3, [sp, #12]
 80074ea:	f7fb fef5 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80074ee:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80074f2:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80074f6:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80074fa:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80074fe:	4618      	mov	r0, r3
 8007500:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 8007504:	ee08 3a90 	vmov	s17, r3
 8007508:	f7fc f946 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 800750c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007510:	4618      	mov	r0, r3
 8007512:	ee09 3a10 	vmov	s18, r3
 8007516:	f7fc f93f 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800751a:	4a33      	ldr	r2, [pc, #204]	; (80075e8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f0>)
 800751c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007520:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8007524:	4a31      	ldr	r2, [pc, #196]	; (80075ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007526:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800752a:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 800752e:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8007532:	f00f fd29 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007536:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800753a:	462a      	mov	r2, r5
 800753c:	4650      	mov	r0, sl
 800753e:	9300      	str	r3, [sp, #0]
 8007540:	4629      	mov	r1, r5
 8007542:	23f0      	movs	r3, #240	; 0xf0
 8007544:	f7fc f89f 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007548:	1d26      	adds	r6, r4, #4
        color = newColor;
 800754a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800754e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007550:	4651      	mov	r1, sl
 8007552:	4630      	mov	r0, r6
 8007554:	f00b f94c 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_return.setXY(0, 0);
 8007558:	462a      	mov	r2, r5
 800755a:	4648      	mov	r0, r9
 800755c:	4629      	mov	r1, r5
 800755e:	f7fc f885 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007562:	2308      	movs	r3, #8
    image_return.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007564:	4648      	mov	r0, r9
 8007566:	a90a      	add	r1, sp, #40	; 0x28
 8007568:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800756c:	f00e fd19 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007570:	4649      	mov	r1, r9
 8007572:	4630      	mov	r0, r6
 8007574:	f00b f93c 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8007578:	f44f 729a 	mov.w	r2, #308	; 0x134
 800757c:	2156      	movs	r1, #86	; 0x56
 800757e:	4640      	mov	r0, r8
 8007580:	f7fc f874 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007584:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007588:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800758c:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8007590:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8007594:	4648      	mov	r0, r9
 8007596:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800759a:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800759e:	4641      	mov	r1, r8
 80075a0:	4798      	blx	r3
 80075a2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80075a6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80075aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80075ae:	4b10      	ldr	r3, [pc, #64]	; (80075f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1f8>)
 80075b0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80075b2:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 80075b6:	b92b      	cbnz	r3, 80075c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>
 80075b8:	4b0e      	ldr	r3, [pc, #56]	; (80075f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1fc>)
 80075ba:	4a0f      	ldr	r2, [pc, #60]	; (80075f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075bc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80075be:	480f      	ldr	r0, [pc, #60]	; (80075fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x204>)
 80075c0:	f026 f9be 	bl	802d940 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80075c4:	4b0e      	ldr	r3, [pc, #56]	; (8007600 <_ZN28Measurement_AccurateViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80075c6:	881b      	ldrh	r3, [r3, #0]
 80075c8:	2b40      	cmp	r3, #64	; 0x40
 80075ca:	d81d      	bhi.n	8007608 <_ZN28Measurement_AccurateViewBaseC1Ev+0x210>
 80075cc:	4b0d      	ldr	r3, [pc, #52]	; (8007604 <_ZN28Measurement_AccurateViewBaseC1Ev+0x20c>)
 80075ce:	4a0a      	ldr	r2, [pc, #40]	; (80075f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x200>)
 80075d0:	2161      	movs	r1, #97	; 0x61
 80075d2:	e7f4      	b.n	80075be <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c6>
 80075d4:	08030b2c 	.word	0x08030b2c
 80075d8:	08031a48 	.word	0x08031a48
 80075dc:	08031c94 	.word	0x08031c94
 80075e0:	0802f594 	.word	0x0802f594
 80075e4:	0803177c 	.word	0x0803177c
 80075e8:	08030b14 	.word	0x08030b14
 80075ec:	080073bd 	.word	0x080073bd
 80075f0:	20013894 	.word	0x20013894
 80075f4:	0802f344 	.word	0x0802f344
 80075f8:	0802f449 	.word	0x0802f449
 80075fc:	0802f3c1 	.word	0x0802f3c1
 8007600:	20013898 	.word	0x20013898
 8007604:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8007608:	4bad      	ldr	r3, [pc, #692]	; (80078c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4c8>)
 800760a:	2140      	movs	r1, #64	; 0x40
 800760c:	6818      	ldr	r0, [r3, #0]
 800760e:	f003 f83b 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8007612:	4aac      	ldr	r2, [pc, #688]	; (80078c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4cc>)
 8007614:	4603      	mov	r3, r0
 8007616:	2104      	movs	r1, #4
 8007618:	4648      	mov	r0, r9
 800761a:	f014 fb6f 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 800761e:	4640      	mov	r0, r8
        wc1 = value;
 8007620:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8007624:	f00d feec 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007628:	4ba7      	ldr	r3, [pc, #668]	; (80078c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800762a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 800762c:	4640      	mov	r0, r8
 800762e:	2341      	movs	r3, #65	; 0x41
 8007630:	a90a      	add	r1, sp, #40	; 0x28
 8007632:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007636:	f00d ff03 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800763a:	4641      	mov	r1, r8
 800763c:	4630      	mov	r0, r6
 800763e:	f00b f8d7 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8007642:	ee19 0a90 	vmov	r0, s19
 8007646:	22f0      	movs	r2, #240	; 0xf0
 8007648:	2121      	movs	r1, #33	; 0x21
 800764a:	f7fc f80f 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800764e:	f04f 0802 	mov.w	r8, #2
 8007652:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007654:	a909      	add	r1, sp, #36	; 0x24
 8007656:	ee19 0a90 	vmov	r0, s19
 800765a:	aa0a      	add	r2, sp, #40	; 0x28
 800765c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007660:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8007664:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007668:	f00e faa5 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800766c:	225e      	movs	r2, #94	; 0x5e
 800766e:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8007672:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8007676:	ee19 0a90 	vmov	r0, s19
 800767a:	f7fc f83b 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800767e:	ee19 1a90 	vmov	r1, s19
 8007682:	4630      	mov	r0, r6
        colorPressed = col;
 8007684:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8007688:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 800768c:	f00b f8b0 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8007690:	ee1a 0a10 	vmov	r0, s20
 8007694:	22aa      	movs	r2, #170	; 0xaa
 8007696:	2121      	movs	r1, #33	; 0x21
 8007698:	f7fb ffe8 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800769c:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800769e:	a909      	add	r1, sp, #36	; 0x24
 80076a0:	ee1a 0a10 	vmov	r0, s20
 80076a4:	aa0a      	add	r2, sp, #40	; 0x28
 80076a6:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076aa:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076ae:	f00e fa82 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076b2:	225d      	movs	r2, #93	; 0x5d
 80076b4:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 80076b8:	ee1a 0a10 	vmov	r0, s20
 80076bc:	f7fc f81a 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076c0:	ee1a 1a10 	vmov	r1, s20
 80076c4:	4630      	mov	r0, r6
        colorPressed = col;
 80076c6:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 80076ca:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 80076ce:	f00b f88f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 80076d2:	ee1a 0a90 	vmov	r0, s21
 80076d6:	2264      	movs	r2, #100	; 0x64
 80076d8:	2121      	movs	r1, #33	; 0x21
 80076da:	f7fb ffc7 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076de:	aa0a      	add	r2, sp, #40	; 0x28
 80076e0:	2303      	movs	r3, #3
 80076e2:	a909      	add	r1, sp, #36	; 0x24
 80076e4:	ee1a 0a90 	vmov	r0, s21
 80076e8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80076ec:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076f0:	f00e fa61 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076f4:	235c      	movs	r3, #92	; 0x5c
 80076f6:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 80076fa:	ee1a 0a90 	vmov	r0, s21
 80076fe:	f7fb fff9 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007702:	ee1a 1a90 	vmov	r1, s21
 8007706:	4630      	mov	r0, r6
        colorPressed = col;
 8007708:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 800770c:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8007710:	f00b f86e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007714:	230a      	movs	r3, #10
 8007716:	9300      	str	r3, [sp, #0]
 8007718:	224b      	movs	r2, #75	; 0x4b
 800771a:	23f0      	movs	r3, #240	; 0xf0
 800771c:	4629      	mov	r1, r5
 800771e:	4638      	mov	r0, r7
 8007720:	f7fb ffb1 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007724:	9b02      	ldr	r3, [sp, #8]
 8007726:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800772a:	22a0      	movs	r2, #160	; 0xa0
 800772c:	4611      	mov	r1, r2
 800772e:	4638      	mov	r0, r7
 8007730:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007734:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8007738:	f00d fa3c 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800773c:	22a0      	movs	r2, #160	; 0xa0
 800773e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007742:	4638      	mov	r0, r7
 8007744:	f00d fa41 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007748:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 800774c:	2b20      	cmp	r3, #32
 800774e:	d005      	beq.n	800775c <_ZN28Measurement_AccurateViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8007750:	2320      	movs	r3, #32
 8007752:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8007756:	4638      	mov	r0, r7
 8007758:	f00d f936 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800775c:	4638      	mov	r0, r7
 800775e:	2101      	movs	r1, #1
 8007760:	f00d fa3e 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007764:	4639      	mov	r1, r7
 8007766:	4630      	mov	r0, r6
 8007768:	f00b f842 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800776c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(33, 60);
 8007770:	223c      	movs	r2, #60	; 0x3c
 8007772:	ee18 0a10 	vmov	r0, s16
 8007776:	2121      	movs	r1, #33	; 0x21
        linespace = space;
 8007778:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 800777c:	ad04      	add	r5, sp, #16
 800777e:	f7fb ff75 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007782:	ee18 1a10 	vmov	r1, s16
 8007786:	4628      	mov	r0, r5
        color = newColor;
 8007788:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 800778c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007790:	f00d fbbc 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007794:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007798:	ee18 3a10 	vmov	r3, s16
 800779c:	333c      	adds	r3, #60	; 0x3c
 800779e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80077a2:	4b49      	ldr	r3, [pc, #292]	; (80078c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 80077a4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80077a6:	ee18 0a10 	vmov	r0, s16
 80077aa:	234f      	movs	r3, #79	; 0x4f
 80077ac:	a90a      	add	r1, sp, #40	; 0x28
 80077ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077b2:	f00d fe45 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077b6:	ee18 1a10 	vmov	r1, s16
 80077ba:	4630      	mov	r0, r6
 80077bc:	f00b f818 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80077c0:	230a      	movs	r3, #10
 80077c2:	9300      	str	r3, [sp, #0]
 80077c4:	2232      	movs	r2, #50	; 0x32
 80077c6:	23f0      	movs	r3, #240	; 0xf0
 80077c8:	4641      	mov	r1, r8
 80077ca:	4658      	mov	r0, fp
 80077cc:	f7fb ff5b 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80077d0:	9b03      	ldr	r3, [sp, #12]
 80077d2:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077d6:	22a0      	movs	r2, #160	; 0xa0
 80077d8:	4611      	mov	r1, r2
 80077da:	4658      	mov	r0, fp
 80077dc:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 80077e0:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 80077e4:	f00d f9e6 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80077e8:	22a0      	movs	r2, #160	; 0xa0
 80077ea:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80077ee:	4658      	mov	r0, fp
 80077f0:	f00d f9eb 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80077f4:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 80077f8:	2b20      	cmp	r3, #32
 80077fa:	d005      	beq.n	8007808 <_ZN28Measurement_AccurateViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 80077fc:	2320      	movs	r3, #32
 80077fe:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8007802:	4658      	mov	r0, fp
 8007804:	f00d f8e0 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007808:	4658      	mov	r0, fp
 800780a:	2101      	movs	r1, #1
 800780c:	f00d f9e8 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007810:	4659      	mov	r1, fp
 8007812:	4630      	mov	r0, r6
 8007814:	f00a ffec 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007818:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800781c:	ee18 0a90 	vmov	r0, s17
 8007820:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007822:	2700      	movs	r7, #0
 8007824:	2145      	movs	r1, #69	; 0x45
 8007826:	f7fb ff21 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800782a:	ee18 1a90 	vmov	r1, s17
 800782e:	4628      	mov	r0, r5
        color = newColor;
 8007830:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8007834:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8007838:	f00d fb68 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800783c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007840:	ee18 3a90 	vmov	r3, s17
 8007844:	333c      	adds	r3, #60	; 0x3c
 8007846:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800784a:	4b1f      	ldr	r3, [pc, #124]	; (80078c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 800784c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800784e:	ee18 0a90 	vmov	r0, s17
 8007852:	2360      	movs	r3, #96	; 0x60
 8007854:	a90a      	add	r1, sp, #40	; 0x28
 8007856:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800785a:	f00d fdf1 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800785e:	ee18 1a90 	vmov	r1, s17
 8007862:	4630      	mov	r0, r6
 8007864:	f00a ffc4 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8007868:	ee19 0a10 	vmov	r0, s18
 800786c:	220c      	movs	r2, #12
 800786e:	2136      	movs	r1, #54	; 0x36
 8007870:	f7fb fefc 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007874:	ee19 1a10 	vmov	r1, s18
 8007878:	4628      	mov	r0, r5
        color = newColor;
 800787a:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 800787e:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8007882:	f00d fb43 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007886:	ee19 2a10 	vmov	r2, s18
 800788a:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 800788e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007892:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007896:	4b0c      	ldr	r3, [pc, #48]	; (80078c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x4d0>)
 8007898:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800789a:	ee19 0a10 	vmov	r0, s18
 800789e:	235f      	movs	r3, #95	; 0x5f
 80078a0:	a90a      	add	r1, sp, #40	; 0x28
 80078a2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078a6:	f00d fdcb 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078aa:	4630      	mov	r0, r6
 80078ac:	ee19 1a10 	vmov	r1, s18
 80078b0:	f00a ff9e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80078b4:	4620      	mov	r0, r4
 80078b6:	b00d      	add	sp, #52	; 0x34
 80078b8:	ecbd 8b06 	vpop	{d8-d10}
 80078bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078c0:	200138a0 	.word	0x200138a0
 80078c4:	0802f481 	.word	0x0802f481
 80078c8:	0802f4f4 	.word	0x0802f4f4

080078cc <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 80078cc:	4770      	bx	lr

080078ce <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078ce:	4770      	bx	lr

080078d0 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80078d0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078d2:	68c2      	ldr	r2, [r0, #12]
 80078d4:	6844      	ldr	r4, [r0, #4]
 80078d6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80078d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80078da:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80078de:	07d2      	lsls	r2, r2, #31
 80078e0:	bf48      	it	mi
 80078e2:	5962      	ldrmi	r2, [r4, r5]
 80078e4:	689b      	ldr	r3, [r3, #8]
    }
 80078e6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078e8:	bf48      	it	mi
 80078ea:	58d3      	ldrmi	r3, [r2, r3]
 80078ec:	4718      	bx	r3

080078ee <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80078ee:	6843      	ldr	r3, [r0, #4]
 80078f0:	b12b      	cbz	r3, 80078fe <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80078f2:	6883      	ldr	r3, [r0, #8]
 80078f4:	b92b      	cbnz	r3, 8007902 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80078f6:	68c0      	ldr	r0, [r0, #12]
 80078f8:	f000 0001 	and.w	r0, r0, #1
 80078fc:	4770      	bx	lr
 80078fe:	4618      	mov	r0, r3
 8007900:	4770      	bx	lr
 8007902:	2001      	movs	r0, #1
    }
 8007904:	4770      	bx	lr

08007906 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007906:	b510      	push	{r4, lr}
 8007908:	2110      	movs	r1, #16
 800790a:	4604      	mov	r4, r0
 800790c:	f025 f931 	bl	802cb72 <_ZdlPvj>
 8007910:	4620      	mov	r0, r4
 8007912:	bd10      	pop	{r4, pc}

08007914 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007914:	b510      	push	{r4, lr}
 8007916:	4b03      	ldr	r3, [pc, #12]	; (8007924 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8007918:	6003      	str	r3, [r0, #0]
 800791a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800791c:	f00f fb3e 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007920:	4620      	mov	r0, r4
 8007922:	bd10      	pop	{r4, pc}
 8007924:	08030b78 	.word	0x08030b78

08007928 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8007928:	b507      	push	{r0, r1, r2, lr}
 800792a:	4b07      	ldr	r3, [pc, #28]	; (8007948 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 800792c:	6003      	str	r3, [r0, #0]
 800792e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007930:	f00f fb34 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007934:	9801      	ldr	r0, [sp, #4]
 8007936:	f241 4178 	movw	r1, #5240	; 0x1478
 800793a:	f025 f91a 	bl	802cb72 <_ZdlPvj>
 800793e:	9801      	ldr	r0, [sp, #4]
 8007940:	b003      	add	sp, #12
 8007942:	f85d fb04 	ldr.w	pc, [sp], #4
 8007946:	bf00      	nop
 8007948:	08030b78 	.word	0x08030b78

0800794c <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 800794c:	3098      	adds	r0, #152	; 0x98
 800794e:	4288      	cmp	r0, r1
{
 8007950:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8007952:	d105      	bne.n	8007960 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007954:	f011 f824 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007958:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800795c:	f7fd be78 	b.w	8005650 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8007960:	bd08      	pop	{r3, pc}
	...

08007964 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8007964:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007968:	ed2d 8b0a 	vpush	{d8-d12}
 800796c:	4604      	mov	r4, r0
 800796e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8007970:	46a0      	mov	r8, r4
 8007972:	2500      	movs	r5, #0
 8007974:	f012 fc94 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8007978:	4bce      	ldr	r3, [pc, #824]	; (8007cb4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x350>)
 800797a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800797c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8007980:	2226      	movs	r2, #38	; 0x26
 8007982:	4629      	mov	r1, r5
 8007984:	4640      	mov	r0, r8
 8007986:	f026 f9e0 	bl	802dd4a <memset>
 800798a:	4640      	mov	r0, r8
 800798c:	f7fb fea0 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8007990:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007994:	26ff      	movs	r6, #255	; 0xff
 8007996:	4bc8      	ldr	r3, [pc, #800]	; (8007cb8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x354>)
 8007998:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800799a:	2226      	movs	r2, #38	; 0x26
 800799c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80079a0:	4629      	mov	r1, r5
 80079a2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80079a6:	4638      	mov	r0, r7
 80079a8:	66a5      	str	r5, [r4, #104]	; 0x68
 80079aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079ae:	f026 f9cc 	bl	802dd4a <memset>
 80079b2:	4638      	mov	r0, r7
 80079b4:	f7fb fe8c 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 80079b8:	4bc0      	ldr	r3, [pc, #768]	; (8007cbc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x358>)
 80079ba:	66e3      	str	r3, [r4, #108]	; 0x6c
 80079bc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80079c0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80079c4:	a90a      	add	r1, sp, #40	; 0x28
 80079c6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80079ca:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 80079cc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80079d0:	f00e fae7 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80079d4:	4658      	mov	r0, fp
 80079d6:	f00e fc1b 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80079da:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80079de:	f504 7994 	add.w	r9, r4, #296	; 0x128
 80079e2:	4618      	mov	r0, r3
 80079e4:	ee0a 3a90 	vmov	s21, r3
 80079e8:	f7fb fed6 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80079ec:	4648      	mov	r0, r9
 80079ee:	f7fb fed3 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80079f2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80079f6:	4618      	mov	r0, r3
 80079f8:	ee0b 3a10 	vmov	s22, r3
 80079fc:	f7fb fecc 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8007a00:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8007a04:	4618      	mov	r0, r3
 8007a06:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a0a:	4ead      	ldr	r6, [pc, #692]	; (8007cc0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x35c>)
        : TextArea()
 8007a0c:	f7fb fec4 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8007a10:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8007a14:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8007a18:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a1a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8007a1e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8007a22:	f7fb feb9 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8007a26:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8007a2a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007a2c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8007a30:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8007a34:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8007a38:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8007a3c:	f7fb feac 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007a40:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8007a44:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8007a48:	4650      	mov	r0, sl
 8007a4a:	f00d ff6d 	bl	8015928 <_ZN8touchgfx5GaugeC1Ev>
 8007a4e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007a52:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007a54:	4e9b      	ldr	r6, [pc, #620]	; (8007cc4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x360>)
 8007a56:	ee08 3a10 	vmov	s16, r3
 8007a5a:	f00c ff95 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8007a5e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8007a62:	4618      	mov	r0, r3
 8007a64:	9302      	str	r3, [sp, #8]
 8007a66:	f7fb fc37 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007a6a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007a6e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007a72:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007a76:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8007a7a:	4618      	mov	r0, r3
 8007a7c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007a80:	ee09 3a10 	vmov	s18, r3
 8007a84:	f7fb fe88 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8007a88:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8007a8c:	4618      	mov	r0, r3
 8007a8e:	ee08 3a90 	vmov	s17, r3
 8007a92:	f00c ff79 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8007a96:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8007a9a:	4618      	mov	r0, r3
 8007a9c:	9303      	str	r3, [sp, #12]
 8007a9e:	f7fb fc1b 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007aa2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8007aa6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8007aaa:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8007aae:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8007ab2:	4618      	mov	r0, r3
 8007ab4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8007ab8:	ee09 3a90 	vmov	s19, r3
 8007abc:	f7fb fe6c 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8007ac0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8007ac4:	4618      	mov	r0, r3
 8007ac6:	ee0a 3a10 	vmov	s20, r3
 8007aca:	f7fb fe65 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ace:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ad2:	4a7d      	ldr	r2, [pc, #500]	; (8007cc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x364>)
 8007ad4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8007ad8:	4a7c      	ldr	r2, [pc, #496]	; (8007ccc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x368>)
 8007ada:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8007ade:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8007ae2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007ae6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007aea:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8007aee:	f00f fa4b 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007af2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007af6:	462a      	mov	r2, r5
 8007af8:	4640      	mov	r0, r8
 8007afa:	9300      	str	r3, [sp, #0]
 8007afc:	4629      	mov	r1, r5
 8007afe:	23f0      	movs	r3, #240	; 0xf0
 8007b00:	f7fb fdc1 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b04:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007b06:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b0a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b0c:	4641      	mov	r1, r8
 8007b0e:	4630      	mov	r0, r6
 8007b10:	f00a fe6e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8007b14:	462a      	mov	r2, r5
 8007b16:	4638      	mov	r0, r7
 8007b18:	4629      	mov	r1, r5
 8007b1a:	f7fb fda7 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007b1e:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007b22:	4638      	mov	r0, r7
 8007b24:	a90a      	add	r1, sp, #40	; 0x28
 8007b26:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b2a:	f00e fa3a 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b2e:	4639      	mov	r1, r7
 8007b30:	4630      	mov	r0, r6
 8007b32:	f00a fe5d 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 8007b36:	4658      	mov	r0, fp
 8007b38:	f240 1201 	movw	r2, #257	; 0x101
 8007b3c:	2121      	movs	r1, #33	; 0x21
 8007b3e:	f7fb fd95 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007b42:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b44:	a909      	add	r1, sp, #36	; 0x24
 8007b46:	4658      	mov	r0, fp
 8007b48:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007b4c:	aa0a      	add	r2, sp, #40	; 0x28
 8007b4e:	2302      	movs	r3, #2
 8007b50:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007b54:	f00e f82f 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007b58:	f04f 024b 	mov.w	r2, #75	; 0x4b
 8007b5c:	f8a4 20d0 	strh.w	r2, [r4, #208]	; 0xd0
        updateTextPosition();
 8007b60:	4658      	mov	r0, fp
 8007b62:	f7fb fdc7 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8007b66:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8007b6a:	f04f 38ff 	mov.w	r8, #4294967295
 8007b6e:	3308      	adds	r3, #8
 8007b70:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007b74:	4659      	mov	r1, fp
 8007b76:	4630      	mov	r0, r6
        colorPressed = col;
 8007b78:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8007b7c:	af04      	add	r7, sp, #16
 8007b7e:	f00a fe37 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8007b82:	22c2      	movs	r2, #194	; 0xc2
 8007b84:	ee1a 0a90 	vmov	r0, s21
 8007b88:	4629      	mov	r1, r5
 8007b8a:	f7fb fd6f 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007b8e:	ee1a 1a90 	vmov	r1, s21
 8007b92:	4638      	mov	r0, r7
        color = newColor;
 8007b94:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 8007b98:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007b9c:	f00d f9b6 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ba0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007ba4:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8007ba8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007bac:	f04f 0b0a 	mov.w	fp, #10
 8007bb0:	4b47      	ldr	r3, [pc, #284]	; (8007cd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007bb2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HYQ8));
 8007bb4:	ee1a 0a90 	vmov	r0, s21
 8007bb8:	a90a      	add	r1, sp, #40	; 0x28
 8007bba:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8007bbe:	f00d fc3f 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bc2:	ee1a 1a90 	vmov	r1, s21
 8007bc6:	4630      	mov	r0, r6
 8007bc8:	f00a fe12 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8007bcc:	22c2      	movs	r2, #194	; 0xc2
 8007bce:	4648      	mov	r0, r9
 8007bd0:	21d9      	movs	r1, #217	; 0xd9
 8007bd2:	f7fb fd4b 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007bd6:	4649      	mov	r1, r9
 8007bd8:	4638      	mov	r0, r7
        color = newColor;
 8007bda:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8007bde:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8007be2:	f00d f993 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007be6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007bea:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 8007bee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bf2:	4b37      	ldr	r3, [pc, #220]	; (8007cd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007bf4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MW1V));
 8007bf6:	4648      	mov	r0, r9
 8007bf8:	2309      	movs	r3, #9
 8007bfa:	a90a      	add	r1, sp, #40	; 0x28
 8007bfc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c00:	f00d fc1e 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c04:	4649      	mov	r1, r9
 8007c06:	4630      	mov	r0, r6
 8007c08:	f00a fdf2 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 8007c0c:	2255      	movs	r2, #85	; 0x55
 8007c0e:	ee1b 0a10 	vmov	r0, s22
 8007c12:	2171      	movs	r1, #113	; 0x71
 8007c14:	f7fb fd2a 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007c18:	ee1b 1a10 	vmov	r1, s22
 8007c1c:	4638      	mov	r0, r7
        color = newColor;
 8007c1e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8007c22:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8007c26:	f00d f971 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c2a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c2e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007c32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c36:	4b26      	ldr	r3, [pc, #152]	; (8007cd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x36c>)
 8007c38:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H3VA));
 8007c3a:	ee1b 0a10 	vmov	r0, s22
 8007c3e:	f04f 0308 	mov.w	r3, #8
 8007c42:	a90a      	add	r1, sp, #40	; 0x28
 8007c44:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c48:	f00d fbfa 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c4c:	ee1b 1a10 	vmov	r1, s22
 8007c50:	4630      	mov	r0, r6
 8007c52:	f00a fdcd 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Current.setPosition(0, 239, 240, 15);
 8007c56:	230f      	movs	r3, #15
 8007c58:	22ef      	movs	r2, #239	; 0xef
 8007c5a:	ee1b 0a90 	vmov	r0, s23
 8007c5e:	9300      	str	r3, [sp, #0]
 8007c60:	4629      	mov	r1, r5
 8007c62:	23f0      	movs	r3, #240	; 0xf0
 8007c64:	f7fb fd0f 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c68:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 8007c6c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8007c70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007c74:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8007c78:	ee1b 1a90 	vmov	r1, s23
 8007c7c:	4638      	mov	r0, r7
 8007c7e:	4798      	blx	r3
 8007c80:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007c84:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007c88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c8c:	4b11      	ldr	r3, [pc, #68]	; (8007cd4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x370>)
 8007c8e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(AMD1_CurrentBuffer, AMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DKHH).getText());
 8007c90:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 8007c94:	b92b      	cbnz	r3, 8007ca2 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x33e>
 8007c96:	4b10      	ldr	r3, [pc, #64]	; (8007cd8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x374>)
 8007c98:	4a10      	ldr	r2, [pc, #64]	; (8007cdc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007c9a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007c9c:	4810      	ldr	r0, [pc, #64]	; (8007ce0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x37c>)
 8007c9e:	f025 fe4f 	bl	802d940 <__assert_func>
 8007ca2:	4b10      	ldr	r3, [pc, #64]	; (8007ce4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x380>)
 8007ca4:	881b      	ldrh	r3, [r3, #0]
 8007ca6:	2b0e      	cmp	r3, #14
 8007ca8:	d820      	bhi.n	8007cec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x388>
 8007caa:	4b0f      	ldr	r3, [pc, #60]	; (8007ce8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x384>)
 8007cac:	4a0b      	ldr	r2, [pc, #44]	; (8007cdc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x378>)
 8007cae:	2161      	movs	r1, #97	; 0x61
 8007cb0:	e7f4      	b.n	8007c9c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x338>
 8007cb2:	bf00      	nop
 8007cb4:	08030b78 	.word	0x08030b78
 8007cb8:	08031a48 	.word	0x08031a48
 8007cbc:	08031c94 	.word	0x08031c94
 8007cc0:	0802f594 	.word	0x0802f594
 8007cc4:	0803177c 	.word	0x0803177c
 8007cc8:	08030b60 	.word	0x08030b60
 8007ccc:	0800794d 	.word	0x0800794d
 8007cd0:	0802f4f4 	.word	0x0802f4f4
 8007cd4:	20013894 	.word	0x20013894
 8007cd8:	0802f344 	.word	0x0802f344
 8007cdc:	0802f449 	.word	0x0802f449
 8007ce0:	0802f3c1 	.word	0x0802f3c1
 8007ce4:	20013898 	.word	0x20013898
 8007ce8:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8007cec:	4bde      	ldr	r3, [pc, #888]	; (8008068 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007cee:	210e      	movs	r1, #14
 8007cf0:	6818      	ldr	r0, [r3, #0]
 8007cf2:	f002 fcc9 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8007cf6:	4add      	ldr	r2, [pc, #884]	; (800806c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007cf8:	4603      	mov	r3, r0
 8007cfa:	4659      	mov	r1, fp
 8007cfc:	4648      	mov	r0, r9
 8007cfe:	f013 fffd 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007d02:	f04f 010f 	mov.w	r1, #15
 8007d06:	4ada      	ldr	r2, [pc, #872]	; (8008070 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
        wc1 = value;
 8007d08:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    AMD1_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENTAMD1_CURRENT));
 8007d0c:	ee1b 0a90 	vmov	r0, s23
 8007d10:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007d14:	a90a      	add	r1, sp, #40	; 0x28
 8007d16:	920a      	str	r2, [sp, #40]	; 0x28
 8007d18:	f00d fb92 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d1c:	ee1b 1a90 	vmov	r1, s23
 8007d20:	4630      	mov	r0, r6
 8007d22:	f00a fd65 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Frequency.setPosition(0, 224, 240, 15);
 8007d26:	210f      	movs	r1, #15
 8007d28:	22e0      	movs	r2, #224	; 0xe0
 8007d2a:	ee1c 0a10 	vmov	r0, s24
 8007d2e:	9100      	str	r1, [sp, #0]
 8007d30:	23f0      	movs	r3, #240	; 0xf0
 8007d32:	4629      	mov	r1, r5
 8007d34:	f7fb fca7 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007d38:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 8007d3c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8007d40:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007d44:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8007d48:	ee1c 1a10 	vmov	r1, s24
 8007d4c:	4638      	mov	r0, r7
 8007d4e:	4798      	blx	r3
 8007d50:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007d54:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007d58:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007d5c:	49c5      	ldr	r1, [pc, #788]	; (8008074 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007d5e:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_FrequencyBuffer, AMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_23ZO).getText());
 8007d60:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8007d64:	2b00      	cmp	r3, #0
 8007d66:	d096      	beq.n	8007c96 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007d68:	48c3      	ldr	r0, [pc, #780]	; (8008078 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007d6a:	8803      	ldrh	r3, [r0, #0]
 8007d6c:	2b0c      	cmp	r3, #12
 8007d6e:	d99c      	bls.n	8007caa <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007d70:	4bbd      	ldr	r3, [pc, #756]	; (8008068 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007d72:	210c      	movs	r1, #12
 8007d74:	6818      	ldr	r0, [r3, #0]
 8007d76:	f002 fc87 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8007d7a:	4abc      	ldr	r2, [pc, #752]	; (800806c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007d7c:	4603      	mov	r3, r0
 8007d7e:	4659      	mov	r1, fp
 8007d80:	4648      	mov	r0, r9
 8007d82:	f013 ffbb 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    AMD1_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8007d86:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
        : typedTextId(id)
 8007d8a:	4ab9      	ldr	r2, [pc, #740]	; (8008070 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007d8c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8007d90:	230d      	movs	r3, #13
 8007d92:	4661      	mov	r1, ip
 8007d94:	ee1c 0a10 	vmov	r0, s24
 8007d98:	920a      	str	r2, [sp, #40]	; 0x28
 8007d9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d9e:	f00d fb4f 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007da2:	ee1c 1a10 	vmov	r1, s24
 8007da6:	4630      	mov	r0, r6
 8007da8:	f00a fd22 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD1_Distance.setPosition(0, 209, 240, 15);
 8007dac:	f04f 0c0f 	mov.w	ip, #15
 8007db0:	22d1      	movs	r2, #209	; 0xd1
 8007db2:	ee1c 0a90 	vmov	r0, s25
 8007db6:	f8cd c000 	str.w	ip, [sp]
 8007dba:	23f0      	movs	r3, #240	; 0xf0
 8007dbc:	4629      	mov	r1, r5
 8007dbe:	f7fb fc62 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dc2:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8007dc6:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8007dca:	4638      	mov	r0, r7
 8007dcc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007dd0:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8007dd4:	ee1c 1a90 	vmov	r1, s25
 8007dd8:	4798      	blx	r3
 8007dda:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007dde:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8007de2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007de6:	49a3      	ldr	r1, [pc, #652]	; (8008074 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x710>)
 8007de8:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(AMD1_DistanceBuffer, AMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7DZL).getText());
 8007dea:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8007dee:	2b00      	cmp	r3, #0
 8007df0:	f43f af51 	beq.w	8007c96 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x332>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007df4:	48a0      	ldr	r0, [pc, #640]	; (8008078 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x714>)
 8007df6:	8803      	ldrh	r3, [r0, #0]
 8007df8:	2b0b      	cmp	r3, #11
 8007dfa:	f67f af56 	bls.w	8007caa <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x346>
        return texts->getText(typedTextId);
 8007dfe:	4b9a      	ldr	r3, [pc, #616]	; (8008068 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x704>)
 8007e00:	210b      	movs	r1, #11
 8007e02:	6818      	ldr	r0, [r3, #0]
 8007e04:	f002 fc40 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8007e08:	4a98      	ldr	r2, [pc, #608]	; (800806c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x708>)
 8007e0a:	4603      	mov	r3, r0
 8007e0c:	4659      	mov	r1, fp
 8007e0e:	4638      	mov	r0, r7
 8007e10:	f013 ff74 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007e14:	4a96      	ldr	r2, [pc, #600]	; (8008070 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007e16:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8007e1a:	2336      	movs	r3, #54	; 0x36
    AMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8007e1c:	ee1c 0a90 	vmov	r0, s25
 8007e20:	a90a      	add	r1, sp, #40	; 0x28
 8007e22:	920a      	str	r2, [sp, #40]	; 0x28
 8007e24:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e28:	f00d fb0a 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e2c:	ee1c 1a90 	vmov	r1, s25
 8007e30:	4630      	mov	r0, r6
 8007e32:	f00a fcdd 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007e36:	2304      	movs	r3, #4
    AMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007e38:	a90a      	add	r1, sp, #40	; 0x28
 8007e3a:	4650      	mov	r0, sl
 8007e3c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e40:	f00a fc68 	bl	8012714 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD1_Gauge.setPosition(28, 103, 184, 106);
 8007e44:	236a      	movs	r3, #106	; 0x6a
 8007e46:	9300      	str	r3, [sp, #0]
 8007e48:	2267      	movs	r2, #103	; 0x67
 8007e4a:	23b8      	movs	r3, #184	; 0xb8
 8007e4c:	211c      	movs	r1, #28
 8007e4e:	4650      	mov	r0, sl
 8007e50:	f7fb fc19 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD1_Gauge.setCenter(92, 92);
 8007e54:	225c      	movs	r2, #92	; 0x5c
 8007e56:	4611      	mov	r1, r2
 8007e58:	4650      	mov	r0, sl
 8007e5a:	f00d fe10 	bl	8015a7e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD1_Gauge.setStartEndAngle(-90, 90);
 8007e5e:	225a      	movs	r2, #90	; 0x5a
 8007e60:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e64:	4650      	mov	r0, sl
 8007e66:	f00d fe8f 	bl	8015b88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD1_Gauge.setRange(-90, 90);
 8007e6a:	462b      	mov	r3, r5
 8007e6c:	225a      	movs	r2, #90	; 0x5a
 8007e6e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007e72:	4650      	mov	r0, sl
 8007e74:	9500      	str	r5, [sp, #0]
 8007e76:	f00a fafa 	bl	801246e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD1_Gauge.setValue(0);
 8007e7a:	4629      	mov	r1, r5
 8007e7c:	4650      	mov	r0, sl
 8007e7e:	f00d fe2d 	bl	8015adc <_ZN8touchgfx5Gauge8setValueEi>
    AMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007e82:	2335      	movs	r3, #53	; 0x35
 8007e84:	2208      	movs	r2, #8
 8007e86:	2105      	movs	r1, #5
 8007e88:	4650      	mov	r0, sl
 8007e8a:	f00d fde3 	bl	8015a54 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007e8e:	2101      	movs	r1, #1
 8007e90:	4650      	mov	r0, sl
 8007e92:	f00d fd81 	bl	8015998 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007e96:	2101      	movs	r1, #1
 8007e98:	4650      	mov	r0, sl
 8007e9a:	f00d fd80 	bl	801599e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007e9e:	4651      	mov	r1, sl
 8007ea0:	4630      	mov	r0, r6
 8007ea2:	f00a fca5 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8007ea6:	ee18 0a10 	vmov	r0, s16
 8007eaa:	23f0      	movs	r3, #240	; 0xf0
 8007eac:	224b      	movs	r2, #75	; 0x4b
 8007eae:	4629      	mov	r1, r5
 8007eb0:	f8cd b000 	str.w	fp, [sp]
 8007eb4:	f7fb fbe7 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007eb8:	9b02      	ldr	r3, [sp, #8]
 8007eba:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ebe:	22a0      	movs	r2, #160	; 0xa0
 8007ec0:	4611      	mov	r1, r2
 8007ec2:	ee18 0a10 	vmov	r0, s16
 8007ec6:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007eca:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8007ece:	f00c fe71 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007ed2:	ee18 0a10 	vmov	r0, s16
 8007ed6:	22a0      	movs	r2, #160	; 0xa0
 8007ed8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007edc:	f00c fe75 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007ee0:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007ee4:	2b20      	cmp	r3, #32
 8007ee6:	d006      	beq.n	8007ef6 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x592>
        lineWidthQ5 = widthQ5;
 8007ee8:	2320      	movs	r3, #32
        updateCachedShape();
 8007eea:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8007eee:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007ef2:	f00c fd69 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007ef6:	ee18 0a10 	vmov	r0, s16
 8007efa:	2101      	movs	r1, #1
 8007efc:	f00c fe70 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007f00:	ee18 1a10 	vmov	r1, s16
 8007f04:	4630      	mov	r0, r6
 8007f06:	f00a fc73 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007f0a:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 8007f0e:	223c      	movs	r2, #60	; 0x3c
 8007f10:	ee19 0a10 	vmov	r0, s18
 8007f14:	2117      	movs	r1, #23
        linespace = space;
 8007f16:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8007f1a:	ad04      	add	r5, sp, #16
 8007f1c:	f7fb fba6 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8007f20:	ee19 1a10 	vmov	r1, s18
 8007f24:	4628      	mov	r0, r5
        color = newColor;
 8007f26:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8007f2a:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007f2e:	f00c ffed 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007f32:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007f36:	ee19 3a10 	vmov	r3, s18
 8007f3a:	333c      	adds	r3, #60	; 0x3c
 8007f3c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007f40:	4f4b      	ldr	r7, [pc, #300]	; (8008070 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x70c>)
 8007f42:	970a      	str	r7, [sp, #40]	; 0x28
 8007f44:	234c      	movs	r3, #76	; 0x4c
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8007f46:	ee19 0a10 	vmov	r0, s18
 8007f4a:	a90a      	add	r1, sp, #40	; 0x28
 8007f4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f50:	f00d fa76 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f54:	ee19 1a10 	vmov	r1, s18
 8007f58:	4630      	mov	r0, r6
 8007f5a:	f00a fc49 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007f5e:	230a      	movs	r3, #10
 8007f60:	ee18 0a90 	vmov	r0, s17
 8007f64:	9300      	str	r3, [sp, #0]
 8007f66:	2232      	movs	r2, #50	; 0x32
 8007f68:	23f0      	movs	r3, #240	; 0xf0
 8007f6a:	4649      	mov	r1, r9
 8007f6c:	f7fb fb8b 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f70:	9b03      	ldr	r3, [sp, #12]
 8007f72:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f76:	22a0      	movs	r2, #160	; 0xa0
 8007f78:	4611      	mov	r1, r2
 8007f7a:	ee18 0a90 	vmov	r0, s17
 8007f7e:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8007f82:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8007f86:	f00c fe15 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f8a:	ee18 0a90 	vmov	r0, s17
 8007f8e:	22a0      	movs	r2, #160	; 0xa0
 8007f90:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007f94:	f00c fe19 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007f98:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8007f9c:	2b20      	cmp	r3, #32
 8007f9e:	d006      	beq.n	8007fae <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x64a>
        lineWidthQ5 = widthQ5;
 8007fa0:	2320      	movs	r3, #32
        updateCachedShape();
 8007fa2:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8007fa6:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8007faa:	f00c fd0d 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007fae:	ee18 0a90 	vmov	r0, s17
 8007fb2:	2101      	movs	r1, #1
 8007fb4:	f00c fe14 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007fb8:	ee18 1a90 	vmov	r1, s17
 8007fbc:	4630      	mov	r0, r6
 8007fbe:	f00a fc17 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007fc2:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8007fc6:	ee19 0a90 	vmov	r0, s19
 8007fca:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007fcc:	f04f 0800 	mov.w	r8, #0
 8007fd0:	2145      	movs	r1, #69	; 0x45
 8007fd2:	f7fb fb4b 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007fd6:	ee19 1a90 	vmov	r1, s19
 8007fda:	4628      	mov	r0, r5
        color = newColor;
 8007fdc:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8007fe0:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8007fe4:	f00c ff92 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007fe8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007fec:	ee19 3a90 	vmov	r3, s19
 8007ff0:	333c      	adds	r3, #60	; 0x3c
 8007ff2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ff6:	234d      	movs	r3, #77	; 0x4d
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8007ff8:	ee19 0a90 	vmov	r0, s19
 8007ffc:	a90a      	add	r1, sp, #40	; 0x28
 8007ffe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008002:	970a      	str	r7, [sp, #40]	; 0x28
 8008004:	f00d fa1c 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008008:	ee19 1a90 	vmov	r1, s19
 800800c:	4630      	mov	r0, r6
 800800e:	f00a fbef 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008012:	ee1a 0a10 	vmov	r0, s20
 8008016:	220c      	movs	r2, #12
 8008018:	2136      	movs	r1, #54	; 0x36
 800801a:	f7fb fb27 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800801e:	ee1a 1a10 	vmov	r1, s20
 8008022:	4628      	mov	r0, r5
        color = newColor;
 8008024:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8008028:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 800802c:	f00c ff6e 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008030:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008034:	ee1a 3a10 	vmov	r3, s20
 8008038:	333c      	adds	r3, #60	; 0x3c
 800803a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800803e:	234e      	movs	r3, #78	; 0x4e
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8008040:	ee1a 0a10 	vmov	r0, s20
 8008044:	a90a      	add	r1, sp, #40	; 0x28
 8008046:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800804a:	970a      	str	r7, [sp, #40]	; 0x28
 800804c:	f00d f9f8 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008050:	4630      	mov	r0, r6
 8008052:	ee1a 1a10 	vmov	r1, s20
 8008056:	f00a fbcb 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800805a:	4620      	mov	r0, r4
 800805c:	b00d      	add	sp, #52	; 0x34
 800805e:	ecbd 8b0a 	vpop	{d8-d12}
 8008062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008066:	bf00      	nop
 8008068:	200138a0 	.word	0x200138a0
 800806c:	0802f481 	.word	0x0802f481
 8008070:	0802f4f4 	.word	0x0802f4f4
 8008074:	20013894 	.word	0x20013894
 8008078:	20013898 	.word	0x20013898

0800807c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 800807c:	4770      	bx	lr

0800807e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800807e:	4770      	bx	lr

08008080 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008080:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008082:	68c2      	ldr	r2, [r0, #12]
 8008084:	6844      	ldr	r4, [r0, #4]
 8008086:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008088:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800808a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800808e:	07d2      	lsls	r2, r2, #31
 8008090:	bf48      	it	mi
 8008092:	5962      	ldrmi	r2, [r4, r5]
 8008094:	689b      	ldr	r3, [r3, #8]
    }
 8008096:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008098:	bf48      	it	mi
 800809a:	58d3      	ldrmi	r3, [r2, r3]
 800809c:	4718      	bx	r3

0800809e <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800809e:	6843      	ldr	r3, [r0, #4]
 80080a0:	b12b      	cbz	r3, 80080ae <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80080a2:	6883      	ldr	r3, [r0, #8]
 80080a4:	b92b      	cbnz	r3, 80080b2 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80080a6:	68c0      	ldr	r0, [r0, #12]
 80080a8:	f000 0001 	and.w	r0, r0, #1
 80080ac:	4770      	bx	lr
 80080ae:	4618      	mov	r0, r3
 80080b0:	4770      	bx	lr
 80080b2:	2001      	movs	r0, #1
    }
 80080b4:	4770      	bx	lr

080080b6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80080b6:	b510      	push	{r4, lr}
 80080b8:	2110      	movs	r1, #16
 80080ba:	4604      	mov	r4, r0
 80080bc:	f024 fd59 	bl	802cb72 <_ZdlPvj>
 80080c0:	4620      	mov	r0, r4
 80080c2:	bd10      	pop	{r4, pc}

080080c4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080c4:	b510      	push	{r4, lr}
 80080c6:	4b03      	ldr	r3, [pc, #12]	; (80080d4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 80080c8:	6003      	str	r3, [r0, #0]
 80080ca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080cc:	f00e ff66 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080d0:	4620      	mov	r0, r4
 80080d2:	bd10      	pop	{r4, pc}
 80080d4:	08030bc4 	.word	0x08030bc4

080080d8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80080d8:	b507      	push	{r0, r1, r2, lr}
 80080da:	4b07      	ldr	r3, [pc, #28]	; (80080f8 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 80080dc:	6003      	str	r3, [r0, #0]
 80080de:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80080e0:	f00e ff5c 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80080e4:	9801      	ldr	r0, [sp, #4]
 80080e6:	f241 4178 	movw	r1, #5240	; 0x1478
 80080ea:	f024 fd42 	bl	802cb72 <_ZdlPvj>
 80080ee:	9801      	ldr	r0, [sp, #4]
 80080f0:	b003      	add	sp, #12
 80080f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80080f6:	bf00      	nop
 80080f8:	08030bc4 	.word	0x08030bc4

080080fc <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 80080fc:	3098      	adds	r0, #152	; 0x98
 80080fe:	4288      	cmp	r0, r1
{
 8008100:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8008102:	d105      	bne.n	8008110 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008104:	f010 fc4c 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8008108:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 800810c:	f7fd baa0 	b.w	8005650 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8008110:	bd08      	pop	{r3, pc}
	...

08008114 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8008114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008118:	ed2d 8b0a 	vpush	{d8-d12}
 800811c:	4604      	mov	r4, r0
 800811e:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8008120:	46a0      	mov	r8, r4
 8008122:	2500      	movs	r5, #0
 8008124:	f012 f8bc 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8008128:	4bcf      	ldr	r3, [pc, #828]	; (8008468 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x354>)
 800812a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800812c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008130:	2226      	movs	r2, #38	; 0x26
 8008132:	4629      	mov	r1, r5
 8008134:	4640      	mov	r0, r8
 8008136:	f025 fe08 	bl	802dd4a <memset>
 800813a:	4640      	mov	r0, r8
 800813c:	f7fb fac8 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8008140:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008144:	26ff      	movs	r6, #255	; 0xff
 8008146:	4bc9      	ldr	r3, [pc, #804]	; (800846c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x358>)
 8008148:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800814a:	2226      	movs	r2, #38	; 0x26
 800814c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008150:	4629      	mov	r1, r5
 8008152:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008156:	4638      	mov	r0, r7
 8008158:	66a5      	str	r5, [r4, #104]	; 0x68
 800815a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800815e:	f025 fdf4 	bl	802dd4a <memset>
 8008162:	4638      	mov	r0, r7
 8008164:	f7fb fab4 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8008168:	4bc1      	ldr	r3, [pc, #772]	; (8008470 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x35c>)
 800816a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800816c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8008170:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008174:	a90c      	add	r1, sp, #48	; 0x30
 8008176:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800817a:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 800817c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008180:	f00d ff0f 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008184:	4658      	mov	r0, fp
 8008186:	f00e f843 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800818a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800818e:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008192:	4618      	mov	r0, r3
 8008194:	ee0a 3a90 	vmov	s21, r3
 8008198:	f7fb fafe 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 800819c:	4648      	mov	r0, r9
 800819e:	f7fb fafb 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80081a2:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80081a6:	4618      	mov	r0, r3
 80081a8:	ee0b 3a10 	vmov	s22, r3
 80081ac:	f7fb faf4 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80081b0:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80081b4:	4618      	mov	r0, r3
 80081b6:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081ba:	4eae      	ldr	r6, [pc, #696]	; (8008474 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x360>)
        : TextArea()
 80081bc:	f7fb faec 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80081c0:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80081c4:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80081c8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081ca:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80081ce:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80081d2:	f7fb fae1 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80081d6:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80081da:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80081dc:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80081e0:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80081e4:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80081e8:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80081ec:	f7fb fad4 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80081f0:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80081f4:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 80081f8:	4650      	mov	r0, sl
 80081fa:	f00d fb95 	bl	8015928 <_ZN8touchgfx5GaugeC1Ev>
 80081fe:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008202:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008204:	4e9c      	ldr	r6, [pc, #624]	; (8008478 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x364>)
 8008206:	ee08 3a10 	vmov	s16, r3
 800820a:	f00c fbbd 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 800820e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008212:	4618      	mov	r0, r3
 8008214:	9303      	str	r3, [sp, #12]
 8008216:	f7fb f85f 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800821a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800821e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008222:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008226:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 800822a:	4618      	mov	r0, r3
 800822c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008230:	ee09 3a10 	vmov	s18, r3
 8008234:	f7fb fab0 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008238:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800823c:	4618      	mov	r0, r3
 800823e:	ee08 3a90 	vmov	s17, r3
 8008242:	f00c fba1 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8008246:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 800824a:	4618      	mov	r0, r3
 800824c:	9304      	str	r3, [sp, #16]
 800824e:	f7fb f843 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008252:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008256:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 800825a:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 800825e:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008262:	4618      	mov	r0, r3
 8008264:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008268:	ee09 3a90 	vmov	s19, r3
 800826c:	f7fb fa94 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008270:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008274:	4618      	mov	r0, r3
 8008276:	ee0a 3a10 	vmov	s20, r3
 800827a:	f7fb fa8d 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800827e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008282:	4a7e      	ldr	r2, [pc, #504]	; (800847c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x368>)
 8008284:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008288:	4a7d      	ldr	r2, [pc, #500]	; (8008480 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x36c>)
 800828a:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 800828e:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8008292:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008296:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800829a:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 800829e:	f00e fe73 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80082a2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80082a6:	462a      	mov	r2, r5
 80082a8:	4640      	mov	r0, r8
 80082aa:	9300      	str	r3, [sp, #0]
 80082ac:	4629      	mov	r1, r5
 80082ae:	23f0      	movs	r3, #240	; 0xf0
 80082b0:	f7fb f9e9 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80082b4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80082b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082ba:	66a3      	str	r3, [r4, #104]	; 0x68
 80082bc:	4641      	mov	r1, r8
 80082be:	4630      	mov	r0, r6
 80082c0:	f00a fa96 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80082c4:	462a      	mov	r2, r5
 80082c6:	4638      	mov	r0, r7
 80082c8:	4629      	mov	r1, r5
 80082ca:	f7fb f9cf 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80082ce:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80082d2:	4638      	mov	r0, r7
 80082d4:	a90c      	add	r1, sp, #48	; 0x30
 80082d6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80082da:	f00d fe62 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082de:	4639      	mov	r1, r7
 80082e0:	4630      	mov	r0, r6
 80082e2:	f00a fa85 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 257);
 80082e6:	4658      	mov	r0, fp
 80082e8:	f240 1201 	movw	r2, #257	; 0x101
 80082ec:	2121      	movs	r1, #33	; 0x21
 80082ee:	f7fb f9bd 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80082f2:	f04f 0303 	mov.w	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80082f6:	aa0c      	add	r2, sp, #48	; 0x30
 80082f8:	a90b      	add	r1, sp, #44	; 0x2c
 80082fa:	4658      	mov	r0, fp
 80082fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008300:	f04f 0302 	mov.w	r3, #2
 8008304:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8008308:	f00d fc55 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800830c:	2347      	movs	r3, #71	; 0x47
        updateTextPosition();
 800830e:	4658      	mov	r0, fp
 8008310:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8008314:	f7fb f9ee 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_Return.setAction(buttonCallback);
 8008318:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800831c:	f04f 38ff 	mov.w	r8, #4294967295
 8008320:	3308      	adds	r3, #8
 8008322:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008326:	4659      	mov	r1, fp
 8008328:	4630      	mov	r0, r6
        colorPressed = col;
 800832a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800832e:	af06      	add	r7, sp, #24
 8008330:	f00a fa5e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8008334:	22c2      	movs	r2, #194	; 0xc2
 8008336:	ee1a 0a90 	vmov	r0, s21
 800833a:	4629      	mov	r1, r5
 800833c:	f7fb f996 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008340:	ee1a 1a90 	vmov	r1, s21
 8008344:	4638      	mov	r0, r7
        color = newColor;
 8008346:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800834a:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800834e:	f00c fddd 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008352:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008356:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800835a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800835e:	4b49      	ldr	r3, [pc, #292]	; (8008484 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 8008360:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TIF0));
 8008362:	ee1a 0a90 	vmov	r0, s21
 8008366:	2307      	movs	r3, #7
 8008368:	a90c      	add	r1, sp, #48	; 0x30
 800836a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800836e:	f00d f867 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008372:	ee1a 1a90 	vmov	r1, s21
 8008376:	4630      	mov	r0, r6
 8008378:	f00a fa3a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 800837c:	22c2      	movs	r2, #194	; 0xc2
 800837e:	4648      	mov	r0, r9
 8008380:	21d9      	movs	r1, #217	; 0xd9
 8008382:	f7fb f973 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008386:	4649      	mov	r1, r9
 8008388:	4638      	mov	r0, r7
        color = newColor;
 800838a:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 800838e:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8008392:	f00c fdbb 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008396:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800839a:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 800839e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083a2:	4b38      	ldr	r3, [pc, #224]	; (8008484 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80083a4:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_H7OA));
 80083a6:	4648      	mov	r0, r9
 80083a8:	2306      	movs	r3, #6
 80083aa:	a90c      	add	r1, sp, #48	; 0x30
 80083ac:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80083b0:	f00d f846 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083b4:	4649      	mov	r1, r9
 80083b6:	4630      	mov	r0, r6
 80083b8:	f00a fa1a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80083bc:	2255      	movs	r2, #85	; 0x55
 80083be:	ee1b 0a10 	vmov	r0, s22
 80083c2:	2171      	movs	r1, #113	; 0x71
 80083c4:	f7fb f952 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80083c8:	ee1b 1a10 	vmov	r1, s22
 80083cc:	4638      	mov	r0, r7
        color = newColor;
 80083ce:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80083d2:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80083d6:	f00c fd99 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80083da:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80083de:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80083e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80083e6:	4b27      	ldr	r3, [pc, #156]	; (8008484 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x370>)
 80083e8:	930c      	str	r3, [sp, #48]	; 0x30
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_61VS));
 80083ea:	ee1b 0a10 	vmov	r0, s22
 80083ee:	f04f 0305 	mov.w	r3, #5
 80083f2:	a90c      	add	r1, sp, #48	; 0x30
 80083f4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80083f8:	f00d f822 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083fc:	ee1b 1a10 	vmov	r1, s22
 8008400:	4630      	mov	r0, r6
 8008402:	f00a f9f5 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Current.setPosition(0, 239, 240, 15);
 8008406:	230f      	movs	r3, #15
 8008408:	22ef      	movs	r2, #239	; 0xef
 800840a:	ee1b 0a90 	vmov	r0, s23
 800840e:	9300      	str	r3, [sp, #0]
 8008410:	4629      	mov	r1, r5
 8008412:	23f0      	movs	r3, #240	; 0xf0
 8008414:	f7fb f937 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008418:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800841c:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8008420:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008424:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8008428:	ee1b 1a90 	vmov	r1, s23
 800842c:	4638      	mov	r0, r7
 800842e:	4798      	blx	r3
 8008430:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008434:	f8df 9064 	ldr.w	r9, [pc, #100]	; 800849c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x388>
 8008438:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800843c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008440:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_CurrentBuffer, AMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VDGC).getText());
 8008444:	f204 6b1c 	addw	fp, r4, #1564	; 0x61c
 8008448:	b92b      	cbnz	r3, 8008456 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x342>
 800844a:	4b0f      	ldr	r3, [pc, #60]	; (8008488 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x374>)
 800844c:	4a0f      	ldr	r2, [pc, #60]	; (800848c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 800844e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008450:	480f      	ldr	r0, [pc, #60]	; (8008490 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x37c>)
 8008452:	f025 fa75 	bl	802d940 <__assert_func>
 8008456:	4b0f      	ldr	r3, [pc, #60]	; (8008494 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x380>)
 8008458:	881b      	ldrh	r3, [r3, #0]
 800845a:	2b04      	cmp	r3, #4
 800845c:	d820      	bhi.n	80084a0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x38c>
 800845e:	4b0e      	ldr	r3, [pc, #56]	; (8008498 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x384>)
 8008460:	4a0a      	ldr	r2, [pc, #40]	; (800848c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x378>)
 8008462:	2161      	movs	r1, #97	; 0x61
 8008464:	e7f4      	b.n	8008450 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x33c>
 8008466:	bf00      	nop
 8008468:	08030bc4 	.word	0x08030bc4
 800846c:	08031a48 	.word	0x08031a48
 8008470:	08031c94 	.word	0x08031c94
 8008474:	0802f594 	.word	0x0802f594
 8008478:	0803177c 	.word	0x0803177c
 800847c:	08030bac 	.word	0x08030bac
 8008480:	080080fd 	.word	0x080080fd
 8008484:	0802f4f4 	.word	0x0802f4f4
 8008488:	0802f344 	.word	0x0802f344
 800848c:	0802f449 	.word	0x0802f449
 8008490:	0802f3c1 	.word	0x0802f3c1
 8008494:	20013898 	.word	0x20013898
 8008498:	0802f408 	.word	0x0802f408
 800849c:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80084a0:	4bdd      	ldr	r3, [pc, #884]	; (8008818 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80084a2:	2104      	movs	r1, #4
 80084a4:	6818      	ldr	r0, [r3, #0]
 80084a6:	f002 f8ef 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80084aa:	4adc      	ldr	r2, [pc, #880]	; (800881c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80084ac:	4603      	mov	r3, r0
 80084ae:	210a      	movs	r1, #10
 80084b0:	4658      	mov	r0, fp
 80084b2:	f013 fc23 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80084b6:	4ada      	ldr	r2, [pc, #872]	; (8008820 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
        wc1 = value;
 80084b8:	f8c4 b200 	str.w	fp, [r4, #512]	; 0x200
    AMD3_Current.setTypedText(touchgfx::TypedText(T_AMD3_CURRENT));
 80084bc:	ee1b 0a90 	vmov	r0, s23
 80084c0:	a90c      	add	r1, sp, #48	; 0x30
 80084c2:	f04f 0b01 	mov.w	fp, #1
 80084c6:	920c      	str	r2, [sp, #48]	; 0x30
 80084c8:	f8ad b034 	strh.w	fp, [sp, #52]	; 0x34
 80084cc:	f00c ffb8 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084d0:	ee1b 1a90 	vmov	r1, s23
 80084d4:	4630      	mov	r0, r6
 80084d6:	f00a f98b 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Frequency.setPosition(0, 224, 240, 15);
 80084da:	210f      	movs	r1, #15
 80084dc:	22e0      	movs	r2, #224	; 0xe0
 80084de:	ee1c 0a10 	vmov	r0, s24
 80084e2:	9100      	str	r1, [sp, #0]
 80084e4:	23f0      	movs	r3, #240	; 0xf0
 80084e6:	4629      	mov	r1, r5
 80084e8:	f7fb f8cd 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80084ec:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80084f0:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80084f4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80084f8:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 80084fc:	ee1c 1a10 	vmov	r1, s24
 8008500:	4638      	mov	r0, r7
 8008502:	4798      	blx	r3
 8008504:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008508:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800850c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008510:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_FrequencyBuffer, AMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RCRP).getText());
 8008514:	f504 61c6 	add.w	r1, r4, #1584	; 0x630
 8008518:	9105      	str	r1, [sp, #20]
 800851a:	2b00      	cmp	r3, #0
 800851c:	d095      	beq.n	800844a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800851e:	49c1      	ldr	r1, [pc, #772]	; (8008824 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 8008520:	880b      	ldrh	r3, [r1, #0]
 8008522:	2b03      	cmp	r3, #3
 8008524:	d99b      	bls.n	800845e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 8008526:	4bbc      	ldr	r3, [pc, #752]	; (8008818 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 8008528:	2103      	movs	r1, #3
 800852a:	6818      	ldr	r0, [r3, #0]
 800852c:	f002 f8ac 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8008530:	4aba      	ldr	r2, [pc, #744]	; (800881c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 8008532:	4603      	mov	r3, r0
 8008534:	210a      	movs	r1, #10
 8008536:	9805      	ldr	r0, [sp, #20]
 8008538:	f013 fbe0 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800853c:	9805      	ldr	r0, [sp, #20]
 800853e:	f8c4 024c 	str.w	r0, [r4, #588]	; 0x24c
    AMD3_Frequency.setTypedText(touchgfx::TypedText(T_AMD3_FREQUENCY));
 8008542:	a80c      	add	r0, sp, #48	; 0x30
        : typedTextId(id)
 8008544:	4ab6      	ldr	r2, [pc, #728]	; (8008820 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 8008546:	920c      	str	r2, [sp, #48]	; 0x30
 8008548:	230d      	movs	r3, #13
 800854a:	4601      	mov	r1, r0
 800854c:	ee1c 0a10 	vmov	r0, s24
 8008550:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008554:	f00c ff74 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008558:	ee1c 1a10 	vmov	r1, s24
 800855c:	4630      	mov	r0, r6
 800855e:	f00a f947 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    AMD3_Distance.setPosition(0, 209, 240, 15);
 8008562:	200f      	movs	r0, #15
 8008564:	22d1      	movs	r2, #209	; 0xd1
 8008566:	9000      	str	r0, [sp, #0]
 8008568:	23f0      	movs	r3, #240	; 0xf0
 800856a:	ee1c 0a90 	vmov	r0, s25
 800856e:	4629      	mov	r1, r5
 8008570:	f7fb f889 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008574:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8008578:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 800857c:	4638      	mov	r0, r7
 800857e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8008582:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8008586:	ee1c 1a90 	vmov	r1, s25
 800858a:	4798      	blx	r3
 800858c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8008590:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8008594:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008598:	f8d9 3000 	ldr.w	r3, [r9]
    Unicode::snprintf(AMD3_DistanceBuffer, AMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VKRM).getText());
 800859c:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80085a0:	2b00      	cmp	r3, #0
 80085a2:	f43f af52 	beq.w	800844a <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x336>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80085a6:	499f      	ldr	r1, [pc, #636]	; (8008824 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x710>)
 80085a8:	880b      	ldrh	r3, [r1, #0]
 80085aa:	2b02      	cmp	r3, #2
 80085ac:	f67f af57 	bls.w	800845e <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x34a>
        return texts->getText(typedTextId);
 80085b0:	4b99      	ldr	r3, [pc, #612]	; (8008818 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x704>)
 80085b2:	2102      	movs	r1, #2
 80085b4:	6818      	ldr	r0, [r3, #0]
 80085b6:	f002 f867 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80085ba:	4a98      	ldr	r2, [pc, #608]	; (800881c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x708>)
 80085bc:	4603      	mov	r3, r0
 80085be:	210a      	movs	r1, #10
 80085c0:	4638      	mov	r0, r7
 80085c2:	f013 fb9b 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80085c6:	4a96      	ldr	r2, [pc, #600]	; (8008820 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80085c8:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 80085cc:	2336      	movs	r3, #54	; 0x36
    AMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 80085ce:	ee1c 0a90 	vmov	r0, s25
 80085d2:	a90c      	add	r1, sp, #48	; 0x30
 80085d4:	920c      	str	r2, [sp, #48]	; 0x30
 80085d6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80085da:	f00c ff31 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085de:	ee1c 1a90 	vmov	r1, s25
 80085e2:	4630      	mov	r0, r6
 80085e4:	f00a f904 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80085e8:	2304      	movs	r3, #4
    AMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80085ea:	a90c      	add	r1, sp, #48	; 0x30
 80085ec:	4650      	mov	r0, sl
 80085ee:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80085f2:	f00a f88f 	bl	8012714 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    AMD3_Gauge.setPosition(28, 103, 184, 106);
 80085f6:	236a      	movs	r3, #106	; 0x6a
 80085f8:	9300      	str	r3, [sp, #0]
 80085fa:	2267      	movs	r2, #103	; 0x67
 80085fc:	23b8      	movs	r3, #184	; 0xb8
 80085fe:	211c      	movs	r1, #28
 8008600:	4650      	mov	r0, sl
 8008602:	f7fb f840 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
    AMD3_Gauge.setCenter(92, 92);
 8008606:	225c      	movs	r2, #92	; 0x5c
 8008608:	4611      	mov	r1, r2
 800860a:	4650      	mov	r0, sl
 800860c:	f00d fa37 	bl	8015a7e <_ZN8touchgfx5Gauge9setCenterEii>
    AMD3_Gauge.setStartEndAngle(-90, 90);
 8008610:	225a      	movs	r2, #90	; 0x5a
 8008612:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008616:	4650      	mov	r0, sl
 8008618:	f00d fab6 	bl	8015b88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    AMD3_Gauge.setRange(-90, 90);
 800861c:	462b      	mov	r3, r5
 800861e:	225a      	movs	r2, #90	; 0x5a
 8008620:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8008624:	4650      	mov	r0, sl
 8008626:	9500      	str	r5, [sp, #0]
 8008628:	f009 ff21 	bl	801246e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    AMD3_Gauge.setValue(0);
 800862c:	4629      	mov	r1, r5
 800862e:	4650      	mov	r0, sl
 8008630:	f00d fa54 	bl	8015adc <_ZN8touchgfx5Gauge8setValueEi>
    AMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8008634:	2335      	movs	r3, #53	; 0x35
 8008636:	2208      	movs	r2, #8
 8008638:	2105      	movs	r1, #5
 800863a:	4650      	mov	r0, sl
 800863c:	f00d fa0a 	bl	8015a54 <_ZN8touchgfx5Gauge9setNeedleEtss>
    AMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008640:	4659      	mov	r1, fp
 8008642:	4650      	mov	r0, sl
 8008644:	f00d f9a8 	bl	8015998 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    AMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8008648:	4659      	mov	r1, fp
 800864a:	4650      	mov	r0, sl
 800864c:	f00d f9a7 	bl	801599e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8008650:	4651      	mov	r1, sl
 8008652:	4630      	mov	r0, r6
 8008654:	f00a f8cc 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008658:	230a      	movs	r3, #10
 800865a:	ee18 0a10 	vmov	r0, s16
 800865e:	9300      	str	r3, [sp, #0]
 8008660:	224b      	movs	r2, #75	; 0x4b
 8008662:	23f0      	movs	r3, #240	; 0xf0
 8008664:	4629      	mov	r1, r5
 8008666:	f7fb f80e 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 800866a:	9b03      	ldr	r3, [sp, #12]
 800866c:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008670:	22a0      	movs	r2, #160	; 0xa0
 8008672:	4611      	mov	r1, r2
 8008674:	ee18 0a10 	vmov	r0, s16
 8008678:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800867c:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8008680:	f00c fa98 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008684:	ee18 0a10 	vmov	r0, s16
 8008688:	22a0      	movs	r2, #160	; 0xa0
 800868a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800868e:	f00c fa9c 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008692:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8008696:	2b20      	cmp	r3, #32
 8008698:	d006      	beq.n	80086a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x594>
        lineWidthQ5 = widthQ5;
 800869a:	2320      	movs	r3, #32
        updateCachedShape();
 800869c:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80086a0:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80086a4:	f00c f990 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80086a8:	ee18 0a10 	vmov	r0, s16
 80086ac:	2101      	movs	r1, #1
 80086ae:	f00c fa97 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80086b2:	ee18 1a10 	vmov	r1, s16
 80086b6:	4630      	mov	r0, r6
 80086b8:	f00a f89a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80086bc:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(23, 60);
 80086c0:	223c      	movs	r2, #60	; 0x3c
 80086c2:	ee19 0a10 	vmov	r0, s18
 80086c6:	2117      	movs	r1, #23
        linespace = space;
 80086c8:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 80086cc:	ad06      	add	r5, sp, #24
 80086ce:	f7fa ffcd 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80086d2:	ee19 1a10 	vmov	r1, s18
 80086d6:	4628      	mov	r0, r5
        color = newColor;
 80086d8:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 80086dc:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80086e0:	f00c fc14 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80086e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80086e8:	ee19 3a10 	vmov	r3, s18
 80086ec:	333c      	adds	r3, #60	; 0x3c
 80086ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80086f2:	4f4b      	ldr	r7, [pc, #300]	; (8008820 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x70c>)
 80086f4:	970c      	str	r7, [sp, #48]	; 0x30
 80086f6:	2348      	movs	r3, #72	; 0x48
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80086f8:	ee19 0a10 	vmov	r0, s18
 80086fc:	a90c      	add	r1, sp, #48	; 0x30
 80086fe:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8008702:	f00c fe9d 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008706:	ee19 1a10 	vmov	r1, s18
 800870a:	4630      	mov	r0, r6
 800870c:	f00a f870 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008710:	230a      	movs	r3, #10
 8008712:	ee18 0a90 	vmov	r0, s17
 8008716:	9300      	str	r3, [sp, #0]
 8008718:	2232      	movs	r2, #50	; 0x32
 800871a:	23f0      	movs	r3, #240	; 0xf0
 800871c:	4649      	mov	r1, r9
 800871e:	f7fa ffb2 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008722:	9b04      	ldr	r3, [sp, #16]
 8008724:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008728:	22a0      	movs	r2, #160	; 0xa0
 800872a:	4611      	mov	r1, r2
 800872c:	ee18 0a90 	vmov	r0, s17
 8008730:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8008734:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8008738:	f00c fa3c 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800873c:	ee18 0a90 	vmov	r0, s17
 8008740:	22a0      	movs	r2, #160	; 0xa0
 8008742:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008746:	f00c fa40 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800874a:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 800874e:	2b20      	cmp	r3, #32
 8008750:	d006      	beq.n	8008760 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x64c>
        lineWidthQ5 = widthQ5;
 8008752:	2320      	movs	r3, #32
        updateCachedShape();
 8008754:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8008758:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 800875c:	f00c f934 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008760:	ee18 0a90 	vmov	r0, s17
 8008764:	2101      	movs	r1, #1
 8008766:	f00c fa3b 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800876a:	ee18 1a90 	vmov	r1, s17
 800876e:	4630      	mov	r0, r6
 8008770:	f00a f83e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008774:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8008778:	ee19 0a90 	vmov	r0, s19
 800877c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800877e:	f04f 0800 	mov.w	r8, #0
 8008782:	2145      	movs	r1, #69	; 0x45
 8008784:	f7fa ff72 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008788:	ee19 1a90 	vmov	r1, s19
 800878c:	4628      	mov	r0, r5
        color = newColor;
 800878e:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8008792:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8008796:	f00c fbb9 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800879a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800879e:	ee19 3a90 	vmov	r3, s19
 80087a2:	333c      	adds	r3, #60	; 0x3c
 80087a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087a8:	2349      	movs	r3, #73	; 0x49
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80087aa:	ee19 0a90 	vmov	r0, s19
 80087ae:	a90c      	add	r1, sp, #48	; 0x30
 80087b0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80087b4:	970c      	str	r7, [sp, #48]	; 0x30
 80087b6:	f00c fe43 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80087ba:	ee19 1a90 	vmov	r1, s19
 80087be:	4630      	mov	r0, r6
 80087c0:	f00a f816 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 80087c4:	ee1a 0a10 	vmov	r0, s20
 80087c8:	220c      	movs	r2, #12
 80087ca:	2136      	movs	r1, #54	; 0x36
 80087cc:	f7fa ff4e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80087d0:	ee1a 1a10 	vmov	r1, s20
 80087d4:	4628      	mov	r0, r5
        color = newColor;
 80087d6:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 80087da:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 80087de:	f00c fb95 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80087e2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80087e6:	ee1a 3a10 	vmov	r3, s20
 80087ea:	333c      	adds	r3, #60	; 0x3c
 80087ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80087f0:	234a      	movs	r3, #74	; 0x4a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80087f2:	ee1a 0a10 	vmov	r0, s20
 80087f6:	a90c      	add	r1, sp, #48	; 0x30
 80087f8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80087fc:	970c      	str	r7, [sp, #48]	; 0x30
 80087fe:	f00c fe1f 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008802:	4630      	mov	r0, r6
 8008804:	ee1a 1a10 	vmov	r1, s20
 8008808:	f009 fff2 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800880c:	4620      	mov	r0, r4
 800880e:	b00f      	add	sp, #60	; 0x3c
 8008810:	ecbd 8b0a 	vpop	{d8-d12}
 8008814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008818:	200138a0 	.word	0x200138a0
 800881c:	0802f481 	.word	0x0802f481
 8008820:	0802f4f4 	.word	0x0802f4f4
 8008824:	20013898 	.word	0x20013898

08008828 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8008828:	4770      	bx	lr

0800882a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800882a:	4770      	bx	lr

0800882c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800882c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800882e:	68c2      	ldr	r2, [r0, #12]
 8008830:	6844      	ldr	r4, [r0, #4]
 8008832:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008834:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008836:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800883a:	07d2      	lsls	r2, r2, #31
 800883c:	bf48      	it	mi
 800883e:	5962      	ldrmi	r2, [r4, r5]
 8008840:	689b      	ldr	r3, [r3, #8]
    }
 8008842:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008844:	bf48      	it	mi
 8008846:	58d3      	ldrmi	r3, [r2, r3]
 8008848:	4718      	bx	r3

0800884a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800884a:	6843      	ldr	r3, [r0, #4]
 800884c:	b12b      	cbz	r3, 800885a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800884e:	6883      	ldr	r3, [r0, #8]
 8008850:	b92b      	cbnz	r3, 800885e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008852:	68c0      	ldr	r0, [r0, #12]
 8008854:	f000 0001 	and.w	r0, r0, #1
 8008858:	4770      	bx	lr
 800885a:	4618      	mov	r0, r3
 800885c:	4770      	bx	lr
 800885e:	2001      	movs	r0, #1
    }
 8008860:	4770      	bx	lr

08008862 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008862:	b510      	push	{r4, lr}
 8008864:	2110      	movs	r1, #16
 8008866:	4604      	mov	r4, r0
 8008868:	f024 f983 	bl	802cb72 <_ZdlPvj>
 800886c:	4620      	mov	r0, r4
 800886e:	bd10      	pop	{r4, pc}

08008870 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008870:	b510      	push	{r4, lr}
 8008872:	4b03      	ldr	r3, [pc, #12]	; (8008880 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8008874:	6003      	str	r3, [r0, #0]
 8008876:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008878:	f00e fb90 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800887c:	4620      	mov	r0, r4
 800887e:	bd10      	pop	{r4, pc}
 8008880:	08030c10 	.word	0x08030c10

08008884 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8008884:	b507      	push	{r0, r1, r2, lr}
 8008886:	4b07      	ldr	r3, [pc, #28]	; (80088a4 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8008888:	6003      	str	r3, [r0, #0]
 800888a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800888c:	f00e fb86 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008890:	9801      	ldr	r0, [sp, #4]
 8008892:	f241 11c4 	movw	r1, #4548	; 0x11c4
 8008896:	f024 f96c 	bl	802cb72 <_ZdlPvj>
 800889a:	9801      	ldr	r0, [sp, #4]
 800889c:	b003      	add	sp, #12
 800889e:	f85d fb04 	ldr.w	pc, [sp], #4
 80088a2:	bf00      	nop
 80088a4:	08030c10 	.word	0x08030c10

080088a8 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80088a8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel_Return)
 80088aa:	f100 03e4 	add.w	r3, r0, #228	; 0xe4
 80088ae:	4299      	cmp	r1, r3
{
 80088b0:	4604      	mov	r4, r0
 80088b2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel_Return)
 80088b4:	d103      	bne.n	80088be <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80088b6:	f010 f873 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80088ba:	f7fc fe79 	bl	80055b0 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel_1Phase)
 80088be:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 80088c2:	429d      	cmp	r5, r3
 80088c4:	d103      	bne.n	80088ce <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80088c6:	f010 f86b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel_1Phase clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80088ca:	f7fc fe91 	bl	80055f0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel_3Phase)
 80088ce:	f504 7496 	add.w	r4, r4, #300	; 0x12c
 80088d2:	42a5      	cmp	r5, r4
 80088d4:	d105      	bne.n	80088e2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80088d6:	f010 f863 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel_3Phase clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80088da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80088de:	f7fc be97 	b.w	8005610 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80088e2:	bd38      	pop	{r3, r4, r5, pc}

080088e4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80088e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088e8:	ed2d 8b06 	vpush	{d8-d10}
 80088ec:	4604      	mov	r4, r0
 80088ee:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80088f0:	46a2      	mov	sl, r4
 80088f2:	2500      	movs	r5, #0
 80088f4:	f011 fcd4 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 80088f8:	4b71      	ldr	r3, [pc, #452]	; (8008ac0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
 80088fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80088fc:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8008900:	2226      	movs	r2, #38	; 0x26
 8008902:	4629      	mov	r1, r5
 8008904:	4650      	mov	r0, sl
 8008906:	f025 fa20 	bl	802dd4a <memset>
 800890a:	4650      	mov	r0, sl
 800890c:	f7fa fee0 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8008910:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8008914:	26ff      	movs	r6, #255	; 0xff
 8008916:	4b6b      	ldr	r3, [pc, #428]	; (8008ac4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8008918:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800891a:	2226      	movs	r2, #38	; 0x26
 800891c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008920:	4629      	mov	r1, r5
 8008922:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008926:	4648      	mov	r0, r9
 8008928:	66a5      	str	r5, [r4, #104]	; 0x68
 800892a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800892e:	f025 fa0c 	bl	802dd4a <memset>
 8008932:	4648      	mov	r0, r9
 8008934:	f7fa fecc 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8008938:	4b63      	ldr	r3, [pc, #396]	; (8008ac8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>)
 800893a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800893c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008940:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008944:	a90a      	add	r1, sp, #40	; 0x28
 8008946:	4648      	mov	r0, r9
 8008948:	f104 0898 	add.w	r8, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800894c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008950:	f00d fb27 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008954:	4640      	mov	r0, r8
 8008956:	f7fa ff1f 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800895a:	4b5c      	ldr	r3, [pc, #368]	; (8008acc <_ZN26Measurement_SingleViewBaseC1Ev+0x1e8>)
 800895c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008960:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8008964:	4618      	mov	r0, r3
 8008966:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800896a:	ee09 3a90 	vmov	s19, r3
 800896e:	f00d fc4f 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008972:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8008976:	4618      	mov	r0, r3
 8008978:	ee0a 3a10 	vmov	s20, r3
 800897c:	f00d fc48 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008980:	f504 73ba 	add.w	r3, r4, #372	; 0x174
 8008984:	4618      	mov	r0, r3
 8008986:	f504 77de 	add.w	r7, r4, #444	; 0x1bc
 800898a:	ee0a 3a90 	vmov	s21, r3
 800898e:	f00d fc3f 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008992:	4638      	mov	r0, r7
 8008994:	f00b fff8 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008998:	4e4d      	ldr	r6, [pc, #308]	; (8008ad0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1ec>)
 800899a:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800899e:	4618      	mov	r0, r3
 80089a0:	9302      	str	r3, [sp, #8]
 80089a2:	f7fa fc99 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089a6:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089aa:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 80089ae:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80089b2:	4618      	mov	r0, r3
 80089b4:	f8c4 622c 	str.w	r6, [r4, #556]	; 0x22c
 80089b8:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80089bc:	f504 7b22 	add.w	fp, r4, #648	; 0x288
 80089c0:	ee08 3a10 	vmov	s16, r3
 80089c4:	f7fa fee8 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80089c8:	4658      	mov	r0, fp
 80089ca:	f00b ffdd 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 80089ce:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
 80089d2:	4618      	mov	r0, r3
 80089d4:	9303      	str	r3, [sp, #12]
 80089d6:	f7fa fc7f 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80089da:	f106 0324 	add.w	r3, r6, #36	; 0x24
 80089de:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 80089e2:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 80089e6:	f8c4 62f8 	str.w	r6, [r4, #760]	; 0x2f8
 80089ea:	4618      	mov	r0, r3
 80089ec:	f8c4 5304 	str.w	r5, [r4, #772]	; 0x304
 80089f0:	ee08 3a90 	vmov	s17, r3
 80089f4:	f7fa fed0 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80089f8:	f504 7355 	add.w	r3, r4, #852	; 0x354
 80089fc:	4618      	mov	r0, r3
 80089fe:	ee09 3a10 	vmov	s18, r3
 8008a02:	f7fa fec9 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008a06:	4a33      	ldr	r2, [pc, #204]	; (8008ad4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f0>)
 8008a08:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008a0c:	e9c3 246d 	strd	r2, r4, [r3, #436]	; 0x1b4
 8008a10:	4a31      	ldr	r2, [pc, #196]	; (8008ad8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1f4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008a12:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008a16:	e9c3 256f 	strd	r2, r5, [r3, #444]	; 0x1bc
 8008a1a:	f504 7069 	add.w	r0, r4, #932	; 0x3a4
 8008a1e:	f00e fab3 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8008a22:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008a26:	462a      	mov	r2, r5
 8008a28:	4650      	mov	r0, sl
 8008a2a:	9300      	str	r3, [sp, #0]
 8008a2c:	4629      	mov	r1, r5
 8008a2e:	23f0      	movs	r3, #240	; 0xf0
 8008a30:	f7fa fe29 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008a34:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008a36:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008a3a:	66a3      	str	r3, [r4, #104]	; 0x68
 8008a3c:	4651      	mov	r1, sl
 8008a3e:	4630      	mov	r0, r6
 8008a40:	f009 fed6 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8008a44:	462a      	mov	r2, r5
 8008a46:	4648      	mov	r0, r9
 8008a48:	4629      	mov	r1, r5
 8008a4a:	f7fa fe0f 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008a4e:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008a50:	4648      	mov	r0, r9
 8008a52:	a90a      	add	r1, sp, #40	; 0x28
 8008a54:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008a58:	f00d faa3 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a5c:	4649      	mov	r1, r9
 8008a5e:	4630      	mov	r0, r6
 8008a60:	f009 fec6 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8008a64:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008a68:	2156      	movs	r1, #86	; 0x56
 8008a6a:	4640      	mov	r0, r8
 8008a6c:	f7fa fdfe 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008a70:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008a74:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008a78:	f10d 0910 	add.w	r9, sp, #16
        color = newColor;
 8008a7c:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8008a80:	4648      	mov	r0, r9
 8008a82:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008a86:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008a8a:	4641      	mov	r1, r8
 8008a8c:	4798      	blx	r3
 8008a8e:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8008a92:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008a96:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008a9a:	4b10      	ldr	r3, [pc, #64]	; (8008adc <_ZN26Measurement_SingleViewBaseC1Ev+0x1f8>)
 8008a9c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8008a9e:	f504 7967 	add.w	r9, r4, #924	; 0x39c
 8008aa2:	b92b      	cbnz	r3, 8008ab0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>
 8008aa4:	4b0e      	ldr	r3, [pc, #56]	; (8008ae0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1fc>)
 8008aa6:	4a0f      	ldr	r2, [pc, #60]	; (8008ae4 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008aa8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008aaa:	480f      	ldr	r0, [pc, #60]	; (8008ae8 <_ZN26Measurement_SingleViewBaseC1Ev+0x204>)
 8008aac:	f024 ff48 	bl	802d940 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8008ab0:	4b0e      	ldr	r3, [pc, #56]	; (8008aec <_ZN26Measurement_SingleViewBaseC1Ev+0x208>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008ab2:	881b      	ldrh	r3, [r3, #0]
 8008ab4:	2b42      	cmp	r3, #66	; 0x42
 8008ab6:	d81d      	bhi.n	8008af4 <_ZN26Measurement_SingleViewBaseC1Ev+0x210>
 8008ab8:	4b0d      	ldr	r3, [pc, #52]	; (8008af0 <_ZN26Measurement_SingleViewBaseC1Ev+0x20c>)
 8008aba:	4a0a      	ldr	r2, [pc, #40]	; (8008ae4 <_ZN26Measurement_SingleViewBaseC1Ev+0x200>)
 8008abc:	2161      	movs	r1, #97	; 0x61
 8008abe:	e7f4      	b.n	8008aaa <_ZN26Measurement_SingleViewBaseC1Ev+0x1c6>
 8008ac0:	08030c10 	.word	0x08030c10
 8008ac4:	08031a48 	.word	0x08031a48
 8008ac8:	08031c94 	.word	0x08031c94
 8008acc:	0802f594 	.word	0x0802f594
 8008ad0:	0803177c 	.word	0x0803177c
 8008ad4:	08030bf8 	.word	0x08030bf8
 8008ad8:	080088a9 	.word	0x080088a9
 8008adc:	20013894 	.word	0x20013894
 8008ae0:	0802f344 	.word	0x0802f344
 8008ae4:	0802f449 	.word	0x0802f449
 8008ae8:	0802f3c1 	.word	0x0802f3c1
 8008aec:	20013898 	.word	0x20013898
 8008af0:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8008af4:	4bad      	ldr	r3, [pc, #692]	; (8008dac <_ZN26Measurement_SingleViewBaseC1Ev+0x4c8>)
 8008af6:	2142      	movs	r1, #66	; 0x42
 8008af8:	6818      	ldr	r0, [r3, #0]
 8008afa:	f001 fdc5 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8008afe:	4aac      	ldr	r2, [pc, #688]	; (8008db0 <_ZN26Measurement_SingleViewBaseC1Ev+0x4cc>)
 8008b00:	4603      	mov	r3, r0
 8008b02:	2104      	movs	r1, #4
 8008b04:	4648      	mov	r0, r9
 8008b06:	f013 f8f9 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_auto_off.resizeToCurrentText();
 8008b0a:	4640      	mov	r0, r8
        wc1 = value;
 8008b0c:	f8c4 90e0 	str.w	r9, [r4, #224]	; 0xe0
 8008b10:	f00c fc76 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008b14:	4ba7      	ldr	r3, [pc, #668]	; (8008db4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008b16:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8008b18:	4640      	mov	r0, r8
 8008b1a:	2343      	movs	r3, #67	; 0x43
 8008b1c:	a90a      	add	r1, sp, #40	; 0x28
 8008b1e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008b22:	f00c fc8d 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008b26:	4641      	mov	r1, r8
 8008b28:	4630      	mov	r0, r6
 8008b2a:	f009 fe61 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8008b2e:	ee19 0a90 	vmov	r0, s19
 8008b32:	22f0      	movs	r2, #240	; 0xf0
 8008b34:	2121      	movs	r1, #33	; 0x21
 8008b36:	f7fa fd99 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008b3a:	f04f 0802 	mov.w	r8, #2
 8008b3e:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b40:	a909      	add	r1, sp, #36	; 0x24
 8008b42:	ee19 0a90 	vmov	r0, s19
 8008b46:	aa0a      	add	r2, sp, #40	; 0x28
 8008b48:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b4c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b50:	f504 598d 	add.w	r9, r4, #4512	; 0x11a0
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b54:	f00d f82f 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008b58:	2263      	movs	r2, #99	; 0x63
 8008b5a:	f8a4 211c 	strh.w	r2, [r4, #284]	; 0x11c
    buttonWithLabel_Return.setAction(buttonCallback);
 8008b5e:	f109 0914 	add.w	r9, r9, #20
        updateTextPosition();
 8008b62:	ee19 0a90 	vmov	r0, s19
 8008b66:	f7fa fdc5 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008b6a:	ee19 1a90 	vmov	r1, s19
 8008b6e:	4630      	mov	r0, r6
        colorPressed = col;
 8008b70:	e9c4 aa48 	strd	sl, sl, [r4, #288]	; 0x120
 8008b74:	f8c4 910c 	str.w	r9, [r4, #268]	; 0x10c
 8008b78:	f009 fe3a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_3Phase.setXY(33, 170);
 8008b7c:	ee1a 0a10 	vmov	r0, s20
 8008b80:	22aa      	movs	r2, #170	; 0xaa
 8008b82:	2121      	movs	r1, #33	; 0x21
 8008b84:	f7fa fd72 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008b88:	2303      	movs	r3, #3
    buttonWithLabel_3Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008b8a:	a909      	add	r1, sp, #36	; 0x24
 8008b8c:	ee1a 0a10 	vmov	r0, s20
 8008b90:	aa0a      	add	r2, sp, #40	; 0x28
 8008b92:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008b96:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008b9a:	f00d f80c 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008b9e:	2262      	movs	r2, #98	; 0x62
 8008ba0:	f8a4 2164 	strh.w	r2, [r4, #356]	; 0x164
        updateTextPosition();
 8008ba4:	ee1a 0a10 	vmov	r0, s20
 8008ba8:	f7fa fda4 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008bac:	ee1a 1a10 	vmov	r1, s20
 8008bb0:	4630      	mov	r0, r6
        colorPressed = col;
 8008bb2:	e9c4 aa5a 	strd	sl, sl, [r4, #360]	; 0x168
 8008bb6:	f8c4 9154 	str.w	r9, [r4, #340]	; 0x154
 8008bba:	f009 fe19 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_1Phase.setXY(33, 100);
 8008bbe:	ee1a 0a90 	vmov	r0, s21
 8008bc2:	2264      	movs	r2, #100	; 0x64
 8008bc4:	2121      	movs	r1, #33	; 0x21
 8008bc6:	f7fa fd51 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel_1Phase.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008bca:	aa0a      	add	r2, sp, #40	; 0x28
 8008bcc:	2303      	movs	r3, #3
 8008bce:	a909      	add	r1, sp, #36	; 0x24
 8008bd0:	ee1a 0a90 	vmov	r0, s21
 8008bd4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008bd8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8008bdc:	f00c ffeb 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8008be0:	2361      	movs	r3, #97	; 0x61
 8008be2:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
        updateTextPosition();
 8008be6:	ee1a 0a90 	vmov	r0, s21
 8008bea:	f7fa fd83 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8008bee:	ee1a 1a90 	vmov	r1, s21
 8008bf2:	4630      	mov	r0, r6
        colorPressed = col;
 8008bf4:	e9c4 aa6c 	strd	sl, sl, [r4, #432]	; 0x1b0
 8008bf8:	f8c4 919c 	str.w	r9, [r4, #412]	; 0x19c
 8008bfc:	f009 fdf8 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8008c00:	230a      	movs	r3, #10
 8008c02:	9300      	str	r3, [sp, #0]
 8008c04:	224b      	movs	r2, #75	; 0x4b
 8008c06:	23f0      	movs	r3, #240	; 0xf0
 8008c08:	4629      	mov	r1, r5
 8008c0a:	4638      	mov	r0, r7
 8008c0c:	f7fa fd3b 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008c10:	9b02      	ldr	r3, [sp, #8]
 8008c12:	f8c4 31e4 	str.w	r3, [r4, #484]	; 0x1e4
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c16:	22a0      	movs	r2, #160	; 0xa0
 8008c18:	4611      	mov	r1, r2
 8008c1a:	4638      	mov	r0, r7
 8008c1c:	f8c4 a238 	str.w	sl, [r4, #568]	; 0x238
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008c20:	f8a4 a23c 	strh.w	sl, [r4, #572]	; 0x23c
 8008c24:	f00b ffc6 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008c28:	22a0      	movs	r2, #160	; 0xa0
 8008c2a:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008c2e:	4638      	mov	r0, r7
 8008c30:	f00b ffcb 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008c34:	f8d4 31f8 	ldr.w	r3, [r4, #504]	; 0x1f8
 8008c38:	2b20      	cmp	r3, #32
 8008c3a:	d005      	beq.n	8008c48 <_ZN26Measurement_SingleViewBaseC1Ev+0x364>
        lineWidthQ5 = widthQ5;
 8008c3c:	2320      	movs	r3, #32
 8008c3e:	f8c4 31f8 	str.w	r3, [r4, #504]	; 0x1f8
        updateCachedShape();
 8008c42:	4638      	mov	r0, r7
 8008c44:	f00b fec0 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008c48:	4638      	mov	r0, r7
 8008c4a:	2101      	movs	r1, #1
 8008c4c:	f00b ffc8 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008c50:	4639      	mov	r1, r7
 8008c52:	4630      	mov	r0, r6
 8008c54:	f009 fdcc 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008c58:	f04f 37ff 	mov.w	r7, #4294967295
    textArea_menu.setXY(41, 60);
 8008c5c:	223c      	movs	r2, #60	; 0x3c
 8008c5e:	ee18 0a10 	vmov	r0, s16
 8008c62:	2129      	movs	r1, #41	; 0x29
        linespace = space;
 8008c64:	f04f 0800 	mov.w	r8, #0
        boundingArea = calculateBoundingArea();
 8008c68:	ad04      	add	r5, sp, #16
 8008c6a:	f7fa fcff 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008c6e:	ee18 1a10 	vmov	r1, s16
 8008c72:	4628      	mov	r0, r5
        color = newColor;
 8008c74:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008c78:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008c7c:	f00c f946 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008c80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008c84:	ee18 3a10 	vmov	r3, s16
 8008c88:	333c      	adds	r3, #60	; 0x3c
 8008c8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008c8e:	4b49      	ldr	r3, [pc, #292]	; (8008db4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008c90:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8008c92:	ee18 0a10 	vmov	r0, s16
 8008c96:	2352      	movs	r3, #82	; 0x52
 8008c98:	a90a      	add	r1, sp, #40	; 0x28
 8008c9a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008c9e:	f00c fbcf 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008ca2:	ee18 1a10 	vmov	r1, s16
 8008ca6:	4630      	mov	r0, r6
 8008ca8:	f009 fda2 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008cac:	230a      	movs	r3, #10
 8008cae:	9300      	str	r3, [sp, #0]
 8008cb0:	2232      	movs	r2, #50	; 0x32
 8008cb2:	23f0      	movs	r3, #240	; 0xf0
 8008cb4:	4641      	mov	r1, r8
 8008cb6:	4658      	mov	r0, fp
 8008cb8:	f7fa fce5 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8008cbc:	9b03      	ldr	r3, [sp, #12]
 8008cbe:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008cc2:	22a0      	movs	r2, #160	; 0xa0
 8008cc4:	4611      	mov	r1, r2
 8008cc6:	4658      	mov	r0, fp
 8008cc8:	f8c4 7304 	str.w	r7, [r4, #772]	; 0x304
 8008ccc:	f8a4 7308 	strh.w	r7, [r4, #776]	; 0x308
 8008cd0:	f00b ff70 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008cd4:	22a0      	movs	r2, #160	; 0xa0
 8008cd6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008cda:	4658      	mov	r0, fp
 8008cdc:	f00b ff75 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008ce0:	f8d4 32c4 	ldr.w	r3, [r4, #708]	; 0x2c4
 8008ce4:	2b20      	cmp	r3, #32
 8008ce6:	d005      	beq.n	8008cf4 <_ZN26Measurement_SingleViewBaseC1Ev+0x410>
        lineWidthQ5 = widthQ5;
 8008ce8:	2320      	movs	r3, #32
 8008cea:	f8c4 32c4 	str.w	r3, [r4, #708]	; 0x2c4
        updateCachedShape();
 8008cee:	4658      	mov	r0, fp
 8008cf0:	f00b fe6a 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008cf4:	4658      	mov	r0, fp
 8008cf6:	2101      	movs	r1, #1
 8008cf8:	f00b ff72 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008cfc:	4659      	mov	r1, fp
 8008cfe:	4630      	mov	r0, r6
 8008d00:	f009 fd76 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8008d04:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 8008d08:	ee18 0a90 	vmov	r0, s17
 8008d0c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8008d0e:	2700      	movs	r7, #0
 8008d10:	2145      	movs	r1, #69	; 0x45
 8008d12:	f7fa fcab 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008d16:	ee18 1a90 	vmov	r1, s17
 8008d1a:	4628      	mov	r0, r5
        color = newColor;
 8008d1c:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 8008d20:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 8008d24:	f00c f8f2 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d28:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d2c:	ee18 3a90 	vmov	r3, s17
 8008d30:	333c      	adds	r3, #60	; 0x3c
 8008d32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d36:	4b1f      	ldr	r3, [pc, #124]	; (8008db4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d38:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8008d3a:	ee18 0a90 	vmov	r0, s17
 8008d3e:	2311      	movs	r3, #17
 8008d40:	a90a      	add	r1, sp, #40	; 0x28
 8008d42:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d46:	f00c fb7b 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d4a:	ee18 1a90 	vmov	r1, s17
 8008d4e:	4630      	mov	r0, r6
 8008d50:	f009 fd4e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8008d54:	ee19 0a10 	vmov	r0, s18
 8008d58:	220c      	movs	r2, #12
 8008d5a:	2136      	movs	r1, #54	; 0x36
 8008d5c:	f7fa fc86 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8008d60:	ee19 1a10 	vmov	r1, s18
 8008d64:	4628      	mov	r0, r5
        color = newColor;
 8008d66:	f8c4 8384 	str.w	r8, [r4, #900]	; 0x384
        linespace = space;
 8008d6a:	f8a4 7388 	strh.w	r7, [r4, #904]	; 0x388
        boundingArea = calculateBoundingArea();
 8008d6e:	f00c f8cd 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008d72:	ee19 2a10 	vmov	r2, s18
 8008d76:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8008d7a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008d7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008d82:	4b0c      	ldr	r3, [pc, #48]	; (8008db4 <_ZN26Measurement_SingleViewBaseC1Ev+0x4d0>)
 8008d84:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8008d86:	ee19 0a10 	vmov	r0, s18
 8008d8a:	2310      	movs	r3, #16
 8008d8c:	a90a      	add	r1, sp, #40	; 0x28
 8008d8e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008d92:	f00c fb55 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008d96:	4630      	mov	r0, r6
 8008d98:	ee19 1a10 	vmov	r1, s18
 8008d9c:	f009 fd28 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008da0:	4620      	mov	r0, r4
 8008da2:	b00d      	add	sp, #52	; 0x34
 8008da4:	ecbd 8b06 	vpop	{d8-d10}
 8008da8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008dac:	200138a0 	.word	0x200138a0
 8008db0:	0802f481 	.word	0x0802f481
 8008db4:	0802f4f4 	.word	0x0802f4f4

08008db8 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8008db8:	4770      	bx	lr

08008dba <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8008dba:	4770      	bx	lr

08008dbc <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008dbc:	4770      	bx	lr

08008dbe <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008dbe:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008dc0:	68c2      	ldr	r2, [r0, #12]
 8008dc2:	6844      	ldr	r4, [r0, #4]
 8008dc4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8008dc6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8008dc8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008dcc:	07d2      	lsls	r2, r2, #31
 8008dce:	bf48      	it	mi
 8008dd0:	5962      	ldrmi	r2, [r4, r5]
 8008dd2:	689b      	ldr	r3, [r3, #8]
    }
 8008dd4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008dd6:	bf48      	it	mi
 8008dd8:	58d3      	ldrmi	r3, [r2, r3]
 8008dda:	4718      	bx	r3

08008ddc <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8008ddc:	6843      	ldr	r3, [r0, #4]
 8008dde:	b12b      	cbz	r3, 8008dec <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008de0:	6883      	ldr	r3, [r0, #8]
 8008de2:	b92b      	cbnz	r3, 8008df0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008de4:	68c0      	ldr	r0, [r0, #12]
 8008de6:	f000 0001 	and.w	r0, r0, #1
 8008dea:	4770      	bx	lr
 8008dec:	4618      	mov	r0, r3
 8008dee:	4770      	bx	lr
 8008df0:	2001      	movs	r0, #1
    }
 8008df2:	4770      	bx	lr

08008df4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008df4:	b510      	push	{r4, lr}
 8008df6:	2110      	movs	r1, #16
 8008df8:	4604      	mov	r4, r0
 8008dfa:	f023 feba 	bl	802cb72 <_ZdlPvj>
 8008dfe:	4620      	mov	r0, r4
 8008e00:	bd10      	pop	{r4, pc}
	...

08008e04 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008e04:	b510      	push	{r4, lr}
 8008e06:	4b03      	ldr	r3, [pc, #12]	; (8008e14 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8008e08:	6003      	str	r3, [r0, #0]
 8008e0a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008e0c:	f00e f8c6 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008e10:	4620      	mov	r0, r4
 8008e12:	bd10      	pop	{r4, pc}
 8008e14:	08030c5c 	.word	0x08030c5c

08008e18 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8008e18:	b507      	push	{r0, r1, r2, lr}
 8008e1a:	4b07      	ldr	r3, [pc, #28]	; (8008e38 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8008e1c:	6003      	str	r3, [r0, #0]
 8008e1e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008e20:	f00e f8bc 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008e24:	9801      	ldr	r0, [sp, #4]
 8008e26:	f241 417c 	movw	r1, #5244	; 0x147c
 8008e2a:	f023 fea2 	bl	802cb72 <_ZdlPvj>
 8008e2e:	9801      	ldr	r0, [sp, #4]
 8008e30:	b003      	add	sp, #12
 8008e32:	f85d fb04 	ldr.w	pc, [sp], #4
 8008e36:	bf00      	nop
 8008e38:	08030c5c 	.word	0x08030c5c

08008e3c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8008e3c:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8008e3e:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8008e42:	f8d4 2478 	ldr.w	r2, [r4, #1144]	; 0x478
 8008e46:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e48:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 8008e4a:	f8c4 2478 	str.w	r2, [r4, #1144]	; 0x478
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8008e4e:	d105      	bne.n	8008e5c <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8008e50:	6803      	ldr	r3, [r0, #0]
 8008e52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e54:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8008e56:	2300      	movs	r3, #0
 8008e58:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
    }
}
 8008e5c:	bd10      	pop	{r4, pc}

08008e5e <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel_return)
 8008e5e:	3098      	adds	r0, #152	; 0x98
 8008e60:	4288      	cmp	r0, r1
{
 8008e62:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 8008e64:	d105      	bne.n	8008e72 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008e66:	f00f fd9b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
}
 8008e6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8008e6e:	f7fc bbaf 	b.w	80055d0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8008e72:	bd08      	pop	{r3, pc}

08008e74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8008e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e78:	ed2d 8b0a 	vpush	{d8-d12}
 8008e7c:	4604      	mov	r4, r0
 8008e7e:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8008e80:	46a0      	mov	r8, r4
 8008e82:	2500      	movs	r5, #0
 8008e84:	f011 fa0c 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8008e88:	4bce      	ldr	r3, [pc, #824]	; (80091c4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x350>)
 8008e8a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008e8c:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8008e90:	2226      	movs	r2, #38	; 0x26
 8008e92:	4629      	mov	r1, r5
 8008e94:	4640      	mov	r0, r8
 8008e96:	f024 ff58 	bl	802dd4a <memset>
 8008e9a:	4640      	mov	r0, r8
 8008e9c:	f7fa fc18 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8008ea0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008ea4:	26ff      	movs	r6, #255	; 0xff
 8008ea6:	4bc8      	ldr	r3, [pc, #800]	; (80091c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x354>)
 8008ea8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8008eaa:	2226      	movs	r2, #38	; 0x26
 8008eac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008eb0:	4629      	mov	r1, r5
 8008eb2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008eb6:	4638      	mov	r0, r7
 8008eb8:	66a5      	str	r5, [r4, #104]	; 0x68
 8008eba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008ebe:	f024 ff44 	bl	802dd4a <memset>
 8008ec2:	4638      	mov	r0, r7
 8008ec4:	f7fa fc04 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8008ec8:	4bc0      	ldr	r3, [pc, #768]	; (80091cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x358>)
 8008eca:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008ecc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008ed0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008ed4:	a90a      	add	r1, sp, #40	; 0x28
 8008ed6:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8008eda:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8008edc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008ee0:	f00d f85f 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008ee4:	4658      	mov	r0, fp
 8008ee6:	f00d f993 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8008eea:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8008eee:	f504 7994 	add.w	r9, r4, #296	; 0x128
 8008ef2:	4618      	mov	r0, r3
 8008ef4:	ee0a 3a90 	vmov	s21, r3
 8008ef8:	f7fa fc4e 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008efc:	4648      	mov	r0, r9
 8008efe:	f7fa fc4b 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008f02:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 8008f06:	4618      	mov	r0, r3
 8008f08:	ee0b 3a10 	vmov	s22, r3
 8008f0c:	f7fa fc44 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008f10:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 8008f14:	4618      	mov	r0, r3
 8008f16:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f1a:	4ead      	ldr	r6, [pc, #692]	; (80091d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x35c>)
        : TextArea()
 8008f1c:	f7fa fc3c 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008f20:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 8008f24:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 8008f28:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f2a:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 8008f2e:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 8008f32:	f7fa fc31 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008f36:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8008f3a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8008f3c:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 8008f40:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 8008f44:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 8008f48:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 8008f4c:	f7fa fc24 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8008f50:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 8008f54:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8008f58:	4650      	mov	r0, sl
 8008f5a:	f00c fce5 	bl	8015928 <_ZN8touchgfx5GaugeC1Ev>
 8008f5e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8008f62:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008f64:	4e9b      	ldr	r6, [pc, #620]	; (80091d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x360>)
 8008f66:	ee08 3a10 	vmov	s16, r3
 8008f6a:	f00b fd0d 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8008f6e:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 8008f72:	4618      	mov	r0, r3
 8008f74:	9302      	str	r3, [sp, #8]
 8008f76:	f7fa f9af 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008f7a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008f7e:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8008f82:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8008f86:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8008f8a:	4618      	mov	r0, r3
 8008f8c:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8008f90:	ee09 3a10 	vmov	s18, r3
 8008f94:	f7fa fc00 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008f98:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8008f9c:	4618      	mov	r0, r3
 8008f9e:	ee08 3a90 	vmov	s17, r3
 8008fa2:	f00b fcf1 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8008fa6:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8008faa:	4618      	mov	r0, r3
 8008fac:	9303      	str	r3, [sp, #12]
 8008fae:	f7fa f993 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008fb2:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8008fb6:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8008fba:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8008fbe:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 8008fc2:	4618      	mov	r0, r3
 8008fc4:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8008fc8:	ee09 3a90 	vmov	s19, r3
 8008fcc:	f7fa fbe4 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8008fd0:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 8008fd4:	4618      	mov	r0, r3
 8008fd6:	ee0a 3a10 	vmov	s20, r3
 8008fda:	f7fa fbdd 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008fde:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008fe2:	4a7d      	ldr	r2, [pc, #500]	; (80091d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x364>)
 8008fe4:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8008fe8:	4a7c      	ldr	r2, [pc, #496]	; (80091dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x368>)
 8008fea:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8008fee:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 8008ff2:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
 8008ff6:	f8c3 5478 	str.w	r5, [r3, #1144]	; 0x478
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8008ffa:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008ffe:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 8009002:	f00d ffc1 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009006:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800900a:	462a      	mov	r2, r5
 800900c:	4640      	mov	r0, r8
 800900e:	9300      	str	r3, [sp, #0]
 8009010:	4629      	mov	r1, r5
 8009012:	23f0      	movs	r3, #240	; 0xf0
 8009014:	f7fa fb37 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009018:	1d26      	adds	r6, r4, #4
        color = newColor;
 800901a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800901e:	66a3      	str	r3, [r4, #104]	; 0x68
 8009020:	4641      	mov	r1, r8
 8009022:	4630      	mov	r0, r6
 8009024:	f009 fbe4 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009028:	462a      	mov	r2, r5
 800902a:	4638      	mov	r0, r7
 800902c:	4629      	mov	r1, r5
 800902e:	f7fa fb1d 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009032:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009036:	4638      	mov	r0, r7
 8009038:	a90a      	add	r1, sp, #40	; 0x28
 800903a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800903e:	f00c ffb0 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009042:	4639      	mov	r1, r7
 8009044:	4630      	mov	r0, r6
 8009046:	f009 fbd3 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 800904a:	4658      	mov	r0, fp
 800904c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009050:	2121      	movs	r1, #33	; 0x21
 8009052:	f7fa fb0b 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009056:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8009058:	aa0a      	add	r2, sp, #40	; 0x28
 800905a:	a909      	add	r1, sp, #36	; 0x24
 800905c:	4658      	mov	r0, fp
 800905e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009062:	2302      	movs	r3, #2
 8009064:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009068:	f00c fda5 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800906c:	2356      	movs	r3, #86	; 0x56
        updateTextPosition();
 800906e:	4658      	mov	r0, fp
 8009070:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009074:	f7fa fb3e 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 8009078:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 800907c:	f04f 38ff 	mov.w	r8, #4294967295
 8009080:	3308      	adds	r3, #8
 8009082:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8009086:	4659      	mov	r1, fp
 8009088:	4630      	mov	r0, r6
        colorPressed = col;
 800908a:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 800908e:	af04      	add	r7, sp, #16
 8009090:	f009 fbae 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009094:	22c2      	movs	r2, #194	; 0xc2
 8009096:	ee1a 0a90 	vmov	r0, s21
 800909a:	4629      	mov	r1, r5
 800909c:	f7fa fae6 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80090a0:	ee1a 1a90 	vmov	r1, s21
 80090a4:	4638      	mov	r0, r7
        color = newColor;
 80090a6:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 80090aa:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80090ae:	f00b ff2d 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80090b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80090b6:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80090ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80090be:	4b48      	ldr	r3, [pc, #288]	; (80091e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 80090c0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80090c2:	ee1a 0a90 	vmov	r0, s21
 80090c6:	2338      	movs	r3, #56	; 0x38
 80090c8:	a90a      	add	r1, sp, #40	; 0x28
 80090ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80090ce:	f00c f9b7 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80090d2:	ee1a 1a90 	vmov	r1, s21
 80090d6:	4630      	mov	r0, r6
 80090d8:	f009 fb8a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 80090dc:	22c2      	movs	r2, #194	; 0xc2
 80090de:	4648      	mov	r0, r9
 80090e0:	21d9      	movs	r1, #217	; 0xd9
 80090e2:	f7fa fac3 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80090e6:	4649      	mov	r1, r9
 80090e8:	4638      	mov	r0, r7
        color = newColor;
 80090ea:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 80090ee:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 80090f2:	f00b ff0b 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80090f6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80090fa:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80090fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009102:	4b37      	ldr	r3, [pc, #220]	; (80091e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009104:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8009106:	4648      	mov	r0, r9
 8009108:	2339      	movs	r3, #57	; 0x39
 800910a:	a90a      	add	r1, sp, #40	; 0x28
 800910c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009110:	f00c f996 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009114:	4649      	mov	r1, r9
 8009116:	4630      	mov	r0, r6
 8009118:	f009 fb6a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 800911c:	2255      	movs	r2, #85	; 0x55
 800911e:	ee1b 0a10 	vmov	r0, s22
 8009122:	2171      	movs	r1, #113	; 0x71
 8009124:	f7fa faa2 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009128:	ee1b 1a10 	vmov	r1, s22
 800912c:	4638      	mov	r0, r7
        color = newColor;
 800912e:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 8009132:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 8009136:	f00b fee9 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800913a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800913e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8009142:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009146:	4b26      	ldr	r3, [pc, #152]	; (80091e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x36c>)
 8009148:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800914a:	ee1b 0a10 	vmov	r0, s22
 800914e:	2337      	movs	r3, #55	; 0x37
 8009150:	a90a      	add	r1, sp, #40	; 0x28
 8009152:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009156:	f00c f973 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800915a:	ee1b 1a10 	vmov	r1, s22
 800915e:	4630      	mov	r0, r6
 8009160:	f009 fb46 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 239, 240, 15);
 8009164:	230f      	movs	r3, #15
 8009166:	22ef      	movs	r2, #239	; 0xef
 8009168:	ee1b 0a90 	vmov	r0, s23
 800916c:	9300      	str	r3, [sp, #0]
 800916e:	4629      	mov	r1, r5
 8009170:	23f0      	movs	r3, #240	; 0xf0
 8009172:	f7fa fa88 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009176:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800917a:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 800917e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009182:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 8009186:	ee1b 1a90 	vmov	r1, s23
 800918a:	4638      	mov	r0, r7
 800918c:	4798      	blx	r3
 800918e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009192:	f8df b064 	ldr.w	fp, [pc, #100]	; 80091f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x384>
 8009196:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800919a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800919e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LFLK).getText());
 80091a2:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 80091a6:	b92b      	cbnz	r3, 80091b4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x340>
 80091a8:	4b0e      	ldr	r3, [pc, #56]	; (80091e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x370>)
 80091aa:	4a0f      	ldr	r2, [pc, #60]	; (80091e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80091ac:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80091ae:	480f      	ldr	r0, [pc, #60]	; (80091ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x378>)
 80091b0:	f024 fbc6 	bl	802d940 <__assert_func>
 80091b4:	4b0e      	ldr	r3, [pc, #56]	; (80091f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x37c>)
 80091b6:	881b      	ldrh	r3, [r3, #0]
 80091b8:	2b1b      	cmp	r3, #27
 80091ba:	d81f      	bhi.n	80091fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x388>
 80091bc:	4b0d      	ldr	r3, [pc, #52]	; (80091f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x380>)
 80091be:	4a0a      	ldr	r2, [pc, #40]	; (80091e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x374>)
 80091c0:	2161      	movs	r1, #97	; 0x61
 80091c2:	e7f4      	b.n	80091ae <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x33a>
 80091c4:	08030c5c 	.word	0x08030c5c
 80091c8:	08031a48 	.word	0x08031a48
 80091cc:	08031c94 	.word	0x08031c94
 80091d0:	0802f594 	.word	0x0802f594
 80091d4:	0803177c 	.word	0x0803177c
 80091d8:	08030c44 	.word	0x08030c44
 80091dc:	08008e5f 	.word	0x08008e5f
 80091e0:	0802f4f4 	.word	0x0802f4f4
 80091e4:	0802f344 	.word	0x0802f344
 80091e8:	0802f449 	.word	0x0802f449
 80091ec:	0802f3c1 	.word	0x0802f3c1
 80091f0:	20013898 	.word	0x20013898
 80091f4:	0802f408 	.word	0x0802f408
 80091f8:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80091fc:	4bdd      	ldr	r3, [pc, #884]	; (8009574 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 80091fe:	211b      	movs	r1, #27
 8009200:	6818      	ldr	r0, [r3, #0]
 8009202:	f001 fa41 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8009206:	4adc      	ldr	r2, [pc, #880]	; (8009578 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009208:	4603      	mov	r3, r0
 800920a:	210a      	movs	r1, #10
 800920c:	4648      	mov	r0, r9
 800920e:	f012 fd75 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009212:	f04f 011c 	mov.w	r1, #28
 8009216:	4ad9      	ldr	r2, [pc, #868]	; (800957c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
        wc1 = value;
 8009218:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_G8ED));
 800921c:	ee1b 0a90 	vmov	r0, s23
 8009220:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8009224:	a90a      	add	r1, sp, #40	; 0x28
 8009226:	920a      	str	r2, [sp, #40]	; 0x28
 8009228:	f00c f90a 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800922c:	ee1b 1a90 	vmov	r1, s23
 8009230:	4630      	mov	r0, r6
 8009232:	f009 fadd 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 224, 240, 15);
 8009236:	210f      	movs	r1, #15
 8009238:	22e0      	movs	r2, #224	; 0xe0
 800923a:	ee1c 0a10 	vmov	r0, s24
 800923e:	9100      	str	r1, [sp, #0]
 8009240:	23f0      	movs	r3, #240	; 0xf0
 8009242:	4629      	mov	r1, r5
 8009244:	f7fa fa1f 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009248:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 800924c:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 8009250:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009254:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 8009258:	ee1c 1a10 	vmov	r1, s24
 800925c:	4638      	mov	r0, r7
 800925e:	4798      	blx	r3
 8009260:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009264:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009268:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800926c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8009270:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009274:	2b00      	cmp	r3, #0
 8009276:	d097      	beq.n	80091a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009278:	49c1      	ldr	r1, [pc, #772]	; (8009580 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 800927a:	880b      	ldrh	r3, [r1, #0]
 800927c:	2b32      	cmp	r3, #50	; 0x32
 800927e:	d99d      	bls.n	80091bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 8009280:	4bbc      	ldr	r3, [pc, #752]	; (8009574 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 8009282:	2132      	movs	r1, #50	; 0x32
 8009284:	6818      	ldr	r0, [r3, #0]
 8009286:	f001 f9ff 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 800928a:	4abb      	ldr	r2, [pc, #748]	; (8009578 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 800928c:	4603      	mov	r3, r0
 800928e:	210a      	movs	r1, #10
 8009290:	4648      	mov	r0, r9
 8009292:	f012 fd33 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8009296:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009298:	4ab8      	ldr	r2, [pc, #736]	; (800957c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800929a:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 800929e:	4601      	mov	r1, r0
 80092a0:	f04f 0935 	mov.w	r9, #53	; 0x35
 80092a4:	ee1c 0a10 	vmov	r0, s24
 80092a8:	920a      	str	r2, [sp, #40]	; 0x28
 80092aa:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80092ae:	f00c f8c7 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80092b2:	ee1c 1a10 	vmov	r1, s24
 80092b6:	4630      	mov	r0, r6
 80092b8:	f009 fa9a 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 209, 240, 15);
 80092bc:	200f      	movs	r0, #15
 80092be:	22d1      	movs	r2, #209	; 0xd1
 80092c0:	9000      	str	r0, [sp, #0]
 80092c2:	23f0      	movs	r3, #240	; 0xf0
 80092c4:	ee1c 0a90 	vmov	r0, s25
 80092c8:	4629      	mov	r1, r5
 80092ca:	f7fa f9dc 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80092ce:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 80092d2:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 80092d6:	4638      	mov	r0, r7
 80092d8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80092dc:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 80092e0:	ee1c 1a90 	vmov	r1, s25
 80092e4:	4798      	blx	r3
 80092e6:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80092ea:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 80092ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80092f2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 80092f6:	f204 6744 	addw	r7, r4, #1604	; 0x644
 80092fa:	2b00      	cmp	r3, #0
 80092fc:	f43f af54 	beq.w	80091a8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x334>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009300:	499f      	ldr	r1, [pc, #636]	; (8009580 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x70c>)
 8009302:	880b      	ldrh	r3, [r1, #0]
 8009304:	2b33      	cmp	r3, #51	; 0x33
 8009306:	f67f af59 	bls.w	80091bc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x348>
        return texts->getText(typedTextId);
 800930a:	4b9a      	ldr	r3, [pc, #616]	; (8009574 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x700>)
 800930c:	2133      	movs	r1, #51	; 0x33
 800930e:	6818      	ldr	r0, [r3, #0]
 8009310:	f001 f9ba 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8009314:	4a98      	ldr	r2, [pc, #608]	; (8009578 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x704>)
 8009316:	4603      	mov	r3, r0
 8009318:	210a      	movs	r1, #10
 800931a:	4638      	mov	r0, r7
 800931c:	f012 fcee 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009320:	4a96      	ldr	r2, [pc, #600]	; (800957c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 8009322:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009326:	2336      	movs	r3, #54	; 0x36
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009328:	ee1c 0a90 	vmov	r0, s25
 800932c:	a90a      	add	r1, sp, #40	; 0x28
 800932e:	920a      	str	r2, [sp, #40]	; 0x28
 8009330:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009334:	f00c f884 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009338:	ee1c 1a90 	vmov	r1, s25
 800933c:	4630      	mov	r0, r6
 800933e:	f009 fa57 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009342:	2304      	movs	r3, #4
    SMD1_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009344:	a90a      	add	r1, sp, #40	; 0x28
 8009346:	4650      	mov	r0, sl
 8009348:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800934c:	f009 f9e2 	bl	8012714 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_Gauge.setPosition(28, 103, 184, 106);
 8009350:	236a      	movs	r3, #106	; 0x6a
 8009352:	9300      	str	r3, [sp, #0]
 8009354:	2267      	movs	r2, #103	; 0x67
 8009356:	23b8      	movs	r3, #184	; 0xb8
 8009358:	211c      	movs	r1, #28
 800935a:	4650      	mov	r0, sl
 800935c:	f7fa f993 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_Gauge.setCenter(92, 92);
 8009360:	225c      	movs	r2, #92	; 0x5c
 8009362:	4611      	mov	r1, r2
 8009364:	4650      	mov	r0, sl
 8009366:	f00c fb8a 	bl	8015a7e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_Gauge.setStartEndAngle(-90, 90);
 800936a:	225a      	movs	r2, #90	; 0x5a
 800936c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009370:	4650      	mov	r0, sl
 8009372:	f00c fc09 	bl	8015b88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_Gauge.setRange(-90, 90);
 8009376:	462b      	mov	r3, r5
 8009378:	225a      	movs	r2, #90	; 0x5a
 800937a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800937e:	4650      	mov	r0, sl
 8009380:	9500      	str	r5, [sp, #0]
 8009382:	f009 f874 	bl	801246e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_Gauge.setValue(0);
 8009386:	4629      	mov	r1, r5
 8009388:	4650      	mov	r0, sl
 800938a:	f00c fba7 	bl	8015adc <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 800938e:	464b      	mov	r3, r9
 8009390:	2208      	movs	r2, #8
 8009392:	2105      	movs	r1, #5
 8009394:	4650      	mov	r0, sl
 8009396:	f00c fb5d 	bl	8015a54 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800939a:	2101      	movs	r1, #1
 800939c:	4650      	mov	r0, sl
 800939e:	f00c fafb 	bl	8015998 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80093a2:	2101      	movs	r1, #1
 80093a4:	4650      	mov	r0, sl
 80093a6:	f00c fafa 	bl	801599e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 80093aa:	4651      	mov	r1, sl
 80093ac:	4630      	mov	r0, r6
 80093ae:	f009 fa1f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 80093b2:	230a      	movs	r3, #10
 80093b4:	ee18 0a10 	vmov	r0, s16
 80093b8:	9300      	str	r3, [sp, #0]
 80093ba:	224b      	movs	r2, #75	; 0x4b
 80093bc:	23f0      	movs	r3, #240	; 0xf0
 80093be:	4629      	mov	r1, r5
 80093c0:	f7fa f961 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80093c4:	9b02      	ldr	r3, [sp, #8]
 80093c6:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093ca:	22a0      	movs	r2, #160	; 0xa0
 80093cc:	4611      	mov	r1, r2
 80093ce:	ee18 0a10 	vmov	r0, s16
 80093d2:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80093d6:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 80093da:	f00b fbeb 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80093de:	ee18 0a10 	vmov	r0, s16
 80093e2:	22a0      	movs	r2, #160	; 0xa0
 80093e4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80093e8:	f00b fbef 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80093ec:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 80093f0:	2b20      	cmp	r3, #32
 80093f2:	d006      	beq.n	8009402 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x58e>
        lineWidthQ5 = widthQ5;
 80093f4:	2320      	movs	r3, #32
        updateCachedShape();
 80093f6:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 80093fa:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 80093fe:	f00b fae3 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009402:	ee18 0a10 	vmov	r0, s16
 8009406:	2101      	movs	r1, #1
 8009408:	f00b fbea 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800940c:	ee18 1a10 	vmov	r1, s16
 8009410:	4630      	mov	r0, r6
 8009412:	f009 f9ed 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009416:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 800941a:	223c      	movs	r2, #60	; 0x3c
 800941c:	ee19 0a10 	vmov	r0, s18
 8009420:	211f      	movs	r1, #31
        linespace = space;
 8009422:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009426:	ad04      	add	r5, sp, #16
 8009428:	f7fa f920 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800942c:	ee19 1a10 	vmov	r1, s18
 8009430:	4628      	mov	r0, r5
        color = newColor;
 8009432:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009436:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 800943a:	f00b fd67 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800943e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009442:	ee19 3a10 	vmov	r3, s18
 8009446:	333c      	adds	r3, #60	; 0x3c
 8009448:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800944c:	4f4b      	ldr	r7, [pc, #300]	; (800957c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x708>)
 800944e:	970a      	str	r7, [sp, #40]	; 0x28
 8009450:	2351      	movs	r3, #81	; 0x51
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8009452:	ee19 0a10 	vmov	r0, s18
 8009456:	a90a      	add	r1, sp, #40	; 0x28
 8009458:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800945c:	f00b fff0 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009460:	ee19 1a10 	vmov	r1, s18
 8009464:	4630      	mov	r0, r6
 8009466:	f009 f9c3 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800946a:	230a      	movs	r3, #10
 800946c:	ee18 0a90 	vmov	r0, s17
 8009470:	9300      	str	r3, [sp, #0]
 8009472:	2232      	movs	r2, #50	; 0x32
 8009474:	23f0      	movs	r3, #240	; 0xf0
 8009476:	4649      	mov	r1, r9
 8009478:	f7fa f905 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 800947c:	9b03      	ldr	r3, [sp, #12]
 800947e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009482:	22a0      	movs	r2, #160	; 0xa0
 8009484:	4611      	mov	r1, r2
 8009486:	ee18 0a90 	vmov	r0, s17
 800948a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 800948e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009492:	f00b fb8f 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009496:	ee18 0a90 	vmov	r0, s17
 800949a:	22a0      	movs	r2, #160	; 0xa0
 800949c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80094a0:	f00b fb93 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80094a4:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 80094a8:	2b20      	cmp	r3, #32
 80094aa:	d006      	beq.n	80094ba <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x646>
        lineWidthQ5 = widthQ5;
 80094ac:	2320      	movs	r3, #32
        updateCachedShape();
 80094ae:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 80094b2:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 80094b6:	f00b fa87 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80094ba:	ee18 0a90 	vmov	r0, s17
 80094be:	2101      	movs	r1, #1
 80094c0:	f00b fb8e 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80094c4:	ee18 1a90 	vmov	r1, s17
 80094c8:	4630      	mov	r0, r6
 80094ca:	f009 f991 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80094ce:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 80094d2:	ee19 0a90 	vmov	r0, s19
 80094d6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80094d8:	f04f 0800 	mov.w	r8, #0
 80094dc:	2145      	movs	r1, #69	; 0x45
 80094de:	f7fa f8c5 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80094e2:	ee19 1a90 	vmov	r1, s19
 80094e6:	4628      	mov	r0, r5
        color = newColor;
 80094e8:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 80094ec:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 80094f0:	f00b fd0c 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80094f4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80094f8:	ee19 3a90 	vmov	r3, s19
 80094fc:	333c      	adds	r3, #60	; 0x3c
 80094fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009502:	2358      	movs	r3, #88	; 0x58
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8009504:	ee19 0a90 	vmov	r0, s19
 8009508:	a90a      	add	r1, sp, #40	; 0x28
 800950a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800950e:	970a      	str	r7, [sp, #40]	; 0x28
 8009510:	f00b ff96 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009514:	ee19 1a90 	vmov	r1, s19
 8009518:	4630      	mov	r0, r6
 800951a:	f009 f969 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_titel.setXY(54, 12);
 800951e:	ee1a 0a10 	vmov	r0, s20
 8009522:	220c      	movs	r2, #12
 8009524:	2136      	movs	r1, #54	; 0x36
 8009526:	f7fa f8a1 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800952a:	ee1a 1a10 	vmov	r1, s20
 800952e:	4628      	mov	r0, r5
        color = newColor;
 8009530:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009534:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009538:	f00b fce8 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800953c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009540:	ee1a 3a10 	vmov	r3, s20
 8009544:	333c      	adds	r3, #60	; 0x3c
 8009546:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800954a:	2357      	movs	r3, #87	; 0x57
    textArea_titel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800954c:	ee1a 0a10 	vmov	r0, s20
 8009550:	a90a      	add	r1, sp, #40	; 0x28
 8009552:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009556:	970a      	str	r7, [sp, #40]	; 0x28
 8009558:	f00b ff72 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800955c:	4630      	mov	r0, r6
 800955e:	ee1a 1a10 	vmov	r1, s20
 8009562:	f009 f945 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009566:	4620      	mov	r0, r4
 8009568:	b00d      	add	sp, #52	; 0x34
 800956a:	ecbd 8b0a 	vpop	{d8-d12}
 800956e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009572:	bf00      	nop
 8009574:	200138a0 	.word	0x200138a0
 8009578:	0802f481 	.word	0x0802f481
 800957c:	0802f4f4 	.word	0x0802f4f4
 8009580:	20013898 	.word	0x20013898

08009584 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8009584:	4770      	bx	lr

08009586 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009586:	4770      	bx	lr

08009588 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009588:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800958a:	68c2      	ldr	r2, [r0, #12]
 800958c:	6844      	ldr	r4, [r0, #4]
 800958e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009590:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009592:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009596:	07d2      	lsls	r2, r2, #31
 8009598:	bf48      	it	mi
 800959a:	5962      	ldrmi	r2, [r4, r5]
 800959c:	689b      	ldr	r3, [r3, #8]
    }
 800959e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80095a0:	bf48      	it	mi
 80095a2:	58d3      	ldrmi	r3, [r2, r3]
 80095a4:	4718      	bx	r3

080095a6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80095a6:	6843      	ldr	r3, [r0, #4]
 80095a8:	b12b      	cbz	r3, 80095b6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80095aa:	6883      	ldr	r3, [r0, #8]
 80095ac:	b92b      	cbnz	r3, 80095ba <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80095ae:	68c0      	ldr	r0, [r0, #12]
 80095b0:	f000 0001 	and.w	r0, r0, #1
 80095b4:	4770      	bx	lr
 80095b6:	4618      	mov	r0, r3
 80095b8:	4770      	bx	lr
 80095ba:	2001      	movs	r0, #1
    }
 80095bc:	4770      	bx	lr

080095be <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80095be:	b510      	push	{r4, lr}
 80095c0:	2110      	movs	r1, #16
 80095c2:	4604      	mov	r4, r0
 80095c4:	f023 fad5 	bl	802cb72 <_ZdlPvj>
 80095c8:	4620      	mov	r0, r4
 80095ca:	bd10      	pop	{r4, pc}

080095cc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095cc:	b510      	push	{r4, lr}
 80095ce:	4b03      	ldr	r3, [pc, #12]	; (80095dc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 80095d0:	6003      	str	r3, [r0, #0]
 80095d2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095d4:	f00d fce2 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095d8:	4620      	mov	r0, r4
 80095da:	bd10      	pop	{r4, pc}
 80095dc:	08030cac 	.word	0x08030cac

080095e0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80095e0:	b507      	push	{r0, r1, r2, lr}
 80095e2:	4b07      	ldr	r3, [pc, #28]	; (8009600 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 80095e4:	6003      	str	r3, [r0, #0]
 80095e6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80095e8:	f00d fcd8 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80095ec:	9801      	ldr	r0, [sp, #4]
 80095ee:	f241 4178 	movw	r1, #5240	; 0x1478
 80095f2:	f023 fabe 	bl	802cb72 <_ZdlPvj>
 80095f6:	9801      	ldr	r0, [sp, #4]
 80095f8:	b003      	add	sp, #12
 80095fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80095fe:	bf00      	nop
 8009600:	08030cac 	.word	0x08030cac

08009604 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_return)
 8009604:	3098      	adds	r0, #152	; 0x98
 8009606:	4288      	cmp	r0, r1
{
 8009608:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_return)
 800960a:	d105      	bne.n	8009618 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800960c:	f00f f9c8 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_return clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8009610:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8009614:	f7fb bfdc 	b.w	80055d0 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8009618:	bd08      	pop	{r3, pc}
	...

0800961c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 800961c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009620:	ed2d 8b0a 	vpush	{d8-d12}
 8009624:	4604      	mov	r4, r0
 8009626:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8009628:	46a0      	mov	r8, r4
 800962a:	2500      	movs	r5, #0
 800962c:	f010 fe38 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8009630:	4bcd      	ldr	r3, [pc, #820]	; (8009968 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x34c>)
 8009632:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009634:	f848 3b40 	str.w	r3, [r8], #64
        : Widget(), alpha(255), color(0)
 8009638:	2226      	movs	r2, #38	; 0x26
 800963a:	4629      	mov	r1, r5
 800963c:	4640      	mov	r0, r8
 800963e:	f024 fb84 	bl	802dd4a <memset>
 8009642:	4640      	mov	r0, r8
 8009644:	f7fa f844 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8009648:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800964c:	26ff      	movs	r6, #255	; 0xff
 800964e:	4bc7      	ldr	r3, [pc, #796]	; (800996c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x350>)
 8009650:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009652:	2226      	movs	r2, #38	; 0x26
 8009654:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009658:	4629      	mov	r1, r5
 800965a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800965e:	4638      	mov	r0, r7
 8009660:	66a5      	str	r5, [r4, #104]	; 0x68
 8009662:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009666:	f024 fb70 	bl	802dd4a <memset>
 800966a:	4638      	mov	r0, r7
 800966c:	f7fa f830 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8009670:	4bbf      	ldr	r3, [pc, #764]	; (8009970 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x354>)
 8009672:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009674:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009678:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800967c:	a90a      	add	r1, sp, #40	; 0x28
 800967e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8009682:	4638      	mov	r0, r7
        : Widget(), bitmap(bmp), alpha(255)
 8009684:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009688:	f00c fc8b 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800968c:	4658      	mov	r0, fp
 800968e:	f00c fdbf 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009692:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8009696:	f504 7994 	add.w	r9, r4, #296	; 0x128
 800969a:	4618      	mov	r0, r3
 800969c:	ee0a 3a90 	vmov	s21, r3
 80096a0:	f7fa f87a 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80096a4:	4648      	mov	r0, r9
 80096a6:	f7fa f877 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80096aa:	f504 73b8 	add.w	r3, r4, #368	; 0x170
 80096ae:	4618      	mov	r0, r3
 80096b0:	ee0b 3a10 	vmov	s22, r3
 80096b4:	f7fa f870 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80096b8:	f504 73dc 	add.w	r3, r4, #440	; 0x1b8
        : TextArea()
 80096bc:	4618      	mov	r0, r3
 80096be:	ee0b 3a90 	vmov	s23, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096c2:	4eac      	ldr	r6, [pc, #688]	; (8009974 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x358>)
        : TextArea()
 80096c4:	f7fa f868 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80096c8:	f504 7301 	add.w	r3, r4, #516	; 0x204
        : TextAreaWithWildcardBase(), wc1(0)
 80096cc:	f8c4 61b8 	str.w	r6, [r4, #440]	; 0x1b8
        : TextArea()
 80096d0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096d2:	f8c4 5200 	str.w	r5, [r4, #512]	; 0x200
 80096d6:	ee0c 3a10 	vmov	s24, r3
        : TextArea()
 80096da:	f7fa f85d 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 80096de:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80096e2:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80096e4:	f8c4 6204 	str.w	r6, [r4, #516]	; 0x204
 80096e8:	f8c4 524c 	str.w	r5, [r4, #588]	; 0x24c
 80096ec:	f504 7a27 	add.w	sl, r4, #668	; 0x29c
 80096f0:	ee0c 3a90 	vmov	s25, r3
        : TextArea()
 80096f4:	f7fa f850 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80096f8:	f8c4 6250 	str.w	r6, [r4, #592]	; 0x250
 80096fc:	f8c4 5298 	str.w	r5, [r4, #664]	; 0x298
 8009700:	4650      	mov	r0, sl
 8009702:	f00c f911 	bl	8015928 <_ZN8touchgfx5GaugeC1Ev>
 8009706:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 800970a:	4618      	mov	r0, r3
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800970c:	4e9a      	ldr	r6, [pc, #616]	; (8009978 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x35c>)
 800970e:	ee08 3a10 	vmov	s16, r3
 8009712:	f00b f939 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8009716:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
 800971a:	4618      	mov	r0, r3
 800971c:	9302      	str	r3, [sp, #8]
 800971e:	f7f9 fddb 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009722:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009726:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 800972a:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800972e:	f8c4 64ac 	str.w	r6, [r4, #1196]	; 0x4ac
 8009732:	4618      	mov	r0, r3
 8009734:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8009738:	ee09 3a10 	vmov	s18, r3
 800973c:	f7fa f82c 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8009740:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8009744:	4618      	mov	r0, r3
 8009746:	ee08 3a90 	vmov	s17, r3
 800974a:	f00b f91d 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 800974e:	f504 63af 	add.w	r3, r4, #1400	; 0x578
 8009752:	4618      	mov	r0, r3
 8009754:	9303      	str	r3, [sp, #12]
 8009756:	f7f9 fdbf 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800975a:	f106 0324 	add.w	r3, r6, #36	; 0x24
 800975e:	f8c4 3580 	str.w	r3, [r4, #1408]	; 0x580
 8009762:	f204 538c 	addw	r3, r4, #1420	; 0x58c
 8009766:	f8c4 6578 	str.w	r6, [r4, #1400]	; 0x578
 800976a:	4618      	mov	r0, r3
 800976c:	f8c4 5584 	str.w	r5, [r4, #1412]	; 0x584
 8009770:	ee09 3a90 	vmov	s19, r3
 8009774:	f7fa f810 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8009778:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 800977c:	4618      	mov	r0, r3
 800977e:	ee0a 3a10 	vmov	s20, r3
 8009782:	f7fa f809 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009786:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800978a:	4a7c      	ldr	r2, [pc, #496]	; (800997c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x360>)
 800978c:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
 8009790:	4a7b      	ldr	r2, [pc, #492]	; (8009980 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x364>)
 8009792:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
 8009796:	f8c3 446c 	str.w	r4, [r3, #1132]	; 0x46c
 800979a:	f8c3 5474 	str.w	r5, [r3, #1140]	; 0x474
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800979e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80097a2:	f504 60cb 	add.w	r0, r4, #1624	; 0x658
 80097a6:	f00d fbef 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80097aa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80097ae:	462a      	mov	r2, r5
 80097b0:	4640      	mov	r0, r8
 80097b2:	9300      	str	r3, [sp, #0]
 80097b4:	4629      	mov	r1, r5
 80097b6:	23f0      	movs	r3, #240	; 0xf0
 80097b8:	f7f9 ff65 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80097bc:	1d26      	adds	r6, r4, #4
        color = newColor;
 80097be:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80097c2:	66a3      	str	r3, [r4, #104]	; 0x68
 80097c4:	4641      	mov	r1, r8
 80097c6:	4630      	mov	r0, r6
 80097c8:	f009 f812 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 80097cc:	462a      	mov	r2, r5
 80097ce:	4638      	mov	r0, r7
 80097d0:	4629      	mov	r1, r5
 80097d2:	f7f9 ff4b 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80097d6:	f04f 0308 	mov.w	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80097da:	4638      	mov	r0, r7
 80097dc:	a90a      	add	r1, sp, #40	; 0x28
 80097de:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80097e2:	f00c fbde 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80097e6:	4639      	mov	r1, r7
 80097e8:	4630      	mov	r0, r6
 80097ea:	f009 f801 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_return.setXY(33, 256);
 80097ee:	4658      	mov	r0, fp
 80097f0:	f44f 7280 	mov.w	r2, #256	; 0x100
 80097f4:	2121      	movs	r1, #33	; 0x21
 80097f6:	f7f9 ff39 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80097fa:	2303      	movs	r3, #3
    buttonWithLabel_return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80097fc:	aa0a      	add	r2, sp, #40	; 0x28
 80097fe:	a909      	add	r1, sp, #36	; 0x24
 8009800:	4658      	mov	r0, fp
 8009802:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8009806:	2302      	movs	r3, #2
 8009808:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800980c:	f00c f9d3 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8009810:	2359      	movs	r3, #89	; 0x59
        updateTextPosition();
 8009812:	4658      	mov	r0, fp
 8009814:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8009818:	f7f9 ff6c 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel_return.setAction(buttonCallback);
 800981c:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
        color = col;
 8009820:	f04f 38ff 	mov.w	r8, #4294967295
 8009824:	3308      	adds	r3, #8
 8009826:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800982a:	4659      	mov	r1, fp
 800982c:	4630      	mov	r0, r6
        colorPressed = col;
 800982e:	e9c4 8835 	strd	r8, r8, [r4, #212]	; 0xd4
 8009832:	af04      	add	r7, sp, #16
 8009834:	f008 ffdc 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_n90C.setXY(0, 194);
 8009838:	22c2      	movs	r2, #194	; 0xc2
 800983a:	ee1a 0a90 	vmov	r0, s21
 800983e:	4629      	mov	r1, r5
 8009840:	f7f9 ff14 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009844:	ee1a 1a90 	vmov	r1, s21
 8009848:	4638      	mov	r0, r7
        color = newColor;
 800984a:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
        linespace = space;
 800984e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8009852:	f00b fb5b 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009856:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800985a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800985e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8009862:	4b48      	ldr	r3, [pc, #288]	; (8009984 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 8009864:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_n90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C7CD));
 8009866:	ee1a 0a90 	vmov	r0, s21
 800986a:	2313      	movs	r3, #19
 800986c:	a90a      	add	r1, sp, #40	; 0x28
 800986e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009872:	f00b fde5 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009876:	ee1a 1a90 	vmov	r1, s21
 800987a:	4630      	mov	r0, r6
 800987c:	f008 ffb8 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_p90C.setXY(217, 194);
 8009880:	22c2      	movs	r2, #194	; 0xc2
 8009882:	4648      	mov	r0, r9
 8009884:	21d9      	movs	r1, #217	; 0xd9
 8009886:	f7f9 fef1 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800988a:	4649      	mov	r1, r9
 800988c:	4638      	mov	r0, r7
        color = newColor;
 800988e:	f8c4 8158 	str.w	r8, [r4, #344]	; 0x158
        linespace = space;
 8009892:	f8a4 515c 	strh.w	r5, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 8009896:	f00b fb39 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800989a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800989e:	f504 73b2 	add.w	r3, r4, #356	; 0x164
 80098a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80098a6:	4b37      	ldr	r3, [pc, #220]	; (8009984 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80098a8:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_p90C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_85IX));
 80098aa:	4648      	mov	r0, r9
 80098ac:	2312      	movs	r3, #18
 80098ae:	a90a      	add	r1, sp, #40	; 0x28
 80098b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80098b4:	f00b fdc4 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098b8:	4649      	mov	r1, r9
 80098ba:	4630      	mov	r0, r6
 80098bc:	f008 ff98 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_0C.setXY(113, 85);
 80098c0:	2255      	movs	r2, #85	; 0x55
 80098c2:	ee1b 0a10 	vmov	r0, s22
 80098c6:	2171      	movs	r1, #113	; 0x71
 80098c8:	f7f9 fed0 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80098cc:	ee1b 1a10 	vmov	r1, s22
 80098d0:	4638      	mov	r0, r7
        color = newColor;
 80098d2:	f8c4 81a0 	str.w	r8, [r4, #416]	; 0x1a0
        linespace = space;
 80098d6:	f8a4 51a4 	strh.w	r5, [r4, #420]	; 0x1a4
        boundingArea = calculateBoundingArea();
 80098da:	f00b fb17 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80098de:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80098e2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80098e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80098ea:	4b26      	ldr	r3, [pc, #152]	; (8009984 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x368>)
 80098ec:	930a      	str	r3, [sp, #40]	; 0x28
    textArea_0C.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XVJO));
 80098ee:	ee1b 0a10 	vmov	r0, s22
 80098f2:	2314      	movs	r3, #20
 80098f4:	a90a      	add	r1, sp, #40	; 0x28
 80098f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80098fa:	f00b fda1 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80098fe:	ee1b 1a10 	vmov	r1, s22
 8009902:	4630      	mov	r0, r6
 8009904:	f008 ff74 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Current.setPosition(0, 239, 240, 15);
 8009908:	230f      	movs	r3, #15
 800990a:	22ef      	movs	r2, #239	; 0xef
 800990c:	ee1b 0a90 	vmov	r0, s23
 8009910:	9300      	str	r3, [sp, #0]
 8009912:	4629      	mov	r1, r5
 8009914:	23f0      	movs	r3, #240	; 0xf0
 8009916:	f7f9 feb6 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 800991a:	f8d4 31b8 	ldr.w	r3, [r4, #440]	; 0x1b8
        color = newColor;
 800991e:	f8c4 81e8 	str.w	r8, [r4, #488]	; 0x1e8
        boundingArea = calculateBoundingArea();
 8009922:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009926:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        boundingArea = calculateBoundingArea();
 800992a:	ee1b 1a90 	vmov	r1, s23
 800992e:	4638      	mov	r0, r7
 8009930:	4798      	blx	r3
 8009932:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009936:	f8df b064 	ldr.w	fp, [pc, #100]	; 800999c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x380>
 800993a:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 800993e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009942:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_CurrentBuffer, SMD3_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HT0R).getText());
 8009946:	f204 691c 	addw	r9, r4, #1564	; 0x61c
 800994a:	b92b      	cbnz	r3, 8009958 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x33c>
 800994c:	4b0e      	ldr	r3, [pc, #56]	; (8009988 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x36c>)
 800994e:	4a0f      	ldr	r2, [pc, #60]	; (800998c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009950:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009952:	480f      	ldr	r0, [pc, #60]	; (8009990 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x374>)
 8009954:	f023 fff4 	bl	802d940 <__assert_func>
 8009958:	4b0e      	ldr	r3, [pc, #56]	; (8009994 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x378>)
 800995a:	881b      	ldrh	r3, [r3, #0]
 800995c:	2b18      	cmp	r3, #24
 800995e:	d81f      	bhi.n	80099a0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x384>
 8009960:	4b0d      	ldr	r3, [pc, #52]	; (8009998 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x37c>)
 8009962:	4a0a      	ldr	r2, [pc, #40]	; (800998c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x370>)
 8009964:	2161      	movs	r1, #97	; 0x61
 8009966:	e7f4      	b.n	8009952 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x336>
 8009968:	08030cac 	.word	0x08030cac
 800996c:	08031a48 	.word	0x08031a48
 8009970:	08031c94 	.word	0x08031c94
 8009974:	0802f594 	.word	0x0802f594
 8009978:	0803177c 	.word	0x0803177c
 800997c:	08030c94 	.word	0x08030c94
 8009980:	08009605 	.word	0x08009605
 8009984:	0802f4f4 	.word	0x0802f4f4
 8009988:	0802f344 	.word	0x0802f344
 800998c:	0802f449 	.word	0x0802f449
 8009990:	0802f3c1 	.word	0x0802f3c1
 8009994:	20013898 	.word	0x20013898
 8009998:	0802f408 	.word	0x0802f408
 800999c:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 80099a0:	4bdc      	ldr	r3, [pc, #880]	; (8009d14 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 80099a2:	2118      	movs	r1, #24
 80099a4:	6818      	ldr	r0, [r3, #0]
 80099a6:	f000 fe6f 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80099aa:	4adb      	ldr	r2, [pc, #876]	; (8009d18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 80099ac:	4603      	mov	r3, r0
 80099ae:	210a      	movs	r1, #10
 80099b0:	4648      	mov	r0, r9
 80099b2:	f012 f9a3 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80099b6:	4ad9      	ldr	r2, [pc, #868]	; (8009d1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
        wc1 = value;
 80099b8:	f8c4 9200 	str.w	r9, [r4, #512]	; 0x200
 80099bc:	2319      	movs	r3, #25
    SMD3_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6OVJ));
 80099be:	ee1b 0a90 	vmov	r0, s23
 80099c2:	a90a      	add	r1, sp, #40	; 0x28
 80099c4:	920a      	str	r2, [sp, #40]	; 0x28
 80099c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80099ca:	f00b fd39 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80099ce:	ee1b 1a90 	vmov	r1, s23
 80099d2:	4630      	mov	r0, r6
 80099d4:	f008 ff0c 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Frequency.setPosition(0, 224, 240, 15);
 80099d8:	210f      	movs	r1, #15
 80099da:	22e0      	movs	r2, #224	; 0xe0
 80099dc:	ee1c 0a10 	vmov	r0, s24
 80099e0:	9100      	str	r1, [sp, #0]
 80099e2:	23f0      	movs	r3, #240	; 0xf0
 80099e4:	4629      	mov	r1, r5
 80099e6:	f7f9 fe4e 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 80099ea:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
        color = newColor;
 80099ee:	f8c4 8234 	str.w	r8, [r4, #564]	; 0x234
        boundingArea = calculateBoundingArea();
 80099f2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80099f6:	f8a4 5238 	strh.w	r5, [r4, #568]	; 0x238
        boundingArea = calculateBoundingArea();
 80099fa:	ee1c 1a10 	vmov	r1, s24
 80099fe:	4638      	mov	r0, r7
 8009a00:	4798      	blx	r3
 8009a02:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a06:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8009a0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a0e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_FrequencyBuffer, SMD3_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YT2E).getText());
 8009a12:	f504 69c6 	add.w	r9, r4, #1584	; 0x630
 8009a16:	2b00      	cmp	r3, #0
 8009a18:	d098      	beq.n	800994c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009a1a:	49c1      	ldr	r1, [pc, #772]	; (8009d20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009a1c:	880b      	ldrh	r3, [r1, #0]
 8009a1e:	2b16      	cmp	r3, #22
 8009a20:	d99e      	bls.n	8009960 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009a22:	4bbc      	ldr	r3, [pc, #752]	; (8009d14 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009a24:	2116      	movs	r1, #22
 8009a26:	6818      	ldr	r0, [r3, #0]
 8009a28:	f000 fe2e 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8009a2c:	4aba      	ldr	r2, [pc, #744]	; (8009d18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009a2e:	4603      	mov	r3, r0
 8009a30:	210a      	movs	r1, #10
 8009a32:	4648      	mov	r0, r9
 8009a34:	f012 f962 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD3_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W5I5));
 8009a38:	a80a      	add	r0, sp, #40	; 0x28
        : typedTextId(id)
 8009a3a:	4ab8      	ldr	r2, [pc, #736]	; (8009d1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009a3c:	f8c4 924c 	str.w	r9, [r4, #588]	; 0x24c
 8009a40:	2317      	movs	r3, #23
 8009a42:	4601      	mov	r1, r0
 8009a44:	ee1c 0a10 	vmov	r0, s24
 8009a48:	920a      	str	r2, [sp, #40]	; 0x28
 8009a4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009a4e:	f00b fcf7 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009a52:	ee1c 1a10 	vmov	r1, s24
 8009a56:	4630      	mov	r0, r6
 8009a58:	f008 feca 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD3_Distance.setPosition(0, 209, 240, 15);
 8009a5c:	200f      	movs	r0, #15
 8009a5e:	22d1      	movs	r2, #209	; 0xd1
 8009a60:	9000      	str	r0, [sp, #0]
 8009a62:	23f0      	movs	r3, #240	; 0xf0
 8009a64:	ee1c 0a90 	vmov	r0, s25
 8009a68:	4629      	mov	r1, r5
 8009a6a:	f7f9 fe0c 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009a6e:	f8d4 3250 	ldr.w	r3, [r4, #592]	; 0x250
        color = newColor;
 8009a72:	f8c4 8280 	str.w	r8, [r4, #640]	; 0x280
        boundingArea = calculateBoundingArea();
 8009a76:	4638      	mov	r0, r7
 8009a78:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8009a7c:	f8a4 5284 	strh.w	r5, [r4, #644]	; 0x284
        boundingArea = calculateBoundingArea();
 8009a80:	ee1c 1a90 	vmov	r1, s25
 8009a84:	4798      	blx	r3
 8009a86:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8009a8a:	f504 7323 	add.w	r3, r4, #652	; 0x28c
 8009a8e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009a92:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(SMD3_DistanceBuffer, SMD3_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EK4L).getText());
 8009a96:	f204 6744 	addw	r7, r4, #1604	; 0x644
 8009a9a:	2b00      	cmp	r3, #0
 8009a9c:	f43f af56 	beq.w	800994c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x330>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009aa0:	499f      	ldr	r1, [pc, #636]	; (8009d20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x704>)
 8009aa2:	880b      	ldrh	r3, [r1, #0]
 8009aa4:	2b15      	cmp	r3, #21
 8009aa6:	f67f af5b 	bls.w	8009960 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x344>
        return texts->getText(typedTextId);
 8009aaa:	4b9a      	ldr	r3, [pc, #616]	; (8009d14 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6f8>)
 8009aac:	2115      	movs	r1, #21
 8009aae:	6818      	ldr	r0, [r3, #0]
 8009ab0:	f000 fdea 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8009ab4:	4a98      	ldr	r2, [pc, #608]	; (8009d18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x6fc>)
 8009ab6:	4603      	mov	r3, r0
 8009ab8:	210a      	movs	r1, #10
 8009aba:	4638      	mov	r0, r7
 8009abc:	f012 f91e 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8009ac0:	4a96      	ldr	r2, [pc, #600]	; (8009d1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009ac2:	f8c4 7298 	str.w	r7, [r4, #664]	; 0x298
 8009ac6:	2336      	movs	r3, #54	; 0x36
    SMD3_Distance.setTypedText(touchgfx::TypedText(T_AMD3_DISTANCE));
 8009ac8:	ee1c 0a90 	vmov	r0, s25
 8009acc:	a90a      	add	r1, sp, #40	; 0x28
 8009ace:	920a      	str	r2, [sp, #40]	; 0x28
 8009ad0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009ad4:	f00b fcb4 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009ad8:	ee1c 1a90 	vmov	r1, s25
 8009adc:	4630      	mov	r0, r6
 8009ade:	f008 fe87 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8009ae2:	2304      	movs	r3, #4
    SMD3_Gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8009ae4:	a90a      	add	r1, sp, #40	; 0x28
 8009ae6:	4650      	mov	r0, sl
 8009ae8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009aec:	f008 fe12 	bl	8012714 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD3_Gauge.setPosition(28, 103, 184, 106);
 8009af0:	236a      	movs	r3, #106	; 0x6a
 8009af2:	9300      	str	r3, [sp, #0]
 8009af4:	2267      	movs	r2, #103	; 0x67
 8009af6:	23b8      	movs	r3, #184	; 0xb8
 8009af8:	211c      	movs	r1, #28
 8009afa:	4650      	mov	r0, sl
 8009afc:	f7f9 fdc3 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD3_Gauge.setCenter(92, 92);
 8009b00:	225c      	movs	r2, #92	; 0x5c
 8009b02:	4611      	mov	r1, r2
 8009b04:	4650      	mov	r0, sl
 8009b06:	f00b ffba 	bl	8015a7e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD3_Gauge.setStartEndAngle(-90, 90);
 8009b0a:	225a      	movs	r2, #90	; 0x5a
 8009b0c:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009b10:	4650      	mov	r0, sl
 8009b12:	f00c f839 	bl	8015b88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD3_Gauge.setRange(-90, 90);
 8009b16:	462b      	mov	r3, r5
 8009b18:	225a      	movs	r2, #90	; 0x5a
 8009b1a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8009b1e:	4650      	mov	r0, sl
 8009b20:	9500      	str	r5, [sp, #0]
 8009b22:	f008 fca4 	bl	801246e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD3_Gauge.setValue(0);
 8009b26:	4629      	mov	r1, r5
 8009b28:	4650      	mov	r0, sl
 8009b2a:	f00b ffd7 	bl	8015adc <_ZN8touchgfx5Gauge8setValueEi>
    SMD3_Gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8009b2e:	2335      	movs	r3, #53	; 0x35
 8009b30:	2208      	movs	r2, #8
 8009b32:	2105      	movs	r1, #5
 8009b34:	4650      	mov	r0, sl
 8009b36:	f00b ff8d 	bl	8015a54 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD3_Gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b3a:	2101      	movs	r1, #1
 8009b3c:	4650      	mov	r0, sl
 8009b3e:	f00b ff2b 	bl	8015998 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD3_Gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8009b42:	2101      	movs	r1, #1
 8009b44:	4650      	mov	r0, sl
 8009b46:	f00b ff2a 	bl	801599e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8009b4a:	4651      	mov	r1, sl
 8009b4c:	4630      	mov	r0, r6
 8009b4e:	f008 fe4f 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 8009b52:	230a      	movs	r3, #10
 8009b54:	ee18 0a10 	vmov	r0, s16
 8009b58:	9300      	str	r3, [sp, #0]
 8009b5a:	224b      	movs	r2, #75	; 0x4b
 8009b5c:	23f0      	movs	r3, #240	; 0xf0
 8009b5e:	4629      	mov	r1, r5
 8009b60:	f7f9 fd91 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009b64:	9b02      	ldr	r3, [sp, #8]
 8009b66:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b6a:	22a0      	movs	r2, #160	; 0xa0
 8009b6c:	4611      	mov	r1, r2
 8009b6e:	ee18 0a10 	vmov	r0, s16
 8009b72:	f8c4 84b8 	str.w	r8, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8009b76:	f8a4 84bc 	strh.w	r8, [r4, #1212]	; 0x4bc
 8009b7a:	f00b f81b 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009b7e:	ee18 0a10 	vmov	r0, s16
 8009b82:	22a0      	movs	r2, #160	; 0xa0
 8009b84:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009b88:	f00b f81f 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009b8c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8009b90:	2b20      	cmp	r3, #32
 8009b92:	d006      	beq.n	8009ba2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x586>
        lineWidthQ5 = widthQ5;
 8009b94:	2320      	movs	r3, #32
        updateCachedShape();
 8009b96:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8009b9a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8009b9e:	f00a ff13 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009ba2:	ee18 0a10 	vmov	r0, s16
 8009ba6:	2101      	movs	r1, #1
 8009ba8:	f00b f81a 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009bac:	ee18 1a10 	vmov	r1, s16
 8009bb0:	4630      	mov	r0, r6
 8009bb2:	f008 fe1d 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009bb6:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(31, 60);
 8009bba:	223c      	movs	r2, #60	; 0x3c
 8009bbc:	ee19 0a10 	vmov	r0, s18
 8009bc0:	211f      	movs	r1, #31
        linespace = space;
 8009bc2:	f04f 0900 	mov.w	r9, #0
        boundingArea = calculateBoundingArea();
 8009bc6:	ad04      	add	r5, sp, #16
 8009bc8:	f7f9 fd50 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009bcc:	ee19 1a10 	vmov	r1, s18
 8009bd0:	4628      	mov	r0, r5
        color = newColor;
 8009bd2:	f8c4 84f0 	str.w	r8, [r4, #1264]	; 0x4f0
        linespace = space;
 8009bd6:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8009bda:	f00b f997 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009bde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009be2:	ee19 3a10 	vmov	r3, s18
 8009be6:	333c      	adds	r3, #60	; 0x3c
 8009be8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009bec:	4f4b      	ldr	r7, [pc, #300]	; (8009d1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x700>)
 8009bee:	970a      	str	r7, [sp, #40]	; 0x28
 8009bf0:	2350      	movs	r3, #80	; 0x50
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8009bf2:	ee19 0a10 	vmov	r0, s18
 8009bf6:	a90a      	add	r1, sp, #40	; 0x28
 8009bf8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009bfc:	f00b fc20 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009c00:	ee19 1a10 	vmov	r1, s18
 8009c04:	4630      	mov	r0, r6
 8009c06:	f008 fdf3 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8009c0a:	230a      	movs	r3, #10
 8009c0c:	ee18 0a90 	vmov	r0, s17
 8009c10:	9300      	str	r3, [sp, #0]
 8009c12:	2232      	movs	r2, #50	; 0x32
 8009c14:	23f0      	movs	r3, #240	; 0xf0
 8009c16:	4649      	mov	r1, r9
 8009c18:	f7f9 fd35 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009c1c:	9b03      	ldr	r3, [sp, #12]
 8009c1e:	f8c4 3530 	str.w	r3, [r4, #1328]	; 0x530
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c22:	22a0      	movs	r2, #160	; 0xa0
 8009c24:	4611      	mov	r1, r2
 8009c26:	ee18 0a90 	vmov	r0, s17
 8009c2a:	f8c4 8584 	str.w	r8, [r4, #1412]	; 0x584
 8009c2e:	f8a4 8588 	strh.w	r8, [r4, #1416]	; 0x588
 8009c32:	f00a ffbf 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8009c36:	ee18 0a90 	vmov	r0, s17
 8009c3a:	22a0      	movs	r2, #160	; 0xa0
 8009c3c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8009c40:	f00a ffc3 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8009c44:	f8d4 3544 	ldr.w	r3, [r4, #1348]	; 0x544
 8009c48:	2b20      	cmp	r3, #32
 8009c4a:	d006      	beq.n	8009c5a <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x63e>
        lineWidthQ5 = widthQ5;
 8009c4c:	2320      	movs	r3, #32
        updateCachedShape();
 8009c4e:	ee18 0a90 	vmov	r0, s17
        lineWidthQ5 = widthQ5;
 8009c52:	f8c4 3544 	str.w	r3, [r4, #1348]	; 0x544
        updateCachedShape();
 8009c56:	f00a feb7 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8009c5a:	ee18 0a90 	vmov	r0, s17
 8009c5e:	2101      	movs	r1, #1
 8009c60:	f00a ffbe 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8009c64:	ee18 1a90 	vmov	r1, s17
 8009c68:	4630      	mov	r0, r6
 8009c6a:	f008 fdc1 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8009c6e:	f04f 39ff 	mov.w	r9, #4294967295
    textArea_name.setXY(69, 35);
 8009c72:	ee19 0a90 	vmov	r0, s19
 8009c76:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8009c78:	f04f 0800 	mov.w	r8, #0
 8009c7c:	2145      	movs	r1, #69	; 0x45
 8009c7e:	f7f9 fcf5 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8009c82:	ee19 1a90 	vmov	r1, s19
 8009c86:	4628      	mov	r0, r5
        color = newColor;
 8009c88:	f8c4 95bc 	str.w	r9, [r4, #1468]	; 0x5bc
        linespace = space;
 8009c8c:	f8a4 85c0 	strh.w	r8, [r4, #1472]	; 0x5c0
        boundingArea = calculateBoundingArea();
 8009c90:	f00b f93c 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009c94:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009c98:	ee19 3a90 	vmov	r3, s19
 8009c9c:	333c      	adds	r3, #60	; 0x3c
 8009c9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009ca2:	235b      	movs	r3, #91	; 0x5b
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8009ca4:	ee19 0a90 	vmov	r0, s19
 8009ca8:	a90a      	add	r1, sp, #40	; 0x28
 8009caa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009cae:	970a      	str	r7, [sp, #40]	; 0x28
 8009cb0:	f00b fbc6 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009cb4:	ee19 1a90 	vmov	r1, s19
 8009cb8:	4630      	mov	r0, r6
 8009cba:	f008 fd99 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 8009cbe:	ee1a 0a10 	vmov	r0, s20
 8009cc2:	220c      	movs	r2, #12
 8009cc4:	2136      	movs	r1, #54	; 0x36
 8009cc6:	f7f9 fcd1 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009cca:	ee1a 1a10 	vmov	r1, s20
 8009cce:	4628      	mov	r0, r5
        color = newColor;
 8009cd0:	f8c4 9604 	str.w	r9, [r4, #1540]	; 0x604
        linespace = space;
 8009cd4:	f8a4 8608 	strh.w	r8, [r4, #1544]	; 0x608
        boundingArea = calculateBoundingArea();
 8009cd8:	f00b f918 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8009cdc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009ce0:	ee1a 3a10 	vmov	r3, s20
 8009ce4:	333c      	adds	r3, #60	; 0x3c
 8009ce6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8009cea:	235a      	movs	r3, #90	; 0x5a
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8009cec:	ee1a 0a10 	vmov	r0, s20
 8009cf0:	a90a      	add	r1, sp, #40	; 0x28
 8009cf2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009cf6:	970a      	str	r7, [sp, #40]	; 0x28
 8009cf8:	f00b fba2 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009cfc:	4630      	mov	r0, r6
 8009cfe:	ee1a 1a10 	vmov	r1, s20
 8009d02:	f008 fd75 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8009d06:	4620      	mov	r0, r4
 8009d08:	b00d      	add	sp, #52	; 0x34
 8009d0a:	ecbd 8b0a 	vpop	{d8-d12}
 8009d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009d12:	bf00      	nop
 8009d14:	200138a0 	.word	0x200138a0
 8009d18:	0802f481 	.word	0x0802f481
 8009d1c:	0802f4f4 	.word	0x0802f4f4
 8009d20:	20013898 	.word	0x20013898

08009d24 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8009d24:	4770      	bx	lr

08009d26 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d26:	4770      	bx	lr

08009d28 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8009d28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d2a:	68c2      	ldr	r2, [r0, #12]
 8009d2c:	6844      	ldr	r4, [r0, #4]
 8009d2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8009d30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8009d32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d36:	07d2      	lsls	r2, r2, #31
 8009d38:	bf48      	it	mi
 8009d3a:	5962      	ldrmi	r2, [r4, r5]
 8009d3c:	689b      	ldr	r3, [r3, #8]
    }
 8009d3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8009d40:	bf48      	it	mi
 8009d42:	58d3      	ldrmi	r3, [r2, r3]
 8009d44:	4718      	bx	r3

08009d46 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8009d46:	6843      	ldr	r3, [r0, #4]
 8009d48:	b12b      	cbz	r3, 8009d56 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8009d4a:	6883      	ldr	r3, [r0, #8]
 8009d4c:	b92b      	cbnz	r3, 8009d5a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8009d4e:	68c0      	ldr	r0, [r0, #12]
 8009d50:	f000 0001 	and.w	r0, r0, #1
 8009d54:	4770      	bx	lr
 8009d56:	4618      	mov	r0, r3
 8009d58:	4770      	bx	lr
 8009d5a:	2001      	movs	r0, #1
    }
 8009d5c:	4770      	bx	lr

08009d5e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8009d5e:	b510      	push	{r4, lr}
 8009d60:	2110      	movs	r1, #16
 8009d62:	4604      	mov	r4, r0
 8009d64:	f022 ff05 	bl	802cb72 <_ZdlPvj>
 8009d68:	4620      	mov	r0, r4
 8009d6a:	bd10      	pop	{r4, pc}

08009d6c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d6c:	b510      	push	{r4, lr}
 8009d6e:	4b03      	ldr	r3, [pc, #12]	; (8009d7c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8009d70:	6003      	str	r3, [r0, #0]
 8009d72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d74:	f00d f912 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d78:	4620      	mov	r0, r4
 8009d7a:	bd10      	pop	{r4, pc}
 8009d7c:	08030cf8 	.word	0x08030cf8

08009d80 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8009d80:	b507      	push	{r0, r1, r2, lr}
 8009d82:	4b07      	ldr	r3, [pc, #28]	; (8009da0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8009d84:	6003      	str	r3, [r0, #0]
 8009d86:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8009d88:	f00d f908 	bl	8016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8009d8c:	9801      	ldr	r0, [sp, #4]
 8009d8e:	f241 117c 	movw	r1, #4476	; 0x117c
 8009d92:	f022 feee 	bl	802cb72 <_ZdlPvj>
 8009d96:	9801      	ldr	r0, [sp, #4]
 8009d98:	b003      	add	sp, #12
 8009d9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009d9e:	bf00      	nop
 8009da0:	08030cf8 	.word	0x08030cf8

08009da4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel_Return)
 8009da4:	30e4      	adds	r0, #228	; 0xe4
 8009da6:	4288      	cmp	r0, r1
{
 8009da8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel_Return)
 8009daa:	d105      	bne.n	8009db8 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009dac:	f00e fdf8 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel_Return clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8009db0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8009db4:	f7fb bbdc 	b.w	8005570 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8009db8:	bd08      	pop	{r3, pc}
	...

08009dbc <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8009dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009dc0:	ed2d 8b06 	vpush	{d8-d10}
 8009dc4:	4604      	mov	r4, r0
 8009dc6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8009dc8:	46a3      	mov	fp, r4
 8009dca:	2500      	movs	r5, #0
 8009dcc:	f010 fa68 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 8009dd0:	4b6e      	ldr	r3, [pc, #440]	; (8009f8c <_ZN20Project_InfoViewBaseC1Ev+0x1d0>)
 8009dd2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8009dd4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8009dd8:	2226      	movs	r2, #38	; 0x26
 8009dda:	4629      	mov	r1, r5
 8009ddc:	4658      	mov	r0, fp
 8009dde:	f023 ffb4 	bl	802dd4a <memset>
 8009de2:	4658      	mov	r0, fp
 8009de4:	f7f9 fc74 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8009de8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8009dec:	26ff      	movs	r6, #255	; 0xff
 8009dee:	4b68      	ldr	r3, [pc, #416]	; (8009f90 <_ZN20Project_InfoViewBaseC1Ev+0x1d4>)
 8009df0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8009df2:	2226      	movs	r2, #38	; 0x26
 8009df4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009df8:	4629      	mov	r1, r5
 8009dfa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009dfe:	4650      	mov	r0, sl
 8009e00:	66a5      	str	r5, [r4, #104]	; 0x68
 8009e02:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009e06:	f023 ffa0 	bl	802dd4a <memset>
 8009e0a:	4650      	mov	r0, sl
 8009e0c:	f7f9 fc60 	bl	80036d0 <_ZN8touchgfx6WidgetC1Ev>
 8009e10:	4b60      	ldr	r3, [pc, #384]	; (8009f94 <_ZN20Project_InfoViewBaseC1Ev+0x1d8>)
 8009e12:	66e3      	str	r3, [r4, #108]	; 0x6c
 8009e14:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8009e18:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8009e1c:	a90a      	add	r1, sp, #40	; 0x28
 8009e1e:	4650      	mov	r0, sl
 8009e20:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8009e24:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8009e28:	f00c f8bb 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8009e2c:	4648      	mov	r0, r9
 8009e2e:	f7f9 fcb3 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8009e32:	4b59      	ldr	r3, [pc, #356]	; (8009f98 <_ZN20Project_InfoViewBaseC1Ev+0x1dc>)
 8009e34:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8009e38:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8009e3c:	4618      	mov	r0, r3
 8009e3e:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8009e42:	ee09 3a90 	vmov	s19, r3
 8009e46:	f00c f9e3 	bl	8016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8009e4a:	f504 7396 	add.w	r3, r4, #300	; 0x12c
 8009e4e:	4618      	mov	r0, r3
 8009e50:	f504 78ba 	add.w	r8, r4, #372	; 0x174
 8009e54:	ee0a 3a10 	vmov	s20, r3
 8009e58:	f7f9 fc9e 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8009e5c:	4640      	mov	r0, r8
 8009e5e:	f00a fd93 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8009e62:	4e4e      	ldr	r6, [pc, #312]	; (8009f9c <_ZN20Project_InfoViewBaseC1Ev+0x1e0>)
 8009e64:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 8009e68:	4618      	mov	r0, r3
 8009e6a:	9302      	str	r3, [sp, #8]
 8009e6c:	f7f9 fa34 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009e70:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009e74:	f8c4 31ec 	str.w	r3, [r4, #492]	; 0x1ec
 8009e78:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8009e7c:	4618      	mov	r0, r3
 8009e7e:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8009e82:	f8c4 51f0 	str.w	r5, [r4, #496]	; 0x1f0
 8009e86:	f504 7710 	add.w	r7, r4, #576	; 0x240
 8009e8a:	ee08 3a10 	vmov	s16, r3
 8009e8e:	f7f9 fc83 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8009e92:	4638      	mov	r0, r7
 8009e94:	f00a fd78 	bl	8014988 <_ZN8touchgfx4LineC1Ev>
 8009e98:	f504 732c 	add.w	r3, r4, #688	; 0x2b0
 8009e9c:	4618      	mov	r0, r3
 8009e9e:	9303      	str	r3, [sp, #12]
 8009ea0:	f7f9 fa1a 	bl	80032d8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8009ea4:	f106 0324 	add.w	r3, r6, #36	; 0x24
 8009ea8:	f8c4 32b8 	str.w	r3, [r4, #696]	; 0x2b8
 8009eac:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
 8009eb0:	f8c4 62b0 	str.w	r6, [r4, #688]	; 0x2b0
 8009eb4:	4618      	mov	r0, r3
 8009eb6:	f8c4 52bc 	str.w	r5, [r4, #700]	; 0x2bc
 8009eba:	ee08 3a90 	vmov	s17, r3
 8009ebe:	f7f9 fc6b 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
 8009ec2:	f504 7343 	add.w	r3, r4, #780	; 0x30c
 8009ec6:	4618      	mov	r0, r3
 8009ec8:	ee09 3a10 	vmov	s18, r3
 8009ecc:	f7f9 fc64 	bl	8003798 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8009ed0:	4a33      	ldr	r2, [pc, #204]	; (8009fa0 <_ZN20Project_InfoViewBaseC1Ev+0x1e4>)
 8009ed2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8009ed6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8009eda:	4a32      	ldr	r2, [pc, #200]	; (8009fa4 <_ZN20Project_InfoViewBaseC1Ev+0x1e8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8009edc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8009ee0:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8009ee4:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8009ee8:	f00d f84e 	bl	8016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8009eec:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8009ef0:	462a      	mov	r2, r5
 8009ef2:	4658      	mov	r0, fp
 8009ef4:	9300      	str	r3, [sp, #0]
 8009ef6:	4629      	mov	r1, r5
 8009ef8:	23f0      	movs	r3, #240	; 0xf0
 8009efa:	f7f9 fbc4 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 8009efe:	1d26      	adds	r6, r4, #4
        color = newColor;
 8009f00:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8009f04:	66a3      	str	r3, [r4, #104]	; 0x68
 8009f06:	4659      	mov	r1, fp
 8009f08:	4630      	mov	r0, r6
 8009f0a:	f008 fc71 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_background.setXY(0, 0);
 8009f0e:	462a      	mov	r2, r5
 8009f10:	4650      	mov	r0, sl
 8009f12:	4629      	mov	r1, r5
 8009f14:	f7f9 fbaa 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8009f18:	2308      	movs	r3, #8
    image_background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8009f1a:	4650      	mov	r0, sl
 8009f1c:	a90a      	add	r1, sp, #40	; 0x28
 8009f1e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8009f22:	f00c f83e 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009f26:	4651      	mov	r1, sl
 8009f28:	4630      	mov	r0, r6
 8009f2a:	f008 fc61 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_auto_off.setXY(86, 308);
 8009f2e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8009f32:	2156      	movs	r1, #86	; 0x56
 8009f34:	4648      	mov	r0, r9
 8009f36:	f7f9 fb99 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8009f3a:	f04f 33ff 	mov.w	r3, #4294967295
 8009f3e:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8009f42:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8009f46:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8009f4a:	f10d 0b10 	add.w	fp, sp, #16
 8009f4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f52:	4649      	mov	r1, r9
 8009f54:	4658      	mov	r0, fp
 8009f56:	4798      	blx	r3
 8009f58:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8009f5c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8009f60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009f64:	4b10      	ldr	r3, [pc, #64]	; (8009fa8 <_ZN20Project_InfoViewBaseC1Ev+0x1ec>)
 8009f66:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8009f68:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8009f6c:	b92b      	cbnz	r3, 8009f7a <_ZN20Project_InfoViewBaseC1Ev+0x1be>
 8009f6e:	4b0f      	ldr	r3, [pc, #60]	; (8009fac <_ZN20Project_InfoViewBaseC1Ev+0x1f0>)
 8009f70:	4a0f      	ldr	r2, [pc, #60]	; (8009fb0 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f72:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f74:	480f      	ldr	r0, [pc, #60]	; (8009fb4 <_ZN20Project_InfoViewBaseC1Ev+0x1f8>)
 8009f76:	f023 fce3 	bl	802d940 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8009f7a:	4b0f      	ldr	r3, [pc, #60]	; (8009fb8 <_ZN20Project_InfoViewBaseC1Ev+0x1fc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f7c:	881b      	ldrh	r3, [r3, #0]
 8009f7e:	2b3e      	cmp	r3, #62	; 0x3e
 8009f80:	d81e      	bhi.n	8009fc0 <_ZN20Project_InfoViewBaseC1Ev+0x204>
 8009f82:	4b0e      	ldr	r3, [pc, #56]	; (8009fbc <_ZN20Project_InfoViewBaseC1Ev+0x200>)
 8009f84:	4a0a      	ldr	r2, [pc, #40]	; (8009fb0 <_ZN20Project_InfoViewBaseC1Ev+0x1f4>)
 8009f86:	2161      	movs	r1, #97	; 0x61
 8009f88:	e7f4      	b.n	8009f74 <_ZN20Project_InfoViewBaseC1Ev+0x1b8>
 8009f8a:	bf00      	nop
 8009f8c:	08030cf8 	.word	0x08030cf8
 8009f90:	08031a48 	.word	0x08031a48
 8009f94:	08031c94 	.word	0x08031c94
 8009f98:	0802f594 	.word	0x0802f594
 8009f9c:	0803177c 	.word	0x0803177c
 8009fa0:	08030ce0 	.word	0x08030ce0
 8009fa4:	08009da5 	.word	0x08009da5
 8009fa8:	20013894 	.word	0x20013894
 8009fac:	0802f344 	.word	0x0802f344
 8009fb0:	0802f449 	.word	0x0802f449
 8009fb4:	0802f3c1 	.word	0x0802f3c1
 8009fb8:	20013898 	.word	0x20013898
 8009fbc:	0802f408 	.word	0x0802f408
        return texts->getText(typedTextId);
 8009fc0:	4ba0      	ldr	r3, [pc, #640]	; (800a244 <_ZN20Project_InfoViewBaseC1Ev+0x488>)
 8009fc2:	213e      	movs	r1, #62	; 0x3e
 8009fc4:	6818      	ldr	r0, [r3, #0]
 8009fc6:	f000 fb5f 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8009fca:	4a9f      	ldr	r2, [pc, #636]	; (800a248 <_ZN20Project_InfoViewBaseC1Ev+0x48c>)
 8009fcc:	4603      	mov	r3, r0
 8009fce:	2104      	movs	r1, #4
 8009fd0:	4650      	mov	r0, sl
 8009fd2:	f011 fe93 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8009fd6:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea_auto_off.resizeToCurrentText();
 8009fda:	4648      	mov	r0, r9
 8009fdc:	f00b fa10 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8009fe0:	f8df a268 	ldr.w	sl, [pc, #616]	; 800a24c <_ZN20Project_InfoViewBaseC1Ev+0x490>
 8009fe4:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8009fe8:	233f      	movs	r3, #63	; 0x3f
    textArea_auto_off.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8009fea:	a90a      	add	r1, sp, #40	; 0x28
 8009fec:	4648      	mov	r0, r9
 8009fee:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8009ff2:	f00b fa25 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009ff6:	4649      	mov	r1, r9
 8009ff8:	4630      	mov	r0, r6
 8009ffa:	f008 fbf9 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel_Return.setXY(33, 240);
 8009ffe:	ee19 0a90 	vmov	r0, s19
 800a002:	22f0      	movs	r2, #240	; 0xf0
 800a004:	2121      	movs	r1, #33	; 0x21
 800a006:	f7f9 fb31 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800a00a:	2303      	movs	r3, #3
    buttonWithLabel_Return.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800a00c:	aa0a      	add	r2, sp, #40	; 0x28
 800a00e:	a909      	add	r1, sp, #36	; 0x24
 800a010:	ee19 0a90 	vmov	r0, s19
 800a014:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a018:	2302      	movs	r3, #2
 800a01a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800a01e:	f00b fdca 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800a022:	2364      	movs	r3, #100	; 0x64
        updateTextPosition();
 800a024:	ee19 0a90 	vmov	r0, s19
 800a028:	f8a4 311c 	strh.w	r3, [r4, #284]	; 0x11c
 800a02c:	f7f9 fb62 	bl	80036f4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800a030:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800a034:	e9c4 3348 	strd	r3, r3, [r4, #288]	; 0x120
    buttonWithLabel_Return.setAction(buttonCallback);
 800a038:	f504 538b 	add.w	r3, r4, #4448	; 0x1160
 800a03c:	330c      	adds	r3, #12
 800a03e:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800a042:	ee19 1a90 	vmov	r1, s19
 800a046:	4630      	mov	r0, r6
 800a048:	f008 fbd2 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_Info.setXY(7, 91);
 800a04c:	225b      	movs	r2, #91	; 0x5b
 800a04e:	ee1a 0a10 	vmov	r0, s20
 800a052:	2107      	movs	r1, #7
 800a054:	f7f9 fb0a 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800a058:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800a05c:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 800a060:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        boundingArea = calculateBoundingArea();
 800a064:	4658      	mov	r0, fp
        linespace = space;
 800a066:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 800a06a:	f00a ff4f 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a06e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800a072:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800a076:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800a07a:	2365      	movs	r3, #101	; 0x65
    textArea_Info.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800a07c:	ee1a 0a10 	vmov	r0, s20
 800a080:	a90a      	add	r1, sp, #40	; 0x28
 800a082:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a086:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a08a:	f00b f9d9 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a08e:	ee1a 1a10 	vmov	r1, s20
 800a092:	4630      	mov	r0, r6
 800a094:	f008 fbac 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line2.setPosition(0, 75, 240, 10);
 800a098:	230a      	movs	r3, #10
 800a09a:	9300      	str	r3, [sp, #0]
 800a09c:	224b      	movs	r2, #75	; 0x4b
 800a09e:	23f0      	movs	r3, #240	; 0xf0
 800a0a0:	4629      	mov	r1, r5
 800a0a2:	4640      	mov	r0, r8
 800a0a4:	f7f9 faef 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a0a8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a0ac:	22a0      	movs	r2, #160	; 0xa0
 800a0ae:	f8c4 31f0 	str.w	r3, [r4, #496]	; 0x1f0
        color565 = LCD16bpp::getNativeColor(painterColor);
 800a0b2:	f8a4 31f4 	strh.w	r3, [r4, #500]	; 0x1f4
 800a0b6:	9b02      	ldr	r3, [sp, #8]
 800a0b8:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800a0bc:	4611      	mov	r1, r2
 800a0be:	4640      	mov	r0, r8
 800a0c0:	f00a fd78 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a0c4:	22a0      	movs	r2, #160	; 0xa0
 800a0c6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a0ca:	4640      	mov	r0, r8
 800a0cc:	f00a fd7d 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a0d0:	f8d4 31b0 	ldr.w	r3, [r4, #432]	; 0x1b0
 800a0d4:	2b20      	cmp	r3, #32
 800a0d6:	d005      	beq.n	800a0e4 <_ZN20Project_InfoViewBaseC1Ev+0x328>
        lineWidthQ5 = widthQ5;
 800a0d8:	2320      	movs	r3, #32
 800a0da:	f8c4 31b0 	str.w	r3, [r4, #432]	; 0x1b0
        updateCachedShape();
 800a0de:	4640      	mov	r0, r8
 800a0e0:	f00a fc72 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a0e4:	4640      	mov	r0, r8
 800a0e6:	2101      	movs	r1, #1
 800a0e8:	f00a fd7a 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a0ec:	4641      	mov	r1, r8
 800a0ee:	4630      	mov	r0, r6
 800a0f0:	f008 fb7e 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a0f4:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_menu.setXY(70, 60);
 800a0f8:	223c      	movs	r2, #60	; 0x3c
        linespace = space;
 800a0fa:	f04f 0900 	mov.w	r9, #0
 800a0fe:	ee18 0a10 	vmov	r0, s16
 800a102:	2146      	movs	r1, #70	; 0x46
        boundingArea = calculateBoundingArea();
 800a104:	ad04      	add	r5, sp, #16
 800a106:	f7f9 fab1 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800a10a:	ee18 1a10 	vmov	r1, s16
 800a10e:	4628      	mov	r0, r5
        color = newColor;
 800a110:	f8c4 8228 	str.w	r8, [r4, #552]	; 0x228
        linespace = space;
 800a114:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800a118:	f00a fef8 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a11c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a120:	ee18 3a10 	vmov	r3, s16
 800a124:	333c      	adds	r3, #60	; 0x3c
 800a126:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea_menu.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BYJD));
 800a12a:	ee18 0a10 	vmov	r0, s16
 800a12e:	a90a      	add	r1, sp, #40	; 0x28
 800a130:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a134:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 800a138:	f00b f982 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a13c:	ee18 1a10 	vmov	r1, s16
 800a140:	4630      	mov	r0, r6
 800a142:	f008 fb55 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800a146:	230a      	movs	r3, #10
 800a148:	9300      	str	r3, [sp, #0]
 800a14a:	2232      	movs	r2, #50	; 0x32
 800a14c:	23f0      	movs	r3, #240	; 0xf0
 800a14e:	4649      	mov	r1, r9
 800a150:	4638      	mov	r0, r7
 800a152:	f7f9 fa98 	bl	8003686 <_ZN8touchgfx8Drawable11setPositionEssss>
 800a156:	9b03      	ldr	r3, [sp, #12]
 800a158:	f8c4 3268 	str.w	r3, [r4, #616]	; 0x268
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a15c:	22a0      	movs	r2, #160	; 0xa0
 800a15e:	4611      	mov	r1, r2
 800a160:	4638      	mov	r0, r7
 800a162:	f8c4 82bc 	str.w	r8, [r4, #700]	; 0x2bc
 800a166:	f8a4 82c0 	strh.w	r8, [r4, #704]	; 0x2c0
 800a16a:	f00a fd23 	bl	8014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800a16e:	22a0      	movs	r2, #160	; 0xa0
 800a170:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800a174:	4638      	mov	r0, r7
 800a176:	f00a fd28 	bl	8014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800a17a:	f8d4 327c 	ldr.w	r3, [r4, #636]	; 0x27c
 800a17e:	2b20      	cmp	r3, #32
 800a180:	d005      	beq.n	800a18e <_ZN20Project_InfoViewBaseC1Ev+0x3d2>
        lineWidthQ5 = widthQ5;
 800a182:	2320      	movs	r3, #32
 800a184:	f8c4 327c 	str.w	r3, [r4, #636]	; 0x27c
        updateCachedShape();
 800a188:	4638      	mov	r0, r7
 800a18a:	f00a fc1d 	bl	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800a18e:	4638      	mov	r0, r7
 800a190:	2101      	movs	r1, #1
 800a192:	f00a fd25 	bl	8014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800a196:	4639      	mov	r1, r7
 800a198:	4630      	mov	r0, r6
 800a19a:	f008 fb29 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800a19e:	f04f 38ff 	mov.w	r8, #4294967295
    textArea_name.setXY(69, 35);
 800a1a2:	ee18 0a90 	vmov	r0, s17
 800a1a6:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800a1a8:	2700      	movs	r7, #0
 800a1aa:	2145      	movs	r1, #69	; 0x45
 800a1ac:	f7f9 fa5e 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800a1b0:	ee18 1a90 	vmov	r1, s17
 800a1b4:	4628      	mov	r0, r5
        color = newColor;
 800a1b6:	f8c4 82f4 	str.w	r8, [r4, #756]	; 0x2f4
        linespace = space;
 800a1ba:	f8a4 72f8 	strh.w	r7, [r4, #760]	; 0x2f8
        boundingArea = calculateBoundingArea();
 800a1be:	f00a fea5 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a1c2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a1c6:	ee18 3a90 	vmov	r3, s17
 800a1ca:	333c      	adds	r3, #60	; 0x3c
 800a1cc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a1d0:	2367      	movs	r3, #103	; 0x67
    textArea_name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800a1d2:	ee18 0a90 	vmov	r0, s17
 800a1d6:	a90a      	add	r1, sp, #40	; 0x28
 800a1d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a1dc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a1e0:	f00b f92e 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a1e4:	ee18 1a90 	vmov	r1, s17
 800a1e8:	4630      	mov	r0, r6
 800a1ea:	f008 fb01 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea_title.setXY(54, 12);
 800a1ee:	ee19 0a10 	vmov	r0, s18
 800a1f2:	220c      	movs	r2, #12
 800a1f4:	2136      	movs	r1, #54	; 0x36
 800a1f6:	f7f9 fa39 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800a1fa:	ee19 1a10 	vmov	r1, s18
 800a1fe:	4628      	mov	r0, r5
        color = newColor;
 800a200:	f8c4 833c 	str.w	r8, [r4, #828]	; 0x33c
        linespace = space;
 800a204:	f8a4 7340 	strh.w	r7, [r4, #832]	; 0x340
        boundingArea = calculateBoundingArea();
 800a208:	f00a fe80 	bl	8014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800a20c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800a210:	ee19 3a10 	vmov	r3, s18
 800a214:	333c      	adds	r3, #60	; 0x3c
 800a216:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800a21a:	2366      	movs	r3, #102	; 0x66
    textArea_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800a21c:	ee19 0a10 	vmov	r0, s18
 800a220:	a90a      	add	r1, sp, #40	; 0x28
 800a222:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800a226:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800a22a:	f00b f909 	bl	8015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a22e:	4630      	mov	r0, r6
 800a230:	ee19 1a10 	vmov	r1, s18
 800a234:	f008 fadc 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a238:	4620      	mov	r0, r4
 800a23a:	b00d      	add	sp, #52	; 0x34
 800a23c:	ecbd 8b06 	vpop	{d8-d10}
 800a240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a244:	200138a0 	.word	0x200138a0
 800a248:	0802f481 	.word	0x0802f481
 800a24c:	0802f4f4 	.word	0x0802f4f4

0800a250 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 800a250:	4770      	bx	lr

0800a252 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 800a252:	4770      	bx	lr

0800a254 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a254:	b510      	push	{r4, lr}
}
 800a256:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 800a258:	4604      	mov	r4, r0
}
 800a25a:	f022 fc8a 	bl	802cb72 <_ZdlPvj>
 800a25e:	4620      	mov	r0, r4
 800a260:	bd10      	pop	{r4, pc}
	...

0800a264 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 800a264:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a268:	4604      	mov	r4, r0
 800a26a:	4626      	mov	r6, r4
 800a26c:	f010 f818 	bl	801a2a0 <_ZN8touchgfx6ScreenC1Ev>
 800a270:	2500      	movs	r5, #0
 800a272:	4b2e      	ldr	r3, [pc, #184]	; (800a32c <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 800a274:	63e5      	str	r5, [r4, #60]	; 0x3c
 800a276:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800a27a:	4b2d      	ldr	r3, [pc, #180]	; (800a330 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800a27c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800a27e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 800a282:	f44f 7280 	mov.w	r2, #256	; 0x100
 800a286:	23ff      	movs	r3, #255	; 0xff
 800a288:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800a28c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 800a290:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800a294:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800a298:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800a29c:	4a25      	ldr	r2, [pc, #148]	; (800a334 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800a29e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800a2a2:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800a2a6:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800a2a8:	a901      	add	r1, sp, #4
 800a2aa:	4638      	mov	r0, r7
 800a2ac:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 800a2b0:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 800a2b4:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800a2b8:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800a2bc:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 800a2c0:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 800a2c4:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800a2c8:	66a5      	str	r5, [r4, #104]	; 0x68
 800a2ca:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a2ce:	f00b fe68 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 800a2d2:	462a      	mov	r2, r5
 800a2d4:	4629      	mov	r1, r5
 800a2d6:	4630      	mov	r0, r6
 800a2d8:	f7f9 f9c8 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800a2dc:	4630      	mov	r0, r6
 800a2de:	21f0      	movs	r1, #240	; 0xf0
 800a2e0:	f7f8 ff46 	bl	8003170 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800a2e4:	4630      	mov	r0, r6
 800a2e6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800a2ea:	f7f8 ff43 	bl	8003174 <_ZN8touchgfx8Drawable9setHeightEs>
 800a2ee:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800a2f2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a2f6:	66a3      	str	r3, [r4, #104]	; 0x68
 800a2f8:	4631      	mov	r1, r6
 800a2fa:	4640      	mov	r0, r8
 800a2fc:	f008 fa78 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image_shutdown.setXY(-3, 0);
 800a300:	462a      	mov	r2, r5
 800a302:	4638      	mov	r0, r7
 800a304:	f06f 0102 	mvn.w	r1, #2
 800a308:	f7f9 f9b0 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 800a30c:	230b      	movs	r3, #11
    image_shutdown.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 800a30e:	a901      	add	r1, sp, #4
 800a310:	4638      	mov	r0, r7
 800a312:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a316:	f00b fe44 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a31a:	4640      	mov	r0, r8
 800a31c:	4639      	mov	r1, r7
 800a31e:	f008 fa67 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800a322:	4620      	mov	r0, r4
 800a324:	b002      	add	sp, #8
 800a326:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a32a:	bf00      	nop
 800a32c:	08030d2c 	.word	0x08030d2c
 800a330:	08031a48 	.word	0x08031a48
 800a334:	08031c94 	.word	0x08031c94

0800a338 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a338:	4770      	bx	lr
	...

0800a33c <_Z23getFont_verdana_10_4bppv>:
{
 800a33c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a33e:	4d17      	ldr	r5, [pc, #92]	; (800a39c <_Z23getFont_verdana_10_4bppv+0x60>)
 800a340:	682c      	ldr	r4, [r5, #0]
 800a342:	f3bf 8f5b 	dmb	ish
 800a346:	f014 0401 	ands.w	r4, r4, #1
{
 800a34a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800a34c:	d122      	bne.n	800a394 <_Z23getFont_verdana_10_4bppv+0x58>
 800a34e:	4628      	mov	r0, r5
 800a350:	f022 fc11 	bl	802cb76 <__cxa_guard_acquire>
 800a354:	b1f0      	cbz	r0, 800a394 <_Z23getFont_verdana_10_4bppv+0x58>
 800a356:	233f      	movs	r3, #63	; 0x3f
 800a358:	9309      	str	r3, [sp, #36]	; 0x24
 800a35a:	4b11      	ldr	r3, [pc, #68]	; (800a3a0 <_Z23getFont_verdana_10_4bppv+0x64>)
 800a35c:	9308      	str	r3, [sp, #32]
 800a35e:	4b11      	ldr	r3, [pc, #68]	; (800a3a4 <_Z23getFont_verdana_10_4bppv+0x68>)
 800a360:	9307      	str	r3, [sp, #28]
 800a362:	2301      	movs	r3, #1
 800a364:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a368:	9304      	str	r3, [sp, #16]
 800a36a:	2304      	movs	r3, #4
 800a36c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a370:	230a      	movs	r3, #10
 800a372:	490d      	ldr	r1, [pc, #52]	; (800a3a8 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800a374:	9300      	str	r3, [sp, #0]
 800a376:	225f      	movs	r2, #95	; 0x5f
 800a378:	230c      	movs	r3, #12
 800a37a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a37e:	480b      	ldr	r0, [pc, #44]	; (800a3ac <_Z23getFont_verdana_10_4bppv+0x70>)
 800a380:	940a      	str	r4, [sp, #40]	; 0x28
 800a382:	9401      	str	r4, [sp, #4]
 800a384:	f7fc f9da 	bl	800673c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a388:	4809      	ldr	r0, [pc, #36]	; (800a3b0 <_Z23getFont_verdana_10_4bppv+0x74>)
 800a38a:	f023 faf7 	bl	802d97c <atexit>
 800a38e:	4628      	mov	r0, r5
 800a390:	f022 fbfd 	bl	802cb8e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 800a394:	4805      	ldr	r0, [pc, #20]	; (800a3ac <_Z23getFont_verdana_10_4bppv+0x70>)
 800a396:	b00f      	add	sp, #60	; 0x3c
 800a398:	bd30      	pop	{r4, r5, pc}
 800a39a:	bf00      	nop
 800a39c:	2000293c 	.word	0x2000293c
 800a3a0:	08049938 	.word	0x08049938
 800a3a4:	08049b74 	.word	0x08049b74
 800a3a8:	08048980 	.word	0x08048980
 800a3ac:	20002940 	.word	0x20002940
 800a3b0:	0800a339 	.word	0x0800a339

0800a3b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3b4:	4770      	bx	lr
	...

0800a3b8 <_Z23getFont_verdana_12_4bppv>:
{
 800a3b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3ba:	4d17      	ldr	r5, [pc, #92]	; (800a418 <_Z23getFont_verdana_12_4bppv+0x60>)
 800a3bc:	682c      	ldr	r4, [r5, #0]
 800a3be:	f3bf 8f5b 	dmb	ish
 800a3c2:	f014 0401 	ands.w	r4, r4, #1
{
 800a3c6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800a3c8:	d122      	bne.n	800a410 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3ca:	4628      	mov	r0, r5
 800a3cc:	f022 fbd3 	bl	802cb76 <__cxa_guard_acquire>
 800a3d0:	b1f0      	cbz	r0, 800a410 <_Z23getFont_verdana_12_4bppv+0x58>
 800a3d2:	233f      	movs	r3, #63	; 0x3f
 800a3d4:	9309      	str	r3, [sp, #36]	; 0x24
 800a3d6:	4b11      	ldr	r3, [pc, #68]	; (800a41c <_Z23getFont_verdana_12_4bppv+0x64>)
 800a3d8:	9308      	str	r3, [sp, #32]
 800a3da:	4b11      	ldr	r3, [pc, #68]	; (800a420 <_Z23getFont_verdana_12_4bppv+0x68>)
 800a3dc:	9307      	str	r3, [sp, #28]
 800a3de:	2301      	movs	r3, #1
 800a3e0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a3e4:	9304      	str	r3, [sp, #16]
 800a3e6:	2304      	movs	r3, #4
 800a3e8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a3ec:	230c      	movs	r3, #12
 800a3ee:	490d      	ldr	r1, [pc, #52]	; (800a424 <_Z23getFont_verdana_12_4bppv+0x6c>)
 800a3f0:	9300      	str	r3, [sp, #0]
 800a3f2:	2260      	movs	r2, #96	; 0x60
 800a3f4:	230f      	movs	r3, #15
 800a3f6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a3fa:	480b      	ldr	r0, [pc, #44]	; (800a428 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a3fc:	940a      	str	r4, [sp, #40]	; 0x28
 800a3fe:	9401      	str	r4, [sp, #4]
 800a400:	f7fc f99c 	bl	800673c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a404:	4809      	ldr	r0, [pc, #36]	; (800a42c <_Z23getFont_verdana_12_4bppv+0x74>)
 800a406:	f023 fab9 	bl	802d97c <atexit>
 800a40a:	4628      	mov	r0, r5
 800a40c:	f022 fbbf 	bl	802cb8e <__cxa_guard_release>
    return verdana_12_4bpp;
}
 800a410:	4805      	ldr	r0, [pc, #20]	; (800a428 <_Z23getFont_verdana_12_4bppv+0x70>)
 800a412:	b00f      	add	sp, #60	; 0x3c
 800a414:	bd30      	pop	{r4, r5, pc}
 800a416:	bf00      	nop
 800a418:	2000296c 	.word	0x2000296c
 800a41c:	0804996c 	.word	0x0804996c
 800a420:	08049b78 	.word	0x08049b78
 800a424:	08048eb4 	.word	0x08048eb4
 800a428:	20002970 	.word	0x20002970
 800a42c:	0800a3b5 	.word	0x0800a3b5

0800a430 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a430:	4770      	bx	lr
	...

0800a434 <_Z23getFont_verdana_19_4bppv>:
{
 800a434:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a436:	4d17      	ldr	r5, [pc, #92]	; (800a494 <_Z23getFont_verdana_19_4bppv+0x60>)
 800a438:	682c      	ldr	r4, [r5, #0]
 800a43a:	f3bf 8f5b 	dmb	ish
 800a43e:	f014 0401 	ands.w	r4, r4, #1
{
 800a442:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800a444:	d122      	bne.n	800a48c <_Z23getFont_verdana_19_4bppv+0x58>
 800a446:	4628      	mov	r0, r5
 800a448:	f022 fb95 	bl	802cb76 <__cxa_guard_acquire>
 800a44c:	b1f0      	cbz	r0, 800a48c <_Z23getFont_verdana_19_4bppv+0x58>
 800a44e:	233f      	movs	r3, #63	; 0x3f
 800a450:	9309      	str	r3, [sp, #36]	; 0x24
 800a452:	4b11      	ldr	r3, [pc, #68]	; (800a498 <_Z23getFont_verdana_19_4bppv+0x64>)
 800a454:	9308      	str	r3, [sp, #32]
 800a456:	4b11      	ldr	r3, [pc, #68]	; (800a49c <_Z23getFont_verdana_19_4bppv+0x68>)
 800a458:	9307      	str	r3, [sp, #28]
 800a45a:	2301      	movs	r3, #1
 800a45c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800a460:	9304      	str	r3, [sp, #16]
 800a462:	2304      	movs	r3, #4
 800a464:	e9cd 4302 	strd	r4, r3, [sp, #8]
 800a468:	2313      	movs	r3, #19
 800a46a:	490d      	ldr	r1, [pc, #52]	; (800a4a0 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800a46c:	9300      	str	r3, [sp, #0]
 800a46e:	225f      	movs	r2, #95	; 0x5f
 800a470:	2317      	movs	r3, #23
 800a472:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a476:	480b      	ldr	r0, [pc, #44]	; (800a4a4 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a478:	940a      	str	r4, [sp, #40]	; 0x28
 800a47a:	9401      	str	r4, [sp, #4]
 800a47c:	f7fc f95e 	bl	800673c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a480:	4809      	ldr	r0, [pc, #36]	; (800a4a8 <_Z23getFont_verdana_19_4bppv+0x74>)
 800a482:	f023 fa7b 	bl	802d97c <atexit>
 800a486:	4628      	mov	r0, r5
 800a488:	f022 fb81 	bl	802cb8e <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800a48c:	4805      	ldr	r0, [pc, #20]	; (800a4a4 <_Z23getFont_verdana_19_4bppv+0x70>)
 800a48e:	b00f      	add	sp, #60	; 0x3c
 800a490:	bd30      	pop	{r4, r5, pc}
 800a492:	bf00      	nop
 800a494:	2000299c 	.word	0x2000299c
 800a498:	080499f0 	.word	0x080499f0
 800a49c:	08049b7c 	.word	0x08049b7c
 800a4a0:	080493f4 	.word	0x080493f4
 800a4a4:	200029a0 	.word	0x200029a0
 800a4a8:	0800a431 	.word	0x0800a431

0800a4ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4ac:	4770      	bx	lr
	...

0800a4b0 <_Z23getFont_verdana_40_4bppv>:
{
 800a4b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4b2:	4d16      	ldr	r5, [pc, #88]	; (800a50c <_Z23getFont_verdana_40_4bppv+0x5c>)
 800a4b4:	682c      	ldr	r4, [r5, #0]
 800a4b6:	f3bf 8f5b 	dmb	ish
 800a4ba:	f014 0401 	ands.w	r4, r4, #1
{
 800a4be:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a4c0:	d120      	bne.n	800a504 <_Z23getFont_verdana_40_4bppv+0x54>
 800a4c2:	4628      	mov	r0, r5
 800a4c4:	f022 fb57 	bl	802cb76 <__cxa_guard_acquire>
 800a4c8:	b1e0      	cbz	r0, 800a504 <_Z23getFont_verdana_40_4bppv+0x54>
 800a4ca:	233f      	movs	r3, #63	; 0x3f
 800a4cc:	9309      	str	r3, [sp, #36]	; 0x24
 800a4ce:	4b10      	ldr	r3, [pc, #64]	; (800a510 <_Z23getFont_verdana_40_4bppv+0x60>)
 800a4d0:	9308      	str	r3, [sp, #32]
 800a4d2:	4b10      	ldr	r3, [pc, #64]	; (800a514 <_Z23getFont_verdana_40_4bppv+0x64>)
 800a4d4:	4910      	ldr	r1, [pc, #64]	; (800a518 <_Z23getFont_verdana_40_4bppv+0x68>)
 800a4d6:	4811      	ldr	r0, [pc, #68]	; (800a51c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a4d8:	940a      	str	r4, [sp, #40]	; 0x28
 800a4da:	2201      	movs	r2, #1
 800a4dc:	e9cd 4306 	strd	r4, r3, [sp, #24]
 800a4e0:	2304      	movs	r3, #4
 800a4e2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800a4e6:	2328      	movs	r3, #40	; 0x28
 800a4e8:	9300      	str	r3, [sp, #0]
 800a4ea:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800a4ee:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800a4f2:	9405      	str	r4, [sp, #20]
 800a4f4:	f7fc f922 	bl	800673c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a4f8:	4809      	ldr	r0, [pc, #36]	; (800a520 <_Z23getFont_verdana_40_4bppv+0x70>)
 800a4fa:	f023 fa3f 	bl	802d97c <atexit>
 800a4fe:	4628      	mov	r0, r5
 800a500:	f022 fb45 	bl	802cb8e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800a504:	4805      	ldr	r0, [pc, #20]	; (800a51c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800a506:	b00f      	add	sp, #60	; 0x3c
 800a508:	bd30      	pop	{r4, r5, pc}
 800a50a:	bf00      	nop
 800a50c:	200029cc 	.word	0x200029cc
 800a510:	08049b70 	.word	0x08049b70
 800a514:	08049b80 	.word	0x08049b80
 800a518:	08049928 	.word	0x08049928
 800a51c:	200029d0 	.word	0x200029d0
 800a520:	0800a4ad 	.word	0x0800a4ad

0800a524 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800a524:	2000      	movs	r0, #0
 800a526:	4770      	bx	lr

0800a528 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800a528:	2000      	movs	r0, #0
 800a52a:	4770      	bx	lr

0800a52c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a52c:	b40e      	push	{r1, r2, r3}
 800a52e:	b503      	push	{r0, r1, lr}
 800a530:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a532:	2100      	movs	r1, #0
{
 800a534:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800a538:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a53a:	f00f f9ef 	bl	801991c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a53e:	b002      	add	sp, #8
 800a540:	f85d eb04 	ldr.w	lr, [sp], #4
 800a544:	b003      	add	sp, #12
 800a546:	4770      	bx	lr

0800a548 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a548:	b40c      	push	{r2, r3}
 800a54a:	b507      	push	{r0, r1, r2, lr}
 800a54c:	ab04      	add	r3, sp, #16
 800a54e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800a552:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a554:	f00f f9e2 	bl	801991c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800a558:	b003      	add	sp, #12
 800a55a:	f85d eb04 	ldr.w	lr, [sp], #4
 800a55e:	b002      	add	sp, #8
 800a560:	4770      	bx	lr
	...

0800a564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800a564:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800a566:	b510      	push	{r4, lr}
 800a568:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800a56a:	b373      	cbz	r3, 800a5ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a56c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800a56e:	b92b      	cbnz	r3, 800a57c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800a570:	4b18      	ldr	r3, [pc, #96]	; (800a5d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800a572:	4a19      	ldr	r2, [pc, #100]	; (800a5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800a574:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a576:	4819      	ldr	r0, [pc, #100]	; (800a5dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800a578:	f023 f9e2 	bl	802d940 <__assert_func>
            return buffer[pos];
 800a57c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800a57e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800a582:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800a584:	b30b      	cbz	r3, 800a5ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800a586:	f010 fe04 	bl	801b192 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800a58a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800a58c:	2b01      	cmp	r3, #1
 800a58e:	d803      	bhi.n	800a598 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800a590:	4b13      	ldr	r3, [pc, #76]	; (800a5e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800a592:	4a14      	ldr	r2, [pc, #80]	; (800a5e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800a594:	21cb      	movs	r1, #203	; 0xcb
 800a596:	e7ee      	b.n	800a576 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800a598:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800a59a:	1c53      	adds	r3, r2, #1
 800a59c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800a59e:	2b09      	cmp	r3, #9
 800a5a0:	4619      	mov	r1, r3
 800a5a2:	bf88      	it	hi
 800a5a4:	f1a3 010a 	subhi.w	r1, r3, #10
 800a5a8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a5ac:	f640 103f 	movw	r0, #2367	; 0x93f
 800a5b0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800a5b2:	4281      	cmp	r1, r0
 800a5b4:	d109      	bne.n	800a5ca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800a5b6:	2b0a      	cmp	r3, #10
 800a5b8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800a5bc:	bf28      	it	cs
 800a5be:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800a5c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800a5c4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800a5c6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800a5c8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800a5ca:	4620      	mov	r0, r4
}
 800a5cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800a5d0:	f010 bce2 	b.w	801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a5d4:	08030d58 	.word	0x08030d58
 800a5d8:	08030d61 	.word	0x08030d61
 800a5dc:	08030e0c 	.word	0x08030e0c
 800a5e0:	08030e56 	.word	0x08030e56
 800a5e4:	08030e64 	.word	0x08030e64

0800a5e8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800a5e8:	f010 bc9d 	b.w	801af26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800a5ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a5ec:	b510      	push	{r4, lr}
 800a5ee:	b086      	sub	sp, #24
 800a5f0:	ac02      	add	r4, sp, #8
 800a5f2:	e884 0006 	stmia.w	r4, {r1, r2}
 800a5f6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800a5f8:	ab0a      	add	r3, sp, #40	; 0x28
 800a5fa:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a5fc:	9301      	str	r3, [sp, #4]
 800a5fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a600:	9300      	str	r3, [sp, #0]
 800a602:	4621      	mov	r1, r4
 800a604:	9b08      	ldr	r3, [sp, #32]
 800a606:	f00d fd4d 	bl	80180a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a60a:	b006      	add	sp, #24
 800a60c:	bd10      	pop	{r4, pc}
	...

0800a610 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a610:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800a612:	bb18      	cbnz	r0, 800a65c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800a614:	4b12      	ldr	r3, [pc, #72]	; (800a660 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800a616:	4813      	ldr	r0, [pc, #76]	; (800a664 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800a618:	681c      	ldr	r4, [r3, #0]
 800a61a:	4913      	ldr	r1, [pc, #76]	; (800a668 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 800a61c:	b1b4      	cbz	r4, 800a64c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a61e:	6822      	ldr	r2, [r4, #0]
 800a620:	4422      	add	r2, r4
 800a622:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a624:	6862      	ldr	r2, [r4, #4]
 800a626:	4422      	add	r2, r4
 800a628:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a62a:	68a2      	ldr	r2, [r4, #8]
 800a62c:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800a62e:	4b0f      	ldr	r3, [pc, #60]	; (800a66c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800a630:	2200      	movs	r2, #0
 800a632:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a634:	f000 f838 	bl	800a6a8 <_ZN17TypedTextDatabase8getFontsEv>
 800a638:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a63a:	f000 f833 	bl	800a6a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800a63e:	4b0c      	ldr	r3, [pc, #48]	; (800a670 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800a640:	601c      	str	r4, [r3, #0]
        fonts = f;
 800a642:	4b0c      	ldr	r3, [pc, #48]	; (800a674 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800a644:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800a646:	4b0c      	ldr	r3, [pc, #48]	; (800a678 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800a648:	8018      	strh	r0, [r3, #0]
    }
}
 800a64a:	e007      	b.n	800a65c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800a64c:	4b0b      	ldr	r3, [pc, #44]	; (800a67c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800a64e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a650:	4b0b      	ldr	r3, [pc, #44]	; (800a680 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800a652:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a654:	4b0b      	ldr	r3, [pc, #44]	; (800a684 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800a656:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800a658:	2c00      	cmp	r4, #0
 800a65a:	d1e8      	bne.n	800a62e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800a65c:	bd38      	pop	{r3, r4, r5, pc}
 800a65e:	bf00      	nop
 800a660:	200029fc 	.word	0x200029fc
 800a664:	20002a00 	.word	0x20002a00
 800a668:	20002a04 	.word	0x20002a04
 800a66c:	20002a08 	.word	0x20002a08
 800a670:	20013894 	.word	0x20013894
 800a674:	2001389c 	.word	0x2001389c
 800a678:	20013898 	.word	0x20013898
 800a67c:	08049d4c 	.word	0x08049d4c
 800a680:	08049b84 	.word	0x08049b84
 800a684:	0804a2b4 	.word	0x0804a2b4

0800a688 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a688:	4b04      	ldr	r3, [pc, #16]	; (800a69c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800a68a:	681b      	ldr	r3, [r3, #0]
 800a68c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800a690:	4b03      	ldr	r3, [pc, #12]	; (800a6a0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800a692:	681b      	ldr	r3, [r3, #0]
}
 800a694:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800a698:	4770      	bx	lr
 800a69a:	bf00      	nop
 800a69c:	20002a04 	.word	0x20002a04
 800a6a0:	20002a00 	.word	0x20002a00

0800a6a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800a6a4:	2072      	movs	r0, #114	; 0x72
 800a6a6:	4770      	bx	lr

0800a6a8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 800a6a8:	4800      	ldr	r0, [pc, #0]	; (800a6ac <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800a6aa:	4770      	bx	lr
 800a6ac:	20002a0c 	.word	0x20002a0c

0800a6b0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a6b0:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800a6b2:	f7ff febf 	bl	800a434 <_Z23getFont_verdana_19_4bppv>
};
 800a6b6:	4c06      	ldr	r4, [pc, #24]	; (800a6d0 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 800a6b8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800a6ba:	f7ff fef9 	bl	800a4b0 <_Z23getFont_verdana_40_4bppv>
};
 800a6be:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 800a6c0:	f7ff fe3c 	bl	800a33c <_Z23getFont_verdana_10_4bppv>
};
 800a6c4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800a6c6:	f7ff fe77 	bl	800a3b8 <_Z23getFont_verdana_12_4bppv>
};
 800a6ca:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800a6cc:	bd10      	pop	{r4, pc}
 800a6ce:	bf00      	nop
 800a6d0:	20002a0c 	.word	0x20002a0c

0800a6d4 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 800a6d4:	4770      	bx	lr

0800a6d6 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 800a6d6:	3804      	subs	r0, #4
 800a6d8:	4770      	bx	lr

0800a6da <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800a6da:	4770      	bx	lr

0800a6dc <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800a6dc:	4770      	bx	lr

0800a6de <_ZN24Calibration_PadPresenterD0Ev>:
 800a6de:	b510      	push	{r4, lr}
 800a6e0:	2110      	movs	r1, #16
 800a6e2:	4604      	mov	r4, r0
 800a6e4:	f022 fa45 	bl	802cb72 <_ZdlPvj>
 800a6e8:	4620      	mov	r0, r4
 800a6ea:	bd10      	pop	{r4, pc}

0800a6ec <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 800a6ec:	f1a0 0004 	sub.w	r0, r0, #4
 800a6f0:	e7f5      	b.n	800a6de <_ZN24Calibration_PadPresenterD0Ev>

0800a6f2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800a6f2:	4770      	bx	lr

0800a6f4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 800a6f4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800a6f6:	2200      	movs	r2, #0
 800a6f8:	6082      	str	r2, [r0, #8]
    : view(v)
 800a6fa:	4a04      	ldr	r2, [pc, #16]	; (800a70c <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 800a6fc:	60c1      	str	r1, [r0, #12]
 800a6fe:	f102 0408 	add.w	r4, r2, #8
 800a702:	3224      	adds	r2, #36	; 0x24
 800a704:	6004      	str	r4, [r0, #0]
 800a706:	6042      	str	r2, [r0, #4]
}
 800a708:	bd10      	pop	{r4, pc}
 800a70a:	bf00      	nop
 800a70c:	08030f38 	.word	0x08030f38

0800a710 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800a710:	4770      	bx	lr

0800a712 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800a712:	4770      	bx	lr

0800a714 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 800a714:	b510      	push	{r4, lr}
 800a716:	4b03      	ldr	r3, [pc, #12]	; (800a724 <_ZN19Calibration_PadViewD1Ev+0x10>)
 800a718:	6003      	str	r3, [r0, #0]
 800a71a:	4604      	mov	r4, r0
 800a71c:	f7f8 ff50 	bl	80035c0 <_ZN23Calibration_PadViewBaseD1Ev>
 800a720:	4620      	mov	r0, r4
 800a722:	bd10      	pop	{r4, pc}
 800a724:	08030f70 	.word	0x08030f70

0800a728 <_ZN19Calibration_PadViewD0Ev>:
 800a728:	b510      	push	{r4, lr}
 800a72a:	4604      	mov	r4, r0
 800a72c:	f7ff fff2 	bl	800a714 <_ZN19Calibration_PadViewD1Ev>
 800a730:	4620      	mov	r0, r4
 800a732:	f641 5104 	movw	r1, #7428	; 0x1d04
 800a736:	f022 fa1c 	bl	802cb72 <_ZdlPvj>
 800a73a:	4620      	mov	r0, r4
 800a73c:	bd10      	pop	{r4, pc}
	...

0800a740 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800a740:	b510      	push	{r4, lr}
 800a742:	4604      	mov	r4, r0
 800a744:	f7f9 fae0 	bl	8003d08 <_ZN23Calibration_PadViewBaseC1Ev>
 800a748:	4b01      	ldr	r3, [pc, #4]	; (800a750 <_ZN19Calibration_PadViewC1Ev+0x10>)
 800a74a:	6023      	str	r3, [r4, #0]
}
 800a74c:	4620      	mov	r0, r4
 800a74e:	bd10      	pop	{r4, pc}
 800a750:	08030f70 	.word	0x08030f70

0800a754 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 800a754:	b570      	push	{r4, r5, r6, lr}
 800a756:	4604      	mov	r4, r0
 800a758:	b0ca      	sub	sp, #296	; 0x128
 800a75a:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 800a75e:	4631      	mov	r1, r6
 800a760:	a80d      	add	r0, sp, #52	; 0x34
 800a762:	f7f9 f845 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a766:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800a76a:	9317      	str	r3, [sp, #92]	; 0x5c
 800a76c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800a770:	9318      	str	r3, [sp, #96]	; 0x60
 800a772:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800a776:	4a57      	ldr	r2, [pc, #348]	; (800a8d4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 800a778:	9319      	str	r3, [sp, #100]	; 0x64
 800a77a:	f504 718c 	add.w	r1, r4, #280	; 0x118
 800a77e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800a782:	920d      	str	r2, [sp, #52]	; 0x34
 800a784:	a81b      	add	r0, sp, #108	; 0x6c
 800a786:	931a      	str	r3, [sp, #104]	; 0x68
 800a788:	f7f9 f832 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a78c:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800a790:	9325      	str	r3, [sp, #148]	; 0x94
 800a792:	4b51      	ldr	r3, [pc, #324]	; (800a8d8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 800a794:	931b      	str	r3, [sp, #108]	; 0x6c
 800a796:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 800a79a:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 800a79e:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 800a7a2:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 800a7a6:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 800a7aa:	a827      	add	r0, sp, #156	; 0x9c
 800a7ac:	f7f9 f820 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a7b0:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 800a7b4:	9331      	str	r3, [sp, #196]	; 0xc4
 800a7b6:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 800a7ba:	4b48      	ldr	r3, [pc, #288]	; (800a8dc <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 800a7bc:	9327      	str	r3, [sp, #156]	; 0x9c
 800a7be:	a832      	add	r0, sp, #200	; 0xc8
 800a7c0:	f7f9 f816 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 800a7c4:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 800a7c8:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 800a7cc:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 800a7d0:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 800a7d4:	4b42      	ldr	r3, [pc, #264]	; (800a8e0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 800a7d6:	9332      	str	r3, [sp, #200]	; 0xc8
 800a7d8:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 800a7dc:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 800a7e0:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 800a7e4:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 800a7e8:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 800a7ec:	a83e      	add	r0, sp, #248	; 0xf8
 800a7ee:	f7f8 ffff 	bl	80037f0 <_ZN8touchgfx8DrawableC1ERKS0_>
 800a7f2:	4b3c      	ldr	r3, [pc, #240]	; (800a8e4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 800a7f4:	933e      	str	r3, [sp, #248]	; 0xf8
 800a7f6:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a7fa:	4d3b      	ldr	r5, [pc, #236]	; (800a8e8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 800a7fc:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 800a800:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 800a804:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 800a808:	a901      	add	r1, sp, #4
 800a80a:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 800a80e:	4837      	ldr	r0, [pc, #220]	; (800a8ec <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 800a810:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 800a814:	220c      	movs	r2, #12
 800a816:	f7f6 fb51 	bl	8000ebc <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 800a81a:	9b01      	ldr	r3, [sp, #4]
 800a81c:	462a      	mov	r2, r5
 800a81e:	210a      	movs	r1, #10
 800a820:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800a824:	f011 fa6a 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 800a828:	9b02      	ldr	r3, [sp, #8]
 800a82a:	462a      	mov	r2, r5
 800a82c:	210a      	movs	r1, #10
 800a82e:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 800a832:	f011 fa63 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 800a836:	9b03      	ldr	r3, [sp, #12]
 800a838:	462a      	mov	r2, r5
 800a83a:	210a      	movs	r1, #10
 800a83c:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 800a840:	f011 fa5c 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 800a844:	9b04      	ldr	r3, [sp, #16]
 800a846:	462a      	mov	r2, r5
 800a848:	210a      	movs	r1, #10
 800a84a:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 800a84e:	f011 fa55 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 800a852:	9b05      	ldr	r3, [sp, #20]
 800a854:	462a      	mov	r2, r5
 800a856:	210a      	movs	r1, #10
 800a858:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 800a85c:	f011 fa4e 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 800a860:	9b06      	ldr	r3, [sp, #24]
 800a862:	462a      	mov	r2, r5
 800a864:	210a      	movs	r1, #10
 800a866:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 800a86a:	f011 fa47 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 800a86e:	9b07      	ldr	r3, [sp, #28]
 800a870:	462a      	mov	r2, r5
 800a872:	210a      	movs	r1, #10
 800a874:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 800a878:	f011 fa40 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 800a87c:	9b08      	ldr	r3, [sp, #32]
 800a87e:	462a      	mov	r2, r5
 800a880:	210a      	movs	r1, #10
 800a882:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 800a886:	f011 fa39 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 800a88a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a88c:	462a      	mov	r2, r5
 800a88e:	210a      	movs	r1, #10
 800a890:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 800a894:	f011 fa32 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 800a898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a89a:	462a      	mov	r2, r5
 800a89c:	210a      	movs	r1, #10
 800a89e:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 800a8a2:	f011 fa2b 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 800a8a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a8a8:	462a      	mov	r2, r5
 800a8aa:	210a      	movs	r1, #10
 800a8ac:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800a8b0:	f011 fa24 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 800a8b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a8b6:	462a      	mov	r2, r5
 800a8b8:	210a      	movs	r1, #10
 800a8ba:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 800a8be:	f011 fa1d 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 800a8c2:	4630      	mov	r0, r6
 800a8c4:	f00f f954 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

#endif
}
 800a8c8:	a80d      	add	r0, sp, #52	; 0x34
 800a8ca:	f008 fa1f 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
 800a8ce:	b04a      	add	sp, #296	; 0x128
 800a8d0:	bd70      	pop	{r4, r5, r6, pc}
 800a8d2:	bf00      	nop
 800a8d4:	080315f0 	.word	0x080315f0
 800a8d8:	080316b4 	.word	0x080316b4
 800a8dc:	0802f504 	.word	0x0802f504
 800a8e0:	08031ab0 	.word	0x08031ab0
 800a8e4:	08031c94 	.word	0x08031c94
 800a8e8:	0802f446 	.word	0x0802f446
 800a8ec:	081e0000 	.word	0x081e0000

0800a8f0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 800a8f0:	f7f8 be26 	b.w	8003540 <_ZN23Calibration_PadViewBase11setupScreenEv>

0800a8f4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a8f4:	4770      	bx	lr

0800a8f6 <_ZN19FrontendApplicationD0Ev>:
 800a8f6:	b510      	push	{r4, lr}
 800a8f8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800a8fc:	4604      	mov	r4, r0
 800a8fe:	f022 f938 	bl	802cb72 <_ZdlPvj>
 800a902:	4620      	mov	r0, r4
 800a904:	bd10      	pop	{r4, pc}

0800a906 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a906:	b510      	push	{r4, lr}
 800a908:	4604      	mov	r4, r0
    {
        model.tick();
 800a90a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800a90e:	f000 fae3 	bl	800aed8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a912:	4620      	mov	r0, r4
    }
 800a914:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 800a918:	f00e b906 	b.w	8018b28 <_ZN8touchgfx11Application15handleTickEventEv>

0800a91c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a91c:	b510      	push	{r4, lr}
 800a91e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800a920:	f7fa fde6 	bl	80054f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a924:	4b01      	ldr	r3, [pc, #4]	; (800a92c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800a926:	6023      	str	r3, [r4, #0]
{

}
 800a928:	4620      	mov	r0, r4
 800a92a:	bd10      	pop	{r4, pc}
 800a92c:	08030fb0 	.word	0x08030fb0

0800a930 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 800a930:	4770      	bx	lr

0800a932 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 800a932:	3804      	subs	r0, #4
 800a934:	4770      	bx	lr

0800a936 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800a936:	4770      	bx	lr

0800a938 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a938:	68c0      	ldr	r0, [r0, #12]
 800a93a:	6803      	ldr	r3, [r0, #0]
 800a93c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a93e:	4718      	bx	r3

0800a940 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800a940:	f1a0 0004 	sub.w	r0, r0, #4
 800a944:	f7ff bff8 	b.w	800a938 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800a948 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800a948:	b510      	push	{r4, lr}
 800a94a:	2110      	movs	r1, #16
 800a94c:	4604      	mov	r4, r0
 800a94e:	f022 f910 	bl	802cb72 <_ZdlPvj>
 800a952:	4620      	mov	r0, r4
 800a954:	bd10      	pop	{r4, pc}

0800a956 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800a956:	f1a0 0004 	sub.w	r0, r0, #4
 800a95a:	e7f5      	b.n	800a948 <_ZN18Main_MenuPresenterD0Ev>

0800a95c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 800a95c:	b510      	push	{r4, lr}
 800a95e:	2200      	movs	r2, #0
 800a960:	6082      	str	r2, [r0, #8]
    : view(v)
 800a962:	4a04      	ldr	r2, [pc, #16]	; (800a974 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 800a964:	60c1      	str	r1, [r0, #12]
 800a966:	f102 0408 	add.w	r4, r2, #8
 800a96a:	3224      	adds	r2, #36	; 0x24
 800a96c:	6004      	str	r4, [r0, #0]
 800a96e:	6042      	str	r2, [r0, #4]
}
 800a970:	bd10      	pop	{r4, pc}
 800a972:	bf00      	nop
 800a974:	08030ffc 	.word	0x08030ffc

0800a978 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800a978:	4770      	bx	lr
	...

0800a97c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 800a97c:	b510      	push	{r4, lr}
 800a97e:	4b03      	ldr	r3, [pc, #12]	; (800a98c <_ZN13Main_MenuViewD1Ev+0x10>)
 800a980:	6003      	str	r3, [r0, #0]
 800a982:	4604      	mov	r4, r0
 800a984:	f7fb ff2e 	bl	80067e4 <_ZN17Main_MenuViewBaseD1Ev>
 800a988:	4620      	mov	r0, r4
 800a98a:	bd10      	pop	{r4, pc}
 800a98c:	08031034 	.word	0x08031034

0800a990 <_ZN13Main_MenuViewD0Ev>:
 800a990:	b510      	push	{r4, lr}
 800a992:	4604      	mov	r4, r0
 800a994:	f7ff fff2 	bl	800a97c <_ZN13Main_MenuViewD1Ev>
 800a998:	4620      	mov	r0, r4
 800a99a:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 800a99e:	f022 f8e8 	bl	802cb72 <_ZdlPvj>
 800a9a2:	4620      	mov	r0, r4
 800a9a4:	bd10      	pop	{r4, pc}
	...

0800a9a8 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800a9a8:	b510      	push	{r4, lr}
 800a9aa:	4604      	mov	r4, r0
 800a9ac:	f7fb ff64 	bl	8006878 <_ZN17Main_MenuViewBaseC1Ev>
 800a9b0:	4b01      	ldr	r3, [pc, #4]	; (800a9b8 <_ZN13Main_MenuViewC1Ev+0x10>)
 800a9b2:	6023      	str	r3, [r4, #0]
}
 800a9b4:	4620      	mov	r0, r4
 800a9b6:	bd10      	pop	{r4, pc}
 800a9b8:	08031034 	.word	0x08031034

0800a9bc <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 800a9bc:	f7fb beee 	b.w	800679c <_ZN17Main_MenuViewBase11setupScreenEv>

0800a9c0 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 800a9c0:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9c2:	4a0a      	ldr	r2, [pc, #40]	; (800a9ec <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 800a9c4:	4605      	mov	r5, r0
 800a9c6:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800a9c8:	460b      	mov	r3, r1
 800a9ca:	f500 7076 	add.w	r0, r0, #984	; 0x3d8
 800a9ce:	2104      	movs	r1, #4
 800a9d0:	f011 f994 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800a9d4:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800a9d8:	f00f f8ca 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800a9dc:	b92c      	cbnz	r4, 800a9ea <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 800a9de:	f00d ffdf 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800a9e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800a9e6:	f7fa be83 	b.w	80056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800a9ea:	bd38      	pop	{r3, r4, r5, pc}
 800a9ec:	0802f446 	.word	0x0802f446

0800a9f0 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 800a9f0:	4770      	bx	lr

0800a9f2 <_ZThn4_N20MeasurementPresenterD1Ev>:
 800a9f2:	3804      	subs	r0, #4
 800a9f4:	4770      	bx	lr

0800a9f6 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800a9f6:	4770      	bx	lr

0800a9f8 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800a9f8:	68c0      	ldr	r0, [r0, #12]
 800a9fa:	6803      	ldr	r3, [r0, #0]
 800a9fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a9fe:	4718      	bx	r3

0800aa00 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aa00:	f1a0 0004 	sub.w	r0, r0, #4
 800aa04:	f7ff bff8 	b.w	800a9f8 <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800aa08 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800aa08:	b510      	push	{r4, lr}
 800aa0a:	2110      	movs	r1, #16
 800aa0c:	4604      	mov	r4, r0
 800aa0e:	f022 f8b0 	bl	802cb72 <_ZdlPvj>
 800aa12:	4620      	mov	r0, r4
 800aa14:	bd10      	pop	{r4, pc}

0800aa16 <_ZThn4_N20MeasurementPresenterD0Ev>:
 800aa16:	f1a0 0004 	sub.w	r0, r0, #4
 800aa1a:	e7f5      	b.n	800aa08 <_ZN20MeasurementPresenterD0Ev>

0800aa1c <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 800aa1c:	b510      	push	{r4, lr}
 800aa1e:	2200      	movs	r2, #0
 800aa20:	6082      	str	r2, [r0, #8]
    : view(v)
 800aa22:	4a04      	ldr	r2, [pc, #16]	; (800aa34 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 800aa24:	60c1      	str	r1, [r0, #12]
 800aa26:	f102 0408 	add.w	r4, r2, #8
 800aa2a:	3224      	adds	r2, #36	; 0x24
 800aa2c:	6004      	str	r4, [r0, #0]
 800aa2e:	6042      	str	r2, [r0, #4]
}
 800aa30:	bd10      	pop	{r4, pc}
 800aa32:	bf00      	nop
 800aa34:	08031064 	.word	0x08031064

0800aa38 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800aa38:	4770      	bx	lr
	...

0800aa3c <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 800aa3c:	b510      	push	{r4, lr}
 800aa3e:	4b03      	ldr	r3, [pc, #12]	; (800aa4c <_ZN15MeasurementViewD1Ev+0x10>)
 800aa40:	6003      	str	r3, [r0, #0]
 800aa42:	4604      	mov	r4, r0
 800aa44:	f7fc f9d6 	bl	8006df4 <_ZN19MeasurementViewBaseD1Ev>
 800aa48:	4620      	mov	r0, r4
 800aa4a:	bd10      	pop	{r4, pc}
 800aa4c:	0803109c 	.word	0x0803109c

0800aa50 <_ZN15MeasurementViewD0Ev>:
 800aa50:	b510      	push	{r4, lr}
 800aa52:	4604      	mov	r4, r0
 800aa54:	f7ff fff2 	bl	800aa3c <_ZN15MeasurementViewD1Ev>
 800aa58:	4620      	mov	r0, r4
 800aa5a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800aa5e:	f022 f888 	bl	802cb72 <_ZdlPvj>
 800aa62:	4620      	mov	r0, r4
 800aa64:	bd10      	pop	{r4, pc}
	...

0800aa68 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800aa68:	b510      	push	{r4, lr}
 800aa6a:	4604      	mov	r4, r0
 800aa6c:	f7fc f9fc 	bl	8006e68 <_ZN19MeasurementViewBaseC1Ev>
 800aa70:	4b01      	ldr	r3, [pc, #4]	; (800aa78 <_ZN15MeasurementViewC1Ev+0x10>)
 800aa72:	6023      	str	r3, [r4, #0]
}
 800aa74:	4620      	mov	r0, r4
 800aa76:	bd10      	pop	{r4, pc}
 800aa78:	0803109c 	.word	0x0803109c

0800aa7c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 800aa7c:	f7fc b996 	b.w	8006dac <_ZN19MeasurementViewBase11setupScreenEv>

0800aa80 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 800aa80:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa82:	4a0a      	ldr	r2, [pc, #40]	; (800aaac <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 800aa84:	4605      	mov	r5, r0
 800aa86:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800aa88:	460b      	mov	r3, r1
 800aa8a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800aa8e:	2104      	movs	r1, #4
 800aa90:	f011 f934 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800aa94:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800aa98:	f00f f86a 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800aa9c:	b92c      	cbnz	r4, 800aaaa <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 800aa9e:	f00d ff7f 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800aaa2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800aaa6:	f7fa be23 	b.w	80056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800aaaa:	bd38      	pop	{r3, r4, r5, pc}
 800aaac:	0802f446 	.word	0x0802f446

0800aab0 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 800aab0:	4770      	bx	lr

0800aab2 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 800aab2:	3804      	subs	r0, #4
 800aab4:	4770      	bx	lr

0800aab6 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800aab6:	4770      	bx	lr

0800aab8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800aab8:	68c0      	ldr	r0, [r0, #12]
 800aaba:	6803      	ldr	r3, [r0, #0]
 800aabc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aabe:	4718      	bx	r3

0800aac0 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800aac0:	f1a0 0004 	sub.w	r0, r0, #4
 800aac4:	f7ff bff8 	b.w	800aab8 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800aac8 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800aac8:	b510      	push	{r4, lr}
 800aaca:	2110      	movs	r1, #16
 800aacc:	4604      	mov	r4, r0
 800aace:	f022 f850 	bl	802cb72 <_ZdlPvj>
 800aad2:	4620      	mov	r0, r4
 800aad4:	bd10      	pop	{r4, pc}

0800aad6 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800aad6:	f1a0 0004 	sub.w	r0, r0, #4
 800aada:	e7f5      	b.n	800aac8 <_ZN29Measurement_AccuratePresenterD0Ev>

0800aadc <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 800aadc:	b510      	push	{r4, lr}
 800aade:	2200      	movs	r2, #0
 800aae0:	6082      	str	r2, [r0, #8]
    : view(v)
 800aae2:	4a04      	ldr	r2, [pc, #16]	; (800aaf4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 800aae4:	60c1      	str	r1, [r0, #12]
 800aae6:	f102 0408 	add.w	r4, r2, #8
 800aaea:	3224      	adds	r2, #36	; 0x24
 800aaec:	6004      	str	r4, [r0, #0]
 800aaee:	6042      	str	r2, [r0, #4]
}
 800aaf0:	bd10      	pop	{r4, pc}
 800aaf2:	bf00      	nop
 800aaf4:	080310cc 	.word	0x080310cc

0800aaf8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800aaf8:	4770      	bx	lr
	...

0800aafc <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 800aafc:	b510      	push	{r4, lr}
 800aafe:	4b03      	ldr	r3, [pc, #12]	; (800ab0c <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 800ab00:	6003      	str	r3, [r0, #0]
 800ab02:	4604      	mov	r4, r0
 800ab04:	f7fc fc3e 	bl	8007384 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800ab08:	4620      	mov	r0, r4
 800ab0a:	bd10      	pop	{r4, pc}
 800ab0c:	08031104 	.word	0x08031104

0800ab10 <_ZN24Measurement_AccurateViewD0Ev>:
 800ab10:	b510      	push	{r4, lr}
 800ab12:	4604      	mov	r4, r0
 800ab14:	f7ff fff2 	bl	800aafc <_ZN24Measurement_AccurateViewD1Ev>
 800ab18:	4620      	mov	r0, r4
 800ab1a:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ab1e:	f022 f828 	bl	802cb72 <_ZdlPvj>
 800ab22:	4620      	mov	r0, r4
 800ab24:	bd10      	pop	{r4, pc}
	...

0800ab28 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800ab28:	b510      	push	{r4, lr}
 800ab2a:	4604      	mov	r4, r0
 800ab2c:	f7fc fc64 	bl	80073f8 <_ZN28Measurement_AccurateViewBaseC1Ev>
 800ab30:	4b01      	ldr	r3, [pc, #4]	; (800ab38 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 800ab32:	6023      	str	r3, [r4, #0]
}
 800ab34:	4620      	mov	r0, r4
 800ab36:	bd10      	pop	{r4, pc}
 800ab38:	08031104 	.word	0x08031104

0800ab3c <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 800ab3c:	f7fc bbfe 	b.w	800733c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

0800ab40 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 800ab40:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab42:	4a0a      	ldr	r2, [pc, #40]	; (800ab6c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 800ab44:	4605      	mov	r5, r0
 800ab46:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ab48:	460b      	mov	r3, r1
 800ab4a:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ab4e:	2104      	movs	r1, #4
 800ab50:	f011 f8d4 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ab54:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ab58:	f00f f80a 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ab5c:	b92c      	cbnz	r4, 800ab6a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 800ab5e:	f00d ff1f 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ab62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ab66:	f7fa bdc3 	b.w	80056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ab6a:	bd38      	pop	{r3, r4, r5, pc}
 800ab6c:	0802f446 	.word	0x0802f446

0800ab70 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 800ab70:	4770      	bx	lr

0800ab72 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 800ab72:	3804      	subs	r0, #4
 800ab74:	4770      	bx	lr

0800ab76 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800ab76:	4770      	bx	lr

0800ab78 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800ab78:	4770      	bx	lr

0800ab7a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab7a:	b510      	push	{r4, lr}
 800ab7c:	2110      	movs	r1, #16
 800ab7e:	4604      	mov	r4, r0
 800ab80:	f021 fff7 	bl	802cb72 <_ZdlPvj>
 800ab84:	4620      	mov	r0, r4
 800ab86:	bd10      	pop	{r4, pc}

0800ab88 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800ab88:	f1a0 0004 	sub.w	r0, r0, #4
 800ab8c:	e7f5      	b.n	800ab7a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

0800ab8e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 800ab8e:	4770      	bx	lr

0800ab90 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 800ab90:	b510      	push	{r4, lr}
 800ab92:	2200      	movs	r2, #0
 800ab94:	6082      	str	r2, [r0, #8]
    : view(v)
 800ab96:	4a04      	ldr	r2, [pc, #16]	; (800aba8 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800ab98:	60c1      	str	r1, [r0, #12]
 800ab9a:	f102 0408 	add.w	r4, r2, #8
 800ab9e:	3224      	adds	r2, #36	; 0x24
 800aba0:	6004      	str	r4, [r0, #0]
 800aba2:	6042      	str	r2, [r0, #4]
}
 800aba4:	bd10      	pop	{r4, pc}
 800aba6:	bf00      	nop
 800aba8:	08031134 	.word	0x08031134

0800abac <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 800abac:	4770      	bx	lr
	...

0800abb0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 800abb0:	b510      	push	{r4, lr}
 800abb2:	4b03      	ldr	r3, [pc, #12]	; (800abc0 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 800abb4:	6003      	str	r3, [r0, #0]
 800abb6:	4604      	mov	r4, r0
 800abb8:	f7fc feac 	bl	8007914 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800abbc:	4620      	mov	r0, r4
 800abbe:	bd10      	pop	{r4, pc}
 800abc0:	0803116c 	.word	0x0803116c

0800abc4 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 800abc4:	b510      	push	{r4, lr}
 800abc6:	4604      	mov	r4, r0
 800abc8:	f7ff fff2 	bl	800abb0 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 800abcc:	4620      	mov	r0, r4
 800abce:	f241 4178 	movw	r1, #5240	; 0x1478
 800abd2:	f021 ffce 	bl	802cb72 <_ZdlPvj>
 800abd6:	4620      	mov	r0, r4
 800abd8:	bd10      	pop	{r4, pc}
	...

0800abdc <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 800abdc:	b510      	push	{r4, lr}
 800abde:	4604      	mov	r4, r0
 800abe0:	f7fc fec0 	bl	8007964 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 800abe4:	4b01      	ldr	r3, [pc, #4]	; (800abec <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800abe6:	6023      	str	r3, [r4, #0]
}
 800abe8:	4620      	mov	r0, r4
 800abea:	bd10      	pop	{r4, pc}
 800abec:	0803116c 	.word	0x0803116c

0800abf0 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 800abf0:	f7fc be6c 	b.w	80078cc <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

0800abf4 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 800abf4:	4770      	bx	lr

0800abf6 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800abf6:	3804      	subs	r0, #4
 800abf8:	4770      	bx	lr

0800abfa <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800abfa:	4770      	bx	lr

0800abfc <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 800abfc:	4770      	bx	lr

0800abfe <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 800abfe:	b510      	push	{r4, lr}
 800ac00:	2110      	movs	r1, #16
 800ac02:	4604      	mov	r4, r0
 800ac04:	f021 ffb5 	bl	802cb72 <_ZdlPvj>
 800ac08:	4620      	mov	r0, r4
 800ac0a:	bd10      	pop	{r4, pc}

0800ac0c <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 800ac0c:	f1a0 0004 	sub.w	r0, r0, #4
 800ac10:	e7f5      	b.n	800abfe <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

0800ac12 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 800ac12:	4770      	bx	lr

0800ac14 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 800ac14:	b510      	push	{r4, lr}
 800ac16:	2200      	movs	r2, #0
 800ac18:	6082      	str	r2, [r0, #8]
    : view(v)
 800ac1a:	4a04      	ldr	r2, [pc, #16]	; (800ac2c <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 800ac1c:	60c1      	str	r1, [r0, #12]
 800ac1e:	f102 0408 	add.w	r4, r2, #8
 800ac22:	3224      	adds	r2, #36	; 0x24
 800ac24:	6004      	str	r4, [r0, #0]
 800ac26:	6042      	str	r2, [r0, #4]
}
 800ac28:	bd10      	pop	{r4, pc}
 800ac2a:	bf00      	nop
 800ac2c:	08031198 	.word	0x08031198

0800ac30 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 800ac30:	4770      	bx	lr
	...

0800ac34 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 800ac34:	b510      	push	{r4, lr}
 800ac36:	4b03      	ldr	r3, [pc, #12]	; (800ac44 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800ac38:	6003      	str	r3, [r0, #0]
 800ac3a:	4604      	mov	r4, r0
 800ac3c:	f7fd fa42 	bl	80080c4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 800ac40:	4620      	mov	r0, r4
 800ac42:	bd10      	pop	{r4, pc}
 800ac44:	080311d0 	.word	0x080311d0

0800ac48 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800ac48:	b510      	push	{r4, lr}
 800ac4a:	4604      	mov	r4, r0
 800ac4c:	f7ff fff2 	bl	800ac34 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 800ac50:	4620      	mov	r0, r4
 800ac52:	f241 4178 	movw	r1, #5240	; 0x1478
 800ac56:	f021 ff8c 	bl	802cb72 <_ZdlPvj>
 800ac5a:	4620      	mov	r0, r4
 800ac5c:	bd10      	pop	{r4, pc}
	...

0800ac60 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 800ac60:	b510      	push	{r4, lr}
 800ac62:	4604      	mov	r4, r0
 800ac64:	f7fd fa56 	bl	8008114 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800ac68:	4b01      	ldr	r3, [pc, #4]	; (800ac70 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800ac6a:	6023      	str	r3, [r4, #0]
}
 800ac6c:	4620      	mov	r0, r4
 800ac6e:	bd10      	pop	{r4, pc}
 800ac70:	080311d0 	.word	0x080311d0

0800ac74 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 800ac74:	f7fd ba02 	b.w	800807c <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800ac78 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800ac78:	4770      	bx	lr

0800ac7a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800ac7a:	3804      	subs	r0, #4
 800ac7c:	4770      	bx	lr

0800ac7e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 800ac7e:	4770      	bx	lr

0800ac80 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800ac80:	68c0      	ldr	r0, [r0, #12]
 800ac82:	6803      	ldr	r3, [r0, #0]
 800ac84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac86:	4718      	bx	r3

0800ac88 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800ac88:	f1a0 0004 	sub.w	r0, r0, #4
 800ac8c:	f7ff bff8 	b.w	800ac80 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

0800ac90 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 800ac90:	b510      	push	{r4, lr}
 800ac92:	2110      	movs	r1, #16
 800ac94:	4604      	mov	r4, r0
 800ac96:	f021 ff6c 	bl	802cb72 <_ZdlPvj>
 800ac9a:	4620      	mov	r0, r4
 800ac9c:	bd10      	pop	{r4, pc}

0800ac9e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 800ac9e:	f1a0 0004 	sub.w	r0, r0, #4
 800aca2:	e7f5      	b.n	800ac90 <_ZN27Measurement_SinglePresenterD0Ev>

0800aca4 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 800aca4:	b510      	push	{r4, lr}
 800aca6:	2200      	movs	r2, #0
 800aca8:	6082      	str	r2, [r0, #8]
    : view(v)
 800acaa:	4a04      	ldr	r2, [pc, #16]	; (800acbc <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 800acac:	60c1      	str	r1, [r0, #12]
 800acae:	f102 0408 	add.w	r4, r2, #8
 800acb2:	3224      	adds	r2, #36	; 0x24
 800acb4:	6004      	str	r4, [r0, #0]
 800acb6:	6042      	str	r2, [r0, #4]
}
 800acb8:	bd10      	pop	{r4, pc}
 800acba:	bf00      	nop
 800acbc:	080311fc 	.word	0x080311fc

0800acc0 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 800acc0:	4770      	bx	lr
	...

0800acc4 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 800acc4:	b510      	push	{r4, lr}
 800acc6:	4b03      	ldr	r3, [pc, #12]	; (800acd4 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800acc8:	6003      	str	r3, [r0, #0]
 800acca:	4604      	mov	r4, r0
 800accc:	f7fd fdd0 	bl	8008870 <_ZN26Measurement_SingleViewBaseD1Ev>
 800acd0:	4620      	mov	r0, r4
 800acd2:	bd10      	pop	{r4, pc}
 800acd4:	08031234 	.word	0x08031234

0800acd8 <_ZN22Measurement_SingleViewD0Ev>:
 800acd8:	b510      	push	{r4, lr}
 800acda:	4604      	mov	r4, r0
 800acdc:	f7ff fff2 	bl	800acc4 <_ZN22Measurement_SingleViewD1Ev>
 800ace0:	4620      	mov	r0, r4
 800ace2:	f241 11c4 	movw	r1, #4548	; 0x11c4
 800ace6:	f021 ff44 	bl	802cb72 <_ZdlPvj>
 800acea:	4620      	mov	r0, r4
 800acec:	bd10      	pop	{r4, pc}
	...

0800acf0 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 800acf0:	b510      	push	{r4, lr}
 800acf2:	4604      	mov	r4, r0
 800acf4:	f7fd fdf6 	bl	80088e4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800acf8:	4b01      	ldr	r3, [pc, #4]	; (800ad00 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800acfa:	6023      	str	r3, [r4, #0]
}
 800acfc:	4620      	mov	r0, r4
 800acfe:	bd10      	pop	{r4, pc}
 800ad00:	08031234 	.word	0x08031234

0800ad04 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 800ad04:	f7fd bd90 	b.w	8008828 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800ad08 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800ad08:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ad0a:	4a0a      	ldr	r2, [pc, #40]	; (800ad34 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 800ad0c:	4605      	mov	r5, r0
 800ad0e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800ad10:	460b      	mov	r3, r1
 800ad12:	f500 7067 	add.w	r0, r0, #924	; 0x39c
 800ad16:	2104      	movs	r1, #4
 800ad18:	f010 fff0 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800ad1c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800ad20:	f00e ff26 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 800ad24:	b92c      	cbnz	r4, 800ad32 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800ad26:	f00d fe3b 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800ad2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800ad2e:	f7fa bcdf 	b.w	80056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800ad32:	bd38      	pop	{r3, r4, r5, pc}
 800ad34:	0802f446 	.word	0x0802f446

0800ad38 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800ad38:	4770      	bx	lr

0800ad3a <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800ad3a:	3804      	subs	r0, #4
 800ad3c:	4770      	bx	lr

0800ad3e <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 800ad3e:	4770      	bx	lr

0800ad40 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 800ad40:	4770      	bx	lr

0800ad42 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad42:	b510      	push	{r4, lr}
 800ad44:	2110      	movs	r1, #16
 800ad46:	4604      	mov	r4, r0
 800ad48:	f021 ff13 	bl	802cb72 <_ZdlPvj>
 800ad4c:	4620      	mov	r0, r4
 800ad4e:	bd10      	pop	{r4, pc}

0800ad50 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 800ad50:	f1a0 0004 	sub.w	r0, r0, #4
 800ad54:	e7f5      	b.n	800ad42 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

0800ad56 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 800ad56:	4770      	bx	lr

0800ad58 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 800ad58:	b510      	push	{r4, lr}
 800ad5a:	2200      	movs	r2, #0
 800ad5c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ad5e:	4a04      	ldr	r2, [pc, #16]	; (800ad70 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 800ad60:	60c1      	str	r1, [r0, #12]
 800ad62:	f102 0408 	add.w	r4, r2, #8
 800ad66:	3224      	adds	r2, #36	; 0x24
 800ad68:	6004      	str	r4, [r0, #0]
 800ad6a:	6042      	str	r2, [r0, #4]
}
 800ad6c:	bd10      	pop	{r4, pc}
 800ad6e:	bf00      	nop
 800ad70:	08031264 	.word	0x08031264

0800ad74 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 800ad74:	4770      	bx	lr
	...

0800ad78 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800ad78:	b510      	push	{r4, lr}
 800ad7a:	4b03      	ldr	r3, [pc, #12]	; (800ad88 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800ad7c:	6003      	str	r3, [r0, #0]
 800ad7e:	4604      	mov	r4, r0
 800ad80:	f7fe f840 	bl	8008e04 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 800ad84:	4620      	mov	r0, r4
 800ad86:	bd10      	pop	{r4, pc}
 800ad88:	080312a4 	.word	0x080312a4

0800ad8c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800ad8c:	b510      	push	{r4, lr}
 800ad8e:	4604      	mov	r4, r0
 800ad90:	f7ff fff2 	bl	800ad78 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 800ad94:	4620      	mov	r0, r4
 800ad96:	f241 417c 	movw	r1, #5244	; 0x147c
 800ad9a:	f021 feea 	bl	802cb72 <_ZdlPvj>
 800ad9e:	4620      	mov	r0, r4
 800ada0:	bd10      	pop	{r4, pc}
	...

0800ada4 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 800ada4:	b510      	push	{r4, lr}
 800ada6:	4604      	mov	r4, r0
 800ada8:	f7fe f864 	bl	8008e74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800adac:	4b01      	ldr	r3, [pc, #4]	; (800adb4 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800adae:	6023      	str	r3, [r4, #0]
}
 800adb0:	4620      	mov	r0, r4
 800adb2:	bd10      	pop	{r4, pc}
 800adb4:	080312a4 	.word	0x080312a4

0800adb8 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800adb8:	f7fd bfff 	b.w	8008dba <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800adbc <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800adbc:	b510      	push	{r4, lr}
 800adbe:	b088      	sub	sp, #32
 800adc0:	4604      	mov	r4, r0
#ifndef SIMULATOR

	// Start measurement
	uint32_t* Samples = MEAS_start_measure();
 800adc2:	f7f7 f9cb 	bl	800215c <MEAS_start_measure>

	// calculate single measurement values
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800adc6:	f7f6 fb03 	bl	80013d0 <single_measurement>

	//update GUI values
	//set gauge angle
	SMD1_Gauge.setValue(single_meas.angle);
 800adca:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800adce:	f504 7027 	add.w	r0, r4, #668	; 0x29c
 800add2:	ee17 1a90 	vmov	r1, s15
	SINGLE_MEAS single_meas = single_measurement(Samples);
 800add6:	ed8d 0a04 	vstr	s0, [sp, #16]
 800adda:	ed8d 1a06 	vstr	s2, [sp, #24]
	SMD1_Gauge.setValue(single_meas.angle);
 800adde:	9001      	str	r0, [sp, #4]
 800ade0:	f00a fe7c 	bl	8015adc <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_Gauge.invalidate();
 800ade4:	9801      	ldr	r0, [sp, #4]
 800ade6:	f00e fec3 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintfFloat(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%.2f", 420.69);
 800adea:	4b15      	ldr	r3, [pc, #84]	; (800ae40 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800adec:	4a15      	ldr	r2, [pc, #84]	; (800ae44 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800adee:	9303      	str	r3, [sp, #12]
 800adf0:	210a      	movs	r1, #10
 800adf2:	ab03      	add	r3, sp, #12
 800adf4:	f204 601c 	addw	r0, r4, #1564	; 0x61c
 800adf8:	f011 f96c 	bl	801c0d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Current.invalidate();
 800adfc:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800ae00:	f00e feb6 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", single_meas.frequency);
 800ae04:	9b06      	ldr	r3, [sp, #24]
 800ae06:	4a0f      	ldr	r2, [pc, #60]	; (800ae44 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae08:	9303      	str	r3, [sp, #12]
 800ae0a:	210a      	movs	r1, #10
 800ae0c:	ab03      	add	r3, sp, #12
 800ae0e:	f504 60c6 	add.w	r0, r4, #1584	; 0x630
 800ae12:	f011 f95f 	bl	801c0d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 800ae16:	f504 7001 	add.w	r0, r4, #516	; 0x204
 800ae1a:	f00e fea9 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", single_meas.distance);
 800ae1e:	9b04      	ldr	r3, [sp, #16]
 800ae20:	9303      	str	r3, [sp, #12]
 800ae22:	4a08      	ldr	r2, [pc, #32]	; (800ae44 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x88>)
 800ae24:	ab03      	add	r3, sp, #12
 800ae26:	210a      	movs	r1, #10
 800ae28:	f204 6044 	addw	r0, r4, #1604	; 0x644
 800ae2c:	f011 f952 	bl	801c0d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 800ae30:	f504 7014 	add.w	r0, r4, #592	; 0x250

#endif
}
 800ae34:	b008      	add	sp, #32
 800ae36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	SMD1_Distance.invalidate();
 800ae3a:	f00e be99 	b.w	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>
 800ae3e:	bf00      	nop
 800ae40:	43d25852 	.word	0x43d25852
 800ae44:	08031294 	.word	0x08031294

0800ae48 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800ae48:	4770      	bx	lr

0800ae4a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800ae4a:	3804      	subs	r0, #4
 800ae4c:	4770      	bx	lr

0800ae4e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800ae4e:	4770      	bx	lr

0800ae50 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 800ae50:	4770      	bx	lr

0800ae52 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae52:	b510      	push	{r4, lr}
 800ae54:	2110      	movs	r1, #16
 800ae56:	4604      	mov	r4, r0
 800ae58:	f021 fe8b 	bl	802cb72 <_ZdlPvj>
 800ae5c:	4620      	mov	r0, r4
 800ae5e:	bd10      	pop	{r4, pc}

0800ae60 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 800ae60:	f1a0 0004 	sub.w	r0, r0, #4
 800ae64:	e7f5      	b.n	800ae52 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800ae66 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800ae66:	4770      	bx	lr

0800ae68 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800ae68:	b510      	push	{r4, lr}
 800ae6a:	2200      	movs	r2, #0
 800ae6c:	6082      	str	r2, [r0, #8]
    : view(v)
 800ae6e:	4a04      	ldr	r2, [pc, #16]	; (800ae80 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 800ae70:	60c1      	str	r1, [r0, #12]
 800ae72:	f102 0408 	add.w	r4, r2, #8
 800ae76:	3224      	adds	r2, #36	; 0x24
 800ae78:	6004      	str	r4, [r0, #0]
 800ae7a:	6042      	str	r2, [r0, #4]
}
 800ae7c:	bd10      	pop	{r4, pc}
 800ae7e:	bf00      	nop
 800ae80:	080312d4 	.word	0x080312d4

0800ae84 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 800ae84:	4770      	bx	lr
	...

0800ae88 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800ae88:	b510      	push	{r4, lr}
 800ae8a:	4b03      	ldr	r3, [pc, #12]	; (800ae98 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800ae8c:	6003      	str	r3, [r0, #0]
 800ae8e:	4604      	mov	r4, r0
 800ae90:	f7fe fb9c 	bl	80095cc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 800ae94:	4620      	mov	r0, r4
 800ae96:	bd10      	pop	{r4, pc}
 800ae98:	0803130c 	.word	0x0803130c

0800ae9c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800ae9c:	b510      	push	{r4, lr}
 800ae9e:	4604      	mov	r4, r0
 800aea0:	f7ff fff2 	bl	800ae88 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 800aea4:	4620      	mov	r0, r4
 800aea6:	f241 4178 	movw	r1, #5240	; 0x1478
 800aeaa:	f021 fe62 	bl	802cb72 <_ZdlPvj>
 800aeae:	4620      	mov	r0, r4
 800aeb0:	bd10      	pop	{r4, pc}
	...

0800aeb4 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 800aeb4:	b510      	push	{r4, lr}
 800aeb6:	4604      	mov	r4, r0
 800aeb8:	f7fe fbb0 	bl	800961c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 800aebc:	4b01      	ldr	r3, [pc, #4]	; (800aec4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 800aebe:	6023      	str	r3, [r4, #0]
}
 800aec0:	4620      	mov	r0, r4
 800aec2:	bd10      	pop	{r4, pc}
 800aec4:	0803130c 	.word	0x0803130c

0800aec8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800aec8:	f7fe bb5c 	b.w	8009584 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

0800aecc <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 800aecc:	2100      	movs	r1, #0
 800aece:	223c      	movs	r2, #60	; 0x3c
 800aed0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 800aed4:	4770      	bx	lr
	...

0800aed8 <_ZN5Model4tickEv>:

void Model::tick()
{
 800aed8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aeda:	4d0a      	ldr	r5, [pc, #40]	; (800af04 <_ZN5Model4tickEv+0x2c>)
{
 800aedc:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800aede:	6828      	ldr	r0, [r5, #0]
 800aee0:	f004 fe80 	bl	800fbe4 <osMessageQueueGetCount>
 800aee4:	b168      	cbz	r0, 800af02 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800aee6:	2300      	movs	r3, #0
 800aee8:	6828      	ldr	r0, [r5, #0]
 800aeea:	461a      	mov	r2, r3
 800aeec:	1d21      	adds	r1, r4, #4
 800aeee:	f004 fe45 	bl	800fb7c <osMessageQueueGet>
 800aef2:	b930      	cbnz	r0, 800af02 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 800aef4:	6820      	ldr	r0, [r4, #0]
 800aef6:	6861      	ldr	r1, [r4, #4]
 800aef8:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800aefa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 800aefe:	689b      	ldr	r3, [r3, #8]
 800af00:	4718      	bx	r3
}
 800af02:	bd70      	pop	{r4, r5, r6, pc}
 800af04:	200001d8 	.word	0x200001d8

0800af08 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800af08:	4770      	bx	lr

0800af0a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800af0a:	3804      	subs	r0, #4
 800af0c:	4770      	bx	lr

0800af0e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 800af0e:	4770      	bx	lr

0800af10 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800af10:	68c0      	ldr	r0, [r0, #12]
 800af12:	6803      	ldr	r3, [r0, #0]
 800af14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af16:	4718      	bx	r3

0800af18 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800af18:	f1a0 0004 	sub.w	r0, r0, #4
 800af1c:	f7ff bff8 	b.w	800af10 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

0800af20 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 800af20:	b510      	push	{r4, lr}
 800af22:	2110      	movs	r1, #16
 800af24:	4604      	mov	r4, r0
 800af26:	f021 fe24 	bl	802cb72 <_ZdlPvj>
 800af2a:	4620      	mov	r0, r4
 800af2c:	bd10      	pop	{r4, pc}

0800af2e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800af2e:	f1a0 0004 	sub.w	r0, r0, #4
 800af32:	e7f5      	b.n	800af20 <_ZN21Project_InfoPresenterD0Ev>

0800af34 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 800af34:	b510      	push	{r4, lr}
 800af36:	2200      	movs	r2, #0
 800af38:	6082      	str	r2, [r0, #8]
    : view(v)
 800af3a:	4a04      	ldr	r2, [pc, #16]	; (800af4c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800af3c:	60c1      	str	r1, [r0, #12]
 800af3e:	f102 0408 	add.w	r4, r2, #8
 800af42:	3224      	adds	r2, #36	; 0x24
 800af44:	6004      	str	r4, [r0, #0]
 800af46:	6042      	str	r2, [r0, #4]
}
 800af48:	bd10      	pop	{r4, pc}
 800af4a:	bf00      	nop
 800af4c:	08031338 	.word	0x08031338

0800af50 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 800af50:	4770      	bx	lr
	...

0800af54 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 800af54:	b510      	push	{r4, lr}
 800af56:	4b03      	ldr	r3, [pc, #12]	; (800af64 <_ZN16Project_InfoViewD1Ev+0x10>)
 800af58:	6003      	str	r3, [r0, #0]
 800af5a:	4604      	mov	r4, r0
 800af5c:	f7fe ff06 	bl	8009d6c <_ZN20Project_InfoViewBaseD1Ev>
 800af60:	4620      	mov	r0, r4
 800af62:	bd10      	pop	{r4, pc}
 800af64:	08031370 	.word	0x08031370

0800af68 <_ZN16Project_InfoViewD0Ev>:
 800af68:	b510      	push	{r4, lr}
 800af6a:	4604      	mov	r4, r0
 800af6c:	f7ff fff2 	bl	800af54 <_ZN16Project_InfoViewD1Ev>
 800af70:	4620      	mov	r0, r4
 800af72:	f241 117c 	movw	r1, #4476	; 0x117c
 800af76:	f021 fdfc 	bl	802cb72 <_ZdlPvj>
 800af7a:	4620      	mov	r0, r4
 800af7c:	bd10      	pop	{r4, pc}
	...

0800af80 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 800af80:	b510      	push	{r4, lr}
 800af82:	4604      	mov	r4, r0
 800af84:	f7fe ff1a 	bl	8009dbc <_ZN20Project_InfoViewBaseC1Ev>
 800af88:	4b01      	ldr	r3, [pc, #4]	; (800af90 <_ZN16Project_InfoViewC1Ev+0x10>)
 800af8a:	6023      	str	r3, [r4, #0]
}
 800af8c:	4620      	mov	r0, r4
 800af8e:	bd10      	pop	{r4, pc}
 800af90:	08031370 	.word	0x08031370

0800af94 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 800af94:	f7fe bec6 	b.w	8009d24 <_ZN20Project_InfoViewBase11setupScreenEv>

0800af98 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800af98:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800af9a:	4a0a      	ldr	r2, [pc, #40]	; (800afc4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800af9c:	4605      	mov	r5, r0
 800af9e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea_auto_offBuffer, TEXTAREA_AUTO_OFF_SIZE, "%d", value);
 800afa0:	460b      	mov	r3, r1
 800afa2:	f500 7055 	add.w	r0, r0, #852	; 0x354
 800afa6:	2104      	movs	r1, #4
 800afa8:	f010 fea8 	bl	801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea_auto_off.invalidate();
 800afac:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800afb0:	f00e fdde 	bl	8019b70 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 800afb4:	b92c      	cbnz	r4, 800afc2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800afb6:	f00d fcf3 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800afba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800afbe:	f7fa bb97 	b.w	80056f0 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800afc2:	bd38      	pop	{r3, r4, r5, pc}
 800afc4:	0802f446 	.word	0x0802f446

0800afc8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800afc8:	4770      	bx	lr

0800afca <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800afca:	3804      	subs	r0, #4
 800afcc:	4770      	bx	lr

0800afce <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 800afce:	4770      	bx	lr

0800afd0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 800afd0:	4770      	bx	lr

0800afd2 <_ZN21Shutting_OffPresenterD0Ev>:
 800afd2:	b510      	push	{r4, lr}
 800afd4:	2110      	movs	r1, #16
 800afd6:	4604      	mov	r4, r0
 800afd8:	f021 fdcb 	bl	802cb72 <_ZdlPvj>
 800afdc:	4620      	mov	r0, r4
 800afde:	bd10      	pop	{r4, pc}

0800afe0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 800afe0:	f1a0 0004 	sub.w	r0, r0, #4
 800afe4:	e7f5      	b.n	800afd2 <_ZN21Shutting_OffPresenterD0Ev>

0800afe6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800afe6:	4770      	bx	lr

0800afe8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800afe8:	b510      	push	{r4, lr}
 800afea:	2200      	movs	r2, #0
 800afec:	6082      	str	r2, [r0, #8]
    : view(v)
 800afee:	4a04      	ldr	r2, [pc, #16]	; (800b000 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 800aff0:	60c1      	str	r1, [r0, #12]
 800aff2:	f102 0408 	add.w	r4, r2, #8
 800aff6:	3224      	adds	r2, #36	; 0x24
 800aff8:	6004      	str	r4, [r0, #0]
 800affa:	6042      	str	r2, [r0, #4]
}
 800affc:	bd10      	pop	{r4, pc}
 800affe:	bf00      	nop
 800b000:	080313a0 	.word	0x080313a0

0800b004 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 800b004:	4770      	bx	lr
	...

0800b008 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800b008:	b510      	push	{r4, lr}
 800b00a:	4b03      	ldr	r3, [pc, #12]	; (800b018 <_ZN16Shutting_OffViewD1Ev+0x10>)
 800b00c:	6003      	str	r3, [r0, #0]
 800b00e:	4604      	mov	r4, r0
 800b010:	f7ff f91e 	bl	800a250 <_ZN20Shutting_OffViewBaseD1Ev>
 800b014:	4620      	mov	r0, r4
 800b016:	bd10      	pop	{r4, pc}
 800b018:	080313d8 	.word	0x080313d8

0800b01c <_ZN16Shutting_OffViewD0Ev>:
 800b01c:	b510      	push	{r4, lr}
 800b01e:	4604      	mov	r4, r0
 800b020:	f7ff fff2 	bl	800b008 <_ZN16Shutting_OffViewD1Ev>
 800b024:	4620      	mov	r0, r4
 800b026:	2198      	movs	r1, #152	; 0x98
 800b028:	f021 fda3 	bl	802cb72 <_ZdlPvj>
 800b02c:	4620      	mov	r0, r4
 800b02e:	bd10      	pop	{r4, pc}

0800b030 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 800b030:	b510      	push	{r4, lr}
 800b032:	4604      	mov	r4, r0
 800b034:	f7ff f916 	bl	800a264 <_ZN20Shutting_OffViewBaseC1Ev>
 800b038:	4b01      	ldr	r3, [pc, #4]	; (800b040 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800b03a:	6023      	str	r3, [r4, #0]
}
 800b03c:	4620      	mov	r0, r4
 800b03e:	bd10      	pop	{r4, pc}
 800b040:	080313d8 	.word	0x080313d8

0800b044 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 800b044:	f7ff b905 	b.w	800a252 <_ZN20Shutting_OffViewBase11setupScreenEv>

0800b048 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 800b048:	20f0      	movs	r0, #240	; 0xf0
 800b04a:	4770      	bx	lr

0800b04c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800b04c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800b050:	4770      	bx	lr
 800b052:	bf00      	nop

0800b054 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800b054:	2029      	movs	r0, #41	; 0x29
 800b056:	f7f6 bef9 	b.w	8001e4c <LCD_IO_WriteReg>
 800b05a:	bf00      	nop

0800b05c <ili9341_DisplayOff>:
 800b05c:	2028      	movs	r0, #40	; 0x28
 800b05e:	f7f6 bef5 	b.w	8001e4c <LCD_IO_WriteReg>
 800b062:	bf00      	nop

0800b064 <ili9341_Init>:
{
 800b064:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b066:	f7f6 feb7 	bl	8001dd8 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800b06a:	20ca      	movs	r0, #202	; 0xca
 800b06c:	f7f6 feee 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b070:	20c3      	movs	r0, #195	; 0xc3
 800b072:	f7f6 fec1 	bl	8001df8 <LCD_IO_WriteData>
 800b076:	2008      	movs	r0, #8
 800b078:	f7f6 febe 	bl	8001df8 <LCD_IO_WriteData>
 800b07c:	2050      	movs	r0, #80	; 0x50
 800b07e:	f7f6 febb 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b082:	20cf      	movs	r0, #207	; 0xcf
 800b084:	f7f6 fee2 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b088:	2000      	movs	r0, #0
 800b08a:	f7f6 feb5 	bl	8001df8 <LCD_IO_WriteData>
 800b08e:	20c1      	movs	r0, #193	; 0xc1
 800b090:	f7f6 feb2 	bl	8001df8 <LCD_IO_WriteData>
 800b094:	2030      	movs	r0, #48	; 0x30
 800b096:	f7f6 feaf 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b09a:	20ed      	movs	r0, #237	; 0xed
 800b09c:	f7f6 fed6 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0a0:	2064      	movs	r0, #100	; 0x64
 800b0a2:	f7f6 fea9 	bl	8001df8 <LCD_IO_WriteData>
 800b0a6:	2003      	movs	r0, #3
 800b0a8:	f7f6 fea6 	bl	8001df8 <LCD_IO_WriteData>
 800b0ac:	2012      	movs	r0, #18
 800b0ae:	f7f6 fea3 	bl	8001df8 <LCD_IO_WriteData>
 800b0b2:	2081      	movs	r0, #129	; 0x81
 800b0b4:	f7f6 fea0 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0b8:	20e8      	movs	r0, #232	; 0xe8
 800b0ba:	f7f6 fec7 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0be:	2085      	movs	r0, #133	; 0x85
 800b0c0:	f7f6 fe9a 	bl	8001df8 <LCD_IO_WriteData>
 800b0c4:	2000      	movs	r0, #0
 800b0c6:	f7f6 fe97 	bl	8001df8 <LCD_IO_WriteData>
 800b0ca:	2078      	movs	r0, #120	; 0x78
 800b0cc:	f7f6 fe94 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0d0:	20cb      	movs	r0, #203	; 0xcb
 800b0d2:	f7f6 febb 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0d6:	2039      	movs	r0, #57	; 0x39
 800b0d8:	f7f6 fe8e 	bl	8001df8 <LCD_IO_WriteData>
 800b0dc:	202c      	movs	r0, #44	; 0x2c
 800b0de:	f7f6 fe8b 	bl	8001df8 <LCD_IO_WriteData>
 800b0e2:	2000      	movs	r0, #0
 800b0e4:	f7f6 fe88 	bl	8001df8 <LCD_IO_WriteData>
 800b0e8:	2034      	movs	r0, #52	; 0x34
 800b0ea:	f7f6 fe85 	bl	8001df8 <LCD_IO_WriteData>
 800b0ee:	2002      	movs	r0, #2
 800b0f0:	f7f6 fe82 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b0f4:	20f7      	movs	r0, #247	; 0xf7
 800b0f6:	f7f6 fea9 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b0fa:	2020      	movs	r0, #32
 800b0fc:	f7f6 fe7c 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b100:	20ea      	movs	r0, #234	; 0xea
 800b102:	f7f6 fea3 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b106:	2000      	movs	r0, #0
 800b108:	f7f6 fe76 	bl	8001df8 <LCD_IO_WriteData>
 800b10c:	2000      	movs	r0, #0
 800b10e:	f7f6 fe73 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b112:	20b1      	movs	r0, #177	; 0xb1
 800b114:	f7f6 fe9a 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b118:	2000      	movs	r0, #0
 800b11a:	f7f6 fe6d 	bl	8001df8 <LCD_IO_WriteData>
 800b11e:	201b      	movs	r0, #27
 800b120:	f7f6 fe6a 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b124:	20b6      	movs	r0, #182	; 0xb6
 800b126:	f7f6 fe91 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b12a:	200a      	movs	r0, #10
 800b12c:	f7f6 fe64 	bl	8001df8 <LCD_IO_WriteData>
 800b130:	20a2      	movs	r0, #162	; 0xa2
 800b132:	f7f6 fe61 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b136:	20c0      	movs	r0, #192	; 0xc0
 800b138:	f7f6 fe88 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b13c:	2010      	movs	r0, #16
 800b13e:	f7f6 fe5b 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b142:	20c1      	movs	r0, #193	; 0xc1
 800b144:	f7f6 fe82 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b148:	2010      	movs	r0, #16
 800b14a:	f7f6 fe55 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b14e:	20c5      	movs	r0, #197	; 0xc5
 800b150:	f7f6 fe7c 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b154:	2045      	movs	r0, #69	; 0x45
 800b156:	f7f6 fe4f 	bl	8001df8 <LCD_IO_WriteData>
 800b15a:	2015      	movs	r0, #21
 800b15c:	f7f6 fe4c 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b160:	20c7      	movs	r0, #199	; 0xc7
 800b162:	f7f6 fe73 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b166:	2090      	movs	r0, #144	; 0x90
 800b168:	f7f6 fe46 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b16c:	2036      	movs	r0, #54	; 0x36
 800b16e:	f7f6 fe6d 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b172:	20c8      	movs	r0, #200	; 0xc8
 800b174:	f7f6 fe40 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b178:	20f2      	movs	r0, #242	; 0xf2
 800b17a:	f7f6 fe67 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b17e:	2000      	movs	r0, #0
 800b180:	f7f6 fe3a 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b184:	20b0      	movs	r0, #176	; 0xb0
 800b186:	f7f6 fe61 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b18a:	20c2      	movs	r0, #194	; 0xc2
 800b18c:	f7f6 fe34 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b190:	20b6      	movs	r0, #182	; 0xb6
 800b192:	f7f6 fe5b 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b196:	200a      	movs	r0, #10
 800b198:	f7f6 fe2e 	bl	8001df8 <LCD_IO_WriteData>
 800b19c:	20a7      	movs	r0, #167	; 0xa7
 800b19e:	f7f6 fe2b 	bl	8001df8 <LCD_IO_WriteData>
 800b1a2:	2027      	movs	r0, #39	; 0x27
 800b1a4:	f7f6 fe28 	bl	8001df8 <LCD_IO_WriteData>
 800b1a8:	2004      	movs	r0, #4
 800b1aa:	f7f6 fe25 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1ae:	202a      	movs	r0, #42	; 0x2a
 800b1b0:	f7f6 fe4c 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1b4:	2000      	movs	r0, #0
 800b1b6:	f7f6 fe1f 	bl	8001df8 <LCD_IO_WriteData>
 800b1ba:	2000      	movs	r0, #0
 800b1bc:	f7f6 fe1c 	bl	8001df8 <LCD_IO_WriteData>
 800b1c0:	2000      	movs	r0, #0
 800b1c2:	f7f6 fe19 	bl	8001df8 <LCD_IO_WriteData>
 800b1c6:	20ef      	movs	r0, #239	; 0xef
 800b1c8:	f7f6 fe16 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1cc:	202b      	movs	r0, #43	; 0x2b
 800b1ce:	f7f6 fe3d 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1d2:	2000      	movs	r0, #0
 800b1d4:	f7f6 fe10 	bl	8001df8 <LCD_IO_WriteData>
 800b1d8:	2000      	movs	r0, #0
 800b1da:	f7f6 fe0d 	bl	8001df8 <LCD_IO_WriteData>
 800b1de:	2001      	movs	r0, #1
 800b1e0:	f7f6 fe0a 	bl	8001df8 <LCD_IO_WriteData>
 800b1e4:	203f      	movs	r0, #63	; 0x3f
 800b1e6:	f7f6 fe07 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b1ea:	20f6      	movs	r0, #246	; 0xf6
 800b1ec:	f7f6 fe2e 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b1f0:	2001      	movs	r0, #1
 800b1f2:	f7f6 fe01 	bl	8001df8 <LCD_IO_WriteData>
 800b1f6:	2000      	movs	r0, #0
 800b1f8:	f7f6 fdfe 	bl	8001df8 <LCD_IO_WriteData>
 800b1fc:	2006      	movs	r0, #6
 800b1fe:	f7f6 fdfb 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b202:	202c      	movs	r0, #44	; 0x2c
 800b204:	f7f6 fe22 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b208:	20c8      	movs	r0, #200	; 0xc8
 800b20a:	f7f6 fe87 	bl	8001f1c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b20e:	2026      	movs	r0, #38	; 0x26
 800b210:	f7f6 fe1c 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b214:	2001      	movs	r0, #1
 800b216:	f7f6 fdef 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b21a:	20e0      	movs	r0, #224	; 0xe0
 800b21c:	f7f6 fe16 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b220:	200f      	movs	r0, #15
 800b222:	f7f6 fde9 	bl	8001df8 <LCD_IO_WriteData>
 800b226:	2029      	movs	r0, #41	; 0x29
 800b228:	f7f6 fde6 	bl	8001df8 <LCD_IO_WriteData>
 800b22c:	2024      	movs	r0, #36	; 0x24
 800b22e:	f7f6 fde3 	bl	8001df8 <LCD_IO_WriteData>
 800b232:	200c      	movs	r0, #12
 800b234:	f7f6 fde0 	bl	8001df8 <LCD_IO_WriteData>
 800b238:	200e      	movs	r0, #14
 800b23a:	f7f6 fddd 	bl	8001df8 <LCD_IO_WriteData>
 800b23e:	2009      	movs	r0, #9
 800b240:	f7f6 fdda 	bl	8001df8 <LCD_IO_WriteData>
 800b244:	204e      	movs	r0, #78	; 0x4e
 800b246:	f7f6 fdd7 	bl	8001df8 <LCD_IO_WriteData>
 800b24a:	2078      	movs	r0, #120	; 0x78
 800b24c:	f7f6 fdd4 	bl	8001df8 <LCD_IO_WriteData>
 800b250:	203c      	movs	r0, #60	; 0x3c
 800b252:	f7f6 fdd1 	bl	8001df8 <LCD_IO_WriteData>
 800b256:	2009      	movs	r0, #9
 800b258:	f7f6 fdce 	bl	8001df8 <LCD_IO_WriteData>
 800b25c:	2013      	movs	r0, #19
 800b25e:	f7f6 fdcb 	bl	8001df8 <LCD_IO_WriteData>
 800b262:	2005      	movs	r0, #5
 800b264:	f7f6 fdc8 	bl	8001df8 <LCD_IO_WriteData>
 800b268:	2017      	movs	r0, #23
 800b26a:	f7f6 fdc5 	bl	8001df8 <LCD_IO_WriteData>
 800b26e:	2011      	movs	r0, #17
 800b270:	f7f6 fdc2 	bl	8001df8 <LCD_IO_WriteData>
 800b274:	2000      	movs	r0, #0
 800b276:	f7f6 fdbf 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b27a:	20e1      	movs	r0, #225	; 0xe1
 800b27c:	f7f6 fde6 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800b280:	2000      	movs	r0, #0
 800b282:	f7f6 fdb9 	bl	8001df8 <LCD_IO_WriteData>
 800b286:	2016      	movs	r0, #22
 800b288:	f7f6 fdb6 	bl	8001df8 <LCD_IO_WriteData>
 800b28c:	201b      	movs	r0, #27
 800b28e:	f7f6 fdb3 	bl	8001df8 <LCD_IO_WriteData>
 800b292:	2004      	movs	r0, #4
 800b294:	f7f6 fdb0 	bl	8001df8 <LCD_IO_WriteData>
 800b298:	2011      	movs	r0, #17
 800b29a:	f7f6 fdad 	bl	8001df8 <LCD_IO_WriteData>
 800b29e:	2007      	movs	r0, #7
 800b2a0:	f7f6 fdaa 	bl	8001df8 <LCD_IO_WriteData>
 800b2a4:	2031      	movs	r0, #49	; 0x31
 800b2a6:	f7f6 fda7 	bl	8001df8 <LCD_IO_WriteData>
 800b2aa:	2033      	movs	r0, #51	; 0x33
 800b2ac:	f7f6 fda4 	bl	8001df8 <LCD_IO_WriteData>
 800b2b0:	2042      	movs	r0, #66	; 0x42
 800b2b2:	f7f6 fda1 	bl	8001df8 <LCD_IO_WriteData>
 800b2b6:	2005      	movs	r0, #5
 800b2b8:	f7f6 fd9e 	bl	8001df8 <LCD_IO_WriteData>
 800b2bc:	200c      	movs	r0, #12
 800b2be:	f7f6 fd9b 	bl	8001df8 <LCD_IO_WriteData>
 800b2c2:	200a      	movs	r0, #10
 800b2c4:	f7f6 fd98 	bl	8001df8 <LCD_IO_WriteData>
 800b2c8:	2028      	movs	r0, #40	; 0x28
 800b2ca:	f7f6 fd95 	bl	8001df8 <LCD_IO_WriteData>
 800b2ce:	202f      	movs	r0, #47	; 0x2f
 800b2d0:	f7f6 fd92 	bl	8001df8 <LCD_IO_WriteData>
 800b2d4:	200f      	movs	r0, #15
 800b2d6:	f7f6 fd8f 	bl	8001df8 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800b2da:	2011      	movs	r0, #17
 800b2dc:	f7f6 fdb6 	bl	8001e4c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800b2e0:	20c8      	movs	r0, #200	; 0xc8
 800b2e2:	f7f6 fe1b 	bl	8001f1c <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800b2e6:	2029      	movs	r0, #41	; 0x29
 800b2e8:	f7f6 fdb0 	bl	8001e4c <LCD_IO_WriteReg>
}
 800b2ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800b2f0:	202c      	movs	r0, #44	; 0x2c
 800b2f2:	f7f6 bdab 	b.w	8001e4c <LCD_IO_WriteReg>
 800b2f6:	bf00      	nop

0800b2f8 <ili9341_ReadID>:
{
 800b2f8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800b2fa:	f7f6 fd6d 	bl	8001dd8 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 800b2fe:	2103      	movs	r1, #3
 800b300:	20d3      	movs	r0, #211	; 0xd3
 800b302:	f7f6 fdcd 	bl	8001ea0 <LCD_IO_ReadData>
}
 800b306:	b280      	uxth	r0, r0
 800b308:	bd08      	pop	{r3, pc}
 800b30a:	bf00      	nop

0800b30c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800b30c:	221f      	movs	r2, #31
 800b30e:	210b      	movs	r1, #11
 800b310:	b2c0      	uxtb	r0, r0
 800b312:	f7f6 bd13 	b.w	8001d3c <IOE_Write>
 800b316:	bf00      	nop

0800b318 <stmpe811_Reset>:
{
 800b318:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b31a:	b2c4      	uxtb	r4, r0
 800b31c:	2202      	movs	r2, #2
 800b31e:	2103      	movs	r1, #3
 800b320:	4620      	mov	r0, r4
 800b322:	f7f6 fd0b 	bl	8001d3c <IOE_Write>
  IOE_Delay(10); 
 800b326:	200a      	movs	r0, #10
 800b328:	f7f6 fd54 	bl	8001dd4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b32c:	4620      	mov	r0, r4
 800b32e:	2200      	movs	r2, #0
 800b330:	2103      	movs	r1, #3
 800b332:	f7f6 fd03 	bl	8001d3c <IOE_Write>
}
 800b336:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b33a:	2002      	movs	r0, #2
 800b33c:	f7f6 bd4a 	b.w	8001dd4 <IOE_Delay>

0800b340 <stmpe811_ReadID>:
{
 800b340:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b342:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 800b344:	f7f6 fcf6 	bl	8001d34 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b348:	2100      	movs	r1, #0
 800b34a:	4620      	mov	r0, r4
 800b34c:	f7f6 fd0e 	bl	8001d6c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b350:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b352:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b354:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b356:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800b358:	f7f6 fd08 	bl	8001d6c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800b35c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 800b360:	b280      	uxth	r0, r0
 800b362:	bd10      	pop	{r4, pc}

0800b364 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800b364:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800b366:	b2c4      	uxtb	r4, r0
 800b368:	2140      	movs	r1, #64	; 0x40
 800b36a:	4620      	mov	r0, r4
 800b36c:	f7f6 fcfe 	bl	8001d6c <IOE_Read>
  
  if(state > 0)
 800b370:	0603      	lsls	r3, r0, #24
 800b372:	d40b      	bmi.n	800b38c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b374:	4620      	mov	r0, r4
 800b376:	2201      	movs	r2, #1
 800b378:	214b      	movs	r1, #75	; 0x4b
 800b37a:	f7f6 fcdf 	bl	8001d3c <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b37e:	4620      	mov	r0, r4
 800b380:	2200      	movs	r2, #0
 800b382:	214b      	movs	r1, #75	; 0x4b
 800b384:	f7f6 fcda 	bl	8001d3c <IOE_Write>
  uint8_t ret = 0;
 800b388:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800b38a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800b38c:	214c      	movs	r1, #76	; 0x4c
 800b38e:	4620      	mov	r0, r4
 800b390:	f7f6 fcec 	bl	8001d6c <IOE_Read>
      ret = 1;
 800b394:	3800      	subs	r0, #0
 800b396:	bf18      	it	ne
 800b398:	2001      	movne	r0, #1
}
 800b39a:	bd10      	pop	{r4, pc}

0800b39c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800b39c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800b39e:	210b      	movs	r1, #11
 800b3a0:	b2c0      	uxtb	r0, r0
 800b3a2:	f7f6 fce3 	bl	8001d6c <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800b3a6:	f000 001f 	and.w	r0, r0, #31
 800b3aa:	bd08      	pop	{r3, pc}

0800b3ac <stmpe811_TS_GetXY>:
{
 800b3ac:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3ae:	2304      	movs	r3, #4
{
 800b3b0:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3b2:	b2c4      	uxtb	r4, r0
{
 800b3b4:	4615      	mov	r5, r2
 800b3b6:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800b3b8:	eb0d 0203 	add.w	r2, sp, r3
 800b3bc:	21d7      	movs	r1, #215	; 0xd7
 800b3be:	4620      	mov	r0, r4
 800b3c0:	f7f6 fcf0 	bl	8001da4 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 800b3c4:	9b01      	ldr	r3, [sp, #4]
 800b3c6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3c8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3ca:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800b3ce:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3d0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800b3d2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b3d4:	2201      	movs	r2, #1
 800b3d6:	214b      	movs	r1, #75	; 0x4b
 800b3d8:	f7f6 fcb0 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b3dc:	2200      	movs	r2, #0
 800b3de:	214b      	movs	r1, #75	; 0x4b
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	f7f6 fcab 	bl	8001d3c <IOE_Write>
}
 800b3e6:	b002      	add	sp, #8
 800b3e8:	bd70      	pop	{r4, r5, r6, pc}
 800b3ea:	bf00      	nop

0800b3ec <stmpe811_TS_Start>:
{
 800b3ec:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b3ee:	b2c4      	uxtb	r4, r0
 800b3f0:	2104      	movs	r1, #4
 800b3f2:	4620      	mov	r0, r4
 800b3f4:	f7f6 fcba 	bl	8001d6c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b3f8:	2104      	movs	r1, #4
 800b3fa:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 800b3fe:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b400:	4620      	mov	r0, r4
 800b402:	f7f6 fc9b 	bl	8001d3c <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800b406:	2117      	movs	r1, #23
 800b408:	4620      	mov	r0, r4
 800b40a:	f7f6 fcaf 	bl	8001d6c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800b40e:	2117      	movs	r1, #23
 800b410:	f000 020f 	and.w	r2, r0, #15
 800b414:	4620      	mov	r0, r4
 800b416:	f7f6 fc91 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800b41a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800b41e:	4620      	mov	r0, r4
 800b420:	2104      	movs	r1, #4
 800b422:	f7f6 fc8b 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800b426:	2249      	movs	r2, #73	; 0x49
 800b428:	2120      	movs	r1, #32
 800b42a:	4620      	mov	r0, r4
 800b42c:	f7f6 fc86 	bl	8001d3c <IOE_Write>
  IOE_Delay(2); 
 800b430:	2002      	movs	r0, #2
 800b432:	f7f6 fccf 	bl	8001dd4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800b436:	4620      	mov	r0, r4
 800b438:	2201      	movs	r2, #1
 800b43a:	2121      	movs	r1, #33	; 0x21
 800b43c:	f7f6 fc7e 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800b440:	4620      	mov	r0, r4
 800b442:	229a      	movs	r2, #154	; 0x9a
 800b444:	2141      	movs	r1, #65	; 0x41
 800b446:	f7f6 fc79 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800b44a:	4620      	mov	r0, r4
 800b44c:	2201      	movs	r2, #1
 800b44e:	214a      	movs	r1, #74	; 0x4a
 800b450:	f7f6 fc74 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800b454:	4620      	mov	r0, r4
 800b456:	2201      	movs	r2, #1
 800b458:	214b      	movs	r1, #75	; 0x4b
 800b45a:	f7f6 fc6f 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800b45e:	4620      	mov	r0, r4
 800b460:	2200      	movs	r2, #0
 800b462:	214b      	movs	r1, #75	; 0x4b
 800b464:	f7f6 fc6a 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800b468:	4620      	mov	r0, r4
 800b46a:	2201      	movs	r2, #1
 800b46c:	2156      	movs	r1, #86	; 0x56
 800b46e:	f7f6 fc65 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800b472:	4620      	mov	r0, r4
 800b474:	2201      	movs	r2, #1
 800b476:	2158      	movs	r1, #88	; 0x58
 800b478:	f7f6 fc60 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800b47c:	4620      	mov	r0, r4
 800b47e:	2201      	movs	r2, #1
 800b480:	2140      	movs	r1, #64	; 0x40
 800b482:	f7f6 fc5b 	bl	8001d3c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800b486:	4620      	mov	r0, r4
 800b488:	22ff      	movs	r2, #255	; 0xff
 800b48a:	210b      	movs	r1, #11
 800b48c:	f7f6 fc56 	bl	8001d3c <IOE_Write>
}
 800b490:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 800b494:	2002      	movs	r0, #2
 800b496:	f7f6 bc9d 	b.w	8001dd4 <IOE_Delay>
 800b49a:	bf00      	nop

0800b49c <stmpe811_TS_DisableIT>:
{
 800b49c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b49e:	b2c4      	uxtb	r4, r0
 800b4a0:	2109      	movs	r1, #9
 800b4a2:	4620      	mov	r0, r4
 800b4a4:	f7f6 fc62 	bl	8001d6c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800b4a8:	2109      	movs	r1, #9
 800b4aa:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800b4ae:	4620      	mov	r0, r4
 800b4b0:	f7f6 fc44 	bl	8001d3c <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4b4:	210a      	movs	r1, #10
 800b4b6:	4620      	mov	r0, r4
 800b4b8:	f7f6 fc58 	bl	8001d6c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4bc:	210a      	movs	r1, #10
 800b4be:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 800b4c2:	4620      	mov	r0, r4
}
 800b4c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4c8:	f7f6 bc38 	b.w	8001d3c <IOE_Write>

0800b4cc <stmpe811_TS_EnableIT>:
{
 800b4cc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4ce:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 800b4d0:	f7f6 fc32 	bl	8001d38 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800b4d4:	210a      	movs	r1, #10
 800b4d6:	4620      	mov	r0, r4
 800b4d8:	f7f6 fc48 	bl	8001d6c <IOE_Read>
  tmp |= Source; 
 800b4dc:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800b4e0:	b2c2      	uxtb	r2, r0
 800b4e2:	210a      	movs	r1, #10
 800b4e4:	4620      	mov	r0, r4
 800b4e6:	f7f6 fc29 	bl	8001d3c <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800b4ea:	2109      	movs	r1, #9
 800b4ec:	4620      	mov	r0, r4
 800b4ee:	f7f6 fc3d 	bl	8001d6c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 800b4f2:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b4f6:	b2c2      	uxtb	r2, r0
 800b4f8:	2109      	movs	r1, #9
 800b4fa:	4620      	mov	r0, r4
}
 800b4fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800b500:	f7f6 bc1c 	b.w	8001d3c <IOE_Write>

0800b504 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 800b504:	4a10      	ldr	r2, [pc, #64]	; (800b548 <stmpe811_Init+0x44>)
 800b506:	7813      	ldrb	r3, [r2, #0]
 800b508:	4298      	cmp	r0, r3
 800b50a:	d004      	beq.n	800b516 <stmpe811_Init+0x12>
 800b50c:	7851      	ldrb	r1, [r2, #1]
 800b50e:	4288      	cmp	r0, r1
 800b510:	d001      	beq.n	800b516 <stmpe811_Init+0x12>
 800b512:	b113      	cbz	r3, 800b51a <stmpe811_Init+0x16>
 800b514:	b101      	cbz	r1, 800b518 <stmpe811_Init+0x14>
 800b516:	4770      	bx	lr
 800b518:	2301      	movs	r3, #1
{
 800b51a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800b51c:	b2c4      	uxtb	r4, r0
 800b51e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800b520:	f7f6 fc08 	bl	8001d34 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800b524:	2202      	movs	r2, #2
 800b526:	2103      	movs	r1, #3
 800b528:	4620      	mov	r0, r4
 800b52a:	f7f6 fc07 	bl	8001d3c <IOE_Write>
  IOE_Delay(10); 
 800b52e:	200a      	movs	r0, #10
 800b530:	f7f6 fc50 	bl	8001dd4 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800b534:	4620      	mov	r0, r4
 800b536:	2200      	movs	r2, #0
 800b538:	2103      	movs	r1, #3
 800b53a:	f7f6 fbff 	bl	8001d3c <IOE_Write>
}
 800b53e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800b542:	2002      	movs	r0, #2
 800b544:	f7f6 bc46 	b.w	8001dd4 <IOE_Delay>
 800b548:	20002a1c 	.word	0x20002a1c

0800b54c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b54c:	4b05      	ldr	r3, [pc, #20]	; (800b564 <SystemInit+0x18>)
 800b54e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b552:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800b556:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800b55a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800b55e:	6099      	str	r1, [r3, #8]
#endif
}
 800b560:	4770      	bx	lr
 800b562:	bf00      	nop
 800b564:	e000ed00 	.word	0xe000ed00

0800b568 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800b568:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b56a:	4b0b      	ldr	r3, [pc, #44]	; (800b598 <HAL_Init+0x30>)
 800b56c:	681a      	ldr	r2, [r3, #0]
 800b56e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b572:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800b574:	681a      	ldr	r2, [r3, #0]
 800b576:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b57a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800b57c:	681a      	ldr	r2, [r3, #0]
 800b57e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b582:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800b584:	2003      	movs	r0, #3
 800b586:	f000 f82d 	bl	800b5e4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800b58a:	2000      	movs	r0, #0
 800b58c:	f7f7 f8f8 	bl	8002780 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800b590:	f7f6 fe18 	bl	80021c4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800b594:	2000      	movs	r0, #0
 800b596:	bd08      	pop	{r3, pc}
 800b598:	40023c00 	.word	0x40023c00

0800b59c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800b59c:	4a03      	ldr	r2, [pc, #12]	; (800b5ac <HAL_IncTick+0x10>)
 800b59e:	4b04      	ldr	r3, [pc, #16]	; (800b5b0 <HAL_IncTick+0x14>)
 800b5a0:	6811      	ldr	r1, [r2, #0]
 800b5a2:	781b      	ldrb	r3, [r3, #0]
 800b5a4:	440b      	add	r3, r1
 800b5a6:	6013      	str	r3, [r2, #0]
}
 800b5a8:	4770      	bx	lr
 800b5aa:	bf00      	nop
 800b5ac:	20002a20 	.word	0x20002a20
 800b5b0:	20000080 	.word	0x20000080

0800b5b4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800b5b4:	4b01      	ldr	r3, [pc, #4]	; (800b5bc <HAL_GetTick+0x8>)
 800b5b6:	6818      	ldr	r0, [r3, #0]
}
 800b5b8:	4770      	bx	lr
 800b5ba:	bf00      	nop
 800b5bc:	20002a20 	.word	0x20002a20

0800b5c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800b5c0:	b538      	push	{r3, r4, r5, lr}
 800b5c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b5c4:	f7ff fff6 	bl	800b5b4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800b5c8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800b5ca:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 800b5cc:	d002      	beq.n	800b5d4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 800b5ce:	4b04      	ldr	r3, [pc, #16]	; (800b5e0 <HAL_Delay+0x20>)
 800b5d0:	781b      	ldrb	r3, [r3, #0]
 800b5d2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800b5d4:	f7ff ffee 	bl	800b5b4 <HAL_GetTick>
 800b5d8:	1b43      	subs	r3, r0, r5
 800b5da:	42a3      	cmp	r3, r4
 800b5dc:	d3fa      	bcc.n	800b5d4 <HAL_Delay+0x14>
  {
  }
}
 800b5de:	bd38      	pop	{r3, r4, r5, pc}
 800b5e0:	20000080 	.word	0x20000080

0800b5e4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800b5e4:	4907      	ldr	r1, [pc, #28]	; (800b604 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800b5e6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5e8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5ea:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800b5ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800b5f2:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800b5f4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800b5f6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800b5fa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800b5fe:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800b600:	4770      	bx	lr
 800b602:	bf00      	nop
 800b604:	e000ed00 	.word	0xe000ed00

0800b608 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800b608:	4b1c      	ldr	r3, [pc, #112]	; (800b67c <HAL_NVIC_SetPriority+0x74>)
 800b60a:	68db      	ldr	r3, [r3, #12]
 800b60c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800b610:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b612:	f1c3 0e07 	rsb	lr, r3, #7
 800b616:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b61a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800b61e:	bf28      	it	cs
 800b620:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b624:	f1bc 0f06 	cmp.w	ip, #6
 800b628:	d91b      	bls.n	800b662 <HAL_NVIC_SetPriority+0x5a>
 800b62a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800b62c:	f04f 3cff 	mov.w	ip, #4294967295
 800b630:	fa0c fc03 	lsl.w	ip, ip, r3
 800b634:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b638:	f04f 3cff 	mov.w	ip, #4294967295
 800b63c:	fa0c fc0e 	lsl.w	ip, ip, lr
 800b640:	ea21 010c 	bic.w	r1, r1, ip
 800b644:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800b646:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800b648:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800b64c:	db0c      	blt.n	800b668 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b64e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 800b652:	0109      	lsls	r1, r1, #4
 800b654:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800b658:	b2c9      	uxtb	r1, r1
 800b65a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800b65e:	f85d fb04 	ldr.w	pc, [sp], #4
 800b662:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800b664:	4613      	mov	r3, r2
 800b666:	e7e7      	b.n	800b638 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800b668:	4b05      	ldr	r3, [pc, #20]	; (800b680 <HAL_NVIC_SetPriority+0x78>)
 800b66a:	f000 000f 	and.w	r0, r0, #15
 800b66e:	0109      	lsls	r1, r1, #4
 800b670:	4403      	add	r3, r0
 800b672:	b2c9      	uxtb	r1, r1
 800b674:	7619      	strb	r1, [r3, #24]
 800b676:	f85d fb04 	ldr.w	pc, [sp], #4
 800b67a:	bf00      	nop
 800b67c:	e000ed00 	.word	0xe000ed00
 800b680:	e000ecfc 	.word	0xe000ecfc

0800b684 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800b684:	2800      	cmp	r0, #0
 800b686:	db07      	blt.n	800b698 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800b688:	0941      	lsrs	r1, r0, #5
 800b68a:	4a04      	ldr	r2, [pc, #16]	; (800b69c <HAL_NVIC_EnableIRQ+0x18>)
 800b68c:	f000 001f 	and.w	r0, r0, #31
 800b690:	2301      	movs	r3, #1
 800b692:	4083      	lsls	r3, r0
 800b694:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800b698:	4770      	bx	lr
 800b69a:	bf00      	nop
 800b69c:	e000e100 	.word	0xe000e100

0800b6a0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800b6a0:	b180      	cbz	r0, 800b6c4 <HAL_CRC_Init+0x24>
{
 800b6a2:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800b6a4:	7943      	ldrb	r3, [r0, #5]
 800b6a6:	4604      	mov	r4, r0
 800b6a8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b6ac:	b11b      	cbz	r3, 800b6b6 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800b6ae:	2301      	movs	r3, #1
 800b6b0:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800b6b2:	2000      	movs	r0, #0
}
 800b6b4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800b6b6:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800b6b8:	f7f6 fda4 	bl	8002204 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 800b6bc:	2301      	movs	r3, #1
 800b6be:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 800b6c0:	2000      	movs	r0, #0
}
 800b6c2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b6c4:	2001      	movs	r0, #1
}
 800b6c6:	4770      	bx	lr

0800b6c8 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800b6c8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b6cc:	2b02      	cmp	r3, #2
 800b6ce:	d003      	beq.n	800b6d8 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800b6d0:	2380      	movs	r3, #128	; 0x80
 800b6d2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800b6d4:	2001      	movs	r0, #1
 800b6d6:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800b6d8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800b6da:	2305      	movs	r3, #5
 800b6dc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 800b6e0:	6813      	ldr	r3, [r2, #0]
 800b6e2:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 800b6e6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 800b6e8:	6013      	str	r3, [r2, #0]
}
 800b6ea:	4770      	bx	lr

0800b6ec <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 800b6ec:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 800b6f0:	4770      	bx	lr
 800b6f2:	bf00      	nop

0800b6f4 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 800b6f4:	4b21      	ldr	r3, [pc, #132]	; (800b77c <FLASH_SetErrorCode+0x88>)
 800b6f6:	68da      	ldr	r2, [r3, #12]
 800b6f8:	06d0      	lsls	r0, r2, #27
 800b6fa:	d505      	bpl.n	800b708 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b6fc:	4920      	ldr	r1, [pc, #128]	; (800b780 <FLASH_SetErrorCode+0x8c>)
 800b6fe:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b700:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 800b702:	4302      	orrs	r2, r0
 800b704:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 800b706:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 800b708:	4b1c      	ldr	r3, [pc, #112]	; (800b77c <FLASH_SetErrorCode+0x88>)
 800b70a:	68da      	ldr	r2, [r3, #12]
 800b70c:	0691      	lsls	r1, r2, #26
 800b70e:	d506      	bpl.n	800b71e <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b710:	491b      	ldr	r1, [pc, #108]	; (800b780 <FLASH_SetErrorCode+0x8c>)
 800b712:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b714:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 800b716:	f042 0208 	orr.w	r2, r2, #8
 800b71a:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 800b71c:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 800b71e:	4b17      	ldr	r3, [pc, #92]	; (800b77c <FLASH_SetErrorCode+0x88>)
 800b720:	68da      	ldr	r2, [r3, #12]
 800b722:	0652      	lsls	r2, r2, #25
 800b724:	d506      	bpl.n	800b734 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b726:	4916      	ldr	r1, [pc, #88]	; (800b780 <FLASH_SetErrorCode+0x8c>)
 800b728:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b72a:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 800b72c:	f042 0204 	orr.w	r2, r2, #4
 800b730:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 800b732:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 800b734:	4b11      	ldr	r3, [pc, #68]	; (800b77c <FLASH_SetErrorCode+0x88>)
 800b736:	68da      	ldr	r2, [r3, #12]
 800b738:	0610      	lsls	r0, r2, #24
 800b73a:	d506      	bpl.n	800b74a <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b73c:	4910      	ldr	r1, [pc, #64]	; (800b780 <FLASH_SetErrorCode+0x8c>)
 800b73e:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b740:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 800b742:	f042 0202 	orr.w	r2, r2, #2
 800b746:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 800b748:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 800b74a:	4b0c      	ldr	r3, [pc, #48]	; (800b77c <FLASH_SetErrorCode+0x88>)
 800b74c:	68da      	ldr	r2, [r3, #12]
 800b74e:	05d1      	lsls	r1, r2, #23
 800b750:	d507      	bpl.n	800b762 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b752:	490b      	ldr	r1, [pc, #44]	; (800b780 <FLASH_SetErrorCode+0x8c>)
 800b754:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b756:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 800b75a:	f042 0201 	orr.w	r2, r2, #1
 800b75e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 800b760:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 800b762:	4b06      	ldr	r3, [pc, #24]	; (800b77c <FLASH_SetErrorCode+0x88>)
 800b764:	68da      	ldr	r2, [r3, #12]
 800b766:	0792      	lsls	r2, r2, #30
 800b768:	d506      	bpl.n	800b778 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b76a:	4905      	ldr	r1, [pc, #20]	; (800b780 <FLASH_SetErrorCode+0x8c>)
 800b76c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b76e:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 800b770:	f042 0220 	orr.w	r2, r2, #32
 800b774:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 800b776:	60d8      	str	r0, [r3, #12]
  }
}
 800b778:	4770      	bx	lr
 800b77a:	bf00      	nop
 800b77c:	40023c00 	.word	0x40023c00
 800b780:	20002a24 	.word	0x20002a24

0800b784 <HAL_FLASH_Program>:
{
 800b784:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 800b788:	4f4d      	ldr	r7, [pc, #308]	; (800b8c0 <HAL_FLASH_Program+0x13c>)
{
 800b78a:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 800b78c:	7e3b      	ldrb	r3, [r7, #24]
 800b78e:	2b01      	cmp	r3, #1
 800b790:	d060      	beq.n	800b854 <HAL_FLASH_Program+0xd0>
 800b792:	2301      	movs	r3, #1
 800b794:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b796:	2300      	movs	r3, #0
 800b798:	4681      	mov	r9, r0
 800b79a:	468a      	mov	sl, r1
 800b79c:	4690      	mov	r8, r2
 800b79e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b7a0:	f7ff ff08 	bl	800b5b4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7a4:	4d47      	ldr	r5, [pc, #284]	; (800b8c4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b7a6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7a8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7ac:	e004      	b.n	800b7b8 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b7ae:	f7ff ff01 	bl	800b5b4 <HAL_GetTick>
 800b7b2:	1b00      	subs	r0, r0, r4
 800b7b4:	42b0      	cmp	r0, r6
 800b7b6:	d848      	bhi.n	800b84a <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b7b8:	68eb      	ldr	r3, [r5, #12]
 800b7ba:	03d8      	lsls	r0, r3, #15
 800b7bc:	d4f7      	bmi.n	800b7ae <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b7be:	68eb      	ldr	r3, [r5, #12]
 800b7c0:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b7c2:	bf44      	itt	mi
 800b7c4:	2301      	movmi	r3, #1
 800b7c6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b7c8:	4b3e      	ldr	r3, [pc, #248]	; (800b8c4 <HAL_FLASH_Program+0x140>)
 800b7ca:	68da      	ldr	r2, [r3, #12]
 800b7cc:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 800b7d0:	d154      	bne.n	800b87c <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 800b7d2:	f1b9 0f00 	cmp.w	r9, #0
 800b7d6:	d040      	beq.n	800b85a <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7d8:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7dc:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 800b7de:	d051      	beq.n	800b884 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b7e0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b7e4:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7e6:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b7ea:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 800b7ec:	d05e      	beq.n	800b8ac <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 800b7ee:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800b7f2:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b7f4:	691a      	ldr	r2, [r3, #16]
 800b7f6:	f042 0201 	orr.w	r2, r2, #1
 800b7fa:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 800b7fc:	f8ca 8000 	str.w	r8, [sl]
 800b800:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 800b804:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b808:	2300      	movs	r3, #0
 800b80a:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 800b80c:	f7ff fed2 	bl	800b5b4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b810:	4d2c      	ldr	r5, [pc, #176]	; (800b8c4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 800b812:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b814:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b818:	e004      	b.n	800b824 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b81a:	f7ff fecb 	bl	800b5b4 <HAL_GetTick>
 800b81e:	1b00      	subs	r0, r0, r4
 800b820:	42b0      	cmp	r0, r6
 800b822:	d829      	bhi.n	800b878 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b824:	68eb      	ldr	r3, [r5, #12]
 800b826:	03da      	lsls	r2, r3, #15
 800b828:	d4f7      	bmi.n	800b81a <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b82a:	68eb      	ldr	r3, [r5, #12]
 800b82c:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b82e:	bf44      	itt	mi
 800b830:	2301      	movmi	r3, #1
 800b832:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b834:	4b23      	ldr	r3, [pc, #140]	; (800b8c4 <HAL_FLASH_Program+0x140>)
 800b836:	68d8      	ldr	r0, [r3, #12]
 800b838:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b83c:	d132      	bne.n	800b8a4 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 800b83e:	4a21      	ldr	r2, [pc, #132]	; (800b8c4 <HAL_FLASH_Program+0x140>)
 800b840:	6913      	ldr	r3, [r2, #16]
 800b842:	f023 0301 	bic.w	r3, r3, #1
 800b846:	6113      	str	r3, [r2, #16]
 800b848:	e000      	b.n	800b84c <HAL_FLASH_Program+0xc8>
 800b84a:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 800b84c:	2300      	movs	r3, #0
 800b84e:	763b      	strb	r3, [r7, #24]
}
 800b850:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 800b854:	2002      	movs	r0, #2
}
 800b856:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b85a:	691a      	ldr	r2, [r3, #16]
 800b85c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b860:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 800b862:	691a      	ldr	r2, [r3, #16]
 800b864:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b866:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 800b868:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b86c:	f042 0201 	orr.w	r2, r2, #1
 800b870:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 800b872:	f88a 8000 	strb.w	r8, [sl]
}
 800b876:	e7c7      	b.n	800b808 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 800b878:	2003      	movs	r0, #3
 800b87a:	e7e0      	b.n	800b83e <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 800b87c:	f7ff ff3a 	bl	800b6f4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b880:	2001      	movs	r0, #1
 800b882:	e7e3      	b.n	800b84c <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800b884:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800b888:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 800b88a:	691a      	ldr	r2, [r3, #16]
 800b88c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b890:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b892:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 800b894:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 800b898:	f042 0201 	orr.w	r2, r2, #1
 800b89c:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 800b89e:	f8aa 8000 	strh.w	r8, [sl]
}
 800b8a2:	e7b1      	b.n	800b808 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 800b8a4:	f7ff ff26 	bl	800b6f4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b8a8:	2001      	movs	r0, #1
 800b8aa:	e7c8      	b.n	800b83e <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 800b8ac:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8b0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 800b8b2:	691a      	ldr	r2, [r3, #16]
 800b8b4:	f042 0201 	orr.w	r2, r2, #1
 800b8b8:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 800b8ba:	f8ca 8000 	str.w	r8, [sl]
}
 800b8be:	e7a3      	b.n	800b808 <HAL_FLASH_Program+0x84>
 800b8c0:	20002a24 	.word	0x20002a24
 800b8c4:	40023c00 	.word	0x40023c00

0800b8c8 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8c8:	4b06      	ldr	r3, [pc, #24]	; (800b8e4 <HAL_FLASH_Unlock+0x1c>)
 800b8ca:	691a      	ldr	r2, [r3, #16]
 800b8cc:	2a00      	cmp	r2, #0
 800b8ce:	db01      	blt.n	800b8d4 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 800b8d0:	2000      	movs	r0, #0
}
 800b8d2:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8d4:	4904      	ldr	r1, [pc, #16]	; (800b8e8 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8d6:	4a05      	ldr	r2, [pc, #20]	; (800b8ec <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 800b8d8:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 800b8da:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 800b8dc:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 800b8de:	0fc0      	lsrs	r0, r0, #31
 800b8e0:	4770      	bx	lr
 800b8e2:	bf00      	nop
 800b8e4:	40023c00 	.word	0x40023c00
 800b8e8:	45670123 	.word	0x45670123
 800b8ec:	cdef89ab 	.word	0xcdef89ab

0800b8f0 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 800b8f0:	4a03      	ldr	r2, [pc, #12]	; (800b900 <HAL_FLASH_Lock+0x10>)
 800b8f2:	6913      	ldr	r3, [r2, #16]
 800b8f4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 800b8f8:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 800b8fa:	6113      	str	r3, [r2, #16]
}
 800b8fc:	4770      	bx	lr
 800b8fe:	bf00      	nop
 800b900:	40023c00 	.word	0x40023c00

0800b904 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 800b904:	4b01      	ldr	r3, [pc, #4]	; (800b90c <HAL_FLASH_GetError+0x8>)
 800b906:	69d8      	ldr	r0, [r3, #28]
}  
 800b908:	4770      	bx	lr
 800b90a:	bf00      	nop
 800b90c:	20002a24 	.word	0x20002a24

0800b910 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b910:	4b14      	ldr	r3, [pc, #80]	; (800b964 <FLASH_WaitForLastOperation+0x54>)
{ 
 800b912:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b914:	2200      	movs	r2, #0
{ 
 800b916:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 800b918:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 800b91a:	f7ff fe4b 	bl	800b5b4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b91e:	4e12      	ldr	r6, [pc, #72]	; (800b968 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 800b920:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b922:	1c63      	adds	r3, r4, #1
 800b924:	d10f      	bne.n	800b946 <FLASH_WaitForLastOperation+0x36>
 800b926:	4a10      	ldr	r2, [pc, #64]	; (800b968 <FLASH_WaitForLastOperation+0x58>)
 800b928:	68d3      	ldr	r3, [r2, #12]
 800b92a:	03d8      	lsls	r0, r3, #15
 800b92c:	d4fc      	bmi.n	800b928 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 800b92e:	4b0e      	ldr	r3, [pc, #56]	; (800b968 <FLASH_WaitForLastOperation+0x58>)
 800b930:	68da      	ldr	r2, [r3, #12]
 800b932:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 800b934:	bf44      	itt	mi
 800b936:	2201      	movmi	r2, #1
 800b938:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 800b93a:	4b0b      	ldr	r3, [pc, #44]	; (800b968 <FLASH_WaitForLastOperation+0x58>)
 800b93c:	68d8      	ldr	r0, [r3, #12]
 800b93e:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 800b942:	d10b      	bne.n	800b95c <FLASH_WaitForLastOperation+0x4c>
}  
 800b944:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 800b946:	68f3      	ldr	r3, [r6, #12]
 800b948:	03d9      	lsls	r1, r3, #15
 800b94a:	d5f0      	bpl.n	800b92e <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800b94c:	b124      	cbz	r4, 800b958 <FLASH_WaitForLastOperation+0x48>
 800b94e:	f7ff fe31 	bl	800b5b4 <HAL_GetTick>
 800b952:	1b40      	subs	r0, r0, r5
 800b954:	42a0      	cmp	r0, r4
 800b956:	d9e4      	bls.n	800b922 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 800b958:	2003      	movs	r0, #3
}  
 800b95a:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 800b95c:	f7ff feca 	bl	800b6f4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 800b960:	2001      	movs	r0, #1
}  
 800b962:	bd70      	pop	{r4, r5, r6, pc}
 800b964:	20002a24 	.word	0x20002a24
 800b968:	40023c00 	.word	0x40023c00

0800b96c <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 800b96c:	4b14      	ldr	r3, [pc, #80]	; (800b9c0 <FLASH_FlushCaches+0x54>)
 800b96e:	681a      	ldr	r2, [r3, #0]
 800b970:	0591      	lsls	r1, r2, #22
 800b972:	d50f      	bpl.n	800b994 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 800b974:	681a      	ldr	r2, [r3, #0]
 800b976:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800b97a:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 800b97c:	681a      	ldr	r2, [r3, #0]
 800b97e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b982:	601a      	str	r2, [r3, #0]
 800b984:	681a      	ldr	r2, [r3, #0]
 800b986:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b98a:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800b98c:	681a      	ldr	r2, [r3, #0]
 800b98e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b992:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 800b994:	4b0a      	ldr	r3, [pc, #40]	; (800b9c0 <FLASH_FlushCaches+0x54>)
 800b996:	681a      	ldr	r2, [r3, #0]
 800b998:	0552      	lsls	r2, r2, #21
 800b99a:	d50f      	bpl.n	800b9bc <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 800b99c:	681a      	ldr	r2, [r3, #0]
 800b99e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9a2:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 800b9a4:	681a      	ldr	r2, [r3, #0]
 800b9a6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b9aa:	601a      	str	r2, [r3, #0]
 800b9ac:	681a      	ldr	r2, [r3, #0]
 800b9ae:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800b9b2:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 800b9b4:	681a      	ldr	r2, [r3, #0]
 800b9b6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b9ba:	601a      	str	r2, [r3, #0]
  }
}
 800b9bc:	4770      	bx	lr
 800b9be:	bf00      	nop
 800b9c0:	40023c00 	.word	0x40023c00

0800b9c4 <HAL_FLASHEx_Erase>:
{
 800b9c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 800b9c8:	4f44      	ldr	r7, [pc, #272]	; (800badc <HAL_FLASHEx_Erase+0x118>)
 800b9ca:	7e3b      	ldrb	r3, [r7, #24]
 800b9cc:	2b01      	cmp	r3, #1
 800b9ce:	d053      	beq.n	800ba78 <HAL_FLASHEx_Erase+0xb4>
 800b9d0:	2301      	movs	r3, #1
 800b9d2:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9d4:	f24c 3050 	movw	r0, #50000	; 0xc350
 800b9d8:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 800b9da:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800b9dc:	f7ff ff98 	bl	800b910 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 800b9e0:	4606      	mov	r6, r0
 800b9e2:	2800      	cmp	r0, #0
 800b9e4:	d143      	bne.n	800ba6e <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 800b9e6:	f04f 33ff 	mov.w	r3, #4294967295
 800b9ea:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 800b9ee:	f8d9 3000 	ldr.w	r3, [r9]
 800b9f2:	2b01      	cmp	r3, #1
 800b9f4:	d044      	beq.n	800ba80 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800b9f6:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 800b9fa:	442b      	add	r3, r5
 800b9fc:	429d      	cmp	r5, r3
 800b9fe:	d234      	bcs.n	800ba6a <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba00:	4c37      	ldr	r4, [pc, #220]	; (800bae0 <HAL_FLASHEx_Erase+0x11c>)
 800ba02:	e005      	b.n	800ba10 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 800ba04:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 800ba08:	3501      	adds	r5, #1
 800ba0a:	4413      	add	r3, r2
 800ba0c:	42ab      	cmp	r3, r5
 800ba0e:	d92c      	bls.n	800ba6a <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 800ba10:	f899 3010 	ldrb.w	r3, [r9, #16]
 800ba14:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 800ba16:	f44f 7140 	mov.w	r1, #768	; 0x300
 800ba1a:	bf98      	it	ls
 800ba1c:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba1e:	6923      	ldr	r3, [r4, #16]
 800ba20:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ba24:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 800ba26:	6923      	ldr	r3, [r4, #16]
 800ba28:	430b      	orrs	r3, r1
 800ba2a:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 800ba2c:	6923      	ldr	r3, [r4, #16]
 800ba2e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800ba32:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba34:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 800ba36:	2d0b      	cmp	r5, #11
    Sector += 4U;
 800ba38:	bf8c      	ite	hi
 800ba3a:	1d2a      	addhi	r2, r5, #4
 800ba3c:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 800ba3e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ba42:	f043 0302 	orr.w	r3, r3, #2
 800ba46:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 800ba48:	6923      	ldr	r3, [r4, #16]
 800ba4a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800ba4e:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba50:	f24c 3050 	movw	r0, #50000	; 0xc350
 800ba54:	f7ff ff5c 	bl	800b910 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 800ba58:	6923      	ldr	r3, [r4, #16]
 800ba5a:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 800ba5e:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 800ba60:	2800      	cmp	r0, #0
 800ba62:	d0cf      	beq.n	800ba04 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 800ba64:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800ba68:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 800ba6a:	f7ff ff7f 	bl	800b96c <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 800ba6e:	2300      	movs	r3, #0
 800ba70:	763b      	strb	r3, [r7, #24]
}
 800ba72:	4630      	mov	r0, r6
 800ba74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 800ba78:	2602      	movs	r6, #2
}
 800ba7a:	4630      	mov	r0, r6
 800ba7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba80:	4a17      	ldr	r2, [pc, #92]	; (800bae0 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba82:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba86:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 800ba88:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 800ba8c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800ba90:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800ba92:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 800ba94:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 800ba96:	d01a      	beq.n	800bace <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 800ba98:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 800ba9a:	bf0c      	ite	eq
 800ba9c:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 800baa0:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 800baa4:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 800baa6:	4c0e      	ldr	r4, [pc, #56]	; (800bae0 <HAL_FLASHEx_Erase+0x11c>)
 800baa8:	021b      	lsls	r3, r3, #8
 800baaa:	6922      	ldr	r2, [r4, #16]
 800baac:	b29b      	uxth	r3, r3
 800baae:	4313      	orrs	r3, r2
 800bab0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bab4:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bab6:	f24c 3050 	movw	r0, #50000	; 0xc350
 800baba:	f7ff ff29 	bl	800b910 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 800babe:	6923      	ldr	r3, [r4, #16]
 800bac0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800bac4:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 800bac8:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 800baca:	6123      	str	r3, [r4, #16]
 800bacc:	e7cd      	b.n	800ba6a <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 800bace:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 800bad2:	f041 0104 	orr.w	r1, r1, #4
 800bad6:	6111      	str	r1, [r2, #16]
 800bad8:	e7e5      	b.n	800baa6 <HAL_FLASHEx_Erase+0xe2>
 800bada:	bf00      	nop
 800badc:	20002a24 	.word	0x20002a24
 800bae0:	40023c00 	.word	0x40023c00

0800bae4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800bae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bae8:	2200      	movs	r2, #0
 800baea:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800baec:	f8df a260 	ldr.w	sl, [pc, #608]	; 800bd50 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800baf0:	4e90      	ldr	r6, [pc, #576]	; (800bd34 <HAL_GPIO_Init+0x250>)
{
 800baf2:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800baf4:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800baf6:	4689      	mov	r9, r1
 800baf8:	e005      	b.n	800bb06 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bafa:	3301      	adds	r3, #1
 800bafc:	2b10      	cmp	r3, #16
 800bafe:	f102 0202 	add.w	r2, r2, #2
 800bb02:	f000 8095 	beq.w	800bc30 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800bb06:	2101      	movs	r1, #1
 800bb08:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800bb0a:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 800bb0e:	43a1      	bics	r1, r4
 800bb10:	d1f3      	bne.n	800bafa <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800bb12:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800bb16:	f00c 0103 	and.w	r1, ip, #3
 800bb1a:	1e4d      	subs	r5, r1, #1
 800bb1c:	2d01      	cmp	r5, #1
 800bb1e:	f240 808a 	bls.w	800bc36 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800bb22:	2903      	cmp	r1, #3
 800bb24:	f040 80ca 	bne.w	800bcbc <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bb28:	4091      	lsls	r1, r2
 800bb2a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 800bb2c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800bb2e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800bb30:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb32:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800bb36:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800bb38:	d0df      	beq.n	800bafa <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800bb3a:	2100      	movs	r1, #0
 800bb3c:	9103      	str	r1, [sp, #12]
 800bb3e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb42:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800bb46:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800bb4a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800bb4e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800bb52:	9103      	str	r1, [sp, #12]
 800bb54:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb56:	f023 0103 	bic.w	r1, r3, #3
 800bb5a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bb5e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb62:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800bb66:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800bb68:	00bf      	lsls	r7, r7, #2
 800bb6a:	f04f 0e0f 	mov.w	lr, #15
 800bb6e:	fa0e fe07 	lsl.w	lr, lr, r7
 800bb72:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bb76:	4d70      	ldr	r5, [pc, #448]	; (800bd38 <HAL_GPIO_Init+0x254>)
 800bb78:	42a8      	cmp	r0, r5
 800bb7a:	d02e      	beq.n	800bbda <HAL_GPIO_Init+0xf6>
 800bb7c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800bb80:	42a8      	cmp	r0, r5
 800bb82:	f000 809f 	beq.w	800bcc4 <HAL_GPIO_Init+0x1e0>
 800bb86:	4d6d      	ldr	r5, [pc, #436]	; (800bd3c <HAL_GPIO_Init+0x258>)
 800bb88:	42a8      	cmp	r0, r5
 800bb8a:	f000 80a2 	beq.w	800bcd2 <HAL_GPIO_Init+0x1ee>
 800bb8e:	4d6c      	ldr	r5, [pc, #432]	; (800bd40 <HAL_GPIO_Init+0x25c>)
 800bb90:	42a8      	cmp	r0, r5
 800bb92:	f000 80a5 	beq.w	800bce0 <HAL_GPIO_Init+0x1fc>
 800bb96:	4d6b      	ldr	r5, [pc, #428]	; (800bd44 <HAL_GPIO_Init+0x260>)
 800bb98:	42a8      	cmp	r0, r5
 800bb9a:	f000 80a8 	beq.w	800bcee <HAL_GPIO_Init+0x20a>
 800bb9e:	4d6a      	ldr	r5, [pc, #424]	; (800bd48 <HAL_GPIO_Init+0x264>)
 800bba0:	42a8      	cmp	r0, r5
 800bba2:	f000 80b2 	beq.w	800bd0a <HAL_GPIO_Init+0x226>
 800bba6:	4d69      	ldr	r5, [pc, #420]	; (800bd4c <HAL_GPIO_Init+0x268>)
 800bba8:	42a8      	cmp	r0, r5
 800bbaa:	f000 80b5 	beq.w	800bd18 <HAL_GPIO_Init+0x234>
 800bbae:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800bd54 <HAL_GPIO_Init+0x270>
 800bbb2:	4570      	cmp	r0, lr
 800bbb4:	f000 80a2 	beq.w	800bcfc <HAL_GPIO_Init+0x218>
 800bbb8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800bd58 <HAL_GPIO_Init+0x274>
 800bbbc:	4570      	cmp	r0, lr
 800bbbe:	f000 80b2 	beq.w	800bd26 <HAL_GPIO_Init+0x242>
 800bbc2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800bd5c <HAL_GPIO_Init+0x278>
 800bbc6:	4570      	cmp	r0, lr
 800bbc8:	bf0c      	ite	eq
 800bbca:	f04f 0e09 	moveq.w	lr, #9
 800bbce:	f04f 0e0a 	movne.w	lr, #10
 800bbd2:	fa0e f707 	lsl.w	r7, lr, r7
 800bbd6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800bbda:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800bbde:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800bbe0:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800bbe4:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800bbe8:	bf0c      	ite	eq
 800bbea:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bbec:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800bbf0:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800bbf2:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800bbf4:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800bbf8:	bf0c      	ite	eq
 800bbfa:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bbfc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800bc00:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800bc02:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800bc04:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800bc08:	bf0c      	ite	eq
 800bc0a:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc0c:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800bc10:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800bc12:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800bc14:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc18:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800bc1c:	bf0c      	ite	eq
 800bc1e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800bc20:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc24:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800bc26:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800bc28:	f102 0202 	add.w	r2, r2, #2
 800bc2c:	f47f af6b 	bne.w	800bb06 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800bc30:	b005      	add	sp, #20
 800bc32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc36:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800bc3a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc3e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc42:	2503      	movs	r5, #3
 800bc44:	fa05 f802 	lsl.w	r8, r5, r2
 800bc48:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800bc4c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800bc50:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800bc52:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800bc54:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800bc58:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800bc5c:	409f      	lsls	r7, r3
 800bc5e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bc62:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800bc66:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800bc68:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800bc6a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800bc6e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800bc72:	4097      	lsls	r7, r2
 800bc74:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc78:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800bc7a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800bc7c:	fa01 f102 	lsl.w	r1, r1, r2
 800bc80:	f47f af54 	bne.w	800bb2c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800bc84:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800bc88:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bc8c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800bc90:	f8de 7020 	ldr.w	r7, [lr, #32]
 800bc94:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bc96:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bc9a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bc9e:	fa07 f708 	lsl.w	r7, r7, r8
 800bca2:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800bca4:	270f      	movs	r7, #15
 800bca6:	fa07 f808 	lsl.w	r8, r7, r8
 800bcaa:	9f00      	ldr	r7, [sp, #0]
 800bcac:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800bcb0:	9f01      	ldr	r7, [sp, #4]
 800bcb2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800bcb6:	f8ce 7020 	str.w	r7, [lr, #32]
 800bcba:	e737      	b.n	800bb2c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800bcbc:	2503      	movs	r5, #3
 800bcbe:	4095      	lsls	r5, r2
 800bcc0:	43ed      	mvns	r5, r5
 800bcc2:	e7d1      	b.n	800bc68 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800bcc4:	f04f 0e01 	mov.w	lr, #1
 800bcc8:	fa0e f707 	lsl.w	r7, lr, r7
 800bccc:	ea48 0807 	orr.w	r8, r8, r7
 800bcd0:	e783      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bcd2:	f04f 0e02 	mov.w	lr, #2
 800bcd6:	fa0e f707 	lsl.w	r7, lr, r7
 800bcda:	ea48 0807 	orr.w	r8, r8, r7
 800bcde:	e77c      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bce0:	f04f 0e03 	mov.w	lr, #3
 800bce4:	fa0e f707 	lsl.w	r7, lr, r7
 800bce8:	ea48 0807 	orr.w	r8, r8, r7
 800bcec:	e775      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bcee:	f04f 0e04 	mov.w	lr, #4
 800bcf2:	fa0e f707 	lsl.w	r7, lr, r7
 800bcf6:	ea48 0807 	orr.w	r8, r8, r7
 800bcfa:	e76e      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bcfc:	f04f 0e07 	mov.w	lr, #7
 800bd00:	fa0e f707 	lsl.w	r7, lr, r7
 800bd04:	ea48 0807 	orr.w	r8, r8, r7
 800bd08:	e767      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bd0a:	f04f 0e05 	mov.w	lr, #5
 800bd0e:	fa0e f707 	lsl.w	r7, lr, r7
 800bd12:	ea48 0807 	orr.w	r8, r8, r7
 800bd16:	e760      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bd18:	f04f 0e06 	mov.w	lr, #6
 800bd1c:	fa0e f707 	lsl.w	r7, lr, r7
 800bd20:	ea48 0807 	orr.w	r8, r8, r7
 800bd24:	e759      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bd26:	f04f 0e08 	mov.w	lr, #8
 800bd2a:	fa0e f707 	lsl.w	r7, lr, r7
 800bd2e:	ea48 0807 	orr.w	r8, r8, r7
 800bd32:	e752      	b.n	800bbda <HAL_GPIO_Init+0xf6>
 800bd34:	40013c00 	.word	0x40013c00
 800bd38:	40020000 	.word	0x40020000
 800bd3c:	40020800 	.word	0x40020800
 800bd40:	40020c00 	.word	0x40020c00
 800bd44:	40021000 	.word	0x40021000
 800bd48:	40021400 	.word	0x40021400
 800bd4c:	40021800 	.word	0x40021800
 800bd50:	40023800 	.word	0x40023800
 800bd54:	40021c00 	.word	0x40021c00
 800bd58:	40022000 	.word	0x40022000
 800bd5c:	40022400 	.word	0x40022400

0800bd60 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800bd60:	6903      	ldr	r3, [r0, #16]
 800bd62:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800bd64:	bf14      	ite	ne
 800bd66:	2001      	movne	r0, #1
 800bd68:	2000      	moveq	r0, #0
 800bd6a:	4770      	bx	lr

0800bd6c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800bd6c:	b902      	cbnz	r2, 800bd70 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800bd6e:	0409      	lsls	r1, r1, #16
 800bd70:	6181      	str	r1, [r0, #24]
  }
}
 800bd72:	4770      	bx	lr

0800bd74 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800bd74:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800bd76:	ea01 0203 	and.w	r2, r1, r3
 800bd7a:	ea21 0103 	bic.w	r1, r1, r3
 800bd7e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bd82:	6181      	str	r1, [r0, #24]
}
 800bd84:	4770      	bx	lr
 800bd86:	bf00      	nop

0800bd88 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800bd88:	4770      	bx	lr
 800bd8a:	bf00      	nop

0800bd8c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800bd8c:	4a04      	ldr	r2, [pc, #16]	; (800bda0 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800bd8e:	6951      	ldr	r1, [r2, #20]
 800bd90:	4201      	tst	r1, r0
 800bd92:	d100      	bne.n	800bd96 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800bd94:	4770      	bx	lr
{
 800bd96:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800bd98:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800bd9a:	f7ff fff5 	bl	800bd88 <HAL_GPIO_EXTI_Callback>
}
 800bd9e:	bd08      	pop	{r3, pc}
 800bda0:	40013c00 	.word	0x40013c00

0800bda4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800bda4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bda8:	6804      	ldr	r4, [r0, #0]
{
 800bdaa:	b083      	sub	sp, #12
 800bdac:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdae:	6823      	ldr	r3, [r4, #0]
{
 800bdb0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800bdb4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdb8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bdbc:	4606      	mov	r6, r0
 800bdbe:	468a      	mov	sl, r1
 800bdc0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bdc2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800bdc4:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdc8:	d136      	bne.n	800be38 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bdca:	6965      	ldr	r5, [r4, #20]
 800bdcc:	07e8      	lsls	r0, r5, #31
 800bdce:	d5fc      	bpl.n	800bdca <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bdd0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800bdd4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800bdd6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdda:	d003      	beq.n	800bde4 <I2C_RequestMemoryWrite+0x40>
 800bddc:	e04f      	b.n	800be7e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bdde:	6961      	ldr	r1, [r4, #20]
 800bde0:	054d      	lsls	r5, r1, #21
 800bde2:	d45d      	bmi.n	800bea0 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bde4:	6961      	ldr	r1, [r4, #20]
 800bde6:	078b      	lsls	r3, r1, #30
 800bde8:	d5f9      	bpl.n	800bdde <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bdea:	2300      	movs	r3, #0
 800bdec:	9301      	str	r3, [sp, #4]
 800bdee:	6963      	ldr	r3, [r4, #20]
 800bdf0:	9301      	str	r3, [sp, #4]
 800bdf2:	69a3      	ldr	r3, [r4, #24]
 800bdf4:	9301      	str	r3, [sp, #4]
 800bdf6:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bdf8:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bdfc:	f040 8088 	bne.w	800bf10 <I2C_RequestMemoryWrite+0x16c>
 800be00:	6963      	ldr	r3, [r4, #20]
 800be02:	061a      	lsls	r2, r3, #24
 800be04:	d464      	bmi.n	800bed0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be06:	6963      	ldr	r3, [r4, #20]
 800be08:	055b      	lsls	r3, r3, #21
 800be0a:	d5f9      	bpl.n	800be00 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800be0c:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be0e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800be12:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800be14:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800be16:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800be18:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800be1c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800be20:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800be22:	f043 0304 	orr.w	r3, r3, #4
 800be26:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be28:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800be2a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be2c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800be2e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800be32:	d066      	beq.n	800bf02 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800be34:	2001      	movs	r0, #1
 800be36:	e01f      	b.n	800be78 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800be38:	6963      	ldr	r3, [r4, #20]
 800be3a:	07d9      	lsls	r1, r3, #31
 800be3c:	d4c8      	bmi.n	800bdd0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be3e:	f7ff fbb9 	bl	800b5b4 <HAL_GetTick>
 800be42:	eba0 000b 	sub.w	r0, r0, fp
 800be46:	4581      	cmp	r9, r0
 800be48:	d304      	bcc.n	800be54 <I2C_RequestMemoryWrite+0xb0>
 800be4a:	f1b9 0f00 	cmp.w	r9, #0
 800be4e:	d001      	beq.n	800be54 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be50:	6834      	ldr	r4, [r6, #0]
 800be52:	e7b7      	b.n	800bdc4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be54:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800be56:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800be58:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800be5a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800be5e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be62:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be64:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800be66:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800be6a:	f042 0220 	orr.w	r2, r2, #32
 800be6e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800be70:	680b      	ldr	r3, [r1, #0]
 800be72:	05dc      	lsls	r4, r3, #23
 800be74:	d435      	bmi.n	800bee2 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800be76:	2003      	movs	r0, #3
}
 800be78:	b003      	add	sp, #12
 800be7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be7e:	6963      	ldr	r3, [r4, #20]
 800be80:	0798      	lsls	r0, r3, #30
 800be82:	d4b2      	bmi.n	800bdea <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800be84:	6963      	ldr	r3, [r4, #20]
 800be86:	055a      	lsls	r2, r3, #21
 800be88:	d40a      	bmi.n	800bea0 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800be8a:	f7ff fb93 	bl	800b5b4 <HAL_GetTick>
 800be8e:	eba0 000b 	sub.w	r0, r0, fp
 800be92:	4581      	cmp	r9, r0
 800be94:	d34e      	bcc.n	800bf34 <I2C_RequestMemoryWrite+0x190>
 800be96:	f1b9 0f00 	cmp.w	r9, #0
 800be9a:	d04b      	beq.n	800bf34 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800be9c:	6834      	ldr	r4, [r6, #0]
 800be9e:	e79a      	b.n	800bdd6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bea0:	6823      	ldr	r3, [r4, #0]
 800bea2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800bea6:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800bea8:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800beaa:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800beae:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800beb0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800beb2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800beb4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800beb8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bebc:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800bebe:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bec2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800bec6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800bec8:	6433      	str	r3, [r6, #64]	; 0x40
}
 800beca:	b003      	add	sp, #12
 800becc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800bed0:	f1b8 0f01 	cmp.w	r8, #1
 800bed4:	d109      	bne.n	800beea <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800bed6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800bed8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800beda:	6127      	str	r7, [r4, #16]
}
 800bedc:	b003      	add	sp, #12
 800bede:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800bee2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800bee6:	6433      	str	r3, [r6, #64]	; 0x40
 800bee8:	e7c5      	b.n	800be76 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800beea:	0a3b      	lsrs	r3, r7, #8
 800beec:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800beee:	f1b9 3fff 	cmp.w	r9, #4294967295
 800bef2:	d12e      	bne.n	800bf52 <I2C_RequestMemoryWrite+0x1ae>
 800bef4:	6963      	ldr	r3, [r4, #20]
 800bef6:	0619      	lsls	r1, r3, #24
 800bef8:	d4ed      	bmi.n	800bed6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800befa:	6963      	ldr	r3, [r4, #20]
 800befc:	055a      	lsls	r2, r3, #21
 800befe:	d5f9      	bpl.n	800bef4 <I2C_RequestMemoryWrite+0x150>
 800bf00:	e784      	b.n	800be0c <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf02:	6832      	ldr	r2, [r6, #0]
 800bf04:	6813      	ldr	r3, [r2, #0]
 800bf06:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800bf0a:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800bf0c:	6013      	str	r3, [r2, #0]
 800bf0e:	e7b3      	b.n	800be78 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf10:	6963      	ldr	r3, [r4, #20]
 800bf12:	061d      	lsls	r5, r3, #24
 800bf14:	d4dc      	bmi.n	800bed0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf16:	6963      	ldr	r3, [r4, #20]
 800bf18:	0559      	lsls	r1, r3, #21
 800bf1a:	f53f af77 	bmi.w	800be0c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf1e:	f7ff fb49 	bl	800b5b4 <HAL_GetTick>
 800bf22:	eba0 000b 	sub.w	r0, r0, fp
 800bf26:	4581      	cmp	r9, r0
 800bf28:	d325      	bcc.n	800bf76 <I2C_RequestMemoryWrite+0x1d2>
 800bf2a:	f1b9 0f00 	cmp.w	r9, #0
 800bf2e:	d022      	beq.n	800bf76 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf30:	6834      	ldr	r4, [r6, #0]
 800bf32:	e761      	b.n	800bdf8 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf34:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf36:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800bf38:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800bf3a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800bf3e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf42:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800bf44:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800bf48:	f043 0320 	orr.w	r3, r3, #32
 800bf4c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800bf4e:	2001      	movs	r0, #1
 800bf50:	e792      	b.n	800be78 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf52:	6963      	ldr	r3, [r4, #20]
 800bf54:	061b      	lsls	r3, r3, #24
 800bf56:	d4be      	bmi.n	800bed6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bf58:	6963      	ldr	r3, [r4, #20]
 800bf5a:	0558      	lsls	r0, r3, #21
 800bf5c:	f53f af56 	bmi.w	800be0c <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bf60:	f7ff fb28 	bl	800b5b4 <HAL_GetTick>
 800bf64:	eba0 000b 	sub.w	r0, r0, fp
 800bf68:	4581      	cmp	r9, r0
 800bf6a:	d304      	bcc.n	800bf76 <I2C_RequestMemoryWrite+0x1d2>
 800bf6c:	f1b9 0f00 	cmp.w	r9, #0
 800bf70:	d001      	beq.n	800bf76 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bf72:	6834      	ldr	r4, [r6, #0]
 800bf74:	e7bb      	b.n	800beee <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf76:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf78:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800bf7a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800bf7c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800bf80:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800bf84:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800bf86:	4313      	orrs	r3, r2
 800bf88:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800bf8a:	e74d      	b.n	800be28 <I2C_RequestMemoryWrite+0x84>

0800bf8c <I2C_RequestMemoryRead>:
{
 800bf8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bf90:	6804      	ldr	r4, [r0, #0]
{
 800bf92:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800bf94:	6823      	ldr	r3, [r4, #0]
 800bf96:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800bf9a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bf9c:	6823      	ldr	r3, [r4, #0]
{
 800bf9e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfa0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800bfa4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800bfa8:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800bfac:	6023      	str	r3, [r4, #0]
{
 800bfae:	4606      	mov	r6, r0
 800bfb0:	468b      	mov	fp, r1
 800bfb2:	4617      	mov	r7, r2
 800bfb4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfb8:	d13a      	bne.n	800c030 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800bfba:	6965      	ldr	r5, [r4, #20]
 800bfbc:	07eb      	lsls	r3, r5, #31
 800bfbe:	d5fc      	bpl.n	800bfba <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800bfc0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800bfc4:	6123      	str	r3, [r4, #16]
 800bfc6:	fa5f fb8b 	uxtb.w	fp, fp
 800bfca:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bfce:	d003      	beq.n	800bfd8 <I2C_RequestMemoryRead+0x4c>
 800bfd0:	e069      	b.n	800c0a6 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bfd2:	6965      	ldr	r5, [r4, #20]
 800bfd4:	056a      	lsls	r2, r5, #21
 800bfd6:	d44e      	bmi.n	800c076 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800bfd8:	6965      	ldr	r5, [r4, #20]
 800bfda:	07a9      	lsls	r1, r5, #30
 800bfdc:	d5f9      	bpl.n	800bfd2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800bfde:	2300      	movs	r3, #0
 800bfe0:	9301      	str	r3, [sp, #4]
 800bfe2:	6963      	ldr	r3, [r4, #20]
 800bfe4:	9301      	str	r3, [sp, #4]
 800bfe6:	69a3      	ldr	r3, [r4, #24]
 800bfe8:	9301      	str	r3, [sp, #4]
 800bfea:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800bfec:	f1ba 3fff 	cmp.w	sl, #4294967295
 800bff0:	f040 80bd 	bne.w	800c16e <I2C_RequestMemoryRead+0x1e2>
 800bff4:	6963      	ldr	r3, [r4, #20]
 800bff6:	0618      	lsls	r0, r3, #24
 800bff8:	d468      	bmi.n	800c0cc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800bffa:	6963      	ldr	r3, [r4, #20]
 800bffc:	0559      	lsls	r1, r3, #21
 800bffe:	d5f9      	bpl.n	800bff4 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c000:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c002:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c006:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c008:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c00a:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c00c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c010:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c014:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c016:	f043 0304 	orr.w	r3, r3, #4
 800c01a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c01c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c01e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c020:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c022:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c026:	d070      	beq.n	800c10a <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800c028:	2001      	movs	r0, #1
}
 800c02a:	b003      	add	sp, #12
 800c02c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c030:	6963      	ldr	r3, [r4, #20]
 800c032:	07dd      	lsls	r5, r3, #31
 800c034:	d4c4      	bmi.n	800bfc0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c036:	f7ff fabd 	bl	800b5b4 <HAL_GetTick>
 800c03a:	eba0 0009 	sub.w	r0, r0, r9
 800c03e:	4582      	cmp	sl, r0
 800c040:	d304      	bcc.n	800c04c <I2C_RequestMemoryRead+0xc0>
 800c042:	f1ba 0f00 	cmp.w	sl, #0
 800c046:	d001      	beq.n	800c04c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c048:	6834      	ldr	r4, [r6, #0]
 800c04a:	e7b3      	b.n	800bfb4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c04c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c04e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c050:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c052:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c056:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c05a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c05c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800c05e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c062:	f042 0220 	orr.w	r2, r2, #32
 800c066:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c068:	680b      	ldr	r3, [r1, #0]
 800c06a:	05dc      	lsls	r4, r3, #23
 800c06c:	d43d      	bmi.n	800c0ea <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800c06e:	2003      	movs	r0, #3
}
 800c070:	b003      	add	sp, #12
 800c072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c076:	6823      	ldr	r3, [r4, #0]
 800c078:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c07c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c07e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c080:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800c084:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c086:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c088:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c08a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c08e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c092:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c094:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c098:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800c09c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c09e:	6433      	str	r3, [r6, #64]	; 0x40
}
 800c0a0:	b003      	add	sp, #12
 800c0a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0a6:	6963      	ldr	r3, [r4, #20]
 800c0a8:	079b      	lsls	r3, r3, #30
 800c0aa:	d498      	bmi.n	800bfde <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0ac:	6963      	ldr	r3, [r4, #20]
 800c0ae:	0558      	lsls	r0, r3, #21
 800c0b0:	d4e1      	bmi.n	800c076 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c0b2:	f7ff fa7f 	bl	800b5b4 <HAL_GetTick>
 800c0b6:	eba0 0009 	sub.w	r0, r0, r9
 800c0ba:	4582      	cmp	sl, r0
 800c0bc:	f0c0 808f 	bcc.w	800c1de <I2C_RequestMemoryRead+0x252>
 800c0c0:	f1ba 0f00 	cmp.w	sl, #0
 800c0c4:	f000 808b 	beq.w	800c1de <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c0c8:	6834      	ldr	r4, [r6, #0]
 800c0ca:	e77e      	b.n	800bfca <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800c0cc:	f1b8 0f01 	cmp.w	r8, #1
 800c0d0:	d10f      	bne.n	800c0f2 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800c0d2:	b2ff      	uxtb	r7, r7
 800c0d4:	6127      	str	r7, [r4, #16]
 800c0d6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c0da:	d16e      	bne.n	800c1ba <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0dc:	6963      	ldr	r3, [r4, #20]
 800c0de:	061b      	lsls	r3, r3, #24
 800c0e0:	d41a      	bmi.n	800c118 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c0e2:	6963      	ldr	r3, [r4, #20]
 800c0e4:	055f      	lsls	r7, r3, #21
 800c0e6:	d5f9      	bpl.n	800c0dc <I2C_RequestMemoryRead+0x150>
 800c0e8:	e78a      	b.n	800c000 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800c0ea:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c0ee:	6433      	str	r3, [r6, #64]	; 0x40
 800c0f0:	e7bd      	b.n	800c06e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800c0f2:	0a3b      	lsrs	r3, r7, #8
 800c0f4:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c0f6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c0fa:	d17e      	bne.n	800c1fa <I2C_RequestMemoryRead+0x26e>
 800c0fc:	6963      	ldr	r3, [r4, #20]
 800c0fe:	061d      	lsls	r5, r3, #24
 800c100:	d4e7      	bmi.n	800c0d2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c102:	6963      	ldr	r3, [r4, #20]
 800c104:	0558      	lsls	r0, r3, #21
 800c106:	d5f9      	bpl.n	800c0fc <I2C_RequestMemoryRead+0x170>
 800c108:	e77a      	b.n	800c000 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c10a:	6832      	ldr	r2, [r6, #0]
 800c10c:	6813      	ldr	r3, [r2, #0]
 800c10e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800c112:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c114:	6013      	str	r3, [r2, #0]
 800c116:	e7ab      	b.n	800c070 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800c118:	6823      	ldr	r3, [r4, #0]
 800c11a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c11e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c120:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c124:	d113      	bne.n	800c14e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c126:	6963      	ldr	r3, [r4, #20]
 800c128:	07d8      	lsls	r0, r3, #31
 800c12a:	d5fc      	bpl.n	800c126 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800c12c:	f04b 0301 	orr.w	r3, fp, #1
 800c130:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800c132:	f1ba 3fff 	cmp.w	sl, #4294967295
 800c136:	d003      	beq.n	800c140 <I2C_RequestMemoryRead+0x1b4>
 800c138:	e02b      	b.n	800c192 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c13a:	6963      	ldr	r3, [r4, #20]
 800c13c:	055b      	lsls	r3, r3, #21
 800c13e:	d49a      	bmi.n	800c076 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c140:	6963      	ldr	r3, [r4, #20]
 800c142:	43db      	mvns	r3, r3
 800c144:	f013 0302 	ands.w	r3, r3, #2
 800c148:	d1f7      	bne.n	800c13a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800c14a:	4618      	mov	r0, r3
 800c14c:	e790      	b.n	800c070 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c14e:	6963      	ldr	r3, [r4, #20]
 800c150:	07d9      	lsls	r1, r3, #31
 800c152:	d4eb      	bmi.n	800c12c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c154:	f7ff fa2e 	bl	800b5b4 <HAL_GetTick>
 800c158:	eba0 0009 	sub.w	r0, r0, r9
 800c15c:	4582      	cmp	sl, r0
 800c15e:	f4ff af75 	bcc.w	800c04c <I2C_RequestMemoryRead+0xc0>
 800c162:	f1ba 0f00 	cmp.w	sl, #0
 800c166:	f43f af71 	beq.w	800c04c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800c16a:	6834      	ldr	r4, [r6, #0]
 800c16c:	e7d8      	b.n	800c120 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c16e:	6963      	ldr	r3, [r4, #20]
 800c170:	061a      	lsls	r2, r3, #24
 800c172:	d4ab      	bmi.n	800c0cc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c174:	6963      	ldr	r3, [r4, #20]
 800c176:	055d      	lsls	r5, r3, #21
 800c178:	f53f af42 	bmi.w	800c000 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c17c:	f7ff fa1a 	bl	800b5b4 <HAL_GetTick>
 800c180:	eba0 0009 	sub.w	r0, r0, r9
 800c184:	4582      	cmp	sl, r0
 800c186:	d34b      	bcc.n	800c220 <I2C_RequestMemoryRead+0x294>
 800c188:	f1ba 0f00 	cmp.w	sl, #0
 800c18c:	d048      	beq.n	800c220 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c18e:	6834      	ldr	r4, [r6, #0]
 800c190:	e72c      	b.n	800bfec <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c192:	6963      	ldr	r3, [r4, #20]
 800c194:	43db      	mvns	r3, r3
 800c196:	f013 0302 	ands.w	r3, r3, #2
 800c19a:	d0d6      	beq.n	800c14a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c19c:	6963      	ldr	r3, [r4, #20]
 800c19e:	055a      	lsls	r2, r3, #21
 800c1a0:	f53f af69 	bmi.w	800c076 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1a4:	f7ff fa06 	bl	800b5b4 <HAL_GetTick>
 800c1a8:	eba0 0009 	sub.w	r0, r0, r9
 800c1ac:	4582      	cmp	sl, r0
 800c1ae:	d316      	bcc.n	800c1de <I2C_RequestMemoryRead+0x252>
 800c1b0:	f1ba 0f00 	cmp.w	sl, #0
 800c1b4:	d013      	beq.n	800c1de <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800c1b6:	6834      	ldr	r4, [r6, #0]
 800c1b8:	e7bb      	b.n	800c132 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1ba:	6963      	ldr	r3, [r4, #20]
 800c1bc:	061d      	lsls	r5, r3, #24
 800c1be:	d4ab      	bmi.n	800c118 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c1c0:	6963      	ldr	r3, [r4, #20]
 800c1c2:	055a      	lsls	r2, r3, #21
 800c1c4:	f53f af1c 	bmi.w	800c000 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c1c8:	f7ff f9f4 	bl	800b5b4 <HAL_GetTick>
 800c1cc:	eba0 0009 	sub.w	r0, r0, r9
 800c1d0:	4582      	cmp	sl, r0
 800c1d2:	d325      	bcc.n	800c220 <I2C_RequestMemoryRead+0x294>
 800c1d4:	f1ba 0f00 	cmp.w	sl, #0
 800c1d8:	d022      	beq.n	800c220 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1da:	6834      	ldr	r4, [r6, #0]
 800c1dc:	e77b      	b.n	800c0d6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1de:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1e0:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800c1e2:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800c1e4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c1e8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c1ec:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c1ee:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800c1f2:	f043 0320 	orr.w	r3, r3, #32
 800c1f6:	6433      	str	r3, [r6, #64]	; 0x40
 800c1f8:	e716      	b.n	800c028 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c1fa:	6963      	ldr	r3, [r4, #20]
 800c1fc:	0619      	lsls	r1, r3, #24
 800c1fe:	f53f af68 	bmi.w	800c0d2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c202:	6963      	ldr	r3, [r4, #20]
 800c204:	055b      	lsls	r3, r3, #21
 800c206:	f53f aefb 	bmi.w	800c000 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c20a:	f7ff f9d3 	bl	800b5b4 <HAL_GetTick>
 800c20e:	eba0 0009 	sub.w	r0, r0, r9
 800c212:	4582      	cmp	sl, r0
 800c214:	d304      	bcc.n	800c220 <I2C_RequestMemoryRead+0x294>
 800c216:	f1ba 0f00 	cmp.w	sl, #0
 800c21a:	d001      	beq.n	800c220 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c21c:	6834      	ldr	r4, [r6, #0]
 800c21e:	e76a      	b.n	800c0f6 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c220:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c222:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c224:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c226:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c22a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c22e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800c230:	4313      	orrs	r3, r2
 800c232:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800c234:	e6f2      	b.n	800c01c <I2C_RequestMemoryRead+0x90>
 800c236:	bf00      	nop

0800c238 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800c238:	2800      	cmp	r0, #0
 800c23a:	f000 80b9 	beq.w	800c3b0 <HAL_I2C_Init+0x178>
{
 800c23e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800c240:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c244:	4604      	mov	r4, r0
 800c246:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c24a:	2b00      	cmp	r3, #0
 800c24c:	f000 8098 	beq.w	800c380 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800c250:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800c252:	2224      	movs	r2, #36	; 0x24
 800c254:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800c258:	681a      	ldr	r2, [r3, #0]
 800c25a:	f022 0201 	bic.w	r2, r2, #1
 800c25e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800c260:	681a      	ldr	r2, [r3, #0]
 800c262:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c266:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800c268:	681a      	ldr	r2, [r3, #0]
 800c26a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800c26e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800c270:	f001 fe70 	bl	800df54 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c274:	6865      	ldr	r5, [r4, #4]
 800c276:	4b4f      	ldr	r3, [pc, #316]	; (800c3b4 <HAL_I2C_Init+0x17c>)
 800c278:	429d      	cmp	r5, r3
 800c27a:	d84f      	bhi.n	800c31c <HAL_I2C_Init+0xe4>
 800c27c:	4b4e      	ldr	r3, [pc, #312]	; (800c3b8 <HAL_I2C_Init+0x180>)
 800c27e:	4298      	cmp	r0, r3
 800c280:	d97c      	bls.n	800c37c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800c282:	4b4e      	ldr	r3, [pc, #312]	; (800c3bc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c284:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800c286:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c28a:	1e43      	subs	r3, r0, #1
 800c28c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c290:	6822      	ldr	r2, [r4, #0]
 800c292:	6851      	ldr	r1, [r2, #4]
 800c294:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c298:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800c29c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c29e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800c2a0:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c2a4:	f10c 0c01 	add.w	ip, ip, #1
 800c2a8:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c2ac:	ea41 010c 	orr.w	r1, r1, ip
 800c2b0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c2b2:	69d1      	ldr	r1, [r2, #28]
 800c2b4:	f640 70fc 	movw	r0, #4092	; 0xffc
 800c2b8:	3301      	adds	r3, #1
 800c2ba:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c2be:	4203      	tst	r3, r0
 800c2c0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2c4:	d161      	bne.n	800c38a <HAL_I2C_Init+0x152>
 800c2c6:	2304      	movs	r3, #4
 800c2c8:	430b      	orrs	r3, r1
 800c2ca:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800c2cc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800c2d0:	6811      	ldr	r1, [r2, #0]
 800c2d2:	4303      	orrs	r3, r0
 800c2d4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800c2d8:	430b      	orrs	r3, r1
 800c2da:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800c2dc:	6891      	ldr	r1, [r2, #8]
 800c2de:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800c2e2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800c2e6:	4303      	orrs	r3, r0
 800c2e8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2ec:	430b      	orrs	r3, r1
 800c2ee:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800c2f0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800c2f4:	68d1      	ldr	r1, [r2, #12]
 800c2f6:	4303      	orrs	r3, r0
 800c2f8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c2fc:	430b      	orrs	r3, r1
 800c2fe:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800c300:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c302:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800c304:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800c308:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800c30a:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c30c:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800c30e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800c312:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800c314:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800c318:	4618      	mov	r0, r3
}
 800c31a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800c31c:	4b28      	ldr	r3, [pc, #160]	; (800c3c0 <HAL_I2C_Init+0x188>)
 800c31e:	4298      	cmp	r0, r3
 800c320:	d92c      	bls.n	800c37c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c322:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800c324:	4b25      	ldr	r3, [pc, #148]	; (800c3bc <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c326:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c328:	4e26      	ldr	r6, [pc, #152]	; (800c3c4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800c32a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800c32e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c332:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800c336:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800c338:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800c33c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800c340:	fb01 f303 	mul.w	r3, r1, r3
 800c344:	fba6 6303 	umull	r6, r3, r6, r3
 800c348:	6a11      	ldr	r1, [r2, #32]
 800c34a:	099b      	lsrs	r3, r3, #6
 800c34c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800c350:	3301      	adds	r3, #1
 800c352:	430b      	orrs	r3, r1
 800c354:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c356:	69d1      	ldr	r1, [r2, #28]
 800c358:	68a3      	ldr	r3, [r4, #8]
 800c35a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800c35e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800c362:	b9ab      	cbnz	r3, 800c390 <HAL_I2C_Init+0x158>
 800c364:	1e43      	subs	r3, r0, #1
 800c366:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c36a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c36e:	3301      	adds	r3, #1
 800c370:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c374:	b1d3      	cbz	r3, 800c3ac <HAL_I2C_Init+0x174>
 800c376:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c37a:	e7a5      	b.n	800c2c8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c37c:	2001      	movs	r0, #1
}
 800c37e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800c380:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800c384:	f7f5 ff58 	bl	8002238 <HAL_I2C_MspInit>
 800c388:	e762      	b.n	800c250 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800c38a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c38e:	e79b      	b.n	800c2c8 <HAL_I2C_Init+0x90>
 800c390:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c394:	1e43      	subs	r3, r0, #1
 800c396:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800c39a:	fbb3 f3f5 	udiv	r3, r3, r5
 800c39e:	3301      	adds	r3, #1
 800c3a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c3a4:	b113      	cbz	r3, 800c3ac <HAL_I2C_Init+0x174>
 800c3a6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800c3aa:	e78d      	b.n	800c2c8 <HAL_I2C_Init+0x90>
 800c3ac:	2301      	movs	r3, #1
 800c3ae:	e78b      	b.n	800c2c8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800c3b0:	2001      	movs	r0, #1
}
 800c3b2:	4770      	bx	lr
 800c3b4:	000186a0 	.word	0x000186a0
 800c3b8:	001e847f 	.word	0x001e847f
 800c3bc:	431bde83 	.word	0x431bde83
 800c3c0:	003d08ff 	.word	0x003d08ff
 800c3c4:	10624dd3 	.word	0x10624dd3

0800c3c8 <HAL_I2C_Mem_Write>:
{
 800c3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3cc:	4604      	mov	r4, r0
 800c3ce:	b083      	sub	sp, #12
 800c3d0:	4699      	mov	r9, r3
 800c3d2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800c3d6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800c3d8:	460f      	mov	r7, r1
 800c3da:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c3dc:	f7ff f8ea 	bl	800b5b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c3e0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c3e4:	2b20      	cmp	r3, #32
 800c3e6:	d004      	beq.n	800c3f2 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800c3e8:	2702      	movs	r7, #2
}
 800c3ea:	4638      	mov	r0, r7
 800c3ec:	b003      	add	sp, #12
 800c3ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3f2:	4605      	mov	r5, r0
 800c3f4:	e005      	b.n	800c402 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c3f6:	f7ff f8dd 	bl	800b5b4 <HAL_GetTick>
 800c3fa:	1b40      	subs	r0, r0, r5
 800c3fc:	2819      	cmp	r0, #25
 800c3fe:	f200 80a8 	bhi.w	800c552 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c402:	6820      	ldr	r0, [r4, #0]
 800c404:	6983      	ldr	r3, [r0, #24]
 800c406:	ea6f 0c03 	mvn.w	ip, r3
 800c40a:	f01c 0b02 	ands.w	fp, ip, #2
 800c40e:	d0f2      	beq.n	800c3f6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800c410:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c414:	2b01      	cmp	r3, #1
 800c416:	d0e7      	beq.n	800c3e8 <HAL_I2C_Mem_Write+0x20>
 800c418:	2301      	movs	r3, #1
 800c41a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c41e:	6803      	ldr	r3, [r0, #0]
 800c420:	07db      	lsls	r3, r3, #31
 800c422:	d572      	bpl.n	800c50a <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c424:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c426:	6807      	ldr	r7, [r0, #0]
 800c428:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800c42c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800c42e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c430:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c432:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c434:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800c438:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c43c:	2040      	movs	r0, #64	; 0x40
 800c43e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c442:	2000      	movs	r0, #0
 800c444:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c446:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c44a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c44c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c44e:	4856      	ldr	r0, [pc, #344]	; (800c5a8 <HAL_I2C_Mem_Write+0x1e0>)
 800c450:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c452:	464b      	mov	r3, r9
 800c454:	4642      	mov	r2, r8
 800c456:	4620      	mov	r0, r4
 800c458:	f7ff fca4 	bl	800bda4 <I2C_RequestMemoryWrite>
 800c45c:	4607      	mov	r7, r0
 800c45e:	bb00      	cbnz	r0, 800c4a2 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800c460:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c462:	2b00      	cmp	r3, #0
 800c464:	f000 809e 	beq.w	800c5a4 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c468:	6823      	ldr	r3, [r4, #0]
 800c46a:	1c72      	adds	r2, r6, #1
 800c46c:	d159      	bne.n	800c522 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c46e:	695a      	ldr	r2, [r3, #20]
 800c470:	0610      	lsls	r0, r2, #24
 800c472:	d41b      	bmi.n	800c4ac <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c474:	695a      	ldr	r2, [r3, #20]
 800c476:	0551      	lsls	r1, r2, #21
 800c478:	d5f9      	bpl.n	800c46e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c47a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c47c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800c480:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800c482:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800c484:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800c486:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c48a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800c48e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c490:	f043 0304 	orr.w	r3, r3, #4
 800c494:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c496:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800c498:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c49a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800c49c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800c4a0:	d038      	beq.n	800c514 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800c4a2:	2701      	movs	r7, #1
}
 800c4a4:	4638      	mov	r0, r7
 800c4a6:	b003      	add	sp, #12
 800c4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4ac:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800c4b0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4b4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800c4b6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4ba:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c4be:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800c4c0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c4c2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800c4c4:	3a01      	subs	r2, #1
 800c4c6:	b292      	uxth	r2, r2
 800c4c8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800c4ca:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4cc:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800c4ce:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800c4d0:	0740      	lsls	r0, r0, #29
 800c4d2:	d517      	bpl.n	800c504 <HAL_I2C_Mem_Write+0x13c>
 800c4d4:	b942      	cbnz	r2, 800c4e8 <HAL_I2C_Mem_Write+0x120>
 800c4d6:	1c72      	adds	r2, r6, #1
 800c4d8:	d156      	bne.n	800c588 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c4da:	695a      	ldr	r2, [r3, #20]
 800c4dc:	0750      	lsls	r0, r2, #29
 800c4de:	d446      	bmi.n	800c56e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c4e0:	695a      	ldr	r2, [r3, #20]
 800c4e2:	0551      	lsls	r1, r2, #21
 800c4e4:	d5f9      	bpl.n	800c4da <HAL_I2C_Mem_Write+0x112>
 800c4e6:	e7c8      	b.n	800c47a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c4e8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800c4ec:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800c4ee:	f10c 0102 	add.w	r1, ip, #2
 800c4f2:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c4f4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800c4f6:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800c4fa:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800c4fc:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800c4fe:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800c500:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800c502:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c504:	2a00      	cmp	r2, #0
 800c506:	d1b0      	bne.n	800c46a <HAL_I2C_Mem_Write+0xa2>
 800c508:	e7e5      	b.n	800c4d6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800c50a:	6803      	ldr	r3, [r0, #0]
 800c50c:	f043 0301 	orr.w	r3, r3, #1
 800c510:	6003      	str	r3, [r0, #0]
 800c512:	e787      	b.n	800c424 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c514:	6822      	ldr	r2, [r4, #0]
 800c516:	6813      	ldr	r3, [r2, #0]
 800c518:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800c51c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c51e:	6013      	str	r3, [r2, #0]
 800c520:	e763      	b.n	800c3ea <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800c522:	695a      	ldr	r2, [r3, #20]
 800c524:	0612      	lsls	r2, r2, #24
 800c526:	d4c1      	bmi.n	800c4ac <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c528:	695a      	ldr	r2, [r3, #20]
 800c52a:	0551      	lsls	r1, r2, #21
 800c52c:	d4a5      	bmi.n	800c47a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c52e:	f7ff f841 	bl	800b5b4 <HAL_GetTick>
 800c532:	1b40      	subs	r0, r0, r5
 800c534:	4286      	cmp	r6, r0
 800c536:	d301      	bcc.n	800c53c <HAL_I2C_Mem_Write+0x174>
 800c538:	2e00      	cmp	r6, #0
 800c53a:	d195      	bne.n	800c468 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c53c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c53e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c540:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c542:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c546:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c54a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c54c:	4313      	orrs	r3, r2
 800c54e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800c550:	e7a1      	b.n	800c496 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c552:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c554:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c558:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c55c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c560:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c562:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c566:	f043 0320 	orr.w	r3, r3, #32
 800c56a:	6423      	str	r3, [r4, #64]	; 0x40
 800c56c:	e73c      	b.n	800c3e8 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c56e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c570:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c572:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800c576:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c578:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800c57a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c57e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c582:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800c586:	e730      	b.n	800c3ea <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c588:	695a      	ldr	r2, [r3, #20]
 800c58a:	0752      	lsls	r2, r2, #29
 800c58c:	d4ef      	bmi.n	800c56e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800c58e:	695a      	ldr	r2, [r3, #20]
 800c590:	0551      	lsls	r1, r2, #21
 800c592:	f53f af72 	bmi.w	800c47a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c596:	f7ff f80d 	bl	800b5b4 <HAL_GetTick>
 800c59a:	1b40      	subs	r0, r0, r5
 800c59c:	4286      	cmp	r6, r0
 800c59e:	d3cd      	bcc.n	800c53c <HAL_I2C_Mem_Write+0x174>
 800c5a0:	2e00      	cmp	r6, #0
 800c5a2:	d0cb      	beq.n	800c53c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800c5a4:	6823      	ldr	r3, [r4, #0]
 800c5a6:	e796      	b.n	800c4d6 <HAL_I2C_Mem_Write+0x10e>
 800c5a8:	ffff0000 	.word	0xffff0000

0800c5ac <HAL_I2C_Mem_Read>:
{
 800c5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5b0:	4604      	mov	r4, r0
 800c5b2:	b087      	sub	sp, #28
 800c5b4:	4699      	mov	r9, r3
 800c5b6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800c5ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800c5bc:	460f      	mov	r7, r1
 800c5be:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800c5c0:	f7fe fff8 	bl	800b5b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800c5c4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800c5c8:	2b20      	cmp	r3, #32
 800c5ca:	d004      	beq.n	800c5d6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800c5cc:	2702      	movs	r7, #2
}
 800c5ce:	4638      	mov	r0, r7
 800c5d0:	b007      	add	sp, #28
 800c5d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5d6:	4606      	mov	r6, r0
 800c5d8:	e005      	b.n	800c5e6 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c5da:	f7fe ffeb 	bl	800b5b4 <HAL_GetTick>
 800c5de:	1b80      	subs	r0, r0, r6
 800c5e0:	2819      	cmp	r0, #25
 800c5e2:	f200 80d2 	bhi.w	800c78a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c5e6:	f8d4 c000 	ldr.w	ip, [r4]
 800c5ea:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800c5ee:	43c0      	mvns	r0, r0
 800c5f0:	f010 0b02 	ands.w	fp, r0, #2
 800c5f4:	d0f1      	beq.n	800c5da <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800c5f6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800c5fa:	2b01      	cmp	r3, #1
 800c5fc:	d0e6      	beq.n	800c5cc <HAL_I2C_Mem_Read+0x20>
 800c5fe:	2301      	movs	r3, #1
 800c600:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800c604:	f8dc 3000 	ldr.w	r3, [ip]
 800c608:	07d9      	lsls	r1, r3, #31
 800c60a:	d537      	bpl.n	800c67c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c60c:	f8dc 0000 	ldr.w	r0, [ip]
 800c610:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800c614:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800c618:	9810      	ldr	r0, [sp, #64]	; 0x40
 800c61a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c61c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c61e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800c622:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800c626:	2040      	movs	r0, #64	; 0x40
 800c628:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800c62c:	2000      	movs	r0, #0
 800c62e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800c630:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800c634:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800c636:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800c638:	4893      	ldr	r0, [pc, #588]	; (800c888 <HAL_I2C_Mem_Read+0x2dc>)
 800c63a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800c63c:	4639      	mov	r1, r7
 800c63e:	464b      	mov	r3, r9
 800c640:	4642      	mov	r2, r8
 800c642:	4620      	mov	r0, r4
 800c644:	f7ff fca2 	bl	800bf8c <I2C_RequestMemoryRead>
 800c648:	4607      	mov	r7, r0
 800c64a:	2800      	cmp	r0, #0
 800c64c:	f040 80ab 	bne.w	800c7a6 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800c650:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800c652:	b9d2      	cbnz	r2, 800c68a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c654:	6823      	ldr	r3, [r4, #0]
 800c656:	9002      	str	r0, [sp, #8]
 800c658:	695a      	ldr	r2, [r3, #20]
 800c65a:	9202      	str	r2, [sp, #8]
 800c65c:	699a      	ldr	r2, [r3, #24]
 800c65e:	9202      	str	r2, [sp, #8]
 800c660:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c662:	681a      	ldr	r2, [r3, #0]
 800c664:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c668:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c66a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800c66c:	2220      	movs	r2, #32
 800c66e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800c672:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800c676:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800c67a:	e7a8      	b.n	800c5ce <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800c67c:	f8dc 3000 	ldr.w	r3, [ip]
 800c680:	f043 0301 	orr.w	r3, r3, #1
 800c684:	f8cc 3000 	str.w	r3, [ip]
 800c688:	e7c0      	b.n	800c60c <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800c68a:	2a01      	cmp	r2, #1
 800c68c:	f000 812c 	beq.w	800c8e8 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800c690:	2a02      	cmp	r2, #2
 800c692:	f000 80bd 	beq.w	800c810 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c696:	6823      	ldr	r3, [r4, #0]
 800c698:	9005      	str	r0, [sp, #20]
 800c69a:	6959      	ldr	r1, [r3, #20]
 800c69c:	9105      	str	r1, [sp, #20]
 800c69e:	6999      	ldr	r1, [r3, #24]
 800c6a0:	9105      	str	r1, [sp, #20]
 800c6a2:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800c6a4:	2a03      	cmp	r2, #3
 800c6a6:	d849      	bhi.n	800c73c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800c6a8:	2a01      	cmp	r2, #1
 800c6aa:	f000 80eb 	beq.w	800c884 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800c6ae:	2a02      	cmp	r2, #2
 800c6b0:	f000 8089 	beq.w	800c7c6 <HAL_I2C_Mem_Read+0x21a>
 800c6b4:	1c69      	adds	r1, r5, #1
 800c6b6:	f040 80bb 	bne.w	800c830 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6ba:	695a      	ldr	r2, [r3, #20]
 800c6bc:	0752      	lsls	r2, r2, #29
 800c6be:	d5fc      	bpl.n	800c6ba <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6c0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6c2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c6c4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800c6c8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6ca:	691b      	ldr	r3, [r3, #16]
 800c6cc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c6ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c6d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6d2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6d4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c6d6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c6d8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c6da:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c6dc:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c6de:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c6e0:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800c6e2:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c6e4:	6822      	ldr	r2, [r4, #0]
 800c6e6:	f040 80af 	bne.w	800c848 <HAL_I2C_Mem_Read+0x29c>
 800c6ea:	6953      	ldr	r3, [r2, #20]
 800c6ec:	075b      	lsls	r3, r3, #29
 800c6ee:	d5fc      	bpl.n	800c6ea <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6f0:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6f2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c6f4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c6f8:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c6fa:	6913      	ldr	r3, [r2, #16]
 800c6fc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800c6fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c700:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c702:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c704:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800c706:	3b01      	subs	r3, #1
 800c708:	b29b      	uxth	r3, r3
 800c70a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c70c:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800c70e:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800c710:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800c714:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c716:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c71a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800c71c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c71e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c720:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c722:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c724:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800c726:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800c728:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c72a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800c72c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c72e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c730:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800c732:	2a00      	cmp	r2, #0
 800c734:	d099      	beq.n	800c66a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800c736:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c738:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800c73a:	d9b5      	bls.n	800c6a8 <HAL_I2C_Mem_Read+0xfc>
 800c73c:	b95d      	cbnz	r5, 800c756 <HAL_I2C_Mem_Read+0x1aa>
 800c73e:	e0c5      	b.n	800c8cc <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c740:	695a      	ldr	r2, [r3, #20]
 800c742:	06d0      	lsls	r0, r2, #27
 800c744:	f100 80b2 	bmi.w	800c8ac <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c748:	f7fe ff34 	bl	800b5b4 <HAL_GetTick>
 800c74c:	1b80      	subs	r0, r0, r6
 800c74e:	4285      	cmp	r5, r0
 800c750:	f0c0 8086 	bcc.w	800c860 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c754:	6823      	ldr	r3, [r4, #0]
 800c756:	695a      	ldr	r2, [r3, #20]
 800c758:	0652      	lsls	r2, r2, #25
 800c75a:	d5f1      	bpl.n	800c740 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c75c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c75e:	691b      	ldr	r3, [r3, #16]
 800c760:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800c762:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c764:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800c766:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c768:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800c76a:	3b01      	subs	r3, #1
 800c76c:	b29b      	uxth	r3, r3
 800c76e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c770:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800c772:	3a01      	subs	r2, #1
 800c774:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800c776:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c77a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800c77c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800c77e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800c782:	d5d6      	bpl.n	800c732 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c784:	6903      	ldr	r3, [r0, #16]
 800c786:	704b      	strb	r3, [r1, #1]
 800c788:	e036      	b.n	800c7f8 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800c78a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c78c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c790:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c794:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c798:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c79a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c79e:	f043 0320 	orr.w	r3, r3, #32
 800c7a2:	6423      	str	r3, [r4, #64]	; 0x40
 800c7a4:	e712      	b.n	800c5cc <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800c7a6:	2701      	movs	r7, #1
}
 800c7a8:	4638      	mov	r0, r7
 800c7aa:	b007      	add	sp, #28
 800c7ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7b0:	695a      	ldr	r2, [r3, #20]
 800c7b2:	0750      	lsls	r0, r2, #29
 800c7b4:	d40c      	bmi.n	800c7d0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c7b6:	f7fe fefd 	bl	800b5b4 <HAL_GetTick>
 800c7ba:	1b80      	subs	r0, r0, r6
 800c7bc:	4285      	cmp	r5, r0
 800c7be:	d34f      	bcc.n	800c860 <HAL_I2C_Mem_Read+0x2b4>
 800c7c0:	2d00      	cmp	r5, #0
 800c7c2:	d04d      	beq.n	800c860 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c7c4:	6823      	ldr	r3, [r4, #0]
 800c7c6:	1c69      	adds	r1, r5, #1
 800c7c8:	d1f2      	bne.n	800c7b0 <HAL_I2C_Mem_Read+0x204>
 800c7ca:	695a      	ldr	r2, [r3, #20]
 800c7cc:	0752      	lsls	r2, r2, #29
 800c7ce:	d5fc      	bpl.n	800c7ca <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c7d0:	681a      	ldr	r2, [r3, #0]
 800c7d2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800c7d6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7d8:	691a      	ldr	r2, [r3, #16]
 800c7da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c7dc:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800c7de:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800c7e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c7e2:	3b01      	subs	r3, #1
 800c7e4:	b29b      	uxth	r3, r3
 800c7e6:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c7e8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800c7ea:	3b01      	subs	r3, #1
 800c7ec:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7ee:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800c7f0:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7f2:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800c7f4:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c7f6:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800c7f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800c7fa:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800c7fc:	3301      	adds	r3, #1
 800c7fe:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800c800:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800c802:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800c804:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800c806:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800c808:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800c80a:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800c80c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800c80e:	e790      	b.n	800c732 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c810:	6823      	ldr	r3, [r4, #0]
 800c812:	6819      	ldr	r1, [r3, #0]
 800c814:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c818:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800c81a:	6819      	ldr	r1, [r3, #0]
 800c81c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800c820:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c822:	9004      	str	r0, [sp, #16]
 800c824:	6959      	ldr	r1, [r3, #20]
 800c826:	9104      	str	r1, [sp, #16]
 800c828:	6999      	ldr	r1, [r3, #24]
 800c82a:	9104      	str	r1, [sp, #16]
 800c82c:	9904      	ldr	r1, [sp, #16]
 800c82e:	e739      	b.n	800c6a4 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c830:	695a      	ldr	r2, [r3, #20]
 800c832:	0750      	lsls	r0, r2, #29
 800c834:	f53f af44 	bmi.w	800c6c0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c838:	f7fe febc 	bl	800b5b4 <HAL_GetTick>
 800c83c:	1b80      	subs	r0, r0, r6
 800c83e:	4285      	cmp	r5, r0
 800c840:	d30e      	bcc.n	800c860 <HAL_I2C_Mem_Read+0x2b4>
 800c842:	b16d      	cbz	r5, 800c860 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800c844:	6823      	ldr	r3, [r4, #0]
 800c846:	e735      	b.n	800c6b4 <HAL_I2C_Mem_Read+0x108>
 800c848:	6953      	ldr	r3, [r2, #20]
 800c84a:	0758      	lsls	r0, r3, #29
 800c84c:	f53f af50 	bmi.w	800c6f0 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c850:	f7fe feb0 	bl	800b5b4 <HAL_GetTick>
 800c854:	1b80      	subs	r0, r0, r6
 800c856:	4285      	cmp	r5, r0
 800c858:	d302      	bcc.n	800c860 <HAL_I2C_Mem_Read+0x2b4>
 800c85a:	2d00      	cmp	r5, #0
 800c85c:	f47f af41 	bne.w	800c6e2 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c860:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800c862:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800c864:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800c866:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800c86a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c86e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800c870:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c874:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c876:	f043 0320 	orr.w	r3, r3, #32
}
 800c87a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800c87c:	6423      	str	r3, [r4, #64]	; 0x40
}
 800c87e:	b007      	add	sp, #28
 800c880:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c884:	b95d      	cbnz	r5, 800c89e <HAL_I2C_Mem_Read+0x2f2>
 800c886:	e02b      	b.n	800c8e0 <HAL_I2C_Mem_Read+0x334>
 800c888:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c88c:	695a      	ldr	r2, [r3, #20]
 800c88e:	06d2      	lsls	r2, r2, #27
 800c890:	d40c      	bmi.n	800c8ac <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c892:	f7fe fe8f 	bl	800b5b4 <HAL_GetTick>
 800c896:	1b80      	subs	r0, r0, r6
 800c898:	4285      	cmp	r5, r0
 800c89a:	d3e1      	bcc.n	800c860 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c89c:	6823      	ldr	r3, [r4, #0]
 800c89e:	695a      	ldr	r2, [r3, #20]
 800c8a0:	0651      	lsls	r1, r2, #25
 800c8a2:	d5f3      	bpl.n	800c88c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800c8a4:	691a      	ldr	r2, [r3, #16]
 800c8a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c8a8:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800c8aa:	e7a5      	b.n	800c7f8 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c8ac:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c8ae:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800c8b2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800c8b4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800c8b6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800c8b8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800c8bc:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800c8c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c8c2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800c8c4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800c8c8:	2701      	movs	r7, #1
 800c8ca:	e680      	b.n	800c5ce <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8cc:	695a      	ldr	r2, [r3, #20]
 800c8ce:	0652      	lsls	r2, r2, #25
 800c8d0:	f53f af44 	bmi.w	800c75c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800c8d4:	695a      	ldr	r2, [r3, #20]
 800c8d6:	06d1      	lsls	r1, r2, #27
 800c8d8:	d4e8      	bmi.n	800c8ac <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800c8da:	f7fe fe6b 	bl	800b5b4 <HAL_GetTick>
 800c8de:	e7bf      	b.n	800c860 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800c8e0:	695a      	ldr	r2, [r3, #20]
 800c8e2:	0650      	lsls	r0, r2, #25
 800c8e4:	d5f6      	bpl.n	800c8d4 <HAL_I2C_Mem_Read+0x328>
 800c8e6:	e7dd      	b.n	800c8a4 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800c8e8:	6823      	ldr	r3, [r4, #0]
 800c8ea:	6819      	ldr	r1, [r3, #0]
 800c8ec:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800c8f0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800c8f2:	9003      	str	r0, [sp, #12]
 800c8f4:	6959      	ldr	r1, [r3, #20]
 800c8f6:	9103      	str	r1, [sp, #12]
 800c8f8:	6999      	ldr	r1, [r3, #24]
 800c8fa:	9103      	str	r1, [sp, #12]
 800c8fc:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c8fe:	6819      	ldr	r1, [r3, #0]
 800c900:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800c904:	6019      	str	r1, [r3, #0]
 800c906:	e6cd      	b.n	800c6a4 <HAL_I2C_Mem_Read+0xf8>

0800c908 <HAL_I2C_MasterTxCpltCallback>:
 800c908:	4770      	bx	lr
 800c90a:	bf00      	nop

0800c90c <HAL_I2C_MasterRxCpltCallback>:
 800c90c:	4770      	bx	lr
 800c90e:	bf00      	nop

0800c910 <HAL_I2C_SlaveTxCpltCallback>:
 800c910:	4770      	bx	lr
 800c912:	bf00      	nop

0800c914 <HAL_I2C_SlaveRxCpltCallback>:
 800c914:	4770      	bx	lr
 800c916:	bf00      	nop

0800c918 <HAL_I2C_AddrCallback>:
}
 800c918:	4770      	bx	lr
 800c91a:	bf00      	nop

0800c91c <HAL_I2C_ListenCpltCallback>:
 800c91c:	4770      	bx	lr
 800c91e:	bf00      	nop

0800c920 <HAL_I2C_MemTxCpltCallback>:
 800c920:	4770      	bx	lr
 800c922:	bf00      	nop

0800c924 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800c924:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800c928:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800c92a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800c92c:	b959      	cbnz	r1, 800c946 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c92e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c930:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c932:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c934:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800c936:	d00d      	beq.n	800c954 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800c938:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800c93c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800c93e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c940:	3201      	adds	r2, #1
 800c942:	6502      	str	r2, [r0, #80]	; 0x50
 800c944:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800c946:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c948:	2901      	cmp	r1, #1
 800c94a:	d009      	beq.n	800c960 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800c94c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800c94e:	2902      	cmp	r1, #2
 800c950:	d00e      	beq.n	800c970 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800c952:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c954:	b2d2      	uxtb	r2, r2
 800c956:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800c958:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c95a:	3202      	adds	r2, #2
 800c95c:	6502      	str	r2, [r0, #80]	; 0x50
 800c95e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800c960:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800c962:	6801      	ldr	r1, [r0, #0]
 800c964:	b2d2      	uxtb	r2, r2
 800c966:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800c968:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c96a:	3201      	adds	r2, #1
 800c96c:	6502      	str	r2, [r0, #80]	; 0x50
 800c96e:	4770      	bx	lr
 800c970:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800c972:	2a22      	cmp	r2, #34	; 0x22
 800c974:	d01f      	beq.n	800c9b6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c976:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c978:	b289      	uxth	r1, r1
 800c97a:	b9c1      	cbnz	r1, 800c9ae <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c97c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800c97e:	b289      	uxth	r1, r1
 800c980:	2900      	cmp	r1, #0
 800c982:	d1e6      	bne.n	800c952 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800c984:	2a21      	cmp	r2, #33	; 0x21
 800c986:	d1e4      	bne.n	800c952 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c988:	6802      	ldr	r2, [r0, #0]
{
 800c98a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800c98c:	6854      	ldr	r4, [r2, #4]
 800c98e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800c992:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800c994:	6814      	ldr	r4, [r2, #0]
 800c996:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800c99a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800c99c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800c99e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800c9a0:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800c9a4:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800c9a8:	f7ff ffba 	bl	800c920 <HAL_I2C_MemTxCpltCallback>
}
 800c9ac:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c9ae:	2a21      	cmp	r2, #33	; 0x21
 800c9b0:	d00a      	beq.n	800c9c8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800c9b2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800c9b4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800c9b6:	6801      	ldr	r1, [r0, #0]
 800c9b8:	680a      	ldr	r2, [r1, #0]
 800c9ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800c9be:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800c9c0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800c9c2:	3201      	adds	r2, #1
 800c9c4:	6502      	str	r2, [r0, #80]	; 0x50
 800c9c6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800c9c8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800c9ca:	6802      	ldr	r2, [r0, #0]
 800c9cc:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c9d0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800c9d2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800c9d4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800c9d6:	3a01      	subs	r2, #1
 800c9d8:	b292      	uxth	r2, r2
 800c9da:	855a      	strh	r2, [r3, #42]	; 0x2a
 800c9dc:	4770      	bx	lr
 800c9de:	bf00      	nop

0800c9e0 <HAL_I2C_MemRxCpltCallback>:
 800c9e0:	4770      	bx	lr
 800c9e2:	bf00      	nop

0800c9e4 <HAL_I2C_ErrorCallback>:
 800c9e4:	4770      	bx	lr
 800c9e6:	bf00      	nop

0800c9e8 <HAL_I2C_AbortCpltCallback>:
 800c9e8:	4770      	bx	lr
 800c9ea:	bf00      	nop

0800c9ec <I2C_DMAAbort>:
{
 800c9ec:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9ee:	4b3a      	ldr	r3, [pc, #232]	; (800cad8 <I2C_DMAAbort+0xec>)
 800c9f0:	4a3a      	ldr	r2, [pc, #232]	; (800cadc <I2C_DMAAbort+0xf0>)
 800c9f2:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800c9f4:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800c9f6:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9f8:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800c9fa:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800c9fc:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800ca00:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca02:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca04:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ca08:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca0a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ca0e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ca12:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ca14:	9301      	str	r3, [sp, #4]
 800ca16:	e005      	b.n	800ca24 <I2C_DMAAbort+0x38>
    count--;
 800ca18:	9b01      	ldr	r3, [sp, #4]
 800ca1a:	3b01      	subs	r3, #1
 800ca1c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ca1e:	6813      	ldr	r3, [r2, #0]
 800ca20:	059b      	lsls	r3, r3, #22
 800ca22:	d506      	bpl.n	800ca32 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ca24:	9b01      	ldr	r3, [sp, #4]
 800ca26:	2b00      	cmp	r3, #0
 800ca28:	d1f6      	bne.n	800ca18 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800ca2a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ca2c:	f043 0320 	orr.w	r3, r3, #32
 800ca30:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ca32:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ca34:	b34c      	cbz	r4, 800ca8a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ca36:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ca38:	2500      	movs	r5, #0
 800ca3a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ca3c:	b1f3      	cbz	r3, 800ca7c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca3e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ca40:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca42:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ca46:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ca48:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca4a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ca4c:	2400      	movs	r4, #0
 800ca4e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ca50:	6813      	ldr	r3, [r2, #0]
 800ca52:	f023 0301 	bic.w	r3, r3, #1
 800ca56:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ca58:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ca5c:	2b60      	cmp	r3, #96	; 0x60
 800ca5e:	d02a      	beq.n	800cab6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ca60:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ca64:	2928      	cmp	r1, #40	; 0x28
 800ca66:	d019      	beq.n	800ca9c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ca68:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca6a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ca6c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ca70:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ca74:	f7ff ffb6 	bl	800c9e4 <HAL_I2C_ErrorCallback>
}
 800ca78:	b002      	add	sp, #8
 800ca7a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca7c:	6815      	ldr	r5, [r2, #0]
 800ca7e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ca82:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ca84:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ca86:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ca88:	e7e2      	b.n	800ca50 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ca8a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ca8c:	b1f3      	cbz	r3, 800cacc <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca8e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ca90:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ca92:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ca96:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ca98:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ca9a:	e7d7      	b.n	800ca4c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ca9c:	6813      	ldr	r3, [r2, #0]
 800ca9e:	f043 0301 	orr.w	r3, r3, #1
 800caa2:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caa4:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800caa6:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800caa8:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800caac:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800caae:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cab0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800cab4:	e7de      	b.n	800ca74 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cab6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800cab8:	2220      	movs	r2, #32
 800caba:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cabe:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800cac2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800cac4:	f7ff ff90 	bl	800c9e8 <HAL_I2C_AbortCpltCallback>
}
 800cac8:	b002      	add	sp, #8
 800caca:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800cacc:	6814      	ldr	r4, [r2, #0]
 800cace:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800cad2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800cad4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800cad6:	e7bb      	b.n	800ca50 <I2C_DMAAbort+0x64>
 800cad8:	2000007c 	.word	0x2000007c
 800cadc:	14f8b589 	.word	0x14f8b589

0800cae0 <I2C_ITError>:
{
 800cae0:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cae2:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800cae6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800caea:	2b10      	cmp	r3, #16
{
 800caec:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800caee:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800caf0:	d039      	beq.n	800cb66 <I2C_ITError+0x86>
 800caf2:	b2d9      	uxtb	r1, r3
 800caf4:	2940      	cmp	r1, #64	; 0x40
 800caf6:	d036      	beq.n	800cb66 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800caf8:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800cafc:	2928      	cmp	r1, #40	; 0x28
 800cafe:	d03d      	beq.n	800cb7c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb00:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb02:	6859      	ldr	r1, [r3, #4]
 800cb04:	0508      	lsls	r0, r1, #20
 800cb06:	d407      	bmi.n	800cb18 <I2C_ITError+0x38>
 800cb08:	2a60      	cmp	r2, #96	; 0x60
 800cb0a:	d005      	beq.n	800cb18 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800cb0c:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb0e:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800cb10:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800cb14:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb18:	2200      	movs	r2, #0
 800cb1a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb1c:	685a      	ldr	r2, [r3, #4]
 800cb1e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb22:	d134      	bne.n	800cb8e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800cb24:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cb28:	2960      	cmp	r1, #96	; 0x60
 800cb2a:	d075      	beq.n	800cc18 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cb2c:	695a      	ldr	r2, [r3, #20]
 800cb2e:	0650      	lsls	r0, r2, #25
 800cb30:	d505      	bpl.n	800cb3e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cb32:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cb34:	691b      	ldr	r3, [r3, #16]
 800cb36:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cb38:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800cb3a:	3301      	adds	r3, #1
 800cb3c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800cb3e:	4620      	mov	r0, r4
 800cb40:	f7ff ff50 	bl	800c9e4 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800cb44:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800cb46:	0719      	lsls	r1, r3, #28
 800cb48:	d004      	beq.n	800cb54 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800cb4a:	6822      	ldr	r2, [r4, #0]
 800cb4c:	6853      	ldr	r3, [r2, #4]
 800cb4e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800cb52:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800cb54:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb58:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cb5a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800cb5c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800cb5e:	d501      	bpl.n	800cb64 <I2C_ITError+0x84>
 800cb60:	2b28      	cmp	r3, #40	; 0x28
 800cb62:	d02f      	beq.n	800cbc4 <I2C_ITError+0xe4>
}
 800cb64:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cb66:	2a22      	cmp	r2, #34	; 0x22
 800cb68:	d1c6      	bne.n	800caf8 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb6a:	6823      	ldr	r3, [r4, #0]
 800cb6c:	681a      	ldr	r2, [r3, #0]
 800cb6e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cb72:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800cb74:	685a      	ldr	r2, [r3, #4]
 800cb76:	0512      	lsls	r2, r2, #20
 800cb78:	d5c8      	bpl.n	800cb0c <I2C_ITError+0x2c>
 800cb7a:	e7cd      	b.n	800cb18 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cb7c:	2300      	movs	r3, #0
 800cb7e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800cb80:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800cb82:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800cb86:	685a      	ldr	r2, [r3, #4]
 800cb88:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800cb8c:	d0ca      	beq.n	800cb24 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cb8e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cb90:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800cb92:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800cb96:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800cb98:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800cb9c:	2b01      	cmp	r3, #1
 800cb9e:	d01e      	beq.n	800cbde <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800cba0:	4b28      	ldr	r3, [pc, #160]	; (800cc44 <I2C_ITError+0x164>)
 800cba2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800cba4:	f7fe fd90 	bl	800b6c8 <HAL_DMA_Abort_IT>
 800cba8:	2800      	cmp	r0, #0
 800cbaa:	d0cb      	beq.n	800cb44 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800cbac:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cbae:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800cbb0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbb2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cbb4:	f023 0301 	bic.w	r3, r3, #1
 800cbb8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cbba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cbbe:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cbc0:	4798      	blx	r3
 800cbc2:	e7bf      	b.n	800cb44 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbc4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800cbc6:	4920      	ldr	r1, [pc, #128]	; (800cc48 <I2C_ITError+0x168>)
 800cbc8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbca:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800cbcc:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbce:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800cbd0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800cbd4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800cbd8:	f7ff fea0 	bl	800c91c <HAL_I2C_ListenCpltCallback>
}
 800cbdc:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800cbde:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800cbe0:	4b18      	ldr	r3, [pc, #96]	; (800cc44 <I2C_ITError+0x164>)
 800cbe2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800cbe4:	f7fe fd70 	bl	800b6c8 <HAL_DMA_Abort_IT>
 800cbe8:	2800      	cmp	r0, #0
 800cbea:	d0ab      	beq.n	800cb44 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cbec:	6823      	ldr	r3, [r4, #0]
 800cbee:	695a      	ldr	r2, [r3, #20]
 800cbf0:	0651      	lsls	r1, r2, #25
 800cbf2:	d506      	bpl.n	800cc02 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cbf4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cbf6:	691b      	ldr	r3, [r3, #16]
 800cbf8:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800cbfa:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cbfc:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800cbfe:	3201      	adds	r2, #1
 800cc00:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800cc02:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cc04:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800cc06:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800cc0a:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800cc0c:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800cc0e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800cc12:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cc14:	4798      	blx	r3
 800cc16:	e795      	b.n	800cb44 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800cc18:	2120      	movs	r1, #32
 800cc1a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800cc1e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cc20:	695a      	ldr	r2, [r3, #20]
 800cc22:	0652      	lsls	r2, r2, #25
 800cc24:	d506      	bpl.n	800cc34 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cc26:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cc28:	691b      	ldr	r3, [r3, #16]
 800cc2a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800cc2c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc2e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cc30:	3201      	adds	r2, #1
 800cc32:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800cc34:	681a      	ldr	r2, [r3, #0]
 800cc36:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc3a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800cc3c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800cc3e:	f7ff fed3 	bl	800c9e8 <HAL_I2C_AbortCpltCallback>
 800cc42:	e77f      	b.n	800cb44 <I2C_ITError+0x64>
 800cc44:	0800c9ed 	.word	0x0800c9ed
 800cc48:	ffff0000 	.word	0xffff0000

0800cc4c <HAL_I2C_EV_IRQHandler>:
{
 800cc4c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc4e:	6803      	ldr	r3, [r0, #0]
{
 800cc50:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800cc52:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800cc54:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc56:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc5a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc5e:	2910      	cmp	r1, #16
{
 800cc60:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cc62:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cc64:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800cc68:	d022      	beq.n	800ccb0 <HAL_I2C_EV_IRQHandler+0x64>
 800cc6a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800cc6e:	d01f      	beq.n	800ccb0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc70:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800cc72:	2900      	cmp	r1, #0
 800cc74:	f000 8094 	beq.w	800cda0 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cc78:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800cc7a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cc7c:	f011 0602 	ands.w	r6, r1, #2
 800cc80:	d059      	beq.n	800cd36 <HAL_I2C_EV_IRQHandler+0xea>
 800cc82:	0586      	lsls	r6, r0, #22
 800cc84:	d559      	bpl.n	800cd3a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cc86:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800cc88:	b102      	cbz	r2, 800cc8c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cc8a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800cc8c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800cc90:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800cc94:	2a28      	cmp	r2, #40	; 0x28
 800cc96:	f000 821e 	beq.w	800d0d6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cc9a:	2200      	movs	r2, #0
 800cc9c:	920c      	str	r2, [sp, #48]	; 0x30
 800cc9e:	6959      	ldr	r1, [r3, #20]
 800cca0:	910c      	str	r1, [sp, #48]	; 0x30
 800cca2:	699b      	ldr	r3, [r3, #24]
 800cca4:	930c      	str	r3, [sp, #48]	; 0x30
 800cca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800cca8:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800ccac:	b00e      	add	sp, #56	; 0x38
 800ccae:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800ccb0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800ccb2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800ccb4:	f011 0f01 	tst.w	r1, #1
 800ccb8:	d11a      	bne.n	800ccf0 <HAL_I2C_EV_IRQHandler+0xa4>
 800ccba:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800ccbe:	d0f5      	beq.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800ccc0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800ccc4:	d0f2      	beq.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ccc6:	070d      	lsls	r5, r1, #28
 800ccc8:	d56d      	bpl.n	800cda6 <HAL_I2C_EV_IRQHandler+0x15a>
 800ccca:	0585      	lsls	r5, r0, #22
 800cccc:	f140 8083 	bpl.w	800cdd6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ccd0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ccd2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ccd4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800ccd6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800ccd8:	2900      	cmp	r1, #0
 800ccda:	f000 81e3 	beq.w	800d0a4 <HAL_I2C_EV_IRQHandler+0x458>
 800ccde:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800cce0:	2a00      	cmp	r2, #0
 800cce2:	f000 81df 	beq.w	800d0a4 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800cce6:	685a      	ldr	r2, [r3, #4]
 800cce8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ccec:	605a      	str	r2, [r3, #4]
 800ccee:	e7dd      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ccf0:	0585      	lsls	r5, r0, #22
 800ccf2:	d56e      	bpl.n	800cdd2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800ccf4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ccf6:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800ccfa:	f000 81e9 	beq.w	800d0d0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800ccfe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cd00:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800cd04:	bf04      	itt	eq
 800cd06:	2208      	moveq	r2, #8
 800cd08:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800cd0a:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800cd0e:	2a40      	cmp	r2, #64	; 0x40
 800cd10:	f000 81d7 	beq.w	800d0c2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800cd14:	6922      	ldr	r2, [r4, #16]
 800cd16:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800cd1a:	f000 81b2 	beq.w	800d082 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800cd1e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800cd20:	2a00      	cmp	r2, #0
 800cd22:	f040 81ef 	bne.w	800d104 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800cd26:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800cd28:	11d2      	asrs	r2, r2, #7
 800cd2a:	f002 0206 	and.w	r2, r2, #6
 800cd2e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800cd32:	611a      	str	r2, [r3, #16]
 800cd34:	e7ba      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cd36:	06cd      	lsls	r5, r1, #27
 800cd38:	d47c      	bmi.n	800ce34 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cd3a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800cd3e:	2a21      	cmp	r2, #33	; 0x21
 800cd40:	f000 80f5 	beq.w	800cf2e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cd44:	064e      	lsls	r6, r1, #25
 800cd46:	f140 8132 	bpl.w	800cfae <HAL_I2C_EV_IRQHandler+0x362>
 800cd4a:	0545      	lsls	r5, r0, #21
 800cd4c:	f140 812f 	bpl.w	800cfae <HAL_I2C_EV_IRQHandler+0x362>
 800cd50:	0749      	lsls	r1, r1, #29
 800cd52:	f100 812f 	bmi.w	800cfb4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd56:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cd5a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cd5c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cd5e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800cd60:	2a00      	cmp	r2, #0
 800cd62:	d0a3      	beq.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cd64:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cd66:	691b      	ldr	r3, [r3, #16]
 800cd68:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800cd6a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd6c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cd6e:	3b01      	subs	r3, #1
 800cd70:	b29b      	uxth	r3, r3
 800cd72:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd74:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cd76:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd78:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800cd7a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800cd7c:	2b00      	cmp	r3, #0
 800cd7e:	d195      	bne.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800cd80:	292a      	cmp	r1, #42	; 0x2a
 800cd82:	d193      	bne.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd84:	6822      	ldr	r2, [r4, #0]
 800cd86:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cd88:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cd8a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cd8c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cd90:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cd92:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800cd94:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cd96:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cd9a:	f7ff fdbb 	bl	800c914 <HAL_I2C_SlaveRxCpltCallback>
 800cd9e:	e785      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800cda0:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800cda2:	6959      	ldr	r1, [r3, #20]
 800cda4:	e76a      	b.n	800cc7c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cda6:	078d      	lsls	r5, r1, #30
 800cda8:	d515      	bpl.n	800cdd6 <HAL_I2C_EV_IRQHandler+0x18a>
 800cdaa:	0585      	lsls	r5, r0, #22
 800cdac:	d513      	bpl.n	800cdd6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cdae:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800cdb2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800cdb4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cdb6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800cdba:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800cdbc:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800cdbe:	f000 81b3 	beq.w	800d128 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800cdc2:	2200      	movs	r2, #0
 800cdc4:	920a      	str	r2, [sp, #40]	; 0x28
 800cdc6:	695a      	ldr	r2, [r3, #20]
 800cdc8:	920a      	str	r2, [sp, #40]	; 0x28
 800cdca:	699b      	ldr	r3, [r3, #24]
 800cdcc:	930a      	str	r3, [sp, #40]	; 0x28
 800cdce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cdd0:	e76c      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cdd2:	070d      	lsls	r5, r1, #28
 800cdd4:	d5e7      	bpl.n	800cda6 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800cdd6:	0776      	lsls	r6, r6, #29
 800cdd8:	f140 80f5 	bpl.w	800cfc6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cddc:	685d      	ldr	r5, [r3, #4]
 800cdde:	052d      	lsls	r5, r5, #20
 800cde0:	f53f af64 	bmi.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cde4:	060e      	lsls	r6, r1, #24
 800cde6:	f140 8115 	bpl.w	800d014 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cdea:	0545      	lsls	r5, r0, #21
 800cdec:	f140 8112 	bpl.w	800d014 <HAL_I2C_EV_IRQHandler+0x3c8>
 800cdf0:	074e      	lsls	r6, r1, #29
 800cdf2:	f100 8112 	bmi.w	800d01a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cdf6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800cdfa:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800cdfc:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800ce00:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce02:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800ce04:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ce06:	2800      	cmp	r0, #0
 800ce08:	f040 8235 	bne.w	800d276 <HAL_I2C_EV_IRQHandler+0x62a>
 800ce0c:	2a21      	cmp	r2, #33	; 0x21
 800ce0e:	f000 8347 	beq.w	800d4a0 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ce12:	2940      	cmp	r1, #64	; 0x40
 800ce14:	f47f af4a 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800ce18:	2a22      	cmp	r2, #34	; 0x22
 800ce1a:	f47f af47 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800ce1e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce20:	b292      	uxth	r2, r2
 800ce22:	2a00      	cmp	r2, #0
 800ce24:	f000 8268 	beq.w	800d2f8 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ce28:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800ce2c:	2a40      	cmp	r2, #64	; 0x40
 800ce2e:	f040 80b4 	bne.w	800cf9a <HAL_I2C_EV_IRQHandler+0x34e>
 800ce32:	e0fc      	b.n	800d02e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800ce34:	0585      	lsls	r5, r0, #22
 800ce36:	d580      	bpl.n	800cd3a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce38:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ce3c:	685a      	ldr	r2, [r3, #4]
 800ce3e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ce42:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800ce44:	960d      	str	r6, [sp, #52]	; 0x34
 800ce46:	695a      	ldr	r2, [r3, #20]
 800ce48:	920d      	str	r2, [sp, #52]	; 0x34
 800ce4a:	681a      	ldr	r2, [r3, #0]
 800ce4c:	f042 0201 	orr.w	r2, r2, #1
 800ce50:	601a      	str	r2, [r3, #0]
 800ce52:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ce54:	681a      	ldr	r2, [r3, #0]
 800ce56:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ce5a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce5c:	685a      	ldr	r2, [r3, #4]
 800ce5e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ce60:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ce62:	d521      	bpl.n	800cea8 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800ce64:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800ce68:	2a22      	cmp	r2, #34	; 0x22
 800ce6a:	f000 817a 	beq.w	800d162 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800ce6e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce70:	6802      	ldr	r2, [r0, #0]
 800ce72:	6852      	ldr	r2, [r2, #4]
 800ce74:	b292      	uxth	r2, r2
 800ce76:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ce78:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ce7a:	b292      	uxth	r2, r2
 800ce7c:	b11a      	cbz	r2, 800ce86 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ce7e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ce80:	f042 0204 	orr.w	r2, r2, #4
 800ce84:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ce86:	685a      	ldr	r2, [r3, #4]
 800ce88:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ce8c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800ce8e:	f7fe fc2d 	bl	800b6ec <HAL_DMA_GetState>
 800ce92:	2801      	cmp	r0, #1
 800ce94:	d008      	beq.n	800cea8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ce96:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800ce98:	4b99      	ldr	r3, [pc, #612]	; (800d100 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800ce9a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ce9c:	f7fe fc14 	bl	800b6c8 <HAL_DMA_Abort_IT>
 800cea0:	b110      	cbz	r0, 800cea8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800cea2:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800cea4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800cea6:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800cea8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ceaa:	b29b      	uxth	r3, r3
 800ceac:	b313      	cbz	r3, 800cef4 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ceae:	6823      	ldr	r3, [r4, #0]
 800ceb0:	695a      	ldr	r2, [r3, #20]
 800ceb2:	0752      	lsls	r2, r2, #29
 800ceb4:	d50a      	bpl.n	800cecc <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ceb6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ceb8:	691b      	ldr	r3, [r3, #16]
 800ceba:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800cebc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800cebe:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cec0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800cec2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800cec4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cec6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800cec8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800ceca:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800cecc:	695a      	ldr	r2, [r3, #20]
 800cece:	0656      	lsls	r6, r2, #25
 800ced0:	d509      	bpl.n	800cee6 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ced2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ced4:	691b      	ldr	r3, [r3, #16]
 800ced6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800ced8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ceda:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cedc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800cede:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800cee0:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800cee2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800cee4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800cee6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800cee8:	b29b      	uxth	r3, r3
 800ceea:	b11b      	cbz	r3, 800cef4 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ceec:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ceee:	f043 0304 	orr.w	r3, r3, #4
 800cef2:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800cef4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800cef6:	2b00      	cmp	r3, #0
 800cef8:	f040 80dd 	bne.w	800d0b6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800cefc:	2d2a      	cmp	r5, #42	; 0x2a
 800cefe:	f000 8151 	beq.w	800d1a4 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800cf02:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800cf06:	2b28      	cmp	r3, #40	; 0x28
 800cf08:	f000 8154 	beq.w	800d1b4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800cf0c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cf0e:	2b22      	cmp	r3, #34	; 0x22
 800cf10:	d002      	beq.n	800cf18 <HAL_I2C_EV_IRQHandler+0x2cc>
 800cf12:	2d22      	cmp	r5, #34	; 0x22
 800cf14:	f47f aeca 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800cf18:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800cf1a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800cf1c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf1e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800cf20:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800cf24:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800cf28:	f7ff fcf4 	bl	800c914 <HAL_I2C_SlaveRxCpltCallback>
 800cf2c:	e6be      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cf2e:	060d      	lsls	r5, r1, #24
 800cf30:	d528      	bpl.n	800cf84 <HAL_I2C_EV_IRQHandler+0x338>
 800cf32:	0546      	lsls	r6, r0, #21
 800cf34:	d526      	bpl.n	800cf84 <HAL_I2C_EV_IRQHandler+0x338>
 800cf36:	074d      	lsls	r5, r1, #29
 800cf38:	d427      	bmi.n	800cf8a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf3a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800cf3e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf40:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800cf42:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800cf44:	2900      	cmp	r1, #0
 800cf46:	f43f aeb1 	beq.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cf4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800cf4c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800cf50:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800cf52:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cf54:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf56:	3901      	subs	r1, #1
 800cf58:	b289      	uxth	r1, r1
 800cf5a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800cf5c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800cf5e:	b289      	uxth	r1, r1
 800cf60:	2900      	cmp	r1, #0
 800cf62:	f47f aea3 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800cf66:	2829      	cmp	r0, #41	; 0x29
 800cf68:	f47f aea0 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf6c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf6e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800cf70:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800cf74:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf76:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800cf78:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800cf7a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800cf7e:	f7ff fcc7 	bl	800c910 <HAL_I2C_SlaveTxCpltCallback>
 800cf82:	e693      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cf84:	0749      	lsls	r1, r1, #29
 800cf86:	f57f ae91 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800cf8a:	0582      	lsls	r2, r0, #22
 800cf8c:	f57f ae8e 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cf90:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cf92:	b292      	uxth	r2, r2
 800cf94:	2a00      	cmp	r2, #0
 800cf96:	f43f ae89 	beq.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800cf9a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800cf9c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cfa0:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800cfa2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800cfa4:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800cfa6:	3b01      	subs	r3, #1
 800cfa8:	b29b      	uxth	r3, r3
 800cfaa:	8563      	strh	r3, [r4, #42]	; 0x2a
 800cfac:	e67e      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfae:	074a      	lsls	r2, r1, #29
 800cfb0:	f57f ae7c 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800cfb4:	0586      	lsls	r6, r0, #22
 800cfb6:	f57f ae79 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800cfba:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfbc:	b292      	uxth	r2, r2
 800cfbe:	2a00      	cmp	r2, #0
 800cfc0:	f43f ae74 	beq.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800cfc4:	e01b      	b.n	800cffe <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800cfc6:	685a      	ldr	r2, [r3, #4]
 800cfc8:	0512      	lsls	r2, r2, #20
 800cfca:	f53f ae6f 	bmi.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800cfce:	064e      	lsls	r6, r1, #25
 800cfd0:	d433      	bmi.n	800d03a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800cfd2:	0749      	lsls	r1, r1, #29
 800cfd4:	f57f ae6a 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800cfd8:	0582      	lsls	r2, r0, #22
 800cfda:	f57f ae67 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800cfde:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800cfe0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfe2:	b292      	uxth	r2, r2
 800cfe4:	2a04      	cmp	r2, #4
 800cfe6:	f000 8113 	beq.w	800d210 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800cfea:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cfec:	b292      	uxth	r2, r2
 800cfee:	2a03      	cmp	r2, #3
 800cff0:	f000 8153 	beq.w	800d29a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800cff4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800cff6:	b292      	uxth	r2, r2
 800cff8:	2a02      	cmp	r2, #2
 800cffa:	f000 8182 	beq.w	800d302 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800cffe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d000:	691b      	ldr	r3, [r3, #16]
 800d002:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d004:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d006:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d008:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800d00a:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800d00c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800d00e:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d010:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800d012:	e64b      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800d014:	074d      	lsls	r5, r1, #29
 800d016:	f57f ae49 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800d01a:	0581      	lsls	r1, r0, #22
 800d01c:	f57f ae46 	bpl.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800d020:	2a21      	cmp	r2, #33	; 0x21
 800d022:	f000 80fd 	beq.w	800d220 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800d026:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800d02a:	f47f ae3f 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d02e:	4620      	mov	r0, r4
}
 800d030:	b00e      	add	sp, #56	; 0x38
 800d032:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800d036:	f7ff bc75 	b.w	800c924 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800d03a:	0545      	lsls	r5, r0, #21
 800d03c:	d5c9      	bpl.n	800cfd2 <HAL_I2C_EV_IRQHandler+0x386>
 800d03e:	f011 0104 	ands.w	r1, r1, #4
 800d042:	d1c9      	bne.n	800cfd8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800d044:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d048:	2a22      	cmp	r2, #34	; 0x22
 800d04a:	f47f ae2f 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800d04e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d050:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800d052:	2a03      	cmp	r2, #3
 800d054:	f240 81ec 	bls.w	800d430 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d058:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d05a:	691b      	ldr	r3, [r3, #16]
 800d05c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800d05e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800d060:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800d062:	3b01      	subs	r3, #1
 800d064:	b29b      	uxth	r3, r3
 800d066:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800d068:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d06a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800d06c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800d06e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800d070:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800d072:	f47f ae1b 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d076:	6822      	ldr	r2, [r4, #0]
 800d078:	6853      	ldr	r3, [r2, #4]
 800d07a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d07e:	6053      	str	r3, [r2, #4]
 800d080:	e614      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d082:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d086:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d088:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d08a:	bf16      	itet	ne
 800d08c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d090:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d094:	b2d2      	uxtbne	r2, r2
 800d096:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800d098:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d09a:	b11a      	cbz	r2, 800d0a4 <HAL_I2C_EV_IRQHandler+0x458>
 800d09c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d09e:	2a00      	cmp	r2, #0
 800d0a0:	f47f ae21 	bne.w	800cce6 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800d0a4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d0a6:	2a00      	cmp	r2, #0
 800d0a8:	f43f ae00 	beq.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800d0ac:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800d0ae:	2a00      	cmp	r2, #0
 800d0b0:	f47f ae19 	bne.w	800cce6 <HAL_I2C_EV_IRQHandler+0x9a>
 800d0b4:	e5fa      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800d0b6:	4620      	mov	r0, r4
}
 800d0b8:	b00e      	add	sp, #56	; 0x38
 800d0ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800d0be:	f7ff bd0f 	b.w	800cae0 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800d0c2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d0c4:	bb52      	cbnz	r2, 800d11c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800d0c6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d0c8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800d0cc:	611a      	str	r2, [r3, #16]
 800d0ce:	e5ed      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800d0d0:	2201      	movs	r2, #1
 800d0d2:	62e2      	str	r2, [r4, #44]	; 0x2c
 800d0d4:	e619      	b.n	800cd0a <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800d0d6:	685a      	ldr	r2, [r3, #4]
 800d0d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d0dc:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800d0de:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800d0e0:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800d0e4:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800d0e8:	bf54      	ite	pl
 800d0ea:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800d0ec:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800d0ee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800d0f2:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800d0f6:	4620      	mov	r0, r4
 800d0f8:	f7ff fc0e 	bl	800c918 <HAL_I2C_AddrCallback>
 800d0fc:	e5d6      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800d0fe:	bf00      	nop
 800d100:	0800c9ed 	.word	0x0800c9ed
      else if (hi2c->EventCount == 1U)
 800d104:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d106:	2a01      	cmp	r2, #1
 800d108:	f47f add0 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800d10c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d10e:	11d2      	asrs	r2, r2, #7
 800d110:	f002 0206 	and.w	r2, r2, #6
 800d114:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800d118:	611a      	str	r2, [r3, #16]
 800d11a:	e5c7      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800d11c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800d11e:	f042 0201 	orr.w	r2, r2, #1
 800d122:	b2d2      	uxtb	r2, r2
 800d124:	611a      	str	r2, [r3, #16]
 800d126:	e5c1      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800d128:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800d12a:	b911      	cbnz	r1, 800d132 <HAL_I2C_EV_IRQHandler+0x4e6>
 800d12c:	2a40      	cmp	r2, #64	; 0x40
 800d12e:	f000 809b 	beq.w	800d268 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800d132:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800d134:	b922      	cbnz	r2, 800d140 <HAL_I2C_EV_IRQHandler+0x4f4>
 800d136:	6921      	ldr	r1, [r4, #16]
 800d138:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800d13c:	f000 809f 	beq.w	800d27e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800d140:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d142:	b292      	uxth	r2, r2
 800d144:	2a00      	cmp	r2, #0
 800d146:	d142      	bne.n	800d1ce <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d148:	9203      	str	r2, [sp, #12]
 800d14a:	695a      	ldr	r2, [r3, #20]
 800d14c:	9203      	str	r2, [sp, #12]
 800d14e:	699a      	ldr	r2, [r3, #24]
 800d150:	9203      	str	r2, [sp, #12]
 800d152:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d154:	681a      	ldr	r2, [r3, #0]
 800d156:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d15a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800d15c:	2300      	movs	r3, #0
 800d15e:	6523      	str	r3, [r4, #80]	; 0x50
 800d160:	e5a4      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800d162:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d164:	6802      	ldr	r2, [r0, #0]
 800d166:	6852      	ldr	r2, [r2, #4]
 800d168:	b292      	uxth	r2, r2
 800d16a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800d16c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d16e:	b292      	uxth	r2, r2
 800d170:	b11a      	cbz	r2, 800d17a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800d172:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d174:	f042 0204 	orr.w	r2, r2, #4
 800d178:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800d17a:	685a      	ldr	r2, [r3, #4]
 800d17c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800d180:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800d182:	f7fe fab3 	bl	800b6ec <HAL_DMA_GetState>
 800d186:	2801      	cmp	r0, #1
 800d188:	f43f ae8e 	beq.w	800cea8 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800d18c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d18e:	4b98      	ldr	r3, [pc, #608]	; (800d3f0 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800d190:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800d192:	f7fe fa99 	bl	800b6c8 <HAL_DMA_Abort_IT>
 800d196:	2800      	cmp	r0, #0
 800d198:	f43f ae86 	beq.w	800cea8 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800d19c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800d19e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d1a0:	4798      	blx	r3
 800d1a2:	e681      	b.n	800cea8 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d1a4:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1a6:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d1a8:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800d1aa:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800d1ae:	f7ff fbb1 	bl	800c914 <HAL_I2C_SlaveRxCpltCallback>
 800d1b2:	e6a6      	b.n	800cf02 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1b4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800d1b6:	498f      	ldr	r1, [pc, #572]	; (800d3f4 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800d1b8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800d1ba:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800d1bc:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1be:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d1c0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d1c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800d1c8:	f7ff fba8 	bl	800c91c <HAL_I2C_ListenCpltCallback>
 800d1cc:	e56e      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800d1ce:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1d0:	b292      	uxth	r2, r2
 800d1d2:	2a01      	cmp	r2, #1
 800d1d4:	d070      	beq.n	800d2b8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800d1d6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d1d8:	b292      	uxth	r2, r2
 800d1da:	2a02      	cmp	r2, #2
 800d1dc:	f000 80d6 	beq.w	800d38c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d1e0:	681a      	ldr	r2, [r3, #0]
 800d1e2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d1e6:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d1e8:	685a      	ldr	r2, [r3, #4]
 800d1ea:	0511      	lsls	r1, r2, #20
 800d1ec:	d508      	bpl.n	800d200 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d1ee:	2820      	cmp	r0, #32
 800d1f0:	f200 80f8 	bhi.w	800d3e4 <HAL_I2C_EV_IRQHandler+0x798>
 800d1f4:	2807      	cmp	r0, #7
 800d1f6:	f200 80ea 	bhi.w	800d3ce <HAL_I2C_EV_IRQHandler+0x782>
 800d1fa:	2801      	cmp	r0, #1
 800d1fc:	f000 80ed 	beq.w	800d3da <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d200:	2200      	movs	r2, #0
 800d202:	9209      	str	r2, [sp, #36]	; 0x24
 800d204:	695a      	ldr	r2, [r3, #20]
 800d206:	9209      	str	r2, [sp, #36]	; 0x24
 800d208:	699b      	ldr	r3, [r3, #24]
 800d20a:	9309      	str	r3, [sp, #36]	; 0x24
 800d20c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d20e:	e7a5      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d210:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d212:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d214:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d218:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d21a:	691b      	ldr	r3, [r3, #16]
 800d21c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800d21e:	e6f1      	b.n	800d004 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800d220:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800d222:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800d226:	2a21      	cmp	r2, #33	; 0x21
 800d228:	f47f ad40 	bne.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800d22c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800d22e:	b292      	uxth	r2, r2
 800d230:	2a00      	cmp	r2, #0
 800d232:	f47f aeb2 	bne.w	800cf9a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d236:	2908      	cmp	r1, #8
 800d238:	f000 80e2 	beq.w	800d400 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d23c:	2920      	cmp	r1, #32
 800d23e:	f000 80df 	beq.w	800d400 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d242:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800d246:	f000 80db 	beq.w	800d400 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d24a:	6859      	ldr	r1, [r3, #4]
 800d24c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d250:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d252:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800d254:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d256:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d258:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d25c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800d25e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800d262:	f7ff fb51 	bl	800c908 <HAL_I2C_MasterTxCpltCallback>
 800d266:	e521      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d268:	9101      	str	r1, [sp, #4]
 800d26a:	695a      	ldr	r2, [r3, #20]
 800d26c:	9201      	str	r2, [sp, #4]
 800d26e:	699b      	ldr	r3, [r3, #24]
 800d270:	9301      	str	r3, [sp, #4]
 800d272:	9b01      	ldr	r3, [sp, #4]
 800d274:	e51a      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800d276:	2a21      	cmp	r2, #33	; 0x21
 800d278:	f43f add1 	beq.w	800ce1e <HAL_I2C_EV_IRQHandler+0x1d2>
 800d27c:	e5c9      	b.n	800ce12 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d27e:	9202      	str	r2, [sp, #8]
 800d280:	695a      	ldr	r2, [r3, #20]
 800d282:	9202      	str	r2, [sp, #8]
 800d284:	699a      	ldr	r2, [r3, #24]
 800d286:	9202      	str	r2, [sp, #8]
 800d288:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800d28a:	681a      	ldr	r2, [r3, #0]
 800d28c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800d290:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800d292:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800d294:	3301      	adds	r3, #1
 800d296:	6523      	str	r3, [r4, #80]	; 0x50
 800d298:	e508      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d29a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d29c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d29e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2a2:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800d2a4:	f43f aeab 	beq.w	800cffe <HAL_I2C_EV_IRQHandler+0x3b2>
 800d2a8:	2902      	cmp	r1, #2
 800d2aa:	f43f aea8 	beq.w	800cffe <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2ae:	681a      	ldr	r2, [r3, #0]
 800d2b0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2b4:	601a      	str	r2, [r3, #0]
 800d2b6:	e6a2      	b.n	800cffe <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800d2b8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d2bc:	f000 811b 	beq.w	800d4f6 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800d2c0:	2808      	cmp	r0, #8
 800d2c2:	f000 8108 	beq.w	800d4d6 <HAL_I2C_EV_IRQHandler+0x88a>
 800d2c6:	2820      	cmp	r0, #32
 800d2c8:	f000 8105 	beq.w	800d4d6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d2cc:	2d12      	cmp	r5, #18
 800d2ce:	f000 80ff 	beq.w	800d4d0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d2d2:	2810      	cmp	r0, #16
 800d2d4:	d804      	bhi.n	800d2e0 <HAL_I2C_EV_IRQHandler+0x694>
 800d2d6:	4a48      	ldr	r2, [pc, #288]	; (800d3f8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d2d8:	40c2      	lsrs	r2, r0
 800d2da:	07d1      	lsls	r1, r2, #31
 800d2dc:	f100 814c 	bmi.w	800d578 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d2e0:	681a      	ldr	r2, [r3, #0]
 800d2e2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2e6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d2e8:	2200      	movs	r2, #0
 800d2ea:	9206      	str	r2, [sp, #24]
 800d2ec:	695a      	ldr	r2, [r3, #20]
 800d2ee:	9206      	str	r2, [sp, #24]
 800d2f0:	699b      	ldr	r3, [r3, #24]
 800d2f2:	9306      	str	r3, [sp, #24]
 800d2f4:	9b06      	ldr	r3, [sp, #24]
 800d2f6:	e731      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800d2f8:	685a      	ldr	r2, [r3, #4]
 800d2fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d2fe:	605a      	str	r2, [r3, #4]
 800d300:	e4d4      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800d302:	3901      	subs	r1, #1
 800d304:	290f      	cmp	r1, #15
 800d306:	d809      	bhi.n	800d31c <HAL_I2C_EV_IRQHandler+0x6d0>
 800d308:	e8df f001 	tbb	[pc, r1]
 800d30c:	3608363b 	.word	0x3608363b
 800d310:	08080808 	.word	0x08080808
 800d314:	08080808 	.word	0x08080808
 800d318:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d31c:	681a      	ldr	r2, [r3, #0]
 800d31e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d322:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d324:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800d326:	691b      	ldr	r3, [r3, #16]
 800d328:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800d32a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800d32c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d32e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800d330:	3b01      	subs	r3, #1
 800d332:	b29b      	uxth	r3, r3
 800d334:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d336:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800d338:	1c51      	adds	r1, r2, #1
 800d33a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d33c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800d33e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d340:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800d342:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800d344:	3b01      	subs	r3, #1
 800d346:	b29b      	uxth	r3, r3
 800d348:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d34a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800d34c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d34e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800d352:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800d354:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800d356:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800d358:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d35c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800d360:	2b40      	cmp	r3, #64	; 0x40
 800d362:	f000 80f5 	beq.w	800d550 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d366:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d368:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d36a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d36e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800d370:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800d372:	f7ff facb 	bl	800c90c <HAL_I2C_MasterRxCpltCallback>
 800d376:	e499      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d378:	681a      	ldr	r2, [r3, #0]
 800d37a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d37e:	601a      	str	r2, [r3, #0]
 800d380:	e7d0      	b.n	800d324 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d382:	681a      	ldr	r2, [r3, #0]
 800d384:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d388:	601a      	str	r2, [r3, #0]
 800d38a:	e7cb      	b.n	800d324 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800d38c:	2810      	cmp	r0, #16
 800d38e:	d804      	bhi.n	800d39a <HAL_I2C_EV_IRQHandler+0x74e>
 800d390:	4a19      	ldr	r2, [pc, #100]	; (800d3f8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800d392:	40c2      	lsrs	r2, r0
 800d394:	07d2      	lsls	r2, r2, #31
 800d396:	f100 80c2 	bmi.w	800d51e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d39a:	681a      	ldr	r2, [r3, #0]
 800d39c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3a0:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800d3a2:	681a      	ldr	r2, [r3, #0]
 800d3a4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d3a8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d3aa:	685a      	ldr	r2, [r3, #4]
 800d3ac:	0516      	lsls	r6, r2, #20
 800d3ae:	d506      	bpl.n	800d3be <HAL_I2C_EV_IRQHandler+0x772>
 800d3b0:	2820      	cmp	r0, #32
 800d3b2:	f240 80bc 	bls.w	800d52e <HAL_I2C_EV_IRQHandler+0x8e2>
 800d3b6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d3ba:	f000 80bd 	beq.w	800d538 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d3be:	2200      	movs	r2, #0
 800d3c0:	9208      	str	r2, [sp, #32]
 800d3c2:	695a      	ldr	r2, [r3, #20]
 800d3c4:	9208      	str	r2, [sp, #32]
 800d3c6:	699b      	ldr	r3, [r3, #24]
 800d3c8:	9308      	str	r3, [sp, #32]
 800d3ca:	9b08      	ldr	r3, [sp, #32]
 800d3cc:	e6c6      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x510>
 800d3ce:	4a0b      	ldr	r2, [pc, #44]	; (800d3fc <HAL_I2C_EV_IRQHandler+0x7b0>)
 800d3d0:	3808      	subs	r0, #8
 800d3d2:	40c2      	lsrs	r2, r0
 800d3d4:	07d2      	lsls	r2, r2, #31
 800d3d6:	f57f af13 	bpl.w	800d200 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d3da:	685a      	ldr	r2, [r3, #4]
 800d3dc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d3e0:	605a      	str	r2, [r3, #4]
 800d3e2:	e70d      	b.n	800d200 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3e4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800d3e8:	f47f af0a 	bne.w	800d200 <HAL_I2C_EV_IRQHandler+0x5b4>
 800d3ec:	e7f5      	b.n	800d3da <HAL_I2C_EV_IRQHandler+0x78e>
 800d3ee:	bf00      	nop
 800d3f0:	0800c9ed 	.word	0x0800c9ed
 800d3f4:	ffff0000 	.word	0xffff0000
 800d3f8:	00010014 	.word	0x00010014
 800d3fc:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d400:	6859      	ldr	r1, [r3, #4]
 800d402:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d406:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d408:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d40a:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800d40c:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d40e:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800d412:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800d414:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800d416:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d41a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d41e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d422:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d424:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d426:	f47f af1c 	bne.w	800d262 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800d42a:	f7ff fa79 	bl	800c920 <HAL_I2C_MemTxCpltCallback>
 800d42e:	e43d      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800d430:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d432:	2802      	cmp	r0, #2
 800d434:	f43f af60 	beq.w	800d2f8 <HAL_I2C_EV_IRQHandler+0x6ac>
 800d438:	2a01      	cmp	r2, #1
 800d43a:	f63f af5d 	bhi.w	800d2f8 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d43e:	4a62      	ldr	r2, [pc, #392]	; (800d5c8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800d440:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800d442:	6812      	ldr	r2, [r2, #0]
 800d444:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800d448:	fbb2 f2f0 	udiv	r2, r2, r0
 800d44c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800d450:	920b      	str	r2, [sp, #44]	; 0x2c
 800d452:	e004      	b.n	800d45e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800d454:	681a      	ldr	r2, [r3, #0]
 800d456:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800d45a:	f000 8092 	beq.w	800d582 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800d45e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d460:	3a01      	subs	r2, #1
 800d462:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800d464:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d466:	2900      	cmp	r1, #0
 800d468:	d1f4      	bne.n	800d454 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d46a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d46c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800d46e:	f042 0220 	orr.w	r2, r2, #32
 800d472:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d474:	685a      	ldr	r2, [r3, #4]
 800d476:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d47a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d47c:	691b      	ldr	r3, [r3, #16]
 800d47e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d480:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d482:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800d484:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800d486:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800d488:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800d48a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800d48c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800d48e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800d490:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800d494:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800d496:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800d49a:	f7ff faa3 	bl	800c9e4 <HAL_I2C_ErrorCallback>
 800d49e:	e405      	b.n	800ccac <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800d4a0:	2d08      	cmp	r5, #8
 800d4a2:	d0ad      	beq.n	800d400 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d4a4:	2d20      	cmp	r5, #32
 800d4a6:	d0ab      	beq.n	800d400 <HAL_I2C_EV_IRQHandler+0x7b4>
 800d4a8:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800d4ac:	d0a8      	beq.n	800d400 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d4ae:	685a      	ldr	r2, [r3, #4]
 800d4b0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800d4b4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d4b6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4b8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800d4ba:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800d4bc:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d4be:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4c2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800d4c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800d4c8:	f7ff fa1e 	bl	800c908 <HAL_I2C_MasterTxCpltCallback>
 800d4cc:	f7ff bbee 	b.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800d4d0:	2801      	cmp	r0, #1
 800d4d2:	f43f af05 	beq.w	800d2e0 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4d6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4d8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4da:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4de:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d4e0:	9107      	str	r1, [sp, #28]
 800d4e2:	695a      	ldr	r2, [r3, #20]
 800d4e4:	9207      	str	r2, [sp, #28]
 800d4e6:	699a      	ldr	r2, [r3, #24]
 800d4e8:	9207      	str	r2, [sp, #28]
 800d4ea:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d4ec:	681a      	ldr	r2, [r3, #0]
 800d4ee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d4f2:	601a      	str	r2, [r3, #0]
 800d4f4:	e632      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d4f6:	681a      	ldr	r2, [r3, #0]
 800d4f8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d4fc:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800d4fe:	685a      	ldr	r2, [r3, #4]
 800d500:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800d504:	d02d      	beq.n	800d562 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d506:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d508:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d50a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d50e:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d510:	9104      	str	r1, [sp, #16]
 800d512:	695a      	ldr	r2, [r3, #20]
 800d514:	9204      	str	r2, [sp, #16]
 800d516:	699b      	ldr	r3, [r3, #24]
 800d518:	9304      	str	r3, [sp, #16]
 800d51a:	9b04      	ldr	r3, [sp, #16]
 800d51c:	e61e      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d51e:	681a      	ldr	r2, [r3, #0]
 800d520:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d524:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800d526:	685a      	ldr	r2, [r3, #4]
 800d528:	0515      	lsls	r5, r2, #20
 800d52a:	f57f af48 	bpl.w	800d3be <HAL_I2C_EV_IRQHandler+0x772>
 800d52e:	2807      	cmp	r0, #7
 800d530:	d807      	bhi.n	800d542 <HAL_I2C_EV_IRQHandler+0x8f6>
 800d532:	2801      	cmp	r0, #1
 800d534:	f47f af43 	bne.w	800d3be <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800d538:	685a      	ldr	r2, [r3, #4]
 800d53a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800d53e:	605a      	str	r2, [r3, #4]
 800d540:	e73d      	b.n	800d3be <HAL_I2C_EV_IRQHandler+0x772>
 800d542:	4a22      	ldr	r2, [pc, #136]	; (800d5cc <HAL_I2C_EV_IRQHandler+0x980>)
 800d544:	3808      	subs	r0, #8
 800d546:	40c2      	lsrs	r2, r0
 800d548:	07d0      	lsls	r0, r2, #31
 800d54a:	f57f af38 	bpl.w	800d3be <HAL_I2C_EV_IRQHandler+0x772>
 800d54e:	e7f3      	b.n	800d538 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800d550:	2300      	movs	r3, #0
 800d552:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d556:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800d558:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800d55a:	f7ff fa41 	bl	800c9e0 <HAL_I2C_MemRxCpltCallback>
 800d55e:	f7ff bba5 	b.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800d562:	9205      	str	r2, [sp, #20]
 800d564:	695a      	ldr	r2, [r3, #20]
 800d566:	9205      	str	r2, [sp, #20]
 800d568:	699a      	ldr	r2, [r3, #24]
 800d56a:	9205      	str	r2, [sp, #20]
 800d56c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800d56e:	681a      	ldr	r2, [r3, #0]
 800d570:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800d574:	601a      	str	r2, [r3, #0]
 800d576:	e5f1      	b.n	800d15c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d578:	681a      	ldr	r2, [r3, #0]
 800d57a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800d57e:	601a      	str	r2, [r3, #0]
 800d580:	e6b2      	b.n	800d2e8 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d582:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d584:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800d586:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d58a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800d58c:	6859      	ldr	r1, [r3, #4]
 800d58e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800d592:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800d594:	691b      	ldr	r3, [r3, #16]
 800d596:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800d598:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800d59a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800d59c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800d59e:	b29b      	uxth	r3, r3
 800d5a0:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800d5a2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800d5a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5a8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800d5ac:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5ae:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800d5b0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800d5b2:	f47f aed9 	bne.w	800d368 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800d5b6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d5ba:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800d5bc:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800d5be:	f7ff fa0f 	bl	800c9e0 <HAL_I2C_MemRxCpltCallback>
 800d5c2:	f7ff bb73 	b.w	800ccac <HAL_I2C_EV_IRQHandler+0x60>
 800d5c6:	bf00      	nop
 800d5c8:	2000007c 	.word	0x2000007c
 800d5cc:	01000101 	.word	0x01000101

0800d5d0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5d0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d5d4:	2a20      	cmp	r2, #32
{
 800d5d6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800d5d8:	fa5f fc82 	uxtb.w	ip, r2
 800d5dc:	d001      	beq.n	800d5e2 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d5de:	2002      	movs	r0, #2
  }
}
 800d5e0:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800d5e2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d5e4:	2024      	movs	r0, #36	; 0x24
 800d5e6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d5ea:	6810      	ldr	r0, [r2, #0]
 800d5ec:	f020 0001 	bic.w	r0, r0, #1
 800d5f0:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800d5f2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d5f4:	f020 0010 	bic.w	r0, r0, #16
 800d5f8:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800d5fa:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800d5fc:	4301      	orrs	r1, r0
 800d5fe:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d600:	6811      	ldr	r1, [r2, #0]
 800d602:	f041 0101 	orr.w	r1, r1, #1
 800d606:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800d608:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800d60a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d60e:	4770      	bx	lr

0800d610 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800d610:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800d614:	2a20      	cmp	r2, #32
 800d616:	d001      	beq.n	800d61c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800d618:	2002      	movs	r0, #2
  }
}
 800d61a:	4770      	bx	lr
{
 800d61c:	b410      	push	{r4}
 800d61e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800d622:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800d624:	2224      	movs	r2, #36	; 0x24
 800d626:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800d62a:	6822      	ldr	r2, [r4, #0]
 800d62c:	f022 0201 	bic.w	r2, r2, #1
 800d630:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800d632:	4603      	mov	r3, r0
 800d634:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800d636:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800d63a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800d63c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800d63e:	b289      	uxth	r1, r1
 800d640:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800d642:	6822      	ldr	r2, [r4, #0]
 800d644:	f042 0201 	orr.w	r2, r2, #1
 800d648:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800d64a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800d64e:	2000      	movs	r0, #0
}
 800d650:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d654:	4770      	bx	lr
 800d656:	bf00      	nop

0800d658 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800d658:	2800      	cmp	r0, #0
 800d65a:	d069      	beq.n	800d730 <HAL_LTDC_Init+0xd8>
{
 800d65c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800d65e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800d662:	4604      	mov	r4, r0
 800d664:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d668:	2b00      	cmp	r3, #0
 800d66a:	d05c      	beq.n	800d726 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d66c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d66e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d670:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d674:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d678:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d67a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d67c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800d680:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800d684:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d686:	6999      	ldr	r1, [r3, #24]
 800d688:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800d68a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800d68c:	430a      	orrs	r2, r1
 800d68e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d690:	689a      	ldr	r2, [r3, #8]
 800d692:	4928      	ldr	r1, [pc, #160]	; (800d734 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800d694:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800d696:	400a      	ands	r2, r1
 800d698:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800d69a:	689a      	ldr	r2, [r3, #8]
 800d69c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6a0:	69a0      	ldr	r0, [r4, #24]
 800d6a2:	4302      	orrs	r2, r0
 800d6a4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d6a6:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800d6a8:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800d6aa:	400a      	ands	r2, r1
 800d6ac:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800d6ae:	68da      	ldr	r2, [r3, #12]
 800d6b0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6b4:	6a20      	ldr	r0, [r4, #32]
 800d6b6:	4302      	orrs	r2, r0
 800d6b8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d6ba:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800d6bc:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800d6be:	400a      	ands	r2, r1
 800d6c0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800d6c2:	691a      	ldr	r2, [r3, #16]
 800d6c4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6c8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d6ca:	4302      	orrs	r2, r0
 800d6cc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6ce:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800d6d0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800d6d2:	400a      	ands	r2, r1
 800d6d4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800d6d6:	695a      	ldr	r2, [r3, #20]
 800d6d8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800d6da:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800d6de:	430a      	orrs	r2, r1
 800d6e0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800d6e4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800d6e8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800d6ec:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800d6f0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800d6f2:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800d6f4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800d6f8:	432a      	orrs	r2, r5
 800d6fa:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800d6fe:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800d702:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800d704:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d706:	f042 0206 	orr.w	r2, r2, #6
 800d70a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800d70c:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800d70e:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d712:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800d714:	ea42 020c 	orr.w	r2, r2, ip
 800d718:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800d71a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800d71e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800d722:	4608      	mov	r0, r1
}
 800d724:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800d726:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800d72a:	f7f4 fded 	bl	8002308 <HAL_LTDC_MspInit>
 800d72e:	e79d      	b.n	800d66c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800d730:	2001      	movs	r0, #1
}
 800d732:	4770      	bx	lr
 800d734:	f000f800 	.word	0xf000f800

0800d738 <HAL_LTDC_ErrorCallback>:
 800d738:	4770      	bx	lr
 800d73a:	bf00      	nop

0800d73c <HAL_LTDC_ReloadEventCallback>:
 800d73c:	4770      	bx	lr
 800d73e:	bf00      	nop

0800d740 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d740:	6803      	ldr	r3, [r0, #0]
{
 800d742:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800d744:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800d746:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d748:	076a      	lsls	r2, r5, #29
{
 800d74a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800d74c:	d501      	bpl.n	800d752 <HAL_LTDC_IRQHandler+0x12>
 800d74e:	0771      	lsls	r1, r6, #29
 800d750:	d41d      	bmi.n	800d78e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800d752:	07aa      	lsls	r2, r5, #30
 800d754:	d501      	bpl.n	800d75a <HAL_LTDC_IRQHandler+0x1a>
 800d756:	07b3      	lsls	r3, r6, #30
 800d758:	d42d      	bmi.n	800d7b6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800d75a:	07e8      	lsls	r0, r5, #31
 800d75c:	d501      	bpl.n	800d762 <HAL_LTDC_IRQHandler+0x22>
 800d75e:	07f1      	lsls	r1, r6, #31
 800d760:	d440      	bmi.n	800d7e4 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800d762:	072a      	lsls	r2, r5, #28
 800d764:	d501      	bpl.n	800d76a <HAL_LTDC_IRQHandler+0x2a>
 800d766:	0733      	lsls	r3, r6, #28
 800d768:	d400      	bmi.n	800d76c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800d76a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d76c:	6823      	ldr	r3, [r4, #0]
 800d76e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d770:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800d772:	f022 0208 	bic.w	r2, r2, #8
 800d776:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800d778:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800d77a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d77c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d77e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d782:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800d786:	4620      	mov	r0, r4
 800d788:	f7ff ffd8 	bl	800d73c <HAL_LTDC_ReloadEventCallback>
}
 800d78c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800d78e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d790:	f022 0204 	bic.w	r2, r2, #4
 800d794:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800d796:	2204      	movs	r2, #4
 800d798:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800d79a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800d79e:	f043 0301 	orr.w	r3, r3, #1
 800d7a2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800d7a6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7a8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7ac:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7b0:	f7ff ffc2 	bl	800d738 <HAL_LTDC_ErrorCallback>
 800d7b4:	e7cd      	b.n	800d752 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800d7b6:	6823      	ldr	r3, [r4, #0]
 800d7b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7ba:	f022 0202 	bic.w	r2, r2, #2
 800d7be:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800d7c0:	2202      	movs	r2, #2
 800d7c2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800d7c4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d7c8:	f043 0302 	orr.w	r3, r3, #2
 800d7cc:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7d0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800d7d2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800d7d4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7d8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800d7dc:	4620      	mov	r0, r4
 800d7de:	f7ff ffab 	bl	800d738 <HAL_LTDC_ErrorCallback>
 800d7e2:	e7ba      	b.n	800d75a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d7e4:	6823      	ldr	r3, [r4, #0]
 800d7e6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d7e8:	f022 0201 	bic.w	r2, r2, #1
 800d7ec:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800d7ee:	2201      	movs	r2, #1
 800d7f0:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800d7f2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800d7f4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800d7f8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800d7fc:	4620      	mov	r0, r4
 800d7fe:	f7f5 fddf 	bl	80033c0 <HAL_LTDC_LineEventCallback>
 800d802:	e7ae      	b.n	800d762 <HAL_LTDC_IRQHandler+0x22>

0800d804 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800d804:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d808:	2b01      	cmp	r3, #1
 800d80a:	f000 80c2 	beq.w	800d992 <HAL_LTDC_ConfigLayer+0x18e>
{
 800d80e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d812:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d816:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d81a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d81e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d820:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d822:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d826:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800d82a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d82e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800d832:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d836:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800d83a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d83c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d840:	460c      	mov	r4, r1
 800d842:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d844:	9301      	str	r3, [sp, #4]
 800d846:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d848:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d84a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800d84e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d852:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d854:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800d856:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d85a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d85c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800d860:	6823      	ldr	r3, [r4, #0]
 800d862:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800d866:	9b01      	ldr	r3, [sp, #4]
 800d868:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d86c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d870:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d872:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800d874:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d878:	1c51      	adds	r1, r2, #1
 800d87a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800d87e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800d880:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800d882:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800d886:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d88a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800d88e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800d892:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800d896:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d89a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d89e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800d8a0:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800d8a2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800d8a6:	3301      	adds	r3, #1
 800d8a8:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800d8ac:	4403      	add	r3, r0
 800d8ae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d8b2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d8b6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8ba:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800d8bc:	f023 0307 	bic.w	r3, r3, #7
 800d8c0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8c4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800d8c8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8cc:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800d8d0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800d8d4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800d8d8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800d8dc:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800d8e0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800d8e4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d8e8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d8ec:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800d8f0:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800d8f4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800d8f8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800d8fc:	696b      	ldr	r3, [r5, #20]
 800d8fe:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800d902:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800d906:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800d90a:	f023 0307 	bic.w	r3, r3, #7
 800d90e:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800d912:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800d916:	4303      	orrs	r3, r0
 800d918:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d91c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d920:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800d922:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800d926:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d92a:	bb69      	cbnz	r1, 800d988 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800d92c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d92e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d930:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800d932:	fb03 f707 	mul.w	r7, r3, r7
 800d936:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d938:	fb02 f303 	mul.w	r3, r2, r3
 800d93c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d940:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d944:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800d946:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800d94a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800d94e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800d952:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800d956:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800d95a:	f023 0307 	bic.w	r3, r3, #7
 800d95e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800d962:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d966:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d96a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800d96c:	4313      	orrs	r3, r2
 800d96e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800d972:	2300      	movs	r3, #0
  return HAL_OK;
 800d974:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800d976:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800d97a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d97e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800d982:	b003      	add	sp, #12
 800d984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800d988:	3901      	subs	r1, #1
 800d98a:	2906      	cmp	r1, #6
 800d98c:	d903      	bls.n	800d996 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800d98e:	2301      	movs	r3, #1
 800d990:	e7cd      	b.n	800d92e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800d992:	2002      	movs	r0, #2
}
 800d994:	4770      	bx	lr
 800d996:	4b02      	ldr	r3, [pc, #8]	; (800d9a0 <HAL_LTDC_ConfigLayer+0x19c>)
 800d998:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d99c:	e7c7      	b.n	800d92e <HAL_LTDC_ConfigLayer+0x12a>
 800d99e:	bf00      	nop
 800d9a0:	0803141c 	.word	0x0803141c

0800d9a4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800d9a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800d9a8:	2b01      	cmp	r3, #1
 800d9aa:	d019      	beq.n	800d9e0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9ac:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d9ae:	2302      	movs	r3, #2
{
 800d9b0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800d9b2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9b6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9b8:	4c0a      	ldr	r4, [pc, #40]	; (800d9e4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800d9ba:	f023 0301 	bic.w	r3, r3, #1
 800d9be:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800d9c0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9c2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800d9c4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9c6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9ca:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800d9ce:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800d9d0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800d9d4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800d9d8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800d9dc:	4618      	mov	r0, r3
}
 800d9de:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800d9e0:	2002      	movs	r0, #2
}
 800d9e2:	4770      	bx	lr
 800d9e4:	40016800 	.word	0x40016800

0800d9e8 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800d9e8:	2800      	cmp	r0, #0
 800d9ea:	f000 81a2 	beq.w	800dd32 <HAL_RCC_OscConfig+0x34a>
{
 800d9ee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d9f2:	6803      	ldr	r3, [r0, #0]
 800d9f4:	07dd      	lsls	r5, r3, #31
{
 800d9f6:	b082      	sub	sp, #8
 800d9f8:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800d9fa:	d52f      	bpl.n	800da5c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800d9fc:	499e      	ldr	r1, [pc, #632]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800d9fe:	688a      	ldr	r2, [r1, #8]
 800da00:	f002 020c 	and.w	r2, r2, #12
 800da04:	2a04      	cmp	r2, #4
 800da06:	f000 80ed 	beq.w	800dbe4 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800da0a:	688a      	ldr	r2, [r1, #8]
 800da0c:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800da10:	2a08      	cmp	r2, #8
 800da12:	f000 80e3 	beq.w	800dbdc <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800da16:	6863      	ldr	r3, [r4, #4]
 800da18:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800da1c:	f000 80ec 	beq.w	800dbf8 <HAL_RCC_OscConfig+0x210>
 800da20:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800da24:	f000 8175 	beq.w	800dd12 <HAL_RCC_OscConfig+0x32a>
 800da28:	4d93      	ldr	r5, [pc, #588]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800da2a:	682a      	ldr	r2, [r5, #0]
 800da2c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800da30:	602a      	str	r2, [r5, #0]
 800da32:	682a      	ldr	r2, [r5, #0]
 800da34:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800da38:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800da3a:	2b00      	cmp	r3, #0
 800da3c:	f040 80e1 	bne.w	800dc02 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800da40:	f7fd fdb8 	bl	800b5b4 <HAL_GetTick>
 800da44:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da46:	e005      	b.n	800da54 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800da48:	f7fd fdb4 	bl	800b5b4 <HAL_GetTick>
 800da4c:	1b80      	subs	r0, r0, r6
 800da4e:	2864      	cmp	r0, #100	; 0x64
 800da50:	f200 8101 	bhi.w	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800da54:	682b      	ldr	r3, [r5, #0]
 800da56:	039b      	lsls	r3, r3, #14
 800da58:	d4f6      	bmi.n	800da48 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800da5a:	6823      	ldr	r3, [r4, #0]
 800da5c:	079f      	lsls	r7, r3, #30
 800da5e:	d528      	bpl.n	800dab2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da60:	4a85      	ldr	r2, [pc, #532]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800da62:	6891      	ldr	r1, [r2, #8]
 800da64:	f011 0f0c 	tst.w	r1, #12
 800da68:	f000 8090 	beq.w	800db8c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800da6c:	6891      	ldr	r1, [r2, #8]
 800da6e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800da72:	2908      	cmp	r1, #8
 800da74:	f000 8086 	beq.w	800db84 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800da78:	68e3      	ldr	r3, [r4, #12]
 800da7a:	2b00      	cmp	r3, #0
 800da7c:	f000 810e 	beq.w	800dc9c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800da80:	4b7e      	ldr	r3, [pc, #504]	; (800dc7c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da82:	4e7d      	ldr	r6, [pc, #500]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800da84:	2201      	movs	r2, #1
 800da86:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800da88:	f7fd fd94 	bl	800b5b4 <HAL_GetTick>
 800da8c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da8e:	e005      	b.n	800da9c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800da90:	f7fd fd90 	bl	800b5b4 <HAL_GetTick>
 800da94:	1b40      	subs	r0, r0, r5
 800da96:	2802      	cmp	r0, #2
 800da98:	f200 80dd 	bhi.w	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800da9c:	6833      	ldr	r3, [r6, #0]
 800da9e:	0798      	lsls	r0, r3, #30
 800daa0:	d5f6      	bpl.n	800da90 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800daa2:	6833      	ldr	r3, [r6, #0]
 800daa4:	6922      	ldr	r2, [r4, #16]
 800daa6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800daaa:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800daae:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dab0:	6823      	ldr	r3, [r4, #0]
 800dab2:	071a      	lsls	r2, r3, #28
 800dab4:	d451      	bmi.n	800db5a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800dab6:	0758      	lsls	r0, r3, #29
 800dab8:	d52f      	bpl.n	800db1a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800daba:	4a6f      	ldr	r2, [pc, #444]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800dabc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dabe:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800dac2:	d07f      	beq.n	800dbc4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800dac4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dac6:	4e6e      	ldr	r6, [pc, #440]	; (800dc80 <HAL_RCC_OscConfig+0x298>)
 800dac8:	6833      	ldr	r3, [r6, #0]
 800daca:	05d9      	lsls	r1, r3, #23
 800dacc:	f140 80b3 	bpl.w	800dc36 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dad0:	68a3      	ldr	r3, [r4, #8]
 800dad2:	2b01      	cmp	r3, #1
 800dad4:	f000 80c3 	beq.w	800dc5e <HAL_RCC_OscConfig+0x276>
 800dad8:	2b05      	cmp	r3, #5
 800dada:	f000 812c 	beq.w	800dd36 <HAL_RCC_OscConfig+0x34e>
 800dade:	4e66      	ldr	r6, [pc, #408]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800dae0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800dae2:	f022 0201 	bic.w	r2, r2, #1
 800dae6:	6732      	str	r2, [r6, #112]	; 0x70
 800dae8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800daea:	f022 0204 	bic.w	r2, r2, #4
 800daee:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	f040 80b9 	bne.w	800dc68 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800daf6:	f7fd fd5d 	bl	800b5b4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dafa:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800dafe:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800db00:	e005      	b.n	800db0e <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800db02:	f7fd fd57 	bl	800b5b4 <HAL_GetTick>
 800db06:	1bc0      	subs	r0, r0, r7
 800db08:	4540      	cmp	r0, r8
 800db0a:	f200 80a4 	bhi.w	800dc56 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800db0e:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800db10:	0798      	lsls	r0, r3, #30
 800db12:	d4f6      	bmi.n	800db02 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800db14:	2d00      	cmp	r5, #0
 800db16:	f040 8106 	bne.w	800dd26 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800db1a:	69a0      	ldr	r0, [r4, #24]
 800db1c:	b1c8      	cbz	r0, 800db52 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800db1e:	4d56      	ldr	r5, [pc, #344]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800db20:	68ab      	ldr	r3, [r5, #8]
 800db22:	f003 030c 	and.w	r3, r3, #12
 800db26:	2b08      	cmp	r3, #8
 800db28:	f000 80c9 	beq.w	800dcbe <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800db2c:	4b53      	ldr	r3, [pc, #332]	; (800dc7c <HAL_RCC_OscConfig+0x294>)
 800db2e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db30:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800db32:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800db34:	f000 8109 	beq.w	800dd4a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800db38:	f7fd fd3c 	bl	800b5b4 <HAL_GetTick>
 800db3c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db3e:	e005      	b.n	800db4c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800db40:	f7fd fd38 	bl	800b5b4 <HAL_GetTick>
 800db44:	1b00      	subs	r0, r0, r4
 800db46:	2802      	cmp	r0, #2
 800db48:	f200 8085 	bhi.w	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800db4c:	682b      	ldr	r3, [r5, #0]
 800db4e:	019b      	lsls	r3, r3, #6
 800db50:	d4f6      	bmi.n	800db40 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800db52:	2000      	movs	r0, #0
}
 800db54:	b002      	add	sp, #8
 800db56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800db5a:	6963      	ldr	r3, [r4, #20]
 800db5c:	b30b      	cbz	r3, 800dba2 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800db5e:	4b47      	ldr	r3, [pc, #284]	; (800dc7c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db60:	4e45      	ldr	r6, [pc, #276]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800db62:	2201      	movs	r2, #1
 800db64:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800db68:	f7fd fd24 	bl	800b5b4 <HAL_GetTick>
 800db6c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db6e:	e004      	b.n	800db7a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800db70:	f7fd fd20 	bl	800b5b4 <HAL_GetTick>
 800db74:	1b40      	subs	r0, r0, r5
 800db76:	2802      	cmp	r0, #2
 800db78:	d86d      	bhi.n	800dc56 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800db7a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800db7c:	079b      	lsls	r3, r3, #30
 800db7e:	d5f7      	bpl.n	800db70 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800db80:	6823      	ldr	r3, [r4, #0]
 800db82:	e798      	b.n	800dab6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800db84:	6852      	ldr	r2, [r2, #4]
 800db86:	0256      	lsls	r6, r2, #9
 800db88:	f53f af76 	bmi.w	800da78 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800db8c:	4a3a      	ldr	r2, [pc, #232]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800db8e:	6812      	ldr	r2, [r2, #0]
 800db90:	0795      	lsls	r5, r2, #30
 800db92:	d544      	bpl.n	800dc1e <HAL_RCC_OscConfig+0x236>
 800db94:	68e2      	ldr	r2, [r4, #12]
 800db96:	2a01      	cmp	r2, #1
 800db98:	d041      	beq.n	800dc1e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800db9a:	2001      	movs	r0, #1
}
 800db9c:	b002      	add	sp, #8
 800db9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800dba2:	4a36      	ldr	r2, [pc, #216]	; (800dc7c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dba4:	4e34      	ldr	r6, [pc, #208]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800dba6:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800dbaa:	f7fd fd03 	bl	800b5b4 <HAL_GetTick>
 800dbae:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbb0:	e004      	b.n	800dbbc <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800dbb2:	f7fd fcff 	bl	800b5b4 <HAL_GetTick>
 800dbb6:	1b40      	subs	r0, r0, r5
 800dbb8:	2802      	cmp	r0, #2
 800dbba:	d84c      	bhi.n	800dc56 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800dbbc:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800dbbe:	079f      	lsls	r7, r3, #30
 800dbc0:	d4f7      	bmi.n	800dbb2 <HAL_RCC_OscConfig+0x1ca>
 800dbc2:	e7dd      	b.n	800db80 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800dbc4:	9301      	str	r3, [sp, #4]
 800dbc6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbc8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dbcc:	6413      	str	r3, [r2, #64]	; 0x40
 800dbce:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dbd0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800dbd4:	9301      	str	r3, [sp, #4]
 800dbd6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800dbd8:	2501      	movs	r5, #1
 800dbda:	e774      	b.n	800dac6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800dbdc:	684a      	ldr	r2, [r1, #4]
 800dbde:	0250      	lsls	r0, r2, #9
 800dbe0:	f57f af19 	bpl.w	800da16 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800dbe4:	4a24      	ldr	r2, [pc, #144]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800dbe6:	6812      	ldr	r2, [r2, #0]
 800dbe8:	0391      	lsls	r1, r2, #14
 800dbea:	f57f af37 	bpl.w	800da5c <HAL_RCC_OscConfig+0x74>
 800dbee:	6862      	ldr	r2, [r4, #4]
 800dbf0:	2a00      	cmp	r2, #0
 800dbf2:	f47f af33 	bne.w	800da5c <HAL_RCC_OscConfig+0x74>
 800dbf6:	e7d0      	b.n	800db9a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dbf8:	4a1f      	ldr	r2, [pc, #124]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800dbfa:	6813      	ldr	r3, [r2, #0]
 800dbfc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800dc00:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dc02:	f7fd fcd7 	bl	800b5b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc06:	4e1c      	ldr	r6, [pc, #112]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800dc08:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc0a:	e004      	b.n	800dc16 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800dc0c:	f7fd fcd2 	bl	800b5b4 <HAL_GetTick>
 800dc10:	1b40      	subs	r0, r0, r5
 800dc12:	2864      	cmp	r0, #100	; 0x64
 800dc14:	d81f      	bhi.n	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800dc16:	6833      	ldr	r3, [r6, #0]
 800dc18:	039a      	lsls	r2, r3, #14
 800dc1a:	d5f7      	bpl.n	800dc0c <HAL_RCC_OscConfig+0x224>
 800dc1c:	e71d      	b.n	800da5a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800dc1e:	4916      	ldr	r1, [pc, #88]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800dc20:	6920      	ldr	r0, [r4, #16]
 800dc22:	680a      	ldr	r2, [r1, #0]
 800dc24:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800dc28:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800dc2c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dc2e:	071a      	lsls	r2, r3, #28
 800dc30:	f57f af41 	bpl.w	800dab6 <HAL_RCC_OscConfig+0xce>
 800dc34:	e791      	b.n	800db5a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800dc36:	6833      	ldr	r3, [r6, #0]
 800dc38:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dc3c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800dc3e:	f7fd fcb9 	bl	800b5b4 <HAL_GetTick>
 800dc42:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800dc44:	6833      	ldr	r3, [r6, #0]
 800dc46:	05da      	lsls	r2, r3, #23
 800dc48:	f53f af42 	bmi.w	800dad0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800dc4c:	f7fd fcb2 	bl	800b5b4 <HAL_GetTick>
 800dc50:	1bc0      	subs	r0, r0, r7
 800dc52:	2802      	cmp	r0, #2
 800dc54:	d9f6      	bls.n	800dc44 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800dc56:	2003      	movs	r0, #3
}
 800dc58:	b002      	add	sp, #8
 800dc5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dc5e:	4a06      	ldr	r2, [pc, #24]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
 800dc60:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800dc62:	f043 0301 	orr.w	r3, r3, #1
 800dc66:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800dc68:	f7fd fca4 	bl	800b5b4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc6c:	4f02      	ldr	r7, [pc, #8]	; (800dc78 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800dc6e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc70:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc74:	e00b      	b.n	800dc8e <HAL_RCC_OscConfig+0x2a6>
 800dc76:	bf00      	nop
 800dc78:	40023800 	.word	0x40023800
 800dc7c:	42470000 	.word	0x42470000
 800dc80:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800dc84:	f7fd fc96 	bl	800b5b4 <HAL_GetTick>
 800dc88:	1b80      	subs	r0, r0, r6
 800dc8a:	4540      	cmp	r0, r8
 800dc8c:	d8e3      	bhi.n	800dc56 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800dc8e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800dc90:	079b      	lsls	r3, r3, #30
 800dc92:	d5f7      	bpl.n	800dc84 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800dc94:	2d00      	cmp	r5, #0
 800dc96:	f43f af40 	beq.w	800db1a <HAL_RCC_OscConfig+0x132>
 800dc9a:	e044      	b.n	800dd26 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800dc9c:	4a42      	ldr	r2, [pc, #264]	; (800dda8 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dc9e:	4e43      	ldr	r6, [pc, #268]	; (800ddac <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800dca0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800dca2:	f7fd fc87 	bl	800b5b4 <HAL_GetTick>
 800dca6:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dca8:	e004      	b.n	800dcb4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800dcaa:	f7fd fc83 	bl	800b5b4 <HAL_GetTick>
 800dcae:	1b40      	subs	r0, r0, r5
 800dcb0:	2802      	cmp	r0, #2
 800dcb2:	d8d0      	bhi.n	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800dcb4:	6833      	ldr	r3, [r6, #0]
 800dcb6:	0799      	lsls	r1, r3, #30
 800dcb8:	d4f7      	bmi.n	800dcaa <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800dcba:	6823      	ldr	r3, [r4, #0]
 800dcbc:	e6f9      	b.n	800dab2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800dcbe:	2801      	cmp	r0, #1
 800dcc0:	f43f af48 	beq.w	800db54 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800dcc4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dcc6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcc8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800dccc:	4291      	cmp	r1, r2
 800dcce:	f47f af64 	bne.w	800db9a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcd2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dcd4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800dcd8:	4291      	cmp	r1, r2
 800dcda:	f47f af5e 	bne.w	800db9a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dcde:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dce0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800dce4:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800dce6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800dcea:	f47f af56 	bne.w	800db9a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dcee:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800dcf0:	0852      	lsrs	r2, r2, #1
 800dcf2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800dcf6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800dcf8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800dcfc:	f47f af4d 	bne.w	800db9a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800dd00:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800dd02:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800dd06:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800dd0a:	bf14      	ite	ne
 800dd0c:	2001      	movne	r0, #1
 800dd0e:	2000      	moveq	r0, #0
 800dd10:	e720      	b.n	800db54 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800dd12:	4b26      	ldr	r3, [pc, #152]	; (800ddac <HAL_RCC_OscConfig+0x3c4>)
 800dd14:	681a      	ldr	r2, [r3, #0]
 800dd16:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800dd1a:	601a      	str	r2, [r3, #0]
 800dd1c:	681a      	ldr	r2, [r3, #0]
 800dd1e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800dd22:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800dd24:	e76d      	b.n	800dc02 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800dd26:	4a21      	ldr	r2, [pc, #132]	; (800ddac <HAL_RCC_OscConfig+0x3c4>)
 800dd28:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800dd2a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800dd2e:	6413      	str	r3, [r2, #64]	; 0x40
 800dd30:	e6f3      	b.n	800db1a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800dd32:	2001      	movs	r0, #1
}
 800dd34:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800dd36:	4b1d      	ldr	r3, [pc, #116]	; (800ddac <HAL_RCC_OscConfig+0x3c4>)
 800dd38:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd3a:	f042 0204 	orr.w	r2, r2, #4
 800dd3e:	671a      	str	r2, [r3, #112]	; 0x70
 800dd40:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800dd42:	f042 0201 	orr.w	r2, r2, #1
 800dd46:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800dd48:	e78e      	b.n	800dc68 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800dd4a:	f7fd fc33 	bl	800b5b4 <HAL_GetTick>
 800dd4e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd50:	e005      	b.n	800dd5e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dd52:	f7fd fc2f 	bl	800b5b4 <HAL_GetTick>
 800dd56:	1b80      	subs	r0, r0, r6
 800dd58:	2802      	cmp	r0, #2
 800dd5a:	f63f af7c 	bhi.w	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800dd5e:	682b      	ldr	r3, [r5, #0]
 800dd60:	0199      	lsls	r1, r3, #6
 800dd62:	d4f6      	bmi.n	800dd52 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd64:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800dd68:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800dd6a:	430b      	orrs	r3, r1
 800dd6c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800dd70:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800dd74:	0852      	lsrs	r2, r2, #1
 800dd76:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800dd7a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800dd7c:	490a      	ldr	r1, [pc, #40]	; (800dda8 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800dd82:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800dd84:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800dd86:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800dd88:	f7fd fc14 	bl	800b5b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd8c:	4d07      	ldr	r5, [pc, #28]	; (800ddac <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800dd8e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd90:	e005      	b.n	800dd9e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800dd92:	f7fd fc0f 	bl	800b5b4 <HAL_GetTick>
 800dd96:	1b00      	subs	r0, r0, r4
 800dd98:	2802      	cmp	r0, #2
 800dd9a:	f63f af5c 	bhi.w	800dc56 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800dd9e:	682b      	ldr	r3, [r5, #0]
 800dda0:	019a      	lsls	r2, r3, #6
 800dda2:	d5f6      	bpl.n	800dd92 <HAL_RCC_OscConfig+0x3aa>
 800dda4:	e6d5      	b.n	800db52 <HAL_RCC_OscConfig+0x16a>
 800dda6:	bf00      	nop
 800dda8:	42470000 	.word	0x42470000
 800ddac:	40023800 	.word	0x40023800

0800ddb0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddb0:	4916      	ldr	r1, [pc, #88]	; (800de0c <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800ddb2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddb4:	688b      	ldr	r3, [r1, #8]
 800ddb6:	f003 030c 	and.w	r3, r3, #12
 800ddba:	2b04      	cmp	r3, #4
 800ddbc:	d01b      	beq.n	800ddf6 <HAL_RCC_GetSysClockFreq+0x46>
 800ddbe:	2b08      	cmp	r3, #8
 800ddc0:	d117      	bne.n	800ddf2 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ddc2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ddc4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddc6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ddc8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800ddcc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800ddd0:	d113      	bne.n	800ddfa <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddd2:	480f      	ldr	r0, [pc, #60]	; (800de10 <HAL_RCC_GetSysClockFreq+0x60>)
 800ddd4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800ddd8:	fba1 0100 	umull	r0, r1, r1, r0
 800dddc:	f7f2 fdee 	bl	80009bc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800dde0:	4b0a      	ldr	r3, [pc, #40]	; (800de0c <HAL_RCC_GetSysClockFreq+0x5c>)
 800dde2:	685b      	ldr	r3, [r3, #4]
 800dde4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800dde8:	3301      	adds	r3, #1
 800ddea:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800ddec:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800ddf0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800ddf2:	4807      	ldr	r0, [pc, #28]	; (800de10 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800ddf4:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800ddf6:	4807      	ldr	r0, [pc, #28]	; (800de14 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800ddf8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800ddfa:	4806      	ldr	r0, [pc, #24]	; (800de14 <HAL_RCC_GetSysClockFreq+0x64>)
 800ddfc:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800de00:	2300      	movs	r3, #0
 800de02:	fba1 0100 	umull	r0, r1, r1, r0
 800de06:	f7f2 fdd9 	bl	80009bc <__aeabi_uldivmod>
 800de0a:	e7e9      	b.n	800dde0 <HAL_RCC_GetSysClockFreq+0x30>
 800de0c:	40023800 	.word	0x40023800
 800de10:	00f42400 	.word	0x00f42400
 800de14:	007a1200 	.word	0x007a1200

0800de18 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800de18:	2800      	cmp	r0, #0
 800de1a:	f000 8087 	beq.w	800df2c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de1e:	4a48      	ldr	r2, [pc, #288]	; (800df40 <HAL_RCC_ClockConfig+0x128>)
 800de20:	6813      	ldr	r3, [r2, #0]
 800de22:	f003 030f 	and.w	r3, r3, #15
 800de26:	428b      	cmp	r3, r1
{
 800de28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de2c:	460d      	mov	r5, r1
 800de2e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800de30:	d209      	bcs.n	800de46 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800de32:	b2cb      	uxtb	r3, r1
 800de34:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800de36:	6813      	ldr	r3, [r2, #0]
 800de38:	f003 030f 	and.w	r3, r3, #15
 800de3c:	428b      	cmp	r3, r1
 800de3e:	d002      	beq.n	800de46 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800de40:	2001      	movs	r0, #1
}
 800de42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800de46:	6823      	ldr	r3, [r4, #0]
 800de48:	0798      	lsls	r0, r3, #30
 800de4a:	d514      	bpl.n	800de76 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800de4c:	0759      	lsls	r1, r3, #29
 800de4e:	d504      	bpl.n	800de5a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800de50:	493c      	ldr	r1, [pc, #240]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800de52:	688a      	ldr	r2, [r1, #8]
 800de54:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800de58:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800de5a:	071a      	lsls	r2, r3, #28
 800de5c:	d504      	bpl.n	800de68 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800de5e:	4939      	ldr	r1, [pc, #228]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800de60:	688a      	ldr	r2, [r1, #8]
 800de62:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800de66:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800de68:	4936      	ldr	r1, [pc, #216]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800de6a:	68a0      	ldr	r0, [r4, #8]
 800de6c:	688a      	ldr	r2, [r1, #8]
 800de6e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800de72:	4302      	orrs	r2, r0
 800de74:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800de76:	07df      	lsls	r7, r3, #31
 800de78:	d521      	bpl.n	800debe <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800de7a:	6862      	ldr	r2, [r4, #4]
 800de7c:	2a01      	cmp	r2, #1
 800de7e:	d057      	beq.n	800df30 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de80:	1e93      	subs	r3, r2, #2
 800de82:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800de84:	4b2f      	ldr	r3, [pc, #188]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800de86:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800de88:	d94d      	bls.n	800df26 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800de8a:	0799      	lsls	r1, r3, #30
 800de8c:	d5d8      	bpl.n	800de40 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800de8e:	4e2d      	ldr	r6, [pc, #180]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800de90:	68b3      	ldr	r3, [r6, #8]
 800de92:	f023 0303 	bic.w	r3, r3, #3
 800de96:	4313      	orrs	r3, r2
 800de98:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800de9a:	f7fd fb8b 	bl	800b5b4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800de9e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800dea2:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800dea4:	e004      	b.n	800deb0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800dea6:	f7fd fb85 	bl	800b5b4 <HAL_GetTick>
 800deaa:	1bc0      	subs	r0, r0, r7
 800deac:	4540      	cmp	r0, r8
 800deae:	d844      	bhi.n	800df3a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800deb0:	68b3      	ldr	r3, [r6, #8]
 800deb2:	6862      	ldr	r2, [r4, #4]
 800deb4:	f003 030c 	and.w	r3, r3, #12
 800deb8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800debc:	d1f3      	bne.n	800dea6 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800debe:	4a20      	ldr	r2, [pc, #128]	; (800df40 <HAL_RCC_ClockConfig+0x128>)
 800dec0:	6813      	ldr	r3, [r2, #0]
 800dec2:	f003 030f 	and.w	r3, r3, #15
 800dec6:	42ab      	cmp	r3, r5
 800dec8:	d906      	bls.n	800ded8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800deca:	b2eb      	uxtb	r3, r5
 800decc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800dece:	6813      	ldr	r3, [r2, #0]
 800ded0:	f003 030f 	and.w	r3, r3, #15
 800ded4:	42ab      	cmp	r3, r5
 800ded6:	d1b3      	bne.n	800de40 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800ded8:	6823      	ldr	r3, [r4, #0]
 800deda:	075a      	lsls	r2, r3, #29
 800dedc:	d506      	bpl.n	800deec <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800dede:	4919      	ldr	r1, [pc, #100]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800dee0:	68e0      	ldr	r0, [r4, #12]
 800dee2:	688a      	ldr	r2, [r1, #8]
 800dee4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800dee8:	4302      	orrs	r2, r0
 800deea:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800deec:	071b      	lsls	r3, r3, #28
 800deee:	d507      	bpl.n	800df00 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800def0:	4a14      	ldr	r2, [pc, #80]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800def2:	6921      	ldr	r1, [r4, #16]
 800def4:	6893      	ldr	r3, [r2, #8]
 800def6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800defa:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800defe:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df00:	f7ff ff56 	bl	800ddb0 <HAL_RCC_GetSysClockFreq>
 800df04:	4a0f      	ldr	r2, [pc, #60]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800df06:	4c10      	ldr	r4, [pc, #64]	; (800df48 <HAL_RCC_ClockConfig+0x130>)
 800df08:	6892      	ldr	r2, [r2, #8]
 800df0a:	4910      	ldr	r1, [pc, #64]	; (800df4c <HAL_RCC_ClockConfig+0x134>)
 800df0c:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800df10:	4603      	mov	r3, r0
 800df12:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800df14:	480e      	ldr	r0, [pc, #56]	; (800df50 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df16:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800df18:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800df1a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800df1c:	f7f4 fc30 	bl	8002780 <HAL_InitTick>
  return HAL_OK;
 800df20:	2000      	movs	r0, #0
}
 800df22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800df26:	0198      	lsls	r0, r3, #6
 800df28:	d4b1      	bmi.n	800de8e <HAL_RCC_ClockConfig+0x76>
 800df2a:	e789      	b.n	800de40 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800df2c:	2001      	movs	r0, #1
}
 800df2e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800df30:	4b04      	ldr	r3, [pc, #16]	; (800df44 <HAL_RCC_ClockConfig+0x12c>)
 800df32:	681b      	ldr	r3, [r3, #0]
 800df34:	039e      	lsls	r6, r3, #14
 800df36:	d4aa      	bmi.n	800de8e <HAL_RCC_ClockConfig+0x76>
 800df38:	e782      	b.n	800de40 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800df3a:	2003      	movs	r0, #3
 800df3c:	e781      	b.n	800de42 <HAL_RCC_ClockConfig+0x2a>
 800df3e:	bf00      	nop
 800df40:	40023c00 	.word	0x40023c00
 800df44:	40023800 	.word	0x40023800
 800df48:	08031404 	.word	0x08031404
 800df4c:	2000007c 	.word	0x2000007c
 800df50:	20000084 	.word	0x20000084

0800df54 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df54:	4b04      	ldr	r3, [pc, #16]	; (800df68 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800df56:	4905      	ldr	r1, [pc, #20]	; (800df6c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800df58:	689b      	ldr	r3, [r3, #8]
 800df5a:	4a05      	ldr	r2, [pc, #20]	; (800df70 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800df5c:	6808      	ldr	r0, [r1, #0]
 800df5e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800df62:	5cd3      	ldrb	r3, [r2, r3]
}
 800df64:	40d8      	lsrs	r0, r3
 800df66:	4770      	bx	lr
 800df68:	40023800 	.word	0x40023800
 800df6c:	2000007c 	.word	0x2000007c
 800df70:	08031414 	.word	0x08031414

0800df74 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df74:	4b0e      	ldr	r3, [pc, #56]	; (800dfb0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800df76:	220f      	movs	r2, #15
 800df78:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800df7a:	689a      	ldr	r2, [r3, #8]
 800df7c:	f002 0203 	and.w	r2, r2, #3
 800df80:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800df82:	689a      	ldr	r2, [r3, #8]
 800df84:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800df88:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800df8a:	689a      	ldr	r2, [r3, #8]
 800df8c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800df90:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800df92:	689b      	ldr	r3, [r3, #8]
 800df94:	08db      	lsrs	r3, r3, #3
{
 800df96:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800df98:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800df9c:	4c05      	ldr	r4, [pc, #20]	; (800dfb4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800df9e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfa0:	6823      	ldr	r3, [r4, #0]
}
 800dfa2:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800dfa6:	f003 030f 	and.w	r3, r3, #15
 800dfaa:	600b      	str	r3, [r1, #0]
}
 800dfac:	4770      	bx	lr
 800dfae:	bf00      	nop
 800dfb0:	40023800 	.word	0x40023800
 800dfb4:	40023c00 	.word	0x40023c00

0800dfb8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800dfb8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800dfba:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfbc:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800dfc0:	b083      	sub	sp, #12
 800dfc2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800dfc4:	d111      	bne.n	800dfea <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800dfc6:	f013 0f0c 	tst.w	r3, #12
 800dfca:	d16f      	bne.n	800e0ac <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800dfcc:	0698      	lsls	r0, r3, #26
 800dfce:	f100 80c2 	bmi.w	800e156 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800dfd2:	f013 0310 	ands.w	r3, r3, #16
 800dfd6:	f000 80bb 	beq.w	800e150 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800dfda:	4b89      	ldr	r3, [pc, #548]	; (800e200 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800dfdc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800dfe0:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800dfe4:	2000      	movs	r0, #0
}
 800dfe6:	b003      	add	sp, #12
 800dfe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800dfea:	4b86      	ldr	r3, [pc, #536]	; (800e204 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dfec:	4e86      	ldr	r6, [pc, #536]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800dfee:	2200      	movs	r2, #0
 800dff0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800dff2:	f7fd fadf 	bl	800b5b4 <HAL_GetTick>
 800dff6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800dff8:	e004      	b.n	800e004 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800dffa:	f7fd fadb 	bl	800b5b4 <HAL_GetTick>
 800dffe:	1b43      	subs	r3, r0, r5
 800e000:	2b02      	cmp	r3, #2
 800e002:	d850      	bhi.n	800e0a6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800e004:	6833      	ldr	r3, [r6, #0]
 800e006:	0118      	lsls	r0, r3, #4
 800e008:	d4f7      	bmi.n	800dffa <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800e00a:	6823      	ldr	r3, [r4, #0]
 800e00c:	07d9      	lsls	r1, r3, #31
 800e00e:	d506      	bpl.n	800e01e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800e010:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800e014:	0712      	lsls	r2, r2, #28
 800e016:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800e01a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800e01e:	079a      	lsls	r2, r3, #30
 800e020:	d515      	bpl.n	800e04e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e022:	4979      	ldr	r1, [pc, #484]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e024:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800e026:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800e02a:	6865      	ldr	r5, [r4, #4]
 800e02c:	0612      	lsls	r2, r2, #24
 800e02e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800e032:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800e036:	4302      	orrs	r2, r0
 800e038:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800e03c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800e040:	69e2      	ldr	r2, [r4, #28]
 800e042:	f020 001f 	bic.w	r0, r0, #31
 800e046:	3a01      	subs	r2, #1
 800e048:	4302      	orrs	r2, r0
 800e04a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800e04e:	065b      	lsls	r3, r3, #25
 800e050:	d509      	bpl.n	800e066 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800e052:	1d20      	adds	r0, r4, #4
 800e054:	c80b      	ldmia	r0, {r0, r1, r3}
 800e056:	061b      	lsls	r3, r3, #24
 800e058:	4a6b      	ldr	r2, [pc, #428]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e05a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e05e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800e062:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800e066:	4b67      	ldr	r3, [pc, #412]	; (800e204 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e068:	4e67      	ldr	r6, [pc, #412]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800e06a:	2201      	movs	r2, #1
 800e06c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800e06e:	f7fd faa1 	bl	800b5b4 <HAL_GetTick>
 800e072:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e074:	e004      	b.n	800e080 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800e076:	f7fd fa9d 	bl	800b5b4 <HAL_GetTick>
 800e07a:	1b40      	subs	r0, r0, r5
 800e07c:	2802      	cmp	r0, #2
 800e07e:	d812      	bhi.n	800e0a6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800e080:	6833      	ldr	r3, [r6, #0]
 800e082:	011f      	lsls	r7, r3, #4
 800e084:	d5f7      	bpl.n	800e076 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800e086:	6823      	ldr	r3, [r4, #0]
 800e088:	e79d      	b.n	800dfc6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800e08a:	f7fd fa93 	bl	800b5b4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e08e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800e092:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800e094:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e096:	079b      	lsls	r3, r3, #30
 800e098:	f100 80a5 	bmi.w	800e1e6 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800e09c:	f7fd fa8a 	bl	800b5b4 <HAL_GetTick>
 800e0a0:	1b80      	subs	r0, r0, r6
 800e0a2:	42b8      	cmp	r0, r7
 800e0a4:	d9f6      	bls.n	800e094 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800e0a6:	2003      	movs	r0, #3
}
 800e0a8:	b003      	add	sp, #12
 800e0aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800e0ac:	4b55      	ldr	r3, [pc, #340]	; (800e204 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0ae:	4e56      	ldr	r6, [pc, #344]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800e0b0:	2200      	movs	r2, #0
 800e0b2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e0b4:	f7fd fa7e 	bl	800b5b4 <HAL_GetTick>
 800e0b8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0ba:	e004      	b.n	800e0c6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e0bc:	f7fd fa7a 	bl	800b5b4 <HAL_GetTick>
 800e0c0:	1b43      	subs	r3, r0, r5
 800e0c2:	2b02      	cmp	r3, #2
 800e0c4:	d8ef      	bhi.n	800e0a6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800e0c6:	6833      	ldr	r3, [r6, #0]
 800e0c8:	0098      	lsls	r0, r3, #2
 800e0ca:	d4f7      	bmi.n	800e0bc <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800e0cc:	6822      	ldr	r2, [r4, #0]
 800e0ce:	0751      	lsls	r1, r2, #29
 800e0d0:	d515      	bpl.n	800e0fe <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0d2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800e0d4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800e0d8:	6920      	ldr	r0, [r4, #16]
 800e0da:	061b      	lsls	r3, r3, #24
 800e0dc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800e0e0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e0e4:	430b      	orrs	r3, r1
 800e0e6:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800e0ea:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800e0ee:	6a21      	ldr	r1, [r4, #32]
 800e0f0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800e0f4:	3901      	subs	r1, #1
 800e0f6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800e0fa:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800e0fe:	0713      	lsls	r3, r2, #28
 800e100:	d514      	bpl.n	800e12c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e102:	4a41      	ldr	r2, [pc, #260]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e104:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800e106:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800e10a:	6920      	ldr	r0, [r4, #16]
 800e10c:	071b      	lsls	r3, r3, #28
 800e10e:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800e112:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800e116:	430b      	orrs	r3, r1
 800e118:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800e11c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e120:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e122:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800e126:	430b      	orrs	r3, r1
 800e128:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800e12c:	4b35      	ldr	r3, [pc, #212]	; (800e204 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e12e:	4e36      	ldr	r6, [pc, #216]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800e130:	2201      	movs	r2, #1
 800e132:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800e134:	f7fd fa3e 	bl	800b5b4 <HAL_GetTick>
 800e138:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e13a:	e004      	b.n	800e146 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800e13c:	f7fd fa3a 	bl	800b5b4 <HAL_GetTick>
 800e140:	1b40      	subs	r0, r0, r5
 800e142:	2802      	cmp	r0, #2
 800e144:	d8af      	bhi.n	800e0a6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800e146:	6833      	ldr	r3, [r6, #0]
 800e148:	009f      	lsls	r7, r3, #2
 800e14a:	d5f7      	bpl.n	800e13c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800e14c:	6823      	ldr	r3, [r4, #0]
 800e14e:	e73d      	b.n	800dfcc <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800e150:	4618      	mov	r0, r3
}
 800e152:	b003      	add	sp, #12
 800e154:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800e156:	4b2c      	ldr	r3, [pc, #176]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800e158:	4d2c      	ldr	r5, [pc, #176]	; (800e20c <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800e15a:	2200      	movs	r2, #0
 800e15c:	9201      	str	r2, [sp, #4]
 800e15e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e160:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800e164:	641a      	str	r2, [r3, #64]	; 0x40
 800e166:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e168:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800e16c:	9301      	str	r3, [sp, #4]
 800e16e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800e170:	682b      	ldr	r3, [r5, #0]
 800e172:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e176:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800e178:	f7fd fa1c 	bl	800b5b4 <HAL_GetTick>
 800e17c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e17e:	e004      	b.n	800e18a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800e180:	f7fd fa18 	bl	800b5b4 <HAL_GetTick>
 800e184:	1b83      	subs	r3, r0, r6
 800e186:	2b02      	cmp	r3, #2
 800e188:	d88d      	bhi.n	800e0a6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800e18a:	682b      	ldr	r3, [r5, #0]
 800e18c:	05d9      	lsls	r1, r3, #23
 800e18e:	d5f7      	bpl.n	800e180 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e190:	4d1d      	ldr	r5, [pc, #116]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e192:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800e194:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e196:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800e19a:	d111      	bne.n	800e1c0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e19c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800e1a0:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800e1a4:	d021      	beq.n	800e1ea <HAL_RCCEx_PeriphCLKConfig+0x232>
 800e1a6:	4918      	ldr	r1, [pc, #96]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1a8:	688a      	ldr	r2, [r1, #8]
 800e1aa:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e1ae:	608a      	str	r2, [r1, #8]
 800e1b0:	4a15      	ldr	r2, [pc, #84]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1b2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800e1b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800e1b8:	430b      	orrs	r3, r1
 800e1ba:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800e1bc:	6823      	ldr	r3, [r4, #0]
 800e1be:	e708      	b.n	800dfd2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800e1c0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800e1c4:	4291      	cmp	r1, r2
 800e1c6:	d0eb      	beq.n	800e1a0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1c8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800e1ca:	4a0e      	ldr	r2, [pc, #56]	; (800e204 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800e1cc:	2101      	movs	r1, #1
 800e1ce:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800e1d2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800e1d6:	2100      	movs	r1, #0
 800e1d8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800e1dc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800e1de:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800e1e0:	07da      	lsls	r2, r3, #31
 800e1e2:	f53f af52 	bmi.w	800e08a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800e1e6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e1e8:	e7d8      	b.n	800e19c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800e1ea:	4807      	ldr	r0, [pc, #28]	; (800e208 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800e1ec:	6882      	ldr	r2, [r0, #8]
 800e1ee:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800e1f2:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800e1f6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800e1fa:	430a      	orrs	r2, r1
 800e1fc:	6082      	str	r2, [r0, #8]
 800e1fe:	e7d7      	b.n	800e1b0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800e200:	42471000 	.word	0x42471000
 800e204:	42470000 	.word	0x42470000
 800e208:	40023800 	.word	0x40023800
 800e20c:	40007000 	.word	0x40007000

0800e210 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800e210:	b1f0      	cbz	r0, 800e250 <HAL_SDRAM_Init+0x40>
{
 800e212:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800e214:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e218:	460d      	mov	r5, r1
 800e21a:	4604      	mov	r4, r0
 800e21c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800e220:	b18b      	cbz	r3, 800e246 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e222:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e224:	2302      	movs	r3, #2
 800e226:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800e22a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e22e:	f001 fa2d 	bl	800f68c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800e232:	e9d4 0200 	ldrd	r0, r2, [r4]
 800e236:	4629      	mov	r1, r5
 800e238:	f001 fa66 	bl	800f708 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800e23c:	2301      	movs	r3, #1
 800e23e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800e242:	2000      	movs	r0, #0
}
 800e244:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800e246:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800e24a:	f7f4 fa31 	bl	80026b0 <HAL_SDRAM_MspInit>
 800e24e:	e7e8      	b.n	800e222 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800e250:	2001      	movs	r0, #1
}
 800e252:	4770      	bx	lr

0800e254 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800e254:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e256:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800e25a:	2b02      	cmp	r3, #2
{
 800e25c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800e25e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800e260:	d004      	beq.n	800e26c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800e262:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800e266:	2c01      	cmp	r4, #1
 800e268:	d001      	beq.n	800e26e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800e26a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e26c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e26e:	460e      	mov	r6, r1
 800e270:	2302      	movs	r3, #2
 800e272:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800e276:	6828      	ldr	r0, [r5, #0]
 800e278:	f001 fa92 	bl	800f7a0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800e27c:	6833      	ldr	r3, [r6, #0]
 800e27e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800e280:	bf06      	itte	eq
 800e282:	2305      	moveq	r3, #5
 800e284:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800e288:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800e28c:	2000      	movs	r0, #0
}
 800e28e:	bd70      	pop	{r4, r5, r6, pc}

0800e290 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800e290:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e292:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e296:	2b02      	cmp	r3, #2
{
 800e298:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800e29a:	b2d8      	uxtb	r0, r3
 800e29c:	d005      	beq.n	800e2aa <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800e29e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e2a2:	2b01      	cmp	r3, #1
 800e2a4:	b2dd      	uxtb	r5, r3
 800e2a6:	d001      	beq.n	800e2ac <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800e2a8:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800e2aa:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e2ac:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e2ae:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800e2b0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800e2b4:	f001 fa9e 	bl	800f7f4 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800e2b8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800e2bc:	2000      	movs	r0, #0
}
 800e2be:	bd38      	pop	{r3, r4, r5, pc}

0800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800e2c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2c4:	b082      	sub	sp, #8
 800e2c6:	461d      	mov	r5, r3
 800e2c8:	4616      	mov	r6, r2
 800e2ca:	460c      	mov	r4, r1
 800e2cc:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800e2ce:	f7fd f971 	bl	800b5b4 <HAL_GetTick>
 800e2d2:	4435      	add	r5, r6
 800e2d4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800e2d6:	f7fd f96d 	bl	800b5b4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2da:	4b27      	ldr	r3, [pc, #156]	; (800e378 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800e2dc:	681b      	ldr	r3, [r3, #0]
 800e2de:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800e2e2:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800e2e6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800e2e8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e2ea:	1c73      	adds	r3, r6, #1
 800e2ec:	6839      	ldr	r1, [r7, #0]
 800e2ee:	d107      	bne.n	800e300 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800e2f0:	688b      	ldr	r3, [r1, #8]
 800e2f2:	ea34 0303 	bics.w	r3, r4, r3
 800e2f6:	d0fb      	beq.n	800e2f0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800e2f8:	2000      	movs	r0, #0
}
 800e2fa:	b002      	add	sp, #8
 800e2fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800e300:	688b      	ldr	r3, [r1, #8]
 800e302:	ea34 0303 	bics.w	r3, r4, r3
 800e306:	d1f7      	bne.n	800e2f8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800e308:	f7fd f954 	bl	800b5b4 <HAL_GetTick>
 800e30c:	eba0 0008 	sub.w	r0, r0, r8
 800e310:	42a8      	cmp	r0, r5
 800e312:	d208      	bcs.n	800e326 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800e314:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800e316:	2b00      	cmp	r3, #0
      count--;
 800e318:	9b01      	ldr	r3, [sp, #4]
 800e31a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800e31e:	bf08      	it	eq
 800e320:	2500      	moveq	r5, #0
      count--;
 800e322:	9301      	str	r3, [sp, #4]
 800e324:	e7e1      	b.n	800e2ea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e326:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e32a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e32c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800e330:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800e334:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e336:	d013      	beq.n	800e360 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800e338:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800e33a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800e33e:	d107      	bne.n	800e350 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800e340:	681a      	ldr	r2, [r3, #0]
 800e342:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800e346:	601a      	str	r2, [r3, #0]
 800e348:	681a      	ldr	r2, [r3, #0]
 800e34a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800e34e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800e350:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800e352:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800e354:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800e358:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800e35c:	2003      	movs	r0, #3
 800e35e:	e7cc      	b.n	800e2fa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e360:	68ba      	ldr	r2, [r7, #8]
 800e362:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e366:	d002      	beq.n	800e36e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e368:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e36c:	d1e4      	bne.n	800e338 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800e36e:	681a      	ldr	r2, [r3, #0]
 800e370:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e374:	601a      	str	r2, [r3, #0]
 800e376:	e7df      	b.n	800e338 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800e378:	2000007c 	.word	0x2000007c

0800e37c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800e37c:	b538      	push	{r3, r4, r5, lr}
 800e37e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e380:	6842      	ldr	r2, [r0, #4]
 800e382:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800e386:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e388:	d006      	beq.n	800e398 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e38a:	460a      	mov	r2, r1
 800e38c:	2101      	movs	r1, #1
 800e38e:	f7ff ff97 	bl	800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e392:	b978      	cbnz	r0, 800e3b4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800e394:	2000      	movs	r0, #0
}
 800e396:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e398:	6882      	ldr	r2, [r0, #8]
 800e39a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800e39e:	d01c      	beq.n	800e3da <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800e3a0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e3a4:	d00c      	beq.n	800e3c0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3a6:	460a      	mov	r2, r1
 800e3a8:	4620      	mov	r0, r4
 800e3aa:	2180      	movs	r1, #128	; 0x80
 800e3ac:	f7ff ff88 	bl	800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3b0:	2800      	cmp	r0, #0
 800e3b2:	d0ef      	beq.n	800e394 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e3b4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800e3b6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800e3ba:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e3bc:	6563      	str	r3, [r4, #84]	; 0x54
}
 800e3be:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800e3c0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3c2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800e3c4:	6829      	ldr	r1, [r5, #0]
 800e3c6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800e3ca:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800e3cc:	2101      	movs	r1, #1
 800e3ce:	f7ff ff77 	bl	800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3d2:	2800      	cmp	r0, #0
 800e3d4:	d1ee      	bne.n	800e3b4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800e3d6:	2000      	movs	r0, #0
 800e3d8:	e7dd      	b.n	800e396 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800e3da:	6800      	ldr	r0, [r0, #0]
 800e3dc:	6802      	ldr	r2, [r0, #0]
 800e3de:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800e3e2:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e3e4:	460a      	mov	r2, r1
 800e3e6:	4620      	mov	r0, r4
 800e3e8:	2180      	movs	r1, #128	; 0x80
 800e3ea:	f7ff ff69 	bl	800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e3ee:	2800      	cmp	r0, #0
 800e3f0:	d0d0      	beq.n	800e394 <SPI_EndRxTransaction+0x18>
 800e3f2:	e7df      	b.n	800e3b4 <SPI_EndRxTransaction+0x38>

0800e3f4 <HAL_SPI_Init>:
  if (hspi == NULL)
 800e3f4:	2800      	cmp	r0, #0
 800e3f6:	d05c      	beq.n	800e4b2 <HAL_SPI_Init+0xbe>
{
 800e3f8:	b570      	push	{r4, r5, r6, lr}
 800e3fa:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800e3fc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e3fe:	2800      	cmp	r0, #0
 800e400:	d047      	beq.n	800e492 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800e402:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800e404:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e408:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800e40c:	2200      	movs	r2, #0
 800e40e:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800e410:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800e414:	2b00      	cmp	r3, #0
 800e416:	d042      	beq.n	800e49e <HAL_SPI_Init+0xaa>
 800e418:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800e41a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e41c:	68a5      	ldr	r5, [r4, #8]
 800e41e:	69a2      	ldr	r2, [r4, #24]
 800e420:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800e422:	2302      	movs	r3, #2
 800e424:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800e428:	680b      	ldr	r3, [r1, #0]
 800e42a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e42e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e430:	6863      	ldr	r3, [r4, #4]
 800e432:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800e436:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800e43a:	432b      	orrs	r3, r5
 800e43c:	68e5      	ldr	r5, [r4, #12]
 800e43e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800e442:	432b      	orrs	r3, r5
 800e444:	6925      	ldr	r5, [r4, #16]
 800e446:	f005 0502 	and.w	r5, r5, #2
 800e44a:	432b      	orrs	r3, r5
 800e44c:	6965      	ldr	r5, [r4, #20]
 800e44e:	f005 0501 	and.w	r5, r5, #1
 800e452:	432b      	orrs	r3, r5
 800e454:	69e5      	ldr	r5, [r4, #28]
 800e456:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800e45a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800e45e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800e462:	4333      	orrs	r3, r6
 800e464:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e466:	0c12      	lsrs	r2, r2, #16
 800e468:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e46c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e470:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e474:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e478:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e47a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e47c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e47e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e480:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e482:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800e486:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800e488:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800e48a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800e48c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800e490:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e492:	6863      	ldr	r3, [r4, #4]
 800e494:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e498:	d0b6      	beq.n	800e408 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800e49a:	61e0      	str	r0, [r4, #28]
 800e49c:	e7b4      	b.n	800e408 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800e49e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800e4a0:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800e4a4:	f7f4 f820 	bl	80024e8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800e4a8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800e4ac:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800e4b0:	e7b3      	b.n	800e41a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800e4b2:	2001      	movs	r0, #1
}
 800e4b4:	4770      	bx	lr
 800e4b6:	bf00      	nop

0800e4b8 <HAL_SPI_Transmit>:
{
 800e4b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4bc:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e4be:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e4c2:	2801      	cmp	r0, #1
{
 800e4c4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e4c6:	f000 8085 	beq.w	800e5d4 <HAL_SPI_Transmit+0x11c>
 800e4ca:	461d      	mov	r5, r3
 800e4cc:	2301      	movs	r3, #1
 800e4ce:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e4d2:	4688      	mov	r8, r1
 800e4d4:	4617      	mov	r7, r2
 800e4d6:	f7fd f86d 	bl	800b5b4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4da:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800e4de:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800e4e0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800e4e2:	b2d8      	uxtb	r0, r3
 800e4e4:	d009      	beq.n	800e4fa <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800e4e6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e4e8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e4ea:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e4ec:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e4f0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e4f4:	b002      	add	sp, #8
 800e4f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800e4fa:	f1b8 0f00 	cmp.w	r8, #0
 800e4fe:	d0f3      	beq.n	800e4e8 <HAL_SPI_Transmit+0x30>
 800e500:	2f00      	cmp	r7, #0
 800e502:	d0f1      	beq.n	800e4e8 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e504:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800e506:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800e508:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e50c:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e50e:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e510:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800e514:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800e518:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e51c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800e51e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800e520:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800e522:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800e524:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800e526:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800e528:	f000 8085 	beq.w	800e636 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e52c:	6803      	ldr	r3, [r0, #0]
 800e52e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800e530:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e532:	d403      	bmi.n	800e53c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800e534:	6803      	ldr	r3, [r0, #0]
 800e536:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e53a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e53c:	68e3      	ldr	r3, [r4, #12]
 800e53e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e542:	d04b      	beq.n	800e5dc <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e544:	6863      	ldr	r3, [r4, #4]
 800e546:	2b00      	cmp	r3, #0
 800e548:	f000 8097 	beq.w	800e67a <HAL_SPI_Transmit+0x1c2>
 800e54c:	2f01      	cmp	r7, #1
 800e54e:	f000 8094 	beq.w	800e67a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800e552:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e554:	b29b      	uxth	r3, r3
 800e556:	b1ab      	cbz	r3, 800e584 <HAL_SPI_Transmit+0xcc>
 800e558:	1c68      	adds	r0, r5, #1
 800e55a:	f040 8083 	bne.w	800e664 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e55e:	6823      	ldr	r3, [r4, #0]
 800e560:	689a      	ldr	r2, [r3, #8]
 800e562:	0791      	lsls	r1, r2, #30
 800e564:	f140 8094 	bpl.w	800e690 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e568:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e56a:	7812      	ldrb	r2, [r2, #0]
 800e56c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e56e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e570:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e572:	3901      	subs	r1, #1
 800e574:	b289      	uxth	r1, r1
 800e576:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e578:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e57a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800e57c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e57e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800e580:	2900      	cmp	r1, #0
 800e582:	d1ec      	bne.n	800e55e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e584:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e586:	4b5b      	ldr	r3, [pc, #364]	; (800e6f4 <HAL_SPI_Transmit+0x23c>)
 800e588:	4a5b      	ldr	r2, [pc, #364]	; (800e6f8 <HAL_SPI_Transmit+0x240>)
 800e58a:	681b      	ldr	r3, [r3, #0]
 800e58c:	fba2 2303 	umull	r2, r3, r2, r3
 800e590:	0d5b      	lsrs	r3, r3, #21
 800e592:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800e596:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e59a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e59e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e5a0:	d107      	bne.n	800e5b2 <HAL_SPI_Transmit+0xfa>
 800e5a2:	e098      	b.n	800e6d6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800e5a4:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e5a6:	6822      	ldr	r2, [r4, #0]
      count--;
 800e5a8:	3b01      	subs	r3, #1
 800e5aa:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e5ac:	6893      	ldr	r3, [r2, #8]
 800e5ae:	061b      	lsls	r3, r3, #24
 800e5b0:	d502      	bpl.n	800e5b8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800e5b2:	9b01      	ldr	r3, [sp, #4]
 800e5b4:	2b00      	cmp	r3, #0
 800e5b6:	d1f5      	bne.n	800e5a4 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e5b8:	68a3      	ldr	r3, [r4, #8]
 800e5ba:	b933      	cbnz	r3, 800e5ca <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e5bc:	6822      	ldr	r2, [r4, #0]
 800e5be:	9300      	str	r3, [sp, #0]
 800e5c0:	68d3      	ldr	r3, [r2, #12]
 800e5c2:	9300      	str	r3, [sp, #0]
 800e5c4:	6893      	ldr	r3, [r2, #8]
 800e5c6:	9300      	str	r3, [sp, #0]
 800e5c8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800e5ca:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800e5cc:	3800      	subs	r0, #0
 800e5ce:	bf18      	it	ne
 800e5d0:	2001      	movne	r0, #1
error:
 800e5d2:	e789      	b.n	800e4e8 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800e5d4:	2002      	movs	r0, #2
}
 800e5d6:	b002      	add	sp, #8
 800e5d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e5dc:	6861      	ldr	r1, [r4, #4]
 800e5de:	2900      	cmp	r1, #0
 800e5e0:	d176      	bne.n	800e6d0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e5e2:	4643      	mov	r3, r8
 800e5e4:	f833 7b02 	ldrh.w	r7, [r3], #2
 800e5e8:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e5ea:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e5ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5ee:	3b01      	subs	r3, #1
 800e5f0:	b29b      	uxth	r3, r3
 800e5f2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e5f4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5f6:	b29b      	uxth	r3, r3
 800e5f8:	2b00      	cmp	r3, #0
 800e5fa:	d0c4      	beq.n	800e586 <HAL_SPI_Transmit+0xce>
 800e5fc:	1c6b      	adds	r3, r5, #1
 800e5fe:	d15e      	bne.n	800e6be <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e600:	6883      	ldr	r3, [r0, #8]
 800e602:	079f      	lsls	r7, r3, #30
 800e604:	d50f      	bpl.n	800e626 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e606:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e608:	f832 3b02 	ldrh.w	r3, [r2], #2
 800e60c:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800e60e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e610:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e612:	3b01      	subs	r3, #1
 800e614:	b29b      	uxth	r3, r3
 800e616:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e618:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e61a:	b29b      	uxth	r3, r3
 800e61c:	2b00      	cmp	r3, #0
 800e61e:	d0b1      	beq.n	800e584 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e620:	6883      	ldr	r3, [r0, #8]
 800e622:	079f      	lsls	r7, r3, #30
 800e624:	d4ef      	bmi.n	800e606 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e626:	f7fc ffc5 	bl	800b5b4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e62a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e62c:	b29b      	uxth	r3, r3
 800e62e:	2b00      	cmp	r3, #0
 800e630:	d0a8      	beq.n	800e584 <HAL_SPI_Transmit+0xcc>
 800e632:	6820      	ldr	r0, [r4, #0]
 800e634:	e7e4      	b.n	800e600 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800e636:	6803      	ldr	r3, [r0, #0]
 800e638:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e63c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800e63e:	6803      	ldr	r3, [r0, #0]
 800e640:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e644:	6003      	str	r3, [r0, #0]
 800e646:	e771      	b.n	800e52c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e648:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e64a:	7812      	ldrb	r2, [r2, #0]
 800e64c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800e64e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e650:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e652:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e654:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e656:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800e658:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e65a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e65c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e65e:	b29b      	uxth	r3, r3
 800e660:	2b00      	cmp	r3, #0
 800e662:	d08f      	beq.n	800e584 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e664:	6823      	ldr	r3, [r4, #0]
 800e666:	689a      	ldr	r2, [r3, #8]
 800e668:	0792      	lsls	r2, r2, #30
 800e66a:	d4ed      	bmi.n	800e648 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e66c:	f7fc ffa2 	bl	800b5b4 <HAL_GetTick>
 800e670:	1b80      	subs	r0, r0, r6
 800e672:	42a8      	cmp	r0, r5
 800e674:	d3f2      	bcc.n	800e65c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800e676:	2003      	movs	r0, #3
 800e678:	e736      	b.n	800e4e8 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e67a:	f898 3000 	ldrb.w	r3, [r8]
 800e67e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800e680:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e682:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e684:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e686:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e688:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e68a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e68c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e68e:	e760      	b.n	800e552 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e690:	f7fc ff90 	bl	800b5b4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800e694:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e696:	b29b      	uxth	r3, r3
 800e698:	2b00      	cmp	r3, #0
 800e69a:	f47f af60 	bne.w	800e55e <HAL_SPI_Transmit+0xa6>
 800e69e:	e771      	b.n	800e584 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e6a0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e6a2:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e6a6:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e6a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e6aa:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e6ac:	3b01      	subs	r3, #1
 800e6ae:	b29b      	uxth	r3, r3
 800e6b0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800e6b2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e6b4:	b29b      	uxth	r3, r3
 800e6b6:	2b00      	cmp	r3, #0
 800e6b8:	f43f af64 	beq.w	800e584 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800e6bc:	6822      	ldr	r2, [r4, #0]
 800e6be:	6893      	ldr	r3, [r2, #8]
 800e6c0:	0799      	lsls	r1, r3, #30
 800e6c2:	d4ed      	bmi.n	800e6a0 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800e6c4:	f7fc ff76 	bl	800b5b4 <HAL_GetTick>
 800e6c8:	1b80      	subs	r0, r0, r6
 800e6ca:	42a8      	cmp	r0, r5
 800e6cc:	d3f1      	bcc.n	800e6b2 <HAL_SPI_Transmit+0x1fa>
 800e6ce:	e7d2      	b.n	800e676 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e6d0:	2f01      	cmp	r7, #1
 800e6d2:	d18f      	bne.n	800e5f4 <HAL_SPI_Transmit+0x13c>
 800e6d4:	e785      	b.n	800e5e2 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e6d6:	4633      	mov	r3, r6
 800e6d8:	462a      	mov	r2, r5
 800e6da:	2180      	movs	r1, #128	; 0x80
 800e6dc:	4620      	mov	r0, r4
 800e6de:	f7ff fdef 	bl	800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e6e2:	2800      	cmp	r0, #0
 800e6e4:	f43f af68 	beq.w	800e5b8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e6e8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e6ea:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e6ec:	4313      	orrs	r3, r2
 800e6ee:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e6f0:	6562      	str	r2, [r4, #84]	; 0x54
 800e6f2:	e761      	b.n	800e5b8 <HAL_SPI_Transmit+0x100>
 800e6f4:	2000007c 	.word	0x2000007c
 800e6f8:	165e9f81 	.word	0x165e9f81

0800e6fc <HAL_SPI_TransmitReceive>:
{
 800e6fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e700:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800e702:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800e706:	2801      	cmp	r0, #1
{
 800e708:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800e70a:	f000 80ac 	beq.w	800e866 <HAL_SPI_TransmitReceive+0x16a>
 800e70e:	461e      	mov	r6, r3
 800e710:	2301      	movs	r3, #1
 800e712:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800e716:	4690      	mov	r8, r2
 800e718:	460f      	mov	r7, r1
 800e71a:	f7fc ff4b 	bl	800b5b4 <HAL_GetTick>
 800e71e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800e720:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800e724:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e726:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800e728:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800e72a:	d011      	beq.n	800e750 <HAL_SPI_TransmitReceive+0x54>
 800e72c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800e730:	d009      	beq.n	800e746 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800e732:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800e734:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800e736:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800e738:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800e73c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800e740:	b002      	add	sp, #8
 800e742:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800e746:	68a1      	ldr	r1, [r4, #8]
 800e748:	2900      	cmp	r1, #0
 800e74a:	d1f2      	bne.n	800e732 <HAL_SPI_TransmitReceive+0x36>
 800e74c:	2a04      	cmp	r2, #4
 800e74e:	d1f0      	bne.n	800e732 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800e750:	2f00      	cmp	r7, #0
 800e752:	f000 808c 	beq.w	800e86e <HAL_SPI_TransmitReceive+0x172>
 800e756:	f1b8 0f00 	cmp.w	r8, #0
 800e75a:	f000 8088 	beq.w	800e86e <HAL_SPI_TransmitReceive+0x172>
 800e75e:	2e00      	cmp	r6, #0
 800e760:	f000 8085 	beq.w	800e86e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e764:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800e768:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800e76c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800e76e:	bf1c      	itt	ne
 800e770:	2205      	movne	r2, #5
 800e772:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800e776:	2200      	movs	r2, #0
 800e778:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800e77a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e77e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800e780:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800e782:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e784:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800e786:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e788:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800e78a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800e78c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800e78e:	d403      	bmi.n	800e798 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800e790:	6811      	ldr	r1, [r2, #0]
 800e792:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800e796:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800e798:	68e1      	ldr	r1, [r4, #12]
 800e79a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800e79e:	f000 809e 	beq.w	800e8de <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e7a2:	2b00      	cmp	r3, #0
 800e7a4:	f000 8091 	beq.w	800e8ca <HAL_SPI_TransmitReceive+0x1ce>
 800e7a8:	2e01      	cmp	r6, #1
 800e7aa:	f000 808e 	beq.w	800e8ca <HAL_SPI_TransmitReceive+0x1ce>
 800e7ae:	9b08      	ldr	r3, [sp, #32]
 800e7b0:	3301      	adds	r3, #1
        txallowed = 1U;
 800e7b2:	f04f 0601 	mov.w	r6, #1
 800e7b6:	d028      	beq.n	800e80a <HAL_SPI_TransmitReceive+0x10e>
 800e7b8:	e05b      	b.n	800e872 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e7ba:	6821      	ldr	r1, [r4, #0]
 800e7bc:	688b      	ldr	r3, [r1, #8]
 800e7be:	0798      	lsls	r0, r3, #30
 800e7c0:	d50f      	bpl.n	800e7e2 <HAL_SPI_TransmitReceive+0xe6>
 800e7c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e7c4:	b29b      	uxth	r3, r3
 800e7c6:	b163      	cbz	r3, 800e7e2 <HAL_SPI_TransmitReceive+0xe6>
 800e7c8:	b15e      	cbz	r6, 800e7e2 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e7ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e7cc:	781b      	ldrb	r3, [r3, #0]
 800e7ce:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800e7d0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7d2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7d4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800e7d6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e7d8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e7da:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800e7dc:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e7de:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e7e0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e7e2:	688a      	ldr	r2, [r1, #8]
 800e7e4:	f012 0201 	ands.w	r2, r2, #1
 800e7e8:	d00d      	beq.n	800e806 <HAL_SPI_TransmitReceive+0x10a>
 800e7ea:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e7ec:	b29b      	uxth	r3, r3
 800e7ee:	b153      	cbz	r3, 800e806 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e7f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e7f2:	68c9      	ldr	r1, [r1, #12]
 800e7f4:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800e7f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e7f8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e7fa:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800e7fc:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e7fe:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800e800:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e802:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e804:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e806:	f7fc fed5 	bl	800b5b4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e80a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e80c:	b292      	uxth	r2, r2
 800e80e:	2a00      	cmp	r2, #0
 800e810:	d1d3      	bne.n	800e7ba <HAL_SPI_TransmitReceive+0xbe>
 800e812:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e814:	b29b      	uxth	r3, r3
 800e816:	2b00      	cmp	r3, #0
 800e818:	d1cf      	bne.n	800e7ba <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e81a:	4b79      	ldr	r3, [pc, #484]	; (800ea00 <HAL_SPI_TransmitReceive+0x304>)
 800e81c:	4a79      	ldr	r2, [pc, #484]	; (800ea04 <HAL_SPI_TransmitReceive+0x308>)
 800e81e:	681b      	ldr	r3, [r3, #0]
 800e820:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e824:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e826:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800e82a:	0d5b      	lsrs	r3, r3, #21
 800e82c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e830:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800e834:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800e836:	d107      	bne.n	800e848 <HAL_SPI_TransmitReceive+0x14c>
 800e838:	e0d2      	b.n	800e9e0 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800e83a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e83c:	6822      	ldr	r2, [r4, #0]
      count--;
 800e83e:	3b01      	subs	r3, #1
 800e840:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800e842:	6893      	ldr	r3, [r2, #8]
 800e844:	061b      	lsls	r3, r3, #24
 800e846:	d502      	bpl.n	800e84e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800e848:	9b01      	ldr	r3, [sp, #4]
 800e84a:	2b00      	cmp	r3, #0
 800e84c:	d1f5      	bne.n	800e83a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800e84e:	68a0      	ldr	r0, [r4, #8]
 800e850:	2800      	cmp	r0, #0
 800e852:	f040 8082 	bne.w	800e95a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800e856:	6823      	ldr	r3, [r4, #0]
 800e858:	9000      	str	r0, [sp, #0]
 800e85a:	68da      	ldr	r2, [r3, #12]
 800e85c:	9200      	str	r2, [sp, #0]
 800e85e:	689b      	ldr	r3, [r3, #8]
 800e860:	9300      	str	r3, [sp, #0]
 800e862:	9b00      	ldr	r3, [sp, #0]
 800e864:	e766      	b.n	800e734 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800e866:	2002      	movs	r0, #2
}
 800e868:	b002      	add	sp, #8
 800e86a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800e86e:	2001      	movs	r0, #1
 800e870:	e760      	b.n	800e734 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e872:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e874:	b29b      	uxth	r3, r3
 800e876:	b91b      	cbnz	r3, 800e880 <HAL_SPI_TransmitReceive+0x184>
 800e878:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e87a:	b29b      	uxth	r3, r3
 800e87c:	2b00      	cmp	r3, #0
 800e87e:	d0cc      	beq.n	800e81a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e880:	6822      	ldr	r2, [r4, #0]
 800e882:	6893      	ldr	r3, [r2, #8]
 800e884:	0799      	lsls	r1, r3, #30
 800e886:	d50f      	bpl.n	800e8a8 <HAL_SPI_TransmitReceive+0x1ac>
 800e888:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e88a:	b29b      	uxth	r3, r3
 800e88c:	b163      	cbz	r3, 800e8a8 <HAL_SPI_TransmitReceive+0x1ac>
 800e88e:	b15e      	cbz	r6, 800e8a8 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800e890:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e892:	781b      	ldrb	r3, [r3, #0]
 800e894:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800e896:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800e898:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e89a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800e89c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800e89e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800e8a0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e8a2:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800e8a4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e8a6:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e8a8:	6893      	ldr	r3, [r2, #8]
 800e8aa:	f013 0301 	ands.w	r3, r3, #1
 800e8ae:	d004      	beq.n	800e8ba <HAL_SPI_TransmitReceive+0x1be>
 800e8b0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e8b2:	b289      	uxth	r1, r1
 800e8b4:	2900      	cmp	r1, #0
 800e8b6:	f040 8087 	bne.w	800e9c8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800e8ba:	f7fc fe7b 	bl	800b5b4 <HAL_GetTick>
 800e8be:	9b08      	ldr	r3, [sp, #32]
 800e8c0:	1b40      	subs	r0, r0, r5
 800e8c2:	4298      	cmp	r0, r3
 800e8c4:	d3d5      	bcc.n	800e872 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800e8c6:	2003      	movs	r0, #3
 800e8c8:	e734      	b.n	800e734 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800e8ca:	783b      	ldrb	r3, [r7, #0]
 800e8cc:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8d2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8d4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800e8d6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800e8d8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8da:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e8dc:	e767      	b.n	800e7ae <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e8de:	2b00      	cmp	r3, #0
 800e8e0:	d13d      	bne.n	800e95e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e8e2:	f837 3b02 	ldrh.w	r3, [r7], #2
 800e8e6:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800e8e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800e8ea:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800e8ec:	3b01      	subs	r3, #1
 800e8ee:	b29b      	uxth	r3, r3
 800e8f0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e8f2:	9b08      	ldr	r3, [sp, #32]
 800e8f4:	3301      	adds	r3, #1
{
 800e8f6:	f04f 0601 	mov.w	r6, #1
 800e8fa:	d025      	beq.n	800e948 <HAL_SPI_TransmitReceive+0x24c>
 800e8fc:	e032      	b.n	800e964 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e8fe:	6823      	ldr	r3, [r4, #0]
 800e900:	689a      	ldr	r2, [r3, #8]
 800e902:	0792      	lsls	r2, r2, #30
 800e904:	d50d      	bpl.n	800e922 <HAL_SPI_TransmitReceive+0x226>
 800e906:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e908:	b292      	uxth	r2, r2
 800e90a:	b152      	cbz	r2, 800e922 <HAL_SPI_TransmitReceive+0x226>
 800e90c:	b14e      	cbz	r6, 800e922 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e90e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e910:	f831 2b02 	ldrh.w	r2, [r1], #2
 800e914:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800e916:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e918:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e91a:	3a01      	subs	r2, #1
 800e91c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800e91e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800e920:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e922:	689a      	ldr	r2, [r3, #8]
 800e924:	f012 0201 	ands.w	r2, r2, #1
 800e928:	d00c      	beq.n	800e944 <HAL_SPI_TransmitReceive+0x248>
 800e92a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e92c:	b289      	uxth	r1, r1
 800e92e:	b149      	cbz	r1, 800e944 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e930:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e932:	68db      	ldr	r3, [r3, #12]
 800e934:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800e938:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e93a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e93c:	3b01      	subs	r3, #1
 800e93e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800e940:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800e942:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e944:	f7fc fe36 	bl	800b5b4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e948:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e94a:	b29b      	uxth	r3, r3
 800e94c:	2b00      	cmp	r3, #0
 800e94e:	d1d6      	bne.n	800e8fe <HAL_SPI_TransmitReceive+0x202>
 800e950:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e952:	b29b      	uxth	r3, r3
 800e954:	2b00      	cmp	r3, #0
 800e956:	d1d2      	bne.n	800e8fe <HAL_SPI_TransmitReceive+0x202>
 800e958:	e75f      	b.n	800e81a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800e95a:	2000      	movs	r0, #0
 800e95c:	e6ea      	b.n	800e734 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800e95e:	2e01      	cmp	r6, #1
 800e960:	d1c7      	bne.n	800e8f2 <HAL_SPI_TransmitReceive+0x1f6>
 800e962:	e7be      	b.n	800e8e2 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800e964:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e966:	b29b      	uxth	r3, r3
 800e968:	b923      	cbnz	r3, 800e974 <HAL_SPI_TransmitReceive+0x278>
 800e96a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800e96c:	b29b      	uxth	r3, r3
 800e96e:	2b00      	cmp	r3, #0
 800e970:	f43f af53 	beq.w	800e81a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800e974:	6822      	ldr	r2, [r4, #0]
 800e976:	6893      	ldr	r3, [r2, #8]
 800e978:	079f      	lsls	r7, r3, #30
 800e97a:	d50d      	bpl.n	800e998 <HAL_SPI_TransmitReceive+0x29c>
 800e97c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e97e:	b29b      	uxth	r3, r3
 800e980:	b153      	cbz	r3, 800e998 <HAL_SPI_TransmitReceive+0x29c>
 800e982:	b14e      	cbz	r6, 800e998 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800e984:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e986:	f831 3b02 	ldrh.w	r3, [r1], #2
 800e98a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800e98c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800e98e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800e990:	3b01      	subs	r3, #1
 800e992:	b29b      	uxth	r3, r3
 800e994:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800e996:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800e998:	6893      	ldr	r3, [r2, #8]
 800e99a:	f013 0301 	ands.w	r3, r3, #1
 800e99e:	d00c      	beq.n	800e9ba <HAL_SPI_TransmitReceive+0x2be>
 800e9a0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800e9a2:	b289      	uxth	r1, r1
 800e9a4:	b149      	cbz	r1, 800e9ba <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800e9a6:	68d1      	ldr	r1, [r2, #12]
 800e9a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e9aa:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800e9ae:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800e9b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800e9b2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9b4:	3b01      	subs	r3, #1
 800e9b6:	b29b      	uxth	r3, r3
 800e9b8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800e9ba:	f7fc fdfb 	bl	800b5b4 <HAL_GetTick>
 800e9be:	9b08      	ldr	r3, [sp, #32]
 800e9c0:	1b40      	subs	r0, r0, r5
 800e9c2:	4298      	cmp	r0, r3
 800e9c4:	d3ce      	bcc.n	800e964 <HAL_SPI_TransmitReceive+0x268>
 800e9c6:	e77e      	b.n	800e8c6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800e9c8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800e9ca:	68d2      	ldr	r2, [r2, #12]
 800e9cc:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800e9ce:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800e9d0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9d2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800e9d4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800e9d6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800e9d8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800e9da:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800e9dc:	461e      	mov	r6, r3
 800e9de:	e76c      	b.n	800e8ba <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800e9e0:	9a08      	ldr	r2, [sp, #32]
 800e9e2:	462b      	mov	r3, r5
 800e9e4:	2180      	movs	r1, #128	; 0x80
 800e9e6:	4620      	mov	r0, r4
 800e9e8:	f7ff fc6a 	bl	800e2c0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800e9ec:	2800      	cmp	r0, #0
 800e9ee:	f43f af2e 	beq.w	800e84e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e9f2:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e9f4:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800e9f6:	4313      	orrs	r3, r2
 800e9f8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800e9fa:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800e9fc:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800e9fe:	e699      	b.n	800e734 <HAL_SPI_TransmitReceive+0x38>
 800ea00:	2000007c 	.word	0x2000007c
 800ea04:	165e9f81 	.word	0x165e9f81

0800ea08 <HAL_SPI_Receive>:
{
 800ea08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ea0c:	6846      	ldr	r6, [r0, #4]
 800ea0e:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800ea12:	b082      	sub	sp, #8
 800ea14:	4604      	mov	r4, r0
 800ea16:	4690      	mov	r8, r2
 800ea18:	461d      	mov	r5, r3
 800ea1a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ea1c:	d06e      	beq.n	800eafc <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800ea1e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800ea22:	2b01      	cmp	r3, #1
 800ea24:	d076      	beq.n	800eb14 <HAL_SPI_Receive+0x10c>
 800ea26:	2301      	movs	r3, #1
 800ea28:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ea2c:	f7fc fdc2 	bl	800b5b4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea30:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800ea34:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800ea38:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800ea3a:	fa5f f08c 	uxtb.w	r0, ip
 800ea3e:	d009      	beq.n	800ea54 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ea40:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ea42:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ea44:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ea46:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ea4a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ea4e:	b002      	add	sp, #8
 800ea50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ea54:	2f00      	cmp	r7, #0
 800ea56:	d0f4      	beq.n	800ea42 <HAL_SPI_Receive+0x3a>
 800ea58:	f1b8 0f00 	cmp.w	r8, #0
 800ea5c:	d0f1      	beq.n	800ea42 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea5e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ea60:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea62:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ea66:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ea68:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea6c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ea70:	f04f 0104 	mov.w	r1, #4
 800ea74:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ea78:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ea7c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ea7e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ea80:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ea82:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ea86:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ea88:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ea8a:	d107      	bne.n	800ea9c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ea8c:	6811      	ldr	r1, [r2, #0]
 800ea8e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ea92:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ea94:	6811      	ldr	r1, [r2, #0]
 800ea96:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ea9a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ea9c:	6811      	ldr	r1, [r2, #0]
 800ea9e:	0648      	lsls	r0, r1, #25
 800eaa0:	d403      	bmi.n	800eaaa <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800eaa2:	6811      	ldr	r1, [r2, #0]
 800eaa4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800eaa8:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800eaaa:	68e1      	ldr	r1, [r4, #12]
 800eaac:	2900      	cmp	r1, #0
 800eaae:	d054      	beq.n	800eb5a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800eab0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800eab2:	b289      	uxth	r1, r1
 800eab4:	b1a9      	cbz	r1, 800eae2 <HAL_SPI_Receive+0xda>
 800eab6:	1c69      	adds	r1, r5, #1
 800eab8:	d13e      	bne.n	800eb38 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eaba:	6893      	ldr	r3, [r2, #8]
 800eabc:	07db      	lsls	r3, r3, #31
 800eabe:	d544      	bpl.n	800eb4a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eac0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800eac2:	68d1      	ldr	r1, [r2, #12]
 800eac4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800eac8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eacc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eace:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ead2:	fa1f fc8c 	uxth.w	ip, ip
 800ead6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eada:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eadc:	b29b      	uxth	r3, r3
 800eade:	2b00      	cmp	r3, #0
 800eae0:	d1eb      	bne.n	800eaba <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800eae2:	4632      	mov	r2, r6
 800eae4:	4629      	mov	r1, r5
 800eae6:	4620      	mov	r0, r4
 800eae8:	f7ff fc48 	bl	800e37c <SPI_EndRxTransaction>
 800eaec:	b108      	cbz	r0, 800eaf2 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800eaee:	2320      	movs	r3, #32
 800eaf0:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800eaf2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800eaf4:	3800      	subs	r0, #0
 800eaf6:	bf18      	it	ne
 800eaf8:	2001      	movne	r0, #1
error :
 800eafa:	e7a2      	b.n	800ea42 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800eafc:	6883      	ldr	r3, [r0, #8]
 800eafe:	2b00      	cmp	r3, #0
 800eb00:	d18d      	bne.n	800ea1e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb02:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eb04:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb06:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800eb08:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800eb0c:	460a      	mov	r2, r1
 800eb0e:	f7ff fdf5 	bl	800e6fc <HAL_SPI_TransmitReceive>
 800eb12:	e79c      	b.n	800ea4e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800eb14:	2002      	movs	r0, #2
}
 800eb16:	b002      	add	sp, #8
 800eb18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800eb1c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb1e:	68db      	ldr	r3, [r3, #12]
 800eb20:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800eb24:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800eb26:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb28:	3b01      	subs	r3, #1
 800eb2a:	b29b      	uxth	r3, r3
 800eb2c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb2e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb30:	b29b      	uxth	r3, r3
 800eb32:	2b00      	cmp	r3, #0
 800eb34:	d0d5      	beq.n	800eae2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb36:	6823      	ldr	r3, [r4, #0]
 800eb38:	689a      	ldr	r2, [r3, #8]
 800eb3a:	07d2      	lsls	r2, r2, #31
 800eb3c:	d4ee      	bmi.n	800eb1c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eb3e:	f7fc fd39 	bl	800b5b4 <HAL_GetTick>
 800eb42:	1b80      	subs	r0, r0, r6
 800eb44:	42a8      	cmp	r0, r5
 800eb46:	d243      	bcs.n	800ebd0 <HAL_SPI_Receive+0x1c8>
 800eb48:	e7f1      	b.n	800eb2e <HAL_SPI_Receive+0x126>
 800eb4a:	f7fc fd33 	bl	800b5b4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eb4e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb50:	b29b      	uxth	r3, r3
 800eb52:	2b00      	cmp	r3, #0
 800eb54:	d0c5      	beq.n	800eae2 <HAL_SPI_Receive+0xda>
 800eb56:	6822      	ldr	r2, [r4, #0]
 800eb58:	e7af      	b.n	800eaba <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800eb5a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800eb5c:	b292      	uxth	r2, r2
 800eb5e:	2a00      	cmp	r2, #0
 800eb60:	d0bf      	beq.n	800eae2 <HAL_SPI_Receive+0xda>
 800eb62:	1c6f      	adds	r7, r5, #1
 800eb64:	d013      	beq.n	800eb8e <HAL_SPI_Receive+0x186>
 800eb66:	e02b      	b.n	800ebc0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800eb68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb6a:	7b1b      	ldrb	r3, [r3, #12]
 800eb6c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800eb6e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb72:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800eb74:	f10c 3cff 	add.w	ip, ip, #4294967295
 800eb78:	fa1f fc8c 	uxth.w	ip, ip
 800eb7c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800eb80:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb82:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800eb84:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800eb86:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800eb88:	2b00      	cmp	r3, #0
 800eb8a:	d0aa      	beq.n	800eae2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800eb8c:	6823      	ldr	r3, [r4, #0]
 800eb8e:	689a      	ldr	r2, [r3, #8]
 800eb90:	07d0      	lsls	r0, r2, #31
 800eb92:	d4e9      	bmi.n	800eb68 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800eb94:	f7fc fd0e 	bl	800b5b4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800eb98:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800eb9a:	b29b      	uxth	r3, r3
 800eb9c:	2b00      	cmp	r3, #0
 800eb9e:	d1f5      	bne.n	800eb8c <HAL_SPI_Receive+0x184>
 800eba0:	e79f      	b.n	800eae2 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800eba2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eba4:	7b1b      	ldrb	r3, [r3, #12]
 800eba6:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800eba8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebaa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ebac:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebae:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800ebb0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ebb2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ebb4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ebb6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ebb8:	b29b      	uxth	r3, r3
 800ebba:	2b00      	cmp	r3, #0
 800ebbc:	d091      	beq.n	800eae2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ebbe:	6823      	ldr	r3, [r4, #0]
 800ebc0:	689a      	ldr	r2, [r3, #8]
 800ebc2:	07d1      	lsls	r1, r2, #31
 800ebc4:	d4ed      	bmi.n	800eba2 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ebc6:	f7fc fcf5 	bl	800b5b4 <HAL_GetTick>
 800ebca:	1b80      	subs	r0, r0, r6
 800ebcc:	42a8      	cmp	r0, r5
 800ebce:	d3f2      	bcc.n	800ebb6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800ebd0:	2003      	movs	r0, #3
 800ebd2:	e736      	b.n	800ea42 <HAL_SPI_Receive+0x3a>

0800ebd4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800ebd4:	2800      	cmp	r0, #0
 800ebd6:	f000 8087 	beq.w	800ece8 <HAL_TIM_Base_Init+0x114>
{
 800ebda:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800ebdc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ebe0:	4604      	mov	r4, r0
 800ebe2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ebe6:	2b00      	cmp	r3, #0
 800ebe8:	d079      	beq.n	800ecde <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ebea:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebec:	493f      	ldr	r1, [pc, #252]	; (800ecec <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ebee:	2302      	movs	r3, #2
 800ebf0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebf4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ebf6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ebf8:	d05d      	beq.n	800ecb6 <HAL_TIM_Base_Init+0xe2>
 800ebfa:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ebfe:	d031      	beq.n	800ec64 <HAL_TIM_Base_Init+0x90>
 800ec00:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ec04:	428a      	cmp	r2, r1
 800ec06:	d02d      	beq.n	800ec64 <HAL_TIM_Base_Init+0x90>
 800ec08:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec0c:	428a      	cmp	r2, r1
 800ec0e:	d029      	beq.n	800ec64 <HAL_TIM_Base_Init+0x90>
 800ec10:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec14:	428a      	cmp	r2, r1
 800ec16:	d025      	beq.n	800ec64 <HAL_TIM_Base_Init+0x90>
 800ec18:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800ec1c:	428a      	cmp	r2, r1
 800ec1e:	d04a      	beq.n	800ecb6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ec20:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800ec24:	428a      	cmp	r2, r1
 800ec26:	d021      	beq.n	800ec6c <HAL_TIM_Base_Init+0x98>
 800ec28:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec2c:	428a      	cmp	r2, r1
 800ec2e:	d01d      	beq.n	800ec6c <HAL_TIM_Base_Init+0x98>
 800ec30:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec34:	428a      	cmp	r2, r1
 800ec36:	d019      	beq.n	800ec6c <HAL_TIM_Base_Init+0x98>
 800ec38:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800ec3c:	428a      	cmp	r2, r1
 800ec3e:	d015      	beq.n	800ec6c <HAL_TIM_Base_Init+0x98>
 800ec40:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec44:	428a      	cmp	r2, r1
 800ec46:	d011      	beq.n	800ec6c <HAL_TIM_Base_Init+0x98>
 800ec48:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ec4c:	428a      	cmp	r2, r1
 800ec4e:	d00d      	beq.n	800ec6c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec50:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec52:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec54:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ec58:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800ec5a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800ec5c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec5e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec60:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ec62:	e010      	b.n	800ec86 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800ec64:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ec66:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ec6a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec6c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec6e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ec70:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ec74:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec76:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec7a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ec7c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ec7e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ec80:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ec82:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ec84:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800ec86:	2301      	movs	r3, #1
 800ec88:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ec8a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ec8e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ec92:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ec96:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ec9a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ec9e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800eca2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800eca6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ecaa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ecae:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ecb2:	2000      	movs	r0, #0
}
 800ecb4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ecb6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecb8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ecba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ecbe:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ecc0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ecc4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ecc6:	69a1      	ldr	r1, [r4, #24]
 800ecc8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800eccc:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ecce:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ecd0:	68e3      	ldr	r3, [r4, #12]
 800ecd2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ecd4:	6863      	ldr	r3, [r4, #4]
 800ecd6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ecd8:	6963      	ldr	r3, [r4, #20]
 800ecda:	6313      	str	r3, [r2, #48]	; 0x30
 800ecdc:	e7d3      	b.n	800ec86 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ecde:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800ece2:	f7f3 fc3d 	bl	8002560 <HAL_TIM_Base_MspInit>
 800ece6:	e780      	b.n	800ebea <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800ece8:	2001      	movs	r0, #1
}
 800ecea:	4770      	bx	lr
 800ecec:	40010000 	.word	0x40010000

0800ecf0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800ecf0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ecf4:	2b01      	cmp	r3, #1
 800ecf6:	d12f      	bne.n	800ed58 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ecf8:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ecfa:	4919      	ldr	r1, [pc, #100]	; (800ed60 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ecfc:	2202      	movs	r2, #2
 800ecfe:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed02:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed04:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800ed06:	f042 0201 	orr.w	r2, r2, #1
 800ed0a:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800ed0c:	d019      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed0e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ed12:	d016      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed14:	4a13      	ldr	r2, [pc, #76]	; (800ed64 <HAL_TIM_Base_Start_IT+0x74>)
 800ed16:	4293      	cmp	r3, r2
 800ed18:	d013      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed1a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed1e:	4293      	cmp	r3, r2
 800ed20:	d00f      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed22:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ed26:	4293      	cmp	r3, r2
 800ed28:	d00b      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed2a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ed2e:	4293      	cmp	r3, r2
 800ed30:	d007      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed32:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800ed36:	4293      	cmp	r3, r2
 800ed38:	d003      	beq.n	800ed42 <HAL_TIM_Base_Start_IT+0x52>
 800ed3a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800ed3e:	4293      	cmp	r3, r2
 800ed40:	d104      	bne.n	800ed4c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800ed42:	689a      	ldr	r2, [r3, #8]
 800ed44:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800ed48:	2a06      	cmp	r2, #6
 800ed4a:	d007      	beq.n	800ed5c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800ed4c:	681a      	ldr	r2, [r3, #0]
 800ed4e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800ed52:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800ed54:	601a      	str	r2, [r3, #0]
 800ed56:	4770      	bx	lr
    return HAL_ERROR;
 800ed58:	2001      	movs	r0, #1
 800ed5a:	4770      	bx	lr
  return HAL_OK;
 800ed5c:	2000      	movs	r0, #0
}
 800ed5e:	4770      	bx	lr
 800ed60:	40010000 	.word	0x40010000
 800ed64:	40000400 	.word	0x40000400

0800ed68 <HAL_TIM_PWM_MspInit>:
 800ed68:	4770      	bx	lr
 800ed6a:	bf00      	nop

0800ed6c <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800ed6c:	2800      	cmp	r0, #0
 800ed6e:	f000 8087 	beq.w	800ee80 <HAL_TIM_PWM_Init+0x114>
{
 800ed72:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800ed74:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ed78:	4604      	mov	r4, r0
 800ed7a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ed7e:	2b00      	cmp	r3, #0
 800ed80:	d079      	beq.n	800ee76 <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ed82:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed84:	493f      	ldr	r1, [pc, #252]	; (800ee84 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800ed86:	2302      	movs	r3, #2
 800ed88:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed8c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800ed8e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800ed90:	d05d      	beq.n	800ee4e <HAL_TIM_PWM_Init+0xe2>
 800ed92:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ed96:	d031      	beq.n	800edfc <HAL_TIM_PWM_Init+0x90>
 800ed98:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800ed9c:	428a      	cmp	r2, r1
 800ed9e:	d02d      	beq.n	800edfc <HAL_TIM_PWM_Init+0x90>
 800eda0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eda4:	428a      	cmp	r2, r1
 800eda6:	d029      	beq.n	800edfc <HAL_TIM_PWM_Init+0x90>
 800eda8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edac:	428a      	cmp	r2, r1
 800edae:	d025      	beq.n	800edfc <HAL_TIM_PWM_Init+0x90>
 800edb0:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800edb4:	428a      	cmp	r2, r1
 800edb6:	d04a      	beq.n	800ee4e <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800edb8:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800edbc:	428a      	cmp	r2, r1
 800edbe:	d021      	beq.n	800ee04 <HAL_TIM_PWM_Init+0x98>
 800edc0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edc4:	428a      	cmp	r2, r1
 800edc6:	d01d      	beq.n	800ee04 <HAL_TIM_PWM_Init+0x98>
 800edc8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800edcc:	428a      	cmp	r2, r1
 800edce:	d019      	beq.n	800ee04 <HAL_TIM_PWM_Init+0x98>
 800edd0:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800edd4:	428a      	cmp	r2, r1
 800edd6:	d015      	beq.n	800ee04 <HAL_TIM_PWM_Init+0x98>
 800edd8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eddc:	428a      	cmp	r2, r1
 800edde:	d011      	beq.n	800ee04 <HAL_TIM_PWM_Init+0x98>
 800ede0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800ede4:	428a      	cmp	r2, r1
 800ede6:	d00d      	beq.n	800ee04 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ede8:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edea:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800edec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800edf0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800edf2:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800edf4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800edf6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800edf8:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800edfa:	e010      	b.n	800ee1e <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800edfc:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800edfe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee02:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee04:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee06:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee08:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee0c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee0e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee12:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee14:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800ee16:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800ee18:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee1a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee1c:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800ee1e:	2301      	movs	r3, #1
 800ee20:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800ee22:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee26:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800ee2a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800ee2e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800ee32:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800ee36:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800ee3a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ee3e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ee42:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800ee46:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800ee4a:	2000      	movs	r0, #0
}
 800ee4c:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800ee4e:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee50:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ee52:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ee56:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800ee58:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ee5c:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ee5e:	69a1      	ldr	r1, [r4, #24]
 800ee60:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ee64:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800ee66:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ee68:	68e3      	ldr	r3, [r4, #12]
 800ee6a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800ee6c:	6863      	ldr	r3, [r4, #4]
 800ee6e:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800ee70:	6963      	ldr	r3, [r4, #20]
 800ee72:	6313      	str	r3, [r2, #48]	; 0x30
 800ee74:	e7d3      	b.n	800ee1e <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800ee76:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800ee7a:	f7ff ff75 	bl	800ed68 <HAL_TIM_PWM_MspInit>
 800ee7e:	e780      	b.n	800ed82 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800ee80:	2001      	movs	r0, #1
}
 800ee82:	4770      	bx	lr
 800ee84:	40010000 	.word	0x40010000

0800ee88 <HAL_TIM_PWM_Start>:
 800ee88:	2900      	cmp	r1, #0
 800ee8a:	d13c      	bne.n	800ef06 <HAL_TIM_PWM_Start+0x7e>
 800ee8c:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800ee90:	2b01      	cmp	r3, #1
 800ee92:	d140      	bne.n	800ef16 <HAL_TIM_PWM_Start+0x8e>
 800ee94:	2302      	movs	r3, #2
 800ee96:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800ee9a:	6803      	ldr	r3, [r0, #0]
 800ee9c:	f001 011f 	and.w	r1, r1, #31
 800eea0:	6a18      	ldr	r0, [r3, #32]
 800eea2:	2201      	movs	r2, #1
 800eea4:	408a      	lsls	r2, r1
 800eea6:	ea20 0002 	bic.w	r0, r0, r2
 800eeaa:	6218      	str	r0, [r3, #32]
 800eeac:	6a18      	ldr	r0, [r3, #32]
 800eeae:	492c      	ldr	r1, [pc, #176]	; (800ef60 <HAL_TIM_PWM_Start+0xd8>)
 800eeb0:	4302      	orrs	r2, r0
 800eeb2:	428b      	cmp	r3, r1
 800eeb4:	621a      	str	r2, [r3, #32]
 800eeb6:	d038      	beq.n	800ef2a <HAL_TIM_PWM_Start+0xa2>
 800eeb8:	4a2a      	ldr	r2, [pc, #168]	; (800ef64 <HAL_TIM_PWM_Start+0xdc>)
 800eeba:	4293      	cmp	r3, r2
 800eebc:	d035      	beq.n	800ef2a <HAL_TIM_PWM_Start+0xa2>
 800eebe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800eec2:	d015      	beq.n	800eef0 <HAL_TIM_PWM_Start+0x68>
 800eec4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800eec8:	428b      	cmp	r3, r1
 800eeca:	d011      	beq.n	800eef0 <HAL_TIM_PWM_Start+0x68>
 800eecc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eed0:	428b      	cmp	r3, r1
 800eed2:	d00d      	beq.n	800eef0 <HAL_TIM_PWM_Start+0x68>
 800eed4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800eed8:	428b      	cmp	r3, r1
 800eeda:	d009      	beq.n	800eef0 <HAL_TIM_PWM_Start+0x68>
 800eedc:	4293      	cmp	r3, r2
 800eede:	d007      	beq.n	800eef0 <HAL_TIM_PWM_Start+0x68>
 800eee0:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800eee4:	4293      	cmp	r3, r2
 800eee6:	d003      	beq.n	800eef0 <HAL_TIM_PWM_Start+0x68>
 800eee8:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800eeec:	4293      	cmp	r3, r2
 800eeee:	d104      	bne.n	800eefa <HAL_TIM_PWM_Start+0x72>
 800eef0:	689a      	ldr	r2, [r3, #8]
 800eef2:	f002 0207 	and.w	r2, r2, #7
 800eef6:	2a06      	cmp	r2, #6
 800eef8:	d020      	beq.n	800ef3c <HAL_TIM_PWM_Start+0xb4>
 800eefa:	681a      	ldr	r2, [r3, #0]
 800eefc:	f042 0201 	orr.w	r2, r2, #1
 800ef00:	2000      	movs	r0, #0
 800ef02:	601a      	str	r2, [r3, #0]
 800ef04:	4770      	bx	lr
 800ef06:	2904      	cmp	r1, #4
 800ef08:	d022      	beq.n	800ef50 <HAL_TIM_PWM_Start+0xc8>
 800ef0a:	2908      	cmp	r1, #8
 800ef0c:	d018      	beq.n	800ef40 <HAL_TIM_PWM_Start+0xb8>
 800ef0e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800ef12:	2b01      	cmp	r3, #1
 800ef14:	d001      	beq.n	800ef1a <HAL_TIM_PWM_Start+0x92>
 800ef16:	2001      	movs	r0, #1
 800ef18:	4770      	bx	lr
 800ef1a:	2904      	cmp	r1, #4
 800ef1c:	d01c      	beq.n	800ef58 <HAL_TIM_PWM_Start+0xd0>
 800ef1e:	2908      	cmp	r1, #8
 800ef20:	d012      	beq.n	800ef48 <HAL_TIM_PWM_Start+0xc0>
 800ef22:	2302      	movs	r3, #2
 800ef24:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800ef28:	e7b7      	b.n	800ee9a <HAL_TIM_PWM_Start+0x12>
 800ef2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ef2c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ef30:	645a      	str	r2, [r3, #68]	; 0x44
 800ef32:	689a      	ldr	r2, [r3, #8]
 800ef34:	f002 0207 	and.w	r2, r2, #7
 800ef38:	2a06      	cmp	r2, #6
 800ef3a:	d1de      	bne.n	800eefa <HAL_TIM_PWM_Start+0x72>
 800ef3c:	2000      	movs	r0, #0
 800ef3e:	4770      	bx	lr
 800ef40:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800ef44:	2b01      	cmp	r3, #1
 800ef46:	d1e6      	bne.n	800ef16 <HAL_TIM_PWM_Start+0x8e>
 800ef48:	2302      	movs	r3, #2
 800ef4a:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ef4e:	e7a4      	b.n	800ee9a <HAL_TIM_PWM_Start+0x12>
 800ef50:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800ef54:	2b01      	cmp	r3, #1
 800ef56:	d1de      	bne.n	800ef16 <HAL_TIM_PWM_Start+0x8e>
 800ef58:	2302      	movs	r3, #2
 800ef5a:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800ef5e:	e79c      	b.n	800ee9a <HAL_TIM_PWM_Start+0x12>
 800ef60:	40010000 	.word	0x40010000
 800ef64:	40010400 	.word	0x40010400

0800ef68 <HAL_TIM_PWM_Stop>:
 800ef68:	6803      	ldr	r3, [r0, #0]
 800ef6a:	b410      	push	{r4}
 800ef6c:	6a1a      	ldr	r2, [r3, #32]
 800ef6e:	f001 041f 	and.w	r4, r1, #31
 800ef72:	f04f 0c01 	mov.w	ip, #1
 800ef76:	fa0c fc04 	lsl.w	ip, ip, r4
 800ef7a:	ea22 020c 	bic.w	r2, r2, ip
 800ef7e:	621a      	str	r2, [r3, #32]
 800ef80:	4a20      	ldr	r2, [pc, #128]	; (800f004 <HAL_TIM_PWM_Stop+0x9c>)
 800ef82:	6a1c      	ldr	r4, [r3, #32]
 800ef84:	621c      	str	r4, [r3, #32]
 800ef86:	4293      	cmp	r3, r2
 800ef88:	d015      	beq.n	800efb6 <HAL_TIM_PWM_Stop+0x4e>
 800ef8a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ef8e:	4293      	cmp	r3, r2
 800ef90:	d011      	beq.n	800efb6 <HAL_TIM_PWM_Stop+0x4e>
 800ef92:	6a1c      	ldr	r4, [r3, #32]
 800ef94:	f241 1211 	movw	r2, #4369	; 0x1111
 800ef98:	4214      	tst	r4, r2
 800ef9a:	d104      	bne.n	800efa6 <HAL_TIM_PWM_Stop+0x3e>
 800ef9c:	6a1c      	ldr	r4, [r3, #32]
 800ef9e:	f240 4244 	movw	r2, #1092	; 0x444
 800efa2:	4214      	tst	r4, r2
 800efa4:	d022      	beq.n	800efec <HAL_TIM_PWM_Stop+0x84>
 800efa6:	2301      	movs	r3, #1
 800efa8:	b9a1      	cbnz	r1, 800efd4 <HAL_TIM_PWM_Stop+0x6c>
 800efaa:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800efae:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efb2:	2000      	movs	r0, #0
 800efb4:	4770      	bx	lr
 800efb6:	6a1c      	ldr	r4, [r3, #32]
 800efb8:	f241 1211 	movw	r2, #4369	; 0x1111
 800efbc:	4214      	tst	r4, r2
 800efbe:	d1e8      	bne.n	800ef92 <HAL_TIM_PWM_Stop+0x2a>
 800efc0:	6a1c      	ldr	r4, [r3, #32]
 800efc2:	f240 4244 	movw	r2, #1092	; 0x444
 800efc6:	4214      	tst	r4, r2
 800efc8:	d1e3      	bne.n	800ef92 <HAL_TIM_PWM_Stop+0x2a>
 800efca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800efcc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800efd0:	645a      	str	r2, [r3, #68]	; 0x44
 800efd2:	e7de      	b.n	800ef92 <HAL_TIM_PWM_Stop+0x2a>
 800efd4:	2904      	cmp	r1, #4
 800efd6:	d00e      	beq.n	800eff6 <HAL_TIM_PWM_Stop+0x8e>
 800efd8:	2908      	cmp	r1, #8
 800efda:	bf0c      	ite	eq
 800efdc:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800efe0:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800efe4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800efe8:	2000      	movs	r0, #0
 800efea:	4770      	bx	lr
 800efec:	681a      	ldr	r2, [r3, #0]
 800efee:	f022 0201 	bic.w	r2, r2, #1
 800eff2:	601a      	str	r2, [r3, #0]
 800eff4:	e7d7      	b.n	800efa6 <HAL_TIM_PWM_Stop+0x3e>
 800eff6:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800effa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800effe:	2000      	movs	r0, #0
 800f000:	4770      	bx	lr
 800f002:	bf00      	nop
 800f004:	40010000 	.word	0x40010000

0800f008 <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800f008:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f00c:	2b01      	cmp	r3, #1
 800f00e:	f000 80d2 	beq.w	800f1b6 <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800f012:	2301      	movs	r3, #1
{
 800f014:	b570      	push	{r4, r5, r6, lr}
 800f016:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800f018:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800f01c:	2a0c      	cmp	r2, #12
 800f01e:	d808      	bhi.n	800f032 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800f020:	e8df f002 	tbb	[pc, r2]
 800f024:	0707073e 	.word	0x0707073e
 800f028:	0707076b 	.word	0x0707076b
 800f02c:	0707079b 	.word	0x0707079b
 800f030:	0c          	.byte	0x0c
 800f031:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800f032:	2300      	movs	r3, #0
 800f034:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800f038:	2001      	movs	r0, #1
}
 800f03a:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800f03c:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f03e:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800f040:	6a1a      	ldr	r2, [r3, #32]
 800f042:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800f046:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f048:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f04a:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f04c:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800f04e:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f052:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f056:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800f058:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800f05c:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800f060:	4d70      	ldr	r5, [pc, #448]	; (800f224 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f062:	42ab      	cmp	r3, r5
 800f064:	f000 80c8 	beq.w	800f1f8 <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800f068:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f06c:	42ab      	cmp	r3, r5
 800f06e:	f000 80c3 	beq.w	800f1f8 <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800f072:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800f074:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800f076:	6848      	ldr	r0, [r1, #4]
 800f078:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800f07a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f07c:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f07e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800f080:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f084:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800f086:	69da      	ldr	r2, [r3, #28]
 800f088:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f08c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800f08e:	69da      	ldr	r2, [r3, #28]
 800f090:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f094:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f096:	2300      	movs	r3, #0
 800f098:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f09c:	2000      	movs	r0, #0
}
 800f09e:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800f0a0:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f0a2:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f0a4:	6a1a      	ldr	r2, [r3, #32]
 800f0a6:	f022 0201 	bic.w	r2, r2, #1
 800f0aa:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f0ac:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f0ae:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f0b0:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800f0b2:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f0b6:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800f0b8:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800f0ba:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800f0be:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800f0c0:	4d58      	ldr	r5, [pc, #352]	; (800f224 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f0c2:	42ab      	cmp	r3, r5
 800f0c4:	d079      	beq.n	800f1ba <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800f0c6:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f0ca:	42ab      	cmp	r3, r5
 800f0cc:	d075      	beq.n	800f1ba <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800f0ce:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f0d0:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800f0d2:	6848      	ldr	r0, [r1, #4]
 800f0d4:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800f0d6:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0d8:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0da:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800f0dc:	f042 0208 	orr.w	r2, r2, #8
 800f0e0:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800f0e2:	699a      	ldr	r2, [r3, #24]
 800f0e4:	f022 0204 	bic.w	r2, r2, #4
 800f0e8:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800f0ea:	699a      	ldr	r2, [r3, #24]
 800f0ec:	430a      	orrs	r2, r1
 800f0ee:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f0f0:	2300      	movs	r3, #0
 800f0f2:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f0f6:	2000      	movs	r0, #0
}
 800f0f8:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800f0fa:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f0fc:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f0fe:	6a1a      	ldr	r2, [r3, #32]
 800f100:	f022 0210 	bic.w	r2, r2, #16
 800f104:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f106:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f108:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800f10a:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800f10c:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800f110:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f114:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800f116:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800f11a:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800f11e:	4d41      	ldr	r5, [pc, #260]	; (800f224 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f120:	42ab      	cmp	r3, r5
 800f122:	d059      	beq.n	800f1d8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800f124:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f128:	42ab      	cmp	r3, r5
 800f12a:	d055      	beq.n	800f1d8 <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800f12c:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800f12e:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800f130:	6848      	ldr	r0, [r1, #4]
 800f132:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800f134:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f136:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f138:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800f13a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800f13e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800f140:	699a      	ldr	r2, [r3, #24]
 800f142:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800f146:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800f148:	699a      	ldr	r2, [r3, #24]
 800f14a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800f14e:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800f150:	2300      	movs	r3, #0
 800f152:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f156:	2000      	movs	r0, #0
}
 800f158:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800f15a:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800f15c:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800f15e:	6a1a      	ldr	r2, [r3, #32]
 800f160:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800f164:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800f166:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800f168:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800f16a:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800f16c:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800f170:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f172:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800f174:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800f178:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800f17c:	4d29      	ldr	r5, [pc, #164]	; (800f224 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800f17e:	42ab      	cmp	r3, r5
 800f180:	d040      	beq.n	800f204 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800f182:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f186:	42ab      	cmp	r3, r5
 800f188:	d03c      	beq.n	800f204 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800f18a:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800f18c:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800f18e:	6848      	ldr	r0, [r1, #4]
 800f190:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800f192:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f194:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f196:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800f198:	f042 0208 	orr.w	r2, r2, #8
 800f19c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800f19e:	69da      	ldr	r2, [r3, #28]
 800f1a0:	f022 0204 	bic.w	r2, r2, #4
 800f1a4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800f1a6:	69da      	ldr	r2, [r3, #28]
 800f1a8:	430a      	orrs	r2, r1
 800f1aa:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800f1ac:	2300      	movs	r3, #0
 800f1ae:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800f1b2:	2000      	movs	r0, #0
}
 800f1b4:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800f1b6:	2002      	movs	r0, #2
}
 800f1b8:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800f1ba:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800f1bc:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800f1c0:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1c2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800f1c6:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1ca:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800f1ce:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800f1d2:	ea4e 0404 	orr.w	r4, lr, r4
 800f1d6:	e77a      	b.n	800f0ce <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1d8:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800f1da:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800f1de:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1e2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800f1e6:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1ea:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800f1ee:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800f1f2:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800f1f6:	e799      	b.n	800f12c <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f1f8:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800f1fa:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800f1fe:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800f202:	e736      	b.n	800f072 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f204:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800f206:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800f20a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f20e:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800f212:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f216:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800f21a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800f21e:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800f222:	e7b2      	b.n	800f18a <HAL_TIM_PWM_ConfigChannel+0x182>
 800f224:	40010000 	.word	0x40010000

0800f228 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800f228:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f22c:	2b01      	cmp	r3, #1
 800f22e:	d075      	beq.n	800f31c <HAL_TIM_ConfigClockSource+0xf4>
 800f230:	4602      	mov	r2, r0
{
 800f232:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f234:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800f236:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f238:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f23c:	2001      	movs	r0, #1
 800f23e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f242:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f244:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800f248:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800f24c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800f24e:	680b      	ldr	r3, [r1, #0]
 800f250:	2b60      	cmp	r3, #96	; 0x60
 800f252:	d065      	beq.n	800f320 <HAL_TIM_ConfigClockSource+0xf8>
 800f254:	d824      	bhi.n	800f2a0 <HAL_TIM_ConfigClockSource+0x78>
 800f256:	2b40      	cmp	r3, #64	; 0x40
 800f258:	d07c      	beq.n	800f354 <HAL_TIM_ConfigClockSource+0x12c>
 800f25a:	d94b      	bls.n	800f2f4 <HAL_TIM_ConfigClockSource+0xcc>
 800f25c:	2b50      	cmp	r3, #80	; 0x50
 800f25e:	d117      	bne.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f260:	684b      	ldr	r3, [r1, #4]
 800f262:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800f264:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f266:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f26a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f26c:	6a23      	ldr	r3, [r4, #32]
 800f26e:	f023 0301 	bic.w	r3, r3, #1
 800f272:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f274:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f276:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f27a:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800f27e:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f280:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800f282:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800f284:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f288:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800f28c:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f28e:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800f290:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800f292:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f294:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f298:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800f29c:	bc30      	pop	{r4, r5}
 800f29e:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800f2a0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800f2a4:	d038      	beq.n	800f318 <HAL_TIM_ConfigClockSource+0xf0>
 800f2a6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f2aa:	d110      	bne.n	800f2ce <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2ac:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2b0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2b2:	432b      	orrs	r3, r5
 800f2b4:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2b6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2ba:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2be:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800f2c0:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2c2:	68a3      	ldr	r3, [r4, #8]
 800f2c4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800f2c8:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800f2ca:	60a3      	str	r3, [r4, #8]
      break;
 800f2cc:	e7e0      	b.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2ce:	2b70      	cmp	r3, #112	; 0x70
 800f2d0:	d1de      	bne.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2d2:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800f2d6:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2d8:	432b      	orrs	r3, r5
 800f2da:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f2dc:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f2e0:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800f2e4:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800f2e6:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800f2e8:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800f2ea:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800f2ee:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800f2f0:	60a3      	str	r3, [r4, #8]
      break;
 800f2f2:	e7cd      	b.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f2f4:	2b20      	cmp	r3, #32
 800f2f6:	d002      	beq.n	800f2fe <HAL_TIM_ConfigClockSource+0xd6>
 800f2f8:	d90a      	bls.n	800f310 <HAL_TIM_ConfigClockSource+0xe8>
 800f2fa:	2b30      	cmp	r3, #48	; 0x30
 800f2fc:	d1c8      	bne.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800f2fe:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f300:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f304:	430b      	orrs	r3, r1
 800f306:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800f30a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f30c:	60a3      	str	r3, [r4, #8]
}
 800f30e:	e7bf      	b.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800f310:	f033 0110 	bics.w	r1, r3, #16
 800f314:	d1bc      	bne.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
 800f316:	e7f2      	b.n	800f2fe <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800f318:	2000      	movs	r0, #0
 800f31a:	e7b9      	b.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800f31c:	2002      	movs	r0, #2
}
 800f31e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f320:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f322:	6848      	ldr	r0, [r1, #4]
 800f324:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f326:	f023 0310 	bic.w	r3, r3, #16
 800f32a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f32c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f32e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f330:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f334:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800f338:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f33c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800f340:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f342:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f344:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f346:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f34a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800f34e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f350:	60a3      	str	r3, [r4, #8]
}
 800f352:	e79d      	b.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f354:	684b      	ldr	r3, [r1, #4]
 800f356:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800f358:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f35a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f35e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f360:	6a23      	ldr	r3, [r4, #32]
 800f362:	f023 0301 	bic.w	r3, r3, #1
 800f366:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f368:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f36a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f36e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f372:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800f374:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800f376:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f378:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800f37c:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800f380:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800f382:	60a3      	str	r3, [r4, #8]
}
 800f384:	e784      	b.n	800f290 <HAL_TIM_ConfigClockSource+0x68>
 800f386:	bf00      	nop

0800f388 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800f388:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800f38c:	2a01      	cmp	r2, #1
 800f38e:	d050      	beq.n	800f432 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800f390:	4603      	mov	r3, r0
{
 800f392:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f394:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800f396:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f398:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800f39c:	2001      	movs	r0, #1
 800f39e:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800f3a2:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f3a4:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f3a6:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800f3a8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800f3ac:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800f3ae:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800f3b2:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800f3b4:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800f3b6:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800f3b8:	d060      	beq.n	800f47c <HAL_TIM_SlaveConfigSynchro+0xf4>
 800f3ba:	d90f      	bls.n	800f3dc <HAL_TIM_SlaveConfigSynchro+0x54>
 800f3bc:	2860      	cmp	r0, #96	; 0x60
 800f3be:	d03a      	beq.n	800f436 <HAL_TIM_SlaveConfigSynchro+0xae>
 800f3c0:	2870      	cmp	r0, #112	; 0x70
 800f3c2:	d10e      	bne.n	800f3e2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3c4:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800f3c8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3ca:	432a      	orrs	r2, r5
 800f3cc:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800f3ce:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800f3d2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800f3d6:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800f3d8:	60a2      	str	r2, [r4, #8]
 800f3da:	e00f      	b.n	800f3fc <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800f3dc:	2840      	cmp	r0, #64	; 0x40
 800f3de:	d03d      	beq.n	800f45c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800f3e0:	d907      	bls.n	800f3f2 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800f3e2:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f3e4:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f3e6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f3ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800f3ee:	bc30      	pop	{r4, r5}
 800f3f0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f3f2:	2820      	cmp	r0, #32
 800f3f4:	d002      	beq.n	800f3fc <HAL_TIM_SlaveConfigSynchro+0x74>
 800f3f6:	d912      	bls.n	800f41e <HAL_TIM_SlaveConfigSynchro+0x96>
 800f3f8:	2830      	cmp	r0, #48	; 0x30
 800f3fa:	d1f2      	bne.n	800f3e2 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800f3fc:	68e2      	ldr	r2, [r4, #12]
 800f3fe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800f402:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f404:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800f406:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800f408:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800f40a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800f40e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800f410:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f414:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800f418:	4608      	mov	r0, r1
}
 800f41a:	bc30      	pop	{r4, r5}
 800f41c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800f41e:	f030 0210 	bics.w	r2, r0, #16
 800f422:	d0eb      	beq.n	800f3fc <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800f424:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800f426:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800f428:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800f42c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800f430:	e7dd      	b.n	800f3ee <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800f432:	2002      	movs	r0, #2
}
 800f434:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f436:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800f438:	6888      	ldr	r0, [r1, #8]
 800f43a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800f43c:	f022 0210 	bic.w	r2, r2, #16
 800f440:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f442:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800f444:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800f446:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800f44a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800f44e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800f452:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800f456:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800f458:	6222      	str	r2, [r4, #32]
 800f45a:	e7cf      	b.n	800f3fc <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800f45c:	2d05      	cmp	r5, #5
 800f45e:	d0c0      	beq.n	800f3e2 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800f460:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f462:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f464:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800f466:	f022 0201 	bic.w	r2, r2, #1
 800f46a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800f46c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f46e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800f472:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800f476:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800f478:	6220      	str	r0, [r4, #32]
      break;
 800f47a:	e7bf      	b.n	800f3fc <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800f47c:	688a      	ldr	r2, [r1, #8]
 800f47e:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800f480:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800f482:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800f486:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800f488:	6a22      	ldr	r2, [r4, #32]
 800f48a:	f022 0201 	bic.w	r2, r2, #1
 800f48e:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800f490:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800f492:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800f496:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800f49a:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800f49c:	6221      	str	r1, [r4, #32]
 800f49e:	e7ad      	b.n	800f3fc <HAL_TIM_SlaveConfigSynchro+0x74>

0800f4a0 <HAL_TIM_OC_DelayElapsedCallback>:
 800f4a0:	4770      	bx	lr
 800f4a2:	bf00      	nop

0800f4a4 <HAL_TIM_IC_CaptureCallback>:
 800f4a4:	4770      	bx	lr
 800f4a6:	bf00      	nop

0800f4a8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800f4a8:	4770      	bx	lr
 800f4aa:	bf00      	nop

0800f4ac <HAL_TIM_TriggerCallback>:
 800f4ac:	4770      	bx	lr
 800f4ae:	bf00      	nop

0800f4b0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f4b0:	6803      	ldr	r3, [r0, #0]
 800f4b2:	691a      	ldr	r2, [r3, #16]
 800f4b4:	0791      	lsls	r1, r2, #30
{
 800f4b6:	b510      	push	{r4, lr}
 800f4b8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800f4ba:	d502      	bpl.n	800f4c2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800f4bc:	68da      	ldr	r2, [r3, #12]
 800f4be:	0792      	lsls	r2, r2, #30
 800f4c0:	d45f      	bmi.n	800f582 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f4c2:	691a      	ldr	r2, [r3, #16]
 800f4c4:	0750      	lsls	r0, r2, #29
 800f4c6:	d502      	bpl.n	800f4ce <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800f4c8:	68da      	ldr	r2, [r3, #12]
 800f4ca:	0751      	lsls	r1, r2, #29
 800f4cc:	d446      	bmi.n	800f55c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f4ce:	691a      	ldr	r2, [r3, #16]
 800f4d0:	0712      	lsls	r2, r2, #28
 800f4d2:	d502      	bpl.n	800f4da <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800f4d4:	68da      	ldr	r2, [r3, #12]
 800f4d6:	0710      	lsls	r0, r2, #28
 800f4d8:	d42e      	bmi.n	800f538 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f4da:	691a      	ldr	r2, [r3, #16]
 800f4dc:	06d2      	lsls	r2, r2, #27
 800f4de:	d502      	bpl.n	800f4e6 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800f4e0:	68da      	ldr	r2, [r3, #12]
 800f4e2:	06d0      	lsls	r0, r2, #27
 800f4e4:	d418      	bmi.n	800f518 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f4e6:	691a      	ldr	r2, [r3, #16]
 800f4e8:	07d1      	lsls	r1, r2, #31
 800f4ea:	d502      	bpl.n	800f4f2 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800f4ec:	68da      	ldr	r2, [r3, #12]
 800f4ee:	07d2      	lsls	r2, r2, #31
 800f4f0:	d45d      	bmi.n	800f5ae <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f4f2:	691a      	ldr	r2, [r3, #16]
 800f4f4:	0610      	lsls	r0, r2, #24
 800f4f6:	d502      	bpl.n	800f4fe <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800f4f8:	68da      	ldr	r2, [r3, #12]
 800f4fa:	0611      	lsls	r1, r2, #24
 800f4fc:	d45f      	bmi.n	800f5be <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f4fe:	691a      	ldr	r2, [r3, #16]
 800f500:	0652      	lsls	r2, r2, #25
 800f502:	d502      	bpl.n	800f50a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800f504:	68da      	ldr	r2, [r3, #12]
 800f506:	0650      	lsls	r0, r2, #25
 800f508:	d461      	bmi.n	800f5ce <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f50a:	691a      	ldr	r2, [r3, #16]
 800f50c:	0691      	lsls	r1, r2, #26
 800f50e:	d502      	bpl.n	800f516 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800f510:	68da      	ldr	r2, [r3, #12]
 800f512:	0692      	lsls	r2, r2, #26
 800f514:	d443      	bmi.n	800f59e <HAL_TIM_IRQHandler+0xee>
}
 800f516:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f518:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f51c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800f51e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800f520:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f522:	69db      	ldr	r3, [r3, #28]
 800f524:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f528:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800f52a:	d064      	beq.n	800f5f6 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800f52c:	f7ff ffba 	bl	800f4a4 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f530:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800f532:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f534:	7722      	strb	r2, [r4, #28]
 800f536:	e7d6      	b.n	800f4e6 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f538:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f53c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800f53e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800f540:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f542:	69db      	ldr	r3, [r3, #28]
 800f544:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800f546:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800f548:	d152      	bne.n	800f5f0 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f54a:	f7ff ffa9 	bl	800f4a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f54e:	4620      	mov	r0, r4
 800f550:	f7ff ffaa 	bl	800f4a8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f554:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800f556:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f558:	7722      	strb	r2, [r4, #28]
 800f55a:	e7be      	b.n	800f4da <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f55c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f560:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800f562:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800f564:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f566:	699b      	ldr	r3, [r3, #24]
 800f568:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800f56c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800f56e:	d13c      	bne.n	800f5ea <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f570:	f7ff ff96 	bl	800f4a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f574:	4620      	mov	r0, r4
 800f576:	f7ff ff97 	bl	800f4a8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f57a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800f57c:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f57e:	7722      	strb	r2, [r4, #28]
 800f580:	e7a5      	b.n	800f4ce <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f582:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f586:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800f588:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800f58a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800f58c:	699b      	ldr	r3, [r3, #24]
 800f58e:	079b      	lsls	r3, r3, #30
 800f590:	d025      	beq.n	800f5de <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800f592:	f7ff ff87 	bl	800f4a4 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f596:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800f598:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800f59a:	7722      	strb	r2, [r4, #28]
 800f59c:	e791      	b.n	800f4c2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f59e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800f5a2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800f5a4:	611a      	str	r2, [r3, #16]
}
 800f5a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800f5aa:	f000 b86b 	b.w	800f684 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800f5ae:	f06f 0201 	mvn.w	r2, #1
 800f5b2:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800f5b4:	4620      	mov	r0, r4
 800f5b6:	f7f2 fcb3 	bl	8001f20 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800f5ba:	6823      	ldr	r3, [r4, #0]
 800f5bc:	e799      	b.n	800f4f2 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800f5be:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800f5c2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800f5c4:	4620      	mov	r0, r4
 800f5c6:	f000 f85f 	bl	800f688 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800f5ca:	6823      	ldr	r3, [r4, #0]
 800f5cc:	e797      	b.n	800f4fe <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800f5ce:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800f5d2:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800f5d4:	4620      	mov	r0, r4
 800f5d6:	f7ff ff69 	bl	800f4ac <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800f5da:	6823      	ldr	r3, [r4, #0]
 800f5dc:	e795      	b.n	800f50a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800f5de:	f7ff ff5f 	bl	800f4a0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f5e2:	4620      	mov	r0, r4
 800f5e4:	f7ff ff60 	bl	800f4a8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f5e8:	e7d5      	b.n	800f596 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800f5ea:	f7ff ff5b 	bl	800f4a4 <HAL_TIM_IC_CaptureCallback>
 800f5ee:	e7c4      	b.n	800f57a <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800f5f0:	f7ff ff58 	bl	800f4a4 <HAL_TIM_IC_CaptureCallback>
 800f5f4:	e7ae      	b.n	800f554 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800f5f6:	f7ff ff53 	bl	800f4a0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800f5fa:	4620      	mov	r0, r4
 800f5fc:	f7ff ff54 	bl	800f4a8 <HAL_TIM_PWM_PulseFinishedCallback>
 800f600:	e796      	b.n	800f530 <HAL_TIM_IRQHandler+0x80>
 800f602:	bf00      	nop

0800f604 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800f604:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800f608:	2b01      	cmp	r3, #1
 800f60a:	d037      	beq.n	800f67c <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800f60c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800f60e:	2202      	movs	r2, #2
{
 800f610:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800f612:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800f616:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f618:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800f61a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800f61c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800f620:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800f622:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800f624:	4a16      	ldr	r2, [pc, #88]	; (800f680 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800f626:	4293      	cmp	r3, r2
 800f628:	d01a      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f62a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800f62e:	d017      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f630:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800f634:	4293      	cmp	r3, r2
 800f636:	d013      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f638:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f63c:	4293      	cmp	r3, r2
 800f63e:	d00f      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f640:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800f644:	4293      	cmp	r3, r2
 800f646:	d00b      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f648:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800f64c:	4293      	cmp	r3, r2
 800f64e:	d007      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f650:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800f654:	4293      	cmp	r3, r2
 800f656:	d003      	beq.n	800f660 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800f658:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800f65c:	4293      	cmp	r3, r2
 800f65e:	d104      	bne.n	800f66a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f660:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800f662:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800f666:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800f668:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800f66a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800f66c:	2201      	movs	r2, #1
 800f66e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800f672:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800f676:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800f678:	4618      	mov	r0, r3
}
 800f67a:	4770      	bx	lr
  __HAL_LOCK(htim);
 800f67c:	2002      	movs	r0, #2
}
 800f67e:	4770      	bx	lr
 800f680:	40010000 	.word	0x40010000

0800f684 <HAL_TIMEx_CommutCallback>:
 800f684:	4770      	bx	lr
 800f686:	bf00      	nop

0800f688 <HAL_TIMEx_BreakCallback>:
 800f688:	4770      	bx	lr
 800f68a:	bf00      	nop

0800f68c <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f68c:	680b      	ldr	r3, [r1, #0]
{
 800f68e:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800f690:	b9d3      	cbnz	r3, 800f6c8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f692:	6803      	ldr	r3, [r0, #0]
 800f694:	684c      	ldr	r4, [r1, #4]
 800f696:	688a      	ldr	r2, [r1, #8]
 800f698:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f69c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f6a0:	4323      	orrs	r3, r4
 800f6a2:	4313      	orrs	r3, r2
 800f6a4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800f6a8:	4323      	orrs	r3, r4
 800f6aa:	4313      	orrs	r3, r2
 800f6ac:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800f6b0:	4323      	orrs	r3, r4
 800f6b2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800f6b6:	4313      	orrs	r3, r2
 800f6b8:	432b      	orrs	r3, r5
 800f6ba:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f6bc:	4323      	orrs	r3, r4
 800f6be:	4313      	orrs	r3, r2
 800f6c0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800f6c2:	bc30      	pop	{r4, r5}
 800f6c4:	2000      	movs	r0, #0
 800f6c6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6c8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800f6cc:	6803      	ldr	r3, [r0, #0]
 800f6ce:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800f6d2:	4323      	orrs	r3, r4
 800f6d4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800f6d6:	4313      	orrs	r3, r2
 800f6d8:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6da:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800f6dc:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800f6de:	6843      	ldr	r3, [r0, #4]
 800f6e0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800f6e4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800f6e8:	4313      	orrs	r3, r2
 800f6ea:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f6ee:	4323      	orrs	r3, r4
 800f6f0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f6f4:	4313      	orrs	r3, r2
 800f6f6:	432b      	orrs	r3, r5
 800f6f8:	698a      	ldr	r2, [r1, #24]
 800f6fa:	4323      	orrs	r3, r4
 800f6fc:	4313      	orrs	r3, r2
 800f6fe:	6043      	str	r3, [r0, #4]
}
 800f700:	bc30      	pop	{r4, r5}
 800f702:	2000      	movs	r0, #0
 800f704:	4770      	bx	lr
 800f706:	bf00      	nop

0800f708 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800f708:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f70a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800f70c:	bb02      	cbnz	r2, 800f750 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f70e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f712:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f716:	3c01      	subs	r4, #1
 800f718:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f71c:	3a01      	subs	r2, #1
 800f71e:	4313      	orrs	r3, r2
 800f720:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800f724:	3c01      	subs	r4, #1
 800f726:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800f72a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800f72e:	3a01      	subs	r2, #1
 800f730:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800f734:	698a      	ldr	r2, [r1, #24]
 800f736:	1e69      	subs	r1, r5, #1
 800f738:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f73c:	1e61      	subs	r1, r4, #1
 800f73e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800f742:	3a01      	subs	r2, #1
 800f744:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f748:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800f74a:	bc30      	pop	{r4, r5}
 800f74c:	2000      	movs	r0, #0
 800f74e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f750:	68cc      	ldr	r4, [r1, #12]
 800f752:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f754:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800f756:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800f75a:	3c01      	subs	r4, #1
 800f75c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800f760:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800f764:	3a01      	subs	r2, #1
 800f766:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800f76a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800f76c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800f770:	68c3      	ldr	r3, [r0, #12]
 800f772:	3c01      	subs	r4, #1
 800f774:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800f778:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800f77c:	3a01      	subs	r2, #1
 800f77e:	690c      	ldr	r4, [r1, #16]
 800f780:	4313      	orrs	r3, r2
 800f782:	698a      	ldr	r2, [r1, #24]
 800f784:	1e69      	subs	r1, r5, #1
 800f786:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800f78a:	1e61      	subs	r1, r4, #1
 800f78c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800f790:	3a01      	subs	r2, #1
 800f792:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800f796:	60c3      	str	r3, [r0, #12]
}
 800f798:	bc30      	pop	{r4, r5}
 800f79a:	2000      	movs	r0, #0
 800f79c:	4770      	bx	lr
 800f79e:	bf00      	nop

0800f7a0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800f7a0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7a2:	680b      	ldr	r3, [r1, #0]
{
 800f7a4:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7a6:	684a      	ldr	r2, [r1, #4]
{
 800f7a8:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800f7aa:	4313      	orrs	r3, r2
 800f7ac:	6900      	ldr	r0, [r0, #16]
 800f7ae:	68ca      	ldr	r2, [r1, #12]
 800f7b0:	0d80      	lsrs	r0, r0, #22
 800f7b2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800f7b6:	688a      	ldr	r2, [r1, #8]
 800f7b8:	0580      	lsls	r0, r0, #22
 800f7ba:	4303      	orrs	r3, r0
 800f7bc:	3a01      	subs	r2, #1
 800f7be:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800f7c2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800f7c4:	f7fb fef6 	bl	800b5b4 <HAL_GetTick>
 800f7c8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7ca:	1c6b      	adds	r3, r5, #1
 800f7cc:	d105      	bne.n	800f7da <FMC_SDRAM_SendCommand+0x3a>
 800f7ce:	69a3      	ldr	r3, [r4, #24]
 800f7d0:	f013 0320 	ands.w	r3, r3, #32
 800f7d4:	d1fb      	bne.n	800f7ce <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800f7d6:	4618      	mov	r0, r3
}
 800f7d8:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800f7da:	69a3      	ldr	r3, [r4, #24]
 800f7dc:	f013 0320 	ands.w	r3, r3, #32
 800f7e0:	d0f9      	beq.n	800f7d6 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800f7e2:	b125      	cbz	r5, 800f7ee <FMC_SDRAM_SendCommand+0x4e>
 800f7e4:	f7fb fee6 	bl	800b5b4 <HAL_GetTick>
 800f7e8:	1b80      	subs	r0, r0, r6
 800f7ea:	42a8      	cmp	r0, r5
 800f7ec:	d9ed      	bls.n	800f7ca <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800f7ee:	2003      	movs	r0, #3
}
 800f7f0:	bd70      	pop	{r4, r5, r6, pc}
 800f7f2:	bf00      	nop

0800f7f4 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f7f4:	6943      	ldr	r3, [r0, #20]
 800f7f6:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800f7fa:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f7fc:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800f800:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800f804:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800f806:	6151      	str	r1, [r2, #20]
}
 800f808:	4770      	bx	lr
 800f80a:	bf00      	nop

0800f80c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800f80c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800f80e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f812:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800f814:	f002 fafe 	bl	8011e14 <xTaskGetSchedulerState>
 800f818:	2801      	cmp	r0, #1
 800f81a:	d100      	bne.n	800f81e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800f81c:	bd08      	pop	{r3, pc}
 800f81e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800f822:	f000 bc3f 	b.w	80100a4 <xPortSysTickHandler>
 800f826:	bf00      	nop

0800f828 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800f828:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800f82c:	b92b      	cbnz	r3, 800f83a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800f82e:	4b06      	ldr	r3, [pc, #24]	; (800f848 <osKernelInitialize+0x20>)
 800f830:	6818      	ldr	r0, [r3, #0]
 800f832:	b928      	cbnz	r0, 800f840 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800f834:	2201      	movs	r2, #1
 800f836:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800f838:	4770      	bx	lr
    stat = osErrorISR;
 800f83a:	f06f 0005 	mvn.w	r0, #5
 800f83e:	4770      	bx	lr
    } else {
      stat = osError;
 800f840:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800f844:	4770      	bx	lr
 800f846:	bf00      	nop
 800f848:	20002cf0 	.word	0x20002cf0

0800f84c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800f84c:	b510      	push	{r4, lr}
 800f84e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f852:	b974      	cbnz	r4, 800f872 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800f854:	4b08      	ldr	r3, [pc, #32]	; (800f878 <osKernelStart+0x2c>)
 800f856:	681a      	ldr	r2, [r3, #0]
 800f858:	2a01      	cmp	r2, #1
 800f85a:	d107      	bne.n	800f86c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800f85c:	4907      	ldr	r1, [pc, #28]	; (800f87c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800f85e:	2202      	movs	r2, #2
 800f860:	77cc      	strb	r4, [r1, #31]
 800f862:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800f864:	f002 f8b0 	bl	80119c8 <vTaskStartScheduler>
      stat = osOK;
 800f868:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800f86a:	bd10      	pop	{r4, pc}
      stat = osError;
 800f86c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800f870:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f872:	f06f 0005 	mvn.w	r0, #5
}
 800f876:	bd10      	pop	{r4, pc}
 800f878:	20002cf0 	.word	0x20002cf0
 800f87c:	e000ed00 	.word	0xe000ed00

0800f880 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f880:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f882:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800f884:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800f886:	4615      	mov	r5, r2
  hTask = NULL;
 800f888:	9405      	str	r4, [sp, #20]
 800f88a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800f88e:	b9ea      	cbnz	r2, 800f8cc <osThreadNew+0x4c>
 800f890:	b350      	cbz	r0, 800f8e8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800f892:	b1f5      	cbz	r5, 800f8d2 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800f894:	69ab      	ldr	r3, [r5, #24]
 800f896:	bb5b      	cbnz	r3, 800f8f0 <osThreadNew+0x70>
 800f898:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f89a:	686a      	ldr	r2, [r5, #4]
 800f89c:	07d2      	lsls	r2, r2, #31
 800f89e:	d423      	bmi.n	800f8e8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800f8a0:	696e      	ldr	r6, [r5, #20]
 800f8a2:	b34e      	cbz	r6, 800f8f8 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800f8a4:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8a8:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800f8aa:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8ac:	b34c      	cbz	r4, 800f902 <osThreadNew+0x82>
 800f8ae:	68ea      	ldr	r2, [r5, #12]
 800f8b0:	2aab      	cmp	r2, #171	; 0xab
 800f8b2:	d919      	bls.n	800f8e8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f8b4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800f8b6:	b1bd      	cbz	r5, 800f8e8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800f8b8:	b1b6      	cbz	r6, 800f8e8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800f8ba:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800f8be:	9300      	str	r3, [sp, #0]
 800f8c0:	4662      	mov	r2, ip
 800f8c2:	460b      	mov	r3, r1
 800f8c4:	4639      	mov	r1, r7
 800f8c6:	f001 ffbd 	bl	8011844 <xTaskCreateStatic>
 800f8ca:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800f8cc:	4620      	mov	r0, r4
 800f8ce:	b007      	add	sp, #28
 800f8d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8d2:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800f8d4:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f8d6:	ac05      	add	r4, sp, #20
 800f8d8:	9300      	str	r3, [sp, #0]
 800f8da:	9401      	str	r4, [sp, #4]
 800f8dc:	460b      	mov	r3, r1
 800f8de:	4629      	mov	r1, r5
 800f8e0:	f001 ffea 	bl	80118b8 <xTaskCreate>
 800f8e4:	2801      	cmp	r0, #1
 800f8e6:	d00a      	beq.n	800f8fe <osThreadNew+0x7e>
        return (NULL);
 800f8e8:	2400      	movs	r4, #0
}
 800f8ea:	4620      	mov	r0, r4
 800f8ec:	b007      	add	sp, #28
 800f8ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800f8f0:	1e5c      	subs	r4, r3, #1
 800f8f2:	2c37      	cmp	r4, #55	; 0x37
 800f8f4:	d9d1      	bls.n	800f89a <osThreadNew+0x1a>
 800f8f6:	e7f7      	b.n	800f8e8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800f8f8:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f8fc:	e7d4      	b.n	800f8a8 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800f8fe:	9c05      	ldr	r4, [sp, #20]
 800f900:	e7e4      	b.n	800f8cc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800f902:	68ee      	ldr	r6, [r5, #12]
 800f904:	2e00      	cmp	r6, #0
 800f906:	d1e1      	bne.n	800f8cc <osThreadNew+0x4c>
 800f908:	692d      	ldr	r5, [r5, #16]
 800f90a:	2d00      	cmp	r5, #0
 800f90c:	d1de      	bne.n	800f8cc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800f90e:	fa1f f28c 	uxth.w	r2, ip
 800f912:	463d      	mov	r5, r7
 800f914:	e7df      	b.n	800f8d6 <osThreadNew+0x56>
 800f916:	bf00      	nop

0800f918 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800f918:	b510      	push	{r4, lr}
 800f91a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800f91e:	b92c      	cbnz	r4, 800f92c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800f920:	b900      	cbnz	r0, 800f924 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800f922:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800f924:	f001 fffa 	bl	801191c <vTaskDelay>
    stat = osOK;
 800f928:	4620      	mov	r0, r4
}
 800f92a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800f92c:	f06f 0005 	mvn.w	r0, #5
}
 800f930:	bd10      	pop	{r4, pc}
 800f932:	bf00      	nop

0800f934 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800f934:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f936:	b083      	sub	sp, #12
 800f938:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800f93c:	b9fe      	cbnz	r6, 800f97e <osSemaphoreNew+0x4a>
 800f93e:	b1f0      	cbz	r0, 800f97e <osSemaphoreNew+0x4a>
 800f940:	4288      	cmp	r0, r1
 800f942:	460f      	mov	r7, r1
 800f944:	d31b      	bcc.n	800f97e <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800f946:	4615      	mov	r5, r2
 800f948:	b192      	cbz	r2, 800f970 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800f94a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800f94e:	b1d2      	cbz	r2, 800f986 <osSemaphoreNew+0x52>
 800f950:	2b4f      	cmp	r3, #79	; 0x4f
 800f952:	d914      	bls.n	800f97e <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800f954:	2801      	cmp	r0, #1
 800f956:	d038      	beq.n	800f9ca <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800f958:	f000 fd8a 	bl	8010470 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800f95c:	4604      	mov	r4, r0
 800f95e:	b170      	cbz	r0, 800f97e <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800f960:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800f962:	4620      	mov	r0, r4
 800f964:	4629      	mov	r1, r5
 800f966:	f001 fc35 	bl	80111d4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800f96a:	4620      	mov	r0, r4
 800f96c:	b003      	add	sp, #12
 800f96e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800f970:	2801      	cmp	r0, #1
 800f972:	d012      	beq.n	800f99a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f974:	f000 fddc 	bl	8010530 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f978:	4604      	mov	r4, r0
 800f97a:	2800      	cmp	r0, #0
 800f97c:	d1f1      	bne.n	800f962 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800f97e:	2400      	movs	r4, #0
}
 800f980:	4620      	mov	r0, r4
 800f982:	b003      	add	sp, #12
 800f984:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800f986:	2b00      	cmp	r3, #0
 800f988:	d1f9      	bne.n	800f97e <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800f98a:	2801      	cmp	r0, #1
 800f98c:	d005      	beq.n	800f99a <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800f98e:	f000 fdcf 	bl	8010530 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800f992:	4604      	mov	r4, r0
 800f994:	2800      	cmp	r0, #0
 800f996:	d1e3      	bne.n	800f960 <osSemaphoreNew+0x2c>
 800f998:	e7f1      	b.n	800f97e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800f99a:	2203      	movs	r2, #3
 800f99c:	2100      	movs	r1, #0
 800f99e:	2001      	movs	r0, #1
 800f9a0:	f000 fd24 	bl	80103ec <xQueueGenericCreate>
 800f9a4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800f9a6:	2c00      	cmp	r4, #0
 800f9a8:	d0e9      	beq.n	800f97e <osSemaphoreNew+0x4a>
 800f9aa:	b917      	cbnz	r7, 800f9b2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800f9ac:	2d00      	cmp	r5, #0
 800f9ae:	d1d7      	bne.n	800f960 <osSemaphoreNew+0x2c>
 800f9b0:	e7d7      	b.n	800f962 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800f9b2:	2300      	movs	r3, #0
 800f9b4:	461a      	mov	r2, r3
 800f9b6:	4619      	mov	r1, r3
 800f9b8:	4620      	mov	r0, r4
 800f9ba:	f000 fdff 	bl	80105bc <xQueueGenericSend>
 800f9be:	2801      	cmp	r0, #1
 800f9c0:	d0f4      	beq.n	800f9ac <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800f9c2:	4620      	mov	r0, r4
 800f9c4:	f001 fbc0 	bl	8011148 <vQueueDelete>
 800f9c8:	e7d9      	b.n	800f97e <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800f9ca:	4613      	mov	r3, r2
 800f9cc:	2203      	movs	r2, #3
 800f9ce:	9200      	str	r2, [sp, #0]
 800f9d0:	4631      	mov	r1, r6
 800f9d2:	4632      	mov	r2, r6
 800f9d4:	f000 fc9c 	bl	8010310 <xQueueGenericCreateStatic>
 800f9d8:	4604      	mov	r4, r0
 800f9da:	e7e4      	b.n	800f9a6 <osSemaphoreNew+0x72>

0800f9dc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800f9dc:	b370      	cbz	r0, 800fa3c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800f9de:	b510      	push	{r4, lr}
 800f9e0:	460c      	mov	r4, r1
 800f9e2:	b082      	sub	sp, #8
 800f9e4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800f9e8:	b1c3      	cbz	r3, 800fa1c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800f9ea:	bb21      	cbnz	r1, 800fa36 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f9ec:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800f9ee:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800f9f0:	f001 fb28 	bl	8011044 <xQueueReceiveFromISR>
 800f9f4:	2801      	cmp	r0, #1
 800f9f6:	d11a      	bne.n	800fa2e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800f9f8:	9b01      	ldr	r3, [sp, #4]
 800f9fa:	b913      	cbnz	r3, 800fa02 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800f9fc:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800f9fe:	b002      	add	sp, #8
 800fa00:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800fa02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa0e:	f3bf 8f4f 	dsb	sy
 800fa12:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa16:	4620      	mov	r0, r4
}
 800fa18:	b002      	add	sp, #8
 800fa1a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800fa1c:	f001 f988 	bl	8010d30 <xQueueSemaphoreTake>
 800fa20:	2801      	cmp	r0, #1
 800fa22:	d0eb      	beq.n	800f9fc <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800fa24:	b11c      	cbz	r4, 800fa2e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800fa26:	f06f 0001 	mvn.w	r0, #1
}
 800fa2a:	b002      	add	sp, #8
 800fa2c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800fa2e:	f06f 0002 	mvn.w	r0, #2
}
 800fa32:	b002      	add	sp, #8
 800fa34:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800fa36:	f06f 0003 	mvn.w	r0, #3
 800fa3a:	e7e0      	b.n	800f9fe <osSemaphoreAcquire+0x22>
 800fa3c:	f06f 0003 	mvn.w	r0, #3
}
 800fa40:	4770      	bx	lr
 800fa42:	bf00      	nop

0800fa44 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800fa44:	b330      	cbz	r0, 800fa94 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800fa46:	b510      	push	{r4, lr}
 800fa48:	b082      	sub	sp, #8
 800fa4a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800fa4e:	b1ab      	cbz	r3, 800fa7c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800fa50:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa52:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800fa54:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800fa56:	f000 ff95 	bl	8010984 <xQueueGiveFromISR>
 800fa5a:	2801      	cmp	r0, #1
 800fa5c:	d117      	bne.n	800fa8e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800fa5e:	9b01      	ldr	r3, [sp, #4]
 800fa60:	b193      	cbz	r3, 800fa88 <osSemaphoreRelease+0x44>
 800fa62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fa66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fa6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fa6e:	f3bf 8f4f 	dsb	sy
 800fa72:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fa76:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800fa78:	b002      	add	sp, #8
 800fa7a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800fa7c:	461a      	mov	r2, r3
 800fa7e:	4619      	mov	r1, r3
 800fa80:	f000 fd9c 	bl	80105bc <xQueueGenericSend>
 800fa84:	2801      	cmp	r0, #1
 800fa86:	d102      	bne.n	800fa8e <osSemaphoreRelease+0x4a>
  stat = osOK;
 800fa88:	2000      	movs	r0, #0
}
 800fa8a:	b002      	add	sp, #8
 800fa8c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800fa8e:	f06f 0002 	mvn.w	r0, #2
 800fa92:	e7fa      	b.n	800fa8a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800fa94:	f06f 0003 	mvn.w	r0, #3
}
 800fa98:	4770      	bx	lr
 800fa9a:	bf00      	nop

0800fa9c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800fa9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa9e:	b085      	sub	sp, #20
 800faa0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800faa4:	b987      	cbnz	r7, 800fac8 <osMessageQueueNew+0x2c>
 800faa6:	4605      	mov	r5, r0
 800faa8:	b170      	cbz	r0, 800fac8 <osMessageQueueNew+0x2c>
 800faaa:	b169      	cbz	r1, 800fac8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800faac:	4614      	mov	r4, r2
 800faae:	b1ea      	cbz	r2, 800faec <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fab0:	6893      	ldr	r3, [r2, #8]
 800fab2:	b163      	cbz	r3, 800face <osMessageQueueNew+0x32>
 800fab4:	68d2      	ldr	r2, [r2, #12]
 800fab6:	2a4f      	cmp	r2, #79	; 0x4f
 800fab8:	d906      	bls.n	800fac8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800faba:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800fabc:	b122      	cbz	r2, 800fac8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800fabe:	6966      	ldr	r6, [r4, #20]
 800fac0:	fb01 f505 	mul.w	r5, r1, r5
 800fac4:	42ae      	cmp	r6, r5
 800fac6:	d21c      	bcs.n	800fb02 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800fac8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800faca:	b005      	add	sp, #20
 800facc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800face:	68d3      	ldr	r3, [r2, #12]
 800fad0:	2b00      	cmp	r3, #0
 800fad2:	d1f9      	bne.n	800fac8 <osMessageQueueNew+0x2c>
 800fad4:	6913      	ldr	r3, [r2, #16]
 800fad6:	2b00      	cmp	r3, #0
 800fad8:	d1f6      	bne.n	800fac8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800fada:	6952      	ldr	r2, [r2, #20]
 800fadc:	2a00      	cmp	r2, #0
 800fade:	d1f3      	bne.n	800fac8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800fae0:	f000 fc84 	bl	80103ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800fae4:	2800      	cmp	r0, #0
 800fae6:	d0ef      	beq.n	800fac8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800fae8:	6824      	ldr	r4, [r4, #0]
 800faea:	e003      	b.n	800faf4 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800faec:	f000 fc7e 	bl	80103ec <xQueueGenericCreate>
    if (hQueue != NULL) {
 800faf0:	2800      	cmp	r0, #0
 800faf2:	d0e9      	beq.n	800fac8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800faf4:	4621      	mov	r1, r4
 800faf6:	9003      	str	r0, [sp, #12]
 800faf8:	f001 fb6c 	bl	80111d4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800fafc:	9803      	ldr	r0, [sp, #12]
}
 800fafe:	b005      	add	sp, #20
 800fb00:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800fb02:	9700      	str	r7, [sp, #0]
 800fb04:	f000 fc04 	bl	8010310 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800fb08:	2800      	cmp	r0, #0
 800fb0a:	d1ed      	bne.n	800fae8 <osMessageQueueNew+0x4c>
 800fb0c:	e7dc      	b.n	800fac8 <osMessageQueueNew+0x2c>
 800fb0e:	bf00      	nop

0800fb10 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800fb10:	b570      	push	{r4, r5, r6, lr}
 800fb12:	461c      	mov	r4, r3
 800fb14:	b082      	sub	sp, #8
 800fb16:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb1a:	b1be      	cbz	r6, 800fb4c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fb1c:	b350      	cbz	r0, 800fb74 <osMessageQueuePut+0x64>
 800fb1e:	b349      	cbz	r1, 800fb74 <osMessageQueuePut+0x64>
 800fb20:	bb43      	cbnz	r3, 800fb74 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb22:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb24:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800fb26:	f000 fec7 	bl	80108b8 <xQueueGenericSendFromISR>
 800fb2a:	2801      	cmp	r0, #1
 800fb2c:	d11e      	bne.n	800fb6c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb2e:	9b01      	ldr	r3, [sp, #4]
 800fb30:	b1cb      	cbz	r3, 800fb66 <osMessageQueuePut+0x56>
 800fb32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fb36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fb3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb3e:	f3bf 8f4f 	dsb	sy
 800fb42:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fb46:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fb48:	b002      	add	sp, #8
 800fb4a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fb4c:	b190      	cbz	r0, 800fb74 <osMessageQueuePut+0x64>
 800fb4e:	b189      	cbz	r1, 800fb74 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fb50:	4633      	mov	r3, r6
 800fb52:	4622      	mov	r2, r4
 800fb54:	f000 fd32 	bl	80105bc <xQueueGenericSend>
 800fb58:	2801      	cmp	r0, #1
 800fb5a:	d004      	beq.n	800fb66 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800fb5c:	b134      	cbz	r4, 800fb6c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800fb5e:	f06f 0001 	mvn.w	r0, #1
}
 800fb62:	b002      	add	sp, #8
 800fb64:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800fb66:	2000      	movs	r0, #0
}
 800fb68:	b002      	add	sp, #8
 800fb6a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800fb6c:	f06f 0002 	mvn.w	r0, #2
}
 800fb70:	b002      	add	sp, #8
 800fb72:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800fb74:	f06f 0003 	mvn.w	r0, #3
 800fb78:	e7e6      	b.n	800fb48 <osMessageQueuePut+0x38>
 800fb7a:	bf00      	nop

0800fb7c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800fb7c:	b530      	push	{r4, r5, lr}
 800fb7e:	461c      	mov	r4, r3
 800fb80:	b083      	sub	sp, #12
 800fb82:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800fb86:	b1bb      	cbz	r3, 800fbb8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800fb88:	b348      	cbz	r0, 800fbde <osMessageQueueGet+0x62>
 800fb8a:	b341      	cbz	r1, 800fbde <osMessageQueueGet+0x62>
 800fb8c:	bb3c      	cbnz	r4, 800fbde <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fb8e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800fb90:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800fb92:	f001 fa57 	bl	8011044 <xQueueReceiveFromISR>
 800fb96:	2801      	cmp	r0, #1
 800fb98:	d11d      	bne.n	800fbd6 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800fb9a:	9b01      	ldr	r3, [sp, #4]
 800fb9c:	b1c3      	cbz	r3, 800fbd0 <osMessageQueueGet+0x54>
 800fb9e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fba2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fba6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fbaa:	f3bf 8f4f 	dsb	sy
 800fbae:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800fbb2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800fbb4:	b003      	add	sp, #12
 800fbb6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800fbb8:	b188      	cbz	r0, 800fbde <osMessageQueueGet+0x62>
 800fbba:	b181      	cbz	r1, 800fbde <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800fbbc:	4622      	mov	r2, r4
 800fbbe:	f000 ff39 	bl	8010a34 <xQueueReceive>
 800fbc2:	2801      	cmp	r0, #1
 800fbc4:	d004      	beq.n	800fbd0 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800fbc6:	b134      	cbz	r4, 800fbd6 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800fbc8:	f06f 0001 	mvn.w	r0, #1
}
 800fbcc:	b003      	add	sp, #12
 800fbce:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800fbd0:	2000      	movs	r0, #0
}
 800fbd2:	b003      	add	sp, #12
 800fbd4:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800fbd6:	f06f 0002 	mvn.w	r0, #2
}
 800fbda:	b003      	add	sp, #12
 800fbdc:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800fbde:	f06f 0003 	mvn.w	r0, #3
 800fbe2:	e7e7      	b.n	800fbb4 <osMessageQueueGet+0x38>

0800fbe4 <osMessageQueueGetCount>:
 800fbe4:	b130      	cbz	r0, 800fbf4 <osMessageQueueGetCount+0x10>
 800fbe6:	f3ef 8305 	mrs	r3, IPSR
 800fbea:	b10b      	cbz	r3, 800fbf0 <osMessageQueueGetCount+0xc>
 800fbec:	f001 ba9e 	b.w	801112c <uxQueueMessagesWaitingFromISR>
 800fbf0:	f001 ba86 	b.w	8011100 <uxQueueMessagesWaiting>
 800fbf4:	4770      	bx	lr
 800fbf6:	bf00      	nop

0800fbf8 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800fbf8:	4b04      	ldr	r3, [pc, #16]	; (800fc0c <vApplicationGetIdleTaskMemory+0x14>)
 800fbfa:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800fbfc:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fbfe:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800fc00:	4c03      	ldr	r4, [pc, #12]	; (800fc10 <vApplicationGetIdleTaskMemory+0x18>)
 800fc02:	600c      	str	r4, [r1, #0]
}
 800fc04:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800fc08:	6013      	str	r3, [r2, #0]
}
 800fc0a:	4770      	bx	lr
 800fc0c:	20002c44 	.word	0x20002c44
 800fc10:	20002a44 	.word	0x20002a44

0800fc14 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800fc14:	4b05      	ldr	r3, [pc, #20]	; (800fc2c <vApplicationGetTimerTaskMemory+0x18>)
 800fc16:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800fc18:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc1a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800fc1e:	4c04      	ldr	r4, [pc, #16]	; (800fc30 <vApplicationGetTimerTaskMemory+0x1c>)
 800fc20:	600c      	str	r4, [r1, #0]
}
 800fc22:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800fc26:	6013      	str	r3, [r2, #0]
}
 800fc28:	4770      	bx	lr
 800fc2a:	bf00      	nop
 800fc2c:	200030f4 	.word	0x200030f4
 800fc30:	20002cf4 	.word	0x20002cf4

0800fc34 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800fc34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc38:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800fc3a:	f001 ff41 	bl	8011ac0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800fc3e:	4a54      	ldr	r2, [pc, #336]	; (800fd90 <pvPortMalloc+0x15c>)
 800fc40:	6816      	ldr	r6, [r2, #0]
 800fc42:	2e00      	cmp	r6, #0
 800fc44:	d06e      	beq.n	800fd24 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800fc46:	4b53      	ldr	r3, [pc, #332]	; (800fd94 <pvPortMalloc+0x160>)
 800fc48:	681f      	ldr	r7, [r3, #0]
 800fc4a:	423d      	tst	r5, r7
 800fc4c:	d12e      	bne.n	800fcac <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800fc4e:	b36d      	cbz	r5, 800fcac <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800fc50:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800fc54:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800fc56:	bf1c      	itt	ne
 800fc58:	f024 0407 	bicne.w	r4, r4, #7
 800fc5c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800fc5e:	b32c      	cbz	r4, 800fcac <pvPortMalloc+0x78>
 800fc60:	f8df c144 	ldr.w	ip, [pc, #324]	; 800fda8 <pvPortMalloc+0x174>
 800fc64:	f8dc 5000 	ldr.w	r5, [ip]
 800fc68:	42a5      	cmp	r5, r4
 800fc6a:	d31f      	bcc.n	800fcac <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800fc6c:	484a      	ldr	r0, [pc, #296]	; (800fd98 <pvPortMalloc+0x164>)
 800fc6e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800fc70:	e003      	b.n	800fc7a <pvPortMalloc+0x46>
 800fc72:	681a      	ldr	r2, [r3, #0]
 800fc74:	b122      	cbz	r2, 800fc80 <pvPortMalloc+0x4c>
 800fc76:	4618      	mov	r0, r3
 800fc78:	4613      	mov	r3, r2
 800fc7a:	6859      	ldr	r1, [r3, #4]
 800fc7c:	42a1      	cmp	r1, r4
 800fc7e:	d3f8      	bcc.n	800fc72 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800fc80:	42b3      	cmp	r3, r6
 800fc82:	d013      	beq.n	800fcac <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800fc84:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fc86:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800fc88:	f858 eb08 	ldr.w	lr, [r8], #8
 800fc8c:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800fc90:	2a10      	cmp	r2, #16
 800fc92:	d929      	bls.n	800fce8 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800fc94:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800fc96:	0748      	lsls	r0, r1, #29
 800fc98:	d00f      	beq.n	800fcba <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800fc9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc9e:	f383 8811 	msr	BASEPRI, r3
 800fca2:	f3bf 8f6f 	isb	sy
 800fca6:	f3bf 8f4f 	dsb	sy
 800fcaa:	e7fe      	b.n	800fcaa <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800fcac:	f001 ff10 	bl	8011ad0 <xTaskResumeAll>
 800fcb0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800fcb4:	4640      	mov	r0, r8
 800fcb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800fcba:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fcbc:	4a36      	ldr	r2, [pc, #216]	; (800fd98 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800fcbe:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fcc0:	4614      	mov	r4, r2
 800fcc2:	6812      	ldr	r2, [r2, #0]
 800fcc4:	4291      	cmp	r1, r2
 800fcc6:	d8fb      	bhi.n	800fcc0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fcc8:	6860      	ldr	r0, [r4, #4]
 800fcca:	eb04 0e00 	add.w	lr, r4, r0
 800fcce:	4571      	cmp	r1, lr
 800fcd0:	d04b      	beq.n	800fd6a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fcd2:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fcd6:	eb01 000e 	add.w	r0, r1, lr
 800fcda:	4282      	cmp	r2, r0
 800fcdc:	d051      	beq.n	800fd82 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800fcde:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fce0:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fce2:	bf18      	it	ne
 800fce4:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fce6:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fce8:	4a2c      	ldr	r2, [pc, #176]	; (800fd9c <pvPortMalloc+0x168>)
 800fcea:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcec:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800fcee:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800fcf0:	bf38      	it	cc
 800fcf2:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800fcf4:	4a2a      	ldr	r2, [pc, #168]	; (800fda0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800fcf6:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800fcfa:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800fcfc:	2000      	movs	r0, #0
 800fcfe:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800fd02:	6813      	ldr	r3, [r2, #0]
 800fd04:	3301      	adds	r3, #1
 800fd06:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800fd08:	f001 fee2 	bl	8011ad0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800fd0c:	f018 0f07 	tst.w	r8, #7
 800fd10:	d0d0      	beq.n	800fcb4 <pvPortMalloc+0x80>
 800fd12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd16:	f383 8811 	msr	BASEPRI, r3
 800fd1a:	f3bf 8f6f 	isb	sy
 800fd1e:	f3bf 8f4f 	dsb	sy
 800fd22:	e7fe      	b.n	800fd22 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800fd24:	4b1f      	ldr	r3, [pc, #124]	; (800fda4 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800fd26:	075e      	lsls	r6, r3, #29
 800fd28:	d118      	bne.n	800fd5c <pvPortMalloc+0x128>
 800fd2a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800fd2e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800fd30:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd32:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800fd36:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd38:	4a18      	ldr	r2, [pc, #96]	; (800fd9c <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd3a:	4817      	ldr	r0, [pc, #92]	; (800fd98 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd3c:	4c15      	ldr	r4, [pc, #84]	; (800fd94 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800fd3e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800fd40:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd42:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd44:	4a18      	ldr	r2, [pc, #96]	; (800fda8 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd46:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800fd4a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800fd4c:	2200      	movs	r2, #0
 800fd4e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800fd50:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800fd52:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800fd56:	e9c1 6300 	strd	r6, r3, [r1]
}
 800fd5a:	e776      	b.n	800fc4a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800fd5c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800fd5e:	f021 0107 	bic.w	r1, r1, #7
 800fd62:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800fd66:	460b      	mov	r3, r1
 800fd68:	e7e2      	b.n	800fd30 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd6a:	6849      	ldr	r1, [r1, #4]
 800fd6c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd70:	eb04 010e 	add.w	r1, r4, lr
 800fd74:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fd76:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd7a:	d001      	beq.n	800fd80 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd7c:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800fd7e:	e7b2      	b.n	800fce6 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fd80:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fd82:	42b2      	cmp	r2, r6
 800fd84:	d0ab      	beq.n	800fcde <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd86:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd88:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fd8a:	4470      	add	r0, lr
 800fd8c:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fd8e:	e7a6      	b.n	800fcde <pvPortMalloc+0xaa>
 800fd90:	200031a0 	.word	0x200031a0
 800fd94:	200131a4 	.word	0x200131a4
 800fd98:	200131b8 	.word	0x200131b8
 800fd9c:	200131ac 	.word	0x200131ac
 800fda0:	200131b0 	.word	0x200131b0
 800fda4:	200031a4 	.word	0x200031a4
 800fda8:	200131a8 	.word	0x200131a8

0800fdac <vPortFree>:
	if( pv != NULL )
 800fdac:	b1d0      	cbz	r0, 800fde4 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fdae:	4a2c      	ldr	r2, [pc, #176]	; (800fe60 <vPortFree+0xb4>)
 800fdb0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800fdb4:	6812      	ldr	r2, [r2, #0]
 800fdb6:	4213      	tst	r3, r2
 800fdb8:	d00b      	beq.n	800fdd2 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800fdba:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800fdbe:	b191      	cbz	r1, 800fde6 <vPortFree+0x3a>
 800fdc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdc4:	f383 8811 	msr	BASEPRI, r3
 800fdc8:	f3bf 8f6f 	isb	sy
 800fdcc:	f3bf 8f4f 	dsb	sy
 800fdd0:	e7fe      	b.n	800fdd0 <vPortFree+0x24>
 800fdd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdd6:	f383 8811 	msr	BASEPRI, r3
 800fdda:	f3bf 8f6f 	isb	sy
 800fdde:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800fde2:	e7fe      	b.n	800fde2 <vPortFree+0x36>
 800fde4:	4770      	bx	lr
{
 800fde6:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fde8:	ea23 0302 	bic.w	r3, r3, r2
{
 800fdec:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdee:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fdf2:	4c1c      	ldr	r4, [pc, #112]	; (800fe64 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800fdf4:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800fdf6:	f001 fe63 	bl	8011ac0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fdfa:	9801      	ldr	r0, [sp, #4]
 800fdfc:	6822      	ldr	r2, [r4, #0]
 800fdfe:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe02:	4b19      	ldr	r3, [pc, #100]	; (800fe68 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe04:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800fe06:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800fe08:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800fe0a:	461a      	mov	r2, r3
 800fe0c:	681b      	ldr	r3, [r3, #0]
 800fe0e:	4298      	cmp	r0, r3
 800fe10:	d8fb      	bhi.n	800fe0a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800fe12:	6854      	ldr	r4, [r2, #4]
 800fe14:	eb02 0e04 	add.w	lr, r2, r4
 800fe18:	4570      	cmp	r0, lr
 800fe1a:	d010      	beq.n	800fe3e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe1c:	eb00 0c01 	add.w	ip, r0, r1
 800fe20:	4563      	cmp	r3, ip
 800fe22:	d014      	beq.n	800fe4e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800fe24:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe26:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800fe28:	bf18      	it	ne
 800fe2a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800fe2c:	4a0f      	ldr	r2, [pc, #60]	; (800fe6c <vPortFree+0xc0>)
 800fe2e:	6813      	ldr	r3, [r2, #0]
 800fe30:	3301      	adds	r3, #1
 800fe32:	6013      	str	r3, [r2, #0]
}
 800fe34:	b002      	add	sp, #8
 800fe36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800fe3a:	f001 be49 	b.w	8011ad0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe3e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe40:	1850      	adds	r0, r2, r1
 800fe42:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800fe44:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe46:	d001      	beq.n	800fe4c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe48:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800fe4a:	e7ef      	b.n	800fe2c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800fe4c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800fe4e:	4c08      	ldr	r4, [pc, #32]	; (800fe70 <vPortFree+0xc4>)
 800fe50:	6824      	ldr	r4, [r4, #0]
 800fe52:	42a3      	cmp	r3, r4
 800fe54:	d0e6      	beq.n	800fe24 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe56:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800fe5a:	4421      	add	r1, r4
 800fe5c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800fe5e:	e7e1      	b.n	800fe24 <vPortFree+0x78>
 800fe60:	200131a4 	.word	0x200131a4
 800fe64:	200131a8 	.word	0x200131a8
 800fe68:	200131b8 	.word	0x200131b8
 800fe6c:	200131b4 	.word	0x200131b4
 800fe70:	200031a0 	.word	0x200031a0

0800fe74 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe74:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe78:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe7c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800fe7e:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800fe82:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800fe86:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800fe88:	4770      	bx	lr
 800fe8a:	bf00      	nop

0800fe8c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800fe8c:	2300      	movs	r3, #0
 800fe8e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800fe90:	4770      	bx	lr
 800fe92:	bf00      	nop

0800fe94 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800fe94:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800fe96:	689a      	ldr	r2, [r3, #8]
 800fe98:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800fe9a:	6802      	ldr	r2, [r0, #0]
{
 800fe9c:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fe9e:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800fea0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fea2:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800fea4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800fea6:	6099      	str	r1, [r3, #8]
}
 800fea8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800feac:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800feae:	6002      	str	r2, [r0, #0]
}
 800feb0:	4770      	bx	lr
 800feb2:	bf00      	nop

0800feb4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800feb4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800feb6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800feb8:	1c6b      	adds	r3, r5, #1
 800feba:	d010      	beq.n	800fede <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800febc:	f100 0308 	add.w	r3, r0, #8
 800fec0:	461c      	mov	r4, r3
 800fec2:	685b      	ldr	r3, [r3, #4]
 800fec4:	681a      	ldr	r2, [r3, #0]
 800fec6:	42aa      	cmp	r2, r5
 800fec8:	d9fa      	bls.n	800fec0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800feca:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fecc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800fece:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800fed0:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800fed2:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800fed4:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800fed6:	6108      	str	r0, [r1, #16]
}
 800fed8:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800feda:	6002      	str	r2, [r0, #0]
}
 800fedc:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800fede:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800fee0:	6863      	ldr	r3, [r4, #4]
 800fee2:	e7f2      	b.n	800feca <vListInsert+0x16>

0800fee4 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800fee4:	6903      	ldr	r3, [r0, #16]
{
 800fee6:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800fee8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800feec:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800feee:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800fef0:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800fef2:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800fef4:	bf08      	it	eq
 800fef6:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800fef8:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800fefa:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800fefe:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800ff00:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800ff02:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800ff04:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800ff06:	6818      	ldr	r0, [r3, #0]
}
 800ff08:	4770      	bx	lr
 800ff0a:	bf00      	nop

0800ff0c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800ff0c:	4808      	ldr	r0, [pc, #32]	; (800ff30 <prvPortStartFirstTask+0x24>)
 800ff0e:	6800      	ldr	r0, [r0, #0]
 800ff10:	6800      	ldr	r0, [r0, #0]
 800ff12:	f380 8808 	msr	MSP, r0
 800ff16:	f04f 0000 	mov.w	r0, #0
 800ff1a:	f380 8814 	msr	CONTROL, r0
 800ff1e:	b662      	cpsie	i
 800ff20:	b661      	cpsie	f
 800ff22:	f3bf 8f4f 	dsb	sy
 800ff26:	f3bf 8f6f 	isb	sy
 800ff2a:	df00      	svc	0
 800ff2c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ff2e:	0000      	.short	0x0000
 800ff30:	e000ed08 	.word	0xe000ed08

0800ff34 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ff34:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800ff44 <vPortEnableVFP+0x10>
 800ff38:	6801      	ldr	r1, [r0, #0]
 800ff3a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ff3e:	6001      	str	r1, [r0, #0]
 800ff40:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ff42:	0000      	.short	0x0000
 800ff44:	e000ed88 	.word	0xe000ed88

0800ff48 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800ff48:	4b0e      	ldr	r3, [pc, #56]	; (800ff84 <prvTaskExitError+0x3c>)
 800ff4a:	681b      	ldr	r3, [r3, #0]
{
 800ff4c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ff4e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ff50:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ff52:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ff54:	d008      	beq.n	800ff68 <prvTaskExitError+0x20>
 800ff56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff5a:	f383 8811 	msr	BASEPRI, r3
 800ff5e:	f3bf 8f6f 	isb	sy
 800ff62:	f3bf 8f4f 	dsb	sy
 800ff66:	e7fe      	b.n	800ff66 <prvTaskExitError+0x1e>
 800ff68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff6c:	f383 8811 	msr	BASEPRI, r3
 800ff70:	f3bf 8f6f 	isb	sy
 800ff74:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ff78:	9b01      	ldr	r3, [sp, #4]
 800ff7a:	2b00      	cmp	r3, #0
 800ff7c:	d0fc      	beq.n	800ff78 <prvTaskExitError+0x30>
}
 800ff7e:	b002      	add	sp, #8
 800ff80:	4770      	bx	lr
 800ff82:	bf00      	nop
 800ff84:	20000088 	.word	0x20000088

0800ff88 <pxPortInitialiseStack>:
{
 800ff88:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ff8a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ff8e:	4c07      	ldr	r4, [pc, #28]	; (800ffac <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ff90:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ff94:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ff98:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ff9c:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ffa0:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ffa4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ffa8:	3844      	subs	r0, #68	; 0x44
 800ffaa:	4770      	bx	lr
 800ffac:	0800ff49 	.word	0x0800ff49

0800ffb0 <SVC_Handler>:
	__asm volatile (
 800ffb0:	4b07      	ldr	r3, [pc, #28]	; (800ffd0 <pxCurrentTCBConst2>)
 800ffb2:	6819      	ldr	r1, [r3, #0]
 800ffb4:	6808      	ldr	r0, [r1, #0]
 800ffb6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffba:	f380 8809 	msr	PSP, r0
 800ffbe:	f3bf 8f6f 	isb	sy
 800ffc2:	f04f 0000 	mov.w	r0, #0
 800ffc6:	f380 8811 	msr	BASEPRI, r0
 800ffca:	4770      	bx	lr
 800ffcc:	f3af 8000 	nop.w

0800ffd0 <pxCurrentTCBConst2>:
 800ffd0:	20013208 	.word	0x20013208

0800ffd4 <vPortEnterCritical>:
 800ffd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffd8:	f383 8811 	msr	BASEPRI, r3
 800ffdc:	f3bf 8f6f 	isb	sy
 800ffe0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800ffe4:	4a0b      	ldr	r2, [pc, #44]	; (8010014 <vPortEnterCritical+0x40>)
 800ffe6:	6813      	ldr	r3, [r2, #0]
 800ffe8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800ffea:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800ffec:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800ffee:	d000      	beq.n	800fff2 <vPortEnterCritical+0x1e>
}
 800fff0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800fff2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fff6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800fffa:	b2db      	uxtb	r3, r3
 800fffc:	2b00      	cmp	r3, #0
 800fffe:	d0f7      	beq.n	800fff0 <vPortEnterCritical+0x1c>
 8010000:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010004:	f383 8811 	msr	BASEPRI, r3
 8010008:	f3bf 8f6f 	isb	sy
 801000c:	f3bf 8f4f 	dsb	sy
 8010010:	e7fe      	b.n	8010010 <vPortEnterCritical+0x3c>
 8010012:	bf00      	nop
 8010014:	20000088 	.word	0x20000088

08010018 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8010018:	4a08      	ldr	r2, [pc, #32]	; (801003c <vPortExitCritical+0x24>)
 801001a:	6813      	ldr	r3, [r2, #0]
 801001c:	b943      	cbnz	r3, 8010030 <vPortExitCritical+0x18>
 801001e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010022:	f383 8811 	msr	BASEPRI, r3
 8010026:	f3bf 8f6f 	isb	sy
 801002a:	f3bf 8f4f 	dsb	sy
 801002e:	e7fe      	b.n	801002e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8010030:	3b01      	subs	r3, #1
 8010032:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8010034:	b90b      	cbnz	r3, 801003a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8010036:	f383 8811 	msr	BASEPRI, r3
}
 801003a:	4770      	bx	lr
 801003c:	20000088 	.word	0x20000088

08010040 <PendSV_Handler>:
	__asm volatile
 8010040:	f3ef 8009 	mrs	r0, PSP
 8010044:	f3bf 8f6f 	isb	sy
 8010048:	4b15      	ldr	r3, [pc, #84]	; (80100a0 <pxCurrentTCBConst>)
 801004a:	681a      	ldr	r2, [r3, #0]
 801004c:	f01e 0f10 	tst.w	lr, #16
 8010050:	bf08      	it	eq
 8010052:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8010056:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801005a:	6010      	str	r0, [r2, #0]
 801005c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8010060:	f04f 0050 	mov.w	r0, #80	; 0x50
 8010064:	f380 8811 	msr	BASEPRI, r0
 8010068:	f3bf 8f4f 	dsb	sy
 801006c:	f3bf 8f6f 	isb	sy
 8010070:	f001 fd54 	bl	8011b1c <vTaskSwitchContext>
 8010074:	f04f 0000 	mov.w	r0, #0
 8010078:	f380 8811 	msr	BASEPRI, r0
 801007c:	bc09      	pop	{r0, r3}
 801007e:	6819      	ldr	r1, [r3, #0]
 8010080:	6808      	ldr	r0, [r1, #0]
 8010082:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010086:	f01e 0f10 	tst.w	lr, #16
 801008a:	bf08      	it	eq
 801008c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8010090:	f380 8809 	msr	PSP, r0
 8010094:	f3bf 8f6f 	isb	sy
 8010098:	4770      	bx	lr
 801009a:	bf00      	nop
 801009c:	f3af 8000 	nop.w

080100a0 <pxCurrentTCBConst>:
 80100a0:	20013208 	.word	0x20013208

080100a4 <xPortSysTickHandler>:
{
 80100a4:	b508      	push	{r3, lr}
	__asm volatile
 80100a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100aa:	f383 8811 	msr	BASEPRI, r3
 80100ae:	f3bf 8f6f 	isb	sy
 80100b2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80100b6:	f001 fd21 	bl	8011afc <xTaskIncrementTick>
 80100ba:	b128      	cbz	r0, 80100c8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80100bc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100c0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80100c4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80100c8:	2300      	movs	r3, #0
 80100ca:	f383 8811 	msr	BASEPRI, r3
}
 80100ce:	bd08      	pop	{r3, pc}

080100d0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100d0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80100d4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100d6:	4906      	ldr	r1, [pc, #24]	; (80100f0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80100d8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80100da:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100dc:	680b      	ldr	r3, [r1, #0]
 80100de:	4905      	ldr	r1, [pc, #20]	; (80100f4 <vPortSetupTimerInterrupt+0x24>)
 80100e0:	fba1 1303 	umull	r1, r3, r1, r3
 80100e4:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80100e6:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80100e8:	3b01      	subs	r3, #1
 80100ea:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 80100ec:	6110      	str	r0, [r2, #16]
}
 80100ee:	4770      	bx	lr
 80100f0:	2000007c 	.word	0x2000007c
 80100f4:	10624dd3 	.word	0x10624dd3

080100f8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80100f8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80100fc:	4a49      	ldr	r2, [pc, #292]	; (8010224 <xPortStartScheduler+0x12c>)
 80100fe:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8010102:	4291      	cmp	r1, r2
 8010104:	d043      	beq.n	801018e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8010106:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 801010a:	4b47      	ldr	r3, [pc, #284]	; (8010228 <xPortStartScheduler+0x130>)
 801010c:	429a      	cmp	r2, r3
 801010e:	d035      	beq.n	801017c <xPortStartScheduler+0x84>
{
 8010110:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010112:	4b46      	ldr	r3, [pc, #280]	; (801022c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010114:	4846      	ldr	r0, [pc, #280]	; (8010230 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8010116:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010118:	4c46      	ldr	r4, [pc, #280]	; (8010234 <xPortStartScheduler+0x13c>)
{
 801011a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801011c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 801011e:	b2d2      	uxtb	r2, r2
 8010120:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8010122:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8010124:	781b      	ldrb	r3, [r3, #0]
 8010126:	b2db      	uxtb	r3, r3
 8010128:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801012c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010130:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8010134:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8010138:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 801013a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 801013c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 801013e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010140:	bf48      	it	mi
 8010142:	2206      	movmi	r2, #6
 8010144:	d511      	bpl.n	801016a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8010146:	f89d 3007 	ldrb.w	r3, [sp, #7]
 801014a:	005b      	lsls	r3, r3, #1
 801014c:	b2db      	uxtb	r3, r3
 801014e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8010152:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010156:	0609      	lsls	r1, r1, #24
 8010158:	4610      	mov	r0, r2
 801015a:	f102 32ff 	add.w	r2, r2, #4294967295
 801015e:	d4f2      	bmi.n	8010146 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8010160:	2803      	cmp	r0, #3
 8010162:	6020      	str	r0, [r4, #0]
 8010164:	f88d 3007 	strb.w	r3, [sp, #7]
 8010168:	d01a      	beq.n	80101a0 <xPortStartScheduler+0xa8>
	__asm volatile
 801016a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801016e:	f383 8811 	msr	BASEPRI, r3
 8010172:	f3bf 8f6f 	isb	sy
 8010176:	f3bf 8f4f 	dsb	sy
 801017a:	e7fe      	b.n	801017a <xPortStartScheduler+0x82>
 801017c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010180:	f383 8811 	msr	BASEPRI, r3
 8010184:	f3bf 8f6f 	isb	sy
 8010188:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 801018c:	e7fe      	b.n	801018c <xPortStartScheduler+0x94>
 801018e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010192:	f383 8811 	msr	BASEPRI, r3
 8010196:	f3bf 8f6f 	isb	sy
 801019a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801019e:	e7fe      	b.n	801019e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101a0:	9b02      	ldr	r3, [sp, #8]
 80101a2:	4a22      	ldr	r2, [pc, #136]	; (801022c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101a4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80101a8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101ac:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80101ae:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80101b0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101b2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101b6:	4c20      	ldr	r4, [pc, #128]	; (8010238 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80101b8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80101bc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80101c0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 80101c4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80101c8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 80101cc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 80101ce:	f7ff ff7f 	bl	80100d0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80101d2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 80101d4:	f7ff feae 	bl	800ff34 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80101d8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 80101dc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80101e0:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 80101e4:	f7ff fe92 	bl	800ff0c <prvPortStartFirstTask>
	vTaskSwitchContext();
 80101e8:	f001 fc98 	bl	8011b1c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 80101ec:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 80101ee:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 80101f0:	3301      	adds	r3, #1
 80101f2:	d008      	beq.n	8010206 <xPortStartScheduler+0x10e>
 80101f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101f8:	f383 8811 	msr	BASEPRI, r3
 80101fc:	f3bf 8f6f 	isb	sy
 8010200:	f3bf 8f4f 	dsb	sy
 8010204:	e7fe      	b.n	8010204 <xPortStartScheduler+0x10c>
 8010206:	f04f 0350 	mov.w	r3, #80	; 0x50
 801020a:	f383 8811 	msr	BASEPRI, r3
 801020e:	f3bf 8f6f 	isb	sy
 8010212:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8010216:	9b03      	ldr	r3, [sp, #12]
 8010218:	2b00      	cmp	r3, #0
 801021a:	d0fc      	beq.n	8010216 <xPortStartScheduler+0x11e>
}
 801021c:	2000      	movs	r0, #0
 801021e:	b004      	add	sp, #16
 8010220:	bd70      	pop	{r4, r5, r6, pc}
 8010222:	bf00      	nop
 8010224:	410fc271 	.word	0x410fc271
 8010228:	410fc270 	.word	0x410fc270
 801022c:	e000e400 	.word	0xe000e400
 8010230:	200131c0 	.word	0x200131c0
 8010234:	200131c4 	.word	0x200131c4
 8010238:	20000088 	.word	0x20000088

0801023c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 801023c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8010240:	2b0f      	cmp	r3, #15
 8010242:	d90e      	bls.n	8010262 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010244:	4911      	ldr	r1, [pc, #68]	; (801028c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8010246:	4a12      	ldr	r2, [pc, #72]	; (8010290 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8010248:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 801024a:	7812      	ldrb	r2, [r2, #0]
 801024c:	429a      	cmp	r2, r3
 801024e:	d908      	bls.n	8010262 <vPortValidateInterruptPriority+0x26>
 8010250:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010254:	f383 8811 	msr	BASEPRI, r3
 8010258:	f3bf 8f6f 	isb	sy
 801025c:	f3bf 8f4f 	dsb	sy
 8010260:	e7fe      	b.n	8010260 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8010262:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010266:	4a0b      	ldr	r2, [pc, #44]	; (8010294 <vPortValidateInterruptPriority+0x58>)
 8010268:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 801026c:	6812      	ldr	r2, [r2, #0]
 801026e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8010272:	4293      	cmp	r3, r2
 8010274:	d908      	bls.n	8010288 <vPortValidateInterruptPriority+0x4c>
 8010276:	f04f 0350 	mov.w	r3, #80	; 0x50
 801027a:	f383 8811 	msr	BASEPRI, r3
 801027e:	f3bf 8f6f 	isb	sy
 8010282:	f3bf 8f4f 	dsb	sy
 8010286:	e7fe      	b.n	8010286 <vPortValidateInterruptPriority+0x4a>
	}
 8010288:	4770      	bx	lr
 801028a:	bf00      	nop
 801028c:	e000e3f0 	.word	0xe000e3f0
 8010290:	200131c0 	.word	0x200131c0
 8010294:	200131c4 	.word	0x200131c4

08010298 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 8010298:	b570      	push	{r4, r5, r6, lr}
 801029a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 801029c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801029e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80102a0:	b920      	cbnz	r0, 80102ac <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80102a2:	6825      	ldr	r5, [r4, #0]
 80102a4:	b34d      	cbz	r5, 80102fa <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102a6:	3601      	adds	r6, #1
 80102a8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 80102aa:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80102ac:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80102ae:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 80102b0:	b97d      	cbnz	r5, 80102d2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80102b2:	6860      	ldr	r0, [r4, #4]
 80102b4:	f01d fe6f 	bl	802df96 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102b8:	6863      	ldr	r3, [r4, #4]
 80102ba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102bc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102be:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80102c0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102c2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80102c4:	bf24      	itt	cs
 80102c6:	6823      	ldrcs	r3, [r4, #0]
 80102c8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102ca:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80102cc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102ce:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80102d0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80102d2:	68e0      	ldr	r0, [r4, #12]
 80102d4:	f01d fe5f 	bl	802df96 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102d8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80102da:	68e3      	ldr	r3, [r4, #12]
 80102dc:	4251      	negs	r1, r2
 80102de:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102e0:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80102e2:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80102e4:	4293      	cmp	r3, r2
 80102e6:	d202      	bcs.n	80102ee <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80102e8:	68a3      	ldr	r3, [r4, #8]
 80102ea:	440b      	add	r3, r1
 80102ec:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80102ee:	2d02      	cmp	r5, #2
 80102f0:	d008      	beq.n	8010304 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102f2:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 80102f4:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80102f6:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80102f8:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80102fa:	68a0      	ldr	r0, [r4, #8]
 80102fc:	f001 fde0 	bl	8011ec0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8010300:	60a5      	str	r5, [r4, #8]
 8010302:	e7d0      	b.n	80102a6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010304:	2e01      	cmp	r6, #1
 8010306:	bf38      	it	cc
 8010308:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 801030a:	2000      	movs	r0, #0
 801030c:	e7cc      	b.n	80102a8 <prvCopyDataToQueue+0x10>
 801030e:	bf00      	nop

08010310 <xQueueGenericCreateStatic>:
	{
 8010310:	b530      	push	{r4, r5, lr}
 8010312:	b083      	sub	sp, #12
 8010314:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8010318:	b940      	cbnz	r0, 801032c <xQueueGenericCreateStatic+0x1c>
 801031a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801031e:	f383 8811 	msr	BASEPRI, r3
 8010322:	f3bf 8f6f 	isb	sy
 8010326:	f3bf 8f4f 	dsb	sy
 801032a:	e7fe      	b.n	801032a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 801032c:	461d      	mov	r5, r3
 801032e:	b17b      	cbz	r3, 8010350 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010330:	b302      	cbz	r2, 8010374 <xQueueGenericCreateStatic+0x64>
 8010332:	b1b1      	cbz	r1, 8010362 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010334:	2350      	movs	r3, #80	; 0x50
 8010336:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8010338:	9b01      	ldr	r3, [sp, #4]
 801033a:	2b50      	cmp	r3, #80	; 0x50
 801033c:	d023      	beq.n	8010386 <xQueueGenericCreateStatic+0x76>
 801033e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010342:	f383 8811 	msr	BASEPRI, r3
 8010346:	f3bf 8f6f 	isb	sy
 801034a:	f3bf 8f4f 	dsb	sy
 801034e:	e7fe      	b.n	801034e <xQueueGenericCreateStatic+0x3e>
 8010350:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010354:	f383 8811 	msr	BASEPRI, r3
 8010358:	f3bf 8f6f 	isb	sy
 801035c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 8010360:	e7fe      	b.n	8010360 <xQueueGenericCreateStatic+0x50>
 8010362:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010366:	f383 8811 	msr	BASEPRI, r3
 801036a:	f3bf 8f6f 	isb	sy
 801036e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8010372:	e7fe      	b.n	8010372 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8010374:	bb89      	cbnz	r1, 80103da <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8010376:	2250      	movs	r2, #80	; 0x50
 8010378:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 801037a:	9a01      	ldr	r2, [sp, #4]
 801037c:	2a50      	cmp	r2, #80	; 0x50
 801037e:	d1de      	bne.n	801033e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8010380:	9a01      	ldr	r2, [sp, #4]
 8010382:	462a      	mov	r2, r5
 8010384:	e000      	b.n	8010388 <xQueueGenericCreateStatic+0x78>
 8010386:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 8010388:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 801038a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 801038c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8010390:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 8010394:	f7ff fe1e 	bl	800ffd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010398:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 801039c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 801039e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103a0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103a4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103a6:	4401      	add	r1, r0
 80103a8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80103aa:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103ac:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80103ae:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80103b0:	21ff      	movs	r1, #255	; 0xff
 80103b2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80103b6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 80103b8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80103bc:	f105 0010 	add.w	r0, r5, #16
 80103c0:	f7ff fd58 	bl	800fe74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80103c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80103c8:	f7ff fd54 	bl	800fe74 <vListInitialise>
	taskEXIT_CRITICAL();
 80103cc:	f7ff fe24 	bl	8010018 <vPortExitCritical>
	}
 80103d0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 80103d2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 80103d6:	b003      	add	sp, #12
 80103d8:	bd30      	pop	{r4, r5, pc}
 80103da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103de:	f383 8811 	msr	BASEPRI, r3
 80103e2:	f3bf 8f6f 	isb	sy
 80103e6:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80103ea:	e7fe      	b.n	80103ea <xQueueGenericCreateStatic+0xda>

080103ec <xQueueGenericCreate>:
	{
 80103ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80103ee:	b940      	cbnz	r0, 8010402 <xQueueGenericCreate+0x16>
 80103f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103f4:	f383 8811 	msr	BASEPRI, r3
 80103f8:	f3bf 8f6f 	isb	sy
 80103fc:	f3bf 8f4f 	dsb	sy
 8010400:	e7fe      	b.n	8010400 <xQueueGenericCreate+0x14>
 8010402:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010404:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010408:	3050      	adds	r0, #80	; 0x50
 801040a:	460e      	mov	r6, r1
 801040c:	4617      	mov	r7, r2
 801040e:	f7ff fc11 	bl	800fc34 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010412:	4604      	mov	r4, r0
 8010414:	b340      	cbz	r0, 8010468 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010416:	2300      	movs	r3, #0
 8010418:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 801041c:	b336      	cbz	r6, 801046c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801041e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8010422:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8010424:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 8010428:	f7ff fdd4 	bl	800ffd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801042c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8010430:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010432:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010434:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010438:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801043a:	440a      	add	r2, r1
 801043c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 801043e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010440:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010442:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8010444:	22ff      	movs	r2, #255	; 0xff
 8010446:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801044a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 801044c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8010450:	f104 0010 	add.w	r0, r4, #16
 8010454:	f7ff fd0e 	bl	800fe74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010458:	f104 0024 	add.w	r0, r4, #36	; 0x24
 801045c:	f7ff fd0a 	bl	800fe74 <vListInitialise>
	taskEXIT_CRITICAL();
 8010460:	f7ff fdda 	bl	8010018 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 8010464:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8010468:	4620      	mov	r0, r4
 801046a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801046c:	4603      	mov	r3, r0
 801046e:	e7d8      	b.n	8010422 <xQueueGenericCreate+0x36>

08010470 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 8010470:	b940      	cbnz	r0, 8010484 <xQueueCreateCountingSemaphoreStatic+0x14>
 8010472:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010476:	f383 8811 	msr	BASEPRI, r3
 801047a:	f3bf 8f6f 	isb	sy
 801047e:	f3bf 8f4f 	dsb	sy
 8010482:	e7fe      	b.n	8010482 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010484:	4288      	cmp	r0, r1
 8010486:	d208      	bcs.n	801049a <xQueueCreateCountingSemaphoreStatic+0x2a>
 8010488:	f04f 0350 	mov.w	r3, #80	; 0x50
 801048c:	f383 8811 	msr	BASEPRI, r3
 8010490:	f3bf 8f6f 	isb	sy
 8010494:	f3bf 8f4f 	dsb	sy
 8010498:	e7fe      	b.n	8010498 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 801049a:	b530      	push	{r4, r5, lr}
 801049c:	4615      	mov	r5, r2
 801049e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 80104a0:	2a00      	cmp	r2, #0
 80104a2:	d03c      	beq.n	801051e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80104a4:	2350      	movs	r3, #80	; 0x50
 80104a6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 80104a8:	9b03      	ldr	r3, [sp, #12]
 80104aa:	2b50      	cmp	r3, #80	; 0x50
 80104ac:	d008      	beq.n	80104c0 <xQueueCreateCountingSemaphoreStatic+0x50>
 80104ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104b2:	f383 8811 	msr	BASEPRI, r3
 80104b6:	f3bf 8f6f 	isb	sy
 80104ba:	f3bf 8f4f 	dsb	sy
 80104be:	e7fe      	b.n	80104be <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 80104c0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80104c2:	2301      	movs	r3, #1
 80104c4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 80104c8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 80104ca:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 80104ce:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80104d0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 80104d2:	f7ff fd7f 	bl	800ffd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104d6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 80104da:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80104dc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104de:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104e2:	1ac3      	subs	r3, r0, r3
 80104e4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104e6:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 80104e8:	f04f 0eff 	mov.w	lr, #255	; 0xff
 80104ec:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104f0:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80104f2:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 80104f4:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80104f8:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 80104fa:	f105 0010 	add.w	r0, r5, #16
 80104fe:	f7ff fcb9 	bl	800fe74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8010502:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8010506:	f7ff fcb5 	bl	800fe74 <vListInitialise>
	taskEXIT_CRITICAL();
 801050a:	f7ff fd85 	bl	8010018 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 801050e:	9901      	ldr	r1, [sp, #4]
 8010510:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 8010512:	2302      	movs	r3, #2
	}
 8010514:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 8010516:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 801051a:	b005      	add	sp, #20
 801051c:	bd30      	pop	{r4, r5, pc}
 801051e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010522:	f383 8811 	msr	BASEPRI, r3
 8010526:	f3bf 8f6f 	isb	sy
 801052a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 801052e:	e7fe      	b.n	801052e <xQueueCreateCountingSemaphoreStatic+0xbe>

08010530 <xQueueCreateCountingSemaphore>:
	{
 8010530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 8010532:	b940      	cbnz	r0, 8010546 <xQueueCreateCountingSemaphore+0x16>
 8010534:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010538:	f383 8811 	msr	BASEPRI, r3
 801053c:	f3bf 8f6f 	isb	sy
 8010540:	f3bf 8f4f 	dsb	sy
 8010544:	e7fe      	b.n	8010544 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 8010546:	4288      	cmp	r0, r1
 8010548:	460e      	mov	r6, r1
 801054a:	4604      	mov	r4, r0
 801054c:	d208      	bcs.n	8010560 <xQueueCreateCountingSemaphore+0x30>
 801054e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010552:	f383 8811 	msr	BASEPRI, r3
 8010556:	f3bf 8f6f 	isb	sy
 801055a:	f3bf 8f4f 	dsb	sy
 801055e:	e7fe      	b.n	801055e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8010560:	2050      	movs	r0, #80	; 0x50
 8010562:	f7ff fb67 	bl	800fc34 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8010566:	4605      	mov	r5, r0
 8010568:	b330      	cbz	r0, 80105b8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 801056a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 801056c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8010570:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8010574:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 8010576:	f7ff fd2d 	bl	800ffd4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801057a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 801057e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8010580:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010582:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010586:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010588:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801058a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 801058c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 801058e:	22ff      	movs	r2, #255	; 0xff
 8010590:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8010594:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8010596:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 8010598:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 801059c:	f105 0010 	add.w	r0, r5, #16
 80105a0:	f7ff fc68 	bl	800fe74 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 80105a4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80105a8:	f7ff fc64 	bl	800fe74 <vListInitialise>
	taskEXIT_CRITICAL();
 80105ac:	f7ff fd34 	bl	8010018 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 80105b0:	2302      	movs	r3, #2
 80105b2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80105b6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 80105b8:	4628      	mov	r0, r5
 80105ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080105bc <xQueueGenericSend>:
{
 80105bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80105c0:	b085      	sub	sp, #20
 80105c2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80105c4:	2800      	cmp	r0, #0
 80105c6:	f000 80a4 	beq.w	8010712 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80105ca:	4688      	mov	r8, r1
 80105cc:	461f      	mov	r7, r3
 80105ce:	4604      	mov	r4, r0
 80105d0:	2900      	cmp	r1, #0
 80105d2:	f000 8091 	beq.w	80106f8 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80105d6:	2f02      	cmp	r7, #2
 80105d8:	d10b      	bne.n	80105f2 <xQueueGenericSend+0x36>
 80105da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80105dc:	2b01      	cmp	r3, #1
 80105de:	d008      	beq.n	80105f2 <xQueueGenericSend+0x36>
 80105e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80105e4:	f383 8811 	msr	BASEPRI, r3
 80105e8:	f3bf 8f6f 	isb	sy
 80105ec:	f3bf 8f4f 	dsb	sy
 80105f0:	e7fe      	b.n	80105f0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80105f2:	f001 fc0f 	bl	8011e14 <xTaskGetSchedulerState>
 80105f6:	4605      	mov	r5, r0
 80105f8:	2800      	cmp	r0, #0
 80105fa:	f000 8093 	beq.w	8010724 <xQueueGenericSend+0x168>
 80105fe:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010600:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010604:	f7ff fce6 	bl	800ffd4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8010608:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801060a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801060c:	429a      	cmp	r2, r3
 801060e:	f0c0 80ef 	bcc.w	80107f0 <xQueueGenericSend+0x234>
 8010612:	2f02      	cmp	r7, #2
 8010614:	f000 80ec 	beq.w	80107f0 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010618:	9801      	ldr	r0, [sp, #4]
 801061a:	2800      	cmp	r0, #0
 801061c:	f000 8101 	beq.w	8010822 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 8010620:	2d00      	cmp	r5, #0
 8010622:	f000 80e1 	beq.w	80107e8 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 8010626:	f7ff fcf7 	bl	8010018 <vPortExitCritical>
		vTaskSuspendAll();
 801062a:	f001 fa49 	bl	8011ac0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 801062e:	f7ff fcd1 	bl	800ffd4 <vPortEnterCritical>
 8010632:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010636:	2bff      	cmp	r3, #255	; 0xff
 8010638:	bf04      	itt	eq
 801063a:	2300      	moveq	r3, #0
 801063c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010640:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010644:	2bff      	cmp	r3, #255	; 0xff
 8010646:	bf04      	itt	eq
 8010648:	2300      	moveq	r3, #0
 801064a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 801064e:	f7ff fce3 	bl	8010018 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010652:	a901      	add	r1, sp, #4
 8010654:	a802      	add	r0, sp, #8
 8010656:	f001 fb8f 	bl	8011d78 <xTaskCheckForTimeOut>
 801065a:	2800      	cmp	r0, #0
 801065c:	f040 80e6 	bne.w	801082c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8010660:	f7ff fcb8 	bl	800ffd4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8010664:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010666:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010668:	429a      	cmp	r2, r3
 801066a:	d068      	beq.n	801073e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 801066c:	f7ff fcd4 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010670:	f7ff fcb0 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010674:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 8010678:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801067a:	2d00      	cmp	r5, #0
 801067c:	dc04      	bgt.n	8010688 <xQueueGenericSend+0xcc>
 801067e:	e011      	b.n	80106a4 <xQueueGenericSend+0xe8>
			--cTxLock;
 8010680:	1e6a      	subs	r2, r5, #1
 8010682:	b2d3      	uxtb	r3, r2
 8010684:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010686:	b16b      	cbz	r3, 80106a4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010688:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801068a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801068c:	b153      	cbz	r3, 80106a4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801068e:	f001 fb1f 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010692:	2800      	cmp	r0, #0
 8010694:	d0f4      	beq.n	8010680 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 8010696:	f001 fbb7 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 801069a:	1e6a      	subs	r2, r5, #1
 801069c:	b2d3      	uxtb	r3, r2
 801069e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80106a0:	2b00      	cmp	r3, #0
 80106a2:	d1f1      	bne.n	8010688 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 80106a4:	23ff      	movs	r3, #255	; 0xff
 80106a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80106aa:	f7ff fcb5 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 80106ae:	f7ff fc91 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80106b2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80106b6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106b8:	2d00      	cmp	r5, #0
 80106ba:	dd14      	ble.n	80106e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106bc:	f104 0910 	add.w	r9, r4, #16
 80106c0:	e003      	b.n	80106ca <xQueueGenericSend+0x10e>
				--cRxLock;
 80106c2:	1e6a      	subs	r2, r5, #1
 80106c4:	b2d3      	uxtb	r3, r2
 80106c6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106c8:	b16b      	cbz	r3, 80106e6 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106ca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106cc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80106ce:	b153      	cbz	r3, 80106e6 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80106d0:	f001 fafe 	bl	8011cd0 <xTaskRemoveFromEventList>
 80106d4:	2800      	cmp	r0, #0
 80106d6:	d0f4      	beq.n	80106c2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 80106d8:	f001 fb96 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 80106dc:	1e6a      	subs	r2, r5, #1
 80106de:	b2d3      	uxtb	r3, r2
 80106e0:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80106e2:	2b00      	cmp	r3, #0
 80106e4:	d1f1      	bne.n	80106ca <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 80106e6:	23ff      	movs	r3, #255	; 0xff
 80106e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80106ec:	f7ff fc94 	bl	8010018 <vPortExitCritical>
				( void ) xTaskResumeAll();
 80106f0:	f001 f9ee 	bl	8011ad0 <xTaskResumeAll>
 80106f4:	2501      	movs	r5, #1
 80106f6:	e785      	b.n	8010604 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80106f8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80106fa:	2b00      	cmp	r3, #0
 80106fc:	f43f af6b 	beq.w	80105d6 <xQueueGenericSend+0x1a>
 8010700:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010704:	f383 8811 	msr	BASEPRI, r3
 8010708:	f3bf 8f6f 	isb	sy
 801070c:	f3bf 8f4f 	dsb	sy
 8010710:	e7fe      	b.n	8010710 <xQueueGenericSend+0x154>
 8010712:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010716:	f383 8811 	msr	BASEPRI, r3
 801071a:	f3bf 8f6f 	isb	sy
 801071e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010722:	e7fe      	b.n	8010722 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010724:	9b01      	ldr	r3, [sp, #4]
 8010726:	2b00      	cmp	r3, #0
 8010728:	f43f af6a 	beq.w	8010600 <xQueueGenericSend+0x44>
 801072c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010730:	f383 8811 	msr	BASEPRI, r3
 8010734:	f3bf 8f6f 	isb	sy
 8010738:	f3bf 8f4f 	dsb	sy
 801073c:	e7fe      	b.n	801073c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 801073e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 8010742:	f7ff fc69 	bl	8010018 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8010746:	9901      	ldr	r1, [sp, #4]
 8010748:	4648      	mov	r0, r9
 801074a:	f001 fa33 	bl	8011bb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 801074e:	f7ff fc41 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010752:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010756:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010758:	2d00      	cmp	r5, #0
 801075a:	dc04      	bgt.n	8010766 <xQueueGenericSend+0x1aa>
 801075c:	e011      	b.n	8010782 <xQueueGenericSend+0x1c6>
			--cTxLock;
 801075e:	1e6b      	subs	r3, r5, #1
 8010760:	b2da      	uxtb	r2, r3
 8010762:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010764:	b16a      	cbz	r2, 8010782 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010766:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010768:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801076a:	b153      	cbz	r3, 8010782 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801076c:	f001 fab0 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010770:	2800      	cmp	r0, #0
 8010772:	d0f4      	beq.n	801075e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 8010774:	f001 fb48 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 8010778:	1e6b      	subs	r3, r5, #1
 801077a:	b2da      	uxtb	r2, r3
 801077c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801077e:	2a00      	cmp	r2, #0
 8010780:	d1f1      	bne.n	8010766 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 8010782:	23ff      	movs	r3, #255	; 0xff
 8010784:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010788:	f7ff fc46 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 801078c:	f7ff fc22 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010790:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010794:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010796:	2d00      	cmp	r5, #0
 8010798:	dc04      	bgt.n	80107a4 <xQueueGenericSend+0x1e8>
 801079a:	e011      	b.n	80107c0 <xQueueGenericSend+0x204>
				--cRxLock;
 801079c:	1e6b      	subs	r3, r5, #1
 801079e:	b2da      	uxtb	r2, r3
 80107a0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107a2:	b16a      	cbz	r2, 80107c0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80107a4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107a6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80107a8:	b153      	cbz	r3, 80107c0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80107aa:	f001 fa91 	bl	8011cd0 <xTaskRemoveFromEventList>
 80107ae:	2800      	cmp	r0, #0
 80107b0:	d0f4      	beq.n	801079c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 80107b2:	f001 fb29 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 80107b6:	1e6b      	subs	r3, r5, #1
 80107b8:	b2da      	uxtb	r2, r3
 80107ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80107bc:	2a00      	cmp	r2, #0
 80107be:	d1f1      	bne.n	80107a4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 80107c0:	23ff      	movs	r3, #255	; 0xff
 80107c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 80107c6:	f7ff fc27 	bl	8010018 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 80107ca:	f001 f981 	bl	8011ad0 <xTaskResumeAll>
 80107ce:	2800      	cmp	r0, #0
 80107d0:	d190      	bne.n	80106f4 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 80107d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80107d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80107da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80107de:	f3bf 8f4f 	dsb	sy
 80107e2:	f3bf 8f6f 	isb	sy
 80107e6:	e785      	b.n	80106f4 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80107e8:	a802      	add	r0, sp, #8
 80107ea:	f001 fab9 	bl	8011d60 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 80107ee:	e71a      	b.n	8010626 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80107f0:	463a      	mov	r2, r7
 80107f2:	4641      	mov	r1, r8
 80107f4:	4620      	mov	r0, r4
 80107f6:	f7ff fd4f 	bl	8010298 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80107fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80107fc:	2b00      	cmp	r3, #0
 80107fe:	d153      	bne.n	80108a8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 8010800:	b148      	cbz	r0, 8010816 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 8010802:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010806:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801080a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801080e:	f3bf 8f4f 	dsb	sy
 8010812:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8010816:	f7ff fbff 	bl	8010018 <vPortExitCritical>
				return pdPASS;
 801081a:	2001      	movs	r0, #1
}
 801081c:	b005      	add	sp, #20
 801081e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010822:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 8010824:	f7ff fbf8 	bl	8010018 <vPortExitCritical>
					return errQUEUE_FULL;
 8010828:	9800      	ldr	r0, [sp, #0]
 801082a:	e7f7      	b.n	801081c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 801082c:	f7ff fbd2 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010830:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010834:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010836:	2d00      	cmp	r5, #0
 8010838:	dd10      	ble.n	801085c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801083a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 801083e:	e003      	b.n	8010848 <xQueueGenericSend+0x28c>
			--cTxLock;
 8010840:	1e6b      	subs	r3, r5, #1
 8010842:	b2da      	uxtb	r2, r3
 8010844:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010846:	b14a      	cbz	r2, 801085c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010848:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801084a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 801084c:	b133      	cbz	r3, 801085c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801084e:	f001 fa3f 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010852:	2800      	cmp	r0, #0
 8010854:	d0f4      	beq.n	8010840 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 8010856:	f001 fad7 	bl	8011e08 <vTaskMissedYield>
 801085a:	e7f1      	b.n	8010840 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 801085c:	23ff      	movs	r3, #255	; 0xff
 801085e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010862:	f7ff fbd9 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010866:	f7ff fbb5 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801086a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801086e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010870:	2d00      	cmp	r5, #0
 8010872:	dd10      	ble.n	8010896 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010874:	f104 0610 	add.w	r6, r4, #16
 8010878:	e003      	b.n	8010882 <xQueueGenericSend+0x2c6>
				--cRxLock;
 801087a:	1e6b      	subs	r3, r5, #1
 801087c:	b2da      	uxtb	r2, r3
 801087e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010880:	b14a      	cbz	r2, 8010896 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010882:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010884:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010886:	b133      	cbz	r3, 8010896 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010888:	f001 fa22 	bl	8011cd0 <xTaskRemoveFromEventList>
 801088c:	2800      	cmp	r0, #0
 801088e:	d0f4      	beq.n	801087a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 8010890:	f001 faba 	bl	8011e08 <vTaskMissedYield>
 8010894:	e7f1      	b.n	801087a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 8010896:	23ff      	movs	r3, #255	; 0xff
 8010898:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 801089c:	f7ff fbbc 	bl	8010018 <vPortExitCritical>
			( void ) xTaskResumeAll();
 80108a0:	f001 f916 	bl	8011ad0 <xTaskResumeAll>
			return errQUEUE_FULL;
 80108a4:	2000      	movs	r0, #0
 80108a6:	e7b9      	b.n	801081c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80108a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80108ac:	f001 fa10 	bl	8011cd0 <xTaskRemoveFromEventList>
 80108b0:	2800      	cmp	r0, #0
 80108b2:	d0b0      	beq.n	8010816 <xQueueGenericSend+0x25a>
 80108b4:	e7a5      	b.n	8010802 <xQueueGenericSend+0x246>
 80108b6:	bf00      	nop

080108b8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 80108b8:	2800      	cmp	r0, #0
 80108ba:	d04b      	beq.n	8010954 <xQueueGenericSendFromISR+0x9c>
{
 80108bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108c0:	460e      	mov	r6, r1
 80108c2:	4617      	mov	r7, r2
 80108c4:	461d      	mov	r5, r3
 80108c6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80108c8:	b321      	cbz	r1, 8010914 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80108ca:	2d02      	cmp	r5, #2
 80108cc:	d10b      	bne.n	80108e6 <xQueueGenericSendFromISR+0x2e>
 80108ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80108d0:	2b01      	cmp	r3, #1
 80108d2:	d008      	beq.n	80108e6 <xQueueGenericSendFromISR+0x2e>
 80108d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108d8:	f383 8811 	msr	BASEPRI, r3
 80108dc:	f3bf 8f6f 	isb	sy
 80108e0:	f3bf 8f4f 	dsb	sy
 80108e4:	e7fe      	b.n	80108e4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80108e6:	f7ff fca9 	bl	801023c <vPortValidateInterruptPriority>
	__asm volatile
 80108ea:	f3ef 8811 	mrs	r8, BASEPRI
 80108ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80108f2:	f383 8811 	msr	BASEPRI, r3
 80108f6:	f3bf 8f6f 	isb	sy
 80108fa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80108fe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010900:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010902:	429a      	cmp	r2, r3
 8010904:	d312      	bcc.n	801092c <xQueueGenericSendFromISR+0x74>
 8010906:	2d02      	cmp	r5, #2
 8010908:	d010      	beq.n	801092c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 801090a:	2000      	movs	r0, #0
	__asm volatile
 801090c:	f388 8811 	msr	BASEPRI, r8
}
 8010910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010914:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010916:	2b00      	cmp	r3, #0
 8010918:	d0d7      	beq.n	80108ca <xQueueGenericSendFromISR+0x12>
	__asm volatile
 801091a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801091e:	f383 8811 	msr	BASEPRI, r3
 8010922:	f3bf 8f6f 	isb	sy
 8010926:	f3bf 8f4f 	dsb	sy
 801092a:	e7fe      	b.n	801092a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 801092c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 801092e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010932:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010934:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 8010936:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8010938:	4620      	mov	r0, r4
 801093a:	f7ff fcad 	bl	8010298 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 801093e:	1c6b      	adds	r3, r5, #1
 8010940:	d011      	beq.n	8010966 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8010942:	1c6b      	adds	r3, r5, #1
 8010944:	b25b      	sxtb	r3, r3
 8010946:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 801094a:	2001      	movs	r0, #1
	__asm volatile
 801094c:	f388 8811 	msr	BASEPRI, r8
}
 8010950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 8010954:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010958:	f383 8811 	msr	BASEPRI, r3
 801095c:	f3bf 8f6f 	isb	sy
 8010960:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8010964:	e7fe      	b.n	8010964 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010966:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010968:	2b00      	cmp	r3, #0
 801096a:	d0ee      	beq.n	801094a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801096c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8010970:	f001 f9ae 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010974:	2800      	cmp	r0, #0
 8010976:	d0e8      	beq.n	801094a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8010978:	2f00      	cmp	r7, #0
 801097a:	d0e6      	beq.n	801094a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 801097c:	2001      	movs	r0, #1
 801097e:	6038      	str	r0, [r7, #0]
 8010980:	e7c4      	b.n	801090c <xQueueGenericSendFromISR+0x54>
 8010982:	bf00      	nop

08010984 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 8010984:	b370      	cbz	r0, 80109e4 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010986:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 8010988:	b570      	push	{r4, r5, r6, lr}
 801098a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 801098c:	b143      	cbz	r3, 80109a0 <xQueueGiveFromISR+0x1c>
 801098e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010992:	f383 8811 	msr	BASEPRI, r3
 8010996:	f3bf 8f6f 	isb	sy
 801099a:	f3bf 8f4f 	dsb	sy
 801099e:	e7fe      	b.n	801099e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80109a0:	6803      	ldr	r3, [r0, #0]
 80109a2:	460c      	mov	r4, r1
 80109a4:	b33b      	cbz	r3, 80109f6 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80109a6:	f7ff fc49 	bl	801023c <vPortValidateInterruptPriority>
	__asm volatile
 80109aa:	f3ef 8511 	mrs	r5, BASEPRI
 80109ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109b2:	f383 8811 	msr	BASEPRI, r3
 80109b6:	f3bf 8f6f 	isb	sy
 80109ba:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80109be:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 80109c0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 80109c2:	429a      	cmp	r2, r3
 80109c4:	d923      	bls.n	8010a0e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 80109c6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109ca:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 80109cc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80109ce:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 80109d0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 80109d2:	d020      	beq.n	8010a16 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80109d4:	3301      	adds	r3, #1
 80109d6:	b25b      	sxtb	r3, r3
 80109d8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 80109dc:	2001      	movs	r0, #1
	__asm volatile
 80109de:	f385 8811 	msr	BASEPRI, r5
}
 80109e2:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 80109e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80109e8:	f383 8811 	msr	BASEPRI, r3
 80109ec:	f3bf 8f6f 	isb	sy
 80109f0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80109f4:	e7fe      	b.n	80109f4 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80109f6:	6883      	ldr	r3, [r0, #8]
 80109f8:	2b00      	cmp	r3, #0
 80109fa:	d0d4      	beq.n	80109a6 <xQueueGiveFromISR+0x22>
 80109fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010a00:	f383 8811 	msr	BASEPRI, r3
 8010a04:	f3bf 8f6f 	isb	sy
 8010a08:	f3bf 8f4f 	dsb	sy
 8010a0c:	e7fe      	b.n	8010a0c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 8010a0e:	2000      	movs	r0, #0
	__asm volatile
 8010a10:	f385 8811 	msr	BASEPRI, r5
}
 8010a14:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010a16:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010a18:	2b00      	cmp	r3, #0
 8010a1a:	d0df      	beq.n	80109dc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a1c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 8010a20:	f001 f956 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010a24:	2800      	cmp	r0, #0
 8010a26:	d0d9      	beq.n	80109dc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 8010a28:	2c00      	cmp	r4, #0
 8010a2a:	d0d7      	beq.n	80109dc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8010a2c:	2001      	movs	r0, #1
 8010a2e:	6020      	str	r0, [r4, #0]
 8010a30:	e7ee      	b.n	8010a10 <xQueueGiveFromISR+0x8c>
 8010a32:	bf00      	nop

08010a34 <xQueueReceive>:
{
 8010a34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010a38:	b085      	sub	sp, #20
 8010a3a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010a3c:	2800      	cmp	r0, #0
 8010a3e:	f000 815c 	beq.w	8010cfa <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010a42:	460f      	mov	r7, r1
 8010a44:	4604      	mov	r4, r0
 8010a46:	2900      	cmp	r1, #0
 8010a48:	d079      	beq.n	8010b3e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010a4a:	f001 f9e3 	bl	8011e14 <xTaskGetSchedulerState>
 8010a4e:	2800      	cmp	r0, #0
 8010a50:	f000 8081 	beq.w	8010b56 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 8010a54:	f7ff fabe 	bl	800ffd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010a58:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010a5a:	2d00      	cmp	r5, #0
 8010a5c:	f040 8138 	bne.w	8010cd0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010a60:	9b01      	ldr	r3, [sp, #4]
 8010a62:	2b00      	cmp	r3, #0
 8010a64:	f000 80d5 	beq.w	8010c12 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010a68:	a802      	add	r0, sp, #8
 8010a6a:	f001 f979 	bl	8011d60 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 8010a6e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010a70:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 8010a74:	f7ff fad0 	bl	8010018 <vPortExitCritical>
		vTaskSuspendAll();
 8010a78:	f001 f822 	bl	8011ac0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010a7c:	f7ff faaa 	bl	800ffd4 <vPortEnterCritical>
 8010a80:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010a84:	2bff      	cmp	r3, #255	; 0xff
 8010a86:	bf08      	it	eq
 8010a88:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8010a8c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010a90:	2bff      	cmp	r3, #255	; 0xff
 8010a92:	bf08      	it	eq
 8010a94:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8010a98:	f7ff fabe 	bl	8010018 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010a9c:	a901      	add	r1, sp, #4
 8010a9e:	a802      	add	r0, sp, #8
 8010aa0:	f001 f96a 	bl	8011d78 <xTaskCheckForTimeOut>
 8010aa4:	2800      	cmp	r0, #0
 8010aa6:	d163      	bne.n	8010b70 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 8010aa8:	f7ff fa94 	bl	800ffd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010aac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010aae:	2b00      	cmp	r3, #0
 8010ab0:	f000 80b5 	beq.w	8010c1e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 8010ab4:	f7ff fab0 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010ab8:	f7ff fa8c 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010abc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010ac0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ac2:	2d00      	cmp	r5, #0
 8010ac4:	dc04      	bgt.n	8010ad0 <xQueueReceive+0x9c>
 8010ac6:	e011      	b.n	8010aec <xQueueReceive+0xb8>
			--cTxLock;
 8010ac8:	1e6b      	subs	r3, r5, #1
 8010aca:	b2da      	uxtb	r2, r3
 8010acc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ace:	b16a      	cbz	r2, 8010aec <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ad0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ad2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010ad4:	b153      	cbz	r3, 8010aec <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010ad6:	f001 f8fb 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010ada:	2800      	cmp	r0, #0
 8010adc:	d0f4      	beq.n	8010ac8 <xQueueReceive+0x94>
						vTaskMissedYield();
 8010ade:	f001 f993 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 8010ae2:	1e6b      	subs	r3, r5, #1
 8010ae4:	b2da      	uxtb	r2, r3
 8010ae6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ae8:	2a00      	cmp	r2, #0
 8010aea:	d1f1      	bne.n	8010ad0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 8010aec:	23ff      	movs	r3, #255	; 0xff
 8010aee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010af2:	f7ff fa91 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010af6:	f7ff fa6d 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010afa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010afe:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b00:	2d00      	cmp	r5, #0
 8010b02:	dd14      	ble.n	8010b2e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b04:	f104 0910 	add.w	r9, r4, #16
 8010b08:	e003      	b.n	8010b12 <xQueueReceive+0xde>
				--cRxLock;
 8010b0a:	1e6b      	subs	r3, r5, #1
 8010b0c:	b2da      	uxtb	r2, r3
 8010b0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b10:	b16a      	cbz	r2, 8010b2e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b12:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b14:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010b16:	b153      	cbz	r3, 8010b2e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010b18:	f001 f8da 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010b1c:	2800      	cmp	r0, #0
 8010b1e:	d0f4      	beq.n	8010b0a <xQueueReceive+0xd6>
					vTaskMissedYield();
 8010b20:	f001 f972 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 8010b24:	1e6b      	subs	r3, r5, #1
 8010b26:	b2da      	uxtb	r2, r3
 8010b28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010b2a:	2a00      	cmp	r2, #0
 8010b2c:	d1f1      	bne.n	8010b12 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 8010b2e:	23ff      	movs	r3, #255	; 0xff
 8010b30:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010b34:	f7ff fa70 	bl	8010018 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010b38:	f000 ffca 	bl	8011ad0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 8010b3c:	e060      	b.n	8010c00 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8010b3e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8010b40:	2b00      	cmp	r3, #0
 8010b42:	d082      	beq.n	8010a4a <xQueueReceive+0x16>
	__asm volatile
 8010b44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b48:	f383 8811 	msr	BASEPRI, r3
 8010b4c:	f3bf 8f6f 	isb	sy
 8010b50:	f3bf 8f4f 	dsb	sy
 8010b54:	e7fe      	b.n	8010b54 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010b56:	9b01      	ldr	r3, [sp, #4]
 8010b58:	2b00      	cmp	r3, #0
 8010b5a:	f43f af7b 	beq.w	8010a54 <xQueueReceive+0x20>
 8010b5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010b62:	f383 8811 	msr	BASEPRI, r3
 8010b66:	f3bf 8f6f 	isb	sy
 8010b6a:	f3bf 8f4f 	dsb	sy
 8010b6e:	e7fe      	b.n	8010b6e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 8010b70:	f7ff fa30 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010b74:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010b78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b7a:	2d00      	cmp	r5, #0
 8010b7c:	dc04      	bgt.n	8010b88 <xQueueReceive+0x154>
 8010b7e:	e011      	b.n	8010ba4 <xQueueReceive+0x170>
			--cTxLock;
 8010b80:	1e6b      	subs	r3, r5, #1
 8010b82:	b2da      	uxtb	r2, r3
 8010b84:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010b86:	b16a      	cbz	r2, 8010ba4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b88:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b8a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010b8c:	b153      	cbz	r3, 8010ba4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010b8e:	f001 f89f 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010b92:	2800      	cmp	r0, #0
 8010b94:	d0f4      	beq.n	8010b80 <xQueueReceive+0x14c>
						vTaskMissedYield();
 8010b96:	f001 f937 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 8010b9a:	1e6b      	subs	r3, r5, #1
 8010b9c:	b2da      	uxtb	r2, r3
 8010b9e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ba0:	2a00      	cmp	r2, #0
 8010ba2:	d1f1      	bne.n	8010b88 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 8010ba4:	23ff      	movs	r3, #255	; 0xff
 8010ba6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010baa:	f7ff fa35 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010bae:	f7ff fa11 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010bb2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010bb6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bb8:	2d00      	cmp	r5, #0
 8010bba:	dd14      	ble.n	8010be6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bbc:	f104 0910 	add.w	r9, r4, #16
 8010bc0:	e003      	b.n	8010bca <xQueueReceive+0x196>
				--cRxLock;
 8010bc2:	1e6b      	subs	r3, r5, #1
 8010bc4:	b2da      	uxtb	r2, r3
 8010bc6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010bc8:	b16a      	cbz	r2, 8010be6 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bca:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bcc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010bce:	b153      	cbz	r3, 8010be6 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010bd0:	f001 f87e 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010bd4:	2800      	cmp	r0, #0
 8010bd6:	d0f4      	beq.n	8010bc2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 8010bd8:	f001 f916 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 8010bdc:	1e6b      	subs	r3, r5, #1
 8010bde:	b2da      	uxtb	r2, r3
 8010be0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010be2:	2a00      	cmp	r2, #0
 8010be4:	d1f1      	bne.n	8010bca <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 8010be6:	23ff      	movs	r3, #255	; 0xff
 8010be8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010bec:	f7ff fa14 	bl	8010018 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010bf0:	f000 ff6e 	bl	8011ad0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010bf4:	f7ff f9ee 	bl	800ffd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010bf8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010bfa:	b153      	cbz	r3, 8010c12 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 8010bfc:	f7ff fa0c 	bl	8010018 <vPortExitCritical>
		taskENTER_CRITICAL();
 8010c00:	f7ff f9e8 	bl	800ffd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010c04:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010c06:	2d00      	cmp	r5, #0
 8010c08:	d162      	bne.n	8010cd0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010c0a:	9b01      	ldr	r3, [sp, #4]
 8010c0c:	2b00      	cmp	r3, #0
 8010c0e:	f47f af31 	bne.w	8010a74 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 8010c12:	f7ff fa01 	bl	8010018 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8010c16:	2000      	movs	r0, #0
}
 8010c18:	b005      	add	sp, #20
 8010c1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8010c1e:	f7ff f9fb 	bl	8010018 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010c22:	9901      	ldr	r1, [sp, #4]
 8010c24:	4630      	mov	r0, r6
 8010c26:	f000 ffc5 	bl	8011bb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010c2a:	f7ff f9d3 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010c2e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010c32:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c34:	2d00      	cmp	r5, #0
 8010c36:	dc04      	bgt.n	8010c42 <xQueueReceive+0x20e>
 8010c38:	e011      	b.n	8010c5e <xQueueReceive+0x22a>
			--cTxLock;
 8010c3a:	1e6b      	subs	r3, r5, #1
 8010c3c:	b2da      	uxtb	r2, r3
 8010c3e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c40:	b16a      	cbz	r2, 8010c5e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c42:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c44:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010c46:	b153      	cbz	r3, 8010c5e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010c48:	f001 f842 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010c4c:	2800      	cmp	r0, #0
 8010c4e:	d0f4      	beq.n	8010c3a <xQueueReceive+0x206>
						vTaskMissedYield();
 8010c50:	f001 f8da 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 8010c54:	1e6b      	subs	r3, r5, #1
 8010c56:	b2da      	uxtb	r2, r3
 8010c58:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010c5a:	2a00      	cmp	r2, #0
 8010c5c:	d1f1      	bne.n	8010c42 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010c5e:	23ff      	movs	r3, #255	; 0xff
 8010c60:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010c64:	f7ff f9d8 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010c68:	f7ff f9b4 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010c6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010c70:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c72:	2d00      	cmp	r5, #0
 8010c74:	dd14      	ble.n	8010ca0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c76:	f104 0910 	add.w	r9, r4, #16
 8010c7a:	e003      	b.n	8010c84 <xQueueReceive+0x250>
				--cRxLock;
 8010c7c:	1e6b      	subs	r3, r5, #1
 8010c7e:	b2da      	uxtb	r2, r3
 8010c80:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c82:	b16a      	cbz	r2, 8010ca0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c84:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c86:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010c88:	b153      	cbz	r3, 8010ca0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010c8a:	f001 f821 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010c8e:	2800      	cmp	r0, #0
 8010c90:	d0f4      	beq.n	8010c7c <xQueueReceive+0x248>
					vTaskMissedYield();
 8010c92:	f001 f8b9 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 8010c96:	1e6b      	subs	r3, r5, #1
 8010c98:	b2da      	uxtb	r2, r3
 8010c9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010c9c:	2a00      	cmp	r2, #0
 8010c9e:	d1f1      	bne.n	8010c84 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 8010ca0:	23ff      	movs	r3, #255	; 0xff
 8010ca2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010ca6:	f7ff f9b7 	bl	8010018 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010caa:	f000 ff11 	bl	8011ad0 <xTaskResumeAll>
 8010cae:	2800      	cmp	r0, #0
 8010cb0:	d1a6      	bne.n	8010c00 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 8010cb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010cb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010cba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010cbe:	f3bf 8f4f 	dsb	sy
 8010cc2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 8010cc6:	f7ff f985 	bl	800ffd4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8010cca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8010ccc:	2d00      	cmp	r5, #0
 8010cce:	d09c      	beq.n	8010c0a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8010cd0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8010cd2:	b152      	cbz	r2, 8010cea <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cd4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cd6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cd8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8010cda:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8010cdc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8010cde:	bf24      	itt	cs
 8010ce0:	6821      	ldrcs	r1, [r4, #0]
 8010ce2:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8010ce4:	4638      	mov	r0, r7
 8010ce6:	f01d f956 	bl	802df96 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8010cea:	3d01      	subs	r5, #1
 8010cec:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010cee:	6923      	ldr	r3, [r4, #16]
 8010cf0:	b963      	cbnz	r3, 8010d0c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 8010cf2:	f7ff f991 	bl	8010018 <vPortExitCritical>
				return pdPASS;
 8010cf6:	2001      	movs	r0, #1
 8010cf8:	e78e      	b.n	8010c18 <xQueueReceive+0x1e4>
 8010cfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010cfe:	f383 8811 	msr	BASEPRI, r3
 8010d02:	f3bf 8f6f 	isb	sy
 8010d06:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010d0a:	e7fe      	b.n	8010d0a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010d0c:	f104 0010 	add.w	r0, r4, #16
 8010d10:	f000 ffde 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010d14:	2800      	cmp	r0, #0
 8010d16:	d0ec      	beq.n	8010cf2 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 8010d18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010d1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010d20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010d24:	f3bf 8f4f 	dsb	sy
 8010d28:	f3bf 8f6f 	isb	sy
 8010d2c:	e7e1      	b.n	8010cf2 <xQueueReceive+0x2be>
 8010d2e:	bf00      	nop

08010d30 <xQueueSemaphoreTake>:
{
 8010d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d34:	b084      	sub	sp, #16
 8010d36:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8010d38:	2800      	cmp	r0, #0
 8010d3a:	d05c      	beq.n	8010df6 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 8010d3c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 8010d3e:	4604      	mov	r4, r0
 8010d40:	b147      	cbz	r7, 8010d54 <xQueueSemaphoreTake+0x24>
 8010d42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010d46:	f383 8811 	msr	BASEPRI, r3
 8010d4a:	f3bf 8f6f 	isb	sy
 8010d4e:	f3bf 8f4f 	dsb	sy
 8010d52:	e7fe      	b.n	8010d52 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010d54:	f001 f85e 	bl	8011e14 <xTaskGetSchedulerState>
 8010d58:	4605      	mov	r5, r0
 8010d5a:	2800      	cmp	r0, #0
 8010d5c:	d054      	beq.n	8010e08 <xQueueSemaphoreTake+0xd8>
 8010d5e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010d60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 8010d64:	f7ff f936 	bl	800ffd4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8010d68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8010d6a:	2b00      	cmp	r3, #0
 8010d6c:	f040 8148 	bne.w	8011000 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 8010d70:	9b01      	ldr	r3, [sp, #4]
 8010d72:	2b00      	cmp	r3, #0
 8010d74:	f000 813a 	beq.w	8010fec <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 8010d78:	2d00      	cmp	r5, #0
 8010d7a:	f000 809d 	beq.w	8010eb8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 8010d7e:	f7ff f94b 	bl	8010018 <vPortExitCritical>
		vTaskSuspendAll();
 8010d82:	f000 fe9d 	bl	8011ac0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8010d86:	f7ff f925 	bl	800ffd4 <vPortEnterCritical>
 8010d8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010d8e:	2bff      	cmp	r3, #255	; 0xff
 8010d90:	bf04      	itt	eq
 8010d92:	2300      	moveq	r3, #0
 8010d94:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8010d98:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010d9c:	2bff      	cmp	r3, #255	; 0xff
 8010d9e:	bf04      	itt	eq
 8010da0:	2300      	moveq	r3, #0
 8010da2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8010da6:	f7ff f937 	bl	8010018 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8010daa:	a901      	add	r1, sp, #4
 8010dac:	a802      	add	r0, sp, #8
 8010dae:	f000 ffe3 	bl	8011d78 <xTaskCheckForTimeOut>
 8010db2:	2800      	cmp	r0, #0
 8010db4:	d135      	bne.n	8010e22 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 8010db6:	f7ff f90d 	bl	800ffd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010dba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010dbc:	2b00      	cmp	r3, #0
 8010dbe:	f000 80a4 	beq.w	8010f0a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 8010dc2:	f7ff f929 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010dc6:	f7ff f905 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010dca:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010dce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010dd0:	2d00      	cmp	r5, #0
 8010dd2:	dc05      	bgt.n	8010de0 <xQueueSemaphoreTake+0xb0>
 8010dd4:	e074      	b.n	8010ec0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 8010dd6:	1e6b      	subs	r3, r5, #1
 8010dd8:	b2da      	uxtb	r2, r3
 8010dda:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010ddc:	2a00      	cmp	r2, #0
 8010dde:	d06f      	beq.n	8010ec0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010de0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010de2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010de4:	2b00      	cmp	r3, #0
 8010de6:	d06b      	beq.n	8010ec0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010de8:	f000 ff72 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010dec:	2800      	cmp	r0, #0
 8010dee:	d0f2      	beq.n	8010dd6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 8010df0:	f001 f80a 	bl	8011e08 <vTaskMissedYield>
 8010df4:	e7ef      	b.n	8010dd6 <xQueueSemaphoreTake+0xa6>
 8010df6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010dfa:	f383 8811 	msr	BASEPRI, r3
 8010dfe:	f3bf 8f6f 	isb	sy
 8010e02:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 8010e06:	e7fe      	b.n	8010e06 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8010e08:	9b01      	ldr	r3, [sp, #4]
 8010e0a:	2b00      	cmp	r3, #0
 8010e0c:	f000 80d4 	beq.w	8010fb8 <xQueueSemaphoreTake+0x288>
 8010e10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010e14:	f383 8811 	msr	BASEPRI, r3
 8010e18:	f3bf 8f6f 	isb	sy
 8010e1c:	f3bf 8f4f 	dsb	sy
 8010e20:	e7fe      	b.n	8010e20 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 8010e22:	f7ff f8d7 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010e26:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010e2a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e2c:	2d00      	cmp	r5, #0
 8010e2e:	dc04      	bgt.n	8010e3a <xQueueSemaphoreTake+0x10a>
 8010e30:	e011      	b.n	8010e56 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 8010e32:	1e6b      	subs	r3, r5, #1
 8010e34:	b2da      	uxtb	r2, r3
 8010e36:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e38:	b16a      	cbz	r2, 8010e56 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e3c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010e3e:	b153      	cbz	r3, 8010e56 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010e40:	f000 ff46 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010e44:	2800      	cmp	r0, #0
 8010e46:	d0f4      	beq.n	8010e32 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 8010e48:	f000 ffde 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 8010e4c:	1e6b      	subs	r3, r5, #1
 8010e4e:	b2da      	uxtb	r2, r3
 8010e50:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010e52:	2a00      	cmp	r2, #0
 8010e54:	d1f1      	bne.n	8010e3a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 8010e56:	23ff      	movs	r3, #255	; 0xff
 8010e58:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010e5c:	f7ff f8dc 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010e60:	f7ff f8b8 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010e64:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010e68:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e6a:	2d00      	cmp	r5, #0
 8010e6c:	dd14      	ble.n	8010e98 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e6e:	f104 0810 	add.w	r8, r4, #16
 8010e72:	e003      	b.n	8010e7c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 8010e74:	1e6b      	subs	r3, r5, #1
 8010e76:	b2da      	uxtb	r2, r3
 8010e78:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e7a:	b16a      	cbz	r2, 8010e98 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e7c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e7e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010e80:	b153      	cbz	r3, 8010e98 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010e82:	f000 ff25 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010e86:	2800      	cmp	r0, #0
 8010e88:	d0f4      	beq.n	8010e74 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 8010e8a:	f000 ffbd 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 8010e8e:	1e6b      	subs	r3, r5, #1
 8010e90:	b2da      	uxtb	r2, r3
 8010e92:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010e94:	2a00      	cmp	r2, #0
 8010e96:	d1f1      	bne.n	8010e7c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 8010e98:	23ff      	movs	r3, #255	; 0xff
 8010e9a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010e9e:	f7ff f8bb 	bl	8010018 <vPortExitCritical>
			( void ) xTaskResumeAll();
 8010ea2:	f000 fe15 	bl	8011ad0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 8010ea6:	f7ff f895 	bl	800ffd4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8010eaa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8010eac:	2b00      	cmp	r3, #0
 8010eae:	d07c      	beq.n	8010faa <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 8010eb0:	f7ff f8b2 	bl	8010018 <vPortExitCritical>
	return xReturn;
 8010eb4:	2501      	movs	r5, #1
 8010eb6:	e755      	b.n	8010d64 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8010eb8:	a802      	add	r0, sp, #8
 8010eba:	f000 ff51 	bl	8011d60 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 8010ebe:	e75e      	b.n	8010d7e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 8010ec0:	23ff      	movs	r3, #255	; 0xff
 8010ec2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010ec6:	f7ff f8a7 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010eca:	f7ff f883 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010ece:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010ed2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ed4:	2d00      	cmp	r5, #0
 8010ed6:	dd10      	ble.n	8010efa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ed8:	f104 0810 	add.w	r8, r4, #16
 8010edc:	e003      	b.n	8010ee6 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 8010ede:	1e6b      	subs	r3, r5, #1
 8010ee0:	b2da      	uxtb	r2, r3
 8010ee2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010ee4:	b14a      	cbz	r2, 8010efa <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010ee6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010ee8:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010eea:	b133      	cbz	r3, 8010efa <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010eec:	f000 fef0 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010ef0:	2800      	cmp	r0, #0
 8010ef2:	d0f4      	beq.n	8010ede <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 8010ef4:	f000 ff88 	bl	8011e08 <vTaskMissedYield>
 8010ef8:	e7f1      	b.n	8010ede <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 8010efa:	23ff      	movs	r3, #255	; 0xff
 8010efc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f00:	f7ff f88a 	bl	8010018 <vPortExitCritical>
				( void ) xTaskResumeAll();
 8010f04:	f000 fde4 	bl	8011ad0 <xTaskResumeAll>
 8010f08:	e7d4      	b.n	8010eb4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010f0a:	f7ff f885 	bl	8010018 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8010f0e:	6823      	ldr	r3, [r4, #0]
 8010f10:	2b00      	cmp	r3, #0
 8010f12:	d062      	beq.n	8010fda <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8010f14:	9901      	ldr	r1, [sp, #4]
 8010f16:	4630      	mov	r0, r6
 8010f18:	f000 fe4c 	bl	8011bb4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 8010f1c:	f7ff f85a 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8010f20:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8010f24:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f26:	2d00      	cmp	r5, #0
 8010f28:	dc04      	bgt.n	8010f34 <xQueueSemaphoreTake+0x204>
 8010f2a:	e00d      	b.n	8010f48 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 8010f2c:	1e6b      	subs	r3, r5, #1
 8010f2e:	b2da      	uxtb	r2, r3
 8010f30:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8010f32:	b14a      	cbz	r2, 8010f48 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f34:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f36:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8010f38:	b133      	cbz	r3, 8010f48 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8010f3a:	f000 fec9 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010f3e:	2800      	cmp	r0, #0
 8010f40:	d0f4      	beq.n	8010f2c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 8010f42:	f000 ff61 	bl	8011e08 <vTaskMissedYield>
 8010f46:	e7f1      	b.n	8010f2c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 8010f48:	23ff      	movs	r3, #255	; 0xff
 8010f4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8010f4e:	f7ff f863 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8010f52:	f7ff f83f 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8010f56:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8010f5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f5c:	2d00      	cmp	r5, #0
 8010f5e:	dd10      	ble.n	8010f82 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f60:	f104 0810 	add.w	r8, r4, #16
 8010f64:	e003      	b.n	8010f6e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 8010f66:	1e6b      	subs	r3, r5, #1
 8010f68:	b2da      	uxtb	r2, r3
 8010f6a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8010f6c:	b14a      	cbz	r2, 8010f82 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f6e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f70:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8010f72:	b133      	cbz	r3, 8010f82 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8010f74:	f000 feac 	bl	8011cd0 <xTaskRemoveFromEventList>
 8010f78:	2800      	cmp	r0, #0
 8010f7a:	d0f4      	beq.n	8010f66 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 8010f7c:	f000 ff44 	bl	8011e08 <vTaskMissedYield>
 8010f80:	e7f1      	b.n	8010f66 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 8010f82:	23ff      	movs	r3, #255	; 0xff
 8010f84:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 8010f88:	f7ff f846 	bl	8010018 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 8010f8c:	f000 fda0 	bl	8011ad0 <xTaskResumeAll>
 8010f90:	2800      	cmp	r0, #0
 8010f92:	d18f      	bne.n	8010eb4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 8010f94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8010f98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010f9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8010fa0:	f3bf 8f4f 	dsb	sy
 8010fa4:	f3bf 8f6f 	isb	sy
 8010fa8:	e784      	b.n	8010eb4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 8010faa:	f7ff f835 	bl	8010018 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 8010fae:	b92f      	cbnz	r7, 8010fbc <xQueueSemaphoreTake+0x28c>
}
 8010fb0:	4638      	mov	r0, r7
 8010fb2:	b004      	add	sp, #16
 8010fb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010fb8:	4607      	mov	r7, r0
 8010fba:	e6d1      	b.n	8010d60 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 8010fbc:	f7ff f80a 	bl	800ffd4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8010fc0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010fc2:	b119      	cbz	r1, 8010fcc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8010fc4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010fc6:	6819      	ldr	r1, [r3, #0]
 8010fc8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8010fcc:	68a0      	ldr	r0, [r4, #8]
 8010fce:	f000 ffbd 	bl	8011f4c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8010fd2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 8010fd4:	f7ff f820 	bl	8010018 <vPortExitCritical>
 8010fd8:	e7ea      	b.n	8010fb0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 8010fda:	f7fe fffb 	bl	800ffd4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8010fde:	68a0      	ldr	r0, [r4, #8]
 8010fe0:	f000 ff28 	bl	8011e34 <xTaskPriorityInherit>
 8010fe4:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 8010fe6:	f7ff f817 	bl	8010018 <vPortExitCritical>
 8010fea:	e793      	b.n	8010f14 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8010fec:	b197      	cbz	r7, 8011014 <xQueueSemaphoreTake+0x2e4>
 8010fee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010ff2:	f383 8811 	msr	BASEPRI, r3
 8010ff6:	f3bf 8f6f 	isb	sy
 8010ffa:	f3bf 8f4f 	dsb	sy
 8010ffe:	e7fe      	b.n	8010ffe <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011000:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8011002:	3b01      	subs	r3, #1
 8011004:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8011006:	b1ca      	cbz	r2, 801103c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8011008:	6923      	ldr	r3, [r4, #16]
 801100a:	b933      	cbnz	r3, 801101a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 801100c:	f7ff f804 	bl	8010018 <vPortExitCritical>
				return pdPASS;
 8011010:	2701      	movs	r7, #1
 8011012:	e7cd      	b.n	8010fb0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 8011014:	f7ff f800 	bl	8010018 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8011018:	e7ca      	b.n	8010fb0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801101a:	f104 0010 	add.w	r0, r4, #16
 801101e:	f000 fe57 	bl	8011cd0 <xTaskRemoveFromEventList>
 8011022:	2800      	cmp	r0, #0
 8011024:	d0f2      	beq.n	801100c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 8011026:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801102a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801102e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011032:	f3bf 8f4f 	dsb	sy
 8011036:	f3bf 8f6f 	isb	sy
 801103a:	e7e7      	b.n	801100c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 801103c:	f000 ffda 	bl	8011ff4 <pvTaskIncrementMutexHeldCount>
 8011040:	60a0      	str	r0, [r4, #8]
 8011042:	e7e1      	b.n	8011008 <xQueueSemaphoreTake+0x2d8>

08011044 <xQueueReceiveFromISR>:
{
 8011044:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 8011048:	b310      	cbz	r0, 8011090 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 801104a:	460e      	mov	r6, r1
 801104c:	4617      	mov	r7, r2
 801104e:	4604      	mov	r4, r0
 8011050:	b191      	cbz	r1, 8011078 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8011052:	f7ff f8f3 	bl	801023c <vPortValidateInterruptPriority>
	__asm volatile
 8011056:	f3ef 8911 	mrs	r9, BASEPRI
 801105a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801105e:	f383 8811 	msr	BASEPRI, r3
 8011062:	f3bf 8f6f 	isb	sy
 8011066:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 801106a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 801106c:	b9cd      	cbnz	r5, 80110a2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 801106e:	4628      	mov	r0, r5
	__asm volatile
 8011070:	f389 8811 	msr	BASEPRI, r9
}
 8011074:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8011078:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801107a:	2b00      	cmp	r3, #0
 801107c:	d0e9      	beq.n	8011052 <xQueueReceiveFromISR+0xe>
	__asm volatile
 801107e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011082:	f383 8811 	msr	BASEPRI, r3
 8011086:	f3bf 8f6f 	isb	sy
 801108a:	f3bf 8f4f 	dsb	sy
 801108e:	e7fe      	b.n	801108e <xQueueReceiveFromISR+0x4a>
 8011090:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011094:	f383 8811 	msr	BASEPRI, r3
 8011098:	f3bf 8f6f 	isb	sy
 801109c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 80110a0:	e7fe      	b.n	80110a0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 80110a2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80110a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 80110a8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 80110ac:	b152      	cbz	r2, 80110c4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110ae:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80110b0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110b2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 80110b4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80110b6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80110b8:	bf24      	itt	cs
 80110ba:	6821      	ldrcs	r1, [r4, #0]
 80110bc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80110be:	4630      	mov	r0, r6
 80110c0:	f01c ff69 	bl	802df96 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110c4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 80110c6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80110ca:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80110cc:	d009      	beq.n	80110e2 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80110ce:	f108 0301 	add.w	r3, r8, #1
 80110d2:	b25b      	sxtb	r3, r3
 80110d4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 80110d8:	2001      	movs	r0, #1
	__asm volatile
 80110da:	f389 8811 	msr	BASEPRI, r9
}
 80110de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80110e2:	6923      	ldr	r3, [r4, #16]
 80110e4:	2b00      	cmp	r3, #0
 80110e6:	d0f7      	beq.n	80110d8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80110e8:	f104 0010 	add.w	r0, r4, #16
 80110ec:	f000 fdf0 	bl	8011cd0 <xTaskRemoveFromEventList>
 80110f0:	2800      	cmp	r0, #0
 80110f2:	d0f1      	beq.n	80110d8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 80110f4:	2f00      	cmp	r7, #0
 80110f6:	d0ef      	beq.n	80110d8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80110f8:	2001      	movs	r0, #1
 80110fa:	6038      	str	r0, [r7, #0]
 80110fc:	e7b8      	b.n	8011070 <xQueueReceiveFromISR+0x2c>
 80110fe:	bf00      	nop

08011100 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 8011100:	b158      	cbz	r0, 801111a <uxQueueMessagesWaiting+0x1a>
{
 8011102:	b510      	push	{r4, lr}
 8011104:	4604      	mov	r4, r0
 8011106:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 8011108:	f7fe ff64 	bl	800ffd4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 801110c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 801110e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011110:	f7fe ff82 	bl	8010018 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011114:	9801      	ldr	r0, [sp, #4]
 8011116:	b002      	add	sp, #8
 8011118:	bd10      	pop	{r4, pc}
	__asm volatile
 801111a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801111e:	f383 8811 	msr	BASEPRI, r3
 8011122:	f3bf 8f6f 	isb	sy
 8011126:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 801112a:	e7fe      	b.n	801112a <uxQueueMessagesWaiting+0x2a>

0801112c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 801112c:	b108      	cbz	r0, 8011132 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 801112e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8011130:	4770      	bx	lr
 8011132:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011136:	f383 8811 	msr	BASEPRI, r3
 801113a:	f3bf 8f6f 	isb	sy
 801113e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011142:	e7fe      	b.n	8011142 <uxQueueMessagesWaitingFromISR+0x16>
 8011144:	0000      	movs	r0, r0
	...

08011148 <vQueueDelete>:
	configASSERT( pxQueue );
 8011148:	b1f0      	cbz	r0, 8011188 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801114a:	4b21      	ldr	r3, [pc, #132]	; (80111d0 <vQueueDelete+0x88>)
 801114c:	685a      	ldr	r2, [r3, #4]
 801114e:	4290      	cmp	r0, r2
 8011150:	d025      	beq.n	801119e <vQueueDelete+0x56>
 8011152:	68da      	ldr	r2, [r3, #12]
 8011154:	4290      	cmp	r0, r2
 8011156:	d02c      	beq.n	80111b2 <vQueueDelete+0x6a>
 8011158:	695a      	ldr	r2, [r3, #20]
 801115a:	4290      	cmp	r0, r2
 801115c:	d02b      	beq.n	80111b6 <vQueueDelete+0x6e>
 801115e:	69da      	ldr	r2, [r3, #28]
 8011160:	4290      	cmp	r0, r2
 8011162:	d02a      	beq.n	80111ba <vQueueDelete+0x72>
 8011164:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8011166:	4290      	cmp	r0, r2
 8011168:	d029      	beq.n	80111be <vQueueDelete+0x76>
 801116a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801116c:	4290      	cmp	r0, r2
 801116e:	d01e      	beq.n	80111ae <vQueueDelete+0x66>
 8011170:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8011172:	4290      	cmp	r0, r2
 8011174:	d025      	beq.n	80111c2 <vQueueDelete+0x7a>
 8011176:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8011178:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801117a:	bf08      	it	eq
 801117c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801117e:	d00f      	beq.n	80111a0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8011180:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 8011184:	b14b      	cbz	r3, 801119a <vQueueDelete+0x52>
}
 8011186:	4770      	bx	lr
 8011188:	f04f 0350 	mov.w	r3, #80	; 0x50
 801118c:	f383 8811 	msr	BASEPRI, r3
 8011190:	f3bf 8f6f 	isb	sy
 8011194:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 8011198:	e7fe      	b.n	8011198 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 801119a:	f7fe be07 	b.w	800fdac <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801119e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 80111a0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80111c8 <vQueueDelete+0x80>
 80111a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80111a8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 80111ac:	e7e8      	b.n	8011180 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111ae:	2205      	movs	r2, #5
 80111b0:	e7f6      	b.n	80111a0 <vQueueDelete+0x58>
 80111b2:	2201      	movs	r2, #1
 80111b4:	e7f4      	b.n	80111a0 <vQueueDelete+0x58>
 80111b6:	2202      	movs	r2, #2
 80111b8:	e7f2      	b.n	80111a0 <vQueueDelete+0x58>
 80111ba:	2203      	movs	r2, #3
 80111bc:	e7f0      	b.n	80111a0 <vQueueDelete+0x58>
 80111be:	2204      	movs	r2, #4
 80111c0:	e7ee      	b.n	80111a0 <vQueueDelete+0x58>
 80111c2:	2206      	movs	r2, #6
 80111c4:	e7ec      	b.n	80111a0 <vQueueDelete+0x58>
 80111c6:	bf00      	nop
	...
 80111d0:	200131c8 	.word	0x200131c8

080111d4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80111d4:	4b12      	ldr	r3, [pc, #72]	; (8011220 <vQueueAddToRegistry+0x4c>)
 80111d6:	681a      	ldr	r2, [r3, #0]
 80111d8:	b17a      	cbz	r2, 80111fa <vQueueAddToRegistry+0x26>
 80111da:	689a      	ldr	r2, [r3, #8]
 80111dc:	b162      	cbz	r2, 80111f8 <vQueueAddToRegistry+0x24>
 80111de:	691a      	ldr	r2, [r3, #16]
 80111e0:	b192      	cbz	r2, 8011208 <vQueueAddToRegistry+0x34>
 80111e2:	699a      	ldr	r2, [r3, #24]
 80111e4:	b192      	cbz	r2, 801120c <vQueueAddToRegistry+0x38>
 80111e6:	6a1a      	ldr	r2, [r3, #32]
 80111e8:	b192      	cbz	r2, 8011210 <vQueueAddToRegistry+0x3c>
 80111ea:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80111ec:	b192      	cbz	r2, 8011214 <vQueueAddToRegistry+0x40>
 80111ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80111f0:	b192      	cbz	r2, 8011218 <vQueueAddToRegistry+0x44>
 80111f2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80111f4:	b192      	cbz	r2, 801121c <vQueueAddToRegistry+0x48>
	}
 80111f6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80111f8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 80111fa:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80111fe:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8011202:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 8011206:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8011208:	2202      	movs	r2, #2
 801120a:	e7f6      	b.n	80111fa <vQueueAddToRegistry+0x26>
 801120c:	2203      	movs	r2, #3
 801120e:	e7f4      	b.n	80111fa <vQueueAddToRegistry+0x26>
 8011210:	2204      	movs	r2, #4
 8011212:	e7f2      	b.n	80111fa <vQueueAddToRegistry+0x26>
 8011214:	2205      	movs	r2, #5
 8011216:	e7f0      	b.n	80111fa <vQueueAddToRegistry+0x26>
 8011218:	2206      	movs	r2, #6
 801121a:	e7ee      	b.n	80111fa <vQueueAddToRegistry+0x26>
 801121c:	2207      	movs	r2, #7
 801121e:	e7ec      	b.n	80111fa <vQueueAddToRegistry+0x26>
 8011220:	200131c8 	.word	0x200131c8

08011224 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8011224:	b570      	push	{r4, r5, r6, lr}
 8011226:	4605      	mov	r5, r0
 8011228:	460e      	mov	r6, r1
 801122a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 801122c:	f7fe fed2 	bl	800ffd4 <vPortEnterCritical>
 8011230:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 8011234:	2bff      	cmp	r3, #255	; 0xff
 8011236:	bf04      	itt	eq
 8011238:	2300      	moveq	r3, #0
 801123a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 801123e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 8011242:	2bff      	cmp	r3, #255	; 0xff
 8011244:	bf04      	itt	eq
 8011246:	2300      	moveq	r3, #0
 8011248:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 801124c:	f7fe fee4 	bl	8010018 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8011250:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8011252:	2b00      	cmp	r3, #0
 8011254:	d043      	beq.n	80112de <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 8011256:	f7fe febd 	bl	800ffd4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 801125a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 801125e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011260:	2c00      	cmp	r4, #0
 8011262:	dd14      	ble.n	801128e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011264:	f105 0624 	add.w	r6, r5, #36	; 0x24
 8011268:	e003      	b.n	8011272 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 801126a:	1e63      	subs	r3, r4, #1
 801126c:	b2da      	uxtb	r2, r3
 801126e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8011270:	b16a      	cbz	r2, 801128e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011272:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011274:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8011276:	b153      	cbz	r3, 801128e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8011278:	f000 fd2a 	bl	8011cd0 <xTaskRemoveFromEventList>
 801127c:	2800      	cmp	r0, #0
 801127e:	d0f4      	beq.n	801126a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 8011280:	f000 fdc2 	bl	8011e08 <vTaskMissedYield>
			--cTxLock;
 8011284:	1e63      	subs	r3, r4, #1
 8011286:	b2da      	uxtb	r2, r3
 8011288:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801128a:	2a00      	cmp	r2, #0
 801128c:	d1f1      	bne.n	8011272 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 801128e:	23ff      	movs	r3, #255	; 0xff
 8011290:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 8011294:	f7fe fec0 	bl	8010018 <vPortExitCritical>
	taskENTER_CRITICAL();
 8011298:	f7fe fe9c 	bl	800ffd4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801129c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 80112a0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112a2:	2c00      	cmp	r4, #0
 80112a4:	dd14      	ble.n	80112d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112a6:	f105 0610 	add.w	r6, r5, #16
 80112aa:	e003      	b.n	80112b4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 80112ac:	1e63      	subs	r3, r4, #1
 80112ae:	b2da      	uxtb	r2, r3
 80112b0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112b2:	b16a      	cbz	r2, 80112d0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112b4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112b6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80112b8:	b153      	cbz	r3, 80112d0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80112ba:	f000 fd09 	bl	8011cd0 <xTaskRemoveFromEventList>
 80112be:	2800      	cmp	r0, #0
 80112c0:	d0f4      	beq.n	80112ac <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 80112c2:	f000 fda1 	bl	8011e08 <vTaskMissedYield>
				--cRxLock;
 80112c6:	1e63      	subs	r3, r4, #1
 80112c8:	b2da      	uxtb	r2, r3
 80112ca:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80112cc:	2a00      	cmp	r2, #0
 80112ce:	d1f1      	bne.n	80112b4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 80112d0:	23ff      	movs	r3, #255	; 0xff
 80112d2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 80112d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80112da:	f7fe be9d 	b.w	8010018 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80112de:	4622      	mov	r2, r4
 80112e0:	4631      	mov	r1, r6
 80112e2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80112e6:	f000 fca9 	bl	8011c3c <vTaskPlaceOnEventListRestricted>
 80112ea:	e7b4      	b.n	8011256 <vQueueWaitForMessageRestricted+0x32>

080112ec <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80112ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80112f0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80112f2:	f7fe fe6f 	bl	800ffd4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80112f6:	4a34      	ldr	r2, [pc, #208]	; (80113c8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 80112f8:	4e34      	ldr	r6, [pc, #208]	; (80113cc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 80112fa:	6813      	ldr	r3, [r2, #0]
 80112fc:	3301      	adds	r3, #1
 80112fe:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 8011300:	6833      	ldr	r3, [r6, #0]
 8011302:	2b00      	cmp	r3, #0
 8011304:	d032      	beq.n	801136c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 8011306:	4c32      	ldr	r4, [pc, #200]	; (80113d0 <prvAddNewTaskToReadyList+0xe4>)
 8011308:	6823      	ldr	r3, [r4, #0]
 801130a:	b33b      	cbz	r3, 801135c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801130c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 801130e:	4f31      	ldr	r7, [pc, #196]	; (80113d4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 8011310:	4a31      	ldr	r2, [pc, #196]	; (80113d8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 8011312:	4932      	ldr	r1, [pc, #200]	; (80113dc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 8011314:	6813      	ldr	r3, [r2, #0]
 8011316:	3301      	adds	r3, #1
 8011318:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 801131a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 801131c:	680b      	ldr	r3, [r1, #0]
 801131e:	4283      	cmp	r3, r0
 8011320:	bf38      	it	cc
 8011322:	6008      	strcc	r0, [r1, #0]
 8011324:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011328:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 801132c:	1d29      	adds	r1, r5, #4
 801132e:	f7fe fdb1 	bl	800fe94 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 8011332:	f7fe fe71 	bl	8010018 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 8011336:	6823      	ldr	r3, [r4, #0]
 8011338:	b173      	cbz	r3, 8011358 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 801133a:	6832      	ldr	r2, [r6, #0]
 801133c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801133e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011340:	429a      	cmp	r2, r3
 8011342:	d209      	bcs.n	8011358 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 8011344:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011348:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801134c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8011350:	f3bf 8f4f 	dsb	sy
 8011354:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8011358:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 801135c:	6833      	ldr	r3, [r6, #0]
 801135e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011360:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011362:	4f1c      	ldr	r7, [pc, #112]	; (80113d4 <prvAddNewTaskToReadyList+0xe8>)
 8011364:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 8011366:	bf98      	it	ls
 8011368:	6035      	strls	r5, [r6, #0]
 801136a:	e7d1      	b.n	8011310 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 801136c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 801136e:	6813      	ldr	r3, [r2, #0]
 8011370:	2b01      	cmp	r3, #1
 8011372:	d003      	beq.n	801137c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8011374:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 8011376:	4f17      	ldr	r7, [pc, #92]	; (80113d4 <prvAddNewTaskToReadyList+0xe8>)
 8011378:	4c15      	ldr	r4, [pc, #84]	; (80113d0 <prvAddNewTaskToReadyList+0xe4>)
 801137a:	e7c9      	b.n	8011310 <prvAddNewTaskToReadyList+0x24>
 801137c:	4f15      	ldr	r7, [pc, #84]	; (80113d4 <prvAddNewTaskToReadyList+0xe8>)
 801137e:	463c      	mov	r4, r7
 8011380:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011384:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8011386:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8011388:	f7fe fd74 	bl	800fe74 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 801138c:	45a0      	cmp	r8, r4
 801138e:	d1f9      	bne.n	8011384 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 8011390:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80113f4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 8011394:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80113f8 <prvAddNewTaskToReadyList+0x10c>
 8011398:	4c0d      	ldr	r4, [pc, #52]	; (80113d0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 801139a:	4648      	mov	r0, r9
 801139c:	f7fe fd6a 	bl	800fe74 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80113a0:	4640      	mov	r0, r8
 80113a2:	f7fe fd67 	bl	800fe74 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80113a6:	480e      	ldr	r0, [pc, #56]	; (80113e0 <prvAddNewTaskToReadyList+0xf4>)
 80113a8:	f7fe fd64 	bl	800fe74 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80113ac:	480d      	ldr	r0, [pc, #52]	; (80113e4 <prvAddNewTaskToReadyList+0xf8>)
 80113ae:	f7fe fd61 	bl	800fe74 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80113b2:	480d      	ldr	r0, [pc, #52]	; (80113e8 <prvAddNewTaskToReadyList+0xfc>)
 80113b4:	f7fe fd5e 	bl	800fe74 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80113b8:	4b0c      	ldr	r3, [pc, #48]	; (80113ec <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 80113ba:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 80113bc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 80113c0:	4b0b      	ldr	r3, [pc, #44]	; (80113f0 <prvAddNewTaskToReadyList+0x104>)
 80113c2:	f8c3 8000 	str.w	r8, [r3]
}
 80113c6:	e7a3      	b.n	8011310 <prvAddNewTaskToReadyList+0x24>
 80113c8:	20013674 	.word	0x20013674
 80113cc:	20013208 	.word	0x20013208
 80113d0:	200136d0 	.word	0x200136d0
 80113d4:	20013214 	.word	0x20013214
 80113d8:	20013680 	.word	0x20013680
 80113dc:	20013684 	.word	0x20013684
 80113e0:	200136bc 	.word	0x200136bc
 80113e4:	200136e8 	.word	0x200136e8
 80113e8:	200136d4 	.word	0x200136d4
 80113ec:	2001320c 	.word	0x2001320c
 80113f0:	20013210 	.word	0x20013210
 80113f4:	20013688 	.word	0x20013688
 80113f8:	2001369c 	.word	0x2001369c

080113fc <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80113fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011400:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8011402:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011406:	ea4f 0982 	mov.w	r9, r2, lsl #2
 801140a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 801140c:	4606      	mov	r6, r0
 801140e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011410:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011412:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8011414:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8011416:	f01c fc98 	bl	802dd4a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 801141a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801141c:	f1a9 0904 	sub.w	r9, r9, #4
 8011420:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8011422:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8011426:	2d00      	cmp	r5, #0
 8011428:	d079      	beq.n	801151e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801142a:	782b      	ldrb	r3, [r5, #0]
 801142c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 8011430:	2b00      	cmp	r3, #0
 8011432:	d03b      	beq.n	80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011434:	786b      	ldrb	r3, [r5, #1]
 8011436:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 801143a:	2b00      	cmp	r3, #0
 801143c:	d036      	beq.n	80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801143e:	78ab      	ldrb	r3, [r5, #2]
 8011440:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 8011444:	b393      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011446:	78eb      	ldrb	r3, [r5, #3]
 8011448:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 801144c:	b373      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801144e:	792b      	ldrb	r3, [r5, #4]
 8011450:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 8011454:	b353      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011456:	796b      	ldrb	r3, [r5, #5]
 8011458:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 801145c:	b333      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801145e:	79ab      	ldrb	r3, [r5, #6]
 8011460:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 8011464:	b313      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011466:	79eb      	ldrb	r3, [r5, #7]
 8011468:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 801146c:	b1f3      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801146e:	7a2b      	ldrb	r3, [r5, #8]
 8011470:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 8011474:	b1d3      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011476:	7a6b      	ldrb	r3, [r5, #9]
 8011478:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 801147c:	b1b3      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801147e:	7aab      	ldrb	r3, [r5, #10]
 8011480:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 8011484:	b193      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011486:	7aeb      	ldrb	r3, [r5, #11]
 8011488:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 801148c:	b173      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801148e:	7b2b      	ldrb	r3, [r5, #12]
 8011490:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 8011494:	b153      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8011496:	7b6b      	ldrb	r3, [r5, #13]
 8011498:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 801149c:	b133      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 801149e:	7bab      	ldrb	r3, [r5, #14]
 80114a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 80114a4:	b113      	cbz	r3, 80114ac <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 80114a6:	7beb      	ldrb	r3, [r5, #15]
 80114a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 80114ac:	2300      	movs	r3, #0
 80114ae:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 80114b2:	9d08      	ldr	r5, [sp, #32]
 80114b4:	2d37      	cmp	r5, #55	; 0x37
 80114b6:	bf28      	it	cs
 80114b8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 80114ba:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 80114be:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 80114c0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114c2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 80114c4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 80114c8:	f7fe fce0 	bl	800fe8c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114cc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 80114d0:	f104 0018 	add.w	r0, r4, #24
 80114d4:	f7fe fcda 	bl	800fe8c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80114d8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 80114da:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114de:	4651      	mov	r1, sl
 80114e0:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 80114e2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 80114e4:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 80114e6:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80114ea:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 80114ee:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80114f2:	f01c fc2a 	bl	802dd4a <memset>
 80114f6:	4b0b      	ldr	r3, [pc, #44]	; (8011524 <prvInitialiseNewTask.constprop.0+0x128>)
 80114f8:	65e3      	str	r3, [r4, #92]	; 0x5c
 80114fa:	f103 0568 	add.w	r5, r3, #104	; 0x68
 80114fe:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8011500:	463a      	mov	r2, r7
 8011502:	4631      	mov	r1, r6
 8011504:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8011506:	6625      	str	r5, [r4, #96]	; 0x60
 8011508:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801150a:	f7fe fd3d 	bl	800ff88 <pxPortInitialiseStack>
 801150e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8011510:	f1b8 0f00 	cmp.w	r8, #0
 8011514:	d001      	beq.n	801151a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8011516:	f8c8 4000 	str.w	r4, [r8]
}
 801151a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 801151e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8011522:	e7c6      	b.n	80114b2 <prvInitialiseNewTask.constprop.0+0xb6>
 8011524:	20014198 	.word	0x20014198

08011528 <prvIdleTask>:
{
 8011528:	b580      	push	{r7, lr}
 801152a:	4d23      	ldr	r5, [pc, #140]	; (80115b8 <prvIdleTask+0x90>)
 801152c:	4f23      	ldr	r7, [pc, #140]	; (80115bc <prvIdleTask+0x94>)
 801152e:	4e24      	ldr	r6, [pc, #144]	; (80115c0 <prvIdleTask+0x98>)
 8011530:	f8df 8090 	ldr.w	r8, [pc, #144]	; 80115c4 <prvIdleTask+0x9c>
				taskYIELD();
 8011534:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 8011538:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801153c:	682b      	ldr	r3, [r5, #0]
 801153e:	b35b      	cbz	r3, 8011598 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 8011540:	f7fe fd48 	bl	800ffd4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011544:	68fb      	ldr	r3, [r7, #12]
 8011546:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011548:	1d20      	adds	r0, r4, #4
 801154a:	f7fe fccb 	bl	800fee4 <uxListRemove>
				--uxCurrentNumberOfTasks;
 801154e:	6833      	ldr	r3, [r6, #0]
 8011550:	3b01      	subs	r3, #1
 8011552:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 8011554:	682b      	ldr	r3, [r5, #0]
 8011556:	3b01      	subs	r3, #1
 8011558:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 801155a:	f7fe fd5d 	bl	8010018 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801155e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011562:	f01c fc3b 	bl	802dddc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8011566:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 801156a:	b163      	cbz	r3, 8011586 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 801156c:	2b01      	cmp	r3, #1
 801156e:	d01e      	beq.n	80115ae <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8011570:	2b02      	cmp	r3, #2
 8011572:	d0e3      	beq.n	801153c <prvIdleTask+0x14>
 8011574:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011578:	f383 8811 	msr	BASEPRI, r3
 801157c:	f3bf 8f6f 	isb	sy
 8011580:	f3bf 8f4f 	dsb	sy
 8011584:	e7fe      	b.n	8011584 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 8011586:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8011588:	f7fe fc10 	bl	800fdac <vPortFree>
				vPortFree( pxTCB );
 801158c:	4620      	mov	r0, r4
 801158e:	f7fe fc0d 	bl	800fdac <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8011592:	682b      	ldr	r3, [r5, #0]
 8011594:	2b00      	cmp	r3, #0
 8011596:	d1d3      	bne.n	8011540 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8011598:	f8d8 3000 	ldr.w	r3, [r8]
 801159c:	2b01      	cmp	r3, #1
 801159e:	d9cd      	bls.n	801153c <prvIdleTask+0x14>
				taskYIELD();
 80115a0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 80115a4:	f3bf 8f4f 	dsb	sy
 80115a8:	f3bf 8f6f 	isb	sy
 80115ac:	e7c6      	b.n	801153c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 80115ae:	4620      	mov	r0, r4
 80115b0:	f7fe fbfc 	bl	800fdac <vPortFree>
 80115b4:	e7c2      	b.n	801153c <prvIdleTask+0x14>
 80115b6:	bf00      	nop
 80115b8:	20013678 	.word	0x20013678
 80115bc:	200136e8 	.word	0x200136e8
 80115c0:	20013674 	.word	0x20013674
 80115c4:	20013214 	.word	0x20013214

080115c8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 80115c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 80115cc:	4b47      	ldr	r3, [pc, #284]	; (80116ec <xTaskIncrementTick.part.0+0x124>)
 80115ce:	681e      	ldr	r6, [r3, #0]
 80115d0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 80115d2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 80115d4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 80115d6:	2e00      	cmp	r6, #0
 80115d8:	d040      	beq.n	801165c <xTaskIncrementTick.part.0+0x94>
 80115da:	f8df b124 	ldr.w	fp, [pc, #292]	; 8011700 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80115de:	f8db 3000 	ldr.w	r3, [fp]
 80115e2:	429e      	cmp	r6, r3
 80115e4:	d347      	bcc.n	8011676 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80115e6:	4f42      	ldr	r7, [pc, #264]	; (80116f0 <xTaskIncrementTick.part.0+0x128>)
 80115e8:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8011704 <xTaskIncrementTick.part.0+0x13c>
 80115ec:	683b      	ldr	r3, [r7, #0]
 80115ee:	f8df a118 	ldr.w	sl, [pc, #280]	; 8011708 <xTaskIncrementTick.part.0+0x140>
 80115f2:	681d      	ldr	r5, [r3, #0]
 80115f4:	2d00      	cmp	r5, #0
 80115f6:	d073      	beq.n	80116e0 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 80115f8:	f8df 8110 	ldr.w	r8, [pc, #272]	; 801170c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 80115fc:	2500      	movs	r5, #0
 80115fe:	e022      	b.n	8011646 <xTaskIncrementTick.part.0+0x7e>
 8011600:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011602:	f7fe fc6f 	bl	800fee4 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8011606:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011608:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801160a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 801160e:	b113      	cbz	r3, 8011616 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8011610:	f7fe fc68 	bl	800fee4 <uxListRemove>
 8011614:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8011616:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011618:	f8d8 2000 	ldr.w	r2, [r8]
 801161c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011620:	4293      	cmp	r3, r2
 8011622:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 8011626:	bf88      	it	hi
 8011628:	f8c8 3000 	strhi.w	r3, [r8]
 801162c:	f7fe fc32 	bl	800fe94 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011630:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011634:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011636:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011638:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801163a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 801163c:	4291      	cmp	r1, r2
 801163e:	bf28      	it	cs
 8011640:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011642:	2b00      	cmp	r3, #0
 8011644:	d04c      	beq.n	80116e0 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011646:	683b      	ldr	r3, [r7, #0]
 8011648:	68db      	ldr	r3, [r3, #12]
 801164a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 801164c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801164e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 8011650:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011652:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 8011654:	d2d4      	bcs.n	8011600 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 8011656:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 801165a:	e011      	b.n	8011680 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 801165c:	4b24      	ldr	r3, [pc, #144]	; (80116f0 <xTaskIncrementTick.part.0+0x128>)
 801165e:	681a      	ldr	r2, [r3, #0]
 8011660:	6812      	ldr	r2, [r2, #0]
 8011662:	b30a      	cbz	r2, 80116a8 <xTaskIncrementTick.part.0+0xe0>
 8011664:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011668:	f383 8811 	msr	BASEPRI, r3
 801166c:	f3bf 8f6f 	isb	sy
 8011670:	f3bf 8f4f 	dsb	sy
 8011674:	e7fe      	b.n	8011674 <xTaskIncrementTick.part.0+0xac>
 8011676:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8011704 <xTaskIncrementTick.part.0+0x13c>
 801167a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8011708 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 801167e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011680:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 8011684:	491b      	ldr	r1, [pc, #108]	; (80116f4 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8011686:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011688:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801168c:	009b      	lsls	r3, r3, #2
 801168e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 8011692:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 8011694:	2a02      	cmp	r2, #2
 8011696:	bf28      	it	cs
 8011698:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 801169a:	2b00      	cmp	r3, #0
}
 801169c:	bf0c      	ite	eq
 801169e:	4628      	moveq	r0, r5
 80116a0:	2001      	movne	r0, #1
 80116a2:	b003      	add	sp, #12
 80116a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 80116a8:	4a13      	ldr	r2, [pc, #76]	; (80116f8 <xTaskIncrementTick.part.0+0x130>)
 80116aa:	6818      	ldr	r0, [r3, #0]
 80116ac:	6811      	ldr	r1, [r2, #0]
 80116ae:	6019      	str	r1, [r3, #0]
 80116b0:	4912      	ldr	r1, [pc, #72]	; (80116fc <xTaskIncrementTick.part.0+0x134>)
 80116b2:	6010      	str	r0, [r2, #0]
 80116b4:	680a      	ldr	r2, [r1, #0]
 80116b6:	3201      	adds	r2, #1
 80116b8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80116ba:	681a      	ldr	r2, [r3, #0]
 80116bc:	6812      	ldr	r2, [r2, #0]
 80116be:	b932      	cbnz	r2, 80116ce <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 80116c0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8011700 <xTaskIncrementTick.part.0+0x138>
 80116c4:	f04f 33ff 	mov.w	r3, #4294967295
 80116c8:	f8cb 3000 	str.w	r3, [fp]
 80116cc:	e787      	b.n	80115de <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116ce:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116d0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 8011700 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80116d4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 80116d6:	68db      	ldr	r3, [r3, #12]
 80116d8:	685b      	ldr	r3, [r3, #4]
 80116da:	f8cb 3000 	str.w	r3, [fp]
	}
}
 80116de:	e77e      	b.n	80115de <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80116e0:	f04f 33ff 	mov.w	r3, #4294967295
 80116e4:	f8cb 3000 	str.w	r3, [fp]
					break;
 80116e8:	e7ca      	b.n	8011680 <xTaskIncrementTick.part.0+0xb8>
 80116ea:	bf00      	nop
 80116ec:	200136fc 	.word	0x200136fc
 80116f0:	2001320c 	.word	0x2001320c
 80116f4:	20013700 	.word	0x20013700
 80116f8:	20013210 	.word	0x20013210
 80116fc:	200136b4 	.word	0x200136b4
 8011700:	200136b0 	.word	0x200136b0
 8011704:	20013214 	.word	0x20013214
 8011708:	20013208 	.word	0x20013208
 801170c:	20013684 	.word	0x20013684

08011710 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 8011710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 8011714:	4d41      	ldr	r5, [pc, #260]	; (801181c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 8011716:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 8011718:	f7fe fc5c 	bl	800ffd4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 801171c:	682b      	ldr	r3, [r5, #0]
 801171e:	3b01      	subs	r3, #1
 8011720:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011722:	682b      	ldr	r3, [r5, #0]
 8011724:	2b00      	cmp	r3, #0
 8011726:	d161      	bne.n	80117ec <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8011728:	4b3d      	ldr	r3, [pc, #244]	; (8011820 <xTaskResumeAll.part.0+0x110>)
 801172a:	681b      	ldr	r3, [r3, #0]
 801172c:	2b00      	cmp	r3, #0
 801172e:	d05d      	beq.n	80117ec <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011730:	4e3c      	ldr	r6, [pc, #240]	; (8011824 <xTaskResumeAll.part.0+0x114>)
 8011732:	6833      	ldr	r3, [r6, #0]
 8011734:	2b00      	cmp	r3, #0
 8011736:	d06e      	beq.n	8011816 <xTaskResumeAll.part.0+0x106>
 8011738:	4f3b      	ldr	r7, [pc, #236]	; (8011828 <xTaskResumeAll.part.0+0x118>)
 801173a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 8011838 <xTaskResumeAll.part.0+0x128>
 801173e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 801183c <xTaskResumeAll.part.0+0x12c>
 8011742:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 8011840 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011746:	68f3      	ldr	r3, [r6, #12]
 8011748:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801174a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 801174e:	f104 0018 	add.w	r0, r4, #24
 8011752:	f7fe fbc7 	bl	800fee4 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8011756:	4658      	mov	r0, fp
 8011758:	f7fe fbc4 	bl	800fee4 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 801175c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801175e:	683a      	ldr	r2, [r7, #0]
 8011760:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 8011764:	4293      	cmp	r3, r2
 8011766:	4659      	mov	r1, fp
 8011768:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 801176c:	bf88      	it	hi
 801176e:	603b      	strhi	r3, [r7, #0]
 8011770:	f7fe fb90 	bl	800fe94 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8011774:	f8d8 3000 	ldr.w	r3, [r8]
 8011778:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801177a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801177c:	429a      	cmp	r2, r3
 801177e:	d33d      	bcc.n	80117fc <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 8011780:	2301      	movs	r3, #1
 8011782:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8011786:	6833      	ldr	r3, [r6, #0]
 8011788:	2b00      	cmp	r3, #0
 801178a:	d1dc      	bne.n	8011746 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801178c:	4b27      	ldr	r3, [pc, #156]	; (801182c <xTaskResumeAll.part.0+0x11c>)
 801178e:	681a      	ldr	r2, [r3, #0]
 8011790:	6812      	ldr	r2, [r2, #0]
 8011792:	2a00      	cmp	r2, #0
 8011794:	d03a      	beq.n	801180c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011796:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8011798:	4b25      	ldr	r3, [pc, #148]	; (8011830 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801179a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801179c:	68d2      	ldr	r2, [r2, #12]
 801179e:	6852      	ldr	r2, [r2, #4]
 80117a0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80117a2:	4e24      	ldr	r6, [pc, #144]	; (8011834 <xTaskResumeAll.part.0+0x124>)
 80117a4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80117a6:	b194      	cbz	r4, 80117ce <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 80117a8:	2701      	movs	r7, #1
 80117aa:	e006      	b.n	80117ba <xTaskResumeAll.part.0+0xaa>
 80117ac:	f7ff ff0c 	bl	80115c8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 80117b0:	b108      	cbz	r0, 80117b6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 80117b2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117b6:	3c01      	subs	r4, #1
 80117b8:	d008      	beq.n	80117cc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80117ba:	682b      	ldr	r3, [r5, #0]
 80117bc:	2b00      	cmp	r3, #0
 80117be:	d0f5      	beq.n	80117ac <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 80117c0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117c2:	3c01      	subs	r4, #1
		++xPendedTicks;
 80117c4:	f103 0301 	add.w	r3, r3, #1
 80117c8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80117ca:	d1f6      	bne.n	80117ba <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 80117cc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 80117ce:	f8da 3000 	ldr.w	r3, [sl]
 80117d2:	b15b      	cbz	r3, 80117ec <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 80117d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80117d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80117dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80117e0:	f3bf 8f4f 	dsb	sy
 80117e4:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80117e8:	2001      	movs	r0, #1
 80117ea:	e000      	b.n	80117ee <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 80117ec:	2000      	movs	r0, #0
 80117ee:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80117f0:	f7fe fc12 	bl	8010018 <vPortExitCritical>
}
 80117f4:	9801      	ldr	r0, [sp, #4]
 80117f6:	b003      	add	sp, #12
 80117f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80117fc:	6833      	ldr	r3, [r6, #0]
 80117fe:	2b00      	cmp	r3, #0
 8011800:	d1a1      	bne.n	8011746 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8011802:	4b0a      	ldr	r3, [pc, #40]	; (801182c <xTaskResumeAll.part.0+0x11c>)
 8011804:	681a      	ldr	r2, [r3, #0]
 8011806:	6812      	ldr	r2, [r2, #0]
 8011808:	2a00      	cmp	r2, #0
 801180a:	d1c4      	bne.n	8011796 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 801180c:	4b08      	ldr	r3, [pc, #32]	; (8011830 <xTaskResumeAll.part.0+0x120>)
 801180e:	f04f 32ff 	mov.w	r2, #4294967295
 8011812:	601a      	str	r2, [r3, #0]
 8011814:	e7c5      	b.n	80117a2 <xTaskResumeAll.part.0+0x92>
 8011816:	f8df a028 	ldr.w	sl, [pc, #40]	; 8011840 <xTaskResumeAll.part.0+0x130>
 801181a:	e7c2      	b.n	80117a2 <xTaskResumeAll.part.0+0x92>
 801181c:	2001367c 	.word	0x2001367c
 8011820:	20013674 	.word	0x20013674
 8011824:	200136bc 	.word	0x200136bc
 8011828:	20013684 	.word	0x20013684
 801182c:	2001320c 	.word	0x2001320c
 8011830:	200136b0 	.word	0x200136b0
 8011834:	200136b8 	.word	0x200136b8
 8011838:	20013214 	.word	0x20013214
 801183c:	20013208 	.word	0x20013208
 8011840:	20013700 	.word	0x20013700

08011844 <xTaskCreateStatic>:
	{
 8011844:	b530      	push	{r4, r5, lr}
 8011846:	b087      	sub	sp, #28
 8011848:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 801184a:	b1c4      	cbz	r4, 801187e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 801184c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801184e:	b16d      	cbz	r5, 801186c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 8011850:	25ac      	movs	r5, #172	; 0xac
 8011852:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8011854:	9d05      	ldr	r5, [sp, #20]
 8011856:	2dac      	cmp	r5, #172	; 0xac
 8011858:	d01a      	beq.n	8011890 <xTaskCreateStatic+0x4c>
 801185a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801185e:	f383 8811 	msr	BASEPRI, r3
 8011862:	f3bf 8f6f 	isb	sy
 8011866:	f3bf 8f4f 	dsb	sy
 801186a:	e7fe      	b.n	801186a <xTaskCreateStatic+0x26>
 801186c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011870:	f383 8811 	msr	BASEPRI, r3
 8011874:	f3bf 8f6f 	isb	sy
 8011878:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 801187c:	e7fe      	b.n	801187c <xTaskCreateStatic+0x38>
 801187e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011882:	f383 8811 	msr	BASEPRI, r3
 8011886:	f3bf 8f6f 	isb	sy
 801188a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 801188e:	e7fe      	b.n	801188e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011890:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011892:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011894:	2402      	movs	r4, #2
 8011896:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 801189a:	ac04      	add	r4, sp, #16
 801189c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 80118a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80118a2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80118a4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80118a6:	f7ff fda9 	bl	80113fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80118aa:	980c      	ldr	r0, [sp, #48]	; 0x30
 80118ac:	f7ff fd1e 	bl	80112ec <prvAddNewTaskToReadyList>
	}
 80118b0:	9804      	ldr	r0, [sp, #16]
 80118b2:	b007      	add	sp, #28
 80118b4:	bd30      	pop	{r4, r5, pc}
 80118b6:	bf00      	nop

080118b8 <xTaskCreate>:
	{
 80118b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118bc:	4607      	mov	r7, r0
 80118be:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118c0:	0090      	lsls	r0, r2, #2
	{
 80118c2:	4615      	mov	r5, r2
 80118c4:	4688      	mov	r8, r1
 80118c6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 80118c8:	f7fe f9b4 	bl	800fc34 <pvPortMalloc>
			if( pxStack != NULL )
 80118cc:	b1d8      	cbz	r0, 8011906 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 80118ce:	4604      	mov	r4, r0
 80118d0:	20ac      	movs	r0, #172	; 0xac
 80118d2:	f7fe f9af 	bl	800fc34 <pvPortMalloc>
				if( pxNewTCB != NULL )
 80118d6:	4606      	mov	r6, r0
 80118d8:	b1d0      	cbz	r0, 8011910 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 80118da:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 80118dc:	2400      	movs	r4, #0
 80118de:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 80118e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80118e4:	9401      	str	r4, [sp, #4]
 80118e6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80118e8:	9602      	str	r6, [sp, #8]
 80118ea:	464b      	mov	r3, r9
 80118ec:	462a      	mov	r2, r5
 80118ee:	4641      	mov	r1, r8
 80118f0:	4638      	mov	r0, r7
 80118f2:	9400      	str	r4, [sp, #0]
 80118f4:	f7ff fd82 	bl	80113fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80118f8:	4630      	mov	r0, r6
 80118fa:	f7ff fcf7 	bl	80112ec <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80118fe:	2001      	movs	r0, #1
	}
 8011900:	b005      	add	sp, #20
 8011902:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011906:	f04f 30ff 	mov.w	r0, #4294967295
	}
 801190a:	b005      	add	sp, #20
 801190c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8011910:	4620      	mov	r0, r4
 8011912:	f7fe fa4b 	bl	800fdac <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8011916:	f04f 30ff 	mov.w	r0, #4294967295
 801191a:	e7f1      	b.n	8011900 <xTaskCreate+0x48>

0801191c <vTaskDelay>:
	{
 801191c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 801191e:	b950      	cbnz	r0, 8011936 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8011920:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8011924:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8011928:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801192c:	f3bf 8f4f 	dsb	sy
 8011930:	f3bf 8f6f 	isb	sy
	}
 8011934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8011936:	4d1e      	ldr	r5, [pc, #120]	; (80119b0 <vTaskDelay+0x94>)
 8011938:	682b      	ldr	r3, [r5, #0]
 801193a:	b143      	cbz	r3, 801194e <vTaskDelay+0x32>
 801193c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011940:	f383 8811 	msr	BASEPRI, r3
 8011944:	f3bf 8f6f 	isb	sy
 8011948:	f3bf 8f4f 	dsb	sy
 801194c:	e7fe      	b.n	801194c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 801194e:	682b      	ldr	r3, [r5, #0]
 8011950:	3301      	adds	r3, #1
 8011952:	4604      	mov	r4, r0
 8011954:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8011956:	4b17      	ldr	r3, [pc, #92]	; (80119b4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011958:	4e17      	ldr	r6, [pc, #92]	; (80119b8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 801195a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801195c:	6830      	ldr	r0, [r6, #0]
 801195e:	3004      	adds	r0, #4
 8011960:	f7fe fac0 	bl	800fee4 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011964:	6833      	ldr	r3, [r6, #0]
 8011966:	19e4      	adds	r4, r4, r7
 8011968:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 801196a:	d310      	bcc.n	801198e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801196c:	4b13      	ldr	r3, [pc, #76]	; (80119bc <vTaskDelay+0xa0>)
 801196e:	6818      	ldr	r0, [r3, #0]
 8011970:	6831      	ldr	r1, [r6, #0]
 8011972:	3104      	adds	r1, #4
 8011974:	f7fe fa9e 	bl	800feb4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 8011978:	682b      	ldr	r3, [r5, #0]
 801197a:	b9a3      	cbnz	r3, 80119a6 <vTaskDelay+0x8a>
 801197c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011980:	f383 8811 	msr	BASEPRI, r3
 8011984:	f3bf 8f6f 	isb	sy
 8011988:	f3bf 8f4f 	dsb	sy
 801198c:	e7fe      	b.n	801198c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801198e:	4b0c      	ldr	r3, [pc, #48]	; (80119c0 <vTaskDelay+0xa4>)
 8011990:	6818      	ldr	r0, [r3, #0]
 8011992:	6831      	ldr	r1, [r6, #0]
 8011994:	3104      	adds	r1, #4
 8011996:	f7fe fa8d 	bl	800feb4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 801199a:	4b0a      	ldr	r3, [pc, #40]	; (80119c4 <vTaskDelay+0xa8>)
 801199c:	681a      	ldr	r2, [r3, #0]
 801199e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 80119a0:	bf38      	it	cc
 80119a2:	601c      	strcc	r4, [r3, #0]
 80119a4:	e7e8      	b.n	8011978 <vTaskDelay+0x5c>
 80119a6:	f7ff feb3 	bl	8011710 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 80119aa:	2800      	cmp	r0, #0
 80119ac:	d0b8      	beq.n	8011920 <vTaskDelay+0x4>
	}
 80119ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119b0:	2001367c 	.word	0x2001367c
 80119b4:	200136fc 	.word	0x200136fc
 80119b8:	20013208 	.word	0x20013208
 80119bc:	20013210 	.word	0x20013210
 80119c0:	2001320c 	.word	0x2001320c
 80119c4:	200136b0 	.word	0x200136b0

080119c8 <vTaskStartScheduler>:
{
 80119c8:	b530      	push	{r4, r5, lr}
 80119ca:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119cc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80119ce:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119d0:	a906      	add	r1, sp, #24
 80119d2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80119d4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80119d8:	f7fe f90e 	bl	800fbf8 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80119dc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80119e0:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 80119e2:	b1bb      	cbz	r3, 8011a14 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 80119e4:	b16d      	cbz	r5, 8011a02 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 80119e6:	21ac      	movs	r1, #172	; 0xac
 80119e8:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 80119ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 80119ec:	29ac      	cmp	r1, #172	; 0xac
 80119ee:	d01a      	beq.n	8011a26 <vTaskStartScheduler+0x5e>
 80119f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80119f4:	f383 8811 	msr	BASEPRI, r3
 80119f8:	f3bf 8f6f 	isb	sy
 80119fc:	f3bf 8f4f 	dsb	sy
 8011a00:	e7fe      	b.n	8011a00 <vTaskStartScheduler+0x38>
 8011a02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a06:	f383 8811 	msr	BASEPRI, r3
 8011a0a:	f3bf 8f6f 	isb	sy
 8011a0e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 8011a12:	e7fe      	b.n	8011a12 <vTaskStartScheduler+0x4a>
 8011a14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a18:	f383 8811 	msr	BASEPRI, r3
 8011a1c:	f3bf 8f6f 	isb	sy
 8011a20:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 8011a24:	e7fe      	b.n	8011a24 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a26:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a28:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8011a2a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8011a2c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a30:	4623      	mov	r3, r4
 8011a32:	e9cd 0501 	strd	r0, r5, [sp, #4]
 8011a36:	491b      	ldr	r1, [pc, #108]	; (8011aa4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8011a38:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8011a3a:	9400      	str	r4, [sp, #0]
 8011a3c:	481a      	ldr	r0, [pc, #104]	; (8011aa8 <vTaskStartScheduler+0xe0>)
 8011a3e:	f7ff fcdd 	bl	80113fc <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8011a42:	4628      	mov	r0, r5
 8011a44:	f7ff fc52 	bl	80112ec <prvAddNewTaskToReadyList>
		return xReturn;
 8011a48:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 8011a4a:	b1eb      	cbz	r3, 8011a88 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 8011a4c:	f000 fc6e 	bl	801232c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8011a50:	2801      	cmp	r0, #1
 8011a52:	d11b      	bne.n	8011a8c <vTaskStartScheduler+0xc4>
 8011a54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a58:	f383 8811 	msr	BASEPRI, r3
 8011a5c:	f3bf 8f6f 	isb	sy
 8011a60:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a64:	4b11      	ldr	r3, [pc, #68]	; (8011aac <vTaskStartScheduler+0xe4>)
 8011a66:	4a12      	ldr	r2, [pc, #72]	; (8011ab0 <vTaskStartScheduler+0xe8>)
 8011a68:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a6a:	4912      	ldr	r1, [pc, #72]	; (8011ab4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011a6c:	3358      	adds	r3, #88	; 0x58
 8011a6e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 8011a70:	4a11      	ldr	r2, [pc, #68]	; (8011ab8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a72:	4b12      	ldr	r3, [pc, #72]	; (8011abc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 8011a74:	f04f 35ff 	mov.w	r5, #4294967295
 8011a78:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 8011a7a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8011a7c:	601c      	str	r4, [r3, #0]
}
 8011a7e:	b00b      	add	sp, #44	; 0x2c
 8011a80:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 8011a84:	f7fe bb38 	b.w	80100f8 <xPortStartScheduler>
}
 8011a88:	b00b      	add	sp, #44	; 0x2c
 8011a8a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8011a8c:	3001      	adds	r0, #1
 8011a8e:	d1fb      	bne.n	8011a88 <vTaskStartScheduler+0xc0>
 8011a90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011a94:	f383 8811 	msr	BASEPRI, r3
 8011a98:	f3bf 8f6f 	isb	sy
 8011a9c:	f3bf 8f4f 	dsb	sy
 8011aa0:	e7fe      	b.n	8011aa0 <vTaskStartScheduler+0xd8>
 8011aa2:	bf00      	nop
 8011aa4:	08031438 	.word	0x08031438
 8011aa8:	08011529 	.word	0x08011529
 8011aac:	20013208 	.word	0x20013208
 8011ab0:	20000164 	.word	0x20000164
 8011ab4:	200136b0 	.word	0x200136b0
 8011ab8:	200136d0 	.word	0x200136d0
 8011abc:	200136fc 	.word	0x200136fc

08011ac0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8011ac0:	4a02      	ldr	r2, [pc, #8]	; (8011acc <vTaskSuspendAll+0xc>)
 8011ac2:	6813      	ldr	r3, [r2, #0]
 8011ac4:	3301      	adds	r3, #1
 8011ac6:	6013      	str	r3, [r2, #0]
}
 8011ac8:	4770      	bx	lr
 8011aca:	bf00      	nop
 8011acc:	2001367c 	.word	0x2001367c

08011ad0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 8011ad0:	4b06      	ldr	r3, [pc, #24]	; (8011aec <xTaskResumeAll+0x1c>)
 8011ad2:	681b      	ldr	r3, [r3, #0]
 8011ad4:	b943      	cbnz	r3, 8011ae8 <xTaskResumeAll+0x18>
 8011ad6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ada:	f383 8811 	msr	BASEPRI, r3
 8011ade:	f3bf 8f6f 	isb	sy
 8011ae2:	f3bf 8f4f 	dsb	sy
 8011ae6:	e7fe      	b.n	8011ae6 <xTaskResumeAll+0x16>
 8011ae8:	f7ff be12 	b.w	8011710 <xTaskResumeAll.part.0>
 8011aec:	2001367c 	.word	0x2001367c

08011af0 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8011af0:	4b01      	ldr	r3, [pc, #4]	; (8011af8 <xTaskGetTickCount+0x8>)
 8011af2:	6818      	ldr	r0, [r3, #0]
}
 8011af4:	4770      	bx	lr
 8011af6:	bf00      	nop
 8011af8:	200136fc 	.word	0x200136fc

08011afc <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011afc:	4b05      	ldr	r3, [pc, #20]	; (8011b14 <xTaskIncrementTick+0x18>)
 8011afe:	681b      	ldr	r3, [r3, #0]
 8011b00:	b90b      	cbnz	r3, 8011b06 <xTaskIncrementTick+0xa>
 8011b02:	f7ff bd61 	b.w	80115c8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 8011b06:	4a04      	ldr	r2, [pc, #16]	; (8011b18 <xTaskIncrementTick+0x1c>)
 8011b08:	6813      	ldr	r3, [r2, #0]
 8011b0a:	3301      	adds	r3, #1
}
 8011b0c:	2000      	movs	r0, #0
		++xPendedTicks;
 8011b0e:	6013      	str	r3, [r2, #0]
}
 8011b10:	4770      	bx	lr
 8011b12:	bf00      	nop
 8011b14:	2001367c 	.word	0x2001367c
 8011b18:	200136b8 	.word	0x200136b8

08011b1c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8011b1c:	4b1f      	ldr	r3, [pc, #124]	; (8011b9c <vTaskSwitchContext+0x80>)
 8011b1e:	681b      	ldr	r3, [r3, #0]
 8011b20:	b11b      	cbz	r3, 8011b2a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 8011b22:	4b1f      	ldr	r3, [pc, #124]	; (8011ba0 <vTaskSwitchContext+0x84>)
 8011b24:	2201      	movs	r2, #1
 8011b26:	601a      	str	r2, [r3, #0]
 8011b28:	4770      	bx	lr
		xYieldPending = pdFALSE;
 8011b2a:	4a1d      	ldr	r2, [pc, #116]	; (8011ba0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b2c:	491d      	ldr	r1, [pc, #116]	; (8011ba4 <vTaskSwitchContext+0x88>)
{
 8011b2e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b30:	4c1d      	ldr	r4, [pc, #116]	; (8011ba8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 8011b32:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b34:	6823      	ldr	r3, [r4, #0]
 8011b36:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b3a:	0092      	lsls	r2, r2, #2
 8011b3c:	0098      	lsls	r0, r3, #2
 8011b3e:	588a      	ldr	r2, [r1, r2]
 8011b40:	b942      	cbnz	r2, 8011b54 <vTaskSwitchContext+0x38>
 8011b42:	b313      	cbz	r3, 8011b8a <vTaskSwitchContext+0x6e>
 8011b44:	3b01      	subs	r3, #1
 8011b46:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 8011b4a:	0098      	lsls	r0, r3, #2
 8011b4c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8011b50:	2a00      	cmp	r2, #0
 8011b52:	d0f6      	beq.n	8011b42 <vTaskSwitchContext+0x26>
 8011b54:	4418      	add	r0, r3
 8011b56:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 8011b5a:	4662      	mov	r2, ip
 8011b5c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8011b60:	6849      	ldr	r1, [r1, #4]
 8011b62:	f8cc 1004 	str.w	r1, [ip, #4]
 8011b66:	3208      	adds	r2, #8
 8011b68:	4291      	cmp	r1, r2
 8011b6a:	bf08      	it	eq
 8011b6c:	6849      	ldreq	r1, [r1, #4]
 8011b6e:	4a0f      	ldr	r2, [pc, #60]	; (8011bac <vTaskSwitchContext+0x90>)
 8011b70:	bf08      	it	eq
 8011b72:	f8cc 1004 	streq.w	r1, [ip, #4]
 8011b76:	68c9      	ldr	r1, [r1, #12]
 8011b78:	6011      	str	r1, [r2, #0]
 8011b7a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b7c:	6813      	ldr	r3, [r2, #0]
 8011b7e:	4a0c      	ldr	r2, [pc, #48]	; (8011bb0 <vTaskSwitchContext+0x94>)
}
 8011b80:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8011b84:	3358      	adds	r3, #88	; 0x58
 8011b86:	6013      	str	r3, [r2, #0]
}
 8011b88:	4770      	bx	lr
 8011b8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011b8e:	f383 8811 	msr	BASEPRI, r3
 8011b92:	f3bf 8f6f 	isb	sy
 8011b96:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011b9a:	e7fe      	b.n	8011b9a <vTaskSwitchContext+0x7e>
 8011b9c:	2001367c 	.word	0x2001367c
 8011ba0:	20013700 	.word	0x20013700
 8011ba4:	20013214 	.word	0x20013214
 8011ba8:	20013684 	.word	0x20013684
 8011bac:	20013208 	.word	0x20013208
 8011bb0:	20000164 	.word	0x20000164

08011bb4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8011bb4:	b1d0      	cbz	r0, 8011bec <vTaskPlaceOnEventList+0x38>
{
 8011bb6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011bb8:	4d1a      	ldr	r5, [pc, #104]	; (8011c24 <vTaskPlaceOnEventList+0x70>)
 8011bba:	460c      	mov	r4, r1
 8011bbc:	6829      	ldr	r1, [r5, #0]
 8011bbe:	3118      	adds	r1, #24
 8011bc0:	f7fe f978 	bl	800feb4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011bc4:	4b18      	ldr	r3, [pc, #96]	; (8011c28 <vTaskPlaceOnEventList+0x74>)
 8011bc6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011bc8:	6828      	ldr	r0, [r5, #0]
 8011bca:	3004      	adds	r0, #4
 8011bcc:	f7fe f98a 	bl	800fee4 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8011bd0:	1c63      	adds	r3, r4, #1
 8011bd2:	d014      	beq.n	8011bfe <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011bd4:	682b      	ldr	r3, [r5, #0]
 8011bd6:	19a4      	adds	r4, r4, r6
 8011bd8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011bda:	d317      	bcc.n	8011c0c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bdc:	4b13      	ldr	r3, [pc, #76]	; (8011c2c <vTaskPlaceOnEventList+0x78>)
 8011bde:	6818      	ldr	r0, [r3, #0]
 8011be0:	6829      	ldr	r1, [r5, #0]
}
 8011be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011be6:	3104      	adds	r1, #4
 8011be8:	f7fe b964 	b.w	800feb4 <vListInsert>
 8011bec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011bf0:	f383 8811 	msr	BASEPRI, r3
 8011bf4:	f3bf 8f6f 	isb	sy
 8011bf8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 8011bfc:	e7fe      	b.n	8011bfc <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011bfe:	6829      	ldr	r1, [r5, #0]
 8011c00:	480b      	ldr	r0, [pc, #44]	; (8011c30 <vTaskPlaceOnEventList+0x7c>)
}
 8011c02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c06:	3104      	adds	r1, #4
 8011c08:	f7fe b944 	b.w	800fe94 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c0c:	4b09      	ldr	r3, [pc, #36]	; (8011c34 <vTaskPlaceOnEventList+0x80>)
 8011c0e:	6818      	ldr	r0, [r3, #0]
 8011c10:	6829      	ldr	r1, [r5, #0]
 8011c12:	3104      	adds	r1, #4
 8011c14:	f7fe f94e 	bl	800feb4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011c18:	4b07      	ldr	r3, [pc, #28]	; (8011c38 <vTaskPlaceOnEventList+0x84>)
 8011c1a:	681a      	ldr	r2, [r3, #0]
 8011c1c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011c1e:	bf38      	it	cc
 8011c20:	601c      	strcc	r4, [r3, #0]
}
 8011c22:	bd70      	pop	{r4, r5, r6, pc}
 8011c24:	20013208 	.word	0x20013208
 8011c28:	200136fc 	.word	0x200136fc
 8011c2c:	20013210 	.word	0x20013210
 8011c30:	200136d4 	.word	0x200136d4
 8011c34:	2001320c 	.word	0x2001320c
 8011c38:	200136b0 	.word	0x200136b0

08011c3c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 8011c3c:	b330      	cbz	r0, 8011c8c <vTaskPlaceOnEventListRestricted+0x50>
	{
 8011c3e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8011c40:	4e1d      	ldr	r6, [pc, #116]	; (8011cb8 <vTaskPlaceOnEventListRestricted+0x7c>)
 8011c42:	460c      	mov	r4, r1
 8011c44:	6831      	ldr	r1, [r6, #0]
 8011c46:	4615      	mov	r5, r2
 8011c48:	3118      	adds	r1, #24
 8011c4a:	f7fe f923 	bl	800fe94 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 8011c4e:	4b1b      	ldr	r3, [pc, #108]	; (8011cbc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 8011c50:	b985      	cbnz	r5, 8011c74 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 8011c52:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c54:	6830      	ldr	r0, [r6, #0]
 8011c56:	3004      	adds	r0, #4
 8011c58:	f7fe f944 	bl	800fee4 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8011c5c:	6833      	ldr	r3, [r6, #0]
 8011c5e:	1964      	adds	r4, r4, r5
 8011c60:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8011c62:	d31c      	bcc.n	8011c9e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c64:	4b16      	ldr	r3, [pc, #88]	; (8011cc0 <vTaskPlaceOnEventListRestricted+0x84>)
 8011c66:	6818      	ldr	r0, [r3, #0]
 8011c68:	6831      	ldr	r1, [r6, #0]
	}
 8011c6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c6e:	3104      	adds	r1, #4
 8011c70:	f7fe b920 	b.w	800feb4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8011c74:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011c76:	6830      	ldr	r0, [r6, #0]
 8011c78:	3004      	adds	r0, #4
 8011c7a:	f7fe f933 	bl	800fee4 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c7e:	6831      	ldr	r1, [r6, #0]
 8011c80:	4810      	ldr	r0, [pc, #64]	; (8011cc4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8011c82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c86:	3104      	adds	r1, #4
 8011c88:	f7fe b904 	b.w	800fe94 <vListInsertEnd>
 8011c8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011c90:	f383 8811 	msr	BASEPRI, r3
 8011c94:	f3bf 8f6f 	isb	sy
 8011c98:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 8011c9c:	e7fe      	b.n	8011c9c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8011c9e:	4b0a      	ldr	r3, [pc, #40]	; (8011cc8 <vTaskPlaceOnEventListRestricted+0x8c>)
 8011ca0:	6818      	ldr	r0, [r3, #0]
 8011ca2:	6831      	ldr	r1, [r6, #0]
 8011ca4:	3104      	adds	r1, #4
 8011ca6:	f7fe f905 	bl	800feb4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8011caa:	4b08      	ldr	r3, [pc, #32]	; (8011ccc <vTaskPlaceOnEventListRestricted+0x90>)
 8011cac:	681a      	ldr	r2, [r3, #0]
 8011cae:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8011cb0:	bf38      	it	cc
 8011cb2:	601c      	strcc	r4, [r3, #0]
	}
 8011cb4:	bd70      	pop	{r4, r5, r6, pc}
 8011cb6:	bf00      	nop
 8011cb8:	20013208 	.word	0x20013208
 8011cbc:	200136fc 	.word	0x200136fc
 8011cc0:	20013210 	.word	0x20013210
 8011cc4:	200136d4 	.word	0x200136d4
 8011cc8:	2001320c 	.word	0x2001320c
 8011ccc:	200136b0 	.word	0x200136b0

08011cd0 <xTaskRemoveFromEventList>:
{
 8011cd0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8011cd2:	68c3      	ldr	r3, [r0, #12]
 8011cd4:	68dc      	ldr	r4, [r3, #12]
{
 8011cd6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8011cd8:	2c00      	cmp	r4, #0
 8011cda:	d02b      	beq.n	8011d34 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8011cdc:	f104 0518 	add.w	r5, r4, #24
 8011ce0:	4628      	mov	r0, r5
 8011ce2:	f7fe f8ff 	bl	800fee4 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011ce6:	4b18      	ldr	r3, [pc, #96]	; (8011d48 <xTaskRemoveFromEventList+0x78>)
 8011ce8:	681b      	ldr	r3, [r3, #0]
 8011cea:	b17b      	cbz	r3, 8011d0c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 8011cec:	4817      	ldr	r0, [pc, #92]	; (8011d4c <xTaskRemoveFromEventList+0x7c>)
 8011cee:	4629      	mov	r1, r5
 8011cf0:	f7fe f8d0 	bl	800fe94 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8011cf4:	4b16      	ldr	r3, [pc, #88]	; (8011d50 <xTaskRemoveFromEventList+0x80>)
 8011cf6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011cf8:	681b      	ldr	r3, [r3, #0]
 8011cfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011cfc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 8011cfe:	bf85      	ittet	hi
 8011d00:	4b14      	ldrhi	r3, [pc, #80]	; (8011d54 <xTaskRemoveFromEventList+0x84>)
 8011d02:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8011d04:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8011d06:	6018      	strhi	r0, [r3, #0]
}
 8011d08:	b003      	add	sp, #12
 8011d0a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8011d0c:	1d21      	adds	r1, r4, #4
 8011d0e:	4608      	mov	r0, r1
 8011d10:	9101      	str	r1, [sp, #4]
 8011d12:	f7fe f8e7 	bl	800fee4 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8011d16:	4a10      	ldr	r2, [pc, #64]	; (8011d58 <xTaskRemoveFromEventList+0x88>)
 8011d18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011d1a:	6810      	ldr	r0, [r2, #0]
 8011d1c:	9901      	ldr	r1, [sp, #4]
 8011d1e:	4283      	cmp	r3, r0
 8011d20:	480e      	ldr	r0, [pc, #56]	; (8011d5c <xTaskRemoveFromEventList+0x8c>)
 8011d22:	bf88      	it	hi
 8011d24:	6013      	strhi	r3, [r2, #0]
 8011d26:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011d2a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011d2e:	f7fe f8b1 	bl	800fe94 <vListInsertEnd>
 8011d32:	e7df      	b.n	8011cf4 <xTaskRemoveFromEventList+0x24>
 8011d34:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011d38:	f383 8811 	msr	BASEPRI, r3
 8011d3c:	f3bf 8f6f 	isb	sy
 8011d40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8011d44:	e7fe      	b.n	8011d44 <xTaskRemoveFromEventList+0x74>
 8011d46:	bf00      	nop
 8011d48:	2001367c 	.word	0x2001367c
 8011d4c:	200136bc 	.word	0x200136bc
 8011d50:	20013208 	.word	0x20013208
 8011d54:	20013700 	.word	0x20013700
 8011d58:	20013684 	.word	0x20013684
 8011d5c:	20013214 	.word	0x20013214

08011d60 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d60:	4a03      	ldr	r2, [pc, #12]	; (8011d70 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d62:	4b04      	ldr	r3, [pc, #16]	; (8011d74 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011d64:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011d66:	681b      	ldr	r3, [r3, #0]
 8011d68:	e9c0 2300 	strd	r2, r3, [r0]
}
 8011d6c:	4770      	bx	lr
 8011d6e:	bf00      	nop
 8011d70:	200136b4 	.word	0x200136b4
 8011d74:	200136fc 	.word	0x200136fc

08011d78 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8011d78:	b328      	cbz	r0, 8011dc6 <xTaskCheckForTimeOut+0x4e>
{
 8011d7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d7c:	460d      	mov	r5, r1
 8011d7e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8011d80:	b1c1      	cbz	r1, 8011db4 <xTaskCheckForTimeOut+0x3c>
 8011d82:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8011d84:	f7fe f926 	bl	800ffd4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8011d88:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 8011d8a:	4a1d      	ldr	r2, [pc, #116]	; (8011e00 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 8011d8c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 8011d8e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8011d90:	d030      	beq.n	8011df4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8011d92:	f8df c070 	ldr.w	ip, [pc, #112]	; 8011e04 <xTaskCheckForTimeOut+0x8c>
 8011d96:	e9d4 6000 	ldrd	r6, r0, [r4]
 8011d9a:	f8dc 7000 	ldr.w	r7, [ip]
 8011d9e:	42be      	cmp	r6, r7
 8011da0:	d01a      	beq.n	8011dd8 <xTaskCheckForTimeOut+0x60>
 8011da2:	4288      	cmp	r0, r1
 8011da4:	d818      	bhi.n	8011dd8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8011da6:	2001      	movs	r0, #1
 8011da8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 8011daa:	f7fe f935 	bl	8010018 <vPortExitCritical>
}
 8011dae:	9801      	ldr	r0, [sp, #4]
 8011db0:	b003      	add	sp, #12
 8011db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011db4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011db8:	f383 8811 	msr	BASEPRI, r3
 8011dbc:	f3bf 8f6f 	isb	sy
 8011dc0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8011dc4:	e7fe      	b.n	8011dc4 <xTaskCheckForTimeOut+0x4c>
 8011dc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011dca:	f383 8811 	msr	BASEPRI, r3
 8011dce:	f3bf 8f6f 	isb	sy
 8011dd2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8011dd6:	e7fe      	b.n	8011dd6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8011dd8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8011ddc:	4573      	cmp	r3, lr
 8011dde:	d90b      	bls.n	8011df8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8011de0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8011de2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011de6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8011de8:	4403      	add	r3, r0
 8011dea:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 8011dec:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 8011dee:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8011df2:	e7d9      	b.n	8011da8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8011df4:	2000      	movs	r0, #0
 8011df6:	e7d7      	b.n	8011da8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8011df8:	2300      	movs	r3, #0
 8011dfa:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 8011dfc:	2001      	movs	r0, #1
 8011dfe:	e7d3      	b.n	8011da8 <xTaskCheckForTimeOut+0x30>
 8011e00:	200136fc 	.word	0x200136fc
 8011e04:	200136b4 	.word	0x200136b4

08011e08 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8011e08:	4b01      	ldr	r3, [pc, #4]	; (8011e10 <vTaskMissedYield+0x8>)
 8011e0a:	2201      	movs	r2, #1
 8011e0c:	601a      	str	r2, [r3, #0]
}
 8011e0e:	4770      	bx	lr
 8011e10:	20013700 	.word	0x20013700

08011e14 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8011e14:	4b05      	ldr	r3, [pc, #20]	; (8011e2c <xTaskGetSchedulerState+0x18>)
 8011e16:	681b      	ldr	r3, [r3, #0]
 8011e18:	b133      	cbz	r3, 8011e28 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8011e1a:	4b05      	ldr	r3, [pc, #20]	; (8011e30 <xTaskGetSchedulerState+0x1c>)
 8011e1c:	6818      	ldr	r0, [r3, #0]
 8011e1e:	fab0 f080 	clz	r0, r0
 8011e22:	0940      	lsrs	r0, r0, #5
 8011e24:	0040      	lsls	r0, r0, #1
 8011e26:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8011e28:	2001      	movs	r0, #1
	}
 8011e2a:	4770      	bx	lr
 8011e2c:	200136d0 	.word	0x200136d0
 8011e30:	2001367c 	.word	0x2001367c

08011e34 <xTaskPriorityInherit>:
	{
 8011e34:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8011e36:	4604      	mov	r4, r0
	{
 8011e38:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 8011e3a:	b1c8      	cbz	r0, 8011e70 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8011e3c:	4d1d      	ldr	r5, [pc, #116]	; (8011eb4 <xTaskPriorityInherit+0x80>)
 8011e3e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011e40:	682a      	ldr	r2, [r5, #0]
 8011e42:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e44:	4293      	cmp	r3, r2
 8011e46:	d215      	bcs.n	8011e74 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011e48:	6982      	ldr	r2, [r0, #24]
 8011e4a:	2a00      	cmp	r2, #0
 8011e4c:	db04      	blt.n	8011e58 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011e4e:	682a      	ldr	r2, [r5, #0]
 8011e50:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8011e52:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8011e56:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8011e58:	4e17      	ldr	r6, [pc, #92]	; (8011eb8 <xTaskPriorityInherit+0x84>)
 8011e5a:	6962      	ldr	r2, [r4, #20]
 8011e5c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011e60:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8011e64:	429a      	cmp	r2, r3
 8011e66:	d00e      	beq.n	8011e86 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e68:	682b      	ldr	r3, [r5, #0]
 8011e6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 8011e6e:	2001      	movs	r0, #1
	}
 8011e70:	b002      	add	sp, #8
 8011e72:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8011e74:	682b      	ldr	r3, [r5, #0]
 8011e76:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011e78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e7a:	4298      	cmp	r0, r3
 8011e7c:	bf2c      	ite	cs
 8011e7e:	2000      	movcs	r0, #0
 8011e80:	2001      	movcc	r0, #1
	}
 8011e82:	b002      	add	sp, #8
 8011e84:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011e86:	1d21      	adds	r1, r4, #4
 8011e88:	4608      	mov	r0, r1
 8011e8a:	9101      	str	r1, [sp, #4]
 8011e8c:	f7fe f82a 	bl	800fee4 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e90:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e92:	4b0a      	ldr	r3, [pc, #40]	; (8011ebc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e94:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e96:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8011e98:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8011e9a:	4290      	cmp	r0, r2
 8011e9c:	bf88      	it	hi
 8011e9e:	6018      	strhi	r0, [r3, #0]
 8011ea0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011ea4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8011ea8:	9901      	ldr	r1, [sp, #4]
 8011eaa:	f7fd fff3 	bl	800fe94 <vListInsertEnd>
				xReturn = pdTRUE;
 8011eae:	2001      	movs	r0, #1
 8011eb0:	e7de      	b.n	8011e70 <xTaskPriorityInherit+0x3c>
 8011eb2:	bf00      	nop
 8011eb4:	20013208 	.word	0x20013208
 8011eb8:	20013214 	.word	0x20013214
 8011ebc:	20013684 	.word	0x20013684

08011ec0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8011ec0:	b318      	cbz	r0, 8011f0a <xTaskPriorityDisinherit+0x4a>
	{
 8011ec2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8011ec4:	4b1e      	ldr	r3, [pc, #120]	; (8011f40 <xTaskPriorityDisinherit+0x80>)
 8011ec6:	681c      	ldr	r4, [r3, #0]
 8011ec8:	4284      	cmp	r4, r0
	{
 8011eca:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 8011ecc:	d008      	beq.n	8011ee0 <xTaskPriorityDisinherit+0x20>
 8011ece:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011ed2:	f383 8811 	msr	BASEPRI, r3
 8011ed6:	f3bf 8f6f 	isb	sy
 8011eda:	f3bf 8f4f 	dsb	sy
 8011ede:	e7fe      	b.n	8011ede <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8011ee0:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8011ee2:	b14b      	cbz	r3, 8011ef8 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011ee4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011ee6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8011ee8:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011eea:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8011eec:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8011eee:	d000      	beq.n	8011ef2 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8011ef0:	b16b      	cbz	r3, 8011f0e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8011ef2:	2000      	movs	r0, #0
	}
 8011ef4:	b002      	add	sp, #8
 8011ef6:	bd10      	pop	{r4, pc}
 8011ef8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011efc:	f383 8811 	msr	BASEPRI, r3
 8011f00:	f3bf 8f6f 	isb	sy
 8011f04:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011f08:	e7fe      	b.n	8011f08 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 8011f0a:	2000      	movs	r0, #0
	}
 8011f0c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011f0e:	1d21      	adds	r1, r4, #4
 8011f10:	4608      	mov	r0, r1
 8011f12:	9101      	str	r1, [sp, #4]
 8011f14:	f7fd ffe6 	bl	800fee4 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011f18:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8011f1a:	4a0a      	ldr	r2, [pc, #40]	; (8011f44 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8011f1c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f1e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8011f22:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8011f24:	6810      	ldr	r0, [r2, #0]
 8011f26:	9901      	ldr	r1, [sp, #4]
 8011f28:	4283      	cmp	r3, r0
 8011f2a:	4807      	ldr	r0, [pc, #28]	; (8011f48 <xTaskPriorityDisinherit+0x88>)
 8011f2c:	bf88      	it	hi
 8011f2e:	6013      	strhi	r3, [r2, #0]
 8011f30:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8011f34:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8011f38:	f7fd ffac 	bl	800fe94 <vListInsertEnd>
					xReturn = pdTRUE;
 8011f3c:	2001      	movs	r0, #1
		return xReturn;
 8011f3e:	e7d9      	b.n	8011ef4 <xTaskPriorityDisinherit+0x34>
 8011f40:	20013208 	.word	0x20013208
 8011f44:	20013684 	.word	0x20013684
 8011f48:	20013214 	.word	0x20013214

08011f4c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 8011f4c:	2800      	cmp	r0, #0
 8011f4e:	d041      	beq.n	8011fd4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8011f50:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8011f52:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8011f54:	b083      	sub	sp, #12
 8011f56:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8011f58:	b153      	cbz	r3, 8011f70 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8011f5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 8011f5c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011f5e:	4281      	cmp	r1, r0
 8011f60:	bf38      	it	cc
 8011f62:	4601      	movcc	r1, r0
 8011f64:	428a      	cmp	r2, r1
 8011f66:	d001      	beq.n	8011f6c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8011f68:	2b01      	cmp	r3, #1
 8011f6a:	d00a      	beq.n	8011f82 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 8011f6c:	b003      	add	sp, #12
 8011f6e:	bd30      	pop	{r4, r5, pc}
 8011f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011f74:	f383 8811 	msr	BASEPRI, r3
 8011f78:	f3bf 8f6f 	isb	sy
 8011f7c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8011f80:	e7fe      	b.n	8011f80 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8011f82:	4b19      	ldr	r3, [pc, #100]	; (8011fe8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8011f84:	681b      	ldr	r3, [r3, #0]
 8011f86:	42a3      	cmp	r3, r4
 8011f88:	d025      	beq.n	8011fd6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f8a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 8011f8c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8011f8e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f90:	bfa8      	it	ge
 8011f92:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f96:	4d15      	ldr	r5, [pc, #84]	; (8011fec <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8011f98:	bfa8      	it	ge
 8011f9a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8011f9c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8011fa0:	6961      	ldr	r1, [r4, #20]
 8011fa2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8011fa6:	4299      	cmp	r1, r3
 8011fa8:	d1e0      	bne.n	8011f6c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8011faa:	1d21      	adds	r1, r4, #4
 8011fac:	4608      	mov	r0, r1
 8011fae:	9101      	str	r1, [sp, #4]
 8011fb0:	f7fd ff98 	bl	800fee4 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8011fb4:	4b0e      	ldr	r3, [pc, #56]	; (8011ff0 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8011fb6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011fb8:	681a      	ldr	r2, [r3, #0]
 8011fba:	9901      	ldr	r1, [sp, #4]
 8011fbc:	4290      	cmp	r0, r2
 8011fbe:	bf88      	it	hi
 8011fc0:	6018      	strhi	r0, [r3, #0]
 8011fc2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8011fc6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 8011fca:	b003      	add	sp, #12
 8011fcc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8011fd0:	f7fd bf60 	b.w	800fe94 <vListInsertEnd>
 8011fd4:	4770      	bx	lr
 8011fd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8011fda:	f383 8811 	msr	BASEPRI, r3
 8011fde:	f3bf 8f6f 	isb	sy
 8011fe2:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8011fe6:	e7fe      	b.n	8011fe6 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8011fe8:	20013208 	.word	0x20013208
 8011fec:	20013214 	.word	0x20013214
 8011ff0:	20013684 	.word	0x20013684

08011ff4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8011ff4:	4b04      	ldr	r3, [pc, #16]	; (8012008 <pvTaskIncrementMutexHeldCount+0x14>)
 8011ff6:	681a      	ldr	r2, [r3, #0]
 8011ff8:	b11a      	cbz	r2, 8012002 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8011ffa:	6819      	ldr	r1, [r3, #0]
 8011ffc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8011ffe:	3201      	adds	r2, #1
 8012000:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8012002:	6818      	ldr	r0, [r3, #0]
	}
 8012004:	4770      	bx	lr
 8012006:	bf00      	nop
 8012008:	20013208 	.word	0x20013208

0801200c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801200c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012010:	4e22      	ldr	r6, [pc, #136]	; (801209c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8012012:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80120a4 <prvSwitchTimerLists+0x98>
{
 8012016:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8012018:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801201c:	e00d      	b.n	801203a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801201e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012020:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8012022:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012024:	1d25      	adds	r5, r4, #4
 8012026:	4628      	mov	r0, r5
 8012028:	f7fd ff5c 	bl	800fee4 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801202c:	6a23      	ldr	r3, [r4, #32]
 801202e:	4620      	mov	r0, r4
 8012030:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012032:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8012036:	075b      	lsls	r3, r3, #29
 8012038:	d40a      	bmi.n	8012050 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801203a:	6833      	ldr	r3, [r6, #0]
 801203c:	681a      	ldr	r2, [r3, #0]
 801203e:	2a00      	cmp	r2, #0
 8012040:	d1ed      	bne.n	801201e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8012042:	4a17      	ldr	r2, [pc, #92]	; (80120a0 <prvSwitchTimerLists+0x94>)
 8012044:	6811      	ldr	r1, [r2, #0]
 8012046:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8012048:	6013      	str	r3, [r2, #0]
}
 801204a:	b005      	add	sp, #20
 801204c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8012050:	69a3      	ldr	r3, [r4, #24]
 8012052:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8012054:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012056:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8012058:	d205      	bcs.n	8012066 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801205a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801205c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801205e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012060:	f7fd ff28 	bl	800feb4 <vListInsert>
 8012064:	e7e9      	b.n	801203a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8012066:	f8d9 3000 	ldr.w	r3, [r9]
 801206a:	b16b      	cbz	r3, 8012088 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801206c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8012070:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012072:	f7ff fecf 	bl	8011e14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012076:	2300      	movs	r3, #0
 8012078:	f8d9 0000 	ldr.w	r0, [r9]
 801207c:	461a      	mov	r2, r3
 801207e:	4669      	mov	r1, sp
 8012080:	f7fe fa9c 	bl	80105bc <xQueueGenericSend>
				configASSERT( xResult );
 8012084:	2800      	cmp	r0, #0
 8012086:	d1d8      	bne.n	801203a <prvSwitchTimerLists+0x2e>
 8012088:	f04f 0350 	mov.w	r3, #80	; 0x50
 801208c:	f383 8811 	msr	BASEPRI, r3
 8012090:	f3bf 8f6f 	isb	sy
 8012094:	f3bf 8f4f 	dsb	sy
 8012098:	e7fe      	b.n	8012098 <prvSwitchTimerLists+0x8c>
 801209a:	bf00      	nop
 801209c:	20013704 	.word	0x20013704
 80120a0:	20013708 	.word	0x20013708
 80120a4:	20013828 	.word	0x20013828

080120a8 <prvTimerTask>:
{
 80120a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80120ac:	4e9b      	ldr	r6, [pc, #620]	; (801231c <prvTimerTask+0x274>)
 80120ae:	4d9c      	ldr	r5, [pc, #624]	; (8012320 <prvTimerTask+0x278>)
 80120b0:	4c9c      	ldr	r4, [pc, #624]	; (8012324 <prvTimerTask+0x27c>)
 80120b2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80120b4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80120b8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80120bc:	6833      	ldr	r3, [r6, #0]
 80120be:	681f      	ldr	r7, [r3, #0]
 80120c0:	2f00      	cmp	r7, #0
 80120c2:	f000 80a8 	beq.w	8012216 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80120c6:	68db      	ldr	r3, [r3, #12]
 80120c8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80120ca:	f7ff fcf9 	bl	8011ac0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80120ce:	f7ff fd0f 	bl	8011af0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80120d2:	682a      	ldr	r2, [r5, #0]
 80120d4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80120d6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80120d8:	f0c0 80ae 	bcc.w	8012238 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120dc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80120de:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80120e0:	f240 80b4 	bls.w	801224c <prvTimerTask+0x1a4>
 80120e4:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80120e6:	6820      	ldr	r0, [r4, #0]
 80120e8:	eba7 010a 	sub.w	r1, r7, sl
 80120ec:	f7ff f89a 	bl	8011224 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 80120f0:	f7ff fcee 	bl	8011ad0 <xTaskResumeAll>
 80120f4:	b928      	cbnz	r0, 8012102 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 80120f6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 80120fa:	f3bf 8f4f 	dsb	sy
 80120fe:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8012102:	6820      	ldr	r0, [r4, #0]
 8012104:	2200      	movs	r2, #0
 8012106:	a902      	add	r1, sp, #8
 8012108:	f7fe fc94 	bl	8010a34 <xQueueReceive>
 801210c:	2800      	cmp	r0, #0
 801210e:	d0d5      	beq.n	80120bc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8012110:	9b02      	ldr	r3, [sp, #8]
 8012112:	2b00      	cmp	r3, #0
 8012114:	db76      	blt.n	8012204 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8012116:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8012118:	697b      	ldr	r3, [r7, #20]
 801211a:	b113      	cbz	r3, 8012122 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801211c:	1d38      	adds	r0, r7, #4
 801211e:	f7fd fee1 	bl	800fee4 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8012122:	f7ff fce5 	bl	8011af0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8012126:	682b      	ldr	r3, [r5, #0]
 8012128:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801212a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801212c:	f0c0 808b 	bcc.w	8012246 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8012130:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8012132:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8012136:	2b09      	cmp	r3, #9
 8012138:	d8e3      	bhi.n	8012102 <prvTimerTask+0x5a>
 801213a:	e8df f003 	tbb	[pc, r3]
 801213e:	0505      	.short	0x0505
 8012140:	5a3d5305 	.word	0x5a3d5305
 8012144:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012148:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801214c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801214e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8012150:	f043 0301 	orr.w	r3, r3, #1
 8012154:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8012158:	9b03      	ldr	r3, [sp, #12]
 801215a:	1899      	adds	r1, r3, r2
 801215c:	bf2c      	ite	cs
 801215e:	2001      	movcs	r0, #1
 8012160:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8012162:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8012164:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8012166:	f200 808c 	bhi.w	8012282 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801216a:	ebaa 0303 	sub.w	r3, sl, r3
 801216e:	429a      	cmp	r2, r3
 8012170:	d832      	bhi.n	80121d8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012172:	6a3b      	ldr	r3, [r7, #32]
 8012174:	4638      	mov	r0, r7
 8012176:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012178:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801217c:	075b      	lsls	r3, r3, #29
 801217e:	d5c0      	bpl.n	8012102 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8012180:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012182:	9903      	ldr	r1, [sp, #12]
 8012184:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8012186:	b172      	cbz	r2, 80121a6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8012188:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801218a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801218e:	2300      	movs	r3, #0
 8012190:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8012192:	f7ff fe3f 	bl	8011e14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8012196:	2300      	movs	r3, #0
 8012198:	6820      	ldr	r0, [r4, #0]
 801219a:	461a      	mov	r2, r3
 801219c:	a906      	add	r1, sp, #24
 801219e:	f7fe fa0d 	bl	80105bc <xQueueGenericSend>
							configASSERT( xResult );
 80121a2:	2800      	cmp	r0, #0
 80121a4:	d1ad      	bne.n	8012102 <prvTimerTask+0x5a>
 80121a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80121aa:	f383 8811 	msr	BASEPRI, r3
 80121ae:	f3bf 8f6f 	isb	sy
 80121b2:	f3bf 8f4f 	dsb	sy
 80121b6:	e7fe      	b.n	80121b6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80121b8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121bc:	f043 0301 	orr.w	r3, r3, #1
 80121c0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80121c4:	9b03      	ldr	r3, [sp, #12]
 80121c6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80121c8:	2b00      	cmp	r3, #0
 80121ca:	f000 809d 	beq.w	8012308 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80121ce:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80121d0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80121d2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80121d4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80121d6:	d85e      	bhi.n	8012296 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80121d8:	4b53      	ldr	r3, [pc, #332]	; (8012328 <prvTimerTask+0x280>)
 80121da:	1d39      	adds	r1, r7, #4
 80121dc:	6818      	ldr	r0, [r3, #0]
 80121de:	f7fd fe69 	bl	800feb4 <vListInsert>
	return xProcessTimerNow;
 80121e2:	e78e      	b.n	8012102 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80121e4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121e8:	f023 0301 	bic.w	r3, r3, #1
 80121ec:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 80121f0:	e787      	b.n	8012102 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 80121f2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80121f6:	079a      	lsls	r2, r3, #30
 80121f8:	d552      	bpl.n	80122a0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80121fa:	f023 0301 	bic.w	r3, r3, #1
 80121fe:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8012202:	e77e      	b.n	8012102 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8012204:	9b03      	ldr	r3, [sp, #12]
 8012206:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801220a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801220c:	9b02      	ldr	r3, [sp, #8]
 801220e:	2b00      	cmp	r3, #0
 8012210:	f6ff af77 	blt.w	8012102 <prvTimerTask+0x5a>
 8012214:	e77f      	b.n	8012116 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8012216:	f7ff fc53 	bl	8011ac0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801221a:	f7ff fc69 	bl	8011af0 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801221e:	682a      	ldr	r2, [r5, #0]
 8012220:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8012222:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8012224:	d808      	bhi.n	8012238 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8012226:	4b40      	ldr	r3, [pc, #256]	; (8012328 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8012228:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801222c:	681a      	ldr	r2, [r3, #0]
 801222e:	6812      	ldr	r2, [r2, #0]
 8012230:	fab2 f282 	clz	r2, r2
 8012234:	0952      	lsrs	r2, r2, #5
 8012236:	e756      	b.n	80120e6 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8012238:	f7ff fee8 	bl	801200c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801223c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8012240:	f7ff fc46 	bl	8011ad0 <xTaskResumeAll>
 8012244:	e75d      	b.n	8012102 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8012246:	f7ff fee1 	bl	801200c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801224a:	e771      	b.n	8012130 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801224c:	f7ff fc40 	bl	8011ad0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8012250:	6832      	ldr	r2, [r6, #0]
 8012252:	68d2      	ldr	r2, [r2, #12]
 8012254:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8012258:	f10b 0104 	add.w	r1, fp, #4
 801225c:	4608      	mov	r0, r1
 801225e:	9101      	str	r1, [sp, #4]
 8012260:	f7fd fe40 	bl	800fee4 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8012264:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8012268:	9901      	ldr	r1, [sp, #4]
 801226a:	f010 0f04 	tst.w	r0, #4
 801226e:	d11b      	bne.n	80122a8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8012270:	f020 0001 	bic.w	r0, r0, #1
 8012274:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8012278:	f8db 3020 	ldr.w	r3, [fp, #32]
 801227c:	4658      	mov	r0, fp
 801227e:	4798      	blx	r3
}
 8012280:	e73f      	b.n	8012102 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8012282:	4553      	cmp	r3, sl
 8012284:	d902      	bls.n	801228c <prvTimerTask+0x1e4>
 8012286:	2800      	cmp	r0, #0
 8012288:	f43f af73 	beq.w	8012172 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801228c:	6830      	ldr	r0, [r6, #0]
 801228e:	1d39      	adds	r1, r7, #4
 8012290:	f7fd fe10 	bl	800feb4 <vListInsert>
	return xProcessTimerNow;
 8012294:	e735      	b.n	8012102 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8012296:	6830      	ldr	r0, [r6, #0]
 8012298:	1d39      	adds	r1, r7, #4
 801229a:	f7fd fe0b 	bl	800feb4 <vListInsert>
 801229e:	e730      	b.n	8012102 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80122a0:	4638      	mov	r0, r7
 80122a2:	f7fd fd83 	bl	800fdac <vPortFree>
 80122a6:	e72c      	b.n	8012102 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80122a8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80122ac:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80122b0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80122b2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80122b4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80122b8:	d903      	bls.n	80122c2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80122ba:	6830      	ldr	r0, [r6, #0]
 80122bc:	f7fd fdfa 	bl	800feb4 <vListInsert>
	return xProcessTimerNow;
 80122c0:	e7da      	b.n	8012278 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80122c2:	ebaa 0307 	sub.w	r3, sl, r7
 80122c6:	429a      	cmp	r2, r3
 80122c8:	d819      	bhi.n	80122fe <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80122ca:	6823      	ldr	r3, [r4, #0]
 80122cc:	b173      	cbz	r3, 80122ec <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80122ce:	2300      	movs	r3, #0
 80122d0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80122d2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80122d4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80122d8:	f7ff fd9c 	bl	8011e14 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80122dc:	2300      	movs	r3, #0
 80122de:	6820      	ldr	r0, [r4, #0]
 80122e0:	461a      	mov	r2, r3
 80122e2:	a906      	add	r1, sp, #24
 80122e4:	f7fe f96a 	bl	80105bc <xQueueGenericSend>
			configASSERT( xResult );
 80122e8:	2800      	cmp	r0, #0
 80122ea:	d1c5      	bne.n	8012278 <prvTimerTask+0x1d0>
 80122ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80122f0:	f383 8811 	msr	BASEPRI, r3
 80122f4:	f3bf 8f6f 	isb	sy
 80122f8:	f3bf 8f4f 	dsb	sy
 80122fc:	e7fe      	b.n	80122fc <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80122fe:	4b0a      	ldr	r3, [pc, #40]	; (8012328 <prvTimerTask+0x280>)
 8012300:	6818      	ldr	r0, [r3, #0]
 8012302:	f7fd fdd7 	bl	800feb4 <vListInsert>
	return xProcessTimerNow;
 8012306:	e7b7      	b.n	8012278 <prvTimerTask+0x1d0>
 8012308:	f04f 0350 	mov.w	r3, #80	; 0x50
 801230c:	f383 8811 	msr	BASEPRI, r3
 8012310:	f3bf 8f6f 	isb	sy
 8012314:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8012318:	e7fe      	b.n	8012318 <prvTimerTask+0x270>
 801231a:	bf00      	nop
 801231c:	20013704 	.word	0x20013704
 8012320:	200137d4 	.word	0x200137d4
 8012324:	20013828 	.word	0x20013828
 8012328:	20013708 	.word	0x20013708

0801232c <xTimerCreateTimerTask>:
{
 801232c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801232e:	4c23      	ldr	r4, [pc, #140]	; (80123bc <xTimerCreateTimerTask+0x90>)
{
 8012330:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8012332:	f7fd fe4f 	bl	800ffd4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8012336:	6825      	ldr	r5, [r4, #0]
 8012338:	b335      	cbz	r5, 8012388 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801233a:	f7fd fe6d 	bl	8010018 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801233e:	6823      	ldr	r3, [r4, #0]
 8012340:	b1cb      	cbz	r3, 8012376 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8012342:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8012344:	aa07      	add	r2, sp, #28
 8012346:	a906      	add	r1, sp, #24
 8012348:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801234a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801234e:	f7fd fc61 	bl	800fc14 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8012352:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8012356:	2302      	movs	r3, #2
 8012358:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801235c:	9300      	str	r3, [sp, #0]
 801235e:	9a07      	ldr	r2, [sp, #28]
 8012360:	4917      	ldr	r1, [pc, #92]	; (80123c0 <xTimerCreateTimerTask+0x94>)
 8012362:	4818      	ldr	r0, [pc, #96]	; (80123c4 <xTimerCreateTimerTask+0x98>)
 8012364:	4623      	mov	r3, r4
 8012366:	f7ff fa6d 	bl	8011844 <xTaskCreateStatic>
 801236a:	4b17      	ldr	r3, [pc, #92]	; (80123c8 <xTimerCreateTimerTask+0x9c>)
 801236c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801236e:	b110      	cbz	r0, 8012376 <xTimerCreateTimerTask+0x4a>
}
 8012370:	2001      	movs	r0, #1
 8012372:	b009      	add	sp, #36	; 0x24
 8012374:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012376:	f04f 0350 	mov.w	r3, #80	; 0x50
 801237a:	f383 8811 	msr	BASEPRI, r3
 801237e:	f3bf 8f6f 	isb	sy
 8012382:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8012386:	e7fe      	b.n	8012386 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8012388:	4f10      	ldr	r7, [pc, #64]	; (80123cc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801238a:	4e11      	ldr	r6, [pc, #68]	; (80123d0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801238c:	4638      	mov	r0, r7
 801238e:	f7fd fd71 	bl	800fe74 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8012392:	4630      	mov	r0, r6
 8012394:	f7fd fd6e 	bl	800fe74 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8012398:	4a0e      	ldr	r2, [pc, #56]	; (80123d4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801239a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801239c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801239e:	4a0e      	ldr	r2, [pc, #56]	; (80123d8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123a0:	4b0e      	ldr	r3, [pc, #56]	; (80123dc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80123a2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80123a4:	2110      	movs	r1, #16
 80123a6:	4a0e      	ldr	r2, [pc, #56]	; (80123e0 <xTimerCreateTimerTask+0xb4>)
 80123a8:	200a      	movs	r0, #10
 80123aa:	f7fd ffb1 	bl	8010310 <xQueueGenericCreateStatic>
 80123ae:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80123b0:	2800      	cmp	r0, #0
 80123b2:	d0c2      	beq.n	801233a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80123b4:	490b      	ldr	r1, [pc, #44]	; (80123e4 <xTimerCreateTimerTask+0xb8>)
 80123b6:	f7fe ff0d 	bl	80111d4 <vQueueAddToRegistry>
 80123ba:	e7be      	b.n	801233a <xTimerCreateTimerTask+0xe>
 80123bc:	20013828 	.word	0x20013828
 80123c0:	08031448 	.word	0x08031448
 80123c4:	080120a9 	.word	0x080120a9
 80123c8:	2001382c 	.word	0x2001382c
 80123cc:	200137ac 	.word	0x200137ac
 80123d0:	200137c0 	.word	0x200137c0
 80123d4:	20013704 	.word	0x20013704
 80123d8:	20013708 	.word	0x20013708
 80123dc:	200137d8 	.word	0x200137d8
 80123e0:	2001370c 	.word	0x2001370c
 80123e4:	08031440 	.word	0x08031440

080123e8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80123e8:	8880      	ldrh	r0, [r0, #4]
 80123ea:	4770      	bx	lr

080123ec <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80123ec:	b570      	push	{r4, r5, r6, lr}
 80123ee:	6803      	ldr	r3, [r0, #0]
 80123f0:	4605      	mov	r5, r0
 80123f2:	460c      	mov	r4, r1
 80123f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123f6:	2100      	movs	r1, #0
 80123f8:	4798      	blx	r3
 80123fa:	682b      	ldr	r3, [r5, #0]
 80123fc:	4606      	mov	r6, r0
 80123fe:	6a1b      	ldr	r3, [r3, #32]
 8012400:	4628      	mov	r0, r5
 8012402:	4798      	blx	r3
 8012404:	1ba4      	subs	r4, r4, r6
 8012406:	b2a4      	uxth	r4, r4
 8012408:	fbb4 f0f0 	udiv	r0, r4, r0
 801240c:	bd70      	pop	{r4, r5, r6, pc}

0801240e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801240e:	2300      	movs	r3, #0
 8012410:	8083      	strh	r3, [r0, #4]
 8012412:	4770      	bx	lr

08012414 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8012414:	b510      	push	{r4, lr}
 8012416:	6803      	ldr	r3, [r0, #0]
 8012418:	8881      	ldrh	r1, [r0, #4]
 801241a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801241c:	4604      	mov	r4, r0
 801241e:	4798      	blx	r3
 8012420:	88a3      	ldrh	r3, [r4, #4]
 8012422:	3301      	adds	r3, #1
 8012424:	80a3      	strh	r3, [r4, #4]
 8012426:	bd10      	pop	{r4, pc}

08012428 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8012428:	6803      	ldr	r3, [r0, #0]
 801242a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801242c:	4718      	bx	r3

0801242e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801242e:	4770      	bx	lr

08012430 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8012430:	4a02      	ldr	r2, [pc, #8]	; (801243c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8012432:	6002      	str	r2, [r0, #0]
 8012434:	2200      	movs	r2, #0
 8012436:	8082      	strh	r2, [r0, #4]
 8012438:	4770      	bx	lr
 801243a:	bf00      	nop
 801243c:	08031458 	.word	0x08031458

08012440 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8012440:	b510      	push	{r4, lr}
 8012442:	6803      	ldr	r3, [r0, #0]
 8012444:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012448:	4604      	mov	r4, r0
 801244a:	4798      	blx	r3
 801244c:	b110      	cbz	r0, 8012454 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801244e:	4620      	mov	r0, r4
 8012450:	f7f0 ff2e 	bl	80032b0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8012454:	bd10      	pop	{r4, pc}

08012456 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8012456:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801245a:	4770      	bx	lr

0801245c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801245c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8012460:	4770      	bx	lr

08012462 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8012462:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8012466:	4770      	bx	lr

08012468 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8012468:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801246c:	4770      	bx	lr

0801246e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801246e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012470:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8012474:	461e      	mov	r6, r3
 8012476:	6803      	ldr	r3, [r0, #0]
 8012478:	460f      	mov	r7, r1
 801247a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801247e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8012482:	4604      	mov	r4, r0
 8012484:	4615      	mov	r5, r2
 8012486:	4798      	blx	r3
 8012488:	b93e      	cbnz	r6, 801249a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801248a:	1bed      	subs	r5, r5, r7
 801248c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8012490:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8012494:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8012498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801249a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801249e:	e7f7      	b.n	8012490 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080124a0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80124a0:	b510      	push	{r4, lr}
 80124a2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124a6:	600c      	str	r4, [r1, #0]
 80124a8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124ac:	6011      	str	r1, [r2, #0]
 80124ae:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124b2:	801a      	strh	r2, [r3, #0]
 80124b4:	9b02      	ldr	r3, [sp, #8]
 80124b6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80124ba:	801a      	strh	r2, [r3, #0]
 80124bc:	bd10      	pop	{r4, pc}

080124be <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80124be:	b510      	push	{r4, lr}
 80124c0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80124c4:	600c      	str	r4, [r1, #0]
 80124c6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80124ca:	6011      	str	r1, [r2, #0]
 80124cc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80124d0:	801a      	strh	r2, [r3, #0]
 80124d2:	bd10      	pop	{r4, pc}

080124d4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80124d4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80124d8:	600b      	str	r3, [r1, #0]
 80124da:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80124de:	6013      	str	r3, [r2, #0]
 80124e0:	4770      	bx	lr

080124e2 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 80124e2:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 80124e6:	4770      	bx	lr

080124e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 80124e8:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 80124ec:	4770      	bx	lr

080124ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 80124ee:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 80124f2:	4770      	bx	lr

080124f4 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 80124f4:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 80124f8:	4770      	bx	lr

080124fa <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 80124fa:	4770      	bx	lr

080124fc <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 80124fc:	b510      	push	{r4, lr}
 80124fe:	21b4      	movs	r1, #180	; 0xb4
 8012500:	4604      	mov	r4, r0
 8012502:	f01a fb36 	bl	802cb72 <_ZdlPvj>
 8012506:	4620      	mov	r0, r4
 8012508:	bd10      	pop	{r4, pc}

0801250a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801250a:	b570      	push	{r4, r5, r6, lr}
 801250c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8012510:	428d      	cmp	r5, r1
 8012512:	bfb8      	it	lt
 8012514:	460d      	movlt	r5, r1
 8012516:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801251a:	428d      	cmp	r5, r1
 801251c:	4604      	mov	r4, r0
 801251e:	bfa8      	it	ge
 8012520:	460d      	movge	r5, r1
 8012522:	4616      	mov	r6, r2
 8012524:	b99a      	cbnz	r2, 801254e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8012526:	6803      	ldr	r3, [r0, #0]
 8012528:	4629      	mov	r1, r5
 801252a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801252e:	4798      	blx	r3
 8012530:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012534:	b368      	cbz	r0, 8012592 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8012536:	6803      	ldr	r3, [r0, #0]
 8012538:	68db      	ldr	r3, [r3, #12]
 801253a:	4798      	blx	r3
 801253c:	b348      	cbz	r0, 8012592 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801253e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8012542:	6803      	ldr	r3, [r0, #0]
 8012544:	4621      	mov	r1, r4
 8012546:	689b      	ldr	r3, [r3, #8]
 8012548:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801254c:	4718      	bx	r3
 801254e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8012552:	2b00      	cmp	r3, #0
 8012554:	dd08      	ble.n	8012568 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8012556:	f006 fa23 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 801255a:	4621      	mov	r1, r4
 801255c:	3004      	adds	r0, #4
 801255e:	f006 fa6c 	bl	8018a3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012562:	2300      	movs	r3, #0
 8012564:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012568:	6823      	ldr	r3, [r4, #0]
 801256a:	4620      	mov	r0, r4
 801256c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8012570:	4798      	blx	r3
 8012572:	2300      	movs	r3, #0
 8012574:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8012578:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801257c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8012580:	f006 fa0e 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8012584:	4621      	mov	r1, r4
 8012586:	3004      	adds	r0, #4
 8012588:	f006 fb00 	bl	8018b8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 801258c:	2301      	movs	r3, #1
 801258e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8012592:	bd70      	pop	{r4, r5, r6, pc}

08012594 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8012594:	b510      	push	{r4, lr}
 8012596:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 801259a:	4299      	cmp	r1, r3
 801259c:	bfb8      	it	lt
 801259e:	4619      	movlt	r1, r3
 80125a0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80125a4:	4299      	cmp	r1, r3
 80125a6:	bfa8      	it	ge
 80125a8:	4619      	movge	r1, r3
 80125aa:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80125ae:	428b      	cmp	r3, r1
 80125b0:	4604      	mov	r4, r0
 80125b2:	d010      	beq.n	80125d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125b4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80125b8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80125bc:	b158      	cbz	r0, 80125d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125be:	6803      	ldr	r3, [r0, #0]
 80125c0:	68db      	ldr	r3, [r3, #12]
 80125c2:	4798      	blx	r3
 80125c4:	b138      	cbz	r0, 80125d6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80125c6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80125ca:	6803      	ldr	r3, [r0, #0]
 80125cc:	4621      	mov	r1, r4
 80125ce:	689b      	ldr	r3, [r3, #8]
 80125d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125d4:	4718      	bx	r3
 80125d6:	bd10      	pop	{r4, pc}

080125d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80125d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80125da:	4604      	mov	r4, r0
 80125dc:	460d      	mov	r5, r1
 80125de:	b1a9      	cbz	r1, 801260c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 80125e0:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 80125e4:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 80125e8:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 80125ec:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 80125f0:	ab01      	add	r3, sp, #4
 80125f2:	1a12      	subs	r2, r2, r0
 80125f4:	1b89      	subs	r1, r1, r6
 80125f6:	1a38      	subs	r0, r7, r0
 80125f8:	f007 fc88 	bl	8019f0c <_ZN8touchgfx6muldivElllRl>
 80125fc:	4629      	mov	r1, r5
 80125fe:	ab01      	add	r3, sp, #4
 8012600:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8012604:	4430      	add	r0, r6
 8012606:	f007 fc81 	bl	8019f0c <_ZN8touchgfx6muldivElllRl>
 801260a:	b285      	uxth	r5, r0
 801260c:	4628      	mov	r0, r5
 801260e:	b003      	add	sp, #12
 8012610:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012612 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8012612:	b570      	push	{r4, r5, r6, lr}
 8012614:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8012618:	4604      	mov	r4, r0
 801261a:	2b00      	cmp	r3, #0
 801261c:	d035      	beq.n	801268a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801261e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8012622:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8012626:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801262a:	3001      	adds	r0, #1
 801262c:	1ad2      	subs	r2, r2, r3
 801262e:	b212      	sxth	r2, r2
 8012630:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8012634:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8012638:	2100      	movs	r1, #0
 801263a:	b280      	uxth	r0, r0
 801263c:	47a8      	blx	r5
 801263e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8012642:	6823      	ldr	r3, [r4, #0]
 8012644:	4401      	add	r1, r0
 8012646:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801264a:	4620      	mov	r0, r4
 801264c:	4798      	blx	r3
 801264e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8012652:	429a      	cmp	r2, r3
 8012654:	db19      	blt.n	801268a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012656:	2500      	movs	r5, #0
 8012658:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801265c:	f006 f9a0 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8012660:	4621      	mov	r1, r4
 8012662:	3004      	adds	r0, #4
 8012664:	f006 f9e9 	bl	8018a3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012668:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801266c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8012670:	b158      	cbz	r0, 801268a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8012672:	6803      	ldr	r3, [r0, #0]
 8012674:	68db      	ldr	r3, [r3, #12]
 8012676:	4798      	blx	r3
 8012678:	b138      	cbz	r0, 801268a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801267a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801267e:	6803      	ldr	r3, [r0, #0]
 8012680:	4621      	mov	r1, r4
 8012682:	689b      	ldr	r3, [r3, #8]
 8012684:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012688:	4718      	bx	r3
 801268a:	bd70      	pop	{r4, r5, r6, pc}

0801268c <_ZN8touchgfx8DrawableC1Ev>:
 801268c:	4a0a      	ldr	r2, [pc, #40]	; (80126b8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 801268e:	6002      	str	r2, [r0, #0]
 8012690:	2200      	movs	r2, #0
 8012692:	8082      	strh	r2, [r0, #4]
 8012694:	80c2      	strh	r2, [r0, #6]
 8012696:	8102      	strh	r2, [r0, #8]
 8012698:	8142      	strh	r2, [r0, #10]
 801269a:	8182      	strh	r2, [r0, #12]
 801269c:	81c2      	strh	r2, [r0, #14]
 801269e:	8202      	strh	r2, [r0, #16]
 80126a0:	8242      	strh	r2, [r0, #18]
 80126a2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80126a6:	61c2      	str	r2, [r0, #28]
 80126a8:	8402      	strh	r2, [r0, #32]
 80126aa:	8442      	strh	r2, [r0, #34]	; 0x22
 80126ac:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80126b0:	2201      	movs	r2, #1
 80126b2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80126b6:	4770      	bx	lr
 80126b8:	08031dd8 	.word	0x08031dd8

080126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80126bc:	b570      	push	{r4, r5, r6, lr}
 80126be:	6803      	ldr	r3, [r0, #0]
 80126c0:	4604      	mov	r4, r0
 80126c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80126c4:	4615      	mov	r5, r2
 80126c6:	4798      	blx	r3
 80126c8:	6823      	ldr	r3, [r4, #0]
 80126ca:	4629      	mov	r1, r5
 80126cc:	4620      	mov	r0, r4
 80126ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126d4:	4718      	bx	r3

080126d6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80126d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126da:	4604      	mov	r4, r0
 80126dc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 80126e0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 80126e4:	460e      	mov	r6, r1
 80126e6:	4615      	mov	r5, r2
 80126e8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80126ec:	4619      	mov	r1, r3
 80126ee:	463a      	mov	r2, r7
 80126f0:	3058      	adds	r0, #88	; 0x58
 80126f2:	4698      	mov	r8, r3
 80126f4:	f7ff ffe2 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80126f8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 80126fc:	4446      	add	r6, r8
 80126fe:	42b3      	cmp	r3, r6
 8012700:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012704:	bfb8      	it	lt
 8012706:	8126      	strhlt	r6, [r4, #8]
 8012708:	443d      	add	r5, r7
 801270a:	42ab      	cmp	r3, r5
 801270c:	bfb8      	it	lt
 801270e:	8165      	strhlt	r5, [r4, #10]
 8012710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012714 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8012714:	b510      	push	{r4, lr}
 8012716:	4604      	mov	r4, r0
 8012718:	302c      	adds	r0, #44	; 0x2c
 801271a:	f003 fc42 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801271e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8012722:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8012726:	4620      	mov	r0, r4
 8012728:	f7ff ffc8 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801272c:	bd10      	pop	{r4, pc}
	...

08012730 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8012730:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012732:	4604      	mov	r4, r0
 8012734:	4626      	mov	r6, r4
 8012736:	2500      	movs	r5, #0
 8012738:	f7ff ffa8 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 801273c:	4b23      	ldr	r3, [pc, #140]	; (80127cc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801273e:	62a5      	str	r5, [r4, #40]	; 0x28
 8012740:	f846 3b2c 	str.w	r3, [r6], #44
 8012744:	2226      	movs	r2, #38	; 0x26
 8012746:	4629      	mov	r1, r5
 8012748:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801274c:	4630      	mov	r0, r6
 801274e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012752:	f01b fafa 	bl	802dd4a <memset>
 8012756:	4630      	mov	r0, r6
 8012758:	f7ff ff98 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 801275c:	a902      	add	r1, sp, #8
 801275e:	4b1c      	ldr	r3, [pc, #112]	; (80127d0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8012760:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012762:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8012766:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801276a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801276e:	4630      	mov	r0, r6
 8012770:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8012774:	f003 fc15 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012778:	4638      	mov	r0, r7
 801277a:	f7ff ff87 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 801277e:	4b15      	ldr	r3, [pc, #84]	; (80127d4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8012780:	65a3      	str	r3, [r4, #88]	; 0x58
 8012782:	2364      	movs	r3, #100	; 0x64
 8012784:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8012788:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 801278c:	4b12      	ldr	r3, [pc, #72]	; (80127d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 801278e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8012792:	4629      	mov	r1, r5
 8012794:	4630      	mov	r0, r6
 8012796:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 801279a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 801279e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80127a2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80127a6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80127aa:	f7f0 fcdd 	bl	8003168 <_ZN8touchgfx8Drawable4setXEs>
 80127ae:	4629      	mov	r1, r5
 80127b0:	4630      	mov	r0, r6
 80127b2:	f7f0 fcdb 	bl	800316c <_ZN8touchgfx8Drawable4setYEs>
 80127b6:	4631      	mov	r1, r6
 80127b8:	4620      	mov	r0, r4
 80127ba:	f000 f819 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127be:	4620      	mov	r0, r4
 80127c0:	4639      	mov	r1, r7
 80127c2:	f000 f815 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80127c6:	4620      	mov	r0, r4
 80127c8:	b003      	add	sp, #12
 80127ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127cc:	0803148c 	.word	0x0803148c
 80127d0:	08031c94 	.word	0x08031c94
 80127d4:	08031560 	.word	0x08031560
 80127d8:	0801a6e7 	.word	0x0801a6e7

080127dc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80127dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127de:	2000      	movs	r0, #0
 80127e0:	b12b      	cbz	r3, 80127ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80127e2:	b920      	cbnz	r0, 80127ee <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80127e4:	1a5a      	subs	r2, r3, r1
 80127e6:	4250      	negs	r0, r2
 80127e8:	4150      	adcs	r0, r2
 80127ea:	699b      	ldr	r3, [r3, #24]
 80127ec:	e7f8      	b.n	80127e0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80127ee:	4770      	bx	lr

080127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80127f0:	2300      	movs	r3, #0
 80127f2:	6148      	str	r0, [r1, #20]
 80127f4:	618b      	str	r3, [r1, #24]
 80127f6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80127f8:	b913      	cbnz	r3, 8012800 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80127fa:	6281      	str	r1, [r0, #40]	; 0x28
 80127fc:	4770      	bx	lr
 80127fe:	4613      	mov	r3, r2
 8012800:	699a      	ldr	r2, [r3, #24]
 8012802:	2a00      	cmp	r2, #0
 8012804:	d1fb      	bne.n	80127fe <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8012806:	6199      	str	r1, [r3, #24]
 8012808:	4770      	bx	lr

0801280a <_ZN8touchgfx9Container9removeAllEv>:
 801280a:	2200      	movs	r2, #0
 801280c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801280e:	b123      	cbz	r3, 801281a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012810:	6999      	ldr	r1, [r3, #24]
 8012812:	6281      	str	r1, [r0, #40]	; 0x28
 8012814:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8012818:	e7f8      	b.n	801280c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801281a:	4770      	bx	lr

0801281c <_ZN8touchgfx9Container6unlinkEv>:
 801281c:	2300      	movs	r3, #0
 801281e:	6283      	str	r3, [r0, #40]	; 0x28
 8012820:	4770      	bx	lr

08012822 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012822:	2200      	movs	r2, #0
 8012824:	8002      	strh	r2, [r0, #0]
 8012826:	8042      	strh	r2, [r0, #2]
 8012828:	8082      	strh	r2, [r0, #4]
 801282a:	80c2      	strh	r2, [r0, #6]
 801282c:	4770      	bx	lr

0801282e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801282e:	b570      	push	{r4, r5, r6, lr}
 8012830:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012832:	460d      	mov	r5, r1
 8012834:	4616      	mov	r6, r2
 8012836:	b13c      	cbz	r4, 8012848 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8012838:	6823      	ldr	r3, [r4, #0]
 801283a:	4620      	mov	r0, r4
 801283c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801283e:	4632      	mov	r2, r6
 8012840:	4629      	mov	r1, r5
 8012842:	4798      	blx	r3
 8012844:	69a4      	ldr	r4, [r4, #24]
 8012846:	e7f6      	b.n	8012836 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8012848:	bd70      	pop	{r4, r5, r6, pc}

0801284a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801284a:	b538      	push	{r3, r4, r5, lr}
 801284c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801284e:	460d      	mov	r5, r1
 8012850:	b134      	cbz	r4, 8012860 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8012852:	682b      	ldr	r3, [r5, #0]
 8012854:	4621      	mov	r1, r4
 8012856:	689b      	ldr	r3, [r3, #8]
 8012858:	4628      	mov	r0, r5
 801285a:	4798      	blx	r3
 801285c:	69a4      	ldr	r4, [r4, #24]
 801285e:	e7f7      	b.n	8012850 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8012860:	bd38      	pop	{r3, r4, r5, pc}

08012862 <_ZN8touchgfx9ContainerD1Ev>:
 8012862:	4770      	bx	lr

08012864 <_ZN8touchgfx9ContainerD0Ev>:
 8012864:	b510      	push	{r4, lr}
 8012866:	212c      	movs	r1, #44	; 0x2c
 8012868:	4604      	mov	r4, r0
 801286a:	f01a f982 	bl	802cb72 <_ZdlPvj>
 801286e:	4620      	mov	r0, r4
 8012870:	bd10      	pop	{r4, pc}

08012872 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8012872:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8012874:	b19b      	cbz	r3, 801289e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8012876:	428b      	cmp	r3, r1
 8012878:	d109      	bne.n	801288e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801287a:	699a      	ldr	r2, [r3, #24]
 801287c:	2100      	movs	r1, #0
 801287e:	6159      	str	r1, [r3, #20]
 8012880:	6282      	str	r2, [r0, #40]	; 0x28
 8012882:	b902      	cbnz	r2, 8012886 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8012884:	4770      	bx	lr
 8012886:	6199      	str	r1, [r3, #24]
 8012888:	4770      	bx	lr
 801288a:	4613      	mov	r3, r2
 801288c:	b13a      	cbz	r2, 801289e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801288e:	699a      	ldr	r2, [r3, #24]
 8012890:	428a      	cmp	r2, r1
 8012892:	d1fa      	bne.n	801288a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8012894:	698a      	ldr	r2, [r1, #24]
 8012896:	619a      	str	r2, [r3, #24]
 8012898:	2300      	movs	r3, #0
 801289a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801289e:	4770      	bx	lr

080128a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80128a0:	b410      	push	{r4}
 80128a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80128a4:	4604      	mov	r4, r0
 80128a6:	b92b      	cbnz	r3, 80128b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80128a8:	6803      	ldr	r3, [r0, #0]
 80128aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80128b0:	4611      	mov	r1, r2
 80128b2:	4718      	bx	r3
 80128b4:	b941      	cbnz	r1, 80128c8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80128b6:	6193      	str	r3, [r2, #24]
 80128b8:	6282      	str	r2, [r0, #40]	; 0x28
 80128ba:	6154      	str	r4, [r2, #20]
 80128bc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80128c0:	4770      	bx	lr
 80128c2:	4603      	mov	r3, r0
 80128c4:	2800      	cmp	r0, #0
 80128c6:	d0f9      	beq.n	80128bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80128c8:	4299      	cmp	r1, r3
 80128ca:	6998      	ldr	r0, [r3, #24]
 80128cc:	d1f9      	bne.n	80128c2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80128ce:	6190      	str	r0, [r2, #24]
 80128d0:	618a      	str	r2, [r1, #24]
 80128d2:	e7f2      	b.n	80128ba <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080128d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80128d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128d8:	461f      	mov	r7, r3
 80128da:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80128de:	460d      	mov	r5, r1
 80128e0:	4616      	mov	r6, r2
 80128e2:	b103      	cbz	r3, 80128e6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80128e4:	6038      	str	r0, [r7, #0]
 80128e6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80128e8:	b314      	cbz	r4, 8012930 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80128ea:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80128ee:	b1eb      	cbz	r3, 801292c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128f0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80128f4:	428d      	cmp	r5, r1
 80128f6:	db19      	blt.n	801292c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80128f8:	8923      	ldrh	r3, [r4, #8]
 80128fa:	b289      	uxth	r1, r1
 80128fc:	440b      	add	r3, r1
 80128fe:	b21b      	sxth	r3, r3
 8012900:	429d      	cmp	r5, r3
 8012902:	da13      	bge.n	801292c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012904:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8012908:	4296      	cmp	r6, r2
 801290a:	db0f      	blt.n	801292c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801290c:	8963      	ldrh	r3, [r4, #10]
 801290e:	b292      	uxth	r2, r2
 8012910:	4413      	add	r3, r2
 8012912:	b21b      	sxth	r3, r3
 8012914:	429e      	cmp	r6, r3
 8012916:	da09      	bge.n	801292c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012918:	6823      	ldr	r3, [r4, #0]
 801291a:	1ab2      	subs	r2, r6, r2
 801291c:	1a69      	subs	r1, r5, r1
 801291e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8012922:	b212      	sxth	r2, r2
 8012924:	463b      	mov	r3, r7
 8012926:	b209      	sxth	r1, r1
 8012928:	4620      	mov	r0, r4
 801292a:	47c0      	blx	r8
 801292c:	69a4      	ldr	r4, [r4, #24]
 801292e:	e7db      	b.n	80128e8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012934 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012938:	4c6e      	ldr	r4, [pc, #440]	; (8012af4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801293a:	b0a1      	sub	sp, #132	; 0x84
 801293c:	6824      	ldr	r4, [r4, #0]
 801293e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8012940:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8012944:	9303      	str	r3, [sp, #12]
 8012946:	2400      	movs	r4, #0
 8012948:	802c      	strh	r4, [r5, #0]
 801294a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801294c:	802c      	strh	r4, [r5, #0]
 801294e:	601c      	str	r4, [r3, #0]
 8012950:	4606      	mov	r6, r0
 8012952:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8012956:	f7ff ffbd 	bl	80128d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801295a:	f1b9 0f03 	cmp.w	r9, #3
 801295e:	f340 80c2 	ble.w	8012ae6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8012962:	4631      	mov	r1, r6
 8012964:	a80c      	add	r0, sp, #48	; 0x30
 8012966:	f007 f99f 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801296a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801296e:	9306      	str	r3, [sp, #24]
 8012970:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8012974:	9307      	str	r3, [sp, #28]
 8012976:	9b03      	ldr	r3, [sp, #12]
 8012978:	f8d3 a000 	ldr.w	sl, [r3]
 801297c:	f1ba 0f00 	cmp.w	sl, #0
 8012980:	f000 80b4 	beq.w	8012aec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8012984:	4651      	mov	r1, sl
 8012986:	a810      	add	r0, sp, #64	; 0x40
 8012988:	f007 f98e 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801298c:	9b01      	ldr	r3, [sp, #4]
 801298e:	9a06      	ldr	r2, [sp, #24]
 8012990:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8012994:	189d      	adds	r5, r3, r2
 8012996:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801299a:	9a07      	ldr	r2, [sp, #28]
 801299c:	2002      	movs	r0, #2
 801299e:	fb91 f1f0 	sdiv	r1, r1, r0
 80129a2:	4419      	add	r1, r3
 80129a4:	1a6d      	subs	r5, r5, r1
 80129a6:	9b02      	ldr	r3, [sp, #8]
 80129a8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80129ac:	4413      	add	r3, r2
 80129ae:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80129b2:	fb92 f2f0 	sdiv	r2, r2, r0
 80129b6:	440a      	add	r2, r1
 80129b8:	1a9b      	subs	r3, r3, r2
 80129ba:	435b      	muls	r3, r3
 80129bc:	fb05 3505 	mla	r5, r5, r5, r3
 80129c0:	4f4d      	ldr	r7, [pc, #308]	; (8012af8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80129c2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129c4:	ac10      	add	r4, sp, #64	; 0x40
 80129c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129c8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129cc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80129ce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80129d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80129d4:	f1b9 0f0c 	cmp.w	r9, #12
 80129d8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80129dc:	f04f 0303 	mov.w	r3, #3
 80129e0:	bfc8      	it	gt
 80129e2:	4698      	movgt	r8, r3
 80129e4:	f8cd 9000 	str.w	r9, [sp]
 80129e8:	f04f 0400 	mov.w	r4, #0
 80129ec:	bfdc      	itt	le
 80129ee:	f109 32ff 	addle.w	r2, r9, #4294967295
 80129f2:	fb92 f8f3 	sdivle	r8, r2, r3
 80129f6:	1c63      	adds	r3, r4, #1
 80129f8:	aa10      	add	r2, sp, #64	; 0x40
 80129fa:	f004 0401 	and.w	r4, r4, #1
 80129fe:	9308      	str	r3, [sp, #32]
 8012a00:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8012a04:	9b00      	ldr	r3, [sp, #0]
 8012a06:	fb93 f3f8 	sdiv	r3, r3, r8
 8012a0a:	b29b      	uxth	r3, r3
 8012a0c:	3404      	adds	r4, #4
 8012a0e:	f04f 0b00 	mov.w	fp, #0
 8012a12:	9304      	str	r3, [sp, #16]
 8012a14:	9a04      	ldr	r2, [sp, #16]
 8012a16:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8012a1a:	fb13 f302 	smulbb	r3, r3, r2
 8012a1e:	9a01      	ldr	r2, [sp, #4]
 8012a20:	b29b      	uxth	r3, r3
 8012a22:	1899      	adds	r1, r3, r2
 8012a24:	9305      	str	r3, [sp, #20]
 8012a26:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012a2a:	b209      	sxth	r1, r1
 8012a2c:	4299      	cmp	r1, r3
 8012a2e:	db4d      	blt.n	8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a30:	8932      	ldrh	r2, [r6, #8]
 8012a32:	4413      	add	r3, r2
 8012a34:	b21b      	sxth	r3, r3
 8012a36:	4299      	cmp	r1, r3
 8012a38:	da48      	bge.n	8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a3a:	9b04      	ldr	r3, [sp, #16]
 8012a3c:	6827      	ldr	r7, [r4, #0]
 8012a3e:	fb17 f703 	smulbb	r7, r7, r3
 8012a42:	9b02      	ldr	r3, [sp, #8]
 8012a44:	b2bf      	uxth	r7, r7
 8012a46:	18fa      	adds	r2, r7, r3
 8012a48:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012a4c:	b212      	sxth	r2, r2
 8012a4e:	429a      	cmp	r2, r3
 8012a50:	db3c      	blt.n	8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a52:	8970      	ldrh	r0, [r6, #10]
 8012a54:	4403      	add	r3, r0
 8012a56:	b21b      	sxth	r3, r3
 8012a58:	429a      	cmp	r2, r3
 8012a5a:	da37      	bge.n	8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a5c:	2300      	movs	r3, #0
 8012a5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012a60:	4630      	mov	r0, r6
 8012a62:	ab0b      	add	r3, sp, #44	; 0x2c
 8012a64:	f7ff ff36 	bl	80128d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8012a68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012a6a:	b37a      	cbz	r2, 8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a6c:	4552      	cmp	r2, sl
 8012a6e:	d02d      	beq.n	8012acc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012a70:	4611      	mov	r1, r2
 8012a72:	a80e      	add	r0, sp, #56	; 0x38
 8012a74:	9209      	str	r2, [sp, #36]	; 0x24
 8012a76:	f007 f917 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a7a:	9a06      	ldr	r2, [sp, #24]
 8012a7c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8012a80:	9b01      	ldr	r3, [sp, #4]
 8012a82:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8012a86:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8012a8a:	4413      	add	r3, r2
 8012a8c:	f04f 0e02 	mov.w	lr, #2
 8012a90:	fb91 f1fe 	sdiv	r1, r1, lr
 8012a94:	4401      	add	r1, r0
 8012a96:	1a58      	subs	r0, r3, r1
 8012a98:	9a07      	ldr	r2, [sp, #28]
 8012a9a:	9b02      	ldr	r3, [sp, #8]
 8012a9c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8012aa0:	fb9c fcfe 	sdiv	ip, ip, lr
 8012aa4:	4413      	add	r3, r2
 8012aa6:	448c      	add	ip, r1
 8012aa8:	eba3 030c 	sub.w	r3, r3, ip
 8012aac:	435b      	muls	r3, r3
 8012aae:	fb00 3300 	mla	r3, r0, r0, r3
 8012ab2:	42ab      	cmp	r3, r5
 8012ab4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012ab6:	d208      	bcs.n	8012aca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8012ab8:	9803      	ldr	r0, [sp, #12]
 8012aba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012abc:	6001      	str	r1, [r0, #0]
 8012abe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012ac0:	9805      	ldr	r0, [sp, #20]
 8012ac2:	8008      	strh	r0, [r1, #0]
 8012ac4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012ac6:	461d      	mov	r5, r3
 8012ac8:	800f      	strh	r7, [r1, #0]
 8012aca:	4692      	mov	sl, r2
 8012acc:	f10b 0b01 	add.w	fp, fp, #1
 8012ad0:	f1bb 0f04 	cmp.w	fp, #4
 8012ad4:	f104 0408 	add.w	r4, r4, #8
 8012ad8:	d19c      	bne.n	8012a14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8012ada:	9b00      	ldr	r3, [sp, #0]
 8012adc:	9c08      	ldr	r4, [sp, #32]
 8012ade:	444b      	add	r3, r9
 8012ae0:	4544      	cmp	r4, r8
 8012ae2:	9300      	str	r3, [sp, #0]
 8012ae4:	d187      	bne.n	80129f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012ae6:	b021      	add	sp, #132	; 0x84
 8012ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012aec:	f04f 35ff 	mov.w	r5, #4294967295
 8012af0:	e766      	b.n	80129c0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012af2:	bf00      	nop
 8012af4:	2001383c 	.word	0x2001383c
 8012af8:	0802ea7c 	.word	0x0802ea7c

08012afc <_ZN8touchgfx4RectaNERKS0_>:
 8012afc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b00:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012b04:	888c      	ldrh	r4, [r1, #4]
 8012b06:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012b0a:	443c      	add	r4, r7
 8012b0c:	b2a4      	uxth	r4, r4
 8012b0e:	fa0f f884 	sxth.w	r8, r4
 8012b12:	45c1      	cmp	r9, r8
 8012b14:	da2f      	bge.n	8012b76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b16:	8882      	ldrh	r2, [r0, #4]
 8012b18:	444a      	add	r2, r9
 8012b1a:	b292      	uxth	r2, r2
 8012b1c:	fa0f fe82 	sxth.w	lr, r2
 8012b20:	4577      	cmp	r7, lr
 8012b22:	da28      	bge.n	8012b76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b24:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012b28:	88cb      	ldrh	r3, [r1, #6]
 8012b2a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012b2e:	442b      	add	r3, r5
 8012b30:	b21b      	sxth	r3, r3
 8012b32:	429e      	cmp	r6, r3
 8012b34:	da1f      	bge.n	8012b76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b36:	88c3      	ldrh	r3, [r0, #6]
 8012b38:	4433      	add	r3, r6
 8012b3a:	b29b      	uxth	r3, r3
 8012b3c:	fa0f fc83 	sxth.w	ip, r3
 8012b40:	4565      	cmp	r5, ip
 8012b42:	da18      	bge.n	8012b76 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012b44:	454f      	cmp	r7, r9
 8012b46:	bfb8      	it	lt
 8012b48:	464f      	movlt	r7, r9
 8012b4a:	42b5      	cmp	r5, r6
 8012b4c:	bfb8      	it	lt
 8012b4e:	4635      	movlt	r5, r6
 8012b50:	45f0      	cmp	r8, lr
 8012b52:	bfd8      	it	le
 8012b54:	4622      	movle	r2, r4
 8012b56:	1bd2      	subs	r2, r2, r7
 8012b58:	8082      	strh	r2, [r0, #4]
 8012b5a:	884a      	ldrh	r2, [r1, #2]
 8012b5c:	88c9      	ldrh	r1, [r1, #6]
 8012b5e:	8007      	strh	r7, [r0, #0]
 8012b60:	440a      	add	r2, r1
 8012b62:	b292      	uxth	r2, r2
 8012b64:	b211      	sxth	r1, r2
 8012b66:	458c      	cmp	ip, r1
 8012b68:	bfa8      	it	ge
 8012b6a:	4613      	movge	r3, r2
 8012b6c:	1b5b      	subs	r3, r3, r5
 8012b6e:	80c3      	strh	r3, [r0, #6]
 8012b70:	8045      	strh	r5, [r0, #2]
 8012b72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012b76:	2300      	movs	r3, #0
 8012b78:	8003      	strh	r3, [r0, #0]
 8012b7a:	8043      	strh	r3, [r0, #2]
 8012b7c:	8083      	strh	r3, [r0, #4]
 8012b7e:	80c3      	strh	r3, [r0, #6]
 8012b80:	e7f7      	b.n	8012b72 <_ZN8touchgfx4RectaNERKS0_+0x76>

08012b82 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8012b82:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012b86:	2b00      	cmp	r3, #0
 8012b88:	dd06      	ble.n	8012b98 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8012b8a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8012b8e:	2800      	cmp	r0, #0
 8012b90:	bfcc      	ite	gt
 8012b92:	2000      	movgt	r0, #0
 8012b94:	2001      	movle	r0, #1
 8012b96:	4770      	bx	lr
 8012b98:	2001      	movs	r0, #1
 8012b9a:	4770      	bx	lr

08012b9c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8012b9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ba0:	2300      	movs	r3, #0
 8012ba2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8012ba4:	8003      	strh	r3, [r0, #0]
 8012ba6:	4604      	mov	r4, r0
 8012ba8:	8043      	strh	r3, [r0, #2]
 8012baa:	8083      	strh	r3, [r0, #4]
 8012bac:	80c3      	strh	r3, [r0, #6]
 8012bae:	2d00      	cmp	r5, #0
 8012bb0:	d040      	beq.n	8012c34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8012bb2:	1d28      	adds	r0, r5, #4
 8012bb4:	f7ff ffe5 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bb8:	b988      	cbnz	r0, 8012bde <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012bba:	4620      	mov	r0, r4
 8012bbc:	f7ff ffe1 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012bc0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012bc4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012bc8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8012bcc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012bd0:	b138      	cbz	r0, 8012be2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012bd2:	8022      	strh	r2, [r4, #0]
 8012bd4:	8063      	strh	r3, [r4, #2]
 8012bd6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8012bda:	f8a4 c006 	strh.w	ip, [r4, #6]
 8012bde:	69ad      	ldr	r5, [r5, #24]
 8012be0:	e7e5      	b.n	8012bae <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012be2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012be6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012bea:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012bee:	4290      	cmp	r0, r2
 8012bf0:	4607      	mov	r7, r0
 8012bf2:	bfa8      	it	ge
 8012bf4:	4617      	movge	r7, r2
 8012bf6:	4472      	add	r2, lr
 8012bf8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012bfc:	8027      	strh	r7, [r4, #0]
 8012bfe:	4299      	cmp	r1, r3
 8012c00:	460e      	mov	r6, r1
 8012c02:	4440      	add	r0, r8
 8012c04:	bfa8      	it	ge
 8012c06:	461e      	movge	r6, r3
 8012c08:	4471      	add	r1, lr
 8012c0a:	4463      	add	r3, ip
 8012c0c:	b200      	sxth	r0, r0
 8012c0e:	b212      	sxth	r2, r2
 8012c10:	b209      	sxth	r1, r1
 8012c12:	b21b      	sxth	r3, r3
 8012c14:	4290      	cmp	r0, r2
 8012c16:	bfac      	ite	ge
 8012c18:	ebc7 0200 	rsbge	r2, r7, r0
 8012c1c:	ebc7 0202 	rsblt	r2, r7, r2
 8012c20:	4299      	cmp	r1, r3
 8012c22:	bfac      	ite	ge
 8012c24:	ebc6 0301 	rsbge	r3, r6, r1
 8012c28:	ebc6 0303 	rsblt	r3, r6, r3
 8012c2c:	8066      	strh	r6, [r4, #2]
 8012c2e:	80a2      	strh	r2, [r4, #4]
 8012c30:	80e3      	strh	r3, [r4, #6]
 8012c32:	e7d4      	b.n	8012bde <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012c34:	4620      	mov	r0, r4
 8012c36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012c3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8012c3a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012c3e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012c42:	b383      	cbz	r3, 8012ca6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c44:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012c46:	b374      	cbz	r4, 8012ca6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012c48:	f9b1 5000 	ldrsh.w	r5, [r1]
 8012c4c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012c50:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012c54:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012c58:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012c5c:	b303      	cbz	r3, 8012ca0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c5e:	4668      	mov	r0, sp
 8012c60:	1d21      	adds	r1, r4, #4
 8012c62:	f8ad 5000 	strh.w	r5, [sp]
 8012c66:	f8ad 6002 	strh.w	r6, [sp, #2]
 8012c6a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8012c6e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8012c72:	f7ff ff43 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8012c76:	4668      	mov	r0, sp
 8012c78:	f7ff ff83 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c7c:	b980      	cbnz	r0, 8012ca0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8012c7e:	f8bd 3000 	ldrh.w	r3, [sp]
 8012c82:	88a2      	ldrh	r2, [r4, #4]
 8012c84:	1a9b      	subs	r3, r3, r2
 8012c86:	f8ad 3000 	strh.w	r3, [sp]
 8012c8a:	88e2      	ldrh	r2, [r4, #6]
 8012c8c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012c90:	1a9b      	subs	r3, r3, r2
 8012c92:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012c96:	6823      	ldr	r3, [r4, #0]
 8012c98:	4669      	mov	r1, sp
 8012c9a:	689b      	ldr	r3, [r3, #8]
 8012c9c:	4620      	mov	r0, r4
 8012c9e:	4798      	blx	r3
 8012ca0:	69a4      	ldr	r4, [r4, #24]
 8012ca2:	2c00      	cmp	r4, #0
 8012ca4:	d1d8      	bne.n	8012c58 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8012ca6:	b002      	add	sp, #8
 8012ca8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012cac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8012cac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012cae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8012cb2:	460d      	mov	r5, r1
 8012cb4:	4616      	mov	r6, r2
 8012cb6:	b323      	cbz	r3, 8012d02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012cb8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8012cba:	b314      	cbz	r4, 8012d02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8012cbc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8012cc0:	b1eb      	cbz	r3, 8012cfe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012cc2:	6828      	ldr	r0, [r5, #0]
 8012cc4:	6869      	ldr	r1, [r5, #4]
 8012cc6:	466b      	mov	r3, sp
 8012cc8:	c303      	stmia	r3!, {r0, r1}
 8012cca:	4668      	mov	r0, sp
 8012ccc:	1d21      	adds	r1, r4, #4
 8012cce:	f7ff ff15 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8012cd2:	4668      	mov	r0, sp
 8012cd4:	f7ff ff55 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cd8:	b988      	cbnz	r0, 8012cfe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012cda:	f8bd 3000 	ldrh.w	r3, [sp]
 8012cde:	88a2      	ldrh	r2, [r4, #4]
 8012ce0:	1a9b      	subs	r3, r3, r2
 8012ce2:	f8ad 3000 	strh.w	r3, [sp]
 8012ce6:	88e2      	ldrh	r2, [r4, #6]
 8012ce8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012cec:	1a9b      	subs	r3, r3, r2
 8012cee:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012cf2:	6823      	ldr	r3, [r4, #0]
 8012cf4:	4632      	mov	r2, r6
 8012cf6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012cf8:	4669      	mov	r1, sp
 8012cfa:	4620      	mov	r0, r4
 8012cfc:	4798      	blx	r3
 8012cfe:	69a4      	ldr	r4, [r4, #24]
 8012d00:	e7db      	b.n	8012cba <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012d02:	b002      	add	sp, #8
 8012d04:	bd70      	pop	{r4, r5, r6, pc}

08012d06 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8012d06:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012d08:	4770      	bx	lr
	...

08012d0c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8012d0c:	4b05      	ldr	r3, [pc, #20]	; (8012d24 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8012d0e:	b510      	push	{r4, lr}
 8012d10:	6003      	str	r3, [r0, #0]
 8012d12:	4604      	mov	r4, r0
 8012d14:	f005 fe44 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8012d18:	4621      	mov	r1, r4
 8012d1a:	3004      	adds	r0, #4
 8012d1c:	f005 fe8d 	bl	8018a3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012d20:	4620      	mov	r0, r4
 8012d22:	bd10      	pop	{r4, pc}
 8012d24:	080315f0 	.word	0x080315f0

08012d28 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8012d28:	b510      	push	{r4, lr}
 8012d2a:	4604      	mov	r4, r0
 8012d2c:	f7ff ffee 	bl	8012d0c <_ZN8touchgfx14SwipeContainerD1Ev>
 8012d30:	4620      	mov	r0, r4
 8012d32:	21f4      	movs	r1, #244	; 0xf4
 8012d34:	f019 ff1d 	bl	802cb72 <_ZdlPvj>
 8012d38:	4620      	mov	r0, r4
 8012d3a:	bd10      	pop	{r4, pc}

08012d3c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8012d3c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012d40:	2b04      	cmp	r3, #4
 8012d42:	d117      	bne.n	8012d74 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d44:	790b      	ldrb	r3, [r1, #4]
 8012d46:	2b01      	cmp	r3, #1
 8012d48:	d114      	bne.n	8012d74 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d4a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8012d4e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8012d50:	8643      	strh	r3, [r0, #50]	; 0x32
 8012d52:	2b00      	cmp	r3, #0
 8012d54:	8682      	strh	r2, [r0, #52]	; 0x34
 8012d56:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012d5a:	da0e      	bge.n	8012d7a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8012d5c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012d60:	3a01      	subs	r2, #1
 8012d62:	4291      	cmp	r1, r2
 8012d64:	d007      	beq.n	8012d76 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d66:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d68:	4252      	negs	r2, r2
 8012d6a:	4293      	cmp	r3, r2
 8012d6c:	dc03      	bgt.n	8012d76 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8012d6e:	2302      	movs	r3, #2
 8012d70:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012d74:	4770      	bx	lr
 8012d76:	2300      	movs	r3, #0
 8012d78:	e7fa      	b.n	8012d70 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d7a:	d0fb      	beq.n	8012d74 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8012d7c:	b111      	cbz	r1, 8012d84 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8012d7e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8012d80:	4293      	cmp	r3, r2
 8012d82:	da01      	bge.n	8012d88 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8012d84:	2301      	movs	r3, #1
 8012d86:	e7f3      	b.n	8012d70 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8012d88:	2303      	movs	r3, #3
 8012d8a:	e7f1      	b.n	8012d70 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08012d8c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8012d8c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012d90:	2b04      	cmp	r3, #4
 8012d92:	d113      	bne.n	8012dbc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012d94:	790b      	ldrb	r3, [r1, #4]
 8012d96:	b98b      	cbnz	r3, 8012dbc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012d98:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012d9a:	8643      	strh	r3, [r0, #50]	; 0x32
 8012d9c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8012d9e:	8683      	strh	r3, [r0, #52]	; 0x34
 8012da0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8012da4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8012da8:	2b00      	cmp	r3, #0
 8012daa:	da08      	bge.n	8012dbe <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8012dac:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8012db0:	3b01      	subs	r3, #1
 8012db2:	429a      	cmp	r2, r3
 8012db4:	da02      	bge.n	8012dbc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012db6:	2302      	movs	r3, #2
 8012db8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012dbc:	4770      	bx	lr
 8012dbe:	d0fd      	beq.n	8012dbc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012dc0:	2a00      	cmp	r2, #0
 8012dc2:	d0fb      	beq.n	8012dbc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8012dc4:	2303      	movs	r3, #3
 8012dc6:	e7f7      	b.n	8012db8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08012dc8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8012dc8:	b538      	push	{r3, r4, r5, lr}
 8012dca:	2226      	movs	r2, #38	; 0x26
 8012dcc:	4604      	mov	r4, r0
 8012dce:	460d      	mov	r5, r1
 8012dd0:	2100      	movs	r1, #0
 8012dd2:	f01a ffba 	bl	802dd4a <memset>
 8012dd6:	4620      	mov	r0, r4
 8012dd8:	f7ff fc58 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 8012ddc:	4b06      	ldr	r3, [pc, #24]	; (8012df8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8012dde:	6023      	str	r3, [r4, #0]
 8012de0:	882b      	ldrh	r3, [r5, #0]
 8012de2:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012de4:	23ff      	movs	r3, #255	; 0xff
 8012de6:	4620      	mov	r0, r4
 8012de8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8012dec:	4629      	mov	r1, r5
 8012dee:	f003 f8d8 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8012df2:	4620      	mov	r0, r4
 8012df4:	bd38      	pop	{r3, r4, r5, pc}
 8012df6:	bf00      	nop
 8012df8:	08031c94 	.word	0x08031c94

08012dfc <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8012dfc:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012dfe:	4770      	bx	lr

08012e00 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8012e00:	b508      	push	{r3, lr}
 8012e02:	3068      	adds	r0, #104	; 0x68
 8012e04:	f7f0 fc32 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8012e08:	bd08      	pop	{r3, pc}

08012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8012e0a:	b508      	push	{r3, lr}
 8012e0c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8012e0e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e12:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012e16:	fb03 2111 	mls	r1, r3, r1, r2
 8012e1a:	b209      	sxth	r1, r1
 8012e1c:	2200      	movs	r2, #0
 8012e1e:	3038      	adds	r0, #56	; 0x38
 8012e20:	f7f0 f9af 	bl	8003182 <_ZN8touchgfx8Drawable6moveToEss>
 8012e24:	bd08      	pop	{r3, pc}

08012e26 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8012e26:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012e2a:	2b04      	cmp	r3, #4
 8012e2c:	d119      	bne.n	8012e62 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8012e2e:	88ca      	ldrh	r2, [r1, #6]
 8012e30:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012e32:	1a9b      	subs	r3, r3, r2
 8012e34:	894a      	ldrh	r2, [r1, #10]
 8012e36:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8012e3a:	4413      	add	r3, r2
 8012e3c:	b21b      	sxth	r3, r3
 8012e3e:	8603      	strh	r3, [r0, #48]	; 0x30
 8012e40:	b921      	cbnz	r1, 8012e4c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e42:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e44:	4293      	cmp	r3, r2
 8012e46:	dd01      	ble.n	8012e4c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8012e48:	8602      	strh	r2, [r0, #48]	; 0x30
 8012e4a:	e008      	b.n	8012e5e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e4c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8012e50:	3a01      	subs	r2, #1
 8012e52:	4291      	cmp	r1, r2
 8012e54:	d103      	bne.n	8012e5e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8012e56:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8012e58:	4252      	negs	r2, r2
 8012e5a:	4293      	cmp	r3, r2
 8012e5c:	dbf4      	blt.n	8012e48 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8012e5e:	f7ff bfd4 	b.w	8012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e62:	4770      	bx	lr

08012e64 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8012e64:	b538      	push	{r3, r4, r5, lr}
 8012e66:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012e6a:	2d0e      	cmp	r5, #14
 8012e6c:	4604      	mov	r4, r0
 8012e6e:	d813      	bhi.n	8012e98 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8012e70:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8012e72:	4252      	negs	r2, r2
 8012e74:	230e      	movs	r3, #14
 8012e76:	b212      	sxth	r2, r2
 8012e78:	2100      	movs	r1, #0
 8012e7a:	4628      	mov	r0, r5
 8012e7c:	f007 fbc2 	bl	801a604 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012e80:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012e82:	4418      	add	r0, r3
 8012e84:	8620      	strh	r0, [r4, #48]	; 0x30
 8012e86:	4620      	mov	r0, r4
 8012e88:	f7ff ffbf 	bl	8012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012e8c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012e90:	3301      	adds	r3, #1
 8012e92:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012e96:	bd38      	pop	{r3, r4, r5, pc}
 8012e98:	2304      	movs	r3, #4
 8012e9a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012e9e:	2300      	movs	r3, #0
 8012ea0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012ea4:	8603      	strh	r3, [r0, #48]	; 0x30
 8012ea6:	e7ef      	b.n	8012e88 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08012ea8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8012ea8:	b538      	push	{r3, r4, r5, lr}
 8012eaa:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8012eae:	2d0e      	cmp	r5, #14
 8012eb0:	4604      	mov	r4, r0
 8012eb2:	d812      	bhi.n	8012eda <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8012eb4:	230e      	movs	r3, #14
 8012eb6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8012eba:	2100      	movs	r1, #0
 8012ebc:	4628      	mov	r0, r5
 8012ebe:	f007 fba1 	bl	801a604 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8012ec2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8012ec4:	1a18      	subs	r0, r3, r0
 8012ec6:	8620      	strh	r0, [r4, #48]	; 0x30
 8012ec8:	4620      	mov	r0, r4
 8012eca:	f7ff ff9e 	bl	8012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8012ece:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8012ed2:	3301      	adds	r3, #1
 8012ed4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8012ed8:	bd38      	pop	{r3, r4, r5, pc}
 8012eda:	2304      	movs	r3, #4
 8012edc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8012ee0:	2300      	movs	r3, #0
 8012ee2:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8012ee6:	8603      	strh	r3, [r0, #48]	; 0x30
 8012ee8:	e7ef      	b.n	8012eca <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08012eec <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8012eec:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012ef0:	4604      	mov	r4, r0
 8012ef2:	4626      	mov	r6, r4
 8012ef4:	af02      	add	r7, sp, #8
 8012ef6:	f7ff fbc9 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 8012efa:	2500      	movs	r5, #0
 8012efc:	4b18      	ldr	r3, [pc, #96]	; (8012f60 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8012efe:	62a5      	str	r5, [r4, #40]	; 0x28
 8012f00:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8012f04:	f846 3b2c 	str.w	r3, [r6], #44
 8012f08:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8012f0c:	4630      	mov	r0, r6
 8012f0e:	4639      	mov	r1, r7
 8012f10:	f7ff ff5a 	bl	8012dc8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f14:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8012f18:	4b12      	ldr	r3, [pc, #72]	; (8012f64 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8012f1a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8012f1c:	4639      	mov	r1, r7
 8012f1e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8012f22:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8012f26:	4640      	mov	r0, r8
 8012f28:	f8ad 9004 	strh.w	r9, [sp, #4]
 8012f2c:	f7ff ff4c 	bl	8012dc8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8012f30:	462a      	mov	r2, r5
 8012f32:	4629      	mov	r1, r5
 8012f34:	4630      	mov	r0, r6
 8012f36:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8012f3a:	f7f0 fb97 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8012f3e:	462a      	mov	r2, r5
 8012f40:	4629      	mov	r1, r5
 8012f42:	4640      	mov	r0, r8
 8012f44:	f7f0 fb92 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8012f48:	4631      	mov	r1, r6
 8012f4a:	4620      	mov	r0, r4
 8012f4c:	f7ff fc50 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f50:	4620      	mov	r0, r4
 8012f52:	4641      	mov	r1, r8
 8012f54:	f7ff fc4c 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012f58:	4620      	mov	r0, r4
 8012f5a:	b003      	add	sp, #12
 8012f5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f60:	0802f504 	.word	0x0802f504
 8012f64:	08031ab0 	.word	0x08031ab0

08012f68 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8012f68:	b570      	push	{r4, r5, r6, lr}
 8012f6a:	4604      	mov	r4, r0
 8012f6c:	f7ff fb8e 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 8012f70:	4b1a      	ldr	r3, [pc, #104]	; (8012fdc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8012f72:	6023      	str	r3, [r4, #0]
 8012f74:	2304      	movs	r3, #4
 8012f76:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8012f7a:	2350      	movs	r3, #80	; 0x50
 8012f7c:	2500      	movs	r5, #0
 8012f7e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8012f80:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8012f84:	231e      	movs	r3, #30
 8012f86:	62a5      	str	r5, [r4, #40]	; 0x28
 8012f88:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8012f8c:	8625      	strh	r5, [r4, #48]	; 0x30
 8012f8e:	8665      	strh	r5, [r4, #50]	; 0x32
 8012f90:	86a5      	strh	r5, [r4, #52]	; 0x34
 8012f92:	86e3      	strh	r3, [r4, #54]	; 0x36
 8012f94:	4630      	mov	r0, r6
 8012f96:	f7ff fb79 	bl	801268c <_ZN8touchgfx8DrawableC1Ev>
 8012f9a:	4b11      	ldr	r3, [pc, #68]	; (8012fe0 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8012f9c:	6625      	str	r5, [r4, #96]	; 0x60
 8012f9e:	63a3      	str	r3, [r4, #56]	; 0x38
 8012fa0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8012fa4:	2302      	movs	r3, #2
 8012fa6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8012faa:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8012fae:	4628      	mov	r0, r5
 8012fb0:	f7ff ff9c 	bl	8012eec <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8012fb4:	f005 fcf4 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8012fb8:	4621      	mov	r1, r4
 8012fba:	3004      	adds	r0, #4
 8012fbc:	f005 fde6 	bl	8018b8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8012fc0:	2301      	movs	r3, #1
 8012fc2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8012fc6:	4631      	mov	r1, r6
 8012fc8:	4620      	mov	r0, r4
 8012fca:	f7ff fc11 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fce:	4620      	mov	r0, r4
 8012fd0:	4629      	mov	r1, r5
 8012fd2:	f7ff fc0d 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012fd6:	4620      	mov	r0, r4
 8012fd8:	bd70      	pop	{r4, r5, r6, pc}
 8012fda:	bf00      	nop
 8012fdc:	080315f0 	.word	0x080315f0
 8012fe0:	080316b4 	.word	0x080316b4

08012fe4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8012fe4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012fe6:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8012fea:	428b      	cmp	r3, r1
 8012fec:	4604      	mov	r4, r0
 8012fee:	460d      	mov	r5, r1
 8012ff0:	d915      	bls.n	801301e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8012ff2:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8012ff6:	428b      	cmp	r3, r1
 8012ff8:	d011      	beq.n	801301e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8012ffa:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8012ffe:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013002:	a802      	add	r0, sp, #8
 8013004:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8013008:	f009 f91a 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801300c:	fb15 f100 	smulbb	r1, r5, r0
 8013010:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8013014:	b209      	sxth	r1, r1
 8013016:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801301a:	f7f0 f8b2 	bl	8003182 <_ZN8touchgfx8Drawable6moveToEss>
 801301e:	b003      	add	sp, #12
 8013020:	bd30      	pop	{r4, r5, pc}

08013022 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8013022:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013024:	4604      	mov	r4, r0
 8013026:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801302a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801302e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8013032:	4293      	cmp	r3, r2
 8013034:	460d      	mov	r5, r1
 8013036:	d01e      	beq.n	8013076 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8013038:	a802      	add	r0, sp, #8
 801303a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801303e:	f009 f8ff 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013042:	6823      	ldr	r3, [r4, #0]
 8013044:	fb15 f000 	smulbb	r0, r5, r0
 8013048:	86a0      	strh	r0, [r4, #52]	; 0x34
 801304a:	695b      	ldr	r3, [r3, #20]
 801304c:	4620      	mov	r0, r4
 801304e:	4798      	blx	r3
 8013050:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8013054:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8013058:	4620      	mov	r0, r4
 801305a:	f7ff fb2f 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801305e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8013062:	42a9      	cmp	r1, r5
 8013064:	4620      	mov	r0, r4
 8013066:	bf28      	it	cs
 8013068:	4629      	movcs	r1, r5
 801306a:	f7ff ffbb 	bl	8012fe4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801306e:	6823      	ldr	r3, [r4, #0]
 8013070:	4620      	mov	r0, r4
 8013072:	695b      	ldr	r3, [r3, #20]
 8013074:	4798      	blx	r3
 8013076:	b003      	add	sp, #12
 8013078:	bd30      	pop	{r4, r5, pc}

0801307a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801307a:	b538      	push	{r3, r4, r5, lr}
 801307c:	4604      	mov	r4, r0
 801307e:	460d      	mov	r5, r1
 8013080:	305c      	adds	r0, #92	; 0x5c
 8013082:	4611      	mov	r1, r2
 8013084:	f002 ff8d 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013088:	4629      	mov	r1, r5
 801308a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801308e:	f002 fa53 	bl	8015538 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8013092:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8013096:	b121      	cbz	r1, 80130a2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8013098:	4620      	mov	r0, r4
 801309a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801309e:	f7ff bfc0 	b.w	8013022 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80130a2:	bd38      	pop	{r3, r4, r5, pc}

080130a4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 80130a4:	3068      	adds	r0, #104	; 0x68
 80130a6:	f7ff bfe8 	b.w	801307a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

080130aa <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 80130aa:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80130ae:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80130b2:	3101      	adds	r1, #1
 80130b4:	fb91 f3f2 	sdiv	r3, r1, r2
 80130b8:	fb02 1113 	mls	r1, r2, r3, r1
 80130bc:	b2c9      	uxtb	r1, r1
 80130be:	f7ff bf91 	b.w	8012fe4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080130c2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80130c2:	b510      	push	{r4, lr}
 80130c4:	4604      	mov	r4, r0
 80130c6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80130ca:	280a      	cmp	r0, #10
 80130cc:	d813      	bhi.n	80130f6 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80130ce:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130d0:	8922      	ldrh	r2, [r4, #8]
 80130d2:	441a      	add	r2, r3
 80130d4:	b212      	sxth	r2, r2
 80130d6:	230a      	movs	r3, #10
 80130d8:	2100      	movs	r1, #0
 80130da:	f007 fad1 	bl	801a680 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80130de:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80130e0:	1a18      	subs	r0, r3, r0
 80130e2:	8620      	strh	r0, [r4, #48]	; 0x30
 80130e4:	4620      	mov	r0, r4
 80130e6:	f7ff fe90 	bl	8012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80130ea:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80130ee:	3301      	adds	r3, #1
 80130f0:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80130f4:	bd10      	pop	{r4, pc}
 80130f6:	2304      	movs	r3, #4
 80130f8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 80130fc:	2300      	movs	r3, #0
 80130fe:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013102:	8623      	strh	r3, [r4, #48]	; 0x30
 8013104:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013108:	f7ff ffcf 	bl	80130aa <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801310c:	e7ea      	b.n	80130e4 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801310e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801310e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8013112:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8013116:	4411      	add	r1, r2
 8013118:	3901      	subs	r1, #1
 801311a:	fb91 f3f2 	sdiv	r3, r1, r2
 801311e:	fb02 1113 	mls	r1, r2, r3, r1
 8013122:	b2c9      	uxtb	r1, r1
 8013124:	f7ff bf5e 	b.w	8012fe4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08013128 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8013128:	b510      	push	{r4, lr}
 801312a:	4604      	mov	r4, r0
 801312c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8013130:	280a      	cmp	r0, #10
 8013132:	d813      	bhi.n	801315c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8013134:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013136:	8922      	ldrh	r2, [r4, #8]
 8013138:	1ad2      	subs	r2, r2, r3
 801313a:	b212      	sxth	r2, r2
 801313c:	230a      	movs	r3, #10
 801313e:	2100      	movs	r1, #0
 8013140:	f007 fa9e 	bl	801a680 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8013144:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8013146:	4418      	add	r0, r3
 8013148:	8620      	strh	r0, [r4, #48]	; 0x30
 801314a:	4620      	mov	r0, r4
 801314c:	f7ff fe5d 	bl	8012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8013150:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8013154:	3301      	adds	r3, #1
 8013156:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801315a:	bd10      	pop	{r4, pc}
 801315c:	2304      	movs	r3, #4
 801315e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8013162:	2300      	movs	r3, #0
 8013164:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8013168:	8623      	strh	r3, [r4, #48]	; 0x30
 801316a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801316e:	f7ff ffce 	bl	801310e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8013172:	e7ea      	b.n	801314a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08013174 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8013174:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013178:	b90b      	cbnz	r3, 801317e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801317a:	f7ff be73 	b.w	8012e64 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801317e:	2b01      	cmp	r3, #1
 8013180:	d101      	bne.n	8013186 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8013182:	f7ff be91 	b.w	8012ea8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8013186:	2b02      	cmp	r3, #2
 8013188:	d101      	bne.n	801318e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801318a:	f7ff bf9a 	b.w	80130c2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801318e:	2b03      	cmp	r3, #3
 8013190:	d101      	bne.n	8013196 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8013192:	f7ff bfc9 	b.w	8013128 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8013196:	4770      	bx	lr

08013198 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8013198:	b510      	push	{r4, lr}
 801319a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801319e:	428b      	cmp	r3, r1
 80131a0:	4604      	mov	r4, r0
 80131a2:	d907      	bls.n	80131b4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80131a4:	3068      	adds	r0, #104	; 0x68
 80131a6:	f7ff ff1d 	bl	8012fe4 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80131aa:	4620      	mov	r0, r4
 80131ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131b0:	f7ff be2b 	b.w	8012e0a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80131b4:	bd10      	pop	{r4, pc}

080131b6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80131b6:	b538      	push	{r3, r4, r5, lr}
 80131b8:	4604      	mov	r4, r0
 80131ba:	3038      	adds	r0, #56	; 0x38
 80131bc:	460d      	mov	r5, r1
 80131be:	f000 f963 	bl	8013488 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80131c2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80131c6:	3101      	adds	r1, #1
 80131c8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80131cc:	b2c9      	uxtb	r1, r1
 80131ce:	f7ff ff28 	bl	8013022 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80131d2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80131d6:	4620      	mov	r0, r4
 80131d8:	f7ff ffde 	bl	8013198 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80131dc:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 80131e0:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 80131e4:	4620      	mov	r0, r4
 80131e6:	f7ff fa69 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80131ea:	bd38      	pop	{r3, r4, r5, pc}

080131ec <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 80131ec:	b538      	push	{r3, r4, r5, lr}
 80131ee:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80131f2:	4604      	mov	r4, r0
 80131f4:	b1e3      	cbz	r3, 8013230 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80131f6:	6e03      	ldr	r3, [r0, #96]	; 0x60
 80131f8:	b1d3      	cbz	r3, 8013230 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 80131fa:	428b      	cmp	r3, r1
 80131fc:	d125      	bne.n	801324a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 80131fe:	4619      	mov	r1, r3
 8013200:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8013204:	f000 f9c0 	bl	8013588 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8013208:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801320c:	3901      	subs	r1, #1
 801320e:	b2c9      	uxtb	r1, r1
 8013210:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8013214:	f7ff ff05 	bl	8013022 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8013218:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801321c:	b94d      	cbnz	r5, 8013232 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801321e:	6823      	ldr	r3, [r4, #0]
 8013220:	4620      	mov	r0, r4
 8013222:	695b      	ldr	r3, [r3, #20]
 8013224:	4798      	blx	r3
 8013226:	462a      	mov	r2, r5
 8013228:	4629      	mov	r1, r5
 801322a:	4620      	mov	r0, r4
 801322c:	f7ff fa46 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013230:	bd38      	pop	{r3, r4, r5, pc}
 8013232:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8013236:	3d01      	subs	r5, #1
 8013238:	42a9      	cmp	r1, r5
 801323a:	bfa8      	it	ge
 801323c:	4629      	movge	r1, r5
 801323e:	4620      	mov	r0, r4
 8013240:	b2c9      	uxtb	r1, r1
 8013242:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8013246:	f7ff bfa7 	b.w	8013198 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801324a:	699b      	ldr	r3, [r3, #24]
 801324c:	e7d4      	b.n	80131f8 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801324e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801324e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013252:	4770      	bx	lr

08013254 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8013254:	b538      	push	{r3, r4, r5, lr}
 8013256:	7882      	ldrb	r2, [r0, #2]
 8013258:	6843      	ldr	r3, [r0, #4]
 801325a:	4604      	mov	r4, r0
 801325c:	460d      	mov	r5, r1
 801325e:	b98a      	cbnz	r2, 8013284 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8013260:	4299      	cmp	r1, r3
 8013262:	d101      	bne.n	8013268 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8013264:	2301      	movs	r3, #1
 8013266:	7083      	strb	r3, [r0, #2]
 8013268:	6863      	ldr	r3, [r4, #4]
 801326a:	42ab      	cmp	r3, r5
 801326c:	d009      	beq.n	8013282 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801326e:	7a23      	ldrb	r3, [r4, #8]
 8013270:	2b01      	cmp	r3, #1
 8013272:	d11b      	bne.n	80132ac <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8013274:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013278:	f9b4 2000 	ldrsh.w	r2, [r4]
 801327c:	429a      	cmp	r2, r3
 801327e:	bfb8      	it	lt
 8013280:	8023      	strhlt	r3, [r4, #0]
 8013282:	bd38      	pop	{r3, r4, r5, pc}
 8013284:	7a02      	ldrb	r2, [r0, #8]
 8013286:	2a01      	cmp	r2, #1
 8013288:	d108      	bne.n	801329c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801328a:	895b      	ldrh	r3, [r3, #10]
 801328c:	88c9      	ldrh	r1, [r1, #6]
 801328e:	1ac9      	subs	r1, r1, r3
 8013290:	682b      	ldr	r3, [r5, #0]
 8013292:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013294:	b209      	sxth	r1, r1
 8013296:	4628      	mov	r0, r5
 8013298:	4798      	blx	r3
 801329a:	e7e5      	b.n	8013268 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801329c:	2a02      	cmp	r2, #2
 801329e:	d1e3      	bne.n	8013268 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80132a0:	891b      	ldrh	r3, [r3, #8]
 80132a2:	8889      	ldrh	r1, [r1, #4]
 80132a4:	1ac9      	subs	r1, r1, r3
 80132a6:	682b      	ldr	r3, [r5, #0]
 80132a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80132aa:	e7f3      	b.n	8013294 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80132ac:	2b02      	cmp	r3, #2
 80132ae:	d1e8      	bne.n	8013282 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80132b0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80132b4:	e7e0      	b.n	8013278 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080132b6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80132b6:	4770      	bx	lr

080132b8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80132b8:	4770      	bx	lr

080132ba <_ZN8touchgfx10ListLayoutD1Ev>:
 80132ba:	4770      	bx	lr

080132bc <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80132bc:	b430      	push	{r4, r5}
 80132be:	68c5      	ldr	r5, [r0, #12]
 80132c0:	6844      	ldr	r4, [r0, #4]
 80132c2:	106a      	asrs	r2, r5, #1
 80132c4:	4603      	mov	r3, r0
 80132c6:	07ed      	lsls	r5, r5, #31
 80132c8:	eb04 0002 	add.w	r0, r4, r2
 80132cc:	689b      	ldr	r3, [r3, #8]
 80132ce:	bf48      	it	mi
 80132d0:	58a2      	ldrmi	r2, [r4, r2]
 80132d2:	bc30      	pop	{r4, r5}
 80132d4:	bf48      	it	mi
 80132d6:	58d3      	ldrmi	r3, [r2, r3]
 80132d8:	4718      	bx	r3

080132da <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80132da:	6843      	ldr	r3, [r0, #4]
 80132dc:	b12b      	cbz	r3, 80132ea <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80132de:	6883      	ldr	r3, [r0, #8]
 80132e0:	b92b      	cbnz	r3, 80132ee <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 80132e2:	68c0      	ldr	r0, [r0, #12]
 80132e4:	f000 0001 	and.w	r0, r0, #1
 80132e8:	4770      	bx	lr
 80132ea:	4618      	mov	r0, r3
 80132ec:	4770      	bx	lr
 80132ee:	2001      	movs	r0, #1
 80132f0:	4770      	bx	lr

080132f2 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 80132f2:	b430      	push	{r4, r5}
 80132f4:	68c5      	ldr	r5, [r0, #12]
 80132f6:	6844      	ldr	r4, [r0, #4]
 80132f8:	106a      	asrs	r2, r5, #1
 80132fa:	4603      	mov	r3, r0
 80132fc:	07ed      	lsls	r5, r5, #31
 80132fe:	eb04 0002 	add.w	r0, r4, r2
 8013302:	689b      	ldr	r3, [r3, #8]
 8013304:	bf48      	it	mi
 8013306:	58a2      	ldrmi	r2, [r4, r2]
 8013308:	bc30      	pop	{r4, r5}
 801330a:	bf48      	it	mi
 801330c:	58d3      	ldrmi	r3, [r2, r3]
 801330e:	4718      	bx	r3

08013310 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8013310:	6843      	ldr	r3, [r0, #4]
 8013312:	b12b      	cbz	r3, 8013320 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8013314:	6883      	ldr	r3, [r0, #8]
 8013316:	b92b      	cbnz	r3, 8013324 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8013318:	68c0      	ldr	r0, [r0, #12]
 801331a:	f000 0001 	and.w	r0, r0, #1
 801331e:	4770      	bx	lr
 8013320:	4618      	mov	r0, r3
 8013322:	4770      	bx	lr
 8013324:	2001      	movs	r0, #1
 8013326:	4770      	bx	lr

08013328 <_ZN8touchgfx10ListLayoutD0Ev>:
 8013328:	b510      	push	{r4, lr}
 801332a:	2130      	movs	r1, #48	; 0x30
 801332c:	4604      	mov	r4, r0
 801332e:	f019 fc20 	bl	802cb72 <_ZdlPvj>
 8013332:	4620      	mov	r0, r4
 8013334:	bd10      	pop	{r4, pc}

08013336 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8013336:	b510      	push	{r4, lr}
 8013338:	2110      	movs	r1, #16
 801333a:	4604      	mov	r4, r0
 801333c:	f019 fc19 	bl	802cb72 <_ZdlPvj>
 8013340:	4620      	mov	r0, r4
 8013342:	bd10      	pop	{r4, pc}

08013344 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8013344:	b510      	push	{r4, lr}
 8013346:	2110      	movs	r1, #16
 8013348:	4604      	mov	r4, r0
 801334a:	f019 fc12 	bl	802cb72 <_ZdlPvj>
 801334e:	4620      	mov	r0, r4
 8013350:	bd10      	pop	{r4, pc}

08013352 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8013352:	4603      	mov	r3, r0
 8013354:	4608      	mov	r0, r1
 8013356:	789a      	ldrb	r2, [r3, #2]
 8013358:	b992      	cbnz	r2, 8013380 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801335a:	685a      	ldr	r2, [r3, #4]
 801335c:	428a      	cmp	r2, r1
 801335e:	d102      	bne.n	8013366 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8013360:	2201      	movs	r2, #1
 8013362:	709a      	strb	r2, [r3, #2]
 8013364:	4770      	bx	lr
 8013366:	7a1a      	ldrb	r2, [r3, #8]
 8013368:	2a01      	cmp	r2, #1
 801336a:	d104      	bne.n	8013376 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801336c:	88ca      	ldrh	r2, [r1, #6]
 801336e:	8949      	ldrh	r1, [r1, #10]
 8013370:	440a      	add	r2, r1
 8013372:	801a      	strh	r2, [r3, #0]
 8013374:	4770      	bx	lr
 8013376:	2a02      	cmp	r2, #2
 8013378:	d116      	bne.n	80133a8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801337a:	888a      	ldrh	r2, [r1, #4]
 801337c:	8909      	ldrh	r1, [r1, #8]
 801337e:	e7f7      	b.n	8013370 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8013380:	7a1a      	ldrb	r2, [r3, #8]
 8013382:	2a01      	cmp	r2, #1
 8013384:	d107      	bne.n	8013396 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8013386:	685b      	ldr	r3, [r3, #4]
 8013388:	8959      	ldrh	r1, [r3, #10]
 801338a:	88c3      	ldrh	r3, [r0, #6]
 801338c:	4419      	add	r1, r3
 801338e:	6803      	ldr	r3, [r0, #0]
 8013390:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013392:	b209      	sxth	r1, r1
 8013394:	4718      	bx	r3
 8013396:	2a02      	cmp	r2, #2
 8013398:	d106      	bne.n	80133a8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801339a:	685b      	ldr	r3, [r3, #4]
 801339c:	8919      	ldrh	r1, [r3, #8]
 801339e:	8883      	ldrh	r3, [r0, #4]
 80133a0:	4419      	add	r1, r3
 80133a2:	6803      	ldr	r3, [r0, #0]
 80133a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133a6:	e7f4      	b.n	8013392 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80133a8:	4770      	bx	lr

080133aa <_ZN8touchgfx10ListLayout9removeAllEv>:
 80133aa:	2200      	movs	r2, #0
 80133ac:	b510      	push	{r4, lr}
 80133ae:	4611      	mov	r1, r2
 80133b0:	4604      	mov	r4, r0
 80133b2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80133b4:	f7ff f982 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133b8:	4620      	mov	r0, r4
 80133ba:	f7ff fa26 	bl	801280a <_ZN8touchgfx9Container9removeAllEv>
 80133be:	6960      	ldr	r0, [r4, #20]
 80133c0:	b120      	cbz	r0, 80133cc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80133c2:	6803      	ldr	r3, [r0, #0]
 80133c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80133c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80133ca:	4718      	bx	r3
 80133cc:	bd10      	pop	{r4, pc}
	...

080133d0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80133d0:	b530      	push	{r4, r5, lr}
 80133d2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80133d6:	428b      	cmp	r3, r1
 80133d8:	b085      	sub	sp, #20
 80133da:	4604      	mov	r4, r0
 80133dc:	d017      	beq.n	801340e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80133de:	2500      	movs	r5, #0
 80133e0:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 80133e4:	85c5      	strh	r5, [r0, #46]	; 0x2e
 80133e6:	462a      	mov	r2, r5
 80133e8:	4629      	mov	r1, r5
 80133ea:	f7ff f967 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80133ee:	4b09      	ldr	r3, [pc, #36]	; (8013414 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 80133f0:	e9cd 3400 	strd	r3, r4, [sp]
 80133f4:	4b08      	ldr	r3, [pc, #32]	; (8013418 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 80133f6:	e9cd 3502 	strd	r3, r5, [sp, #8]
 80133fa:	6823      	ldr	r3, [r4, #0]
 80133fc:	4620      	mov	r0, r4
 80133fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013400:	4669      	mov	r1, sp
 8013402:	4798      	blx	r3
 8013404:	6960      	ldr	r0, [r4, #20]
 8013406:	b110      	cbz	r0, 801340e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8013408:	6803      	ldr	r3, [r0, #0]
 801340a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801340c:	4798      	blx	r3
 801340e:	b005      	add	sp, #20
 8013410:	bd30      	pop	{r4, r5, pc}
 8013412:	bf00      	nop
 8013414:	08031684 	.word	0x08031684
 8013418:	08013481 	.word	0x08013481

0801341c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801341c:	b538      	push	{r3, r4, r5, lr}
 801341e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013422:	2b01      	cmp	r3, #1
 8013424:	460d      	mov	r5, r1
 8013426:	4604      	mov	r4, r0
 8013428:	4611      	mov	r1, r2
 801342a:	d002      	beq.n	8013432 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801342c:	2b02      	cmp	r3, #2
 801342e:	d015      	beq.n	801345c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8013430:	bd38      	pop	{r3, r4, r5, pc}
 8013432:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013436:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801343a:	429a      	cmp	r2, r3
 801343c:	bfb8      	it	lt
 801343e:	8103      	strhlt	r3, [r0, #8]
 8013440:	896a      	ldrh	r2, [r5, #10]
 8013442:	8943      	ldrh	r3, [r0, #10]
 8013444:	4413      	add	r3, r2
 8013446:	8143      	strh	r3, [r0, #10]
 8013448:	460a      	mov	r2, r1
 801344a:	4628      	mov	r0, r5
 801344c:	2100      	movs	r1, #0
 801344e:	f7f0 f90d 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8013452:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013454:	896a      	ldrh	r2, [r5, #10]
 8013456:	4413      	add	r3, r2
 8013458:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801345a:	e7e9      	b.n	8013430 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801345c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013460:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013464:	429a      	cmp	r2, r3
 8013466:	bfb8      	it	lt
 8013468:	8143      	strhlt	r3, [r0, #10]
 801346a:	892a      	ldrh	r2, [r5, #8]
 801346c:	8903      	ldrh	r3, [r0, #8]
 801346e:	4413      	add	r3, r2
 8013470:	8103      	strh	r3, [r0, #8]
 8013472:	2200      	movs	r2, #0
 8013474:	4628      	mov	r0, r5
 8013476:	f7f0 f8f9 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 801347a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801347c:	892a      	ldrh	r2, [r5, #8]
 801347e:	e7ea      	b.n	8013456 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08013480 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8013480:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8013484:	f7ff bfca 	b.w	801341c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08013488 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8013488:	b570      	push	{r4, r5, r6, lr}
 801348a:	4604      	mov	r4, r0
 801348c:	460d      	mov	r5, r1
 801348e:	f7ff fff7 	bl	8013480 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8013492:	4620      	mov	r0, r4
 8013494:	4629      	mov	r1, r5
 8013496:	f7ff f9ab 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801349a:	6960      	ldr	r0, [r4, #20]
 801349c:	b120      	cbz	r0, 80134a8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801349e:	6803      	ldr	r3, [r0, #0]
 80134a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80134a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80134a6:	4718      	bx	r3
 80134a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080134ac <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80134ac:	b530      	push	{r4, r5, lr}
 80134ae:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80134b0:	b089      	sub	sp, #36	; 0x24
 80134b2:	4604      	mov	r4, r0
 80134b4:	4615      	mov	r5, r2
 80134b6:	b92b      	cbnz	r3, 80134c4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80134b8:	6803      	ldr	r3, [r0, #0]
 80134ba:	4611      	mov	r1, r2
 80134bc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80134be:	4798      	blx	r3
 80134c0:	b009      	add	sp, #36	; 0x24
 80134c2:	bd30      	pop	{r4, r5, pc}
 80134c4:	f7ff f9ec 	bl	80128a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80134c8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80134cc:	f88d 200c 	strb.w	r2, [sp, #12]
 80134d0:	4a0f      	ldr	r2, [pc, #60]	; (8013510 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80134d2:	9204      	str	r2, [sp, #16]
 80134d4:	aa01      	add	r2, sp, #4
 80134d6:	9205      	str	r2, [sp, #20]
 80134d8:	4a0e      	ldr	r2, [pc, #56]	; (8013514 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80134da:	9502      	str	r5, [sp, #8]
 80134dc:	2300      	movs	r3, #0
 80134de:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80134e2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80134e6:	f88d 3006 	strb.w	r3, [sp, #6]
 80134ea:	6823      	ldr	r3, [r4, #0]
 80134ec:	a904      	add	r1, sp, #16
 80134ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80134f0:	4620      	mov	r0, r4
 80134f2:	4798      	blx	r3
 80134f4:	4620      	mov	r0, r4
 80134f6:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80134fa:	4629      	mov	r1, r5
 80134fc:	f7ff ff8e 	bl	801341c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8013500:	6960      	ldr	r0, [r4, #20]
 8013502:	2800      	cmp	r0, #0
 8013504:	d0dc      	beq.n	80134c0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8013506:	6803      	ldr	r3, [r0, #0]
 8013508:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801350a:	4798      	blx	r3
 801350c:	e7d8      	b.n	80134c0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801350e:	bf00      	nop
 8013510:	0803169c 	.word	0x0803169c
 8013514:	08013353 	.word	0x08013353

08013518 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8013518:	b538      	push	{r3, r4, r5, lr}
 801351a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801351e:	2b01      	cmp	r3, #1
 8013520:	4604      	mov	r4, r0
 8013522:	460d      	mov	r5, r1
 8013524:	d002      	beq.n	801352c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8013526:	2b02      	cmp	r3, #2
 8013528:	d018      	beq.n	801355c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801352a:	bd38      	pop	{r3, r4, r5, pc}
 801352c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013530:	4293      	cmp	r3, r2
 8013532:	bfc8      	it	gt
 8013534:	8102      	strhgt	r2, [r0, #8]
 8013536:	894a      	ldrh	r2, [r1, #10]
 8013538:	8943      	ldrh	r3, [r0, #10]
 801353a:	1a9b      	subs	r3, r3, r2
 801353c:	8143      	strh	r3, [r0, #10]
 801353e:	680b      	ldr	r3, [r1, #0]
 8013540:	4628      	mov	r0, r5
 8013542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013544:	2100      	movs	r1, #0
 8013546:	4798      	blx	r3
 8013548:	682b      	ldr	r3, [r5, #0]
 801354a:	2100      	movs	r1, #0
 801354c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801354e:	4628      	mov	r0, r5
 8013550:	4798      	blx	r3
 8013552:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013554:	896a      	ldrh	r2, [r5, #10]
 8013556:	1a9b      	subs	r3, r3, r2
 8013558:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801355a:	e7e6      	b.n	801352a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801355c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013560:	4293      	cmp	r3, r2
 8013562:	bfc8      	it	gt
 8013564:	8142      	strhgt	r2, [r0, #10]
 8013566:	890a      	ldrh	r2, [r1, #8]
 8013568:	8903      	ldrh	r3, [r0, #8]
 801356a:	1a9b      	subs	r3, r3, r2
 801356c:	8103      	strh	r3, [r0, #8]
 801356e:	680b      	ldr	r3, [r1, #0]
 8013570:	4628      	mov	r0, r5
 8013572:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013574:	2100      	movs	r1, #0
 8013576:	4798      	blx	r3
 8013578:	682b      	ldr	r3, [r5, #0]
 801357a:	2100      	movs	r1, #0
 801357c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801357e:	4628      	mov	r0, r5
 8013580:	4798      	blx	r3
 8013582:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8013584:	892a      	ldrh	r2, [r5, #8]
 8013586:	e7e6      	b.n	8013556 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08013588 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8013588:	b530      	push	{r4, r5, lr}
 801358a:	b089      	sub	sp, #36	; 0x24
 801358c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8013590:	f88d 200c 	strb.w	r2, [sp, #12]
 8013594:	4a13      	ldr	r2, [pc, #76]	; (80135e4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8013596:	9204      	str	r2, [sp, #16]
 8013598:	aa01      	add	r2, sp, #4
 801359a:	9205      	str	r2, [sp, #20]
 801359c:	4a12      	ldr	r2, [pc, #72]	; (80135e8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 801359e:	9102      	str	r1, [sp, #8]
 80135a0:	2300      	movs	r3, #0
 80135a2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80135a6:	f88d 3006 	strb.w	r3, [sp, #6]
 80135aa:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80135ae:	6803      	ldr	r3, [r0, #0]
 80135b0:	460d      	mov	r5, r1
 80135b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80135b4:	a904      	add	r1, sp, #16
 80135b6:	4604      	mov	r4, r0
 80135b8:	4798      	blx	r3
 80135ba:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80135be:	b14b      	cbz	r3, 80135d4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80135c0:	4629      	mov	r1, r5
 80135c2:	4620      	mov	r0, r4
 80135c4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80135c8:	f7ff ffa6 	bl	8013518 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80135cc:	4629      	mov	r1, r5
 80135ce:	4620      	mov	r0, r4
 80135d0:	f7ff f94f 	bl	8012872 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80135d4:	6960      	ldr	r0, [r4, #20]
 80135d6:	b110      	cbz	r0, 80135de <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80135d8:	6803      	ldr	r3, [r0, #0]
 80135da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80135dc:	4798      	blx	r3
 80135de:	b009      	add	sp, #36	; 0x24
 80135e0:	bd30      	pop	{r4, r5, pc}
 80135e2:	bf00      	nop
 80135e4:	0803169c 	.word	0x0803169c
 80135e8:	08013255 	.word	0x08013255

080135ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80135ec:	b513      	push	{r0, r1, r4, lr}
 80135ee:	6803      	ldr	r3, [r0, #0]
 80135f0:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80135f4:	2300      	movs	r3, #0
 80135f6:	e9cd 3300 	strd	r3, r3, [sp]
 80135fa:	466b      	mov	r3, sp
 80135fc:	47a0      	blx	r4
 80135fe:	b002      	add	sp, #8
 8013600:	bd10      	pop	{r4, pc}

08013602 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8013602:	2301      	movs	r3, #1
 8013604:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013608:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801360c:	4770      	bx	lr

0801360e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801360e:	2301      	movs	r3, #1
 8013610:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8013614:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8013618:	4770      	bx	lr

0801361a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801361a:	6843      	ldr	r3, [r0, #4]
 801361c:	2201      	movs	r2, #1
 801361e:	725a      	strb	r2, [r3, #9]
 8013620:	6840      	ldr	r0, [r0, #4]
 8013622:	6803      	ldr	r3, [r0, #0]
 8013624:	691b      	ldr	r3, [r3, #16]
 8013626:	4718      	bx	r3

08013628 <_ZN8touchgfx3HAL8flushDMAEv>:
 8013628:	6840      	ldr	r0, [r0, #4]
 801362a:	6803      	ldr	r3, [r0, #0]
 801362c:	689b      	ldr	r3, [r3, #8]
 801362e:	4718      	bx	r3

08013630 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8013630:	b530      	push	{r4, r5, lr}
 8013632:	b08b      	sub	sp, #44	; 0x2c
 8013634:	6804      	ldr	r4, [r0, #0]
 8013636:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801363a:	9509      	str	r5, [sp, #36]	; 0x24
 801363c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8013640:	9508      	str	r5, [sp, #32]
 8013642:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8013646:	9507      	str	r5, [sp, #28]
 8013648:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801364c:	9506      	str	r5, [sp, #24]
 801364e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8013652:	9505      	str	r5, [sp, #20]
 8013654:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8013658:	9504      	str	r5, [sp, #16]
 801365a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801365e:	9503      	str	r5, [sp, #12]
 8013660:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8013664:	9502      	str	r5, [sp, #8]
 8013666:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801366a:	e9cd 3500 	strd	r3, r5, [sp]
 801366e:	4613      	mov	r3, r2
 8013670:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8013672:	2200      	movs	r2, #0
 8013674:	47a0      	blx	r4
 8013676:	b00b      	add	sp, #44	; 0x2c
 8013678:	bd30      	pop	{r4, r5, pc}
	...

0801367c <_ZN8touchgfx3HAL10beginFrameEv>:
 801367c:	4b04      	ldr	r3, [pc, #16]	; (8013690 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801367e:	781b      	ldrb	r3, [r3, #0]
 8013680:	b123      	cbz	r3, 801368c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8013682:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8013686:	f080 0001 	eor.w	r0, r0, #1
 801368a:	4770      	bx	lr
 801368c:	2001      	movs	r0, #1
 801368e:	4770      	bx	lr
 8013690:	2001383a 	.word	0x2001383a

08013694 <_ZN8touchgfx3HAL8endFrameEv>:
 8013694:	b510      	push	{r4, lr}
 8013696:	4604      	mov	r4, r0
 8013698:	6840      	ldr	r0, [r0, #4]
 801369a:	6803      	ldr	r3, [r0, #0]
 801369c:	689b      	ldr	r3, [r3, #8]
 801369e:	4798      	blx	r3
 80136a0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80136a4:	b113      	cbz	r3, 80136ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80136a6:	2301      	movs	r3, #1
 80136a8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80136ac:	bd10      	pop	{r4, pc}

080136ae <_ZN8touchgfx3HAL10initializeEv>:
 80136ae:	b510      	push	{r4, lr}
 80136b0:	4604      	mov	r4, r0
 80136b2:	f7ef fb43 	bl	8002d3c <_ZN8touchgfx10OSWrappers10initializeEv>
 80136b6:	f7ef fa4f 	bl	8002b58 <_ZN8touchgfx4GPIO4initEv>
 80136ba:	6860      	ldr	r0, [r4, #4]
 80136bc:	6803      	ldr	r3, [r0, #0]
 80136be:	68db      	ldr	r3, [r3, #12]
 80136c0:	4798      	blx	r3
 80136c2:	68e0      	ldr	r0, [r4, #12]
 80136c4:	6803      	ldr	r3, [r0, #0]
 80136c6:	689b      	ldr	r3, [r3, #8]
 80136c8:	4798      	blx	r3
 80136ca:	6823      	ldr	r3, [r4, #0]
 80136cc:	4620      	mov	r0, r4
 80136ce:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80136d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136d4:	4718      	bx	r3
	...

080136d8 <_ZN8touchgfx3HAL4tickEv>:
 80136d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80136da:	6803      	ldr	r3, [r0, #0]
 80136dc:	4d5b      	ldr	r5, [pc, #364]	; (801384c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80136de:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80136e2:	4604      	mov	r4, r0
 80136e4:	4798      	blx	r3
 80136e6:	2800      	cmp	r0, #0
 80136e8:	f000 8095 	beq.w	8013816 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80136ec:	2001      	movs	r0, #1
 80136ee:	f7ef f9e5 	bl	8002abc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80136f2:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 80136f6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80136fa:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 80136fe:	2600      	movs	r6, #0
 8013700:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8013704:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8013708:	b133      	cbz	r3, 8013718 <_ZN8touchgfx3HAL4tickEv+0x40>
 801370a:	6823      	ldr	r3, [r4, #0]
 801370c:	4620      	mov	r0, r4
 801370e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8013712:	4798      	blx	r3
 8013714:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8013718:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801371c:	6862      	ldr	r2, [r4, #4]
 801371e:	f083 0301 	eor.w	r3, r3, #1
 8013722:	7253      	strb	r3, [r2, #9]
 8013724:	2601      	movs	r6, #1
 8013726:	702e      	strb	r6, [r5, #0]
 8013728:	f005 f93a 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 801372c:	6803      	ldr	r3, [r0, #0]
 801372e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013730:	4798      	blx	r3
 8013732:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013736:	b90b      	cbnz	r3, 801373c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013738:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801373c:	f005 f930 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8013740:	6803      	ldr	r3, [r0, #0]
 8013742:	695b      	ldr	r3, [r3, #20]
 8013744:	4798      	blx	r3
 8013746:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8013748:	6803      	ldr	r3, [r0, #0]
 801374a:	691b      	ldr	r3, [r3, #16]
 801374c:	4798      	blx	r3
 801374e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8013752:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8013756:	3b01      	subs	r3, #1
 8013758:	b2db      	uxtb	r3, r3
 801375a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801375e:	b10a      	cbz	r2, 8013764 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8013760:	2b00      	cmp	r3, #0
 8013762:	d1eb      	bne.n	801373c <_ZN8touchgfx3HAL4tickEv+0x64>
 8013764:	4a3a      	ldr	r2, [pc, #232]	; (8013850 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8013766:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801376a:	7813      	ldrb	r3, [r2, #0]
 801376c:	3301      	adds	r3, #1
 801376e:	b25b      	sxtb	r3, r3
 8013770:	4299      	cmp	r1, r3
 8013772:	7013      	strb	r3, [r2, #0]
 8013774:	dc10      	bgt.n	8013798 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013776:	68e0      	ldr	r0, [r4, #12]
 8013778:	2300      	movs	r3, #0
 801377a:	7013      	strb	r3, [r2, #0]
 801377c:	6803      	ldr	r3, [r0, #0]
 801377e:	aa03      	add	r2, sp, #12
 8013780:	68db      	ldr	r3, [r3, #12]
 8013782:	a902      	add	r1, sp, #8
 8013784:	4798      	blx	r3
 8013786:	6823      	ldr	r3, [r4, #0]
 8013788:	2800      	cmp	r0, #0
 801378a:	d050      	beq.n	801382e <_ZN8touchgfx3HAL4tickEv+0x156>
 801378c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8013790:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8013794:	4620      	mov	r0, r4
 8013796:	4798      	blx	r3
 8013798:	6960      	ldr	r0, [r4, #20]
 801379a:	2300      	movs	r3, #0
 801379c:	f88d 3007 	strb.w	r3, [sp, #7]
 80137a0:	b158      	cbz	r0, 80137ba <_ZN8touchgfx3HAL4tickEv+0xe2>
 80137a2:	6803      	ldr	r3, [r0, #0]
 80137a4:	f10d 0107 	add.w	r1, sp, #7
 80137a8:	68db      	ldr	r3, [r3, #12]
 80137aa:	4798      	blx	r3
 80137ac:	b128      	cbz	r0, 80137ba <_ZN8touchgfx3HAL4tickEv+0xe2>
 80137ae:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80137b0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80137b4:	6803      	ldr	r3, [r0, #0]
 80137b6:	68db      	ldr	r3, [r3, #12]
 80137b8:	4798      	blx	r3
 80137ba:	f104 001c 	add.w	r0, r4, #28
 80137be:	f016 f8c3 	bl	8029948 <_ZN8touchgfx8Gestures4tickEv>
 80137c2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80137c6:	b30b      	cbz	r3, 801380c <_ZN8touchgfx3HAL4tickEv+0x134>
 80137c8:	6920      	ldr	r0, [r4, #16]
 80137ca:	6803      	ldr	r3, [r0, #0]
 80137cc:	691b      	ldr	r3, [r3, #16]
 80137ce:	4798      	blx	r3
 80137d0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137d2:	4606      	mov	r6, r0
 80137d4:	b903      	cbnz	r3, 80137d8 <_ZN8touchgfx3HAL4tickEv+0x100>
 80137d6:	6760      	str	r0, [r4, #116]	; 0x74
 80137d8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137da:	4a1e      	ldr	r2, [pc, #120]	; (8013854 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80137dc:	1af3      	subs	r3, r6, r3
 80137de:	4293      	cmp	r3, r2
 80137e0:	d914      	bls.n	801380c <_ZN8touchgfx3HAL4tickEv+0x134>
 80137e2:	6920      	ldr	r0, [r4, #16]
 80137e4:	6803      	ldr	r3, [r0, #0]
 80137e6:	699b      	ldr	r3, [r3, #24]
 80137e8:	4798      	blx	r3
 80137ea:	6f63      	ldr	r3, [r4, #116]	; 0x74
 80137ec:	2264      	movs	r2, #100	; 0x64
 80137ee:	1af3      	subs	r3, r6, r3
 80137f0:	fbb3 f3f2 	udiv	r3, r3, r2
 80137f4:	fbb0 f0f3 	udiv	r0, r0, r3
 80137f8:	2800      	cmp	r0, #0
 80137fa:	dc1d      	bgt.n	8013838 <_ZN8touchgfx3HAL4tickEv+0x160>
 80137fc:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8013800:	6920      	ldr	r0, [r4, #16]
 8013802:	6803      	ldr	r3, [r0, #0]
 8013804:	2100      	movs	r1, #0
 8013806:	69db      	ldr	r3, [r3, #28]
 8013808:	4798      	blx	r3
 801380a:	6766      	str	r6, [r4, #116]	; 0x74
 801380c:	f005 f8c8 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8013810:	6803      	ldr	r3, [r0, #0]
 8013812:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013814:	4798      	blx	r3
 8013816:	6823      	ldr	r3, [r4, #0]
 8013818:	4620      	mov	r0, r4
 801381a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801381e:	4798      	blx	r3
 8013820:	2001      	movs	r0, #1
 8013822:	f7ef f963 	bl	8002aec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8013826:	2300      	movs	r3, #0
 8013828:	702b      	strb	r3, [r5, #0]
 801382a:	b004      	add	sp, #16
 801382c:	bd70      	pop	{r4, r5, r6, pc}
 801382e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8013832:	4620      	mov	r0, r4
 8013834:	4798      	blx	r3
 8013836:	e7af      	b.n	8013798 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8013838:	2863      	cmp	r0, #99	; 0x63
 801383a:	bfcb      	itete	gt
 801383c:	2300      	movgt	r3, #0
 801383e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8013842:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8013846:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801384a:	e7d9      	b.n	8013800 <_ZN8touchgfx3HAL4tickEv+0x128>
 801384c:	20013840 	.word	0x20013840
 8013850:	20013841 	.word	0x20013841
 8013854:	05f5e100 	.word	0x05f5e100

08013858 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8013858:	b510      	push	{r4, lr}
 801385a:	4604      	mov	r4, r0
 801385c:	f7ef fa9e 	bl	8002d9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8013860:	6863      	ldr	r3, [r4, #4]
 8013862:	2200      	movs	r2, #0
 8013864:	729a      	strb	r2, [r3, #10]
 8013866:	bd10      	pop	{r4, pc}

08013868 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8013868:	65c1      	str	r1, [r0, #92]	; 0x5c
 801386a:	301c      	adds	r0, #28
 801386c:	f016 b86a 	b.w	8029944 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08013870 <_ZN8touchgfx3HAL5touchEll>:
 8013870:	b530      	push	{r4, r5, lr}
 8013872:	b087      	sub	sp, #28
 8013874:	4604      	mov	r4, r0
 8013876:	a804      	add	r0, sp, #16
 8013878:	e9cd 1204 	strd	r1, r2, [sp, #16]
 801387c:	f004 fe5c 	bl	8018538 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8013880:	9b04      	ldr	r3, [sp, #16]
 8013882:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013886:	a906      	add	r1, sp, #24
 8013888:	9b05      	ldr	r3, [sp, #20]
 801388a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 801388e:	a803      	add	r0, sp, #12
 8013890:	f004 fea4 	bl	80185dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8013894:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8013898:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801389c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80138a0:	f104 001c 	add.w	r0, r4, #28
 80138a4:	b189      	cbz	r1, 80138ca <_ZN8touchgfx3HAL5touchEll+0x5a>
 80138a6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80138aa:	9300      	str	r3, [sp, #0]
 80138ac:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80138b0:	4613      	mov	r3, r2
 80138b2:	462a      	mov	r2, r5
 80138b4:	f016 f856 	bl	8029964 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80138b8:	b128      	cbz	r0, 80138c6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80138ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80138be:	6623      	str	r3, [r4, #96]	; 0x60
 80138c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80138c4:	6663      	str	r3, [r4, #100]	; 0x64
 80138c6:	b007      	add	sp, #28
 80138c8:	bd30      	pop	{r4, r5, pc}
 80138ca:	f016 f88b 	bl	80299e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80138ce:	2301      	movs	r3, #1
 80138d0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80138d4:	e7f1      	b.n	80138ba <_ZN8touchgfx3HAL5touchEll+0x4a>

080138d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80138d6:	b510      	push	{r4, lr}
 80138d8:	2b00      	cmp	r3, #0
 80138da:	d046      	beq.n	801396a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138dc:	ea81 0002 	eor.w	r0, r1, r2
 80138e0:	07c4      	lsls	r4, r0, #31
 80138e2:	d508      	bpl.n	80138f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80138e4:	440b      	add	r3, r1
 80138e6:	3a01      	subs	r2, #1
 80138e8:	428b      	cmp	r3, r1
 80138ea:	d93e      	bls.n	801396a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80138ec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80138f0:	f801 0b01 	strb.w	r0, [r1], #1
 80138f4:	e7f8      	b.n	80138e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80138f6:	07d0      	lsls	r0, r2, #31
 80138f8:	bf42      	ittt	mi
 80138fa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80138fe:	f801 0b01 	strbmi.w	r0, [r1], #1
 8013902:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8013906:	2b01      	cmp	r3, #1
 8013908:	d911      	bls.n	801392e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801390a:	ea81 0402 	eor.w	r4, r1, r2
 801390e:	07a4      	lsls	r4, r4, #30
 8013910:	4610      	mov	r0, r2
 8013912:	d022      	beq.n	801395a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8013914:	f023 0401 	bic.w	r4, r3, #1
 8013918:	440c      	add	r4, r1
 801391a:	428c      	cmp	r4, r1
 801391c:	4602      	mov	r2, r0
 801391e:	d904      	bls.n	801392a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8013920:	8812      	ldrh	r2, [r2, #0]
 8013922:	f821 2b02 	strh.w	r2, [r1], #2
 8013926:	3002      	adds	r0, #2
 8013928:	e7f7      	b.n	801391a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801392a:	f003 0301 	and.w	r3, r3, #1
 801392e:	f023 0003 	bic.w	r0, r3, #3
 8013932:	4408      	add	r0, r1
 8013934:	4288      	cmp	r0, r1
 8013936:	4614      	mov	r4, r2
 8013938:	d904      	bls.n	8013944 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801393a:	6824      	ldr	r4, [r4, #0]
 801393c:	f841 4b04 	str.w	r4, [r1], #4
 8013940:	3204      	adds	r2, #4
 8013942:	e7f7      	b.n	8013934 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8013944:	f003 0303 	and.w	r3, r3, #3
 8013948:	440b      	add	r3, r1
 801394a:	3a01      	subs	r2, #1
 801394c:	428b      	cmp	r3, r1
 801394e:	d90c      	bls.n	801396a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8013950:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8013954:	f801 0b01 	strb.w	r0, [r1], #1
 8013958:	e7f8      	b.n	801394c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801395a:	0790      	lsls	r0, r2, #30
 801395c:	d0e7      	beq.n	801392e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801395e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8013962:	f821 0b02 	strh.w	r0, [r1], #2
 8013966:	3b02      	subs	r3, #2
 8013968:	e7e1      	b.n	801392e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801396a:	2001      	movs	r0, #1
 801396c:	bd10      	pop	{r4, pc}

0801396e <_ZN8touchgfx3HAL7noTouchEv>:
 801396e:	b510      	push	{r4, lr}
 8013970:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8013974:	4604      	mov	r4, r0
 8013976:	b153      	cbz	r3, 801398e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8013978:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 801397c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8013980:	2101      	movs	r1, #1
 8013982:	301c      	adds	r0, #28
 8013984:	f016 f82e 	bl	80299e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8013988:	2300      	movs	r3, #0
 801398a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801398e:	bd10      	pop	{r4, pc}

08013990 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8013990:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013994:	b085      	sub	sp, #20
 8013996:	ad04      	add	r5, sp, #16
 8013998:	4604      	mov	r4, r0
 801399a:	2000      	movs	r0, #0
 801399c:	f845 0d04 	str.w	r0, [r5, #-4]!
 80139a0:	69a0      	ldr	r0, [r4, #24]
 80139a2:	6806      	ldr	r6, [r0, #0]
 80139a4:	9501      	str	r5, [sp, #4]
 80139a6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80139aa:	9500      	str	r5, [sp, #0]
 80139ac:	6835      	ldr	r5, [r6, #0]
 80139ae:	4699      	mov	r9, r3
 80139b0:	460f      	mov	r7, r1
 80139b2:	4690      	mov	r8, r2
 80139b4:	47a8      	blx	r5
 80139b6:	4d10      	ldr	r5, [pc, #64]	; (80139f8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80139b8:	4606      	mov	r6, r0
 80139ba:	f8a5 9000 	strh.w	r9, [r5]
 80139be:	f7f1 fd8b 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 80139c2:	6803      	ldr	r3, [r0, #0]
 80139c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139c6:	4798      	blx	r3
 80139c8:	b128      	cbz	r0, 80139d6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80139ca:	2801      	cmp	r0, #1
 80139cc:	d00b      	beq.n	80139e6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80139ce:	4630      	mov	r0, r6
 80139d0:	b005      	add	sp, #20
 80139d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80139d6:	882b      	ldrh	r3, [r5, #0]
 80139d8:	fb08 7203 	mla	r2, r8, r3, r7
 80139dc:	9b03      	ldr	r3, [sp, #12]
 80139de:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80139e2:	63e3      	str	r3, [r4, #60]	; 0x3c
 80139e4:	e7f3      	b.n	80139ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80139e6:	882a      	ldrh	r2, [r5, #0]
 80139e8:	9b03      	ldr	r3, [sp, #12]
 80139ea:	fb08 7202 	mla	r2, r8, r2, r7
 80139ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80139f2:	1a9a      	subs	r2, r3, r2
 80139f4:	63e2      	str	r2, [r4, #60]	; 0x3c
 80139f6:	e7ea      	b.n	80139ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80139f8:	20013836 	.word	0x20013836

080139fc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80139fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80139fe:	b08b      	sub	sp, #44	; 0x2c
 8013a00:	4617      	mov	r7, r2
 8013a02:	4604      	mov	r4, r0
 8013a04:	460e      	mov	r6, r1
 8013a06:	461d      	mov	r5, r3
 8013a08:	f7f1 fd66 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8013a0c:	6803      	ldr	r3, [r0, #0]
 8013a0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a10:	4798      	blx	r3
 8013a12:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013a16:	9007      	str	r0, [sp, #28]
 8013a18:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013a1c:	4b0d      	ldr	r3, [pc, #52]	; (8013a54 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8013a1e:	6822      	ldr	r2, [r4, #0]
 8013a20:	881b      	ldrh	r3, [r3, #0]
 8013a22:	9306      	str	r3, [sp, #24]
 8013a24:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013a28:	9305      	str	r3, [sp, #20]
 8013a2a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8013a2e:	9304      	str	r3, [sp, #16]
 8013a30:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013a34:	9303      	str	r3, [sp, #12]
 8013a36:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013a3a:	9302      	str	r3, [sp, #8]
 8013a3c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013a40:	e9cd 5300 	strd	r5, r3, [sp]
 8013a44:	4631      	mov	r1, r6
 8013a46:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8013a48:	463b      	mov	r3, r7
 8013a4a:	2200      	movs	r2, #0
 8013a4c:	4620      	mov	r0, r4
 8013a4e:	47a8      	blx	r5
 8013a50:	b00b      	add	sp, #44	; 0x2c
 8013a52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a54:	20013836 	.word	0x20013836

08013a58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8013a58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013a5c:	4698      	mov	r8, r3
 8013a5e:	6803      	ldr	r3, [r0, #0]
 8013a60:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8013a62:	4b15      	ldr	r3, [pc, #84]	; (8013ab8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8013a64:	b08b      	sub	sp, #44	; 0x2c
 8013a66:	4617      	mov	r7, r2
 8013a68:	f8b3 9000 	ldrh.w	r9, [r3]
 8013a6c:	460e      	mov	r6, r1
 8013a6e:	4604      	mov	r4, r0
 8013a70:	f7f1 fd32 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8013a74:	6803      	ldr	r3, [r0, #0]
 8013a76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013a78:	4798      	blx	r3
 8013a7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013a7e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8013a82:	2302      	movs	r3, #2
 8013a84:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8013a88:	2301      	movs	r3, #1
 8013a8a:	9305      	str	r3, [sp, #20]
 8013a8c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8013a90:	9304      	str	r3, [sp, #16]
 8013a92:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013a96:	9303      	str	r3, [sp, #12]
 8013a98:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013a9c:	9302      	str	r3, [sp, #8]
 8013a9e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013aa2:	2200      	movs	r2, #0
 8013aa4:	e9cd 8300 	strd	r8, r3, [sp]
 8013aa8:	4631      	mov	r1, r6
 8013aaa:	463b      	mov	r3, r7
 8013aac:	4620      	mov	r0, r4
 8013aae:	47a8      	blx	r5
 8013ab0:	b00b      	add	sp, #44	; 0x2c
 8013ab2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013ab6:	bf00      	nop
 8013ab8:	20013836 	.word	0x20013836

08013abc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8013abc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ac0:	4698      	mov	r8, r3
 8013ac2:	6803      	ldr	r3, [r0, #0]
 8013ac4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8013ac6:	4b11      	ldr	r3, [pc, #68]	; (8013b0c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8013ac8:	b087      	sub	sp, #28
 8013aca:	f8b3 9000 	ldrh.w	r9, [r3]
 8013ace:	460e      	mov	r6, r1
 8013ad0:	4617      	mov	r7, r2
 8013ad2:	4604      	mov	r4, r0
 8013ad4:	f7f1 fd00 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8013ad8:	6803      	ldr	r3, [r0, #0]
 8013ada:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013adc:	4798      	blx	r3
 8013ade:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8013ae2:	f8cd 900c 	str.w	r9, [sp, #12]
 8013ae6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8013aea:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8013aee:	9302      	str	r3, [sp, #8]
 8013af0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8013af4:	9301      	str	r3, [sp, #4]
 8013af6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013afa:	9300      	str	r3, [sp, #0]
 8013afc:	463a      	mov	r2, r7
 8013afe:	4643      	mov	r3, r8
 8013b00:	4631      	mov	r1, r6
 8013b02:	4620      	mov	r0, r4
 8013b04:	47a8      	blx	r5
 8013b06:	b007      	add	sp, #28
 8013b08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b0c:	20013836 	.word	0x20013836

08013b10 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8013b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b14:	4604      	mov	r4, r0
 8013b16:	b08f      	sub	sp, #60	; 0x3c
 8013b18:	4610      	mov	r0, r2
 8013b1a:	460d      	mov	r5, r1
 8013b1c:	4691      	mov	r9, r2
 8013b1e:	461e      	mov	r6, r3
 8013b20:	f008 fafa 	bl	801c118 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013b24:	2800      	cmp	r0, #0
 8013b26:	f000 809d 	beq.w	8013c64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8013b2a:	6823      	ldr	r3, [r4, #0]
 8013b2c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8013cc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8013b30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013b32:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8013b36:	4f61      	ldr	r7, [pc, #388]	; (8013cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013b38:	4620      	mov	r0, r4
 8013b3a:	4798      	blx	r3
 8013b3c:	6823      	ldr	r3, [r4, #0]
 8013b3e:	4620      	mov	r0, r4
 8013b40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b42:	4798      	blx	r3
 8013b44:	f8bb 3000 	ldrh.w	r3, [fp]
 8013b48:	9301      	str	r3, [sp, #4]
 8013b4a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8013b4e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013b52:	9302      	str	r3, [sp, #8]
 8013b54:	883b      	ldrh	r3, [r7, #0]
 8013b56:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8013b5a:	9303      	str	r3, [sp, #12]
 8013b5c:	4b58      	ldr	r3, [pc, #352]	; (8013cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013b5e:	9305      	str	r3, [sp, #20]
 8013b60:	881a      	ldrh	r2, [r3, #0]
 8013b62:	9204      	str	r2, [sp, #16]
 8013b64:	4640      	mov	r0, r8
 8013b66:	f008 fb6b 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b6a:	8038      	strh	r0, [r7, #0]
 8013b6c:	4640      	mov	r0, r8
 8013b6e:	f008 fb9b 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b72:	9b05      	ldr	r3, [sp, #20]
 8013b74:	b280      	uxth	r0, r0
 8013b76:	8018      	strh	r0, [r3, #0]
 8013b78:	4b52      	ldr	r3, [pc, #328]	; (8013cc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8013b7a:	781b      	ldrb	r3, [r3, #0]
 8013b7c:	2b00      	cmp	r3, #0
 8013b7e:	d174      	bne.n	8013c6a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8013b80:	883b      	ldrh	r3, [r7, #0]
 8013b82:	f8ab 3000 	strh.w	r3, [fp]
 8013b86:	f8aa 0000 	strh.w	r0, [sl]
 8013b8a:	4648      	mov	r0, r9
 8013b8c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8013b90:	f008 fac2 	bl	801c118 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8013b94:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8013b98:	2200      	movs	r2, #0
 8013b9a:	4611      	mov	r1, r2
 8013b9c:	4628      	mov	r0, r5
 8013b9e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8013ba2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8013ba6:	f7ef fd61 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8013baa:	2301      	movs	r3, #1
 8013bac:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8013bb0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8013bb4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8013bb8:	2b00      	cmp	r3, #0
 8013bba:	dd5c      	ble.n	8013c76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013bbc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8013bc0:	2b00      	cmp	r3, #0
 8013bc2:	dd58      	ble.n	8013c76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8013bc4:	462a      	mov	r2, r5
 8013bc6:	ab0a      	add	r3, sp, #40	; 0x28
 8013bc8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013bcc:	6851      	ldr	r1, [r2, #4]
 8013bce:	c303      	stmia	r3!, {r0, r1}
 8013bd0:	4631      	mov	r1, r6
 8013bd2:	a80a      	add	r0, sp, #40	; 0x28
 8013bd4:	f7fe ff92 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8013bd8:	4b38      	ldr	r3, [pc, #224]	; (8013cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013bda:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013bde:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8013be2:	2100      	movs	r1, #0
 8013be4:	aa0a      	add	r2, sp, #40	; 0x28
 8013be6:	4b36      	ldr	r3, [pc, #216]	; (8013cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013be8:	910c      	str	r1, [sp, #48]	; 0x30
 8013bea:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013bee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013bf2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013bf6:	ab08      	add	r3, sp, #32
 8013bf8:	e883 0003 	stmia.w	r3, {r0, r1}
 8013bfc:	4618      	mov	r0, r3
 8013bfe:	a90c      	add	r1, sp, #48	; 0x30
 8013c00:	f7fe ff7c 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8013c04:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8013c06:	2b00      	cmp	r3, #0
 8013c08:	d13c      	bne.n	8013c84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8013c0a:	2000      	movs	r0, #0
 8013c0c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8013c10:	2600      	movs	r6, #0
 8013c12:	682a      	ldr	r2, [r5, #0]
 8013c14:	696b      	ldr	r3, [r5, #20]
 8013c16:	616e      	str	r6, [r5, #20]
 8013c18:	9305      	str	r3, [sp, #20]
 8013c1a:	6892      	ldr	r2, [r2, #8]
 8013c1c:	a908      	add	r1, sp, #32
 8013c1e:	4628      	mov	r0, r5
 8013c20:	4790      	blx	r2
 8013c22:	9b05      	ldr	r3, [sp, #20]
 8013c24:	616b      	str	r3, [r5, #20]
 8013c26:	4652      	mov	r2, sl
 8013c28:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8013c2c:	4649      	mov	r1, r9
 8013c2e:	4628      	mov	r0, r5
 8013c30:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8013c34:	f7ef fd1a 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8013c38:	4b23      	ldr	r3, [pc, #140]	; (8013cc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8013c3a:	9a01      	ldr	r2, [sp, #4]
 8013c3c:	801a      	strh	r2, [r3, #0]
 8013c3e:	4b23      	ldr	r3, [pc, #140]	; (8013ccc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8013c40:	9a02      	ldr	r2, [sp, #8]
 8013c42:	801a      	strh	r2, [r3, #0]
 8013c44:	4b1d      	ldr	r3, [pc, #116]	; (8013cbc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8013c46:	9a03      	ldr	r2, [sp, #12]
 8013c48:	801a      	strh	r2, [r3, #0]
 8013c4a:	4b1d      	ldr	r3, [pc, #116]	; (8013cc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8013c4c:	9a04      	ldr	r2, [sp, #16]
 8013c4e:	801a      	strh	r2, [r3, #0]
 8013c50:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8013c54:	6823      	ldr	r3, [r4, #0]
 8013c56:	4620      	mov	r0, r4
 8013c58:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013c5a:	4798      	blx	r3
 8013c5c:	6823      	ldr	r3, [r4, #0]
 8013c5e:	4620      	mov	r0, r4
 8013c60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c62:	4798      	blx	r3
 8013c64:	b00f      	add	sp, #60	; 0x3c
 8013c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c6a:	883b      	ldrh	r3, [r7, #0]
 8013c6c:	f8ab 0000 	strh.w	r0, [fp]
 8013c70:	f8aa 3000 	strh.w	r3, [sl]
 8013c74:	e789      	b.n	8013b8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8013c76:	462a      	mov	r2, r5
 8013c78:	ab0a      	add	r3, sp, #40	; 0x28
 8013c7a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8013c7e:	6851      	ldr	r1, [r2, #4]
 8013c80:	c303      	stmia	r3!, {r0, r1}
 8013c82:	e7a9      	b.n	8013bd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8013c84:	a807      	add	r0, sp, #28
 8013c86:	f008 fc4b 	bl	801c520 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013c8a:	4606      	mov	r6, r0
 8013c8c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8013c8e:	6803      	ldr	r3, [r0, #0]
 8013c90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c92:	4798      	blx	r3
 8013c94:	4286      	cmp	r6, r0
 8013c96:	d1b8      	bne.n	8013c0a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8013c98:	f7f1 fc1e 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8013c9c:	6803      	ldr	r3, [r0, #0]
 8013c9e:	4606      	mov	r6, r0
 8013ca0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013ca2:	9305      	str	r3, [sp, #20]
 8013ca4:	a807      	add	r0, sp, #28
 8013ca6:	f008 fc3b 	bl	801c520 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013caa:	9b05      	ldr	r3, [sp, #20]
 8013cac:	4601      	mov	r1, r0
 8013cae:	4630      	mov	r0, r6
 8013cb0:	4798      	blx	r3
 8013cb2:	f080 0001 	eor.w	r0, r0, #1
 8013cb6:	b2c0      	uxtb	r0, r0
 8013cb8:	e7a8      	b.n	8013c0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8013cba:	bf00      	nop
 8013cbc:	20013830 	.word	0x20013830
 8013cc0:	20013832 	.word	0x20013832
 8013cc4:	20013834 	.word	0x20013834
 8013cc8:	20013836 	.word	0x20013836
 8013ccc:	20013838 	.word	0x20013838

08013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8013cd0:	b510      	push	{r4, lr}
 8013cd2:	4b07      	ldr	r3, [pc, #28]	; (8013cf0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8013cd4:	781b      	ldrb	r3, [r3, #0]
 8013cd6:	4604      	mov	r4, r0
 8013cd8:	b13b      	cbz	r3, 8013cea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013cda:	6803      	ldr	r3, [r0, #0]
 8013cdc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013cde:	4798      	blx	r3
 8013ce0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013ce2:	4283      	cmp	r3, r0
 8013ce4:	d101      	bne.n	8013cea <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8013ce6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8013ce8:	bd10      	pop	{r4, pc}
 8013cea:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8013cec:	e7fc      	b.n	8013ce8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8013cee:	bf00      	nop
 8013cf0:	2001383a 	.word	0x2001383a

08013cf4 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8013cf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013cf8:	b08a      	sub	sp, #40	; 0x28
 8013cfa:	461d      	mov	r5, r3
 8013cfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013d00:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013d04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013d08:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d0c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013d10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d14:	2400      	movs	r4, #0
 8013d16:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d1a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8013d1e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d22:	4690      	mov	r8, r2
 8013d24:	4607      	mov	r7, r0
 8013d26:	9404      	str	r4, [sp, #16]
 8013d28:	f88d 4020 	strb.w	r4, [sp, #32]
 8013d2c:	f7ff ffd0 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d30:	fb06 8505 	mla	r5, r6, r5, r8
 8013d34:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013d38:	6878      	ldr	r0, [r7, #4]
 8013d3a:	9505      	str	r5, [sp, #20]
 8013d3c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013d40:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013d44:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8013d48:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013d4c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013d50:	6803      	ldr	r3, [r0, #0]
 8013d52:	a901      	add	r1, sp, #4
 8013d54:	685b      	ldr	r3, [r3, #4]
 8013d56:	4798      	blx	r3
 8013d58:	b00a      	add	sp, #40	; 0x28
 8013d5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013d5e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8013d5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d62:	b08b      	sub	sp, #44	; 0x2c
 8013d64:	2400      	movs	r4, #0
 8013d66:	461d      	mov	r5, r3
 8013d68:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013d6c:	4688      	mov	r8, r1
 8013d6e:	4691      	mov	r9, r2
 8013d70:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8013d74:	9404      	str	r4, [sp, #16]
 8013d76:	4607      	mov	r7, r0
 8013d78:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013d7c:	f7ff ffa8 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013d80:	fb06 9505 	mla	r5, r6, r5, r9
 8013d84:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013d88:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013d8c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013d90:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013d94:	6878      	ldr	r0, [r7, #4]
 8013d96:	9505      	str	r5, [sp, #20]
 8013d98:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013d9c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8013da0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8013da4:	f8cd 8010 	str.w	r8, [sp, #16]
 8013da8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8013dac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013db0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8013db4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8013db8:	6803      	ldr	r3, [r0, #0]
 8013dba:	a901      	add	r1, sp, #4
 8013dbc:	685b      	ldr	r3, [r3, #4]
 8013dbe:	4798      	blx	r3
 8013dc0:	b00b      	add	sp, #44	; 0x2c
 8013dc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08013dc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8013dc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013dcc:	b08a      	sub	sp, #40	; 0x28
 8013dce:	4698      	mov	r8, r3
 8013dd0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8013dd4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8013dd8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8013ddc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8013de0:	2300      	movs	r3, #0
 8013de2:	2d0b      	cmp	r5, #11
 8013de4:	4606      	mov	r6, r0
 8013de6:	9304      	str	r3, [sp, #16]
 8013de8:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8013dec:	d138      	bne.n	8013e60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8013dee:	2380      	movs	r3, #128	; 0x80
 8013df0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013df4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013df8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013dfc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013e00:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013e04:	f88d 0020 	strb.w	r0, [sp, #32]
 8013e08:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8013e0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e10:	4630      	mov	r0, r6
 8013e12:	9203      	str	r2, [sp, #12]
 8013e14:	f7ff ff5c 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013e18:	2c0b      	cmp	r4, #11
 8013e1a:	bf98      	it	ls
 8013e1c:	4b1b      	ldrls	r3, [pc, #108]	; (8013e8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8013e1e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013e22:	bf98      	it	ls
 8013e24:	5d19      	ldrbls	r1, [r3, r4]
 8013e26:	f8ad 701e 	strh.w	r7, [sp, #30]
 8013e2a:	bf88      	it	hi
 8013e2c:	2100      	movhi	r1, #0
 8013e2e:	fb02 8307 	mla	r3, r2, r7, r8
 8013e32:	10c9      	asrs	r1, r1, #3
 8013e34:	fb01 0003 	mla	r0, r1, r3, r0
 8013e38:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8013e3c:	9005      	str	r0, [sp, #20]
 8013e3e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013e42:	6870      	ldr	r0, [r6, #4]
 8013e44:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8013e48:	2300      	movs	r3, #0
 8013e4a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013e4e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013e52:	6803      	ldr	r3, [r0, #0]
 8013e54:	a901      	add	r1, sp, #4
 8013e56:	685b      	ldr	r3, [r3, #4]
 8013e58:	4798      	blx	r3
 8013e5a:	b00a      	add	sp, #40	; 0x28
 8013e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e60:	2d02      	cmp	r5, #2
 8013e62:	d109      	bne.n	8013e78 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8013e64:	28ff      	cmp	r0, #255	; 0xff
 8013e66:	d105      	bne.n	8013e74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8013e68:	f1bc 0f00 	cmp.w	ip, #0
 8013e6c:	bf14      	ite	ne
 8013e6e:	2340      	movne	r3, #64	; 0x40
 8013e70:	2320      	moveq	r3, #32
 8013e72:	e7bd      	b.n	8013df0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e74:	2340      	movs	r3, #64	; 0x40
 8013e76:	e7bb      	b.n	8013df0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e78:	28ff      	cmp	r0, #255	; 0xff
 8013e7a:	d105      	bne.n	8013e88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8013e7c:	f1bc 0f00 	cmp.w	ip, #0
 8013e80:	bf14      	ite	ne
 8013e82:	2304      	movne	r3, #4
 8013e84:	2301      	moveq	r3, #1
 8013e86:	e7b3      	b.n	8013df0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e88:	2304      	movs	r3, #4
 8013e8a:	e7b1      	b.n	8013df0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8013e8c:	08031744 	.word	0x08031744

08013e90 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8013e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e94:	b08b      	sub	sp, #44	; 0x2c
 8013e96:	461d      	mov	r5, r3
 8013e98:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8013e9c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8013ea0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8013ea4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013ea8:	bf14      	ite	ne
 8013eaa:	2308      	movne	r3, #8
 8013eac:	2302      	moveq	r3, #2
 8013eae:	2400      	movs	r4, #0
 8013eb0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013eb4:	4688      	mov	r8, r1
 8013eb6:	4693      	mov	fp, r2
 8013eb8:	9404      	str	r4, [sp, #16]
 8013eba:	4607      	mov	r7, r0
 8013ebc:	f7ff ff08 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013ec0:	2e0b      	cmp	r6, #11
 8013ec2:	bf98      	it	ls
 8013ec4:	4b15      	ldrls	r3, [pc, #84]	; (8013f1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8013ec6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8013eca:	bf98      	it	ls
 8013ecc:	5d9c      	ldrbls	r4, [r3, r6]
 8013ece:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8013ed2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013ed6:	fb05 b50a 	mla	r5, r5, sl, fp
 8013eda:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013ede:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013ee2:	10e4      	asrs	r4, r4, #3
 8013ee4:	fb04 0405 	mla	r4, r4, r5, r0
 8013ee8:	2300      	movs	r3, #0
 8013eea:	6878      	ldr	r0, [r7, #4]
 8013eec:	9405      	str	r4, [sp, #20]
 8013eee:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013ef2:	f8ad a01e 	strh.w	sl, [sp, #30]
 8013ef6:	f8cd 8010 	str.w	r8, [sp, #16]
 8013efa:	f88d 9020 	strb.w	r9, [sp, #32]
 8013efe:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8013f02:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8013f06:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8013f0a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8013f0e:	6803      	ldr	r3, [r0, #0]
 8013f10:	a901      	add	r1, sp, #4
 8013f12:	685b      	ldr	r3, [r3, #4]
 8013f14:	4798      	blx	r3
 8013f16:	b00b      	add	sp, #44	; 0x2c
 8013f18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f1c:	08031744 	.word	0x08031744

08013f20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8013f20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f24:	461e      	mov	r6, r3
 8013f26:	4b0a      	ldr	r3, [pc, #40]	; (8013f50 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8013f28:	460f      	mov	r7, r1
 8013f2a:	881d      	ldrh	r5, [r3, #0]
 8013f2c:	4690      	mov	r8, r2
 8013f2e:	f7f1 fad3 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8013f32:	6803      	ldr	r3, [r0, #0]
 8013f34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f36:	4798      	blx	r3
 8013f38:	280b      	cmp	r0, #11
 8013f3a:	bf9a      	itte	ls
 8013f3c:	4b05      	ldrls	r3, [pc, #20]	; (8013f54 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8013f3e:	5c1c      	ldrbls	r4, [r3, r0]
 8013f40:	2400      	movhi	r4, #0
 8013f42:	fb08 7005 	mla	r0, r8, r5, r7
 8013f46:	10e4      	asrs	r4, r4, #3
 8013f48:	fb04 6000 	mla	r0, r4, r0, r6
 8013f4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f50:	20013836 	.word	0x20013836
 8013f54:	08031744 	.word	0x08031744

08013f58 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8013f58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f5a:	b08b      	sub	sp, #44	; 0x2c
 8013f5c:	461f      	mov	r7, r3
 8013f5e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8013f62:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8013f66:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013f6a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013f6e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f72:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013f76:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8013f7a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013f7e:	2500      	movs	r5, #0
 8013f80:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013f84:	f88d 3020 	strb.w	r3, [sp, #32]
 8013f88:	4604      	mov	r4, r0
 8013f8a:	4616      	mov	r6, r2
 8013f8c:	9504      	str	r5, [sp, #16]
 8013f8e:	f7ff fe9f 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013f92:	463a      	mov	r2, r7
 8013f94:	4631      	mov	r1, r6
 8013f96:	4603      	mov	r3, r0
 8013f98:	4620      	mov	r0, r4
 8013f9a:	f7ff ffc1 	bl	8013f20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013f9e:	4b0e      	ldr	r3, [pc, #56]	; (8013fd8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8013fa0:	9005      	str	r0, [sp, #20]
 8013fa2:	881b      	ldrh	r3, [r3, #0]
 8013fa4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fa8:	f7f1 fa96 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8013fac:	6803      	ldr	r3, [r0, #0]
 8013fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013fb0:	4798      	blx	r3
 8013fb2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013fb4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8013fb8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013fbc:	9304      	str	r3, [sp, #16]
 8013fbe:	6860      	ldr	r0, [r4, #4]
 8013fc0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8013fc4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8013fc8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8013fcc:	6803      	ldr	r3, [r0, #0]
 8013fce:	a901      	add	r1, sp, #4
 8013fd0:	685b      	ldr	r3, [r3, #4]
 8013fd2:	4798      	blx	r3
 8013fd4:	b00b      	add	sp, #44	; 0x2c
 8013fd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fd8:	20013836 	.word	0x20013836

08013fdc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8013fdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013fde:	b08d      	sub	sp, #52	; 0x34
 8013fe0:	466b      	mov	r3, sp
 8013fe2:	e883 0006 	stmia.w	r3, {r1, r2}
 8013fe6:	2300      	movs	r3, #0
 8013fe8:	9306      	str	r3, [sp, #24]
 8013fea:	6803      	ldr	r3, [r0, #0]
 8013fec:	f8bd 6000 	ldrh.w	r6, [sp]
 8013ff0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013ff2:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8013ff6:	2501      	movs	r5, #1
 8013ff8:	9503      	str	r5, [sp, #12]
 8013ffa:	4604      	mov	r4, r0
 8013ffc:	4798      	blx	r3
 8013ffe:	463a      	mov	r2, r7
 8014000:	4631      	mov	r1, r6
 8014002:	4603      	mov	r3, r0
 8014004:	4620      	mov	r0, r4
 8014006:	f7ff ff8b 	bl	8013f20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801400a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801400c:	9307      	str	r3, [sp, #28]
 801400e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014012:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014016:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801401a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801401e:	4b0f      	ldr	r3, [pc, #60]	; (801405c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8014020:	9004      	str	r0, [sp, #16]
 8014022:	881b      	ldrh	r3, [r3, #0]
 8014024:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8014028:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801402c:	f7f1 fa54 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8014030:	6803      	ldr	r3, [r0, #0]
 8014032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014034:	4798      	blx	r3
 8014036:	23ff      	movs	r3, #255	; 0xff
 8014038:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801403c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014040:	6860      	ldr	r0, [r4, #4]
 8014042:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8014046:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801404a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801404e:	6803      	ldr	r3, [r0, #0]
 8014050:	a903      	add	r1, sp, #12
 8014052:	685b      	ldr	r3, [r3, #4]
 8014054:	4798      	blx	r3
 8014056:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014058:	b00d      	add	sp, #52	; 0x34
 801405a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801405c:	20013836 	.word	0x20013836

08014060 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8014060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014064:	b08c      	sub	sp, #48	; 0x30
 8014066:	461e      	mov	r6, r3
 8014068:	466d      	mov	r5, sp
 801406a:	2300      	movs	r3, #0
 801406c:	e885 0006 	stmia.w	r5, {r1, r2}
 8014070:	9306      	str	r3, [sp, #24]
 8014072:	6803      	ldr	r3, [r0, #0]
 8014074:	f8bd 7000 	ldrh.w	r7, [sp]
 8014078:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801407a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801407e:	2501      	movs	r5, #1
 8014080:	9503      	str	r5, [sp, #12]
 8014082:	4604      	mov	r4, r0
 8014084:	4798      	blx	r3
 8014086:	4642      	mov	r2, r8
 8014088:	4639      	mov	r1, r7
 801408a:	4603      	mov	r3, r0
 801408c:	4620      	mov	r0, r4
 801408e:	f7ff ff47 	bl	8013f20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014092:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8014096:	f8ad 3020 	strh.w	r3, [sp, #32]
 801409a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801409e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80140a2:	4b11      	ldr	r3, [pc, #68]	; (80140e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80140a4:	9004      	str	r0, [sp, #16]
 80140a6:	881b      	ldrh	r3, [r3, #0]
 80140a8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80140ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80140ae:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80140b2:	9607      	str	r6, [sp, #28]
 80140b4:	f7f1 fa10 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 80140b8:	6803      	ldr	r3, [r0, #0]
 80140ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80140bc:	4798      	blx	r3
 80140be:	23ff      	movs	r3, #255	; 0xff
 80140c0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80140c4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80140c8:	6860      	ldr	r0, [r4, #4]
 80140ca:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80140ce:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80140d2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80140d6:	6803      	ldr	r3, [r0, #0]
 80140d8:	a903      	add	r1, sp, #12
 80140da:	685b      	ldr	r3, [r3, #4]
 80140dc:	4798      	blx	r3
 80140de:	4630      	mov	r0, r6
 80140e0:	b00c      	add	sp, #48	; 0x30
 80140e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140e6:	bf00      	nop
 80140e8:	20013836 	.word	0x20013836

080140ec <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80140ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80140ee:	b085      	sub	sp, #20
 80140f0:	ac02      	add	r4, sp, #8
 80140f2:	e884 0006 	stmia.w	r4, {r1, r2}
 80140f6:	4605      	mov	r5, r0
 80140f8:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80140fc:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8014100:	f7ff fde6 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014104:	463a      	mov	r2, r7
 8014106:	4603      	mov	r3, r0
 8014108:	4631      	mov	r1, r6
 801410a:	4628      	mov	r0, r5
 801410c:	f7ff ff08 	bl	8013f20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8014110:	4a05      	ldr	r2, [pc, #20]	; (8014128 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8014112:	682b      	ldr	r3, [r5, #0]
 8014114:	8812      	ldrh	r2, [r2, #0]
 8014116:	9200      	str	r2, [sp, #0]
 8014118:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801411a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801411e:	4603      	mov	r3, r0
 8014120:	4628      	mov	r0, r5
 8014122:	47b0      	blx	r6
 8014124:	b005      	add	sp, #20
 8014126:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014128:	20013836 	.word	0x20013836

0801412c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801412c:	b570      	push	{r4, r5, r6, lr}
 801412e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8014132:	4604      	mov	r4, r0
 8014134:	b19b      	cbz	r3, 801415e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8014136:	2002      	movs	r0, #2
 8014138:	f7ee fcf0 	bl	8002b1c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801413c:	2300      	movs	r3, #0
 801413e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8014142:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8014146:	6823      	ldr	r3, [r4, #0]
 8014148:	4620      	mov	r0, r4
 801414a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801414e:	f7ff fdbf 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8014152:	462b      	mov	r3, r5
 8014154:	4601      	mov	r1, r0
 8014156:	4620      	mov	r0, r4
 8014158:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801415c:	4718      	bx	r3
 801415e:	bd70      	pop	{r4, r5, r6, pc}

08014160 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8014160:	b538      	push	{r3, r4, r5, lr}
 8014162:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8014166:	428b      	cmp	r3, r1
 8014168:	4604      	mov	r4, r0
 801416a:	460d      	mov	r5, r1
 801416c:	d006      	beq.n	801417c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801416e:	6803      	ldr	r3, [r0, #0]
 8014170:	b929      	cbnz	r1, 801417e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8014172:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8014176:	4798      	blx	r3
 8014178:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801417c:	bd38      	pop	{r3, r4, r5, pc}
 801417e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8014182:	e7f8      	b.n	8014176 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08014184 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8014184:	b510      	push	{r4, lr}
 8014186:	4b0d      	ldr	r3, [pc, #52]	; (80141bc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8014188:	781b      	ldrb	r3, [r3, #0]
 801418a:	4604      	mov	r4, r0
 801418c:	b95b      	cbnz	r3, 80141a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801418e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8014192:	2b02      	cmp	r3, #2
 8014194:	d007      	beq.n	80141a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8014196:	6840      	ldr	r0, [r0, #4]
 8014198:	f000 f92c 	bl	80143f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801419c:	b118      	cbz	r0, 80141a6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801419e:	6862      	ldr	r2, [r4, #4]
 80141a0:	7a53      	ldrb	r3, [r2, #9]
 80141a2:	2b00      	cmp	r3, #0
 80141a4:	d0fc      	beq.n	80141a0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80141a6:	f7ee fdf1 	bl	8002d8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80141aa:	4620      	mov	r0, r4
 80141ac:	2100      	movs	r1, #0
 80141ae:	f7ff ffd7 	bl	8014160 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80141b2:	4620      	mov	r0, r4
 80141b4:	f7ff fd8c 	bl	8013cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80141b8:	bd10      	pop	{r4, pc}
 80141ba:	bf00      	nop
 80141bc:	2001383a 	.word	0x2001383a

080141c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80141c0:	b570      	push	{r4, r5, r6, lr}
 80141c2:	4604      	mov	r4, r0
 80141c4:	6803      	ldr	r3, [r0, #0]
 80141c6:	b919      	cbnz	r1, 80141d0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80141c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80141ce:	4718      	bx	r3
 80141d0:	2200      	movs	r2, #0
 80141d2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80141d6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80141da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80141dc:	4798      	blx	r3
 80141de:	6863      	ldr	r3, [r4, #4]
 80141e0:	2101      	movs	r1, #1
 80141e2:	4605      	mov	r5, r0
 80141e4:	7299      	strb	r1, [r3, #10]
 80141e6:	4620      	mov	r0, r4
 80141e8:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80141ec:	f7ff ffb8 	bl	8014160 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80141f0:	4628      	mov	r0, r5
 80141f2:	bd70      	pop	{r4, r5, r6, pc}

080141f4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80141f4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80141f8:	1a13      	subs	r3, r2, r0
 80141fa:	4258      	negs	r0, r3
 80141fc:	4158      	adcs	r0, r3
 80141fe:	4770      	bx	lr

08014200 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8014200:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8014204:	1a9b      	subs	r3, r3, r2
 8014206:	2b00      	cmp	r3, #0
 8014208:	bfdc      	itt	le
 801420a:	6882      	ldrle	r2, [r0, #8]
 801420c:	189b      	addle	r3, r3, r2
 801420e:	2b01      	cmp	r3, #1
 8014210:	bfcc      	ite	gt
 8014212:	2000      	movgt	r0, #0
 8014214:	2001      	movle	r0, #1
 8014216:	4770      	bx	lr

08014218 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8014218:	6902      	ldr	r2, [r0, #16]
 801421a:	6843      	ldr	r3, [r0, #4]
 801421c:	2024      	movs	r0, #36	; 0x24
 801421e:	fb00 3002 	mla	r0, r0, r2, r3
 8014222:	4770      	bx	lr

08014224 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8014224:	6803      	ldr	r3, [r0, #0]
 8014226:	691b      	ldr	r3, [r3, #16]
 8014228:	4718      	bx	r3

0801422a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801422a:	b570      	push	{r4, r5, r6, lr}
 801422c:	2301      	movs	r3, #1
 801422e:	7203      	strb	r3, [r0, #8]
 8014230:	4604      	mov	r4, r0
 8014232:	6840      	ldr	r0, [r0, #4]
 8014234:	6803      	ldr	r3, [r0, #0]
 8014236:	699b      	ldr	r3, [r3, #24]
 8014238:	4798      	blx	r3
 801423a:	6803      	ldr	r3, [r0, #0]
 801423c:	2b40      	cmp	r3, #64	; 0x40
 801423e:	4605      	mov	r5, r0
 8014240:	d00c      	beq.n	801425c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014242:	d810      	bhi.n	8014266 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8014244:	2b04      	cmp	r3, #4
 8014246:	d01d      	beq.n	8014284 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8014248:	d804      	bhi.n	8014254 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801424a:	2b01      	cmp	r3, #1
 801424c:	d006      	beq.n	801425c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801424e:	2b02      	cmp	r3, #2
 8014250:	d02c      	beq.n	80142ac <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8014252:	bd70      	pop	{r4, r5, r6, pc}
 8014254:	2b08      	cmp	r3, #8
 8014256:	d01d      	beq.n	8014294 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8014258:	2b20      	cmp	r3, #32
 801425a:	d1fa      	bne.n	8014252 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801425c:	6823      	ldr	r3, [r4, #0]
 801425e:	4620      	mov	r0, r4
 8014260:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014262:	4798      	blx	r3
 8014264:	e013      	b.n	801428e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8014266:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801426a:	d0f7      	beq.n	801425c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801426c:	d804      	bhi.n	8014278 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801426e:	2b80      	cmp	r3, #128	; 0x80
 8014270:	d0f4      	beq.n	801425c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8014272:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8014276:	e7f0      	b.n	801425a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8014278:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801427c:	d0ee      	beq.n	801425c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801427e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8014282:	e7e5      	b.n	8014250 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8014284:	6823      	ldr	r3, [r4, #0]
 8014286:	7f01      	ldrb	r1, [r0, #28]
 8014288:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801428a:	4620      	mov	r0, r4
 801428c:	4798      	blx	r3
 801428e:	6823      	ldr	r3, [r4, #0]
 8014290:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014292:	e006      	b.n	80142a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8014294:	6823      	ldr	r3, [r4, #0]
 8014296:	7f01      	ldrb	r1, [r0, #28]
 8014298:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801429a:	4620      	mov	r0, r4
 801429c:	4798      	blx	r3
 801429e:	6823      	ldr	r3, [r4, #0]
 80142a0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80142a2:	4629      	mov	r1, r5
 80142a4:	4620      	mov	r0, r4
 80142a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142aa:	4718      	bx	r3
 80142ac:	6823      	ldr	r3, [r4, #0]
 80142ae:	4620      	mov	r0, r4
 80142b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142b2:	4798      	blx	r3
 80142b4:	e7f3      	b.n	801429e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080142b6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80142b6:	4770      	bx	lr

080142b8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80142b8:	4770      	bx	lr

080142ba <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80142ba:	4770      	bx	lr

080142bc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80142bc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80142c0:	1ad2      	subs	r2, r2, r3
 80142c2:	2a00      	cmp	r2, #0
 80142c4:	b510      	push	{r4, lr}
 80142c6:	bfdc      	itt	le
 80142c8:	6884      	ldrle	r4, [r0, #8]
 80142ca:	1912      	addle	r2, r2, r4
 80142cc:	2a01      	cmp	r2, #1
 80142ce:	dd16      	ble.n	80142fe <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80142d0:	6842      	ldr	r2, [r0, #4]
 80142d2:	2424      	movs	r4, #36	; 0x24
 80142d4:	fb04 2303 	mla	r3, r4, r3, r2
 80142d8:	f101 0220 	add.w	r2, r1, #32
 80142dc:	f851 4b04 	ldr.w	r4, [r1], #4
 80142e0:	f843 4b04 	str.w	r4, [r3], #4
 80142e4:	4291      	cmp	r1, r2
 80142e6:	d1f9      	bne.n	80142dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80142e8:	780a      	ldrb	r2, [r1, #0]
 80142ea:	701a      	strb	r2, [r3, #0]
 80142ec:	68c3      	ldr	r3, [r0, #12]
 80142ee:	6882      	ldr	r2, [r0, #8]
 80142f0:	f3bf 8f5b 	dmb	ish
 80142f4:	3301      	adds	r3, #1
 80142f6:	429a      	cmp	r2, r3
 80142f8:	bfd8      	it	le
 80142fa:	1a9b      	suble	r3, r3, r2
 80142fc:	60c3      	str	r3, [r0, #12]
 80142fe:	bd10      	pop	{r4, pc}

08014300 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8014300:	6903      	ldr	r3, [r0, #16]
 8014302:	6882      	ldr	r2, [r0, #8]
 8014304:	f3bf 8f5b 	dmb	ish
 8014308:	3301      	adds	r3, #1
 801430a:	429a      	cmp	r2, r3
 801430c:	bfd8      	it	le
 801430e:	1a9b      	suble	r3, r3, r2
 8014310:	6103      	str	r3, [r0, #16]
 8014312:	4770      	bx	lr

08014314 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8014314:	b570      	push	{r4, r5, r6, lr}
 8014316:	4604      	mov	r4, r0
 8014318:	460e      	mov	r6, r1
 801431a:	6860      	ldr	r0, [r4, #4]
 801431c:	6803      	ldr	r3, [r0, #0]
 801431e:	685b      	ldr	r3, [r3, #4]
 8014320:	4798      	blx	r3
 8014322:	2800      	cmp	r0, #0
 8014324:	d1f9      	bne.n	801431a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8014326:	4d0d      	ldr	r5, [pc, #52]	; (801435c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8014328:	6828      	ldr	r0, [r5, #0]
 801432a:	6803      	ldr	r3, [r0, #0]
 801432c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801432e:	4798      	blx	r3
 8014330:	f7ee fd3a 	bl	8002da8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8014334:	6828      	ldr	r0, [r5, #0]
 8014336:	2101      	movs	r1, #1
 8014338:	f7ff ff12 	bl	8014160 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801433c:	6860      	ldr	r0, [r4, #4]
 801433e:	6803      	ldr	r3, [r0, #0]
 8014340:	4631      	mov	r1, r6
 8014342:	689b      	ldr	r3, [r3, #8]
 8014344:	4798      	blx	r3
 8014346:	6823      	ldr	r3, [r4, #0]
 8014348:	4620      	mov	r0, r4
 801434a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801434c:	4798      	blx	r3
 801434e:	6828      	ldr	r0, [r5, #0]
 8014350:	6803      	ldr	r3, [r0, #0]
 8014352:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014356:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8014358:	4718      	bx	r3
 801435a:	bf00      	nop
 801435c:	2001383c 	.word	0x2001383c

08014360 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8014360:	b508      	push	{r3, lr}
 8014362:	f7ee fd13 	bl	8002d8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8014366:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801436a:	f7ee bd17 	b.w	8002d9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801436e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801436e:	b510      	push	{r4, lr}
 8014370:	2114      	movs	r1, #20
 8014372:	4604      	mov	r4, r0
 8014374:	f018 fbfd 	bl	802cb72 <_ZdlPvj>
 8014378:	4620      	mov	r0, r4
 801437a:	bd10      	pop	{r4, pc}

0801437c <_ZN8touchgfx13DMA_Interface5startEv>:
 801437c:	b510      	push	{r4, lr}
 801437e:	4604      	mov	r4, r0
 8014380:	6840      	ldr	r0, [r0, #4]
 8014382:	6803      	ldr	r3, [r0, #0]
 8014384:	681b      	ldr	r3, [r3, #0]
 8014386:	4798      	blx	r3
 8014388:	b948      	cbnz	r0, 801439e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801438a:	7a63      	ldrb	r3, [r4, #9]
 801438c:	b13b      	cbz	r3, 801439e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801438e:	7a23      	ldrb	r3, [r4, #8]
 8014390:	b92b      	cbnz	r3, 801439e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8014392:	6823      	ldr	r3, [r4, #0]
 8014394:	4620      	mov	r0, r4
 8014396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014398:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801439c:	4718      	bx	r3
 801439e:	bd10      	pop	{r4, pc}

080143a0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80143a0:	b570      	push	{r4, r5, r6, lr}
 80143a2:	4604      	mov	r4, r0
 80143a4:	6840      	ldr	r0, [r0, #4]
 80143a6:	6803      	ldr	r3, [r0, #0]
 80143a8:	681b      	ldr	r3, [r3, #0]
 80143aa:	4798      	blx	r3
 80143ac:	4605      	mov	r5, r0
 80143ae:	b930      	cbnz	r0, 80143be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80143b0:	7a23      	ldrb	r3, [r4, #8]
 80143b2:	b123      	cbz	r3, 80143be <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80143b4:	6860      	ldr	r0, [r4, #4]
 80143b6:	6803      	ldr	r3, [r0, #0]
 80143b8:	695b      	ldr	r3, [r3, #20]
 80143ba:	4798      	blx	r3
 80143bc:	7225      	strb	r5, [r4, #8]
 80143be:	6860      	ldr	r0, [r4, #4]
 80143c0:	6803      	ldr	r3, [r0, #0]
 80143c2:	681b      	ldr	r3, [r3, #0]
 80143c4:	4798      	blx	r3
 80143c6:	b928      	cbnz	r0, 80143d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80143c8:	6823      	ldr	r3, [r4, #0]
 80143ca:	4620      	mov	r0, r4
 80143cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80143ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143d2:	4718      	bx	r3
 80143d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80143d8:	f7ee bcee 	b.w	8002db8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080143dc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80143dc:	b510      	push	{r4, lr}
 80143de:	4c04      	ldr	r4, [pc, #16]	; (80143f0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80143e0:	6082      	str	r2, [r0, #8]
 80143e2:	2200      	movs	r2, #0
 80143e4:	e9c0 4100 	strd	r4, r1, [r0]
 80143e8:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80143ec:	bd10      	pop	{r4, pc}
 80143ee:	bf00      	nop
 80143f0:	08031758 	.word	0x08031758

080143f4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80143f4:	6840      	ldr	r0, [r0, #4]
 80143f6:	6803      	ldr	r3, [r0, #0]
 80143f8:	681b      	ldr	r3, [r3, #0]
 80143fa:	4718      	bx	r3

080143fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80143fc:	4b06      	ldr	r3, [pc, #24]	; (8014418 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 80143fe:	60c1      	str	r1, [r0, #12]
 8014400:	094a      	lsrs	r2, r1, #5
 8014402:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8014406:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801440a:	4313      	orrs	r3, r2
 801440c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014410:	4319      	orrs	r1, r3
 8014412:	8201      	strh	r1, [r0, #16]
 8014414:	4770      	bx	lr
 8014416:	bf00      	nop
 8014418:	fffff800 	.word	0xfffff800

0801441c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801441c:	f1a0 0008 	sub.w	r0, r0, #8
 8014420:	e7ec      	b.n	80143fc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8014422:	bf00      	nop

08014424 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8014424:	b508      	push	{r3, lr}
 8014426:	4b05      	ldr	r3, [pc, #20]	; (801443c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8014428:	6818      	ldr	r0, [r3, #0]
 801442a:	6803      	ldr	r3, [r0, #0]
 801442c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8014430:	4798      	blx	r3
 8014432:	1e43      	subs	r3, r0, #1
 8014434:	4258      	negs	r0, r3
 8014436:	4158      	adcs	r0, r3
 8014438:	bd08      	pop	{r3, pc}
 801443a:	bf00      	nop
 801443c:	2001383c 	.word	0x2001383c

08014440 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8014440:	4770      	bx	lr

08014442 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8014442:	3808      	subs	r0, #8
 8014444:	4770      	bx	lr

08014446 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8014446:	b430      	push	{r4, r5}
 8014448:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801444c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8014450:	8a02      	ldrh	r2, [r0, #16]
 8014452:	9202      	str	r2, [sp, #8]
 8014454:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8014458:	68c2      	ldr	r2, [r0, #12]
 801445a:	4629      	mov	r1, r5
 801445c:	4620      	mov	r0, r4
 801445e:	bc30      	pop	{r4, r5}
 8014460:	f7ee bf6e 	b.w	8003340 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08014464 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8014464:	f7ee bf6a 	b.w	800333c <_ZN8touchgfx5paint8tearDownEv>

08014468 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8014468:	b510      	push	{r4, lr}
 801446a:	2114      	movs	r1, #20
 801446c:	4604      	mov	r4, r0
 801446e:	f018 fb80 	bl	802cb72 <_ZdlPvj>
 8014472:	4620      	mov	r0, r4
 8014474:	bd10      	pop	{r4, pc}

08014476 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8014476:	f1a0 0008 	sub.w	r0, r0, #8
 801447a:	e7f5      	b.n	8014468 <_ZN8touchgfx13PainterRGB565D0Ev>

0801447c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801447c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801447e:	6803      	ldr	r3, [r0, #0]
 8014480:	460d      	mov	r5, r1
 8014482:	4604      	mov	r4, r0
 8014484:	4601      	mov	r1, r0
 8014486:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014488:	a802      	add	r0, sp, #8
 801448a:	4798      	blx	r3
 801448c:	6828      	ldr	r0, [r5, #0]
 801448e:	6869      	ldr	r1, [r5, #4]
 8014490:	466b      	mov	r3, sp
 8014492:	c303      	stmia	r3!, {r0, r1}
 8014494:	4668      	mov	r0, sp
 8014496:	4619      	mov	r1, r3
 8014498:	f7fe fb30 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 801449c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801449e:	b188      	cbz	r0, 80144c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144a0:	6803      	ldr	r3, [r0, #0]
 80144a2:	1d21      	adds	r1, r4, #4
 80144a4:	68db      	ldr	r3, [r3, #12]
 80144a6:	4798      	blx	r3
 80144a8:	b160      	cbz	r0, 80144c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144aa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80144ae:	2b00      	cmp	r3, #0
 80144b0:	dd08      	ble.n	80144c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144b2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80144b6:	2d00      	cmp	r5, #0
 80144b8:	dd04      	ble.n	80144c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144ba:	4a2b      	ldr	r2, [pc, #172]	; (8014568 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80144bc:	7812      	ldrb	r2, [r2, #0]
 80144be:	b11a      	cbz	r2, 80144c8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80144c0:	2a01      	cmp	r2, #1
 80144c2:	d029      	beq.n	8014518 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80144c4:	b004      	add	sp, #16
 80144c6:	bd70      	pop	{r4, r5, r6, pc}
 80144c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80144cc:	441d      	add	r5, r3
 80144ce:	b2ad      	uxth	r5, r5
 80144d0:	b22e      	sxth	r6, r5
 80144d2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80144d6:	42b3      	cmp	r3, r6
 80144d8:	daf4      	bge.n	80144c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80144da:	6823      	ldr	r3, [r4, #0]
 80144dc:	4669      	mov	r1, sp
 80144de:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80144e0:	4620      	mov	r0, r4
 80144e2:	4798      	blx	r3
 80144e4:	b940      	cbnz	r0, 80144f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80144e6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80144ea:	2b01      	cmp	r3, #1
 80144ec:	d004      	beq.n	80144f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80144ee:	3301      	adds	r3, #1
 80144f0:	105b      	asrs	r3, r3, #1
 80144f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80144f6:	e7f0      	b.n	80144da <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80144f8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80144fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8014500:	4413      	add	r3, r2
 8014502:	b29b      	uxth	r3, r3
 8014504:	441a      	add	r2, r3
 8014506:	b212      	sxth	r2, r2
 8014508:	4296      	cmp	r6, r2
 801450a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801450e:	dae0      	bge.n	80144d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014510:	1aeb      	subs	r3, r5, r3
 8014512:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014516:	e7dc      	b.n	80144d2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8014518:	f8bd 5000 	ldrh.w	r5, [sp]
 801451c:	441d      	add	r5, r3
 801451e:	b2ad      	uxth	r5, r5
 8014520:	b22e      	sxth	r6, r5
 8014522:	f9bd 3000 	ldrsh.w	r3, [sp]
 8014526:	42b3      	cmp	r3, r6
 8014528:	dacc      	bge.n	80144c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801452a:	6823      	ldr	r3, [r4, #0]
 801452c:	4669      	mov	r1, sp
 801452e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8014530:	4620      	mov	r0, r4
 8014532:	4798      	blx	r3
 8014534:	b940      	cbnz	r0, 8014548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8014536:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801453a:	2b01      	cmp	r3, #1
 801453c:	d004      	beq.n	8014548 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801453e:	3301      	adds	r3, #1
 8014540:	105b      	asrs	r3, r3, #1
 8014542:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014546:	e7f0      	b.n	801452a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8014548:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801454c:	f8bd 3000 	ldrh.w	r3, [sp]
 8014550:	4413      	add	r3, r2
 8014552:	b29b      	uxth	r3, r3
 8014554:	441a      	add	r2, r3
 8014556:	b212      	sxth	r2, r2
 8014558:	4296      	cmp	r6, r2
 801455a:	f8ad 3000 	strh.w	r3, [sp]
 801455e:	dae0      	bge.n	8014522 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014560:	1aeb      	subs	r3, r5, r3
 8014562:	f8ad 3004 	strh.w	r3, [sp, #4]
 8014566:	e7dc      	b.n	8014522 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8014568:	20013834 	.word	0x20013834

0801456c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801456c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801456e:	6803      	ldr	r3, [r0, #0]
 8014570:	4604      	mov	r4, r0
 8014572:	4601      	mov	r1, r0
 8014574:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014576:	4668      	mov	r0, sp
 8014578:	4798      	blx	r3
 801457a:	2100      	movs	r1, #0
 801457c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8014580:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8014584:	9102      	str	r1, [sp, #8]
 8014586:	4668      	mov	r0, sp
 8014588:	a902      	add	r1, sp, #8
 801458a:	f8ad 200c 	strh.w	r2, [sp, #12]
 801458e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014592:	f7fe fab3 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8014596:	6823      	ldr	r3, [r4, #0]
 8014598:	4669      	mov	r1, sp
 801459a:	691b      	ldr	r3, [r3, #16]
 801459c:	4620      	mov	r0, r4
 801459e:	4798      	blx	r3
 80145a0:	b004      	add	sp, #16
 80145a2:	bd10      	pop	{r4, pc}

080145a4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80145a4:	2101      	movs	r1, #1
 80145a6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80145aa:	490b      	ldr	r1, [pc, #44]	; (80145d8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80145ac:	6001      	str	r1, [r0, #0]
 80145ae:	2200      	movs	r2, #0
 80145b0:	21ff      	movs	r1, #255	; 0xff
 80145b2:	8082      	strh	r2, [r0, #4]
 80145b4:	80c2      	strh	r2, [r0, #6]
 80145b6:	8102      	strh	r2, [r0, #8]
 80145b8:	8142      	strh	r2, [r0, #10]
 80145ba:	8182      	strh	r2, [r0, #12]
 80145bc:	81c2      	strh	r2, [r0, #14]
 80145be:	8202      	strh	r2, [r0, #16]
 80145c0:	8242      	strh	r2, [r0, #18]
 80145c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80145c6:	61c2      	str	r2, [r0, #28]
 80145c8:	8402      	strh	r2, [r0, #32]
 80145ca:	8442      	strh	r2, [r0, #34]	; 0x22
 80145cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80145d0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80145d4:	6282      	str	r2, [r0, #40]	; 0x28
 80145d6:	4770      	bx	lr
 80145d8:	080317b4 	.word	0x080317b4

080145dc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80145dc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80145e0:	4602      	mov	r2, r0
 80145e2:	cb03      	ldmia	r3!, {r0, r1}
 80145e4:	6010      	str	r0, [r2, #0]
 80145e6:	6051      	str	r1, [r2, #4]
 80145e8:	4610      	mov	r0, r2
 80145ea:	4770      	bx	lr

080145ec <_ZN8touchgfx4LineD1Ev>:
 80145ec:	4770      	bx	lr

080145ee <_ZN8touchgfx4LineD0Ev>:
 80145ee:	b510      	push	{r4, lr}
 80145f0:	2170      	movs	r1, #112	; 0x70
 80145f2:	4604      	mov	r4, r0
 80145f4:	f018 fabd 	bl	802cb72 <_ZdlPvj>
 80145f8:	4620      	mov	r0, r4
 80145fa:	bd10      	pop	{r4, pc}

080145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80145fc:	b507      	push	{r0, r1, r2, lr}
 80145fe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8014602:	ab01      	add	r3, sp, #4
 8014604:	6809      	ldr	r1, [r1, #0]
 8014606:	6800      	ldr	r0, [r0, #0]
 8014608:	f005 fc80 	bl	8019f0c <_ZN8touchgfx6muldivElllRl>
 801460c:	b003      	add	sp, #12
 801460e:	f85d fb04 	ldr.w	pc, [sp], #4

08014612 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8014612:	6800      	ldr	r0, [r0, #0]
 8014614:	2800      	cmp	r0, #0
 8014616:	bfb9      	ittee	lt
 8014618:	2320      	movlt	r3, #32
 801461a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801461e:	301f      	addge	r0, #31
 8014620:	1140      	asrge	r0, r0, #5
 8014622:	4770      	bx	lr

08014624 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8014624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014628:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801462c:	b089      	sub	sp, #36	; 0x24
 801462e:	4604      	mov	r4, r0
 8014630:	b353      	cbz	r3, 8014688 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8014632:	6803      	ldr	r3, [r0, #0]
 8014634:	4601      	mov	r1, r0
 8014636:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8014638:	a802      	add	r0, sp, #8
 801463a:	4798      	blx	r3
 801463c:	2220      	movs	r2, #32
 801463e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8014642:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014644:	fb9a f0f2 	sdiv	r0, sl, r2
 8014648:	fb91 f5f2 	sdiv	r5, r1, r2
 801464c:	1b40      	subs	r0, r0, r5
 801464e:	2800      	cmp	r0, #0
 8014650:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8014652:	fb93 f6f2 	sdiv	r6, r3, r2
 8014656:	bfb8      	it	lt
 8014658:	4240      	neglt	r0, r0
 801465a:	0076      	lsls	r6, r6, #1
 801465c:	4286      	cmp	r6, r0
 801465e:	f8d4 b000 	ldr.w	fp, [r4]
 8014662:	dc0c      	bgt.n	801467e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8014664:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8014666:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801466a:	fb95 f0f2 	sdiv	r0, r5, r2
 801466e:	fb98 f7f2 	sdiv	r7, r8, r2
 8014672:	1bc0      	subs	r0, r0, r7
 8014674:	2800      	cmp	r0, #0
 8014676:	bfb8      	it	lt
 8014678:	4240      	neglt	r0, r0
 801467a:	4286      	cmp	r6, r0
 801467c:	dd07      	ble.n	801468e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801467e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014682:	a902      	add	r1, sp, #8
 8014684:	4620      	mov	r0, r4
 8014686:	4798      	blx	r3
 8014688:	b009      	add	sp, #36	; 0x24
 801468a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801468e:	3301      	adds	r3, #1
 8014690:	2002      	movs	r0, #2
 8014692:	f10d 0920 	add.w	r9, sp, #32
 8014696:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801469a:	4103      	asrs	r3, r0
 801469c:	f849 3d08 	str.w	r3, [r9, #-8]!
 80146a0:	eb01 060a 	add.w	r6, r1, sl
 80146a4:	eb08 0705 	add.w	r7, r8, r5
 80146a8:	fb96 f6f0 	sdiv	r6, r6, r0
 80146ac:	fb97 f7f0 	sdiv	r7, r7, r0
 80146b0:	4648      	mov	r0, r9
 80146b2:	9101      	str	r1, [sp, #4]
 80146b4:	b236      	sxth	r6, r6
 80146b6:	b23f      	sxth	r7, r7
 80146b8:	fb96 f6f2 	sdiv	r6, r6, r2
 80146bc:	fb97 f7f2 	sdiv	r7, r7, r2
 80146c0:	f7ff ffa7 	bl	8014612 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80146c4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80146c8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80146cc:	9901      	ldr	r1, [sp, #4]
 80146ce:	4293      	cmp	r3, r2
 80146d0:	fa1f fe87 	uxth.w	lr, r7
 80146d4:	fa1f fc86 	uxth.w	ip, r6
 80146d8:	eba1 0a0a 	sub.w	sl, r1, sl
 80146dc:	b280      	uxth	r0, r0
 80146de:	da54      	bge.n	801478a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 80146e0:	ebac 0100 	sub.w	r1, ip, r0
 80146e4:	b289      	uxth	r1, r1
 80146e6:	4460      	add	r0, ip
 80146e8:	f1ba 0f00 	cmp.w	sl, #0
 80146ec:	b20e      	sxth	r6, r1
 80146ee:	b280      	uxth	r0, r0
 80146f0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 80146f4:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 80146f8:	da29      	bge.n	801474e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 80146fa:	eba8 0505 	sub.w	r5, r8, r5
 80146fe:	2d00      	cmp	r5, #0
 8014700:	da2a      	bge.n	8014758 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014702:	fa1f f88a 	uxth.w	r8, sl
 8014706:	eba0 0008 	sub.w	r0, r0, r8
 801470a:	fa1f f58c 	uxth.w	r5, ip
 801470e:	4443      	add	r3, r8
 8014710:	f8ad 0014 	strh.w	r0, [sp, #20]
 8014714:	1a59      	subs	r1, r3, r1
 8014716:	ebae 0005 	sub.w	r0, lr, r5
 801471a:	f8ad a010 	strh.w	sl, [sp, #16]
 801471e:	f8ad c012 	strh.w	ip, [sp, #18]
 8014722:	f8ad 0016 	strh.w	r0, [sp, #22]
 8014726:	f8ad 6018 	strh.w	r6, [sp, #24]
 801472a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801472e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014732:	442a      	add	r2, r5
 8014734:	eba2 0e0e 	sub.w	lr, r2, lr
 8014738:	f8ad e01e 	strh.w	lr, [sp, #30]
 801473c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8014740:	a904      	add	r1, sp, #16
 8014742:	4620      	mov	r0, r4
 8014744:	4798      	blx	r3
 8014746:	6823      	ldr	r3, [r4, #0]
 8014748:	4649      	mov	r1, r9
 801474a:	691b      	ldr	r3, [r3, #16]
 801474c:	e79a      	b.n	8014684 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801474e:	d003      	beq.n	8014758 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8014750:	eba8 0505 	sub.w	r5, r8, r5
 8014754:	2d00      	cmp	r5, #0
 8014756:	dcd4      	bgt.n	8014702 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8014758:	fa1f f88a 	uxth.w	r8, sl
 801475c:	4443      	add	r3, r8
 801475e:	fa1f f58c 	uxth.w	r5, ip
 8014762:	1a59      	subs	r1, r3, r1
 8014764:	eba0 0008 	sub.w	r0, r0, r8
 8014768:	ebae 0305 	sub.w	r3, lr, r5
 801476c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8014770:	f8ad c012 	strh.w	ip, [sp, #18]
 8014774:	f8ad 1014 	strh.w	r1, [sp, #20]
 8014778:	f8ad 3016 	strh.w	r3, [sp, #22]
 801477c:	f8ad a018 	strh.w	sl, [sp, #24]
 8014780:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014784:	f8ad 001c 	strh.w	r0, [sp, #28]
 8014788:	e7d3      	b.n	8014732 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 801478a:	ebae 0100 	sub.w	r1, lr, r0
 801478e:	b289      	uxth	r1, r1
 8014790:	4470      	add	r0, lr
 8014792:	f1ba 0f00 	cmp.w	sl, #0
 8014796:	b20f      	sxth	r7, r1
 8014798:	b280      	uxth	r0, r0
 801479a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 801479e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80147a2:	da20      	bge.n	80147e6 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80147a4:	eba8 0505 	sub.w	r5, r8, r5
 80147a8:	2d00      	cmp	r5, #0
 80147aa:	da21      	bge.n	80147f0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80147ac:	fa1f f88e 	uxth.w	r8, lr
 80147b0:	fa1f f58a 	uxth.w	r5, sl
 80147b4:	4443      	add	r3, r8
 80147b6:	442a      	add	r2, r5
 80147b8:	f8ad e010 	strh.w	lr, [sp, #16]
 80147bc:	1b40      	subs	r0, r0, r5
 80147be:	ebac 0e08 	sub.w	lr, ip, r8
 80147c2:	1a51      	subs	r1, r2, r1
 80147c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80147c8:	f8ad a012 	strh.w	sl, [sp, #18]
 80147cc:	f8ad e014 	strh.w	lr, [sp, #20]
 80147d0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80147d4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80147d8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80147dc:	f8ad c01c 	strh.w	ip, [sp, #28]
 80147e0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80147e4:	e7aa      	b.n	801473c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 80147e6:	d003      	beq.n	80147f0 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80147e8:	eba8 0505 	sub.w	r5, r8, r5
 80147ec:	2d00      	cmp	r5, #0
 80147ee:	dcdd      	bgt.n	80147ac <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 80147f0:	fa1f f58e 	uxth.w	r5, lr
 80147f4:	fa1f f88a 	uxth.w	r8, sl
 80147f8:	4442      	add	r2, r8
 80147fa:	442b      	add	r3, r5
 80147fc:	f8ad 7012 	strh.w	r7, [sp, #18]
 8014800:	1a51      	subs	r1, r2, r1
 8014802:	ebac 0705 	sub.w	r7, ip, r5
 8014806:	eba0 0008 	sub.w	r0, r0, r8
 801480a:	eba3 0c0c 	sub.w	ip, r3, ip
 801480e:	f8ad e010 	strh.w	lr, [sp, #16]
 8014812:	f8ad 7014 	strh.w	r7, [sp, #20]
 8014816:	f8ad 1016 	strh.w	r1, [sp, #22]
 801481a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801481e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8014822:	f8ad c01c 	strh.w	ip, [sp, #28]
 8014826:	f8ad 001e 	strh.w	r0, [sp, #30]
 801482a:	e787      	b.n	801473c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801482c <_ZN8touchgfx7CWRUtil4sineEi>:
 801482c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8014830:	fb90 f2f3 	sdiv	r2, r0, r3
 8014834:	fb02 0013 	mls	r0, r2, r3, r0
 8014838:	2800      	cmp	r0, #0
 801483a:	bfb8      	it	lt
 801483c:	18c0      	addlt	r0, r0, r3
 801483e:	285a      	cmp	r0, #90	; 0x5a
 8014840:	4b09      	ldr	r3, [pc, #36]	; (8014868 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8014842:	dc02      	bgt.n	801484a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8014844:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014848:	4770      	bx	lr
 801484a:	28b4      	cmp	r0, #180	; 0xb4
 801484c:	dc02      	bgt.n	8014854 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801484e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8014852:	e7f7      	b.n	8014844 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8014854:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8014858:	bfd4      	ite	le
 801485a:	38b4      	suble	r0, #180	; 0xb4
 801485c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8014860:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014864:	4240      	negs	r0, r0
 8014866:	4770      	bx	lr
 8014868:	08031880 	.word	0x08031880

0801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801486c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8014870:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014872:	fb90 f2f3 	sdiv	r2, r0, r3
 8014876:	fb02 0013 	mls	r0, r2, r3, r0
 801487a:	2800      	cmp	r0, #0
 801487c:	bfb8      	it	lt
 801487e:	18c0      	addlt	r0, r0, r3
 8014880:	1144      	asrs	r4, r0, #5
 8014882:	f000 061f 	and.w	r6, r0, #31
 8014886:	4620      	mov	r0, r4
 8014888:	f7ff ffd0 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 801488c:	4605      	mov	r5, r0
 801488e:	b90e      	cbnz	r6, 8014894 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8014890:	b002      	add	sp, #8
 8014892:	bd70      	pop	{r4, r5, r6, pc}
 8014894:	1c60      	adds	r0, r4, #1
 8014896:	f7ff ffc9 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 801489a:	ab01      	add	r3, sp, #4
 801489c:	2220      	movs	r2, #32
 801489e:	4631      	mov	r1, r6
 80148a0:	1b40      	subs	r0, r0, r5
 80148a2:	f005 fb33 	bl	8019f0c <_ZN8touchgfx6muldivElllRl>
 80148a6:	4428      	add	r0, r5
 80148a8:	e7f2      	b.n	8014890 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080148aa <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80148aa:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80148ae:	bf2c      	ite	cs
 80148b0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80148b4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80148b8:	2300      	movs	r3, #0
 80148ba:	1899      	adds	r1, r3, r2
 80148bc:	4288      	cmp	r0, r1
 80148be:	bf24      	itt	cs
 80148c0:	1853      	addcs	r3, r2, r1
 80148c2:	1a40      	subcs	r0, r0, r1
 80148c4:	0892      	lsrs	r2, r2, #2
 80148c6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80148ca:	d1f6      	bne.n	80148ba <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80148cc:	4618      	mov	r0, r3
 80148ce:	4770      	bx	lr

080148d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 80148d0:	b510      	push	{r4, lr}
 80148d2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 80148d6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 80148da:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 80148de:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 80148e2:	13a4      	asrs	r4, r4, #14
 80148e4:	139b      	asrs	r3, r3, #14
 80148e6:	429c      	cmp	r4, r3
 80148e8:	bfb8      	it	lt
 80148ea:	461c      	movlt	r4, r3
 80148ec:	2c01      	cmp	r4, #1
 80148ee:	dd07      	ble.n	8014900 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 80148f0:	fb91 f1f4 	sdiv	r1, r1, r4
 80148f4:	fb90 f0f4 	sdiv	r0, r0, r4
 80148f8:	f7ff ffea 	bl	80148d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80148fc:	4360      	muls	r0, r4
 80148fe:	bd10      	pop	{r4, pc}
 8014900:	4340      	muls	r0, r0
 8014902:	fb01 0001 	mla	r0, r1, r1, r0
 8014906:	f7ff ffd0 	bl	80148aa <_ZN8touchgfx7CWRUtil5isqrtEm>
 801490a:	e7f8      	b.n	80148fe <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801490c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801490c:	2800      	cmp	r0, #0
 801490e:	b508      	push	{r3, lr}
 8014910:	da05      	bge.n	801491e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8014912:	4240      	negs	r0, r0
 8014914:	f7ff fffa 	bl	801490c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014918:	4240      	negs	r0, r0
 801491a:	b240      	sxtb	r0, r0
 801491c:	bd08      	pop	{r3, pc}
 801491e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8014922:	dc11      	bgt.n	8014948 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8014924:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8014928:	dd09      	ble.n	801493e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801492a:	4340      	muls	r0, r0
 801492c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8014930:	f7ff ffbb 	bl	80148aa <_ZN8touchgfx7CWRUtil5isqrtEm>
 8014934:	f7ff ffea 	bl	801490c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014938:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801493c:	e7ed      	b.n	801491a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801493e:	3003      	adds	r0, #3
 8014940:	10c0      	asrs	r0, r0, #3
 8014942:	4b02      	ldr	r3, [pc, #8]	; (801494c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8014944:	5618      	ldrsb	r0, [r3, r0]
 8014946:	e7e9      	b.n	801491c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8014948:	2000      	movs	r0, #0
 801494a:	e7e7      	b.n	801491c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801494c:	08031824 	.word	0x08031824

08014950 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8014950:	4281      	cmp	r1, r0
 8014952:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014954:	460c      	mov	r4, r1
 8014956:	4615      	mov	r5, r2
 8014958:	dd07      	ble.n	801496a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801495a:	4601      	mov	r1, r0
 801495c:	4620      	mov	r0, r4
 801495e:	f7ff fff7 	bl	8014950 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014962:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8014966:	b003      	add	sp, #12
 8014968:	bd30      	pop	{r4, r5, pc}
 801496a:	f7ff ffb1 	bl	80148d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801496e:	6028      	str	r0, [r5, #0]
 8014970:	2800      	cmp	r0, #0
 8014972:	d0f8      	beq.n	8014966 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8014974:	4602      	mov	r2, r0
 8014976:	ab01      	add	r3, sp, #4
 8014978:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801497c:	4620      	mov	r0, r4
 801497e:	f005 fac5 	bl	8019f0c <_ZN8touchgfx6muldivElllRl>
 8014982:	f7ff ffc3 	bl	801490c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8014986:	e7ee      	b.n	8014966 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08014988 <_ZN8touchgfx4LineC1Ev>:
 8014988:	b510      	push	{r4, lr}
 801498a:	4604      	mov	r4, r0
 801498c:	f7ff fe0a 	bl	80145a4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8014990:	4b0c      	ldr	r3, [pc, #48]	; (80149c4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8014992:	6023      	str	r3, [r4, #0]
 8014994:	2220      	movs	r2, #32
 8014996:	2300      	movs	r3, #0
 8014998:	63e2      	str	r2, [r4, #60]	; 0x3c
 801499a:	2212      	movs	r2, #18
 801499c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80149a0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80149a4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80149a8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80149ac:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80149b0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80149b4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80149b8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80149bc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80149be:	60a3      	str	r3, [r4, #8]
 80149c0:	4620      	mov	r0, r4
 80149c2:	bd10      	pop	{r4, pc}
 80149c4:	08031940 	.word	0x08031940

080149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80149c8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80149cc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80149ce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80149d0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80149d2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 80149d4:	1aff      	subs	r7, r7, r3
 80149d6:	4604      	mov	r4, r0
 80149d8:	eba5 0502 	sub.w	r5, r5, r2
 80149dc:	d142      	bne.n	8014a64 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 80149de:	b955      	cbnz	r5, 80149f6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 80149e0:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 80149e4:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 80149e8:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 80149ec:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 80149f0:	b002      	add	sp, #8
 80149f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80149f6:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 80149fa:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 80149fe:	4629      	mov	r1, r5
 8014a00:	4642      	mov	r2, r8
 8014a02:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014a04:	f005 faa1 	bl	8019f4a <_ZN8touchgfx6muldivElll>
 8014a08:	2502      	movs	r5, #2
 8014a0a:	4642      	mov	r2, r8
 8014a0c:	fb90 f6f5 	sdiv	r6, r0, r5
 8014a10:	4639      	mov	r1, r7
 8014a12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8014a14:	f005 fa99 	bl	8019f4a <_ZN8touchgfx6muldivElll>
 8014a18:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8014a1c:	fb90 f5f5 	sdiv	r5, r0, r5
 8014a20:	f1b9 0f00 	cmp.w	r9, #0
 8014a24:	d067      	beq.n	8014af6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8014a26:	f1b9 0f02 	cmp.w	r9, #2
 8014a2a:	d878      	bhi.n	8014b1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8014a2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014a2e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014a30:	1b93      	subs	r3, r2, r6
 8014a32:	1b5b      	subs	r3, r3, r5
 8014a34:	6463      	str	r3, [r4, #68]	; 0x44
 8014a36:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014a38:	18e9      	adds	r1, r5, r3
 8014a3a:	1b89      	subs	r1, r1, r6
 8014a3c:	6561      	str	r1, [r4, #84]	; 0x54
 8014a3e:	1b81      	subs	r1, r0, r6
 8014a40:	4429      	add	r1, r5
 8014a42:	64a1      	str	r1, [r4, #72]	; 0x48
 8014a44:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014a46:	4430      	add	r0, r6
 8014a48:	186f      	adds	r7, r5, r1
 8014a4a:	4432      	add	r2, r6
 8014a4c:	1b49      	subs	r1, r1, r5
 8014a4e:	4437      	add	r7, r6
 8014a50:	4428      	add	r0, r5
 8014a52:	4431      	add	r1, r6
 8014a54:	1b52      	subs	r2, r2, r5
 8014a56:	1b5b      	subs	r3, r3, r5
 8014a58:	65a7      	str	r7, [r4, #88]	; 0x58
 8014a5a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014a5c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014a5e:	6522      	str	r2, [r4, #80]	; 0x50
 8014a60:	1b9b      	subs	r3, r3, r6
 8014a62:	e05b      	b.n	8014b1c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8014a64:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8014a68:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8014a6c:	2d00      	cmp	r5, #0
 8014a6e:	d0c6      	beq.n	80149fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014a70:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8014a74:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8014a78:	fb93 f2f8 	sdiv	r2, r3, r8
 8014a7c:	fb08 3312 	mls	r3, r8, r2, r3
 8014a80:	b353      	cbz	r3, 8014ad8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8014a82:	fb98 f2f3 	sdiv	r2, r8, r3
 8014a86:	fb03 8812 	mls	r8, r3, r2, r8
 8014a8a:	f1b8 0f00 	cmp.w	r8, #0
 8014a8e:	d1f3      	bne.n	8014a78 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8014a90:	2b01      	cmp	r3, #1
 8014a92:	bf1c      	itt	ne
 8014a94:	fb95 f5f3 	sdivne	r5, r5, r3
 8014a98:	fb97 f7f3 	sdivne	r7, r7, r3
 8014a9c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8014aa0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8014aa4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8014aa8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8014aac:	428b      	cmp	r3, r1
 8014aae:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8014ab2:	4608      	mov	r0, r1
 8014ab4:	dd01      	ble.n	8014aba <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8014ab6:	428a      	cmp	r2, r1
 8014ab8:	dc10      	bgt.n	8014adc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8014aba:	fb90 f3f3 	sdiv	r3, r0, r3
 8014abe:	fb90 f2f2 	sdiv	r2, r0, r2
 8014ac2:	4293      	cmp	r3, r2
 8014ac4:	bfa8      	it	ge
 8014ac6:	4613      	movge	r3, r2
 8014ac8:	435f      	muls	r7, r3
 8014aca:	435d      	muls	r5, r3
 8014acc:	4629      	mov	r1, r5
 8014ace:	4638      	mov	r0, r7
 8014ad0:	f7ff fefe 	bl	80148d0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8014ad4:	4680      	mov	r8, r0
 8014ad6:	e792      	b.n	80149fe <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8014ad8:	4643      	mov	r3, r8
 8014ada:	e7d9      	b.n	8014a90 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8014adc:	fb93 f3f1 	sdiv	r3, r3, r1
 8014ae0:	fb92 f2f1 	sdiv	r2, r2, r1
 8014ae4:	4293      	cmp	r3, r2
 8014ae6:	bfcc      	ite	gt
 8014ae8:	3301      	addgt	r3, #1
 8014aea:	1c53      	addle	r3, r2, #1
 8014aec:	fb97 f7f3 	sdiv	r7, r7, r3
 8014af0:	fb95 f5f3 	sdiv	r5, r5, r3
 8014af4:	e7ea      	b.n	8014acc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8014af6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014af8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8014afa:	1b93      	subs	r3, r2, r6
 8014afc:	6463      	str	r3, [r4, #68]	; 0x44
 8014afe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b00:	18e9      	adds	r1, r5, r3
 8014b02:	6561      	str	r1, [r4, #84]	; 0x54
 8014b04:	1b81      	subs	r1, r0, r6
 8014b06:	64a1      	str	r1, [r4, #72]	; 0x48
 8014b08:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8014b0a:	4430      	add	r0, r6
 8014b0c:	186f      	adds	r7, r5, r1
 8014b0e:	4432      	add	r2, r6
 8014b10:	1b49      	subs	r1, r1, r5
 8014b12:	65a7      	str	r7, [r4, #88]	; 0x58
 8014b14:	64e0      	str	r0, [r4, #76]	; 0x4c
 8014b16:	65e1      	str	r1, [r4, #92]	; 0x5c
 8014b18:	6522      	str	r2, [r4, #80]	; 0x50
 8014b1a:	1b5b      	subs	r3, r3, r5
 8014b1c:	6623      	str	r3, [r4, #96]	; 0x60
 8014b1e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8014b20:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014b22:	9200      	str	r2, [sp, #0]
 8014b24:	9301      	str	r3, [sp, #4]
 8014b26:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8014b2a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8014b2e:	680f      	ldr	r7, [r1, #0]
 8014b30:	9800      	ldr	r0, [sp, #0]
 8014b32:	42ba      	cmp	r2, r7
 8014b34:	bfa8      	it	ge
 8014b36:	463a      	movge	r2, r7
 8014b38:	4287      	cmp	r7, r0
 8014b3a:	bfc8      	it	gt
 8014b3c:	9700      	strgt	r7, [sp, #0]
 8014b3e:	690f      	ldr	r7, [r1, #16]
 8014b40:	9801      	ldr	r0, [sp, #4]
 8014b42:	42bb      	cmp	r3, r7
 8014b44:	bfa8      	it	ge
 8014b46:	463b      	movge	r3, r7
 8014b48:	3104      	adds	r1, #4
 8014b4a:	4287      	cmp	r7, r0
 8014b4c:	bfc8      	it	gt
 8014b4e:	9701      	strgt	r7, [sp, #4]
 8014b50:	458c      	cmp	ip, r1
 8014b52:	d1ec      	bne.n	8014b2e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8014b54:	4668      	mov	r0, sp
 8014b56:	2720      	movs	r7, #32
 8014b58:	fb92 f8f7 	sdiv	r8, r2, r7
 8014b5c:	fb93 f7f7 	sdiv	r7, r3, r7
 8014b60:	f7ff fd57 	bl	8014612 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b64:	4682      	mov	sl, r0
 8014b66:	a801      	add	r0, sp, #4
 8014b68:	f7ff fd53 	bl	8014612 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8014b6c:	ebaa 0208 	sub.w	r2, sl, r8
 8014b70:	1bc0      	subs	r0, r0, r7
 8014b72:	f1b9 0f01 	cmp.w	r9, #1
 8014b76:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8014b7a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8014b7e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8014b82:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8014b86:	f47f af33 	bne.w	80149f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8014b8a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8014b8c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014b8e:	1b83      	subs	r3, r0, r6
 8014b90:	6463      	str	r3, [r4, #68]	; 0x44
 8014b92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8014b94:	18ea      	adds	r2, r5, r3
 8014b96:	6562      	str	r2, [r4, #84]	; 0x54
 8014b98:	1b8a      	subs	r2, r1, r6
 8014b9a:	64a2      	str	r2, [r4, #72]	; 0x48
 8014b9c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014b9e:	4431      	add	r1, r6
 8014ba0:	18af      	adds	r7, r5, r2
 8014ba2:	4406      	add	r6, r0
 8014ba4:	1b52      	subs	r2, r2, r5
 8014ba6:	1b5d      	subs	r5, r3, r5
 8014ba8:	65a7      	str	r7, [r4, #88]	; 0x58
 8014baa:	64e1      	str	r1, [r4, #76]	; 0x4c
 8014bac:	65e2      	str	r2, [r4, #92]	; 0x5c
 8014bae:	6526      	str	r6, [r4, #80]	; 0x50
 8014bb0:	6625      	str	r5, [r4, #96]	; 0x60
 8014bb2:	e71d      	b.n	80149f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08014bb4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8014bb4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014bb6:	428b      	cmp	r3, r1
 8014bb8:	d102      	bne.n	8014bc0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8014bba:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8014bbc:	4293      	cmp	r3, r2
 8014bbe:	d003      	beq.n	8014bc8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8014bc0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8014bc4:	f7ff bf00 	b.w	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014bc8:	4770      	bx	lr

08014bca <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8014bca:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8014bcc:	428b      	cmp	r3, r1
 8014bce:	d102      	bne.n	8014bd6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8014bd0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014bd2:	4293      	cmp	r3, r2
 8014bd4:	d003      	beq.n	8014bde <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8014bd6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8014bda:	f7ff bef5 	b.w	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8014bde:	4770      	bx	lr

08014be0 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8014be0:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8014be4:	f7ff bef0 	b.w	80149c8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08014be8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8014be8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014bec:	b0a0      	sub	sp, #128	; 0x80
 8014bee:	4604      	mov	r4, r0
 8014bf0:	460a      	mov	r2, r1
 8014bf2:	4601      	mov	r1, r0
 8014bf4:	a804      	add	r0, sp, #16
 8014bf6:	f015 f845 	bl	8029c84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8014bfa:	2300      	movs	r3, #0
 8014bfc:	9301      	str	r3, [sp, #4]
 8014bfe:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8014c02:	2b01      	cmp	r3, #1
 8014c04:	d17c      	bne.n	8014d00 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8014c06:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8014c08:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8014c0a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8014c0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014c0e:	1ac0      	subs	r0, r0, r3
 8014c10:	eba1 0102 	sub.w	r1, r1, r2
 8014c14:	d437      	bmi.n	8014c86 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8014c16:	2900      	cmp	r1, #0
 8014c18:	aa01      	add	r2, sp, #4
 8014c1a:	db2e      	blt.n	8014c7a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8014c1c:	f7ff fe98 	bl	8014950 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c20:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8014c24:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014c26:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014c28:	a804      	add	r0, sp, #16
 8014c2a:	f015 f9ab 	bl	8029f84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014c2e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014c30:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014c32:	a804      	add	r0, sp, #16
 8014c34:	f015 f9f3 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c38:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014c3a:	2db3      	cmp	r5, #179	; 0xb3
 8014c3c:	dc33      	bgt.n	8014ca6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8014c3e:	eba6 0805 	sub.w	r8, r6, r5
 8014c42:	4640      	mov	r0, r8
 8014c44:	f7ff fdf2 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c48:	a902      	add	r1, sp, #8
 8014c4a:	9002      	str	r0, [sp, #8]
 8014c4c:	a801      	add	r0, sp, #4
 8014c4e:	f7ff fcd5 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c52:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8014c54:	1847      	adds	r7, r0, r1
 8014c56:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014c5a:	f7ff fde7 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 8014c5e:	a903      	add	r1, sp, #12
 8014c60:	9003      	str	r0, [sp, #12]
 8014c62:	a801      	add	r0, sp, #4
 8014c64:	f7ff fcca 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014c68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8014c6a:	4639      	mov	r1, r7
 8014c6c:	1a12      	subs	r2, r2, r0
 8014c6e:	a804      	add	r0, sp, #16
 8014c70:	f015 f9d5 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014c74:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014c76:	441d      	add	r5, r3
 8014c78:	e7df      	b.n	8014c3a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8014c7a:	4249      	negs	r1, r1
 8014c7c:	f7ff fe68 	bl	8014950 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c80:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8014c84:	e7ce      	b.n	8014c24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014c86:	2900      	cmp	r1, #0
 8014c88:	f1c0 0000 	rsb	r0, r0, #0
 8014c8c:	aa01      	add	r2, sp, #4
 8014c8e:	db04      	blt.n	8014c9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8014c90:	f7ff fe5e 	bl	8014950 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014c94:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8014c98:	e7c4      	b.n	8014c24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014c9a:	4249      	negs	r1, r1
 8014c9c:	f7ff fe58 	bl	8014950 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8014ca0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8014ca4:	e7be      	b.n	8014c24 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8014ca6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014ca8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014caa:	a804      	add	r0, sp, #16
 8014cac:	f015 f9b7 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cb0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014cb2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014cb4:	a804      	add	r0, sp, #16
 8014cb6:	f015 f9b2 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cba:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8014cbc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8014cc0:	2d00      	cmp	r5, #0
 8014cc2:	dd31      	ble.n	8014d28 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8014cc4:	eb05 0806 	add.w	r8, r5, r6
 8014cc8:	4640      	mov	r0, r8
 8014cca:	f7ff fdaf 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 8014cce:	a902      	add	r1, sp, #8
 8014cd0:	9002      	str	r0, [sp, #8]
 8014cd2:	a801      	add	r0, sp, #4
 8014cd4:	f7ff fc92 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cd8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014cda:	1847      	adds	r7, r0, r1
 8014cdc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8014ce0:	f7ff fda4 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 8014ce4:	a903      	add	r1, sp, #12
 8014ce6:	9003      	str	r0, [sp, #12]
 8014ce8:	a801      	add	r0, sp, #4
 8014cea:	f7ff fc87 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8014cee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8014cf0:	4639      	mov	r1, r7
 8014cf2:	1a12      	subs	r2, r2, r0
 8014cf4:	a804      	add	r0, sp, #16
 8014cf6:	f015 f992 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014cfa:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8014cfc:	1aed      	subs	r5, r5, r3
 8014cfe:	e7df      	b.n	8014cc0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8014d00:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8014d02:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8014d04:	a804      	add	r0, sp, #16
 8014d06:	f015 f93d 	bl	8029f84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8014d0a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8014d0c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8014d0e:	a804      	add	r0, sp, #16
 8014d10:	f015 f985 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d14:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8014d16:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8014d18:	a804      	add	r0, sp, #16
 8014d1a:	f015 f980 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d1e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8014d20:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8014d22:	a804      	add	r0, sp, #16
 8014d24:	f015 f97b 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8014d28:	21ff      	movs	r1, #255	; 0xff
 8014d2a:	a804      	add	r0, sp, #16
 8014d2c:	f015 f866 	bl	8029dfc <_ZN8touchgfx6Canvas6renderEh>
 8014d30:	4b04      	ldr	r3, [pc, #16]	; (8014d44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8014d32:	9304      	str	r3, [sp, #16]
 8014d34:	4604      	mov	r4, r0
 8014d36:	a80c      	add	r0, sp, #48	; 0x30
 8014d38:	f001 fa98 	bl	801626c <_ZN8touchgfx7OutlineD1Ev>
 8014d3c:	4620      	mov	r0, r4
 8014d3e:	b020      	add	sp, #128	; 0x80
 8014d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014d44:	080321ec 	.word	0x080321ec

08014d48 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8014d48:	2000      	movs	r0, #0
 8014d4a:	4770      	bx	lr

08014d4c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8014d4c:	4b07      	ldr	r3, [pc, #28]	; (8014d6c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8014d4e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014d50:	881b      	ldrh	r3, [r3, #0]
 8014d52:	4293      	cmp	r3, r2
 8014d54:	bf81      	itttt	hi
 8014d56:	4b06      	ldrhi	r3, [pc, #24]	; (8014d70 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8014d58:	681b      	ldrhi	r3, [r3, #0]
 8014d5a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8014d5e:	7858      	ldrbhi	r0, [r3, #1]
 8014d60:	bf8c      	ite	hi
 8014d62:	f000 0003 	andhi.w	r0, r0, #3
 8014d66:	2000      	movls	r0, #0
 8014d68:	4770      	bx	lr
 8014d6a:	bf00      	nop
 8014d6c:	20013898 	.word	0x20013898
 8014d70:	20013894 	.word	0x20013894

08014d74 <_ZN8touchgfx8TextAreaD1Ev>:
 8014d74:	4770      	bx	lr
	...

08014d78 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8014d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014d7c:	4b10      	ldr	r3, [pc, #64]	; (8014dc0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8014d7e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014d80:	881b      	ldrh	r3, [r3, #0]
 8014d82:	428b      	cmp	r3, r1
 8014d84:	4604      	mov	r4, r0
 8014d86:	d918      	bls.n	8014dba <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8014d88:	6803      	ldr	r3, [r0, #0]
 8014d8a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8014d8c:	4b0d      	ldr	r3, [pc, #52]	; (8014dc4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8014d8e:	6818      	ldr	r0, [r3, #0]
 8014d90:	f7f5 fc7a 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8014d94:	6823      	ldr	r3, [r4, #0]
 8014d96:	4606      	mov	r6, r0
 8014d98:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014d9a:	4620      	mov	r0, r4
 8014d9c:	4798      	blx	r3
 8014d9e:	6823      	ldr	r3, [r4, #0]
 8014da0:	4607      	mov	r7, r0
 8014da2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014da6:	4620      	mov	r0, r4
 8014da8:	4798      	blx	r3
 8014daa:	463a      	mov	r2, r7
 8014dac:	4603      	mov	r3, r0
 8014dae:	4631      	mov	r1, r6
 8014db0:	4620      	mov	r0, r4
 8014db2:	46ac      	mov	ip, r5
 8014db4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8014db8:	4760      	bx	ip
 8014dba:	2000      	movs	r0, #0
 8014dbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014dc0:	20013898 	.word	0x20013898
 8014dc4:	200138a0 	.word	0x200138a0

08014dc8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8014dc8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014dcc:	4b17      	ldr	r3, [pc, #92]	; (8014e2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8014dce:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8014dd0:	881b      	ldrh	r3, [r3, #0]
 8014dd2:	428b      	cmp	r3, r1
 8014dd4:	4604      	mov	r4, r0
 8014dd6:	d926      	bls.n	8014e26 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8014dd8:	4b15      	ldr	r3, [pc, #84]	; (8014e30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8014dda:	681b      	ldr	r3, [r3, #0]
 8014ddc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8014de0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8014de4:	4b13      	ldr	r3, [pc, #76]	; (8014e34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8014de6:	7855      	ldrb	r5, [r2, #1]
 8014de8:	681b      	ldr	r3, [r3, #0]
 8014dea:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8014dee:	6833      	ldr	r3, [r6, #0]
 8014df0:	69df      	ldr	r7, [r3, #28]
 8014df2:	4b11      	ldr	r3, [pc, #68]	; (8014e38 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8014df4:	6818      	ldr	r0, [r3, #0]
 8014df6:	f7f5 fc47 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8014dfa:	6823      	ldr	r3, [r4, #0]
 8014dfc:	4680      	mov	r8, r0
 8014dfe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014e00:	4620      	mov	r0, r4
 8014e02:	4798      	blx	r3
 8014e04:	6823      	ldr	r3, [r4, #0]
 8014e06:	4681      	mov	r9, r0
 8014e08:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014e0c:	4620      	mov	r0, r4
 8014e0e:	4798      	blx	r3
 8014e10:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8014e14:	9000      	str	r0, [sp, #0]
 8014e16:	464b      	mov	r3, r9
 8014e18:	4642      	mov	r2, r8
 8014e1a:	4629      	mov	r1, r5
 8014e1c:	4630      	mov	r0, r6
 8014e1e:	47b8      	blx	r7
 8014e20:	b003      	add	sp, #12
 8014e22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e26:	2000      	movs	r0, #0
 8014e28:	e7fa      	b.n	8014e20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8014e2a:	bf00      	nop
 8014e2c:	20013898 	.word	0x20013898
 8014e30:	20013894 	.word	0x20013894
 8014e34:	2001389c 	.word	0x2001389c
 8014e38:	200138a0 	.word	0x200138a0

08014e3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8014e3c:	b40e      	push	{r1, r2, r3}
 8014e3e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014e42:	4b2f      	ldr	r3, [pc, #188]	; (8014f00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8014e44:	881a      	ldrh	r2, [r3, #0]
 8014e46:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8014e48:	429a      	cmp	r2, r3
 8014e4a:	b09d      	sub	sp, #116	; 0x74
 8014e4c:	4604      	mov	r4, r0
 8014e4e:	d954      	bls.n	8014efa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8014e50:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8014f04 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8014e54:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8014f08 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8014e58:	aa26      	add	r2, sp, #152	; 0x98
 8014e5a:	9202      	str	r2, [sp, #8]
 8014e5c:	f8d9 2000 	ldr.w	r2, [r9]
 8014e60:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8014e64:	f8d8 3000 	ldr.w	r3, [r8]
 8014e68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014e6c:	682b      	ldr	r3, [r5, #0]
 8014e6e:	4628      	mov	r0, r5
 8014e70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014e72:	4798      	blx	r3
 8014e74:	b207      	sxth	r7, r0
 8014e76:	4606      	mov	r6, r0
 8014e78:	a803      	add	r0, sp, #12
 8014e7a:	f005 fc61 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8014e7e:	682b      	ldr	r3, [r5, #0]
 8014e80:	4628      	mov	r0, r5
 8014e82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014e84:	4798      	blx	r3
 8014e86:	682b      	ldr	r3, [r5, #0]
 8014e88:	4682      	mov	sl, r0
 8014e8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014e8c:	4628      	mov	r0, r5
 8014e8e:	4798      	blx	r3
 8014e90:	4653      	mov	r3, sl
 8014e92:	9000      	str	r0, [sp, #0]
 8014e94:	9a02      	ldr	r2, [sp, #8]
 8014e96:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014e98:	a803      	add	r0, sp, #12
 8014e9a:	f005 fcac 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e9e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014ea0:	f8d9 3000 	ldr.w	r3, [r9]
 8014ea4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8014ea8:	8925      	ldrh	r5, [r4, #8]
 8014eaa:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8014eae:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8014eb2:	eba5 050c 	sub.w	r5, r5, ip
 8014eb6:	784a      	ldrb	r2, [r1, #1]
 8014eb8:	f8d8 3000 	ldr.w	r3, [r8]
 8014ebc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8014ec0:	b22d      	sxth	r5, r5
 8014ec2:	9500      	str	r5, [sp, #0]
 8014ec4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8014ec8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014ecc:	a803      	add	r0, sp, #12
 8014ece:	f003 f8b9 	bl	8018044 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8014ed2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8014ed6:	18b9      	adds	r1, r7, r2
 8014ed8:	2900      	cmp	r1, #0
 8014eda:	b203      	sxth	r3, r0
 8014edc:	dd0b      	ble.n	8014ef6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8014ede:	3b01      	subs	r3, #1
 8014ee0:	fb13 f302 	smulbb	r3, r3, r2
 8014ee4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8014ee8:	b21f      	sxth	r7, r3
 8014eea:	4638      	mov	r0, r7
 8014eec:	b01d      	add	sp, #116	; 0x74
 8014eee:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014ef2:	b003      	add	sp, #12
 8014ef4:	4770      	bx	lr
 8014ef6:	2b00      	cmp	r3, #0
 8014ef8:	dcf7      	bgt.n	8014eea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014efa:	2700      	movs	r7, #0
 8014efc:	e7f5      	b.n	8014eea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8014efe:	bf00      	nop
 8014f00:	20013898 	.word	0x20013898
 8014f04:	20013894 	.word	0x20013894
 8014f08:	2001389c 	.word	0x2001389c

08014f0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8014f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f10:	4bbc      	ldr	r3, [pc, #752]	; (8015204 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8014f12:	460c      	mov	r4, r1
 8014f14:	881b      	ldrh	r3, [r3, #0]
 8014f16:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8014f18:	428b      	cmp	r3, r1
 8014f1a:	b0a9      	sub	sp, #164	; 0xa4
 8014f1c:	4680      	mov	r8, r0
 8014f1e:	d809      	bhi.n	8014f34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8014f20:	2300      	movs	r3, #0
 8014f22:	f04f 32ff 	mov.w	r2, #4294967295
 8014f26:	e9c0 3200 	strd	r3, r2, [r0]
 8014f2a:	6083      	str	r3, [r0, #8]
 8014f2c:	4640      	mov	r0, r8
 8014f2e:	b029      	add	sp, #164	; 0xa4
 8014f30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f34:	4eb4      	ldr	r6, [pc, #720]	; (8015208 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8014f36:	6833      	ldr	r3, [r6, #0]
 8014f38:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8014f3c:	4bb3      	ldr	r3, [pc, #716]	; (801520c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8014f3e:	681b      	ldr	r3, [r3, #0]
 8014f40:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8014f44:	4bb2      	ldr	r3, [pc, #712]	; (8015210 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8014f46:	6818      	ldr	r0, [r3, #0]
 8014f48:	f7f5 fb9e 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8014f4c:	682b      	ldr	r3, [r5, #0]
 8014f4e:	4681      	mov	r9, r0
 8014f50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f52:	4628      	mov	r0, r5
 8014f54:	4798      	blx	r3
 8014f56:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8014f58:	b203      	sxth	r3, r0
 8014f5a:	4407      	add	r7, r0
 8014f5c:	9304      	str	r3, [sp, #16]
 8014f5e:	b2bb      	uxth	r3, r7
 8014f60:	9303      	str	r3, [sp, #12]
 8014f62:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014f66:	4682      	mov	sl, r0
 8014f68:	a80f      	add	r0, sp, #60	; 0x3c
 8014f6a:	2b00      	cmp	r3, #0
 8014f6c:	f040 80a6 	bne.w	80150bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8014f70:	f005 fbe6 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8014f74:	682b      	ldr	r3, [r5, #0]
 8014f76:	4628      	mov	r0, r5
 8014f78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014f7a:	4798      	blx	r3
 8014f7c:	682b      	ldr	r3, [r5, #0]
 8014f7e:	4606      	mov	r6, r0
 8014f80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f82:	4628      	mov	r0, r5
 8014f84:	4798      	blx	r3
 8014f86:	6823      	ldr	r3, [r4, #0]
 8014f88:	4607      	mov	r7, r0
 8014f8a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014f8c:	4620      	mov	r0, r4
 8014f8e:	4798      	blx	r3
 8014f90:	6823      	ldr	r3, [r4, #0]
 8014f92:	4683      	mov	fp, r0
 8014f94:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014f98:	4620      	mov	r0, r4
 8014f9a:	4798      	blx	r3
 8014f9c:	463b      	mov	r3, r7
 8014f9e:	e9cd b000 	strd	fp, r0, [sp]
 8014fa2:	4649      	mov	r1, r9
 8014fa4:	4632      	mov	r2, r6
 8014fa6:	a80f      	add	r0, sp, #60	; 0x3c
 8014fa8:	f005 fc3a 	bl	801a820 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8014fac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8014fb0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8015208 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8014fb4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8014fb8:	f04f 0600 	mov.w	r6, #0
 8014fbc:	bf0c      	ite	eq
 8014fbe:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8014fc2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8014fc6:	4637      	mov	r7, r6
 8014fc8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8014fca:	f8db 3000 	ldr.w	r3, [fp]
 8014fce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8014fd2:	4629      	mov	r1, r5
 8014fd4:	785b      	ldrb	r3, [r3, #1]
 8014fd6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014fda:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014fde:	a80f      	add	r0, sp, #60	; 0x3c
 8014fe0:	f002 fd4b 	bl	8017a7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014fe4:	9b03      	ldr	r3, [sp, #12]
 8014fe6:	4286      	cmp	r6, r0
 8014fe8:	bfb8      	it	lt
 8014fea:	4606      	movlt	r6, r0
 8014fec:	3701      	adds	r7, #1
 8014fee:	eba9 0903 	sub.w	r9, r9, r3
 8014ff2:	a80f      	add	r0, sp, #60	; 0x3c
 8014ff4:	b236      	sxth	r6, r6
 8014ff6:	b2bf      	uxth	r7, r7
 8014ff8:	fa0f f989 	sxth.w	r9, r9
 8014ffc:	f005 fbc7 	bl	801a78e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8015000:	b918      	cbnz	r0, 801500a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015002:	7a2b      	ldrb	r3, [r5, #8]
 8015004:	444b      	add	r3, r9
 8015006:	2b00      	cmp	r3, #0
 8015008:	dcde      	bgt.n	8014fc8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801500a:	9b03      	ldr	r3, [sp, #12]
 801500c:	9a04      	ldr	r2, [sp, #16]
 801500e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8015012:	fb13 f707 	smulbb	r7, r3, r7
 8015016:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015018:	1aff      	subs	r7, r7, r3
 801501a:	b2bf      	uxth	r7, r7
 801501c:	b23b      	sxth	r3, r7
 801501e:	429a      	cmp	r2, r3
 8015020:	bfa8      	it	ge
 8015022:	4657      	movge	r7, sl
 8015024:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015028:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801502c:	6823      	ldr	r3, [r4, #0]
 801502e:	bf08      	it	eq
 8015030:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8015034:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015036:	bf18      	it	ne
 8015038:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801503c:	4620      	mov	r0, r4
 801503e:	4798      	blx	r3
 8015040:	444f      	add	r7, r9
 8015042:	fa1f f987 	uxth.w	r9, r7
 8015046:	2801      	cmp	r0, #1
 8015048:	fa0f f789 	sxth.w	r7, r9
 801504c:	b2b3      	uxth	r3, r6
 801504e:	f000 80e1 	beq.w	8015214 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8015052:	2802      	cmp	r0, #2
 8015054:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8015058:	f000 80e2 	beq.w	8015220 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801505c:	7aea      	ldrb	r2, [r5, #11]
 801505e:	7b2d      	ldrb	r5, [r5, #12]
 8015060:	b236      	sxth	r6, r6
 8015062:	1ab6      	subs	r6, r6, r2
 8015064:	442a      	add	r2, r5
 8015066:	4413      	add	r3, r2
 8015068:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801506c:	fa1f fa86 	uxth.w	sl, r6
 8015070:	b29b      	uxth	r3, r3
 8015072:	2a02      	cmp	r2, #2
 8015074:	fa0f fb8a 	sxth.w	fp, sl
 8015078:	b21e      	sxth	r6, r3
 801507a:	f000 80d5 	beq.w	8015228 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801507e:	2a03      	cmp	r2, #3
 8015080:	f000 80dd 	beq.w	801523e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8015084:	2a01      	cmp	r2, #1
 8015086:	f040 80e5 	bne.w	8015254 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801508a:	8925      	ldrh	r5, [r4, #8]
 801508c:	4633      	mov	r3, r6
 801508e:	eba5 0909 	sub.w	r9, r5, r9
 8015092:	463e      	mov	r6, r7
 8015094:	465d      	mov	r5, fp
 8015096:	461f      	mov	r7, r3
 8015098:	fa0f fb89 	sxth.w	fp, r9
 801509c:	4b5c      	ldr	r3, [pc, #368]	; (8015210 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801509e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80150a0:	6818      	ldr	r0, [r3, #0]
 80150a2:	f7f5 faf1 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80150a6:	f8a8 b000 	strh.w	fp, [r8]
 80150aa:	f8a8 5002 	strh.w	r5, [r8, #2]
 80150ae:	f8a8 6004 	strh.w	r6, [r8, #4]
 80150b2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80150b6:	f8c8 0008 	str.w	r0, [r8, #8]
 80150ba:	e737      	b.n	8014f2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80150bc:	f005 fb40 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 80150c0:	682b      	ldr	r3, [r5, #0]
 80150c2:	4628      	mov	r0, r5
 80150c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80150c6:	4798      	blx	r3
 80150c8:	682b      	ldr	r3, [r5, #0]
 80150ca:	4607      	mov	r7, r0
 80150cc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80150ce:	4628      	mov	r0, r5
 80150d0:	4798      	blx	r3
 80150d2:	6823      	ldr	r3, [r4, #0]
 80150d4:	4683      	mov	fp, r0
 80150d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80150d8:	4620      	mov	r0, r4
 80150da:	4798      	blx	r3
 80150dc:	6822      	ldr	r2, [r4, #0]
 80150de:	9005      	str	r0, [sp, #20]
 80150e0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 80150e4:	4620      	mov	r0, r4
 80150e6:	4790      	blx	r2
 80150e8:	9b05      	ldr	r3, [sp, #20]
 80150ea:	9001      	str	r0, [sp, #4]
 80150ec:	463a      	mov	r2, r7
 80150ee:	4649      	mov	r1, r9
 80150f0:	9300      	str	r3, [sp, #0]
 80150f2:	a80f      	add	r0, sp, #60	; 0x3c
 80150f4:	465b      	mov	r3, fp
 80150f6:	f005 fb93 	bl	801a820 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80150fa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80150fe:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8015102:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015104:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8015108:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801510c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8015110:	bf0a      	itet	eq
 8015112:	464a      	moveq	r2, r9
 8015114:	461a      	movne	r2, r3
 8015116:	4699      	moveq	r9, r3
 8015118:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801511c:	1ad2      	subs	r2, r2, r3
 801511e:	6833      	ldr	r3, [r6, #0]
 8015120:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8015124:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8015128:	af0f      	add	r7, sp, #60	; 0x3c
 801512a:	7859      	ldrb	r1, [r3, #1]
 801512c:	9707      	str	r7, [sp, #28]
 801512e:	2300      	movs	r3, #0
 8015130:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8015134:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015138:	f88d 1020 	strb.w	r1, [sp, #32]
 801513c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8015140:	9509      	str	r5, [sp, #36]	; 0x24
 8015142:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015146:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801514a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801514e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015152:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8015156:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801515a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801515e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015162:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015166:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801516a:	b350      	cbz	r0, 80151c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801516c:	682b      	ldr	r3, [r5, #0]
 801516e:	4628      	mov	r0, r5
 8015170:	695b      	ldr	r3, [r3, #20]
 8015172:	4798      	blx	r3
 8015174:	4607      	mov	r7, r0
 8015176:	b320      	cbz	r0, 80151c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015178:	9809      	ldr	r0, [sp, #36]	; 0x24
 801517a:	6803      	ldr	r3, [r0, #0]
 801517c:	4639      	mov	r1, r7
 801517e:	68db      	ldr	r3, [r3, #12]
 8015180:	4798      	blx	r3
 8015182:	4606      	mov	r6, r0
 8015184:	b1e8      	cbz	r0, 80151c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8015186:	7b43      	ldrb	r3, [r0, #13]
 8015188:	7a82      	ldrb	r2, [r0, #10]
 801518a:	005b      	lsls	r3, r3, #1
 801518c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015190:	4313      	orrs	r3, r2
 8015192:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8015196:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801519a:	2b06      	cmp	r3, #6
 801519c:	d111      	bne.n	80151c2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801519e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80151a0:	6803      	ldr	r3, [r0, #0]
 80151a2:	4632      	mov	r2, r6
 80151a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80151a6:	4639      	mov	r1, r7
 80151a8:	4798      	blx	r3
 80151aa:	7b73      	ldrb	r3, [r6, #13]
 80151ac:	005b      	lsls	r3, r3, #1
 80151ae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80151b2:	7ab3      	ldrb	r3, [r6, #10]
 80151b4:	4313      	orrs	r3, r2
 80151b6:	4418      	add	r0, r3
 80151b8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80151bc:	4418      	add	r0, r3
 80151be:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80151c2:	2600      	movs	r6, #0
 80151c4:	4637      	mov	r7, r6
 80151c6:	a806      	add	r0, sp, #24
 80151c8:	f002 fe38 	bl	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80151cc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80151d0:	9b03      	ldr	r3, [sp, #12]
 80151d2:	4286      	cmp	r6, r0
 80151d4:	eba9 0903 	sub.w	r9, r9, r3
 80151d8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80151dc:	bfb8      	it	lt
 80151de:	4606      	movlt	r6, r0
 80151e0:	3701      	adds	r7, #1
 80151e2:	b236      	sxth	r6, r6
 80151e4:	b2bf      	uxth	r7, r7
 80151e6:	fa0f f989 	sxth.w	r9, r9
 80151ea:	2b00      	cmp	r3, #0
 80151ec:	f43f af0d 	beq.w	801500a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80151f0:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 80151f4:	2b00      	cmp	r3, #0
 80151f6:	f47f af08 	bne.w	801500a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80151fa:	7a2b      	ldrb	r3, [r5, #8]
 80151fc:	444b      	add	r3, r9
 80151fe:	2b00      	cmp	r3, #0
 8015200:	dce1      	bgt.n	80151c6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8015202:	e702      	b.n	801500a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8015204:	20013898 	.word	0x20013898
 8015208:	20013894 	.word	0x20013894
 801520c:	2001389c 	.word	0x2001389c
 8015210:	200138a0 	.word	0x200138a0
 8015214:	ebaa 0606 	sub.w	r6, sl, r6
 8015218:	2002      	movs	r0, #2
 801521a:	fb96 f6f0 	sdiv	r6, r6, r0
 801521e:	e71d      	b.n	801505c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015220:	441e      	add	r6, r3
 8015222:	ebaa 0606 	sub.w	r6, sl, r6
 8015226:	e719      	b.n	801505c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8015228:	8925      	ldrh	r5, [r4, #8]
 801522a:	1aed      	subs	r5, r5, r3
 801522c:	eba5 050a 	sub.w	r5, r5, sl
 8015230:	fa0f fb85 	sxth.w	fp, r5
 8015234:	8965      	ldrh	r5, [r4, #10]
 8015236:	eba5 0509 	sub.w	r5, r5, r9
 801523a:	b22d      	sxth	r5, r5
 801523c:	e72e      	b.n	801509c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801523e:	8965      	ldrh	r5, [r4, #10]
 8015240:	1aed      	subs	r5, r5, r3
 8015242:	eba5 050a 	sub.w	r5, r5, sl
 8015246:	4633      	mov	r3, r6
 8015248:	b22d      	sxth	r5, r5
 801524a:	463e      	mov	r6, r7
 801524c:	f04f 0b00 	mov.w	fp, #0
 8015250:	461f      	mov	r7, r3
 8015252:	e723      	b.n	801509c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8015254:	2500      	movs	r5, #0
 8015256:	e721      	b.n	801509c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08015258 <_ZN8touchgfx8TextAreaD0Ev>:
 8015258:	b510      	push	{r4, lr}
 801525a:	2148      	movs	r1, #72	; 0x48
 801525c:	4604      	mov	r4, r0
 801525e:	f017 fc88 	bl	802cb72 <_ZdlPvj>
 8015262:	4620      	mov	r0, r4
 8015264:	bd10      	pop	{r4, pc}
	...

08015268 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8015268:	b513      	push	{r0, r1, r4, lr}
 801526a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801526e:	4604      	mov	r4, r0
 8015270:	b1fb      	cbz	r3, 80152b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015272:	4b16      	ldr	r3, [pc, #88]	; (80152cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8015274:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8015276:	881b      	ldrh	r3, [r3, #0]
 8015278:	428b      	cmp	r3, r1
 801527a:	d91a      	bls.n	80152b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801527c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8015280:	2b00      	cmp	r3, #0
 8015282:	dd16      	ble.n	80152b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8015284:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015288:	2b00      	cmp	r3, #0
 801528a:	dd12      	ble.n	80152b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801528c:	4b10      	ldr	r3, [pc, #64]	; (80152d0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801528e:	6818      	ldr	r0, [r3, #0]
 8015290:	f7f5 f9fa 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8015294:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8015298:	6822      	ldr	r2, [r4, #0]
 801529a:	2b00      	cmp	r3, #0
 801529c:	db06      	blt.n	80152ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801529e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80152a2:	2b00      	cmp	r3, #0
 80152a4:	db02      	blt.n	80152ac <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80152a6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80152a8:	4298      	cmp	r0, r3
 80152aa:	d004      	beq.n	80152b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80152ac:	6953      	ldr	r3, [r2, #20]
 80152ae:	4620      	mov	r0, r4
 80152b0:	4798      	blx	r3
 80152b2:	b002      	add	sp, #8
 80152b4:	bd10      	pop	{r4, pc}
 80152b6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80152ba:	c903      	ldmia	r1, {r0, r1}
 80152bc:	466b      	mov	r3, sp
 80152be:	e883 0003 	stmia.w	r3, {r0, r1}
 80152c2:	6912      	ldr	r2, [r2, #16]
 80152c4:	4619      	mov	r1, r3
 80152c6:	4620      	mov	r0, r4
 80152c8:	4790      	blx	r2
 80152ca:	e7f2      	b.n	80152b2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80152cc:	20013898 	.word	0x20013898
 80152d0:	200138a0 	.word	0x200138a0

080152d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80152d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80152d8:	4b44      	ldr	r3, [pc, #272]	; (80153ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80152da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80152dc:	881b      	ldrh	r3, [r3, #0]
 80152de:	4293      	cmp	r3, r2
 80152e0:	b08e      	sub	sp, #56	; 0x38
 80152e2:	4604      	mov	r4, r0
 80152e4:	d97e      	bls.n	80153e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80152e6:	6808      	ldr	r0, [r1, #0]
 80152e8:	4d41      	ldr	r5, [pc, #260]	; (80153f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80152ea:	6849      	ldr	r1, [r1, #4]
 80152ec:	ab05      	add	r3, sp, #20
 80152ee:	c303      	stmia	r3!, {r0, r1}
 80152f0:	4611      	mov	r1, r2
 80152f2:	6828      	ldr	r0, [r5, #0]
 80152f4:	f7f5 f9c8 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80152f8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80152fc:	2b00      	cmp	r3, #0
 80152fe:	db11      	blt.n	8015324 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015300:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8015304:	2b00      	cmp	r3, #0
 8015306:	db0d      	blt.n	8015324 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8015308:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801530a:	4298      	cmp	r0, r3
 801530c:	d10a      	bne.n	8015324 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801530e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8015312:	e892 0003 	ldmia.w	r2, {r0, r1}
 8015316:	ab09      	add	r3, sp, #36	; 0x24
 8015318:	e883 0003 	stmia.w	r3, {r0, r1}
 801531c:	4619      	mov	r1, r3
 801531e:	a805      	add	r0, sp, #20
 8015320:	f7fd fbec 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8015324:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015328:	2b00      	cmp	r3, #0
 801532a:	dd5b      	ble.n	80153e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801532c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8015330:	2b00      	cmp	r3, #0
 8015332:	dd57      	ble.n	80153e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8015334:	4f2f      	ldr	r7, [pc, #188]	; (80153f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8015336:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015338:	683b      	ldr	r3, [r7, #0]
 801533a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801533e:	4b2e      	ldr	r3, [pc, #184]	; (80153f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8015340:	681b      	ldr	r3, [r3, #0]
 8015342:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8015346:	2e00      	cmp	r6, #0
 8015348:	d04c      	beq.n	80153e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801534a:	6823      	ldr	r3, [r4, #0]
 801534c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8015350:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015352:	4620      	mov	r0, r4
 8015354:	4798      	blx	r3
 8015356:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8015358:	683b      	ldr	r3, [r7, #0]
 801535a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801535e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8015362:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8015366:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8015368:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801536c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8015370:	785b      	ldrb	r3, [r3, #1]
 8015372:	9609      	str	r6, [sp, #36]	; 0x24
 8015374:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8015378:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801537c:	4b1f      	ldr	r3, [pc, #124]	; (80153fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801537e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8015382:	681b      	ldr	r3, [r3, #0]
 8015384:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8015388:	910b      	str	r1, [sp, #44]	; 0x2c
 801538a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801538e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8015392:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8015396:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801539a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801539e:	b10a      	cbz	r2, 80153a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80153a0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80153a2:	b906      	cbnz	r6, 80153a6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80153a4:	689e      	ldr	r6, [r3, #8]
 80153a6:	af07      	add	r7, sp, #28
 80153a8:	4621      	mov	r1, r4
 80153aa:	4638      	mov	r0, r7
 80153ac:	f004 fc7c 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80153b0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80153b2:	6828      	ldr	r0, [r5, #0]
 80153b4:	f7f5 f968 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80153b8:	6823      	ldr	r3, [r4, #0]
 80153ba:	4605      	mov	r5, r0
 80153bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80153be:	4620      	mov	r0, r4
 80153c0:	4798      	blx	r3
 80153c2:	6823      	ldr	r3, [r4, #0]
 80153c4:	4680      	mov	r8, r0
 80153c6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80153ca:	4620      	mov	r0, r4
 80153cc:	4798      	blx	r3
 80153ce:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80153d2:	ab09      	add	r3, sp, #36	; 0x24
 80153d4:	9300      	str	r3, [sp, #0]
 80153d6:	9501      	str	r5, [sp, #4]
 80153d8:	ab05      	add	r3, sp, #20
 80153da:	e897 0006 	ldmia.w	r7, {r1, r2}
 80153de:	4630      	mov	r0, r6
 80153e0:	f7f5 f904 	bl	800a5ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80153e4:	b00e      	add	sp, #56	; 0x38
 80153e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80153ea:	bf00      	nop
 80153ec:	20013898 	.word	0x20013898
 80153f0:	200138a0 	.word	0x200138a0
 80153f4:	20013894 	.word	0x20013894
 80153f8:	2001389c 	.word	0x2001389c
 80153fc:	2001383c 	.word	0x2001383c

08015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8015400:	b538      	push	{r3, r4, r5, lr}
 8015402:	4b0e      	ldr	r3, [pc, #56]	; (801543c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8015404:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015406:	881b      	ldrh	r3, [r3, #0]
 8015408:	429a      	cmp	r2, r3
 801540a:	4604      	mov	r4, r0
 801540c:	d214      	bcs.n	8015438 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801540e:	6803      	ldr	r3, [r0, #0]
 8015410:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015412:	4798      	blx	r3
 8015414:	6823      	ldr	r3, [r4, #0]
 8015416:	4605      	mov	r5, r0
 8015418:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801541a:	4620      	mov	r0, r4
 801541c:	4798      	blx	r3
 801541e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8015422:	b22d      	sxth	r5, r5
 8015424:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8015428:	4601      	mov	r1, r0
 801542a:	bf06      	itte	eq
 801542c:	4602      	moveq	r2, r0
 801542e:	4629      	moveq	r1, r5
 8015430:	462a      	movne	r2, r5
 8015432:	4620      	mov	r0, r4
 8015434:	f7fd f942 	bl	80126bc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8015438:	bd38      	pop	{r3, r4, r5, pc}
 801543a:	bf00      	nop
 801543c:	20013898 	.word	0x20013898

08015440 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8015440:	b530      	push	{r4, r5, lr}
 8015442:	888b      	ldrh	r3, [r1, #4]
 8015444:	8583      	strh	r3, [r0, #44]	; 0x2c
 8015446:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801544a:	b085      	sub	sp, #20
 801544c:	4604      	mov	r4, r0
 801544e:	b923      	cbnz	r3, 801545a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015450:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8015454:	b90b      	cbnz	r3, 801545a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8015456:	f7ff ffd3 	bl	8015400 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801545a:	6823      	ldr	r3, [r4, #0]
 801545c:	466d      	mov	r5, sp
 801545e:	4621      	mov	r1, r4
 8015460:	4628      	mov	r0, r5
 8015462:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8015466:	4798      	blx	r3
 8015468:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801546c:	343c      	adds	r4, #60	; 0x3c
 801546e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8015472:	b005      	add	sp, #20
 8015474:	bd30      	pop	{r4, r5, pc}

08015476 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8015476:	2300      	movs	r3, #0
 8015478:	8083      	strh	r3, [r0, #4]
 801547a:	80c3      	strh	r3, [r0, #6]
 801547c:	8003      	strh	r3, [r0, #0]
 801547e:	8043      	strh	r3, [r0, #2]
 8015480:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8015484:	2bff      	cmp	r3, #255	; 0xff
 8015486:	bf01      	itttt	eq
 8015488:	890b      	ldrheq	r3, [r1, #8]
 801548a:	8083      	strheq	r3, [r0, #4]
 801548c:	894b      	ldrheq	r3, [r1, #10]
 801548e:	80c3      	strheq	r3, [r0, #6]
 8015490:	4770      	bx	lr
	...

08015494 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8015494:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015496:	4604      	mov	r4, r0
 8015498:	6808      	ldr	r0, [r1, #0]
 801549a:	6849      	ldr	r1, [r1, #4]
 801549c:	466b      	mov	r3, sp
 801549e:	c303      	stmia	r3!, {r0, r1}
 80154a0:	6823      	ldr	r3, [r4, #0]
 80154a2:	4669      	mov	r1, sp
 80154a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80154a6:	4620      	mov	r0, r4
 80154a8:	4798      	blx	r3
 80154aa:	4b08      	ldr	r3, [pc, #32]	; (80154cc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80154ac:	681b      	ldr	r3, [r3, #0]
 80154ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80154b2:	b10a      	cbz	r2, 80154b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80154b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80154b6:	b900      	cbnz	r0, 80154ba <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80154b8:	6898      	ldr	r0, [r3, #8]
 80154ba:	6803      	ldr	r3, [r0, #0]
 80154bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80154be:	6a1d      	ldr	r5, [r3, #32]
 80154c0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80154c4:	4669      	mov	r1, sp
 80154c6:	47a8      	blx	r5
 80154c8:	b003      	add	sp, #12
 80154ca:	bd30      	pop	{r4, r5, pc}
 80154cc:	2001383c 	.word	0x2001383c

080154d0 <_ZN8touchgfx3BoxD1Ev>:
 80154d0:	4770      	bx	lr

080154d2 <_ZN8touchgfx3BoxD0Ev>:
 80154d2:	b510      	push	{r4, lr}
 80154d4:	212c      	movs	r1, #44	; 0x2c
 80154d6:	4604      	mov	r4, r0
 80154d8:	f017 fb4b 	bl	802cb72 <_ZdlPvj>
 80154dc:	4620      	mov	r0, r4
 80154de:	bd10      	pop	{r4, pc}

080154e0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80154e0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80154e4:	b12a      	cbz	r2, 80154f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80154e6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80154ea:	b112      	cbz	r2, 80154f2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80154ec:	6803      	ldr	r3, [r0, #0]
 80154ee:	695b      	ldr	r3, [r3, #20]
 80154f0:	4718      	bx	r3
 80154f2:	4770      	bx	lr

080154f4 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 80154f4:	b570      	push	{r4, r5, r6, lr}
 80154f6:	6803      	ldr	r3, [r0, #0]
 80154f8:	4604      	mov	r4, r0
 80154fa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80154fc:	4615      	mov	r5, r2
 80154fe:	4798      	blx	r3
 8015500:	6823      	ldr	r3, [r4, #0]
 8015502:	4629      	mov	r1, r5
 8015504:	4620      	mov	r0, r4
 8015506:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8015508:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801550c:	4718      	bx	r3

0801550e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801550e:	b570      	push	{r4, r5, r6, lr}
 8015510:	6803      	ldr	r3, [r0, #0]
 8015512:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8015514:	4604      	mov	r4, r0
 8015516:	460e      	mov	r6, r1
 8015518:	4615      	mov	r5, r2
 801551a:	4798      	blx	r3
 801551c:	8030      	strh	r0, [r6, #0]
 801551e:	6823      	ldr	r3, [r4, #0]
 8015520:	4620      	mov	r0, r4
 8015522:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8015524:	4798      	blx	r3
 8015526:	8028      	strh	r0, [r5, #0]
 8015528:	bd70      	pop	{r4, r5, r6, pc}

0801552a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801552a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801552e:	4770      	bx	lr

08015530 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8015530:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8015534:	4770      	bx	lr

08015536 <_ZN8touchgfx10TiledImageD1Ev>:
 8015536:	4770      	bx	lr

08015538 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8015538:	b510      	push	{r4, lr}
 801553a:	4604      	mov	r4, r0
 801553c:	f000 fd31 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8015540:	6823      	ldr	r3, [r4, #0]
 8015542:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8015546:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801554a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801554c:	4620      	mov	r0, r4
 801554e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015552:	4718      	bx	r3

08015554 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8015554:	b538      	push	{r3, r4, r5, lr}
 8015556:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801555a:	4604      	mov	r4, r0
 801555c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801555e:	4628      	mov	r0, r5
 8015560:	f006 fe6e 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015564:	b188      	cbz	r0, 801558a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8015566:	4628      	mov	r0, r5
 8015568:	f006 fe6a 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801556c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8015570:	fb92 f3f0 	sdiv	r3, r2, r0
 8015574:	fb03 2010 	mls	r0, r3, r0, r2
 8015578:	2800      	cmp	r0, #0
 801557a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801557c:	da05      	bge.n	801558a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801557e:	4628      	mov	r0, r5
 8015580:	f006 fe5e 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015584:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8015586:	4418      	add	r0, r3
 8015588:	8560      	strh	r0, [r4, #42]	; 0x2a
 801558a:	bd38      	pop	{r3, r4, r5, pc}

0801558c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 801558c:	b538      	push	{r3, r4, r5, lr}
 801558e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8015592:	4604      	mov	r4, r0
 8015594:	8581      	strh	r1, [r0, #44]	; 0x2c
 8015596:	4628      	mov	r0, r5
 8015598:	f006 fe86 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801559c:	b188      	cbz	r0, 80155c2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 801559e:	4628      	mov	r0, r5
 80155a0:	f006 fe82 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155a4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80155a8:	fb92 f3f0 	sdiv	r3, r2, r0
 80155ac:	fb03 2010 	mls	r0, r3, r0, r2
 80155b0:	2800      	cmp	r0, #0
 80155b2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155b4:	da05      	bge.n	80155c2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80155b6:	4628      	mov	r0, r5
 80155b8:	f006 fe76 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155bc:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80155be:	4418      	add	r0, r3
 80155c0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80155c2:	bd38      	pop	{r3, r4, r5, pc}

080155c4 <_ZN8touchgfx10TiledImageD0Ev>:
 80155c4:	b510      	push	{r4, lr}
 80155c6:	2130      	movs	r1, #48	; 0x30
 80155c8:	4604      	mov	r4, r0
 80155ca:	f017 fad2 	bl	802cb72 <_ZdlPvj>
 80155ce:	4620      	mov	r0, r4
 80155d0:	bd10      	pop	{r4, pc}
	...

080155d4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80155d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155d8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80155dc:	b093      	sub	sp, #76	; 0x4c
 80155de:	4607      	mov	r7, r0
 80155e0:	4658      	mov	r0, fp
 80155e2:	460e      	mov	r6, r1
 80155e4:	f006 fe2c 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80155e8:	4681      	mov	r9, r0
 80155ea:	4658      	mov	r0, fp
 80155ec:	f006 fe5c 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80155f0:	4605      	mov	r5, r0
 80155f2:	f1b9 0f00 	cmp.w	r9, #0
 80155f6:	f000 80c4 	beq.w	8015782 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80155fa:	2800      	cmp	r0, #0
 80155fc:	f000 80c1 	beq.w	8015782 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015600:	2300      	movs	r3, #0
 8015602:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8015606:	683b      	ldr	r3, [r7, #0]
 8015608:	a90e      	add	r1, sp, #56	; 0x38
 801560a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801560c:	4638      	mov	r0, r7
 801560e:	4798      	blx	r3
 8015610:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8015614:	f9b6 3000 	ldrsh.w	r3, [r6]
 8015618:	88b1      	ldrh	r1, [r6, #4]
 801561a:	fa1f f889 	uxth.w	r8, r9
 801561e:	189c      	adds	r4, r3, r2
 8015620:	440b      	add	r3, r1
 8015622:	fa02 f383 	sxtah	r3, r2, r3
 8015626:	fb94 f4f9 	sdiv	r4, r4, r9
 801562a:	fb14 f408 	smulbb	r4, r4, r8
 801562e:	1aa4      	subs	r4, r4, r2
 8015630:	3b01      	subs	r3, #1
 8015632:	b2aa      	uxth	r2, r5
 8015634:	fb93 f3f9 	sdiv	r3, r3, r9
 8015638:	fb13 f308 	smulbb	r3, r3, r8
 801563c:	b21b      	sxth	r3, r3
 801563e:	9205      	str	r2, [sp, #20]
 8015640:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8015644:	9805      	ldr	r0, [sp, #20]
 8015646:	930b      	str	r3, [sp, #44]	; 0x2c
 8015648:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801564c:	185a      	adds	r2, r3, r1
 801564e:	fb92 f2f5 	sdiv	r2, r2, r5
 8015652:	fb12 f200 	smulbb	r2, r2, r0
 8015656:	1a52      	subs	r2, r2, r1
 8015658:	b212      	sxth	r2, r2
 801565a:	920c      	str	r2, [sp, #48]	; 0x30
 801565c:	88f2      	ldrh	r2, [r6, #6]
 801565e:	4413      	add	r3, r2
 8015660:	fa01 f383 	sxtah	r3, r1, r3
 8015664:	3b01      	subs	r3, #1
 8015666:	fb93 f3f5 	sdiv	r3, r3, r5
 801566a:	fb13 f300 	smulbb	r3, r3, r0
 801566e:	b2a4      	uxth	r4, r4
 8015670:	b21b      	sxth	r3, r3
 8015672:	930d      	str	r3, [sp, #52]	; 0x34
 8015674:	eb08 0504 	add.w	r5, r8, r4
 8015678:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801567a:	b223      	sxth	r3, r4
 801567c:	4293      	cmp	r3, r2
 801567e:	b2ad      	uxth	r5, r5
 8015680:	9306      	str	r3, [sp, #24]
 8015682:	dc7e      	bgt.n	8015782 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8015684:	b22b      	sxth	r3, r5
 8015686:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801568a:	930a      	str	r3, [sp, #40]	; 0x28
 801568c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801568e:	4599      	cmp	r9, r3
 8015690:	dd03      	ble.n	801569a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8015692:	4444      	add	r4, r8
 8015694:	b2a4      	uxth	r4, r4
 8015696:	4445      	add	r5, r8
 8015698:	e7ee      	b.n	8015678 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 801569a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801569e:	88b2      	ldrh	r2, [r6, #4]
 80156a0:	9806      	ldr	r0, [sp, #24]
 80156a2:	9905      	ldr	r1, [sp, #20]
 80156a4:	4462      	add	r2, ip
 80156a6:	b292      	uxth	r2, r2
 80156a8:	b213      	sxth	r3, r2
 80156aa:	9308      	str	r3, [sp, #32]
 80156ac:	fa1f f389 	uxth.w	r3, r9
 80156b0:	4419      	add	r1, r3
 80156b2:	9307      	str	r3, [sp, #28]
 80156b4:	4603      	mov	r3, r0
 80156b6:	9808      	ldr	r0, [sp, #32]
 80156b8:	b289      	uxth	r1, r1
 80156ba:	4283      	cmp	r3, r0
 80156bc:	fa0f fa81 	sxth.w	sl, r1
 80156c0:	da5b      	bge.n	801577a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156c2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80156c4:	4584      	cmp	ip, r0
 80156c6:	da58      	bge.n	801577a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156c8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80156cc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80156d0:	4486      	add	lr, r0
 80156d2:	fa1f fe8e 	uxth.w	lr, lr
 80156d6:	fa0f f38e 	sxth.w	r3, lr
 80156da:	4599      	cmp	r9, r3
 80156dc:	9309      	str	r3, [sp, #36]	; 0x24
 80156de:	da4c      	bge.n	801577a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156e0:	4550      	cmp	r0, sl
 80156e2:	da4a      	bge.n	801577a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80156e4:	9b06      	ldr	r3, [sp, #24]
 80156e6:	459c      	cmp	ip, r3
 80156e8:	bfb8      	it	lt
 80156ea:	469c      	movlt	ip, r3
 80156ec:	9b08      	ldr	r3, [sp, #32]
 80156ee:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 80156f2:	4548      	cmp	r0, r9
 80156f4:	bfb8      	it	lt
 80156f6:	4648      	movlt	r0, r9
 80156f8:	4699      	mov	r9, r3
 80156fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80156fc:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8015700:	4599      	cmp	r9, r3
 8015702:	bfc8      	it	gt
 8015704:	462a      	movgt	r2, r5
 8015706:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015708:	4553      	cmp	r3, sl
 801570a:	bfd8      	it	le
 801570c:	4671      	movle	r1, lr
 801570e:	eba2 020c 	sub.w	r2, r2, ip
 8015712:	1a09      	subs	r1, r1, r0
 8015714:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8015718:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801571c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8015720:	9b07      	ldr	r3, [sp, #28]
 8015722:	1b12      	subs	r2, r2, r4
 8015724:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8015728:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801572c:	1ad2      	subs	r2, r2, r3
 801572e:	4b16      	ldr	r3, [pc, #88]	; (8015788 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8015730:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8015734:	681a      	ldr	r2, [r3, #0]
 8015736:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801573a:	b109      	cbz	r1, 8015740 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801573c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801573e:	b900      	cbnz	r0, 8015742 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8015740:	6890      	ldr	r0, [r2, #8]
 8015742:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8015746:	9b07      	ldr	r3, [sp, #28]
 8015748:	6801      	ldr	r1, [r0, #0]
 801574a:	f04f 0c01 	mov.w	ip, #1
 801574e:	f8cd c008 	str.w	ip, [sp, #8]
 8015752:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8015756:	f8cd c004 	str.w	ip, [sp, #4]
 801575a:	4413      	add	r3, r2
 801575c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8015760:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8015764:	f8cd c000 	str.w	ip, [sp]
 8015768:	4422      	add	r2, r4
 801576a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801576e:	b21b      	sxth	r3, r3
 8015770:	b212      	sxth	r2, r2
 8015772:	4659      	mov	r1, fp
 8015774:	47c8      	blx	r9
 8015776:	46d1      	mov	r9, sl
 8015778:	e788      	b.n	801568c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 801577a:	2300      	movs	r3, #0
 801577c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8015780:	e7cc      	b.n	801571c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8015782:	b013      	add	sp, #76	; 0x4c
 8015784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015788:	2001383c 	.word	0x2001383c

0801578c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 801578c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015790:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015794:	2bff      	cmp	r3, #255	; 0xff
 8015796:	4606      	mov	r6, r0
 8015798:	4689      	mov	r9, r1
 801579a:	d008      	beq.n	80157ae <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 801579c:	2300      	movs	r3, #0
 801579e:	8003      	strh	r3, [r0, #0]
 80157a0:	8043      	strh	r3, [r0, #2]
 80157a2:	8083      	strh	r3, [r0, #4]
 80157a4:	4630      	mov	r0, r6
 80157a6:	80f3      	strh	r3, [r6, #6]
 80157a8:	b003      	add	sp, #12
 80157aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157ae:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 80157b2:	4659      	mov	r1, fp
 80157b4:	4668      	mov	r0, sp
 80157b6:	f006 fdab 	bl	801c310 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80157ba:	4658      	mov	r0, fp
 80157bc:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80157c0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80157c4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80157c8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80157cc:	f006 fd38 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157d0:	4284      	cmp	r4, r0
 80157d2:	d10d      	bne.n	80157f0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80157d4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80157d8:	4658      	mov	r0, fp
 80157da:	f006 fd65 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80157de:	4580      	cmp	r8, r0
 80157e0:	d129      	bne.n	8015836 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 80157e2:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80157e6:	8037      	strh	r7, [r6, #0]
 80157e8:	f8a6 a002 	strh.w	sl, [r6, #2]
 80157ec:	80b5      	strh	r5, [r6, #4]
 80157ee:	e7d9      	b.n	80157a4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 80157f0:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 80157f4:	4658      	mov	r0, fp
 80157f6:	f006 fd23 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80157fa:	1b7f      	subs	r7, r7, r5
 80157fc:	b2bd      	uxth	r5, r7
 80157fe:	b22f      	sxth	r7, r5
 8015800:	4428      	add	r0, r5
 8015802:	2f00      	cmp	r7, #0
 8015804:	b2a3      	uxth	r3, r4
 8015806:	b280      	uxth	r0, r0
 8015808:	bfb8      	it	lt
 801580a:	18ed      	addlt	r5, r5, r3
 801580c:	4403      	add	r3, r0
 801580e:	b29b      	uxth	r3, r3
 8015810:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8015814:	bfb8      	it	lt
 8015816:	b22d      	sxthlt	r5, r5
 8015818:	b219      	sxth	r1, r3
 801581a:	bfae      	itee	ge
 801581c:	4625      	movge	r5, r4
 801581e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8015822:	2700      	movlt	r7, #0
 8015824:	4291      	cmp	r1, r2
 8015826:	bfc4      	itt	gt
 8015828:	1a9c      	subgt	r4, r3, r2
 801582a:	b224      	sxthgt	r4, r4
 801582c:	42ac      	cmp	r4, r5
 801582e:	bfc4      	itt	gt
 8015830:	b207      	sxthgt	r7, r0
 8015832:	4625      	movgt	r5, r4
 8015834:	e7d0      	b.n	80157d8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8015836:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801583a:	4658      	mov	r0, fp
 801583c:	f006 fd34 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015840:	ebaa 0404 	sub.w	r4, sl, r4
 8015844:	b2a4      	uxth	r4, r4
 8015846:	fa0f fa84 	sxth.w	sl, r4
 801584a:	4420      	add	r0, r4
 801584c:	f1ba 0f00 	cmp.w	sl, #0
 8015850:	fa1f f288 	uxth.w	r2, r8
 8015854:	b280      	uxth	r0, r0
 8015856:	bfb8      	it	lt
 8015858:	18a3      	addlt	r3, r4, r2
 801585a:	4402      	add	r2, r0
 801585c:	b292      	uxth	r2, r2
 801585e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8015862:	bfb8      	it	lt
 8015864:	b21b      	sxthlt	r3, r3
 8015866:	b214      	sxth	r4, r2
 8015868:	bfae      	itee	ge
 801586a:	4643      	movge	r3, r8
 801586c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8015870:	f04f 0a00 	movlt.w	sl, #0
 8015874:	428c      	cmp	r4, r1
 8015876:	bfc4      	itt	gt
 8015878:	eba2 0801 	subgt.w	r8, r2, r1
 801587c:	fa0f f888 	sxthgt.w	r8, r8
 8015880:	4598      	cmp	r8, r3
 8015882:	bfc4      	itt	gt
 8015884:	fa0f fa80 	sxthgt.w	sl, r0
 8015888:	4643      	movgt	r3, r8
 801588a:	e7ac      	b.n	80157e6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801588c <_ZNK8touchgfx5Image17invalidateContentEv>:
 801588c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8015890:	b12a      	cbz	r2, 801589e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015892:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015896:	b112      	cbz	r2, 801589e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8015898:	6803      	ldr	r3, [r0, #0]
 801589a:	695b      	ldr	r3, [r3, #20]
 801589c:	4718      	bx	r3
 801589e:	4770      	bx	lr

080158a0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80158a0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80158a4:	600b      	str	r3, [r1, #0]
 80158a6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80158aa:	6013      	str	r3, [r2, #0]
 80158ac:	4770      	bx	lr

080158ae <_ZN8touchgfx5Gauge8setWidthEs>:
 80158ae:	8101      	strh	r1, [r0, #8]
 80158b0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80158b4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80158b8:	4770      	bx	lr

080158ba <_ZN8touchgfx5Gauge9setHeightEs>:
 80158ba:	8141      	strh	r1, [r0, #10]
 80158bc:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80158c0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80158c4:	4770      	bx	lr

080158c6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80158c6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80158ca:	4770      	bx	lr

080158cc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80158cc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 80158d0:	4770      	bx	lr

080158d2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 80158d2:	4770      	bx	lr

080158d4 <_ZN8touchgfx5GaugeD1Ev>:
 80158d4:	4770      	bx	lr

080158d6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80158d6:	b538      	push	{r3, r4, r5, lr}
 80158d8:	4604      	mov	r4, r0
 80158da:	460d      	mov	r5, r1
 80158dc:	f7fc fe07 	bl	80124ee <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80158e0:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80158e4:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80158e8:	bd38      	pop	{r3, r4, r5, pc}

080158ea <_ZN8touchgfx5GaugeD0Ev>:
 80158ea:	b510      	push	{r4, lr}
 80158ec:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80158f0:	4604      	mov	r4, r0
 80158f2:	f017 f93e 	bl	802cb72 <_ZdlPvj>
 80158f6:	4620      	mov	r0, r4
 80158f8:	bd10      	pop	{r4, pc}

080158fa <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80158fa:	b510      	push	{r4, lr}
 80158fc:	6803      	ldr	r3, [r0, #0]
 80158fe:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015902:	4604      	mov	r4, r0
 8015904:	4798      	blx	r3
 8015906:	b170      	cbz	r0, 8015926 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015908:	6823      	ldr	r3, [r4, #0]
 801590a:	4620      	mov	r0, r4
 801590c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8015910:	4798      	blx	r3
 8015912:	b140      	cbz	r0, 8015926 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8015914:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8015918:	b12b      	cbz	r3, 8015926 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801591a:	6823      	ldr	r3, [r4, #0]
 801591c:	4620      	mov	r0, r4
 801591e:	695b      	ldr	r3, [r3, #20]
 8015920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015924:	4718      	bx	r3
 8015926:	bd10      	pop	{r4, pc}

08015928 <_ZN8touchgfx5GaugeC1Ev>:
 8015928:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801592a:	4604      	mov	r4, r0
 801592c:	4626      	mov	r6, r4
 801592e:	f7fc feff 	bl	8012730 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8015932:	4b18      	ldr	r3, [pc, #96]	; (8015994 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8015934:	f846 3bb4 	str.w	r3, [r6], #180
 8015938:	a902      	add	r1, sp, #8
 801593a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801593e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8015942:	4630      	mov	r0, r6
 8015944:	f015 f9a4 	bl	802ac90 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8015948:	2500      	movs	r5, #0
 801594a:	2301      	movs	r3, #1
 801594c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8015950:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8015954:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8015958:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801595c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8015960:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8015964:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8015968:	4638      	mov	r0, r7
 801596a:	f014 fbd5 	bl	802a118 <_ZN8touchgfx6CircleC1Ev>
 801596e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8015972:	4620      	mov	r0, r4
 8015974:	f7fc ff7d 	bl	8012872 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8015978:	4639      	mov	r1, r7
 801597a:	4620      	mov	r0, r4
 801597c:	f7fc ff38 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015980:	4620      	mov	r0, r4
 8015982:	4631      	mov	r1, r6
 8015984:	f7fc ff34 	bl	80127f0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8015988:	4620      	mov	r0, r4
 801598a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801598e:	b003      	add	sp, #12
 8015990:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015992:	bf00      	nop
 8015994:	08031b34 	.word	0x08031b34

08015998 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8015998:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 801599c:	4770      	bx	lr

0801599e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801599e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80159a2:	4770      	bx	lr

080159a4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80159a4:	b538      	push	{r3, r4, r5, lr}
 80159a6:	8902      	ldrh	r2, [r0, #8]
 80159a8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80159ac:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80159b0:	4604      	mov	r4, r0
 80159b2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80159b6:	2200      	movs	r2, #0
 80159b8:	4611      	mov	r1, r2
 80159ba:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80159be:	4628      	mov	r0, r5
 80159c0:	f7ed fe54 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 80159c4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80159c8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80159cc:	1a9b      	subs	r3, r3, r2
 80159ce:	ee07 3a90 	vmov	s15, r3
 80159d2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80159d6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80159da:	1a9b      	subs	r3, r3, r2
 80159dc:	ee07 3a10 	vmov	s14, r3
 80159e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80159e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80159e8:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80159ec:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80159f0:	4628      	mov	r0, r5
 80159f2:	f015 f999 	bl	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80159f6:	4b16      	ldr	r3, [pc, #88]	; (8015a50 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80159f8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80159fc:	4628      	mov	r0, r5
 80159fe:	f015 f993 	bl	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a02:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8015a06:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8015a0a:	ee07 3a90 	vmov	s15, r3
 8015a0e:	ee07 2a10 	vmov	s14, r2
 8015a12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015a16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015a1a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8015a1e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8015a22:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8015a26:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8015a2a:	4628      	mov	r0, r5
 8015a2c:	f015 f97c 	bl	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a30:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8015a34:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8015a38:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8015a3c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8015a40:	4628      	mov	r0, r5
 8015a42:	f015 f971 	bl	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8015a46:	2301      	movs	r3, #1
 8015a48:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015a4c:	bd38      	pop	{r3, r4, r5, pc}
 8015a4e:	bf00      	nop
 8015a50:	43960000 	.word	0x43960000

08015a54 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8015a54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015a56:	4604      	mov	r4, r0
 8015a58:	a802      	add	r0, sp, #8
 8015a5a:	4616      	mov	r6, r2
 8015a5c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8015a60:	461d      	mov	r5, r3
 8015a62:	4601      	mov	r1, r0
 8015a64:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015a68:	f015 fab4 	bl	802afd4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8015a6c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8015a70:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8015a74:	4620      	mov	r0, r4
 8015a76:	f7ff ff95 	bl	80159a4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015a7a:	b002      	add	sp, #8
 8015a7c:	bd70      	pop	{r4, r5, r6, pc}

08015a7e <_ZN8touchgfx5Gauge9setCenterEii>:
 8015a7e:	b570      	push	{r4, r5, r6, lr}
 8015a80:	4606      	mov	r6, r0
 8015a82:	460d      	mov	r5, r1
 8015a84:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8015a88:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8015a8c:	4614      	mov	r4, r2
 8015a8e:	f7ff ff89 	bl	80159a4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8015a92:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8015a96:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8015a9a:	1aa4      	subs	r4, r4, r2
 8015a9c:	1a6d      	subs	r5, r5, r1
 8015a9e:	0164      	lsls	r4, r4, #5
 8015aa0:	016d      	lsls	r5, r5, #5
 8015aa2:	3410      	adds	r4, #16
 8015aa4:	3510      	adds	r5, #16
 8015aa6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8015aaa:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8015aae:	bd70      	pop	{r4, r5, r6, pc}

08015ab0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8015ab0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8015ab2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8015ab4:	0149      	lsls	r1, r1, #5
 8015ab6:	4299      	cmp	r1, r3
 8015ab8:	4604      	mov	r4, r0
 8015aba:	9101      	str	r1, [sp, #4]
 8015abc:	d00b      	beq.n	8015ad6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8015abe:	4601      	mov	r1, r0
 8015ac0:	aa01      	add	r2, sp, #4
 8015ac2:	a802      	add	r0, sp, #8
 8015ac4:	f014 fd26 	bl	802a514 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8015ac8:	9b01      	ldr	r3, [sp, #4]
 8015aca:	63e3      	str	r3, [r4, #60]	; 0x3c
 8015acc:	6823      	ldr	r3, [r4, #0]
 8015ace:	a902      	add	r1, sp, #8
 8015ad0:	691b      	ldr	r3, [r3, #16]
 8015ad2:	4620      	mov	r0, r4
 8015ad4:	4798      	blx	r3
 8015ad6:	b004      	add	sp, #16
 8015ad8:	bd10      	pop	{r4, pc}
	...

08015adc <_ZN8touchgfx5Gauge8setValueEi>:
 8015adc:	b570      	push	{r4, r5, r6, lr}
 8015ade:	4604      	mov	r4, r0
 8015ae0:	f7fc fd58 	bl	8012594 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8015ae4:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8015ae8:	429a      	cmp	r2, r3
 8015aea:	bfac      	ite	ge
 8015aec:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8015af0:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8015af4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8015af8:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8015afc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015b00:	1ac9      	subs	r1, r1, r3
 8015b02:	2900      	cmp	r1, #0
 8015b04:	bfb8      	it	lt
 8015b06:	4249      	neglt	r1, r1
 8015b08:	b289      	uxth	r1, r1
 8015b0a:	4620      	mov	r0, r4
 8015b0c:	f7fc fd64 	bl	80125d8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8015b10:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8015b14:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8015b18:	eddf 6a19 	vldr	s13, [pc, #100]	; 8015b80 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8015b1c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8015b84 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8015b20:	429a      	cmp	r2, r3
 8015b22:	4605      	mov	r5, r0
 8015b24:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8015b28:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8015b2c:	da15      	bge.n	8015b5a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8015b2e:	1b5b      	subs	r3, r3, r5
 8015b30:	ee07 3a90 	vmov	s15, r3
 8015b34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b38:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b3c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b40:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b44:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b48:	f015 f85d 	bl	802ac06 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b4c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b50:	1b49      	subs	r1, r1, r5
 8015b52:	4630      	mov	r0, r6
 8015b54:	f7ff ffac 	bl	8015ab0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8015b58:	bd70      	pop	{r4, r5, r6, pc}
 8015b5a:	442b      	add	r3, r5
 8015b5c:	ee07 3a90 	vmov	s15, r3
 8015b60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015b64:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8015b68:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8015b6c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8015b70:	ee21 1a07 	vmul.f32	s2, s2, s14
 8015b74:	f015 f847 	bl	802ac06 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8015b78:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8015b7c:	4429      	add	r1, r5
 8015b7e:	e7e8      	b.n	8015b52 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8015b80:	43340000 	.word	0x43340000
 8015b84:	40490fdb 	.word	0x40490fdb

08015b88 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8015b88:	b510      	push	{r4, lr}
 8015b8a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8015b8e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8015b92:	0149      	lsls	r1, r1, #5
 8015b94:	0152      	lsls	r2, r2, #5
 8015b96:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8015b9a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8015b9e:	4604      	mov	r4, r0
 8015ba0:	f7fc fca2 	bl	80124e8 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8015ba4:	4601      	mov	r1, r0
 8015ba6:	4620      	mov	r0, r4
 8015ba8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015bac:	f7ff bf96 	b.w	8015adc <_ZN8touchgfx5Gauge8setValueEi>

08015bb0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8015bb0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8015bb4:	4770      	bx	lr

08015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8015bb6:	b570      	push	{r4, r5, r6, lr}
 8015bb8:	880b      	ldrh	r3, [r1, #0]
 8015bba:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8015bbc:	4605      	mov	r5, r0
 8015bbe:	8813      	ldrh	r3, [r2, #0]
 8015bc0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8015bc4:	4604      	mov	r4, r0
 8015bc6:	4628      	mov	r0, r5
 8015bc8:	f006 fb3a 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015bcc:	4606      	mov	r6, r0
 8015bce:	4628      	mov	r0, r5
 8015bd0:	f006 fb6a 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015bd4:	6823      	ldr	r3, [r4, #0]
 8015bd6:	4605      	mov	r5, r0
 8015bd8:	4631      	mov	r1, r6
 8015bda:	4620      	mov	r0, r4
 8015bdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015bde:	4798      	blx	r3
 8015be0:	6823      	ldr	r3, [r4, #0]
 8015be2:	4629      	mov	r1, r5
 8015be4:	4620      	mov	r0, r4
 8015be6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015be8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015bec:	4718      	bx	r3

08015bee <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8015bee:	b510      	push	{r4, lr}
 8015bf0:	4604      	mov	r4, r0
 8015bf2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8015bf4:	b150      	cbz	r0, 8015c0c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015bf6:	6803      	ldr	r3, [r0, #0]
 8015bf8:	68db      	ldr	r3, [r3, #12]
 8015bfa:	4798      	blx	r3
 8015bfc:	b130      	cbz	r0, 8015c0c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8015bfe:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015c00:	6803      	ldr	r3, [r0, #0]
 8015c02:	4621      	mov	r1, r4
 8015c04:	689b      	ldr	r3, [r3, #8]
 8015c06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c0a:	4718      	bx	r3
 8015c0c:	bd10      	pop	{r4, pc}

08015c0e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8015c0e:	b510      	push	{r4, lr}
 8015c10:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8015c14:	2bff      	cmp	r3, #255	; 0xff
 8015c16:	4604      	mov	r4, r0
 8015c18:	d006      	beq.n	8015c28 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8015c1a:	2300      	movs	r3, #0
 8015c1c:	8003      	strh	r3, [r0, #0]
 8015c1e:	8043      	strh	r3, [r0, #2]
 8015c20:	8083      	strh	r3, [r0, #4]
 8015c22:	80c3      	strh	r3, [r0, #6]
 8015c24:	4620      	mov	r0, r4
 8015c26:	bd10      	pop	{r4, pc}
 8015c28:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8015c2c:	b11b      	cbz	r3, 8015c36 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8015c2e:	3130      	adds	r1, #48	; 0x30
 8015c30:	f006 fb6e 	bl	801c310 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8015c34:	e7f6      	b.n	8015c24 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8015c36:	312e      	adds	r1, #46	; 0x2e
 8015c38:	e7fa      	b.n	8015c30 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08015c3c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8015c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c40:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015c44:	b08a      	sub	sp, #40	; 0x28
 8015c46:	4604      	mov	r4, r0
 8015c48:	4688      	mov	r8, r1
 8015c4a:	2b00      	cmp	r3, #0
 8015c4c:	d066      	beq.n	8015d1c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8015c4e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8015c50:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015c54:	a805      	add	r0, sp, #20
 8015c56:	f006 faf3 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015c5a:	4607      	mov	r7, r0
 8015c5c:	a805      	add	r0, sp, #20
 8015c5e:	f006 fb23 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015c62:	f9b8 6000 	ldrsh.w	r6, [r8]
 8015c66:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8015c6a:	4432      	add	r2, r6
 8015c6c:	b292      	uxth	r2, r2
 8015c6e:	2300      	movs	r3, #0
 8015c70:	fa0f fc82 	sxth.w	ip, r2
 8015c74:	459c      	cmp	ip, r3
 8015c76:	9306      	str	r3, [sp, #24]
 8015c78:	dd52      	ble.n	8015d20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c7a:	42b7      	cmp	r7, r6
 8015c7c:	dd50      	ble.n	8015d20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c7e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8015c82:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8015c86:	442b      	add	r3, r5
 8015c88:	b29b      	uxth	r3, r3
 8015c8a:	b219      	sxth	r1, r3
 8015c8c:	2900      	cmp	r1, #0
 8015c8e:	dd47      	ble.n	8015d20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c90:	42a8      	cmp	r0, r5
 8015c92:	dd45      	ble.n	8015d20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8015c94:	4567      	cmp	r7, ip
 8015c96:	bfb8      	it	lt
 8015c98:	b2ba      	uxthlt	r2, r7
 8015c9a:	4288      	cmp	r0, r1
 8015c9c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8015ca0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8015ca4:	bfb8      	it	lt
 8015ca6:	b283      	uxthlt	r3, r0
 8015ca8:	1b92      	subs	r2, r2, r6
 8015caa:	1b5b      	subs	r3, r3, r5
 8015cac:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015cb0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015cb4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015cb8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8015cbc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015cc0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015cc4:	429a      	cmp	r2, r3
 8015cc6:	d026      	beq.n	8015d16 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cc8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8015ccc:	2b00      	cmp	r3, #0
 8015cce:	dd22      	ble.n	8015d16 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cd0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8015cd4:	2b00      	cmp	r3, #0
 8015cd6:	dd1e      	ble.n	8015d16 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8015cd8:	2300      	movs	r3, #0
 8015cda:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8015cde:	6823      	ldr	r3, [r4, #0]
 8015ce0:	a908      	add	r1, sp, #32
 8015ce2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ce4:	4620      	mov	r0, r4
 8015ce6:	4798      	blx	r3
 8015ce8:	4b0f      	ldr	r3, [pc, #60]	; (8015d28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8015cea:	681b      	ldr	r3, [r3, #0]
 8015cec:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8015cf0:	b10a      	cbz	r2, 8015cf6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8015cf2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8015cf4:	b900      	cbnz	r0, 8015cf8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8015cf6:	6898      	ldr	r0, [r3, #8]
 8015cf8:	6801      	ldr	r1, [r0, #0]
 8015cfa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8015cfe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8015d02:	2501      	movs	r5, #1
 8015d04:	9502      	str	r5, [sp, #8]
 8015d06:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015d0a:	9401      	str	r4, [sp, #4]
 8015d0c:	ac06      	add	r4, sp, #24
 8015d0e:	9400      	str	r4, [sp, #0]
 8015d10:	688c      	ldr	r4, [r1, #8]
 8015d12:	a905      	add	r1, sp, #20
 8015d14:	47a0      	blx	r4
 8015d16:	b00a      	add	sp, #40	; 0x28
 8015d18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015d1c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8015d1e:	e797      	b.n	8015c50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8015d20:	2300      	movs	r3, #0
 8015d22:	9307      	str	r3, [sp, #28]
 8015d24:	e7ca      	b.n	8015cbc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8015d26:	bf00      	nop
 8015d28:	2001383c 	.word	0x2001383c

08015d2c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8015d2c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8015d30:	b12a      	cbz	r2, 8015d3e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d32:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8015d36:	b112      	cbz	r2, 8015d3e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8015d38:	6803      	ldr	r3, [r0, #0]
 8015d3a:	695b      	ldr	r3, [r3, #20]
 8015d3c:	4718      	bx	r3
 8015d3e:	4770      	bx	lr

08015d40 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8015d40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015d44:	4b2f      	ldr	r3, [pc, #188]	; (8015e04 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8015d46:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8015d48:	881b      	ldrh	r3, [r3, #0]
 8015d4a:	4293      	cmp	r3, r2
 8015d4c:	b08d      	sub	sp, #52	; 0x34
 8015d4e:	4604      	mov	r4, r0
 8015d50:	460f      	mov	r7, r1
 8015d52:	d954      	bls.n	8015dfe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d54:	4b2c      	ldr	r3, [pc, #176]	; (8015e08 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8015d56:	6819      	ldr	r1, [r3, #0]
 8015d58:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8015d5c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8015d60:	4a2a      	ldr	r2, [pc, #168]	; (8015e0c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8015d62:	6812      	ldr	r2, [r2, #0]
 8015d64:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8015d68:	2900      	cmp	r1, #0
 8015d6a:	d048      	beq.n	8015dfe <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8015d6c:	785a      	ldrb	r2, [r3, #1]
 8015d6e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8015d72:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8015d76:	4b26      	ldr	r3, [pc, #152]	; (8015e10 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8015d78:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8015d7c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8015d80:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8015d84:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8015d86:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8015d8a:	9107      	str	r1, [sp, #28]
 8015d8c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8015d90:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8015d94:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8015d98:	681a      	ldr	r2, [r3, #0]
 8015d9a:	f88d 8020 	strb.w	r8, [sp, #32]
 8015d9e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8015da2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8015da6:	9609      	str	r6, [sp, #36]	; 0x24
 8015da8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8015dac:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8015db0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8015db4:	b10b      	cbz	r3, 8015dba <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8015db6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8015db8:	b905      	cbnz	r5, 8015dbc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8015dba:	6895      	ldr	r5, [r2, #8]
 8015dbc:	ae05      	add	r6, sp, #20
 8015dbe:	4621      	mov	r1, r4
 8015dc0:	4630      	mov	r0, r6
 8015dc2:	f003 ff71 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015dc6:	4b13      	ldr	r3, [pc, #76]	; (8015e14 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8015dc8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8015dca:	6818      	ldr	r0, [r3, #0]
 8015dcc:	f7f4 fc5c 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 8015dd0:	6823      	ldr	r3, [r4, #0]
 8015dd2:	4680      	mov	r8, r0
 8015dd4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8015dd6:	4620      	mov	r0, r4
 8015dd8:	4798      	blx	r3
 8015dda:	6823      	ldr	r3, [r4, #0]
 8015ddc:	4681      	mov	r9, r0
 8015dde:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8015de2:	4620      	mov	r0, r4
 8015de4:	4798      	blx	r3
 8015de6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8015dea:	ab07      	add	r3, sp, #28
 8015dec:	9300      	str	r3, [sp, #0]
 8015dee:	f8cd 8004 	str.w	r8, [sp, #4]
 8015df2:	463b      	mov	r3, r7
 8015df4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015df8:	4628      	mov	r0, r5
 8015dfa:	f7f4 fbf7 	bl	800a5ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8015dfe:	b00d      	add	sp, #52	; 0x34
 8015e00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015e04:	20013898 	.word	0x20013898
 8015e08:	20013894 	.word	0x20013894
 8015e0c:	2001389c 	.word	0x2001389c
 8015e10:	2001383c 	.word	0x2001383c
 8015e14:	200138a0 	.word	0x200138a0

08015e18 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8015e18:	4770      	bx	lr

08015e1a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8015e1a:	4770      	bx	lr

08015e1c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8015e1c:	b510      	push	{r4, lr}
 8015e1e:	213c      	movs	r1, #60	; 0x3c
 8015e20:	4604      	mov	r4, r0
 8015e22:	f016 fea6 	bl	802cb72 <_ZdlPvj>
 8015e26:	4620      	mov	r0, r4
 8015e28:	bd10      	pop	{r4, pc}

08015e2a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8015e2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e2e:	461c      	mov	r4, r3
 8015e30:	4606      	mov	r6, r0
 8015e32:	9f06      	ldr	r7, [sp, #24]
 8015e34:	f7ff febf 	bl	8015bb6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8015e38:	8823      	ldrh	r3, [r4, #0]
 8015e3a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8015e3c:	883b      	ldrh	r3, [r7, #0]
 8015e3e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8015e40:	4638      	mov	r0, r7
 8015e42:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8015e46:	f006 f9fb 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015e4a:	f04f 0802 	mov.w	r8, #2
 8015e4e:	fb95 f5f8 	sdiv	r5, r5, r8
 8015e52:	b2ad      	uxth	r5, r5
 8015e54:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e58:	1a2d      	subs	r5, r5, r0
 8015e5a:	8735      	strh	r5, [r6, #56]	; 0x38
 8015e5c:	4638      	mov	r0, r7
 8015e5e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8015e62:	fb94 f4f8 	sdiv	r4, r4, r8
 8015e66:	f006 fa1f 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015e6a:	b2a4      	uxth	r4, r4
 8015e6c:	fb90 f0f8 	sdiv	r0, r0, r8
 8015e70:	1a24      	subs	r4, r4, r0
 8015e72:	8774      	strh	r4, [r6, #58]	; 0x3a
 8015e74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08015e78 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8015e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e7c:	4604      	mov	r4, r0
 8015e7e:	b08c      	sub	sp, #48	; 0x30
 8015e80:	460d      	mov	r5, r1
 8015e82:	f7ff fedb 	bl	8015c3c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8015e86:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8015e8a:	2b00      	cmp	r3, #0
 8015e8c:	d05d      	beq.n	8015f4a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8015e8e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015e90:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015e94:	a805      	add	r0, sp, #20
 8015e96:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8015e9a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8015e9e:	f006 f9cf 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015ea2:	4606      	mov	r6, r0
 8015ea4:	a805      	add	r0, sp, #20
 8015ea6:	f006 f9ff 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015eaa:	6869      	ldr	r1, [r5, #4]
 8015eac:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015eb0:	6828      	ldr	r0, [r5, #0]
 8015eb2:	f8ad 8018 	strh.w	r8, [sp, #24]
 8015eb6:	ab08      	add	r3, sp, #32
 8015eb8:	ad08      	add	r5, sp, #32
 8015eba:	c303      	stmia	r3!, {r0, r1}
 8015ebc:	a906      	add	r1, sp, #24
 8015ebe:	4628      	mov	r0, r5
 8015ec0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8015ec4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8015ec8:	f7fc fe18 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8015ecc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015ed0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015ed4:	429a      	cmp	r2, r3
 8015ed6:	d035      	beq.n	8015f44 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ed8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8015edc:	2b00      	cmp	r3, #0
 8015ede:	dd31      	ble.n	8015f44 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ee0:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8015ee4:	2b00      	cmp	r3, #0
 8015ee6:	dd2d      	ble.n	8015f44 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8015ee8:	2300      	movs	r3, #0
 8015eea:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8015eee:	6823      	ldr	r3, [r4, #0]
 8015ef0:	a90a      	add	r1, sp, #40	; 0x28
 8015ef2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015ef4:	4620      	mov	r0, r4
 8015ef6:	4798      	blx	r3
 8015ef8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015efc:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8015efe:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015f02:	1a9b      	subs	r3, r3, r2
 8015f04:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015f08:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8015f0a:	1ac9      	subs	r1, r1, r3
 8015f0c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8015f10:	490f      	ldr	r1, [pc, #60]	; (8015f50 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8015f12:	6809      	ldr	r1, [r1, #0]
 8015f14:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8015f18:	b108      	cbz	r0, 8015f1e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8015f1a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8015f1c:	b900      	cbnz	r0, 8015f20 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8015f1e:	6888      	ldr	r0, [r1, #8]
 8015f20:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8015f24:	440b      	add	r3, r1
 8015f26:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8015f2a:	2601      	movs	r6, #1
 8015f2c:	440a      	add	r2, r1
 8015f2e:	6801      	ldr	r1, [r0, #0]
 8015f30:	9602      	str	r6, [sp, #8]
 8015f32:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8015f36:	e9cd 5400 	strd	r5, r4, [sp]
 8015f3a:	b21b      	sxth	r3, r3
 8015f3c:	688c      	ldr	r4, [r1, #8]
 8015f3e:	b212      	sxth	r2, r2
 8015f40:	a905      	add	r1, sp, #20
 8015f42:	47a0      	blx	r4
 8015f44:	b00c      	add	sp, #48	; 0x30
 8015f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f4a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8015f4c:	e7a0      	b.n	8015e90 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8015f4e:	bf00      	nop
 8015f50:	2001383c 	.word	0x2001383c

08015f54 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8015f54:	b510      	push	{r4, lr}
 8015f56:	2101      	movs	r1, #1
 8015f58:	2200      	movs	r2, #0
 8015f5a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8015f5e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8015f62:	4c0e      	ldr	r4, [pc, #56]	; (8015f9c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8015f64:	8082      	strh	r2, [r0, #4]
 8015f66:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8015f6a:	80c2      	strh	r2, [r0, #6]
 8015f6c:	8102      	strh	r2, [r0, #8]
 8015f6e:	8142      	strh	r2, [r0, #10]
 8015f70:	8182      	strh	r2, [r0, #12]
 8015f72:	81c2      	strh	r2, [r0, #14]
 8015f74:	8202      	strh	r2, [r0, #16]
 8015f76:	8242      	strh	r2, [r0, #18]
 8015f78:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8015f7c:	61c2      	str	r2, [r0, #28]
 8015f7e:	8402      	strh	r2, [r0, #32]
 8015f80:	8442      	strh	r2, [r0, #34]	; 0x22
 8015f82:	6282      	str	r2, [r0, #40]	; 0x28
 8015f84:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8015f88:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8015f8a:	8601      	strh	r1, [r0, #48]	; 0x30
 8015f8c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8015f90:	6004      	str	r4, [r0, #0]
 8015f92:	8681      	strh	r1, [r0, #52]	; 0x34
 8015f94:	86c1      	strh	r1, [r0, #54]	; 0x36
 8015f96:	8702      	strh	r2, [r0, #56]	; 0x38
 8015f98:	8742      	strh	r2, [r0, #58]	; 0x3a
 8015f9a:	bd10      	pop	{r4, pc}
 8015f9c:	08031c1c 	.word	0x08031c1c

08015fa0 <_ZN8touchgfx5ImageD1Ev>:
 8015fa0:	4770      	bx	lr

08015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8015fa2:	b570      	push	{r4, r5, r6, lr}
 8015fa4:	880b      	ldrh	r3, [r1, #0]
 8015fa6:	84c3      	strh	r3, [r0, #38]	; 0x26
 8015fa8:	4604      	mov	r4, r0
 8015faa:	4608      	mov	r0, r1
 8015fac:	460d      	mov	r5, r1
 8015fae:	f006 f947 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8015fb2:	4606      	mov	r6, r0
 8015fb4:	4628      	mov	r0, r5
 8015fb6:	f006 f977 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8015fba:	6823      	ldr	r3, [r4, #0]
 8015fbc:	4605      	mov	r5, r0
 8015fbe:	4631      	mov	r1, r6
 8015fc0:	4620      	mov	r0, r4
 8015fc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015fc4:	4798      	blx	r3
 8015fc6:	6823      	ldr	r3, [r4, #0]
 8015fc8:	4629      	mov	r1, r5
 8015fca:	4620      	mov	r0, r4
 8015fcc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8015fce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fd2:	4718      	bx	r3

08015fd4 <_ZN8touchgfx5ImageD0Ev>:
 8015fd4:	b510      	push	{r4, lr}
 8015fd6:	212c      	movs	r1, #44	; 0x2c
 8015fd8:	4604      	mov	r4, r0
 8015fda:	f016 fdca 	bl	802cb72 <_ZdlPvj>
 8015fde:	4620      	mov	r0, r4
 8015fe0:	bd10      	pop	{r4, pc}

08015fe2 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8015fe2:	b510      	push	{r4, lr}
 8015fe4:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8015fe8:	2bff      	cmp	r3, #255	; 0xff
 8015fea:	4604      	mov	r4, r0
 8015fec:	d006      	beq.n	8015ffc <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8015fee:	2300      	movs	r3, #0
 8015ff0:	8003      	strh	r3, [r0, #0]
 8015ff2:	8043      	strh	r3, [r0, #2]
 8015ff4:	8083      	strh	r3, [r0, #4]
 8015ff6:	80c3      	strh	r3, [r0, #6]
 8015ff8:	4620      	mov	r0, r4
 8015ffa:	bd10      	pop	{r4, pc}
 8015ffc:	3126      	adds	r1, #38	; 0x26
 8015ffe:	f006 f987 	bl	801c310 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8016002:	e7f9      	b.n	8015ff8 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08016004 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8016004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016008:	4604      	mov	r4, r0
 801600a:	b088      	sub	sp, #32
 801600c:	f854 3b26 	ldr.w	r3, [r4], #38
 8016010:	2500      	movs	r5, #0
 8016012:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016014:	460f      	mov	r7, r1
 8016016:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801601a:	a904      	add	r1, sp, #16
 801601c:	4606      	mov	r6, r0
 801601e:	4798      	blx	r3
 8016020:	4620      	mov	r0, r4
 8016022:	f006 f90d 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016026:	4680      	mov	r8, r0
 8016028:	4620      	mov	r0, r4
 801602a:	f006 f93d 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801602e:	9506      	str	r5, [sp, #24]
 8016030:	ad06      	add	r5, sp, #24
 8016032:	f8ad 001e 	strh.w	r0, [sp, #30]
 8016036:	4639      	mov	r1, r7
 8016038:	4628      	mov	r0, r5
 801603a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801603e:	f7fc fd5d 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8016042:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016046:	2b00      	cmp	r3, #0
 8016048:	dd19      	ble.n	801607e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801604a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801604e:	2b00      	cmp	r3, #0
 8016050:	dd15      	ble.n	801607e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8016052:	4b0c      	ldr	r3, [pc, #48]	; (8016084 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8016054:	681b      	ldr	r3, [r3, #0]
 8016056:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801605a:	b10a      	cbz	r2, 8016060 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801605c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801605e:	b900      	cbnz	r0, 8016062 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8016060:	6898      	ldr	r0, [r3, #8]
 8016062:	6801      	ldr	r1, [r0, #0]
 8016064:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8016068:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801606c:	2701      	movs	r7, #1
 801606e:	9702      	str	r7, [sp, #8]
 8016070:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8016074:	e9cd 5600 	strd	r5, r6, [sp]
 8016078:	688d      	ldr	r5, [r1, #8]
 801607a:	4621      	mov	r1, r4
 801607c:	47a8      	blx	r5
 801607e:	b008      	add	sp, #32
 8016080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016084:	2001383c 	.word	0x2001383c

08016088 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8016088:	4770      	bx	lr

0801608a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801608a:	b510      	push	{r4, lr}
 801608c:	2148      	movs	r1, #72	; 0x48
 801608e:	4604      	mov	r4, r0
 8016090:	f016 fd6f 	bl	802cb72 <_ZdlPvj>
 8016094:	4620      	mov	r0, r4
 8016096:	bd10      	pop	{r4, pc}

08016098 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8016098:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801609c:	b08d      	sub	sp, #52	; 0x34
 801609e:	4604      	mov	r4, r0
 80160a0:	460f      	mov	r7, r1
 80160a2:	f7ff fdcb 	bl	8015c3c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80160a6:	4a55      	ldr	r2, [pc, #340]	; (80161fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80160a8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80160aa:	8812      	ldrh	r2, [r2, #0]
 80160ac:	429a      	cmp	r2, r3
 80160ae:	f240 8082 	bls.w	80161b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80160b2:	4d53      	ldr	r5, [pc, #332]	; (8016200 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80160b4:	682a      	ldr	r2, [r5, #0]
 80160b6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80160ba:	4b52      	ldr	r3, [pc, #328]	; (8016204 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80160bc:	681b      	ldr	r3, [r3, #0]
 80160be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80160c2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80160c6:	2200      	movs	r2, #0
 80160c8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80160cc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80160d0:	2a03      	cmp	r2, #3
 80160d2:	d811      	bhi.n	80160f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80160d4:	e8df f002 	tbb	[pc, r2]
 80160d8:	89727902 	.word	0x89727902
 80160dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80160e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80160e4:	1ad2      	subs	r2, r2, r3
 80160e6:	2002      	movs	r0, #2
 80160e8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80160ec:	fb92 f2f0 	sdiv	r2, r2, r0
 80160f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80160f4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80160f8:	f10d 080c 	add.w	r8, sp, #12
 80160fc:	e898 0003 	ldmia.w	r8, {r0, r1}
 8016100:	f10d 0914 	add.w	r9, sp, #20
 8016104:	e889 0003 	stmia.w	r9, {r0, r1}
 8016108:	4639      	mov	r1, r7
 801610a:	4648      	mov	r0, r9
 801610c:	f7fc fcf6 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8016110:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016114:	2b00      	cmp	r3, #0
 8016116:	dd4e      	ble.n	80161b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016118:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801611c:	2b00      	cmp	r3, #0
 801611e:	dd4a      	ble.n	80161b6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8016120:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016124:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8016128:	1a9b      	subs	r3, r3, r2
 801612a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801612e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8016132:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8016136:	1a9b      	subs	r3, r3, r2
 8016138:	f8ad 3016 	strh.w	r3, [sp, #22]
 801613c:	6823      	ldr	r3, [r4, #0]
 801613e:	4641      	mov	r1, r8
 8016140:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016142:	4620      	mov	r0, r4
 8016144:	4798      	blx	r3
 8016146:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801614a:	2b00      	cmp	r3, #0
 801614c:	d053      	beq.n	80161f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801614e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8016150:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8016152:	682b      	ldr	r3, [r5, #0]
 8016154:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8016158:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801615c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8016160:	785b      	ldrb	r3, [r3, #1]
 8016162:	9209      	str	r2, [sp, #36]	; 0x24
 8016164:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8016168:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801616c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8016170:	2300      	movs	r3, #0
 8016172:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8016176:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801617a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801617e:	4b22      	ldr	r3, [pc, #136]	; (8016208 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8016180:	9607      	str	r6, [sp, #28]
 8016182:	681b      	ldr	r3, [r3, #0]
 8016184:	f88d 5020 	strb.w	r5, [sp, #32]
 8016188:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801618c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8016190:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8016194:	b10a      	cbz	r2, 801619a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8016196:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8016198:	b904      	cbnz	r4, 801619c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801619a:	689c      	ldr	r4, [r3, #8]
 801619c:	4b1b      	ldr	r3, [pc, #108]	; (801620c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801619e:	6818      	ldr	r0, [r3, #0]
 80161a0:	f7f4 fa72 	bl	800a688 <_ZNK8touchgfx5Texts7getTextEt>
 80161a4:	ab07      	add	r3, sp, #28
 80161a6:	9001      	str	r0, [sp, #4]
 80161a8:	9300      	str	r3, [sp, #0]
 80161aa:	e898 0006 	ldmia.w	r8, {r1, r2}
 80161ae:	464b      	mov	r3, r9
 80161b0:	4620      	mov	r0, r4
 80161b2:	f7f4 fa1b 	bl	800a5ec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80161b6:	b00d      	add	sp, #52	; 0x34
 80161b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80161bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80161c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80161c4:	1ad2      	subs	r2, r2, r3
 80161c6:	3201      	adds	r2, #1
 80161c8:	e78d      	b.n	80160e6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80161ca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161ce:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80161d2:	1ad2      	subs	r2, r2, r3
 80161d4:	3201      	adds	r2, #1
 80161d6:	2002      	movs	r0, #2
 80161d8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80161dc:	fb92 f2f0 	sdiv	r2, r2, r0
 80161e0:	f8ad 1012 	strh.w	r1, [sp, #18]
 80161e4:	f8ad 200c 	strh.w	r2, [sp, #12]
 80161e8:	e786      	b.n	80160f8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80161ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80161ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80161f2:	1ad2      	subs	r2, r2, r3
 80161f4:	e7ef      	b.n	80161d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80161f6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80161f8:	e7aa      	b.n	8016150 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 80161fa:	bf00      	nop
 80161fc:	20013898 	.word	0x20013898
 8016200:	20013894 	.word	0x20013894
 8016204:	2001389c 	.word	0x2001389c
 8016208:	2001383c 	.word	0x2001383c
 801620c:	200138a0 	.word	0x200138a0

08016210 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8016210:	b510      	push	{r4, lr}
 8016212:	2101      	movs	r1, #1
 8016214:	4c13      	ldr	r4, [pc, #76]	; (8016264 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8016216:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801621a:	2200      	movs	r2, #0
 801621c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8016220:	6004      	str	r4, [r0, #0]
 8016222:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8016226:	4c10      	ldr	r4, [pc, #64]	; (8016268 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8016228:	8082      	strh	r2, [r0, #4]
 801622a:	80c2      	strh	r2, [r0, #6]
 801622c:	8102      	strh	r2, [r0, #8]
 801622e:	8142      	strh	r2, [r0, #10]
 8016230:	8182      	strh	r2, [r0, #12]
 8016232:	81c2      	strh	r2, [r0, #14]
 8016234:	8202      	strh	r2, [r0, #16]
 8016236:	8242      	strh	r2, [r0, #18]
 8016238:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801623c:	61c2      	str	r2, [r0, #28]
 801623e:	8402      	strh	r2, [r0, #32]
 8016240:	8442      	strh	r2, [r0, #34]	; 0x22
 8016242:	6282      	str	r2, [r0, #40]	; 0x28
 8016244:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8016248:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801624a:	8601      	strh	r1, [r0, #48]	; 0x30
 801624c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8016250:	6344      	str	r4, [r0, #52]	; 0x34
 8016252:	8701      	strh	r1, [r0, #56]	; 0x38
 8016254:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8016258:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801625c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8016260:	bd10      	pop	{r4, pc}
 8016262:	bf00      	nop
 8016264:	08031d00 	.word	0x08031d00
 8016268:	0802f4f4 	.word	0x0802f4f4

0801626c <_ZN8touchgfx7OutlineD1Ev>:
 801626c:	4770      	bx	lr

0801626e <_ZN8touchgfx7OutlineD0Ev>:
 801626e:	b510      	push	{r4, lr}
 8016270:	2130      	movs	r1, #48	; 0x30
 8016272:	4604      	mov	r4, r0
 8016274:	f016 fc7d 	bl	802cb72 <_ZdlPvj>
 8016278:	4620      	mov	r0, r4
 801627a:	bd10      	pop	{r4, pc}

0801627c <_ZN8touchgfx7Outline5resetEv>:
 801627c:	b510      	push	{r4, lr}
 801627e:	4604      	mov	r4, r0
 8016280:	f000 fe96 	bl	8016fb0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8016284:	60e0      	str	r0, [r4, #12]
 8016286:	f000 fe99 	bl	8016fbc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801628a:	68e3      	ldr	r3, [r4, #12]
 801628c:	6123      	str	r3, [r4, #16]
 801628e:	08c0      	lsrs	r0, r0, #3
 8016290:	2200      	movs	r2, #0
 8016292:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8016296:	3801      	subs	r0, #1
 8016298:	6060      	str	r0, [r4, #4]
 801629a:	60a2      	str	r2, [r4, #8]
 801629c:	8019      	strh	r1, [r3, #0]
 801629e:	8059      	strh	r1, [r3, #2]
 80162a0:	809a      	strh	r2, [r3, #4]
 80162a2:	80da      	strh	r2, [r3, #6]
 80162a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80162a6:	f023 0301 	bic.w	r3, r3, #1
 80162aa:	f043 0302 	orr.w	r3, r3, #2
 80162ae:	6263      	str	r3, [r4, #36]	; 0x24
 80162b0:	bd10      	pop	{r4, pc}
	...

080162b4 <_ZN8touchgfx7OutlineC1Ev>:
 80162b4:	b510      	push	{r4, lr}
 80162b6:	4b0a      	ldr	r3, [pc, #40]	; (80162e0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80162b8:	6003      	str	r3, [r0, #0]
 80162ba:	2300      	movs	r3, #0
 80162bc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80162c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80162c4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80162c8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80162cc:	6243      	str	r3, [r0, #36]	; 0x24
 80162ce:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80162d2:	4604      	mov	r4, r0
 80162d4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80162d8:	f7ff ffd0 	bl	801627c <_ZN8touchgfx7Outline5resetEv>
 80162dc:	4620      	mov	r0, r4
 80162de:	bd10      	pop	{r4, pc}
 80162e0:	08031d74 	.word	0x08031d74

080162e4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80162e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162e8:	b093      	sub	sp, #76	; 0x4c
 80162ea:	1156      	asrs	r6, r2, #5
 80162ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80162ee:	9305      	str	r3, [sp, #20]
 80162f0:	f004 051f 	and.w	r5, r4, #31
 80162f4:	1153      	asrs	r3, r2, #5
 80162f6:	9504      	str	r5, [sp, #16]
 80162f8:	1165      	asrs	r5, r4, #5
 80162fa:	9303      	str	r3, [sp, #12]
 80162fc:	42ae      	cmp	r6, r5
 80162fe:	ea4f 1364 	mov.w	r3, r4, asr #5
 8016302:	9306      	str	r3, [sp, #24]
 8016304:	f002 031f 	and.w	r3, r2, #31
 8016308:	f040 80f8 	bne.w	80164fc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801630c:	9c04      	ldr	r4, [sp, #16]
 801630e:	9a05      	ldr	r2, [sp, #20]
 8016310:	42a3      	cmp	r3, r4
 8016312:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8016316:	6902      	ldr	r2, [r0, #16]
 8016318:	d125      	bne.n	8016366 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801631a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801631e:	459e      	cmp	lr, r3
 8016320:	d103      	bne.n	801632a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8016322:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016326:	429e      	cmp	r6, r3
 8016328:	d035      	beq.n	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801632a:	88d1      	ldrh	r1, [r2, #6]
 801632c:	8893      	ldrh	r3, [r2, #4]
 801632e:	430b      	orrs	r3, r1
 8016330:	d010      	beq.n	8016354 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016332:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8016336:	2b00      	cmp	r3, #0
 8016338:	db0c      	blt.n	8016354 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801633a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801633c:	428b      	cmp	r3, r1
 801633e:	da09      	bge.n	8016354 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8016340:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016344:	428b      	cmp	r3, r1
 8016346:	bf38      	it	cc
 8016348:	3208      	addcc	r2, #8
 801634a:	f103 0301 	add.w	r3, r3, #1
 801634e:	bf38      	it	cc
 8016350:	6102      	strcc	r2, [r0, #16]
 8016352:	6083      	str	r3, [r0, #8]
 8016354:	6903      	ldr	r3, [r0, #16]
 8016356:	9a03      	ldr	r2, [sp, #12]
 8016358:	f8a3 e000 	strh.w	lr, [r3]
 801635c:	805a      	strh	r2, [r3, #2]
 801635e:	2200      	movs	r2, #0
 8016360:	809a      	strh	r2, [r3, #4]
 8016362:	80da      	strh	r2, [r3, #6]
 8016364:	e017      	b.n	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016366:	9c05      	ldr	r4, [sp, #20]
 8016368:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801636c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8016370:	f004 041f 	and.w	r4, r4, #31
 8016374:	114e      	asrs	r6, r1, #5
 8016376:	9402      	str	r4, [sp, #8]
 8016378:	9c04      	ldr	r4, [sp, #16]
 801637a:	4576      	cmp	r6, lr
 801637c:	f001 0c1f 	and.w	ip, r1, #31
 8016380:	eba4 0403 	sub.w	r4, r4, r3
 8016384:	d10a      	bne.n	801639c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8016386:	9b02      	ldr	r3, [sp, #8]
 8016388:	449c      	add	ip, r3
 801638a:	44a0      	add	r8, r4
 801638c:	fb04 a40c 	mla	r4, r4, ip, sl
 8016390:	f8a2 8004 	strh.w	r8, [r2, #4]
 8016394:	80d4      	strh	r4, [r2, #6]
 8016396:	b013      	add	sp, #76	; 0x4c
 8016398:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801639c:	9d05      	ldr	r5, [sp, #20]
 801639e:	1a69      	subs	r1, r5, r1
 80163a0:	bf5b      	ittet	pl
 80163a2:	f1cc 0520 	rsbpl	r5, ip, #32
 80163a6:	436c      	mulpl	r4, r5
 80163a8:	2500      	movmi	r5, #0
 80163aa:	2520      	movpl	r5, #32
 80163ac:	bf44      	itt	mi
 80163ae:	fb04 f40c 	mulmi.w	r4, r4, ip
 80163b2:	4249      	negmi	r1, r1
 80163b4:	9501      	str	r5, [sp, #4]
 80163b6:	9f01      	ldr	r7, [sp, #4]
 80163b8:	fb94 f5f1 	sdiv	r5, r4, r1
 80163bc:	fb01 4415 	mls	r4, r1, r5, r4
 80163c0:	bf54      	ite	pl
 80163c2:	f04f 0901 	movpl.w	r9, #1
 80163c6:	f04f 39ff 	movmi.w	r9, #4294967295
 80163ca:	2c00      	cmp	r4, #0
 80163cc:	bfb8      	it	lt
 80163ce:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80163d2:	44bc      	add	ip, r7
 80163d4:	44a8      	add	r8, r5
 80163d6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80163da:	f8a2 8004 	strh.w	r8, [r2, #4]
 80163de:	f8a2 c006 	strh.w	ip, [r2, #6]
 80163e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80163e6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80163ea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80163ee:	bfb8      	it	lt
 80163f0:	1864      	addlt	r4, r4, r1
 80163f2:	ea58 0202 	orrs.w	r2, r8, r2
 80163f6:	444e      	add	r6, r9
 80163f8:	d011      	beq.n	801641e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80163fa:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 80163fe:	f1b8 0f00 	cmp.w	r8, #0
 8016402:	db0c      	blt.n	801641e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8016404:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8016406:	4590      	cmp	r8, r2
 8016408:	da09      	bge.n	801641e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801640a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801640e:	4590      	cmp	r8, r2
 8016410:	bf3c      	itt	cc
 8016412:	f10c 0208 	addcc.w	r2, ip, #8
 8016416:	6102      	strcc	r2, [r0, #16]
 8016418:	f108 0201 	add.w	r2, r8, #1
 801641c:	6082      	str	r2, [r0, #8]
 801641e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016422:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016426:	f8ac 6000 	strh.w	r6, [ip]
 801642a:	2700      	movs	r7, #0
 801642c:	45b6      	cmp	lr, r6
 801642e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8016432:	f8ac 7004 	strh.w	r7, [ip, #4]
 8016436:	f8ac 7006 	strh.w	r7, [ip, #6]
 801643a:	442b      	add	r3, r5
 801643c:	d04d      	beq.n	80164da <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801643e:	9f04      	ldr	r7, [sp, #16]
 8016440:	1aff      	subs	r7, r7, r3
 8016442:	443d      	add	r5, r7
 8016444:	016d      	lsls	r5, r5, #5
 8016446:	fb95 f8f1 	sdiv	r8, r5, r1
 801644a:	fb01 5518 	mls	r5, r1, r8, r5
 801644e:	2d00      	cmp	r5, #0
 8016450:	bfb8      	it	lt
 8016452:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016456:	f108 0701 	add.w	r7, r8, #1
 801645a:	bfb8      	it	lt
 801645c:	186d      	addlt	r5, r5, r1
 801645e:	1a64      	subs	r4, r4, r1
 8016460:	9703      	str	r7, [sp, #12]
 8016462:	f04f 0a00 	mov.w	sl, #0
 8016466:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801646a:	1964      	adds	r4, r4, r5
 801646c:	bf58      	it	pl
 801646e:	9f03      	ldrpl	r7, [sp, #12]
 8016470:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016474:	bf48      	it	mi
 8016476:	4647      	movmi	r7, r8
 8016478:	44bb      	add	fp, r7
 801647a:	f8ac b004 	strh.w	fp, [ip, #4]
 801647e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016482:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016486:	f8ac b006 	strh.w	fp, [ip, #6]
 801648a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801648e:	443b      	add	r3, r7
 8016490:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016494:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016498:	bf58      	it	pl
 801649a:	1a64      	subpl	r4, r4, r1
 801649c:	ea5b 0707 	orrs.w	r7, fp, r7
 80164a0:	444e      	add	r6, r9
 80164a2:	d011      	beq.n	80164c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164a4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80164a8:	f1bb 0f00 	cmp.w	fp, #0
 80164ac:	db0c      	blt.n	80164c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164ae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80164b0:	45bb      	cmp	fp, r7
 80164b2:	da09      	bge.n	80164c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80164b4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80164b8:	45bb      	cmp	fp, r7
 80164ba:	bf3c      	itt	cc
 80164bc:	f10c 0708 	addcc.w	r7, ip, #8
 80164c0:	6107      	strcc	r7, [r0, #16]
 80164c2:	f10b 0701 	add.w	r7, fp, #1
 80164c6:	6087      	str	r7, [r0, #8]
 80164c8:	6907      	ldr	r7, [r0, #16]
 80164ca:	45b6      	cmp	lr, r6
 80164cc:	803e      	strh	r6, [r7, #0]
 80164ce:	807a      	strh	r2, [r7, #2]
 80164d0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80164d4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80164d8:	d1c5      	bne.n	8016466 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80164da:	9a04      	ldr	r2, [sp, #16]
 80164dc:	1ad3      	subs	r3, r2, r3
 80164de:	6902      	ldr	r2, [r0, #16]
 80164e0:	8891      	ldrh	r1, [r2, #4]
 80164e2:	88d6      	ldrh	r6, [r2, #6]
 80164e4:	4419      	add	r1, r3
 80164e6:	8091      	strh	r1, [r2, #4]
 80164e8:	9902      	ldr	r1, [sp, #8]
 80164ea:	f101 0c20 	add.w	ip, r1, #32
 80164ee:	9901      	ldr	r1, [sp, #4]
 80164f0:	ebac 0c01 	sub.w	ip, ip, r1
 80164f4:	fb03 630c 	mla	r3, r3, ip, r6
 80164f8:	80d3      	strh	r3, [r2, #6]
 80164fa:	e74c      	b.n	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80164fc:	9d05      	ldr	r5, [sp, #20]
 80164fe:	1aa2      	subs	r2, r4, r2
 8016500:	eba5 0501 	sub.w	r5, r5, r1
 8016504:	9508      	str	r5, [sp, #32]
 8016506:	9202      	str	r2, [sp, #8]
 8016508:	f140 8128 	bpl.w	801675c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801650c:	9a03      	ldr	r2, [sp, #12]
 801650e:	2a00      	cmp	r2, #0
 8016510:	f6ff af41 	blt.w	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016514:	9a02      	ldr	r2, [sp, #8]
 8016516:	4252      	negs	r2, r2
 8016518:	9202      	str	r2, [sp, #8]
 801651a:	9a06      	ldr	r2, [sp, #24]
 801651c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8016520:	f04f 34ff 	mov.w	r4, #4294967295
 8016524:	9206      	str	r2, [sp, #24]
 8016526:	462a      	mov	r2, r5
 8016528:	940b      	str	r4, [sp, #44]	; 0x2c
 801652a:	435a      	muls	r2, r3
 801652c:	2400      	movs	r4, #0
 801652e:	9d02      	ldr	r5, [sp, #8]
 8016530:	9401      	str	r4, [sp, #4]
 8016532:	9c02      	ldr	r4, [sp, #8]
 8016534:	fb92 f4f4 	sdiv	r4, r2, r4
 8016538:	fb05 2214 	mls	r2, r5, r4, r2
 801653c:	2a00      	cmp	r2, #0
 801653e:	9207      	str	r2, [sp, #28]
 8016540:	bfbc      	itt	lt
 8016542:	1952      	addlt	r2, r2, r5
 8016544:	9207      	strlt	r2, [sp, #28]
 8016546:	9a01      	ldr	r2, [sp, #4]
 8016548:	6905      	ldr	r5, [r0, #16]
 801654a:	bfb8      	it	lt
 801654c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016550:	eb04 0901 	add.w	r9, r4, r1
 8016554:	429a      	cmp	r2, r3
 8016556:	ea4f 1669 	mov.w	r6, r9, asr #5
 801655a:	f040 8112 	bne.w	8016782 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801655e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8016562:	429e      	cmp	r6, r3
 8016564:	d104      	bne.n	8016570 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8016566:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801656a:	9a03      	ldr	r2, [sp, #12]
 801656c:	429a      	cmp	r2, r3
 801656e:	d01b      	beq.n	80165a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8016570:	88ea      	ldrh	r2, [r5, #6]
 8016572:	88ab      	ldrh	r3, [r5, #4]
 8016574:	4313      	orrs	r3, r2
 8016576:	d010      	beq.n	801659a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016578:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801657c:	2a00      	cmp	r2, #0
 801657e:	db0c      	blt.n	801659a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016580:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016582:	429a      	cmp	r2, r3
 8016584:	da09      	bge.n	801659a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8016586:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801658a:	429a      	cmp	r2, r3
 801658c:	bf38      	it	cc
 801658e:	3508      	addcc	r5, #8
 8016590:	f102 0201 	add.w	r2, r2, #1
 8016594:	bf38      	it	cc
 8016596:	6105      	strcc	r5, [r0, #16]
 8016598:	6082      	str	r2, [r0, #8]
 801659a:	6903      	ldr	r3, [r0, #16]
 801659c:	9a03      	ldr	r2, [sp, #12]
 801659e:	805a      	strh	r2, [r3, #2]
 80165a0:	2200      	movs	r2, #0
 80165a2:	801e      	strh	r6, [r3, #0]
 80165a4:	809a      	strh	r2, [r3, #4]
 80165a6:	80da      	strh	r2, [r3, #6]
 80165a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80165aa:	9a03      	ldr	r2, [sp, #12]
 80165ac:	6901      	ldr	r1, [r0, #16]
 80165ae:	441a      	add	r2, r3
 80165b0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80165b4:	42b3      	cmp	r3, r6
 80165b6:	d103      	bne.n	80165c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80165b8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80165bc:	429a      	cmp	r2, r3
 80165be:	d01a      	beq.n	80165f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80165c0:	88cc      	ldrh	r4, [r1, #6]
 80165c2:	888b      	ldrh	r3, [r1, #4]
 80165c4:	4323      	orrs	r3, r4
 80165c6:	d010      	beq.n	80165ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165c8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80165cc:	2c00      	cmp	r4, #0
 80165ce:	db0c      	blt.n	80165ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165d0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80165d2:	429c      	cmp	r4, r3
 80165d4:	da09      	bge.n	80165ea <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80165d6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80165da:	429c      	cmp	r4, r3
 80165dc:	bf38      	it	cc
 80165de:	3108      	addcc	r1, #8
 80165e0:	f104 0401 	add.w	r4, r4, #1
 80165e4:	bf38      	it	cc
 80165e6:	6101      	strcc	r1, [r0, #16]
 80165e8:	6084      	str	r4, [r0, #8]
 80165ea:	6903      	ldr	r3, [r0, #16]
 80165ec:	2100      	movs	r1, #0
 80165ee:	801e      	strh	r6, [r3, #0]
 80165f0:	805a      	strh	r2, [r3, #2]
 80165f2:	8099      	strh	r1, [r3, #4]
 80165f4:	80d9      	strh	r1, [r3, #6]
 80165f6:	9b06      	ldr	r3, [sp, #24]
 80165f8:	4293      	cmp	r3, r2
 80165fa:	f000 8082 	beq.w	8016702 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 80165fe:	9b08      	ldr	r3, [sp, #32]
 8016600:	9c02      	ldr	r4, [sp, #8]
 8016602:	9902      	ldr	r1, [sp, #8]
 8016604:	015b      	lsls	r3, r3, #5
 8016606:	fb93 f1f1 	sdiv	r1, r3, r1
 801660a:	fb04 3311 	mls	r3, r4, r1, r3
 801660e:	2b00      	cmp	r3, #0
 8016610:	9103      	str	r1, [sp, #12]
 8016612:	9308      	str	r3, [sp, #32]
 8016614:	da04      	bge.n	8016620 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8016616:	1e4b      	subs	r3, r1, #1
 8016618:	9303      	str	r3, [sp, #12]
 801661a:	9b08      	ldr	r3, [sp, #32]
 801661c:	4423      	add	r3, r4
 801661e:	9308      	str	r3, [sp, #32]
 8016620:	9b07      	ldr	r3, [sp, #28]
 8016622:	9902      	ldr	r1, [sp, #8]
 8016624:	1a5b      	subs	r3, r3, r1
 8016626:	9307      	str	r3, [sp, #28]
 8016628:	9b01      	ldr	r3, [sp, #4]
 801662a:	f1c3 0320 	rsb	r3, r3, #32
 801662e:	930e      	str	r3, [sp, #56]	; 0x38
 8016630:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016632:	9b01      	ldr	r3, [sp, #4]
 8016634:	1a5b      	subs	r3, r3, r1
 8016636:	464f      	mov	r7, r9
 8016638:	930a      	str	r3, [sp, #40]	; 0x28
 801663a:	2600      	movs	r6, #0
 801663c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8016640:	185b      	adds	r3, r3, r1
 8016642:	bf58      	it	pl
 8016644:	9902      	ldrpl	r1, [sp, #8]
 8016646:	9307      	str	r3, [sp, #28]
 8016648:	bf5d      	ittte	pl
 801664a:	1a5b      	subpl	r3, r3, r1
 801664c:	9307      	strpl	r3, [sp, #28]
 801664e:	9b03      	ldrpl	r3, [sp, #12]
 8016650:	9903      	ldrmi	r1, [sp, #12]
 8016652:	bf58      	it	pl
 8016654:	1c59      	addpl	r1, r3, #1
 8016656:	4489      	add	r9, r1
 8016658:	2a00      	cmp	r2, #0
 801665a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801665e:	db2e      	blt.n	80166be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016660:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8016662:	4293      	cmp	r3, r2
 8016664:	dd2b      	ble.n	80166be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016666:	9c01      	ldr	r4, [sp, #4]
 8016668:	6905      	ldr	r5, [r0, #16]
 801666a:	46a0      	mov	r8, r4
 801666c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801666e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8016672:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8016676:	45a0      	cmp	r8, r4
 8016678:	f040 814f 	bne.w	801691a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801667c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8016680:	4551      	cmp	r1, sl
 8016682:	d103      	bne.n	801668c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8016684:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016688:	4291      	cmp	r1, r2
 801668a:	d018      	beq.n	80166be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801668c:	ea5c 010e 	orrs.w	r1, ip, lr
 8016690:	d00f      	beq.n	80166b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8016692:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8016696:	2900      	cmp	r1, #0
 8016698:	db0b      	blt.n	80166b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801669a:	428b      	cmp	r3, r1
 801669c:	dd09      	ble.n	80166b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801669e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80166a2:	4299      	cmp	r1, r3
 80166a4:	bf38      	it	cc
 80166a6:	3508      	addcc	r5, #8
 80166a8:	f101 0101 	add.w	r1, r1, #1
 80166ac:	bf38      	it	cc
 80166ae:	6105      	strcc	r5, [r0, #16]
 80166b0:	6081      	str	r1, [r0, #8]
 80166b2:	6903      	ldr	r3, [r0, #16]
 80166b4:	f8a3 a000 	strh.w	sl, [r3]
 80166b8:	805a      	strh	r2, [r3, #2]
 80166ba:	809e      	strh	r6, [r3, #4]
 80166bc:	80de      	strh	r6, [r3, #6]
 80166be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166c0:	6901      	ldr	r1, [r0, #16]
 80166c2:	441a      	add	r2, r3
 80166c4:	88cc      	ldrh	r4, [r1, #6]
 80166c6:	888b      	ldrh	r3, [r1, #4]
 80166c8:	4323      	orrs	r3, r4
 80166ca:	d010      	beq.n	80166ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166cc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80166d0:	2c00      	cmp	r4, #0
 80166d2:	db0c      	blt.n	80166ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166d4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80166d6:	429c      	cmp	r4, r3
 80166d8:	da09      	bge.n	80166ee <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80166da:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80166de:	429c      	cmp	r4, r3
 80166e0:	bf38      	it	cc
 80166e2:	3108      	addcc	r1, #8
 80166e4:	f104 0401 	add.w	r4, r4, #1
 80166e8:	bf38      	it	cc
 80166ea:	6101      	strcc	r1, [r0, #16]
 80166ec:	6084      	str	r4, [r0, #8]
 80166ee:	6903      	ldr	r3, [r0, #16]
 80166f0:	f8a3 a000 	strh.w	sl, [r3]
 80166f4:	805a      	strh	r2, [r3, #2]
 80166f6:	809e      	strh	r6, [r3, #4]
 80166f8:	80de      	strh	r6, [r3, #6]
 80166fa:	9b06      	ldr	r3, [sp, #24]
 80166fc:	4293      	cmp	r3, r2
 80166fe:	464f      	mov	r7, r9
 8016700:	d19c      	bne.n	801663c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8016702:	9b01      	ldr	r3, [sp, #4]
 8016704:	6907      	ldr	r7, [r0, #16]
 8016706:	f1c3 0620 	rsb	r6, r3, #32
 801670a:	9b05      	ldr	r3, [sp, #20]
 801670c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8016710:	9b04      	ldr	r3, [sp, #16]
 8016712:	429e      	cmp	r6, r3
 8016714:	f040 81cc 	bne.w	8016ab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8016718:	f9b7 3000 	ldrsh.w	r3, [r7]
 801671c:	459e      	cmp	lr, r3
 801671e:	d104      	bne.n	801672a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8016720:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016724:	429a      	cmp	r2, r3
 8016726:	f43f ae36 	beq.w	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801672a:	88f9      	ldrh	r1, [r7, #6]
 801672c:	88bb      	ldrh	r3, [r7, #4]
 801672e:	430b      	orrs	r3, r1
 8016730:	d010      	beq.n	8016754 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016732:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8016736:	2b00      	cmp	r3, #0
 8016738:	db0c      	blt.n	8016754 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801673a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801673c:	428b      	cmp	r3, r1
 801673e:	da09      	bge.n	8016754 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8016740:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8016744:	428b      	cmp	r3, r1
 8016746:	bf38      	it	cc
 8016748:	3708      	addcc	r7, #8
 801674a:	f103 0301 	add.w	r3, r3, #1
 801674e:	bf38      	it	cc
 8016750:	6107      	strcc	r7, [r0, #16]
 8016752:	6083      	str	r3, [r0, #8]
 8016754:	6903      	ldr	r3, [r0, #16]
 8016756:	f8a3 e000 	strh.w	lr, [r3]
 801675a:	e5ff      	b.n	801635c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801675c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801675e:	9c03      	ldr	r4, [sp, #12]
 8016760:	42a2      	cmp	r2, r4
 8016762:	f6ff ae18 	blt.w	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016766:	9c06      	ldr	r4, [sp, #24]
 8016768:	42a2      	cmp	r2, r4
 801676a:	bfb8      	it	lt
 801676c:	3201      	addlt	r2, #1
 801676e:	9c08      	ldr	r4, [sp, #32]
 8016770:	bfb8      	it	lt
 8016772:	9206      	strlt	r2, [sp, #24]
 8016774:	f1c3 0220 	rsb	r2, r3, #32
 8016778:	4362      	muls	r2, r4
 801677a:	2401      	movs	r4, #1
 801677c:	940b      	str	r4, [sp, #44]	; 0x2c
 801677e:	2420      	movs	r4, #32
 8016780:	e6d5      	b.n	801652e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8016782:	f009 021f 	and.w	r2, r9, #31
 8016786:	ea4f 1861 	mov.w	r8, r1, asr #5
 801678a:	920c      	str	r2, [sp, #48]	; 0x30
 801678c:	9a01      	ldr	r2, [sp, #4]
 801678e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8016792:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8016796:	45b0      	cmp	r8, r6
 8016798:	f001 011f 	and.w	r1, r1, #31
 801679c:	eba2 0203 	sub.w	r2, r2, r3
 80167a0:	d108      	bne.n	80167b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80167a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167a4:	4419      	add	r1, r3
 80167a6:	4496      	add	lr, r2
 80167a8:	fb02 a101 	mla	r1, r2, r1, sl
 80167ac:	f8a5 e004 	strh.w	lr, [r5, #4]
 80167b0:	80e9      	strh	r1, [r5, #6]
 80167b2:	e6f9      	b.n	80165a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80167b4:	2c00      	cmp	r4, #0
 80167b6:	f2c0 80a9 	blt.w	801690c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80167ba:	2701      	movs	r7, #1
 80167bc:	f1c1 0c20 	rsb	ip, r1, #32
 80167c0:	970a      	str	r7, [sp, #40]	; 0x28
 80167c2:	fb02 f20c 	mul.w	r2, r2, ip
 80167c6:	2720      	movs	r7, #32
 80167c8:	9709      	str	r7, [sp, #36]	; 0x24
 80167ca:	fb92 fcf4 	sdiv	ip, r2, r4
 80167ce:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80167d0:	fb04 221c 	mls	r2, r4, ip, r2
 80167d4:	2a00      	cmp	r2, #0
 80167d6:	bfb8      	it	lt
 80167d8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80167dc:	4439      	add	r1, r7
 80167de:	fb0c a101 	mla	r1, ip, r1, sl
 80167e2:	80e9      	strh	r1, [r5, #6]
 80167e4:	44e6      	add	lr, ip
 80167e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80167e8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80167ec:	eb08 0501 	add.w	r5, r8, r1
 80167f0:	6901      	ldr	r1, [r0, #16]
 80167f2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80167f6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80167fa:	bfb8      	it	lt
 80167fc:	1912      	addlt	r2, r2, r4
 80167fe:	ea58 070e 	orrs.w	r7, r8, lr
 8016802:	d010      	beq.n	8016826 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016804:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8016808:	f1be 0f00 	cmp.w	lr, #0
 801680c:	db0b      	blt.n	8016826 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801680e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016810:	45be      	cmp	lr, r7
 8016812:	da08      	bge.n	8016826 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8016814:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8016818:	45be      	cmp	lr, r7
 801681a:	bf3c      	itt	cc
 801681c:	3108      	addcc	r1, #8
 801681e:	6101      	strcc	r1, [r0, #16]
 8016820:	f10e 0101 	add.w	r1, lr, #1
 8016824:	6081      	str	r1, [r0, #8]
 8016826:	6901      	ldr	r1, [r0, #16]
 8016828:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801682c:	800d      	strh	r5, [r1, #0]
 801682e:	f04f 0e00 	mov.w	lr, #0
 8016832:	42ae      	cmp	r6, r5
 8016834:	f8a1 8002 	strh.w	r8, [r1, #2]
 8016838:	f8a1 e004 	strh.w	lr, [r1, #4]
 801683c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8016840:	4463      	add	r3, ip
 8016842:	d054      	beq.n	80168ee <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8016844:	9901      	ldr	r1, [sp, #4]
 8016846:	1ac9      	subs	r1, r1, r3
 8016848:	4461      	add	r1, ip
 801684a:	0149      	lsls	r1, r1, #5
 801684c:	fb91 fef4 	sdiv	lr, r1, r4
 8016850:	fb04 111e 	mls	r1, r4, lr, r1
 8016854:	2900      	cmp	r1, #0
 8016856:	bfb8      	it	lt
 8016858:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801685c:	f10e 0701 	add.w	r7, lr, #1
 8016860:	bfb8      	it	lt
 8016862:	1909      	addlt	r1, r1, r4
 8016864:	1b12      	subs	r2, r2, r4
 8016866:	970d      	str	r7, [sp, #52]	; 0x34
 8016868:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801686c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801686e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8016872:	1852      	adds	r2, r2, r1
 8016874:	bf54      	ite	pl
 8016876:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801687a:	46f4      	movmi	ip, lr
 801687c:	44e3      	add	fp, ip
 801687e:	f8aa b004 	strh.w	fp, [sl, #4]
 8016882:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8016886:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801688a:	f8aa b006 	strh.w	fp, [sl, #6]
 801688e:	4463      	add	r3, ip
 8016890:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016894:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016898:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801689c:	bf58      	it	pl
 801689e:	1b12      	subpl	r2, r2, r4
 80168a0:	443d      	add	r5, r7
 80168a2:	ea5b 070a 	orrs.w	r7, fp, sl
 80168a6:	d014      	beq.n	80168d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168a8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80168ac:	f1ba 0f00 	cmp.w	sl, #0
 80168b0:	db0f      	blt.n	80168d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168b2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80168b4:	45ba      	cmp	sl, r7
 80168b6:	da0c      	bge.n	80168d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80168b8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80168bc:	45ba      	cmp	sl, r7
 80168be:	bf38      	it	cc
 80168c0:	f10c 0c08 	addcc.w	ip, ip, #8
 80168c4:	f10a 0a01 	add.w	sl, sl, #1
 80168c8:	bf38      	it	cc
 80168ca:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80168ce:	f8c0 a008 	str.w	sl, [r0, #8]
 80168d2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80168d6:	f04f 0700 	mov.w	r7, #0
 80168da:	42ae      	cmp	r6, r5
 80168dc:	f8ac 5000 	strh.w	r5, [ip]
 80168e0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80168e4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80168e8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80168ec:	d1bc      	bne.n	8016868 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80168ee:	6904      	ldr	r4, [r0, #16]
 80168f0:	9a01      	ldr	r2, [sp, #4]
 80168f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80168f4:	1ad3      	subs	r3, r2, r3
 80168f6:	88a2      	ldrh	r2, [r4, #4]
 80168f8:	441a      	add	r2, r3
 80168fa:	80a2      	strh	r2, [r4, #4]
 80168fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80168fe:	3120      	adds	r1, #32
 8016900:	1a89      	subs	r1, r1, r2
 8016902:	88e2      	ldrh	r2, [r4, #6]
 8016904:	fb03 2301 	mla	r3, r3, r1, r2
 8016908:	80e3      	strh	r3, [r4, #6]
 801690a:	e64d      	b.n	80165a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801690c:	f04f 37ff 	mov.w	r7, #4294967295
 8016910:	970a      	str	r7, [sp, #40]	; 0x28
 8016912:	434a      	muls	r2, r1
 8016914:	4264      	negs	r4, r4
 8016916:	2700      	movs	r7, #0
 8016918:	e756      	b.n	80167c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801691a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801691e:	f009 031f 	and.w	r3, r9, #31
 8016922:	45d0      	cmp	r8, sl
 8016924:	f007 071f 	and.w	r7, r7, #31
 8016928:	930f      	str	r3, [sp, #60]	; 0x3c
 801692a:	fa1f fc8c 	uxth.w	ip, ip
 801692e:	fa1f fe8e 	uxth.w	lr, lr
 8016932:	d10a      	bne.n	801694a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8016934:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016936:	449c      	add	ip, r3
 8016938:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801693a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801693e:	441f      	add	r7, r3
 8016940:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016942:	fb03 e707 	mla	r7, r3, r7, lr
 8016946:	80ef      	strh	r7, [r5, #6]
 8016948:	e6b9      	b.n	80166be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801694a:	2900      	cmp	r1, #0
 801694c:	f2c0 80a8 	blt.w	8016aa0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8016950:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016952:	f1c7 0320 	rsb	r3, r7, #32
 8016956:	4363      	muls	r3, r4
 8016958:	2401      	movs	r4, #1
 801695a:	940d      	str	r4, [sp, #52]	; 0x34
 801695c:	2420      	movs	r4, #32
 801695e:	940c      	str	r4, [sp, #48]	; 0x30
 8016960:	fb93 f4f1 	sdiv	r4, r3, r1
 8016964:	fb01 3b14 	mls	fp, r1, r4, r3
 8016968:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801696a:	f1bb 0f00 	cmp.w	fp, #0
 801696e:	bfb8      	it	lt
 8016970:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8016974:	441f      	add	r7, r3
 8016976:	fb04 e707 	mla	r7, r4, r7, lr
 801697a:	44a4      	add	ip, r4
 801697c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8016980:	80ef      	strh	r7, [r5, #6]
 8016982:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016986:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016988:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801698c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016990:	bfb8      	it	lt
 8016992:	448b      	addlt	fp, r1
 8016994:	eb08 0503 	add.w	r5, r8, r3
 8016998:	ea5e 0307 	orrs.w	r3, lr, r7
 801699c:	d011      	beq.n	80169c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801699e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80169a2:	f1be 0f00 	cmp.w	lr, #0
 80169a6:	db0c      	blt.n	80169c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169a8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80169aa:	45be      	cmp	lr, r7
 80169ac:	da09      	bge.n	80169c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80169ae:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80169b2:	45be      	cmp	lr, r7
 80169b4:	bf3c      	itt	cc
 80169b6:	f10c 0708 	addcc.w	r7, ip, #8
 80169ba:	6107      	strcc	r7, [r0, #16]
 80169bc:	f10e 0701 	add.w	r7, lr, #1
 80169c0:	6087      	str	r7, [r0, #8]
 80169c2:	6907      	ldr	r7, [r0, #16]
 80169c4:	b213      	sxth	r3, r2
 80169c6:	9310      	str	r3, [sp, #64]	; 0x40
 80169c8:	807b      	strh	r3, [r7, #2]
 80169ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169cc:	803d      	strh	r5, [r7, #0]
 80169ce:	4555      	cmp	r5, sl
 80169d0:	80be      	strh	r6, [r7, #4]
 80169d2:	80fe      	strh	r6, [r7, #6]
 80169d4:	eb04 0c03 	add.w	ip, r4, r3
 80169d8:	d051      	beq.n	8016a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80169da:	9b01      	ldr	r3, [sp, #4]
 80169dc:	eba3 070c 	sub.w	r7, r3, ip
 80169e0:	443c      	add	r4, r7
 80169e2:	0164      	lsls	r4, r4, #5
 80169e4:	fb94 f8f1 	sdiv	r8, r4, r1
 80169e8:	fb01 4418 	mls	r4, r1, r8, r4
 80169ec:	2c00      	cmp	r4, #0
 80169ee:	bfb8      	it	lt
 80169f0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80169f4:	ebab 0301 	sub.w	r3, fp, r1
 80169f8:	f108 0701 	add.w	r7, r8, #1
 80169fc:	bfb8      	it	lt
 80169fe:	1864      	addlt	r4, r4, r1
 8016a00:	9309      	str	r3, [sp, #36]	; 0x24
 8016a02:	9711      	str	r7, [sp, #68]	; 0x44
 8016a04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016a06:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a0a:	191b      	adds	r3, r3, r4
 8016a0c:	bf58      	it	pl
 8016a0e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8016a10:	f8be b004 	ldrh.w	fp, [lr, #4]
 8016a14:	9309      	str	r3, [sp, #36]	; 0x24
 8016a16:	bf48      	it	mi
 8016a18:	4647      	movmi	r7, r8
 8016a1a:	44bb      	add	fp, r7
 8016a1c:	f8ae b004 	strh.w	fp, [lr, #4]
 8016a20:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a24:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016a28:	f8ae b006 	strh.w	fp, [lr, #6]
 8016a2c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8016a30:	44bc      	add	ip, r7
 8016a32:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016a34:	f8be b006 	ldrh.w	fp, [lr, #6]
 8016a38:	443d      	add	r5, r7
 8016a3a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8016a3e:	bf5c      	itt	pl
 8016a40:	1a5b      	subpl	r3, r3, r1
 8016a42:	9309      	strpl	r3, [sp, #36]	; 0x24
 8016a44:	ea5b 0307 	orrs.w	r3, fp, r7
 8016a48:	d011      	beq.n	8016a6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a4a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8016a4e:	f1bb 0f00 	cmp.w	fp, #0
 8016a52:	db0c      	blt.n	8016a6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a54:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016a56:	45bb      	cmp	fp, r7
 8016a58:	da09      	bge.n	8016a6e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8016a5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016a5e:	45bb      	cmp	fp, r7
 8016a60:	bf3c      	itt	cc
 8016a62:	f10e 0708 	addcc.w	r7, lr, #8
 8016a66:	6107      	strcc	r7, [r0, #16]
 8016a68:	f10b 0701 	add.w	r7, fp, #1
 8016a6c:	6087      	str	r7, [r0, #8]
 8016a6e:	6907      	ldr	r7, [r0, #16]
 8016a70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016a72:	803d      	strh	r5, [r7, #0]
 8016a74:	4555      	cmp	r5, sl
 8016a76:	807b      	strh	r3, [r7, #2]
 8016a78:	80be      	strh	r6, [r7, #4]
 8016a7a:	80fe      	strh	r6, [r7, #6]
 8016a7c:	d1c2      	bne.n	8016a04 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8016a7e:	9b01      	ldr	r3, [sp, #4]
 8016a80:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016a82:	eba3 0c0c 	sub.w	ip, r3, ip
 8016a86:	6903      	ldr	r3, [r0, #16]
 8016a88:	8899      	ldrh	r1, [r3, #4]
 8016a8a:	4461      	add	r1, ip
 8016a8c:	8099      	strh	r1, [r3, #4]
 8016a8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016a90:	3720      	adds	r7, #32
 8016a92:	1a7f      	subs	r7, r7, r1
 8016a94:	88d9      	ldrh	r1, [r3, #6]
 8016a96:	fb0c 1c07 	mla	ip, ip, r7, r1
 8016a9a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8016a9e:	e60e      	b.n	80166be <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8016aa0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016aa2:	f04f 34ff 	mov.w	r4, #4294967295
 8016aa6:	940d      	str	r4, [sp, #52]	; 0x34
 8016aa8:	437b      	muls	r3, r7
 8016aaa:	4249      	negs	r1, r1
 8016aac:	2400      	movs	r4, #0
 8016aae:	e756      	b.n	801695e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8016ab0:	9905      	ldr	r1, [sp, #20]
 8016ab2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8016ab6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8016aba:	f001 011f 	and.w	r1, r1, #31
 8016abe:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8016ac2:	9102      	str	r1, [sp, #8]
 8016ac4:	9904      	ldr	r1, [sp, #16]
 8016ac6:	45f3      	cmp	fp, lr
 8016ac8:	f009 0c1f 	and.w	ip, r9, #31
 8016acc:	eba1 0406 	sub.w	r4, r1, r6
 8016ad0:	d108      	bne.n	8016ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8016ad2:	9b02      	ldr	r3, [sp, #8]
 8016ad4:	449c      	add	ip, r3
 8016ad6:	44a0      	add	r8, r4
 8016ad8:	fb04 a40c 	mla	r4, r4, ip, sl
 8016adc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016ae0:	80fc      	strh	r4, [r7, #6]
 8016ae2:	e458      	b.n	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8016ae4:	9905      	ldr	r1, [sp, #20]
 8016ae6:	ebb1 0109 	subs.w	r1, r1, r9
 8016aea:	bf5b      	ittet	pl
 8016aec:	f1cc 0520 	rsbpl	r5, ip, #32
 8016af0:	436c      	mulpl	r4, r5
 8016af2:	2500      	movmi	r5, #0
 8016af4:	2520      	movpl	r5, #32
 8016af6:	bf44      	itt	mi
 8016af8:	fb04 f40c 	mulmi.w	r4, r4, ip
 8016afc:	4249      	negmi	r1, r1
 8016afe:	9501      	str	r5, [sp, #4]
 8016b00:	9b01      	ldr	r3, [sp, #4]
 8016b02:	fb94 f5f1 	sdiv	r5, r4, r1
 8016b06:	fb01 4415 	mls	r4, r1, r5, r4
 8016b0a:	bf54      	ite	pl
 8016b0c:	f04f 0901 	movpl.w	r9, #1
 8016b10:	f04f 39ff 	movmi.w	r9, #4294967295
 8016b14:	2c00      	cmp	r4, #0
 8016b16:	bfb8      	it	lt
 8016b18:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8016b1c:	449c      	add	ip, r3
 8016b1e:	44a8      	add	r8, r5
 8016b20:	fb05 ac0c 	mla	ip, r5, ip, sl
 8016b24:	f8a7 8004 	strh.w	r8, [r7, #4]
 8016b28:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b2c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016b30:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8016b34:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016b38:	bfb8      	it	lt
 8016b3a:	1864      	addlt	r4, r4, r1
 8016b3c:	ea58 0707 	orrs.w	r7, r8, r7
 8016b40:	eb0b 0309 	add.w	r3, fp, r9
 8016b44:	d011      	beq.n	8016b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b46:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8016b4a:	f1b8 0f00 	cmp.w	r8, #0
 8016b4e:	db0c      	blt.n	8016b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b50:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016b52:	45b8      	cmp	r8, r7
 8016b54:	da09      	bge.n	8016b6a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8016b56:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8016b5a:	45b8      	cmp	r8, r7
 8016b5c:	bf3c      	itt	cc
 8016b5e:	f10c 0708 	addcc.w	r7, ip, #8
 8016b62:	6107      	strcc	r7, [r0, #16]
 8016b64:	f108 0701 	add.w	r7, r8, #1
 8016b68:	6087      	str	r7, [r0, #8]
 8016b6a:	6907      	ldr	r7, [r0, #16]
 8016b6c:	f04f 0c00 	mov.w	ip, #0
 8016b70:	b212      	sxth	r2, r2
 8016b72:	459e      	cmp	lr, r3
 8016b74:	803b      	strh	r3, [r7, #0]
 8016b76:	807a      	strh	r2, [r7, #2]
 8016b78:	f8a7 c004 	strh.w	ip, [r7, #4]
 8016b7c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8016b80:	442e      	add	r6, r5
 8016b82:	d04d      	beq.n	8016c20 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8016b84:	9f04      	ldr	r7, [sp, #16]
 8016b86:	1bbf      	subs	r7, r7, r6
 8016b88:	443d      	add	r5, r7
 8016b8a:	016d      	lsls	r5, r5, #5
 8016b8c:	fb95 f8f1 	sdiv	r8, r5, r1
 8016b90:	fb01 5518 	mls	r5, r1, r8, r5
 8016b94:	4565      	cmp	r5, ip
 8016b96:	bfb8      	it	lt
 8016b98:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8016b9c:	f108 0701 	add.w	r7, r8, #1
 8016ba0:	bfb8      	it	lt
 8016ba2:	186d      	addlt	r5, r5, r1
 8016ba4:	1a64      	subs	r4, r4, r1
 8016ba6:	9703      	str	r7, [sp, #12]
 8016ba8:	f04f 0a00 	mov.w	sl, #0
 8016bac:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016bb0:	1964      	adds	r4, r4, r5
 8016bb2:	bf58      	it	pl
 8016bb4:	9f03      	ldrpl	r7, [sp, #12]
 8016bb6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8016bba:	bf48      	it	mi
 8016bbc:	4647      	movmi	r7, r8
 8016bbe:	44bb      	add	fp, r7
 8016bc0:	f8ac b004 	strh.w	fp, [ip, #4]
 8016bc4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016bc8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8016bcc:	f8ac b006 	strh.w	fp, [ip, #6]
 8016bd0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8016bd4:	443e      	add	r6, r7
 8016bd6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8016bda:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8016bde:	bf58      	it	pl
 8016be0:	1a64      	subpl	r4, r4, r1
 8016be2:	ea5b 0707 	orrs.w	r7, fp, r7
 8016be6:	444b      	add	r3, r9
 8016be8:	d011      	beq.n	8016c0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bea:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8016bee:	f1bb 0f00 	cmp.w	fp, #0
 8016bf2:	db0c      	blt.n	8016c0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bf4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8016bf6:	45bb      	cmp	fp, r7
 8016bf8:	da09      	bge.n	8016c0e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8016bfa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8016bfe:	45bb      	cmp	fp, r7
 8016c00:	bf3c      	itt	cc
 8016c02:	f10c 0708 	addcc.w	r7, ip, #8
 8016c06:	6107      	strcc	r7, [r0, #16]
 8016c08:	f10b 0701 	add.w	r7, fp, #1
 8016c0c:	6087      	str	r7, [r0, #8]
 8016c0e:	6907      	ldr	r7, [r0, #16]
 8016c10:	459e      	cmp	lr, r3
 8016c12:	803b      	strh	r3, [r7, #0]
 8016c14:	807a      	strh	r2, [r7, #2]
 8016c16:	f8a7 a004 	strh.w	sl, [r7, #4]
 8016c1a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8016c1e:	d1c5      	bne.n	8016bac <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8016c20:	9b04      	ldr	r3, [sp, #16]
 8016c22:	1b9e      	subs	r6, r3, r6
 8016c24:	6903      	ldr	r3, [r0, #16]
 8016c26:	889a      	ldrh	r2, [r3, #4]
 8016c28:	4432      	add	r2, r6
 8016c2a:	809a      	strh	r2, [r3, #4]
 8016c2c:	9a02      	ldr	r2, [sp, #8]
 8016c2e:	f102 0c20 	add.w	ip, r2, #32
 8016c32:	9a01      	ldr	r2, [sp, #4]
 8016c34:	ebac 0c02 	sub.w	ip, ip, r2
 8016c38:	88da      	ldrh	r2, [r3, #6]
 8016c3a:	fb06 260c 	mla	r6, r6, ip, r2
 8016c3e:	80de      	strh	r6, [r3, #6]
 8016c40:	f7ff bba9 	b.w	8016396 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08016c44 <_ZN8touchgfx7Outline6lineToEii>:
 8016c44:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c46:	079b      	lsls	r3, r3, #30
 8016c48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8016c4a:	460e      	mov	r6, r1
 8016c4c:	4615      	mov	r5, r2
 8016c4e:	d511      	bpl.n	8016c74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c50:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8016c54:	ea86 0701 	eor.w	r7, r6, r1
 8016c58:	ea85 0302 	eor.w	r3, r5, r2
 8016c5c:	433b      	orrs	r3, r7
 8016c5e:	d009      	beq.n	8016c74 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8016c60:	4633      	mov	r3, r6
 8016c62:	9500      	str	r5, [sp, #0]
 8016c64:	f7ff fb3e 	bl	80162e4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8016c68:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c6a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8016c6e:	f043 0301 	orr.w	r3, r3, #1
 8016c72:	6243      	str	r3, [r0, #36]	; 0x24
 8016c74:	b003      	add	sp, #12
 8016c76:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016c78 <_ZN8touchgfx7Outline6moveToEii>:
 8016c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c7a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016c7c:	4615      	mov	r5, r2
 8016c7e:	079a      	lsls	r2, r3, #30
 8016c80:	4604      	mov	r4, r0
 8016c82:	460e      	mov	r6, r1
 8016c84:	d401      	bmi.n	8016c8a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8016c86:	f7ff faf9 	bl	801627c <_ZN8touchgfx7Outline5resetEv>
 8016c8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016c8c:	07db      	lsls	r3, r3, #31
 8016c8e:	d504      	bpl.n	8016c9a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8016c90:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8016c94:	4620      	mov	r0, r4
 8016c96:	f7ff ffd5 	bl	8016c44 <_ZN8touchgfx7Outline6lineToEii>
 8016c9a:	6923      	ldr	r3, [r4, #16]
 8016c9c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016ca0:	1170      	asrs	r0, r6, #5
 8016ca2:	4290      	cmp	r0, r2
 8016ca4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8016ca8:	d103      	bne.n	8016cb2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8016caa:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016cae:	4291      	cmp	r1, r2
 8016cb0:	d01a      	beq.n	8016ce8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8016cb2:	88df      	ldrh	r7, [r3, #6]
 8016cb4:	889a      	ldrh	r2, [r3, #4]
 8016cb6:	433a      	orrs	r2, r7
 8016cb8:	d010      	beq.n	8016cdc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016cbe:	2a00      	cmp	r2, #0
 8016cc0:	db0c      	blt.n	8016cdc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cc2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8016cc4:	42ba      	cmp	r2, r7
 8016cc6:	da09      	bge.n	8016cdc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8016cc8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8016ccc:	42ba      	cmp	r2, r7
 8016cce:	bf38      	it	cc
 8016cd0:	3308      	addcc	r3, #8
 8016cd2:	f102 0201 	add.w	r2, r2, #1
 8016cd6:	bf38      	it	cc
 8016cd8:	6123      	strcc	r3, [r4, #16]
 8016cda:	60a2      	str	r2, [r4, #8]
 8016cdc:	6923      	ldr	r3, [r4, #16]
 8016cde:	2200      	movs	r2, #0
 8016ce0:	8018      	strh	r0, [r3, #0]
 8016ce2:	8059      	strh	r1, [r3, #2]
 8016ce4:	809a      	strh	r2, [r3, #4]
 8016ce6:	80da      	strh	r2, [r3, #6]
 8016ce8:	6166      	str	r6, [r4, #20]
 8016cea:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8016cee:	6225      	str	r5, [r4, #32]
 8016cf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016cf2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8016cf2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016cf6:	b0d0      	sub	sp, #320	; 0x140
 8016cf8:	466c      	mov	r4, sp
 8016cfa:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8016cfe:	4627      	mov	r7, r4
 8016d00:	1a0d      	subs	r5, r1, r0
 8016d02:	2d48      	cmp	r5, #72	; 0x48
 8016d04:	f100 0308 	add.w	r3, r0, #8
 8016d08:	f340 80d5 	ble.w	8016eb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016d0c:	112d      	asrs	r5, r5, #4
 8016d0e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8016d12:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016d16:	6816      	ldr	r6, [r2, #0]
 8016d18:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8016d1c:	6006      	str	r6, [r0, #0]
 8016d1e:	6856      	ldr	r6, [r2, #4]
 8016d20:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016d24:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016d28:	6046      	str	r6, [r0, #4]
 8016d2a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016d2e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8016d32:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016d36:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016d3a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016d3e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8016d42:	4565      	cmp	r5, ip
 8016d44:	f1a1 0208 	sub.w	r2, r1, #8
 8016d48:	db06      	blt.n	8016d58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8016d4a:	d119      	bne.n	8016d80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d4c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8016d50:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8016d54:	42ae      	cmp	r6, r5
 8016d56:	dd13      	ble.n	8016d80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8016d58:	460e      	mov	r6, r1
 8016d5a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8016d5e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016d62:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8016d66:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8016d6a:	601d      	str	r5, [r3, #0]
 8016d6c:	6875      	ldr	r5, [r6, #4]
 8016d6e:	605d      	str	r5, [r3, #4]
 8016d70:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016d74:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016d78:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016d7c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016d80:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8016d84:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8016d88:	42ae      	cmp	r6, r5
 8016d8a:	db06      	blt.n	8016d9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8016d8c:	d116      	bne.n	8016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016d8e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8016d92:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8016d96:	45ac      	cmp	ip, r5
 8016d98:	da10      	bge.n	8016dbc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8016d9a:	681d      	ldr	r5, [r3, #0]
 8016d9c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016da0:	6005      	str	r5, [r0, #0]
 8016da2:	685d      	ldr	r5, [r3, #4]
 8016da4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8016da8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8016dac:	f8a0 8008 	strh.w	r8, [r0, #8]
 8016db0:	6045      	str	r5, [r0, #4]
 8016db2:	8146      	strh	r6, [r0, #10]
 8016db4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8016db8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8016dbc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8016dc0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016dc4:	4565      	cmp	r5, ip
 8016dc6:	db06      	blt.n	8016dd6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8016dc8:	d119      	bne.n	8016dfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016dca:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8016dce:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016dd2:	42ae      	cmp	r6, r5
 8016dd4:	da13      	bge.n	8016dfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016dd6:	460e      	mov	r6, r1
 8016dd8:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016ddc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8016de0:	6005      	str	r5, [r0, #0]
 8016de2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8016de6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8016dea:	6875      	ldr	r5, [r6, #4]
 8016dec:	6045      	str	r5, [r0, #4]
 8016dee:	f821 9c08 	strh.w	r9, [r1, #-8]
 8016df2:	f821 cc06 	strh.w	ip, [r1, #-6]
 8016df6:	f821 8c04 	strh.w	r8, [r1, #-4]
 8016dfa:	f821 ec02 	strh.w	lr, [r1, #-2]
 8016dfe:	3308      	adds	r3, #8
 8016e00:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8016e04:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8016e08:	45e6      	cmp	lr, ip
 8016e0a:	dbf8      	blt.n	8016dfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e0c:	d105      	bne.n	8016e1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e0e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016e12:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016e16:	42ae      	cmp	r6, r5
 8016e18:	dbf1      	blt.n	8016dfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e1a:	4615      	mov	r5, r2
 8016e1c:	3a08      	subs	r2, #8
 8016e1e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8016e22:	45b4      	cmp	ip, r6
 8016e24:	dbf9      	blt.n	8016e1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e26:	d105      	bne.n	8016e34 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8016e28:	f9b0 8000 	ldrsh.w	r8, [r0]
 8016e2c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8016e30:	45b0      	cmp	r8, r6
 8016e32:	dbf2      	blt.n	8016e1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8016e34:	4293      	cmp	r3, r2
 8016e36:	f1a5 0608 	sub.w	r6, r5, #8
 8016e3a:	d816      	bhi.n	8016e6a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8016e3c:	f8d6 c000 	ldr.w	ip, [r6]
 8016e40:	f9b3 a000 	ldrsh.w	sl, [r3]
 8016e44:	f8c3 c000 	str.w	ip, [r3]
 8016e48:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8016e4c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8016e50:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8016e54:	f8c3 c004 	str.w	ip, [r3, #4]
 8016e58:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e5c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8016e60:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016e64:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016e68:	e7c9      	b.n	8016dfe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8016e6a:	f8d6 e000 	ldr.w	lr, [r6]
 8016e6e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8016e72:	f8c0 e000 	str.w	lr, [r0]
 8016e76:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8016e7a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8016e7e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8016e82:	f8c0 e004 	str.w	lr, [r0, #4]
 8016e86:	f825 ac08 	strh.w	sl, [r5, #-8]
 8016e8a:	f825 cc06 	strh.w	ip, [r5, #-6]
 8016e8e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8016e92:	f825 8c02 	strh.w	r8, [r5, #-2]
 8016e96:	1acd      	subs	r5, r1, r3
 8016e98:	1a16      	subs	r6, r2, r0
 8016e9a:	10ed      	asrs	r5, r5, #3
 8016e9c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8016ea0:	bfb5      	itete	lt
 8016ea2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8016ea6:	e9c4 3100 	strdge	r3, r1, [r4]
 8016eaa:	460a      	movlt	r2, r1
 8016eac:	4603      	movge	r3, r0
 8016eae:	3408      	adds	r4, #8
 8016eb0:	4618      	mov	r0, r3
 8016eb2:	4611      	mov	r1, r2
 8016eb4:	e724      	b.n	8016d00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016eb6:	4299      	cmp	r1, r3
 8016eb8:	d928      	bls.n	8016f0c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8016eba:	f1a3 0210 	sub.w	r2, r3, #16
 8016ebe:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8016ec2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8016ec6:	45ac      	cmp	ip, r5
 8016ec8:	db06      	blt.n	8016ed8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8016eca:	d11d      	bne.n	8016f08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016ecc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8016ed0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8016ed4:	42ae      	cmp	r6, r5
 8016ed6:	da17      	bge.n	8016f08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8016ed8:	4615      	mov	r5, r2
 8016eda:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8016ede:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8016ee2:	6116      	str	r6, [r2, #16]
 8016ee4:	686e      	ldr	r6, [r5, #4]
 8016ee6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8016eea:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8016eee:	f8a2 9008 	strh.w	r9, [r2, #8]
 8016ef2:	42a8      	cmp	r0, r5
 8016ef4:	6156      	str	r6, [r2, #20]
 8016ef6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8016efa:	f8a2 800c 	strh.w	r8, [r2, #12]
 8016efe:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8016f02:	f1a2 0208 	sub.w	r2, r2, #8
 8016f06:	d1da      	bne.n	8016ebe <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8016f08:	3308      	adds	r3, #8
 8016f0a:	e7d4      	b.n	8016eb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8016f0c:	42bc      	cmp	r4, r7
 8016f0e:	d903      	bls.n	8016f18 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8016f10:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8016f14:	3c08      	subs	r4, #8
 8016f16:	e6f3      	b.n	8016d00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8016f18:	b050      	add	sp, #320	; 0x140
 8016f1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08016f1e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8016f1e:	b510      	push	{r4, lr}
 8016f20:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f22:	07da      	lsls	r2, r3, #31
 8016f24:	4604      	mov	r4, r0
 8016f26:	d507      	bpl.n	8016f38 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8016f28:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8016f2c:	f7ff fe8a 	bl	8016c44 <_ZN8touchgfx7Outline6lineToEii>
 8016f30:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8016f32:	f023 0301 	bic.w	r3, r3, #1
 8016f36:	6243      	str	r3, [r0, #36]	; 0x24
 8016f38:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f3a:	079b      	lsls	r3, r3, #30
 8016f3c:	d521      	bpl.n	8016f82 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8016f3e:	6923      	ldr	r3, [r4, #16]
 8016f40:	88d9      	ldrh	r1, [r3, #6]
 8016f42:	889a      	ldrh	r2, [r3, #4]
 8016f44:	430a      	orrs	r2, r1
 8016f46:	d010      	beq.n	8016f6a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f48:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8016f4c:	2a00      	cmp	r2, #0
 8016f4e:	db0c      	blt.n	8016f6a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f50:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8016f52:	428a      	cmp	r2, r1
 8016f54:	da09      	bge.n	8016f6a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8016f56:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8016f5a:	4291      	cmp	r1, r2
 8016f5c:	bf88      	it	hi
 8016f5e:	3308      	addhi	r3, #8
 8016f60:	f102 0201 	add.w	r2, r2, #1
 8016f64:	bf88      	it	hi
 8016f66:	6123      	strhi	r3, [r4, #16]
 8016f68:	60a2      	str	r2, [r4, #8]
 8016f6a:	68a1      	ldr	r1, [r4, #8]
 8016f6c:	b129      	cbz	r1, 8016f7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f6e:	6863      	ldr	r3, [r4, #4]
 8016f70:	4299      	cmp	r1, r3
 8016f72:	d802      	bhi.n	8016f7a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8016f74:	68e0      	ldr	r0, [r4, #12]
 8016f76:	f7ff febc 	bl	8016cf2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8016f7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f7c:	f023 0302 	bic.w	r3, r3, #2
 8016f80:	6263      	str	r3, [r4, #36]	; 0x24
 8016f82:	68e0      	ldr	r0, [r4, #12]
 8016f84:	bd10      	pop	{r4, pc}
	...

08016f88 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8016f88:	4b02      	ldr	r3, [pc, #8]	; (8016f94 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8016f8a:	6018      	str	r0, [r3, #0]
 8016f8c:	4b02      	ldr	r3, [pc, #8]	; (8016f98 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8016f8e:	6019      	str	r1, [r3, #0]
 8016f90:	4770      	bx	lr
 8016f92:	bf00      	nop
 8016f94:	20013844 	.word	0x20013844
 8016f98:	20013848 	.word	0x20013848

08016f9c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8016f9c:	4a02      	ldr	r2, [pc, #8]	; (8016fa8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8016f9e:	2300      	movs	r3, #0
 8016fa0:	6013      	str	r3, [r2, #0]
 8016fa2:	4a02      	ldr	r2, [pc, #8]	; (8016fac <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8016fa4:	6013      	str	r3, [r2, #0]
 8016fa6:	4770      	bx	lr
 8016fa8:	20013844 	.word	0x20013844
 8016fac:	20013848 	.word	0x20013848

08016fb0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8016fb0:	4b01      	ldr	r3, [pc, #4]	; (8016fb8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8016fb2:	6818      	ldr	r0, [r3, #0]
 8016fb4:	4770      	bx	lr
 8016fb6:	bf00      	nop
 8016fb8:	20013844 	.word	0x20013844

08016fbc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8016fbc:	4b01      	ldr	r3, [pc, #4]	; (8016fc4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8016fbe:	6818      	ldr	r0, [r3, #0]
 8016fc0:	4770      	bx	lr
 8016fc2:	bf00      	nop
 8016fc4:	20013848 	.word	0x20013848

08016fc8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8016fc8:	b510      	push	{r4, lr}
 8016fca:	6803      	ldr	r3, [r0, #0]
 8016fcc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016fce:	460c      	mov	r4, r1
 8016fd0:	4798      	blx	r3
 8016fd2:	1b03      	subs	r3, r0, r4
 8016fd4:	4258      	negs	r0, r3
 8016fd6:	4158      	adcs	r0, r3
 8016fd8:	bd10      	pop	{r4, pc}
	...

08016fdc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8016fdc:	4b01      	ldr	r3, [pc, #4]	; (8016fe4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8016fde:	6019      	str	r1, [r3, #0]
 8016fe0:	4770      	bx	lr
 8016fe2:	bf00      	nop
 8016fe4:	2001384c 	.word	0x2001384c

08016fe8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8016fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fec:	4696      	mov	lr, r2
 8016fee:	4605      	mov	r5, r0
 8016ff0:	4614      	mov	r4, r2
 8016ff2:	460e      	mov	r6, r1
 8016ff4:	461f      	mov	r7, r3
 8016ff6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8016ffa:	b097      	sub	sp, #92	; 0x5c
 8016ffc:	f10d 0c1c 	add.w	ip, sp, #28
 8017000:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017004:	f8de 3000 	ldr.w	r3, [lr]
 8017008:	f8cc 3000 	str.w	r3, [ip]
 801700c:	f104 0e14 	add.w	lr, r4, #20
 8017010:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017014:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017018:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801701c:	f8de 3000 	ldr.w	r3, [lr]
 8017020:	f8cc 3000 	str.w	r3, [ip]
 8017024:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017028:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801702c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8017030:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017034:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8017038:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801703c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8017040:	f8de 3000 	ldr.w	r3, [lr]
 8017044:	f8cc 3000 	str.w	r3, [ip]
 8017048:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801704a:	682b      	ldr	r3, [r5, #0]
 801704c:	9201      	str	r2, [sp, #4]
 801704e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8017052:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017054:	9200      	str	r2, [sp, #0]
 8017056:	f8cd 8008 	str.w	r8, [sp, #8]
 801705a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801705e:	aa07      	add	r2, sp, #28
 8017060:	463b      	mov	r3, r7
 8017062:	4631      	mov	r1, r6
 8017064:	4628      	mov	r0, r5
 8017066:	47d8      	blx	fp
 8017068:	46a6      	mov	lr, r4
 801706a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801706e:	f10d 0c1c 	add.w	ip, sp, #28
 8017072:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8017076:	f8de 3000 	ldr.w	r3, [lr]
 801707a:	f8cc 3000 	str.w	r3, [ip]
 801707e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8017082:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8017086:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801708a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801708e:	343c      	adds	r4, #60	; 0x3c
 8017090:	f8de 3000 	ldr.w	r3, [lr]
 8017094:	f8cc 3000 	str.w	r3, [ip]
 8017098:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801709a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801709e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80170a2:	6823      	ldr	r3, [r4, #0]
 80170a4:	f8cc 3000 	str.w	r3, [ip]
 80170a8:	682b      	ldr	r3, [r5, #0]
 80170aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80170ae:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80170b0:	9201      	str	r2, [sp, #4]
 80170b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80170b4:	9200      	str	r2, [sp, #0]
 80170b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80170ba:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80170bc:	aa07      	add	r2, sp, #28
 80170be:	463b      	mov	r3, r7
 80170c0:	4631      	mov	r1, r6
 80170c2:	4628      	mov	r0, r5
 80170c4:	47a0      	blx	r4
 80170c6:	b017      	add	sp, #92	; 0x5c
 80170c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080170cc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80170cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80170d0:	b08d      	sub	sp, #52	; 0x34
 80170d2:	4688      	mov	r8, r1
 80170d4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80170d6:	f8d3 c000 	ldr.w	ip, [r3]
 80170da:	680f      	ldr	r7, [r1, #0]
 80170dc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80170e0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80170e4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80170e8:	edd3 6a07 	vldr	s13, [r3, #28]
 80170ec:	9918      	ldr	r1, [sp, #96]	; 0x60
 80170ee:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80170f2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80170f6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80170fa:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80170fe:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8017102:	eba7 070c 	sub.w	r7, r7, ip
 8017106:	42bc      	cmp	r4, r7
 8017108:	bfa8      	it	ge
 801710a:	463c      	movge	r4, r7
 801710c:	ee07 4a90 	vmov	s15, r4
 8017110:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8017114:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8017118:	ee25 4a04 	vmul.f32	s8, s10, s8
 801711c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8017120:	ee25 5a27 	vmul.f32	s10, s10, s15
 8017124:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8017128:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801712c:	eb09 0e0c 	add.w	lr, r9, ip
 8017130:	4571      	cmp	r1, lr
 8017132:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8017136:	ee32 1a05 	vadd.f32	s2, s4, s10
 801713a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801713e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017142:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017146:	f340 808d 	ble.w	8017264 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801714a:	eba1 060e 	sub.w	r6, r1, lr
 801714e:	fb96 f5f4 	sdiv	r5, r6, r4
 8017152:	ee07 5a10 	vmov	s14, r5
 8017156:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801715a:	2d00      	cmp	r5, #0
 801715c:	fb04 6615 	mls	r6, r4, r5, r6
 8017160:	eea7 0a04 	vfma.f32	s0, s14, s8
 8017164:	eee7 0a24 	vfma.f32	s1, s14, s9
 8017168:	eea7 1a05 	vfma.f32	s2, s14, s10
 801716c:	dd13      	ble.n	8017196 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801716e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8017172:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8017176:	eef5 6a40 	vcmp.f32	s13, #0.0
 801717a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801717e:	bf18      	it	ne
 8017180:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8017184:	ee31 2a45 	vsub.f32	s4, s2, s10
 8017188:	bf08      	it	eq
 801718a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801718e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8017192:	ee22 2a07 	vmul.f32	s4, s4, s14
 8017196:	fb05 f204 	mul.w	r2, r5, r4
 801719a:	1abf      	subs	r7, r7, r2
 801719c:	4494      	add	ip, r2
 801719e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80171a2:	4411      	add	r1, r2
 80171a4:	eb09 020c 	add.w	r2, r9, ip
 80171a8:	443a      	add	r2, r7
 80171aa:	b209      	sxth	r1, r1
 80171ac:	428a      	cmp	r2, r1
 80171ae:	bfc4      	itt	gt
 80171b0:	eba1 0209 	subgt.w	r2, r1, r9
 80171b4:	eba2 070c 	subgt.w	r7, r2, ip
 80171b8:	2f00      	cmp	r7, #0
 80171ba:	dd50      	ble.n	801725e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80171bc:	fb97 f1f4 	sdiv	r1, r7, r4
 80171c0:	fb04 7211 	mls	r2, r4, r1, r7
 80171c4:	b90a      	cbnz	r2, 80171ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80171c6:	3901      	subs	r1, #1
 80171c8:	4622      	mov	r2, r4
 80171ca:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80171ce:	6840      	ldr	r0, [r0, #4]
 80171d0:	900b      	str	r0, [sp, #44]	; 0x2c
 80171d2:	f8d0 a000 	ldr.w	sl, [r0]
 80171d6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80171d8:	9008      	str	r0, [sp, #32]
 80171da:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80171de:	9818      	ldr	r0, [sp, #96]	; 0x60
 80171e0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80171e4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80171e8:	695b      	ldr	r3, [r3, #20]
 80171ea:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80171ec:	445b      	add	r3, fp
 80171ee:	eef0 6a42 	vmov.f32	s13, s4
 80171f2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80171f6:	ee21 3a23 	vmul.f32	s6, s2, s7
 80171fa:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80171fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017202:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017206:	9307      	str	r3, [sp, #28]
 8017208:	ee17 7a90 	vmov	r7, s15
 801720c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8017210:	eeb0 7a61 	vmov.f32	s14, s3
 8017214:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8017218:	ee16 3a90 	vmov	r3, s13
 801721c:	fb97 f7f4 	sdiv	r7, r7, r4
 8017220:	ee17 ca90 	vmov	ip, s15
 8017224:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8017228:	fb9c fcf4 	sdiv	ip, ip, r4
 801722c:	fb0c 3306 	mla	r3, ip, r6, r3
 8017230:	9302      	str	r3, [sp, #8]
 8017232:	ee17 3a10 	vmov	r3, s14
 8017236:	44b6      	add	lr, r6
 8017238:	fb04 e505 	mla	r5, r4, r5, lr
 801723c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8017240:	fb07 3706 	mla	r7, r7, r6, r3
 8017244:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8017248:	e9cd 4700 	strd	r4, r7, [sp]
 801724c:	2900      	cmp	r1, #0
 801724e:	bfcc      	ite	gt
 8017250:	46a1      	movgt	r9, r4
 8017252:	4691      	movle	r9, r2
 8017254:	eba9 0306 	sub.w	r3, r9, r6
 8017258:	f8da 4008 	ldr.w	r4, [sl, #8]
 801725c:	47a0      	blx	r4
 801725e:	b00d      	add	sp, #52	; 0x34
 8017260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017264:	2500      	movs	r5, #0
 8017266:	462e      	mov	r6, r5
 8017268:	e799      	b.n	801719e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801726c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801726c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017270:	b0db      	sub	sp, #364	; 0x16c
 8017272:	461d      	mov	r5, r3
 8017274:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8017278:	930a      	str	r3, [sp, #40]	; 0x28
 801727a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801727e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017280:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8017284:	9310      	str	r3, [sp, #64]	; 0x40
 8017286:	6803      	ldr	r3, [r0, #0]
 8017288:	910f      	str	r1, [sp, #60]	; 0x3c
 801728a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801728c:	9009      	str	r0, [sp, #36]	; 0x24
 801728e:	4614      	mov	r4, r2
 8017290:	4629      	mov	r1, r5
 8017292:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8017296:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801729a:	47b8      	blx	r7
 801729c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801729e:	6058      	str	r0, [r3, #4]
 80172a0:	2800      	cmp	r0, #0
 80172a2:	f000 83a1 	beq.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172a6:	682b      	ldr	r3, [r5, #0]
 80172a8:	9314      	str	r3, [sp, #80]	; 0x50
 80172aa:	686b      	ldr	r3, [r5, #4]
 80172ac:	9315      	str	r3, [sp, #84]	; 0x54
 80172ae:	4bc4      	ldr	r3, [pc, #784]	; (80175c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80172b0:	ed94 7a02 	vldr	s14, [r4, #8]
 80172b4:	7819      	ldrb	r1, [r3, #0]
 80172b6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80172ba:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80172be:	2900      	cmp	r1, #0
 80172c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172c4:	bf16      	itet	ne
 80172c6:	4619      	movne	r1, r3
 80172c8:	4611      	moveq	r1, r2
 80172ca:	4613      	movne	r3, r2
 80172cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172d0:	9116      	str	r1, [sp, #88]	; 0x58
 80172d2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80172d6:	f240 8387 	bls.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172da:	ed94 7a07 	vldr	s14, [r4, #28]
 80172de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172e6:	f240 837f 	bls.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172ea:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80172ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80172f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172f6:	f240 8377 	bls.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80172fa:	6822      	ldr	r2, [r4, #0]
 80172fc:	4bb1      	ldr	r3, [pc, #708]	; (80175c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80172fe:	429a      	cmp	r2, r3
 8017300:	f2c0 8372 	blt.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017304:	49b0      	ldr	r1, [pc, #704]	; (80175c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8017306:	6963      	ldr	r3, [r4, #20]
 8017308:	428a      	cmp	r2, r1
 801730a:	f300 836d 	bgt.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801730e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017312:	48ae      	ldr	r0, [pc, #696]	; (80175cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8017314:	33ff      	adds	r3, #255	; 0xff
 8017316:	4283      	cmp	r3, r0
 8017318:	f200 8366 	bhi.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801731c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801731e:	4dac      	ldr	r5, [pc, #688]	; (80175d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8017320:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8017324:	33ff      	adds	r3, #255	; 0xff
 8017326:	42ab      	cmp	r3, r5
 8017328:	f200 835e 	bhi.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801732c:	6862      	ldr	r2, [r4, #4]
 801732e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8017332:	33ff      	adds	r3, #255	; 0xff
 8017334:	4283      	cmp	r3, r0
 8017336:	f200 8357 	bhi.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801733a:	69a1      	ldr	r1, [r4, #24]
 801733c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8017340:	33ff      	adds	r3, #255	; 0xff
 8017342:	4283      	cmp	r3, r0
 8017344:	f200 8350 	bhi.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017348:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801734a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801734e:	30ff      	adds	r0, #255	; 0xff
 8017350:	42a8      	cmp	r0, r5
 8017352:	f200 8349 	bhi.w	80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8017356:	428a      	cmp	r2, r1
 8017358:	f280 8110 	bge.w	801757c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801735c:	429a      	cmp	r2, r3
 801735e:	f300 8119 	bgt.w	8017594 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8017362:	4299      	cmp	r1, r3
 8017364:	f280 811d 	bge.w	80175a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8017368:	2502      	movs	r5, #2
 801736a:	2701      	movs	r7, #1
 801736c:	46a9      	mov	r9, r5
 801736e:	46b8      	mov	r8, r7
 8017370:	f04f 0a00 	mov.w	sl, #0
 8017374:	4621      	mov	r1, r4
 8017376:	a849      	add	r0, sp, #292	; 0x124
 8017378:	f003 ff2a 	bl	801b1d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801737c:	4622      	mov	r2, r4
 801737e:	4653      	mov	r3, sl
 8017380:	a949      	add	r1, sp, #292	; 0x124
 8017382:	f8cd 9000 	str.w	r9, [sp]
 8017386:	a819      	add	r0, sp, #100	; 0x64
 8017388:	f004 f852 	bl	801b430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801738c:	4622      	mov	r2, r4
 801738e:	4653      	mov	r3, sl
 8017390:	a949      	add	r1, sp, #292	; 0x124
 8017392:	f8cd 8000 	str.w	r8, [sp]
 8017396:	a829      	add	r0, sp, #164	; 0xa4
 8017398:	f004 f84a 	bl	801b430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801739c:	4643      	mov	r3, r8
 801739e:	4622      	mov	r2, r4
 80173a0:	a949      	add	r1, sp, #292	; 0x124
 80173a2:	f8cd 9000 	str.w	r9, [sp]
 80173a6:	a839      	add	r0, sp, #228	; 0xe4
 80173a8:	f004 f842 	bl	801b430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80173ac:	42af      	cmp	r7, r5
 80173ae:	bfb5      	itete	lt
 80173b0:	2300      	movlt	r3, #0
 80173b2:	2301      	movge	r3, #1
 80173b4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80173b6:	930e      	strge	r3, [sp, #56]	; 0x38
 80173b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80173ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80173be:	af12      	add	r7, sp, #72	; 0x48
 80173c0:	bfb9      	ittee	lt
 80173c2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80173c4:	ac19      	addlt	r4, sp, #100	; 0x64
 80173c6:	ad19      	addge	r5, sp, #100	; 0x64
 80173c8:	ac29      	addge	r4, sp, #164	; 0xa4
 80173ca:	e887 0003 	stmia.w	r7, {r0, r1}
 80173ce:	b928      	cbnz	r0, 80173dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80173d0:	4b80      	ldr	r3, [pc, #512]	; (80175d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80173d2:	6818      	ldr	r0, [r3, #0]
 80173d4:	6803      	ldr	r3, [r0, #0]
 80173d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80173d8:	4798      	blx	r3
 80173da:	6038      	str	r0, [r7, #0]
 80173dc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80173de:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80173e2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80173e6:	930c      	str	r3, [sp, #48]	; 0x30
 80173e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80173ea:	6963      	ldr	r3, [r4, #20]
 80173ec:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80173ee:	440b      	add	r3, r1
 80173f0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80173f4:	4408      	add	r0, r1
 80173f6:	b200      	sxth	r0, r0
 80173f8:	4283      	cmp	r3, r0
 80173fa:	900d      	str	r0, [sp, #52]	; 0x34
 80173fc:	f280 80dd 	bge.w	80175ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8017400:	428b      	cmp	r3, r1
 8017402:	da08      	bge.n	8017416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017404:	2a00      	cmp	r2, #0
 8017406:	dd06      	ble.n	8017416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8017408:	1acb      	subs	r3, r1, r3
 801740a:	429a      	cmp	r2, r3
 801740c:	f2c0 80e4 	blt.w	80175d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8017410:	2b00      	cmp	r3, #0
 8017412:	f300 80e2 	bgt.w	80175da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8017416:	6967      	ldr	r7, [r4, #20]
 8017418:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801741a:	443b      	add	r3, r7
 801741c:	461f      	mov	r7, r3
 801741e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017420:	1bdf      	subs	r7, r3, r7
 8017422:	4297      	cmp	r7, r2
 8017424:	bfa8      	it	ge
 8017426:	4617      	movge	r7, r2
 8017428:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801742c:	2f00      	cmp	r7, #0
 801742e:	f340 8166 	ble.w	80176fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8017432:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017434:	6829      	ldr	r1, [r5, #0]
 8017436:	f9b3 2000 	ldrsh.w	r2, [r3]
 801743a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801743e:	6820      	ldr	r0, [r4, #0]
 8017440:	4411      	add	r1, r2
 8017442:	4299      	cmp	r1, r3
 8017444:	dd1a      	ble.n	801747c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017446:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801744a:	440b      	add	r3, r1
 801744c:	4402      	add	r2, r0
 801744e:	b21b      	sxth	r3, r3
 8017450:	429a      	cmp	r2, r3
 8017452:	dc13      	bgt.n	801747c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8017454:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017456:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017458:	681b      	ldr	r3, [r3, #0]
 801745a:	9206      	str	r2, [sp, #24]
 801745c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801745e:	9205      	str	r2, [sp, #20]
 8017460:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017462:	9500      	str	r5, [sp, #0]
 8017464:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017468:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801746a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801746c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8017470:	a912      	add	r1, sp, #72	; 0x48
 8017472:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8017476:	aa49      	add	r2, sp, #292	; 0x124
 8017478:	4623      	mov	r3, r4
 801747a:	47c8      	blx	r9
 801747c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8017480:	441a      	add	r2, r3
 8017482:	6963      	ldr	r3, [r4, #20]
 8017484:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8017488:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801748c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8017490:	68a1      	ldr	r1, [r4, #8]
 8017492:	ed94 6a08 	vldr	s12, [r4, #32]
 8017496:	6022      	str	r2, [r4, #0]
 8017498:	3301      	adds	r3, #1
 801749a:	6163      	str	r3, [r4, #20]
 801749c:	69a3      	ldr	r3, [r4, #24]
 801749e:	ee37 7a27 	vadd.f32	s14, s14, s15
 80174a2:	3b01      	subs	r3, #1
 80174a4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80174a8:	61a3      	str	r3, [r4, #24]
 80174aa:	6923      	ldr	r3, [r4, #16]
 80174ac:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80174b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80174b4:	edd4 6a07 	vldr	s13, [r4, #28]
 80174b8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80174bc:	440b      	add	r3, r1
 80174be:	68e1      	ldr	r1, [r4, #12]
 80174c0:	6123      	str	r3, [r4, #16]
 80174c2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80174c6:	428b      	cmp	r3, r1
 80174c8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174cc:	db15      	blt.n	80174fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80174ce:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80174d2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80174d6:	3201      	adds	r2, #1
 80174d8:	edc4 6a07 	vstr	s13, [r4, #28]
 80174dc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80174e0:	6022      	str	r2, [r4, #0]
 80174e2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80174e6:	1a5b      	subs	r3, r3, r1
 80174e8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80174ec:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80174f0:	6123      	str	r3, [r4, #16]
 80174f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80174f6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80174fa:	e9d5 2300 	ldrd	r2, r3, [r5]
 80174fe:	441a      	add	r2, r3
 8017500:	696b      	ldr	r3, [r5, #20]
 8017502:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017506:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801750a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801750e:	68a9      	ldr	r1, [r5, #8]
 8017510:	ed95 6a08 	vldr	s12, [r5, #32]
 8017514:	602a      	str	r2, [r5, #0]
 8017516:	3301      	adds	r3, #1
 8017518:	616b      	str	r3, [r5, #20]
 801751a:	69ab      	ldr	r3, [r5, #24]
 801751c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8017520:	3b01      	subs	r3, #1
 8017522:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017526:	61ab      	str	r3, [r5, #24]
 8017528:	692b      	ldr	r3, [r5, #16]
 801752a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801752e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017532:	edd5 6a07 	vldr	s13, [r5, #28]
 8017536:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801753a:	440b      	add	r3, r1
 801753c:	68e9      	ldr	r1, [r5, #12]
 801753e:	612b      	str	r3, [r5, #16]
 8017540:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017544:	428b      	cmp	r3, r1
 8017546:	edc5 6a07 	vstr	s13, [r5, #28]
 801754a:	db15      	blt.n	8017578 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801754c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8017550:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017554:	3201      	adds	r2, #1
 8017556:	edc5 6a07 	vstr	s13, [r5, #28]
 801755a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801755e:	602a      	str	r2, [r5, #0]
 8017560:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017564:	1a5b      	subs	r3, r3, r1
 8017566:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801756a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801756e:	612b      	str	r3, [r5, #16]
 8017570:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017574:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017578:	3f01      	subs	r7, #1
 801757a:	e757      	b.n	801742c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801757c:	4299      	cmp	r1, r3
 801757e:	dc13      	bgt.n	80175a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8017580:	429a      	cmp	r2, r3
 8017582:	da14      	bge.n	80175ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8017584:	2502      	movs	r5, #2
 8017586:	2703      	movs	r7, #3
 8017588:	46a9      	mov	r9, r5
 801758a:	f04f 0800 	mov.w	r8, #0
 801758e:	f04f 0a01 	mov.w	sl, #1
 8017592:	e6ef      	b.n	8017374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8017594:	2501      	movs	r5, #1
 8017596:	2700      	movs	r7, #0
 8017598:	46a9      	mov	r9, r5
 801759a:	46b8      	mov	r8, r7
 801759c:	f04f 0a02 	mov.w	sl, #2
 80175a0:	e6e8      	b.n	8017374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80175a2:	2501      	movs	r5, #1
 80175a4:	2702      	movs	r7, #2
 80175a6:	e6e1      	b.n	801736c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80175a8:	2500      	movs	r5, #0
 80175aa:	2701      	movs	r7, #1
 80175ac:	e7f4      	b.n	8017598 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80175ae:	2702      	movs	r7, #2
 80175b0:	2503      	movs	r5, #3
 80175b2:	f04f 0900 	mov.w	r9, #0
 80175b6:	46b8      	mov	r8, r7
 80175b8:	e7e9      	b.n	801758e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80175ba:	4613      	mov	r3, r2
 80175bc:	e728      	b.n	8017410 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80175be:	bf00      	nop
 80175c0:	20013834 	.word	0x20013834
 80175c4:	fffd8f01 	.word	0xfffd8f01
 80175c8:	00027100 	.word	0x00027100
 80175cc:	0004e1ff 	.word	0x0004e1ff
 80175d0:	0004e1fe 	.word	0x0004e1fe
 80175d4:	2001383c 	.word	0x2001383c
 80175d8:	4613      	mov	r3, r2
 80175da:	992b      	ldr	r1, [sp, #172]	; 0xac
 80175dc:	9111      	str	r1, [sp, #68]	; 0x44
 80175de:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 80175e2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 80175e6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80175e8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 80175ec:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 80175f0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 80175f4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80175f8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80175fc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8017600:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8017604:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8017608:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801760c:	469e      	mov	lr, r3
 801760e:	469c      	mov	ip, r3
 8017610:	f04f 0900 	mov.w	r9, #0
 8017614:	f1bc 0f00 	cmp.w	ip, #0
 8017618:	d147      	bne.n	80176aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801761a:	eb03 0c07 	add.w	ip, r3, r7
 801761e:	1ad7      	subs	r7, r2, r3
 8017620:	f1b9 0f00 	cmp.w	r9, #0
 8017624:	d009      	beq.n	801763a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8017626:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801762a:	9029      	str	r0, [sp, #164]	; 0xa4
 801762c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8017630:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8017634:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8017638:	912d      	str	r1, [sp, #180]	; 0xb4
 801763a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801763c:	9111      	str	r1, [sp, #68]	; 0x44
 801763e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8017642:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017646:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801764a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801764e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8017652:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017656:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801765a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801765e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8017662:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017666:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801766a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801766e:	f04f 0800 	mov.w	r8, #0
 8017672:	f1be 0f00 	cmp.w	lr, #0
 8017676:	d031      	beq.n	80176dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8017678:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801767a:	4431      	add	r1, r6
 801767c:	4549      	cmp	r1, r9
 801767e:	4450      	add	r0, sl
 8017680:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017684:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017688:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801768c:	db08      	blt.n	80176a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801768e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8017692:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017696:	ee37 7a06 	vadd.f32	s14, s14, s12
 801769a:	3001      	adds	r0, #1
 801769c:	eba1 0109 	sub.w	r1, r1, r9
 80176a0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80176a4:	f04f 0801 	mov.w	r8, #1
 80176a8:	e7e3      	b.n	8017672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80176aa:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80176ac:	4431      	add	r1, r6
 80176ae:	4541      	cmp	r1, r8
 80176b0:	4450      	add	r0, sl
 80176b2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80176b6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80176ba:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80176be:	db08      	blt.n	80176d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80176c0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80176c4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80176c8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80176cc:	3001      	adds	r0, #1
 80176ce:	eba1 0108 	sub.w	r1, r1, r8
 80176d2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80176d6:	f04f 0901 	mov.w	r9, #1
 80176da:	e79b      	b.n	8017614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80176dc:	449c      	add	ip, r3
 80176de:	1aff      	subs	r7, r7, r3
 80176e0:	f1b8 0f00 	cmp.w	r8, #0
 80176e4:	d009      	beq.n	80176fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80176e6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80176ea:	9019      	str	r0, [sp, #100]	; 0x64
 80176ec:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80176f0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80176f4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80176f8:	911d      	str	r1, [sp, #116]	; 0x74
 80176fa:	1ad2      	subs	r2, r2, r3
 80176fc:	e68b      	b.n	8017416 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80176fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017700:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8017702:	2b00      	cmp	r3, #0
 8017704:	f000 80d1 	beq.w	80178aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8017708:	ad19      	add	r5, sp, #100	; 0x64
 801770a:	ac39      	add	r4, sp, #228	; 0xe4
 801770c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801770e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8017712:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017716:	930c      	str	r3, [sp, #48]	; 0x30
 8017718:	990c      	ldr	r1, [sp, #48]	; 0x30
 801771a:	6963      	ldr	r3, [r4, #20]
 801771c:	440b      	add	r3, r1
 801771e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8017722:	4408      	add	r0, r1
 8017724:	b200      	sxth	r0, r0
 8017726:	4283      	cmp	r3, r0
 8017728:	900d      	str	r0, [sp, #52]	; 0x34
 801772a:	f280 80c1 	bge.w	80178b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801772e:	428b      	cmp	r3, r1
 8017730:	da08      	bge.n	8017744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017732:	2a00      	cmp	r2, #0
 8017734:	dd06      	ble.n	8017744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8017736:	1acb      	subs	r3, r1, r3
 8017738:	429a      	cmp	r2, r3
 801773a:	f2c0 80bb 	blt.w	80178b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801773e:	2b00      	cmp	r3, #0
 8017740:	f300 80b9 	bgt.w	80178b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8017744:	6967      	ldr	r7, [r4, #20]
 8017746:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017748:	443b      	add	r3, r7
 801774a:	461f      	mov	r7, r3
 801774c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801774e:	1bdf      	subs	r7, r3, r7
 8017750:	4297      	cmp	r7, r2
 8017752:	bfa8      	it	ge
 8017754:	4617      	movge	r7, r2
 8017756:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801775a:	2f00      	cmp	r7, #0
 801775c:	f340 813c 	ble.w	80179d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8017760:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8017762:	6829      	ldr	r1, [r5, #0]
 8017764:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017768:	f9bb 3000 	ldrsh.w	r3, [fp]
 801776c:	6820      	ldr	r0, [r4, #0]
 801776e:	4411      	add	r1, r2
 8017770:	4299      	cmp	r1, r3
 8017772:	dd1a      	ble.n	80177aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017774:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8017778:	440b      	add	r3, r1
 801777a:	4402      	add	r2, r0
 801777c:	b21b      	sxth	r3, r3
 801777e:	429a      	cmp	r2, r3
 8017780:	dc13      	bgt.n	80177aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8017782:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017784:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017786:	681b      	ldr	r3, [r3, #0]
 8017788:	9206      	str	r2, [sp, #24]
 801778a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801778c:	9205      	str	r2, [sp, #20]
 801778e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017790:	9500      	str	r5, [sp, #0]
 8017792:	e9cd b203 	strd	fp, r2, [sp, #12]
 8017796:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8017798:	9809      	ldr	r0, [sp, #36]	; 0x24
 801779a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801779e:	a912      	add	r1, sp, #72	; 0x48
 80177a0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80177a4:	aa49      	add	r2, sp, #292	; 0x124
 80177a6:	4623      	mov	r3, r4
 80177a8:	47c8      	blx	r9
 80177aa:	e9d4 2300 	ldrd	r2, r3, [r4]
 80177ae:	441a      	add	r2, r3
 80177b0:	6963      	ldr	r3, [r4, #20]
 80177b2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80177b6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80177ba:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80177be:	68a1      	ldr	r1, [r4, #8]
 80177c0:	ed94 6a08 	vldr	s12, [r4, #32]
 80177c4:	6022      	str	r2, [r4, #0]
 80177c6:	3301      	adds	r3, #1
 80177c8:	6163      	str	r3, [r4, #20]
 80177ca:	69a3      	ldr	r3, [r4, #24]
 80177cc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80177d0:	3b01      	subs	r3, #1
 80177d2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80177d6:	61a3      	str	r3, [r4, #24]
 80177d8:	6923      	ldr	r3, [r4, #16]
 80177da:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80177de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80177e2:	edd4 6a07 	vldr	s13, [r4, #28]
 80177e6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80177ea:	440b      	add	r3, r1
 80177ec:	68e1      	ldr	r1, [r4, #12]
 80177ee:	6123      	str	r3, [r4, #16]
 80177f0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80177f4:	428b      	cmp	r3, r1
 80177f6:	edc4 6a07 	vstr	s13, [r4, #28]
 80177fa:	db15      	blt.n	8017828 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80177fc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8017800:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017804:	3201      	adds	r2, #1
 8017806:	edc4 6a07 	vstr	s13, [r4, #28]
 801780a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801780e:	6022      	str	r2, [r4, #0]
 8017810:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017814:	1a5b      	subs	r3, r3, r1
 8017816:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801781a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801781e:	6123      	str	r3, [r4, #16]
 8017820:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017824:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8017828:	e9d5 2300 	ldrd	r2, r3, [r5]
 801782c:	441a      	add	r2, r3
 801782e:	696b      	ldr	r3, [r5, #20]
 8017830:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8017834:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8017838:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801783c:	68a9      	ldr	r1, [r5, #8]
 801783e:	ed95 6a08 	vldr	s12, [r5, #32]
 8017842:	602a      	str	r2, [r5, #0]
 8017844:	3301      	adds	r3, #1
 8017846:	616b      	str	r3, [r5, #20]
 8017848:	69ab      	ldr	r3, [r5, #24]
 801784a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801784e:	3b01      	subs	r3, #1
 8017850:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8017854:	61ab      	str	r3, [r5, #24]
 8017856:	692b      	ldr	r3, [r5, #16]
 8017858:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801785c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8017860:	edd5 6a07 	vldr	s13, [r5, #28]
 8017864:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8017868:	440b      	add	r3, r1
 801786a:	68e9      	ldr	r1, [r5, #12]
 801786c:	612b      	str	r3, [r5, #16]
 801786e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8017872:	428b      	cmp	r3, r1
 8017874:	edc5 6a07 	vstr	s13, [r5, #28]
 8017878:	db15      	blt.n	80178a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801787a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801787e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8017882:	3201      	adds	r2, #1
 8017884:	edc5 6a07 	vstr	s13, [r5, #28]
 8017888:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801788c:	602a      	str	r2, [r5, #0]
 801788e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8017892:	1a5b      	subs	r3, r3, r1
 8017894:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8017898:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801789c:	612b      	str	r3, [r5, #16]
 801789e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80178a2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80178a6:	3f01      	subs	r7, #1
 80178a8:	e757      	b.n	801775a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80178aa:	ad39      	add	r5, sp, #228	; 0xe4
 80178ac:	ac19      	add	r4, sp, #100	; 0x64
 80178ae:	e72d      	b.n	801770c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80178b0:	4613      	mov	r3, r2
 80178b2:	e744      	b.n	801773e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80178b4:	4613      	mov	r3, r2
 80178b6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80178ba:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80178bc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80178c0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80178c4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80178c8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80178cc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80178d0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80178d4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80178d8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80178da:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80178de:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80178e2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80178e6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80178ea:	960e      	str	r6, [sp, #56]	; 0x38
 80178ec:	469e      	mov	lr, r3
 80178ee:	461f      	mov	r7, r3
 80178f0:	f04f 0900 	mov.w	r9, #0
 80178f4:	2f00      	cmp	r7, #0
 80178f6:	d146      	bne.n	8017986 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80178f8:	449c      	add	ip, r3
 80178fa:	1ad7      	subs	r7, r2, r3
 80178fc:	f1b9 0f00 	cmp.w	r9, #0
 8017900:	d009      	beq.n	8017916 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8017902:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8017906:	9039      	str	r0, [sp, #228]	; 0xe4
 8017908:	913d      	str	r1, [sp, #244]	; 0xf4
 801790a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801790e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8017912:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8017916:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8017918:	910e      	str	r1, [sp, #56]	; 0x38
 801791a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801791e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8017922:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8017926:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801792a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801792e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8017932:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8017936:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801793a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801793e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8017942:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8017946:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801794a:	f04f 0800 	mov.w	r8, #0
 801794e:	f1be 0f00 	cmp.w	lr, #0
 8017952:	d030      	beq.n	80179b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8017954:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017956:	4431      	add	r1, r6
 8017958:	4549      	cmp	r1, r9
 801795a:	4450      	add	r0, sl
 801795c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8017960:	ee37 7a04 	vadd.f32	s14, s14, s8
 8017964:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8017968:	db08      	blt.n	801797c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801796a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801796e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8017972:	ee37 7a06 	vadd.f32	s14, s14, s12
 8017976:	3001      	adds	r0, #1
 8017978:	eba1 0109 	sub.w	r1, r1, r9
 801797c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017980:	f04f 0801 	mov.w	r8, #1
 8017984:	e7e3      	b.n	801794e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8017986:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017988:	4431      	add	r1, r6
 801798a:	4541      	cmp	r1, r8
 801798c:	4450      	add	r0, sl
 801798e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8017992:	ee77 7a84 	vadd.f32	s15, s15, s8
 8017996:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801799a:	db08      	blt.n	80179ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801799c:	ee76 6a85 	vadd.f32	s13, s13, s10
 80179a0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80179a4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80179a8:	3001      	adds	r0, #1
 80179aa:	eba1 0108 	sub.w	r1, r1, r8
 80179ae:	3f01      	subs	r7, #1
 80179b0:	f04f 0901 	mov.w	r9, #1
 80179b4:	e79e      	b.n	80178f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80179b6:	449c      	add	ip, r3
 80179b8:	1aff      	subs	r7, r7, r3
 80179ba:	f1b8 0f00 	cmp.w	r8, #0
 80179be:	d009      	beq.n	80179d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80179c0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80179c4:	9019      	str	r0, [sp, #100]	; 0x64
 80179c6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80179ca:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80179ce:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80179d2:	911d      	str	r1, [sp, #116]	; 0x74
 80179d4:	1ad2      	subs	r2, r2, r3
 80179d6:	e6b5      	b.n	8017744 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80179d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80179da:	681b      	ldr	r3, [r3, #0]
 80179dc:	b923      	cbnz	r3, 80179e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80179de:	4b04      	ldr	r3, [pc, #16]	; (80179f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80179e0:	6818      	ldr	r0, [r3, #0]
 80179e2:	6803      	ldr	r3, [r0, #0]
 80179e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179e6:	4798      	blx	r3
 80179e8:	b05b      	add	sp, #364	; 0x16c
 80179ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179ee:	bf00      	nop
 80179f0:	2001383c 	.word	0x2001383c

080179f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80179f4:	b570      	push	{r4, r5, r6, lr}
 80179f6:	4604      	mov	r4, r0
 80179f8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80179fc:	9805      	ldr	r0, [sp, #20]
 80179fe:	6061      	str	r1, [r4, #4]
 8017a00:	2500      	movs	r5, #0
 8017a02:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8017a06:	8263      	strh	r3, [r4, #18]
 8017a08:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017a0c:	8025      	strh	r5, [r4, #0]
 8017a0e:	7221      	strb	r1, [r4, #8]
 8017a10:	7266      	strb	r6, [r4, #9]
 8017a12:	60e0      	str	r0, [r4, #12]
 8017a14:	8222      	strh	r2, [r4, #16]
 8017a16:	82a3      	strh	r3, [r4, #20]
 8017a18:	82e5      	strh	r5, [r4, #22]
 8017a1a:	8325      	strh	r5, [r4, #24]
 8017a1c:	8365      	strh	r5, [r4, #26]
 8017a1e:	83a5      	strh	r5, [r4, #28]
 8017a20:	83e5      	strh	r5, [r4, #30]
 8017a22:	8425      	strh	r5, [r4, #32]
 8017a24:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8017a28:	b32e      	cbz	r6, 8017a76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a2a:	6803      	ldr	r3, [r0, #0]
 8017a2c:	695b      	ldr	r3, [r3, #20]
 8017a2e:	4798      	blx	r3
 8017a30:	4606      	mov	r6, r0
 8017a32:	b300      	cbz	r0, 8017a76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a34:	68e0      	ldr	r0, [r4, #12]
 8017a36:	6803      	ldr	r3, [r0, #0]
 8017a38:	4631      	mov	r1, r6
 8017a3a:	68db      	ldr	r3, [r3, #12]
 8017a3c:	4798      	blx	r3
 8017a3e:	4605      	mov	r5, r0
 8017a40:	b1c8      	cbz	r0, 8017a76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a42:	7b43      	ldrb	r3, [r0, #13]
 8017a44:	7a82      	ldrb	r2, [r0, #10]
 8017a46:	005b      	lsls	r3, r3, #1
 8017a48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017a4c:	4313      	orrs	r3, r2
 8017a4e:	8423      	strh	r3, [r4, #32]
 8017a50:	7a63      	ldrb	r3, [r4, #9]
 8017a52:	2b06      	cmp	r3, #6
 8017a54:	d10f      	bne.n	8017a76 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8017a56:	68e0      	ldr	r0, [r4, #12]
 8017a58:	6803      	ldr	r3, [r0, #0]
 8017a5a:	462a      	mov	r2, r5
 8017a5c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017a5e:	4631      	mov	r1, r6
 8017a60:	4798      	blx	r3
 8017a62:	7b6b      	ldrb	r3, [r5, #13]
 8017a64:	005b      	lsls	r3, r3, #1
 8017a66:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017a6a:	7aab      	ldrb	r3, [r5, #10]
 8017a6c:	4313      	orrs	r3, r2
 8017a6e:	4418      	add	r0, r3
 8017a70:	8c23      	ldrh	r3, [r4, #32]
 8017a72:	4418      	add	r0, r3
 8017a74:	8420      	strh	r0, [r4, #32]
 8017a76:	4620      	mov	r0, r4
 8017a78:	bd70      	pop	{r4, r5, r6, pc}

08017a7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8017a7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a7e:	2400      	movs	r4, #0
 8017a80:	b085      	sub	sp, #20
 8017a82:	4681      	mov	r9, r0
 8017a84:	4688      	mov	r8, r1
 8017a86:	4692      	mov	sl, r2
 8017a88:	469b      	mov	fp, r3
 8017a8a:	4627      	mov	r7, r4
 8017a8c:	4625      	mov	r5, r4
 8017a8e:	4626      	mov	r6, r4
 8017a90:	4554      	cmp	r4, sl
 8017a92:	da2a      	bge.n	8017aea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017a94:	2300      	movs	r3, #0
 8017a96:	9303      	str	r3, [sp, #12]
 8017a98:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017a9c:	429d      	cmp	r5, r3
 8017a9e:	d004      	beq.n	8017aaa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8017aa0:	f242 030b 	movw	r3, #8203	; 0x200b
 8017aa4:	429d      	cmp	r5, r3
 8017aa6:	bf18      	it	ne
 8017aa8:	462f      	movne	r7, r5
 8017aaa:	ab03      	add	r3, sp, #12
 8017aac:	4642      	mov	r2, r8
 8017aae:	4659      	mov	r1, fp
 8017ab0:	4648      	mov	r0, r9
 8017ab2:	f003 f9a3 	bl	801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017ab6:	4605      	mov	r5, r0
 8017ab8:	b1b8      	cbz	r0, 8017aea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017aba:	280a      	cmp	r0, #10
 8017abc:	d015      	beq.n	8017aea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8017abe:	9a03      	ldr	r2, [sp, #12]
 8017ac0:	b18a      	cbz	r2, 8017ae6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8017ac2:	7b50      	ldrb	r0, [r2, #13]
 8017ac4:	7a93      	ldrb	r3, [r2, #10]
 8017ac6:	8895      	ldrh	r5, [r2, #4]
 8017ac8:	0040      	lsls	r0, r0, #1
 8017aca:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017ace:	4303      	orrs	r3, r0
 8017ad0:	9301      	str	r3, [sp, #4]
 8017ad2:	f8d8 3000 	ldr.w	r3, [r8]
 8017ad6:	4639      	mov	r1, r7
 8017ad8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017ada:	4640      	mov	r0, r8
 8017adc:	4798      	blx	r3
 8017ade:	9b01      	ldr	r3, [sp, #4]
 8017ae0:	4418      	add	r0, r3
 8017ae2:	4406      	add	r6, r0
 8017ae4:	b2b6      	uxth	r6, r6
 8017ae6:	3401      	adds	r4, #1
 8017ae8:	e7d2      	b.n	8017a90 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8017aea:	4630      	mov	r0, r6
 8017aec:	b005      	add	sp, #20
 8017aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017af2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8017af2:	2a02      	cmp	r2, #2
 8017af4:	b530      	push	{r4, r5, lr}
 8017af6:	d011      	beq.n	8017b1c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8017af8:	2a03      	cmp	r2, #3
 8017afa:	d01c      	beq.n	8017b36 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8017afc:	2a01      	cmp	r2, #1
 8017afe:	d10c      	bne.n	8017b1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b00:	888b      	ldrh	r3, [r1, #4]
 8017b02:	8801      	ldrh	r1, [r0, #0]
 8017b04:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017b08:	8844      	ldrh	r4, [r0, #2]
 8017b0a:	8004      	strh	r4, [r0, #0]
 8017b0c:	1a5b      	subs	r3, r3, r1
 8017b0e:	1a9b      	subs	r3, r3, r2
 8017b10:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8017b14:	8043      	strh	r3, [r0, #2]
 8017b16:	8081      	strh	r1, [r0, #4]
 8017b18:	80c2      	strh	r2, [r0, #6]
 8017b1a:	bd30      	pop	{r4, r5, pc}
 8017b1c:	88cb      	ldrh	r3, [r1, #6]
 8017b1e:	8842      	ldrh	r2, [r0, #2]
 8017b20:	1a9b      	subs	r3, r3, r2
 8017b22:	88c2      	ldrh	r2, [r0, #6]
 8017b24:	1a9b      	subs	r3, r3, r2
 8017b26:	888a      	ldrh	r2, [r1, #4]
 8017b28:	8801      	ldrh	r1, [r0, #0]
 8017b2a:	8043      	strh	r3, [r0, #2]
 8017b2c:	1a52      	subs	r2, r2, r1
 8017b2e:	8881      	ldrh	r1, [r0, #4]
 8017b30:	1a52      	subs	r2, r2, r1
 8017b32:	8002      	strh	r2, [r0, #0]
 8017b34:	e7f1      	b.n	8017b1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8017b36:	88cb      	ldrh	r3, [r1, #6]
 8017b38:	8841      	ldrh	r1, [r0, #2]
 8017b3a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017b3e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8017b42:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8017b46:	8045      	strh	r5, [r0, #2]
 8017b48:	1a5b      	subs	r3, r3, r1
 8017b4a:	1a9b      	subs	r3, r3, r2
 8017b4c:	8003      	strh	r3, [r0, #0]
 8017b4e:	8082      	strh	r2, [r0, #4]
 8017b50:	80c4      	strh	r4, [r0, #6]
 8017b52:	e7e2      	b.n	8017b1a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08017b54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8017b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b58:	b09f      	sub	sp, #124	; 0x7c
 8017b5a:	9116      	str	r1, [sp, #88]	; 0x58
 8017b5c:	9317      	str	r3, [sp, #92]	; 0x5c
 8017b5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017b60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017b62:	8809      	ldrh	r1, [r1, #0]
 8017b64:	889b      	ldrh	r3, [r3, #4]
 8017b66:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8017b6a:	9212      	str	r2, [sp, #72]	; 0x48
 8017b6c:	440b      	add	r3, r1
 8017b6e:	b21b      	sxth	r3, r3
 8017b70:	9310      	str	r3, [sp, #64]	; 0x40
 8017b72:	f8d8 3000 	ldr.w	r3, [r8]
 8017b76:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8017b7a:	7b19      	ldrb	r1, [r3, #12]
 8017b7c:	7adb      	ldrb	r3, [r3, #11]
 8017b7e:	9011      	str	r0, [sp, #68]	; 0x44
 8017b80:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8017b84:	9114      	str	r1, [sp, #80]	; 0x50
 8017b86:	9315      	str	r3, [sp, #84]	; 0x54
 8017b88:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8017b8c:	2a00      	cmp	r2, #0
 8017b8e:	d06a      	beq.n	8017c66 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8017b90:	f898 3010 	ldrb.w	r3, [r8, #16]
 8017b94:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017b96:	2b06      	cmp	r3, #6
 8017b98:	bf14      	ite	ne
 8017b9a:	2301      	movne	r3, #1
 8017b9c:	2302      	moveq	r3, #2
 8017b9e:	4413      	add	r3, r2
 8017ba0:	f04f 0900 	mov.w	r9, #0
 8017ba4:	930f      	str	r3, [sp, #60]	; 0x3c
 8017ba6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8017baa:	464c      	mov	r4, r9
 8017bac:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017bb0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8017bb4:	4293      	cmp	r3, r2
 8017bb6:	f280 808f 	bge.w	8017cd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017bba:	2300      	movs	r3, #0
 8017bbc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8017bc0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8017bc4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017bc8:	429c      	cmp	r4, r3
 8017bca:	d006      	beq.n	8017bda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8017bcc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017bce:	f242 020b 	movw	r2, #8203	; 0x200b
 8017bd2:	4294      	cmp	r4, r2
 8017bd4:	bf18      	it	ne
 8017bd6:	4623      	movne	r3, r4
 8017bd8:	930d      	str	r3, [sp, #52]	; 0x34
 8017bda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017bdc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8017bde:	f8d8 2000 	ldr.w	r2, [r8]
 8017be2:	428b      	cmp	r3, r1
 8017be4:	db41      	blt.n	8017c6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8017be6:	6813      	ldr	r3, [r2, #0]
 8017be8:	4610      	mov	r0, r2
 8017bea:	695b      	ldr	r3, [r3, #20]
 8017bec:	4798      	blx	r3
 8017bee:	4604      	mov	r4, r0
 8017bf0:	f8d8 0000 	ldr.w	r0, [r8]
 8017bf4:	6803      	ldr	r3, [r0, #0]
 8017bf6:	aa1d      	add	r2, sp, #116	; 0x74
 8017bf8:	689d      	ldr	r5, [r3, #8]
 8017bfa:	4621      	mov	r1, r4
 8017bfc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c00:	47a8      	blx	r5
 8017c02:	901c      	str	r0, [sp, #112]	; 0x70
 8017c04:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c08:	429c      	cmp	r4, r3
 8017c0a:	f000 80eb 	beq.w	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c0e:	f242 030b 	movw	r3, #8203	; 0x200b
 8017c12:	429c      	cmp	r4, r3
 8017c14:	f000 80e6 	beq.w	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c18:	2c00      	cmp	r4, #0
 8017c1a:	f000 80f8 	beq.w	8017e0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017c1e:	2c0a      	cmp	r4, #10
 8017c20:	d060      	beq.n	8017ce4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017c22:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017c24:	b36a      	cbz	r2, 8017c82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8017c26:	8894      	ldrh	r4, [r2, #4]
 8017c28:	f1bb 0f00 	cmp.w	fp, #0
 8017c2c:	d03b      	beq.n	8017ca6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8017c2e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8017c32:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c36:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8017c3a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8017c3e:	f1bb 0f01 	cmp.w	fp, #1
 8017c42:	ea49 0903 	orr.w	r9, r9, r3
 8017c46:	d134      	bne.n	8017cb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8017c48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c4a:	eba6 0609 	sub.w	r6, r6, r9
 8017c4e:	2b00      	cmp	r3, #0
 8017c50:	d14f      	bne.n	8017cf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017c52:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c54:	eb09 0306 	add.w	r3, r9, r6
 8017c58:	4413      	add	r3, r2
 8017c5a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c5c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017c60:	4293      	cmp	r3, r2
 8017c62:	da51      	bge.n	8017d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017c64:	e038      	b.n	8017cd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8017c66:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017c68:	e79a      	b.n	8017ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8017c6a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8017c6e:	9301      	str	r3, [sp, #4]
 8017c70:	ab1d      	add	r3, sp, #116	; 0x74
 8017c72:	9300      	str	r3, [sp, #0]
 8017c74:	4659      	mov	r1, fp
 8017c76:	ab1c      	add	r3, sp, #112	; 0x70
 8017c78:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017c7a:	f003 f908 	bl	801ae8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8017c7e:	4604      	mov	r4, r0
 8017c80:	e7c0      	b.n	8017c04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8017c82:	f8d8 0000 	ldr.w	r0, [r8]
 8017c86:	6803      	ldr	r3, [r0, #0]
 8017c88:	691b      	ldr	r3, [r3, #16]
 8017c8a:	4798      	blx	r3
 8017c8c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c90:	4298      	cmp	r0, r3
 8017c92:	f000 80a7 	beq.w	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017c96:	f242 030b 	movw	r3, #8203	; 0x200b
 8017c9a:	4298      	cmp	r0, r3
 8017c9c:	f000 80a2 	beq.w	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017ca0:	f1bb 0f00 	cmp.w	fp, #0
 8017ca4:	d100      	bne.n	8017ca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8017ca6:	444e      	add	r6, r9
 8017ca8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017caa:	2a00      	cmp	r2, #0
 8017cac:	d1bf      	bne.n	8017c2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8017cae:	4691      	mov	r9, r2
 8017cb0:	e098      	b.n	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017cb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cb4:	2b00      	cmp	r3, #0
 8017cb6:	f000 80ac 	beq.w	8017e12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8017cba:	f1bb 0f00 	cmp.w	fp, #0
 8017cbe:	d118      	bne.n	8017cf2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8017cc0:	f8d8 0000 	ldr.w	r0, [r8]
 8017cc4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017cc6:	6803      	ldr	r3, [r0, #0]
 8017cc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cca:	4798      	blx	r3
 8017ccc:	4406      	add	r6, r0
 8017cce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017cd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017cd2:	1af3      	subs	r3, r6, r3
 8017cd4:	4293      	cmp	r3, r2
 8017cd6:	dd17      	ble.n	8017d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8017cd8:	2c00      	cmp	r4, #0
 8017cda:	f000 8098 	beq.w	8017e0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017cde:	2c0a      	cmp	r4, #10
 8017ce0:	f040 8086 	bne.w	8017df0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8017ce4:	240a      	movs	r4, #10
 8017ce6:	fab4 f084 	clz	r0, r4
 8017cea:	0940      	lsrs	r0, r0, #5
 8017cec:	b01f      	add	sp, #124	; 0x7c
 8017cee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cf2:	f8d8 0000 	ldr.w	r0, [r8]
 8017cf6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017cf8:	6803      	ldr	r3, [r0, #0]
 8017cfa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cfc:	4798      	blx	r3
 8017cfe:	f1bb 0f01 	cmp.w	fp, #1
 8017d02:	eba6 0600 	sub.w	r6, r6, r0
 8017d06:	d0a4      	beq.n	8017c52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8017d08:	981c      	ldr	r0, [sp, #112]	; 0x70
 8017d0a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017d0c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8017d10:	f9b3 7000 	ldrsh.w	r7, [r3]
 8017d14:	7b43      	ldrb	r3, [r0, #13]
 8017d16:	015b      	lsls	r3, r3, #5
 8017d18:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017d1c:	7983      	ldrb	r3, [r0, #6]
 8017d1e:	4431      	add	r1, r6
 8017d20:	4313      	orrs	r3, r2
 8017d22:	440b      	add	r3, r1
 8017d24:	42bb      	cmp	r3, r7
 8017d26:	db5d      	blt.n	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d2a:	4299      	cmp	r1, r3
 8017d2c:	da5a      	bge.n	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d2e:	f8d8 0000 	ldr.w	r0, [r8]
 8017d32:	6803      	ldr	r3, [r0, #0]
 8017d34:	42b7      	cmp	r7, r6
 8017d36:	bfc8      	it	gt
 8017d38:	1bbf      	subgt	r7, r7, r6
 8017d3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017d3c:	bfcc      	ite	gt
 8017d3e:	b2bf      	uxthgt	r7, r7
 8017d40:	2700      	movle	r7, #0
 8017d42:	4798      	blx	r3
 8017d44:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017d46:	7b5a      	ldrb	r2, [r3, #13]
 8017d48:	00d1      	lsls	r1, r2, #3
 8017d4a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8017d4e:	7a19      	ldrb	r1, [r3, #8]
 8017d50:	4329      	orrs	r1, r5
 8017d52:	0655      	lsls	r5, r2, #25
 8017d54:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017d56:	bf44      	itt	mi
 8017d58:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8017d5c:	b209      	sxthmi	r1, r1
 8017d5e:	1945      	adds	r5, r0, r5
 8017d60:	1a6d      	subs	r5, r5, r1
 8017d62:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8017d64:	b2ad      	uxth	r5, r5
 8017d66:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8017d6a:	fa0f fa85 	sxth.w	sl, r5
 8017d6e:	4551      	cmp	r1, sl
 8017d70:	dd3c      	ble.n	8017dec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8017d72:	0112      	lsls	r2, r2, #4
 8017d74:	79d8      	ldrb	r0, [r3, #7]
 8017d76:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017d7a:	4302      	orrs	r2, r0
 8017d7c:	4492      	add	sl, r2
 8017d7e:	4551      	cmp	r1, sl
 8017d80:	dc30      	bgt.n	8017de4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8017d82:	1b4d      	subs	r5, r1, r5
 8017d84:	b22d      	sxth	r5, r5
 8017d86:	468a      	mov	sl, r1
 8017d88:	9319      	str	r3, [sp, #100]	; 0x64
 8017d8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017d8c:	f8d8 0000 	ldr.w	r0, [r8]
 8017d90:	681a      	ldr	r2, [r3, #0]
 8017d92:	6801      	ldr	r1, [r0, #0]
 8017d94:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8017d96:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8017d98:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d9a:	9218      	str	r2, [sp, #96]	; 0x60
 8017d9c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8017d9e:	4788      	blx	r1
 8017da0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8017da4:	910b      	str	r1, [sp, #44]	; 0x2c
 8017da6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8017daa:	910a      	str	r1, [sp, #40]	; 0x28
 8017dac:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8017db0:	9109      	str	r1, [sp, #36]	; 0x24
 8017db2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8017db6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017db8:	9305      	str	r3, [sp, #20]
 8017dba:	b2ad      	uxth	r5, r5
 8017dbc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8017dc0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8017dc4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017dc6:	9304      	str	r3, [sp, #16]
 8017dc8:	4437      	add	r7, r6
 8017dca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017dcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017dce:	9206      	str	r2, [sp, #24]
 8017dd0:	b23f      	sxth	r7, r7
 8017dd2:	f8cd a004 	str.w	sl, [sp, #4]
 8017dd6:	9700      	str	r7, [sp, #0]
 8017dd8:	681a      	ldr	r2, [r3, #0]
 8017dda:	9916      	ldr	r1, [sp, #88]	; 0x58
 8017ddc:	685b      	ldr	r3, [r3, #4]
 8017dde:	9811      	ldr	r0, [sp, #68]	; 0x44
 8017de0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017de2:	47a8      	blx	r5
 8017de4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017de6:	3301      	adds	r3, #1
 8017de8:	930e      	str	r3, [sp, #56]	; 0x38
 8017dea:	e6e1      	b.n	8017bb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8017dec:	2500      	movs	r5, #0
 8017dee:	e7cb      	b.n	8017d88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8017df0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017df2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8017df4:	3501      	adds	r5, #1
 8017df6:	429d      	cmp	r5, r3
 8017df8:	f6bf af75 	bge.w	8017ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017dfc:	4659      	mov	r1, fp
 8017dfe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8017e00:	f7f2 fbb0 	bl	800a564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017e04:	4604      	mov	r4, r0
 8017e06:	b110      	cbz	r0, 8017e0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8017e08:	280a      	cmp	r0, #10
 8017e0a:	d1f2      	bne.n	8017df2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8017e0c:	e76a      	b.n	8017ce4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8017e0e:	2400      	movs	r4, #0
 8017e10:	e769      	b.n	8017ce6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8017e12:	f1bb 0f00 	cmp.w	fp, #0
 8017e16:	f43f af5a 	beq.w	8017cce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8017e1a:	e775      	b.n	8017d08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8017e1c:	b530      	push	{r4, r5, lr}
 8017e1e:	8ac4      	ldrh	r4, [r0, #22]
 8017e20:	8b45      	ldrh	r5, [r0, #26]
 8017e22:	8343      	strh	r3, [r0, #26]
 8017e24:	442c      	add	r4, r5
 8017e26:	1ae4      	subs	r4, r4, r3
 8017e28:	82c4      	strh	r4, [r0, #22]
 8017e2a:	8b83      	ldrh	r3, [r0, #28]
 8017e2c:	8b04      	ldrh	r4, [r0, #24]
 8017e2e:	4422      	add	r2, r4
 8017e30:	440c      	add	r4, r1
 8017e32:	1a59      	subs	r1, r3, r1
 8017e34:	83c2      	strh	r2, [r0, #30]
 8017e36:	8304      	strh	r4, [r0, #24]
 8017e38:	8381      	strh	r1, [r0, #28]
 8017e3a:	bd30      	pop	{r4, r5, pc}

08017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8017e3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e40:	4604      	mov	r4, r0
 8017e42:	8a47      	ldrh	r7, [r0, #18]
 8017e44:	68c0      	ldr	r0, [r0, #12]
 8017e46:	6803      	ldr	r3, [r0, #0]
 8017e48:	b085      	sub	sp, #20
 8017e4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017e4c:	4798      	blx	r3
 8017e4e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8017e52:	7a63      	ldrb	r3, [r4, #9]
 8017e54:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8017e58:	42b7      	cmp	r7, r6
 8017e5a:	f103 33ff 	add.w	r3, r3, #4294967295
 8017e5e:	bfac      	ite	ge
 8017e60:	f04f 0900 	movge.w	r9, #0
 8017e64:	f04f 0901 	movlt.w	r9, #1
 8017e68:	2b05      	cmp	r3, #5
 8017e6a:	d804      	bhi.n	8017e76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8017e6c:	e8df f003 	tbb	[pc, r3]
 8017e70:	470e0854 	.word	0x470e0854
 8017e74:	4c4c      	.short	0x4c4c
 8017e76:	2500      	movs	r5, #0
 8017e78:	46a9      	mov	r9, r5
 8017e7a:	462e      	mov	r6, r5
 8017e7c:	462f      	mov	r7, r5
 8017e7e:	e00d      	b.n	8017e9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017e80:	42b7      	cmp	r7, r6
 8017e82:	bfb4      	ite	lt
 8017e84:	2600      	movlt	r6, #0
 8017e86:	2601      	movge	r6, #1
 8017e88:	2500      	movs	r5, #0
 8017e8a:	e7f7      	b.n	8017e7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017e8c:	42b7      	cmp	r7, r6
 8017e8e:	464d      	mov	r5, r9
 8017e90:	f04f 0900 	mov.w	r9, #0
 8017e94:	bfb4      	ite	lt
 8017e96:	2600      	movlt	r6, #0
 8017e98:	2601      	movge	r6, #1
 8017e9a:	464f      	mov	r7, r9
 8017e9c:	f04f 0800 	mov.w	r8, #0
 8017ea0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8017ea4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8017ea8:	f8cd 8004 	str.w	r8, [sp, #4]
 8017eac:	2300      	movs	r3, #0
 8017eae:	9303      	str	r3, [sp, #12]
 8017eb0:	8823      	ldrh	r3, [r4, #0]
 8017eb2:	2b20      	cmp	r3, #32
 8017eb4:	d034      	beq.n	8017f20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8017eb6:	f242 010b 	movw	r1, #8203	; 0x200b
 8017eba:	1a5a      	subs	r2, r3, r1
 8017ebc:	f1d2 0a00 	rsbs	sl, r2, #0
 8017ec0:	eb4a 0a02 	adc.w	sl, sl, r2
 8017ec4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017ec8:	4293      	cmp	r3, r2
 8017eca:	d009      	beq.n	8017ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017ecc:	428b      	cmp	r3, r1
 8017ece:	9a01      	ldr	r2, [sp, #4]
 8017ed0:	bf18      	it	ne
 8017ed2:	461a      	movne	r2, r3
 8017ed4:	9201      	str	r2, [sp, #4]
 8017ed6:	bf0c      	ite	eq
 8017ed8:	f04f 0a01 	moveq.w	sl, #1
 8017edc:	f04f 0a00 	movne.w	sl, #0
 8017ee0:	ab03      	add	r3, sp, #12
 8017ee2:	68e2      	ldr	r2, [r4, #12]
 8017ee4:	7a21      	ldrb	r1, [r4, #8]
 8017ee6:	6860      	ldr	r0, [r4, #4]
 8017ee8:	f002 ff88 	bl	801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017eec:	8020      	strh	r0, [r4, #0]
 8017eee:	b9d8      	cbnz	r0, 8017f28 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8017ef0:	8ba2      	ldrh	r2, [r4, #28]
 8017ef2:	2300      	movs	r3, #0
 8017ef4:	4611      	mov	r1, r2
 8017ef6:	4620      	mov	r0, r4
 8017ef8:	f7ff ff90 	bl	8017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8017efc:	e06e      	b.n	8017fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8017efe:	2500      	movs	r5, #0
 8017f00:	46a9      	mov	r9, r5
 8017f02:	462e      	mov	r6, r5
 8017f04:	2701      	movs	r7, #1
 8017f06:	e7c9      	b.n	8017e9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f08:	42b7      	cmp	r7, r6
 8017f0a:	f04f 0500 	mov.w	r5, #0
 8017f0e:	bfb4      	ite	lt
 8017f10:	2700      	movlt	r7, #0
 8017f12:	2701      	movge	r7, #1
 8017f14:	462e      	mov	r6, r5
 8017f16:	e7c1      	b.n	8017e9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8017f18:	2500      	movs	r5, #0
 8017f1a:	46a9      	mov	r9, r5
 8017f1c:	2601      	movs	r6, #1
 8017f1e:	e7ad      	b.n	8017e7c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8017f20:	9301      	str	r3, [sp, #4]
 8017f22:	f04f 0a01 	mov.w	sl, #1
 8017f26:	e7db      	b.n	8017ee0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8017f28:	8b63      	ldrh	r3, [r4, #26]
 8017f2a:	280a      	cmp	r0, #10
 8017f2c:	f103 0301 	add.w	r3, r3, #1
 8017f30:	8363      	strh	r3, [r4, #26]
 8017f32:	d0dd      	beq.n	8017ef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8017f34:	9a03      	ldr	r2, [sp, #12]
 8017f36:	bb62      	cbnz	r2, 8017f92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8017f38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017f3c:	4298      	cmp	r0, r3
 8017f3e:	d003      	beq.n	8017f48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017f40:	f242 030b 	movw	r3, #8203	; 0x200b
 8017f44:	4298      	cmp	r0, r3
 8017f46:	d1b1      	bne.n	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017f48:	8823      	ldrh	r3, [r4, #0]
 8017f4a:	8ba1      	ldrh	r1, [r4, #28]
 8017f4c:	2b20      	cmp	r3, #32
 8017f4e:	d003      	beq.n	8017f58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8017f50:	f242 000b 	movw	r0, #8203	; 0x200b
 8017f54:	4283      	cmp	r3, r0
 8017f56:	d131      	bne.n	8017fbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8017f58:	f1ba 0f00 	cmp.w	sl, #0
 8017f5c:	bf0a      	itet	eq
 8017f5e:	4688      	moveq	r8, r1
 8017f60:	4650      	movne	r0, sl
 8017f62:	2001      	moveq	r0, #1
 8017f64:	440a      	add	r2, r1
 8017f66:	8b23      	ldrh	r3, [r4, #24]
 8017f68:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8017f6c:	b292      	uxth	r2, r2
 8017f6e:	83a2      	strh	r2, [r4, #28]
 8017f70:	4413      	add	r3, r2
 8017f72:	f1b9 0f00 	cmp.w	r9, #0
 8017f76:	d102      	bne.n	8017f7e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8017f78:	2d00      	cmp	r5, #0
 8017f7a:	d042      	beq.n	8018002 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8017f7c:	b300      	cbz	r0, 8017fc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8017f7e:	8c21      	ldrh	r1, [r4, #32]
 8017f80:	4419      	add	r1, r3
 8017f82:	458c      	cmp	ip, r1
 8017f84:	da37      	bge.n	8017ff6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017f86:	8ae1      	ldrh	r1, [r4, #22]
 8017f88:	2900      	cmp	r1, #0
 8017f8a:	d034      	beq.n	8017ff6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8017f8c:	4563      	cmp	r3, ip
 8017f8e:	dd8d      	ble.n	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017f90:	e01d      	b.n	8017fce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8017f92:	8893      	ldrh	r3, [r2, #4]
 8017f94:	8023      	strh	r3, [r4, #0]
 8017f96:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8017f9a:	9901      	ldr	r1, [sp, #4]
 8017f9c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8017fa0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8017fa4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8017fa8:	ea4b 0b00 	orr.w	fp, fp, r0
 8017fac:	68e0      	ldr	r0, [r4, #12]
 8017fae:	6803      	ldr	r3, [r0, #0]
 8017fb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017fb2:	4798      	blx	r3
 8017fb4:	eb0b 0200 	add.w	r2, fp, r0
 8017fb8:	b292      	uxth	r2, r2
 8017fba:	e7c5      	b.n	8017f48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8017fbc:	2000      	movs	r0, #0
 8017fbe:	e7d1      	b.n	8017f64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8017fc0:	4563      	cmp	r3, ip
 8017fc2:	f77f af73 	ble.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fc6:	8ae3      	ldrh	r3, [r4, #22]
 8017fc8:	2b00      	cmp	r3, #0
 8017fca:	f43f af6f 	beq.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8017fce:	2301      	movs	r3, #1
 8017fd0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8017fd4:	8c22      	ldrh	r2, [r4, #32]
 8017fd6:	8be3      	ldrh	r3, [r4, #30]
 8017fd8:	4413      	add	r3, r2
 8017fda:	83e3      	strh	r3, [r4, #30]
 8017fdc:	68e0      	ldr	r0, [r4, #12]
 8017fde:	6803      	ldr	r3, [r0, #0]
 8017fe0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017fe2:	4798      	blx	r3
 8017fe4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8017fe8:	4418      	add	r0, r3
 8017fea:	8a63      	ldrh	r3, [r4, #18]
 8017fec:	1a18      	subs	r0, r3, r0
 8017fee:	8260      	strh	r0, [r4, #18]
 8017ff0:	b005      	add	sp, #20
 8017ff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ff6:	2300      	movs	r3, #0
 8017ff8:	4611      	mov	r1, r2
 8017ffa:	4620      	mov	r0, r4
 8017ffc:	f7ff ff0e 	bl	8017e1c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8018000:	e754      	b.n	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018002:	4563      	cmp	r3, ip
 8018004:	dd14      	ble.n	8018030 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8018006:	b117      	cbz	r7, 801800e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8018008:	2301      	movs	r3, #1
 801800a:	460a      	mov	r2, r1
 801800c:	e772      	b.n	8017ef4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801800e:	2e00      	cmp	r6, #0
 8018010:	f43f af4c 	beq.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018014:	2800      	cmp	r0, #0
 8018016:	f47f af49 	bne.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801801a:	f1ba 0f00 	cmp.w	sl, #0
 801801e:	d002      	beq.n	8018026 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8018020:	2301      	movs	r3, #1
 8018022:	4642      	mov	r2, r8
 8018024:	e767      	b.n	8017ef6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8018026:	8ae3      	ldrh	r3, [r4, #22]
 8018028:	2b00      	cmp	r3, #0
 801802a:	f43f af3f 	beq.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801802e:	e7d5      	b.n	8017fdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8018030:	2800      	cmp	r0, #0
 8018032:	f47f af3b 	bne.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8018036:	f1ba 0f00 	cmp.w	sl, #0
 801803a:	f43f af37 	beq.w	8017eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801803e:	2301      	movs	r3, #1
 8018040:	4642      	mov	r2, r8
 8018042:	e7da      	b.n	8017ffa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08018044 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8018044:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018046:	4605      	mov	r5, r0
 8018048:	b08f      	sub	sp, #60	; 0x3c
 801804a:	4617      	mov	r7, r2
 801804c:	461c      	mov	r4, r3
 801804e:	460e      	mov	r6, r1
 8018050:	b1d1      	cbz	r1, 8018088 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8018052:	681b      	ldr	r3, [r3, #0]
 8018054:	4620      	mov	r0, r4
 8018056:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018058:	4798      	blx	r3
 801805a:	4240      	negs	r0, r0
 801805c:	b200      	sxth	r0, r0
 801805e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8018062:	9603      	str	r6, [sp, #12]
 8018064:	9700      	str	r7, [sp, #0]
 8018066:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801806a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801806e:	4629      	mov	r1, r5
 8018070:	a805      	add	r0, sp, #20
 8018072:	f7ff fcbf 	bl	80179f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8018076:	2401      	movs	r4, #1
 8018078:	a805      	add	r0, sp, #20
 801807a:	f7ff fedf 	bl	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801807e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8018082:	b163      	cbz	r3, 801809e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8018084:	3401      	adds	r4, #1
 8018086:	e7f7      	b.n	8018078 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8018088:	f002 ff86 	bl	801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801808c:	2401      	movs	r4, #1
 801808e:	280a      	cmp	r0, #10
 8018090:	4628      	mov	r0, r5
 8018092:	bf08      	it	eq
 8018094:	3401      	addeq	r4, #1
 8018096:	f002 ff7f 	bl	801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801809a:	2800      	cmp	r0, #0
 801809c:	d1f7      	bne.n	801808e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801809e:	b2a0      	uxth	r0, r4
 80180a0:	b00f      	add	sp, #60	; 0x3c
 80180a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080180a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80180a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180a8:	b0e3      	sub	sp, #396	; 0x18c
 80180aa:	461c      	mov	r4, r3
 80180ac:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80180ae:	4683      	mov	fp, r0
 80180b0:	4688      	mov	r8, r1
 80180b2:	2b00      	cmp	r3, #0
 80180b4:	f000 8112 	beq.w	80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180b8:	6823      	ldr	r3, [r4, #0]
 80180ba:	2b00      	cmp	r3, #0
 80180bc:	f000 810e 	beq.w	80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180c0:	7ba3      	ldrb	r3, [r4, #14]
 80180c2:	2b00      	cmp	r3, #0
 80180c4:	f000 810a 	beq.w	80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80180c8:	6810      	ldr	r0, [r2, #0]
 80180ca:	6851      	ldr	r1, [r2, #4]
 80180cc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80180d0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80180d4:	ad0a      	add	r5, sp, #40	; 0x28
 80180d6:	462b      	mov	r3, r5
 80180d8:	c303      	stmia	r3!, {r0, r1}
 80180da:	2100      	movs	r1, #0
 80180dc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80180e0:	910c      	str	r1, [sp, #48]	; 0x30
 80180e2:	79a2      	ldrb	r2, [r4, #6]
 80180e4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80180e8:	a90c      	add	r1, sp, #48	; 0x30
 80180ea:	4628      	mov	r0, r5
 80180ec:	f7ff fd01 	bl	8017af2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80180f0:	a90c      	add	r1, sp, #48	; 0x30
 80180f2:	4608      	mov	r0, r1
 80180f4:	79a2      	ldrb	r2, [r4, #6]
 80180f6:	f7ff fcfc 	bl	8017af2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80180fa:	a817      	add	r0, sp, #92	; 0x5c
 80180fc:	f002 fb20 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8018100:	6820      	ldr	r0, [r4, #0]
 8018102:	6803      	ldr	r3, [r0, #0]
 8018104:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018106:	4798      	blx	r3
 8018108:	4606      	mov	r6, r0
 801810a:	6820      	ldr	r0, [r4, #0]
 801810c:	6803      	ldr	r3, [r0, #0]
 801810e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018110:	4798      	blx	r3
 8018112:	4633      	mov	r3, r6
 8018114:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8018116:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8018118:	9000      	str	r0, [sp, #0]
 801811a:	a817      	add	r0, sp, #92	; 0x5c
 801811c:	f002 fb6b 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018120:	6820      	ldr	r0, [r4, #0]
 8018122:	f894 a004 	ldrb.w	sl, [r4, #4]
 8018126:	6803      	ldr	r3, [r0, #0]
 8018128:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801812a:	4798      	blx	r3
 801812c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8018130:	6823      	ldr	r3, [r4, #0]
 8018132:	4607      	mov	r7, r0
 8018134:	4406      	add	r6, r0
 8018136:	a830      	add	r0, sp, #192	; 0xc0
 8018138:	f893 9009 	ldrb.w	r9, [r3, #9]
 801813c:	f002 fb00 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8018140:	7c23      	ldrb	r3, [r4, #16]
 8018142:	b17b      	cbz	r3, 8018164 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8018144:	6820      	ldr	r0, [r4, #0]
 8018146:	6803      	ldr	r3, [r0, #0]
 8018148:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801814a:	4798      	blx	r3
 801814c:	9009      	str	r0, [sp, #36]	; 0x24
 801814e:	6820      	ldr	r0, [r4, #0]
 8018150:	6802      	ldr	r2, [r0, #0]
 8018152:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8018154:	4790      	blx	r2
 8018156:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018158:	9000      	str	r0, [sp, #0]
 801815a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801815c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801815e:	a830      	add	r0, sp, #192	; 0xc0
 8018160:	f002 fb49 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018164:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018168:	7be2      	ldrb	r2, [r4, #15]
 801816a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801816e:	1a8a      	subs	r2, r1, r2
 8018170:	7c21      	ldrb	r1, [r4, #16]
 8018172:	9103      	str	r1, [sp, #12]
 8018174:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8018178:	9102      	str	r1, [sp, #8]
 801817a:	6821      	ldr	r1, [r4, #0]
 801817c:	9101      	str	r1, [sp, #4]
 801817e:	7961      	ldrb	r1, [r4, #5]
 8018180:	9100      	str	r1, [sp, #0]
 8018182:	b292      	uxth	r2, r2
 8018184:	a930      	add	r1, sp, #192	; 0xc0
 8018186:	a80e      	add	r0, sp, #56	; 0x38
 8018188:	f7ff fc34 	bl	80179f4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801818c:	2e00      	cmp	r6, #0
 801818e:	dc5b      	bgt.n	8018248 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8018190:	af17      	add	r7, sp, #92	; 0x5c
 8018192:	f04f 0900 	mov.w	r9, #0
 8018196:	7c23      	ldrb	r3, [r4, #16]
 8018198:	2b00      	cmp	r3, #0
 801819a:	f000 80b1 	beq.w	8018300 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801819e:	a80e      	add	r0, sp, #56	; 0x38
 80181a0:	f7ff fe4c 	bl	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80181a4:	f1ba 0f00 	cmp.w	sl, #0
 80181a8:	f000 80a5 	beq.w	80182f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80181ac:	7c23      	ldrb	r3, [r4, #16]
 80181ae:	9309      	str	r3, [sp, #36]	; 0x24
 80181b0:	2264      	movs	r2, #100	; 0x64
 80181b2:	4639      	mov	r1, r7
 80181b4:	a849      	add	r0, sp, #292	; 0x124
 80181b6:	f015 feee 	bl	802df96 <memcpy>
 80181ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80181bc:	2b00      	cmp	r3, #0
 80181be:	f000 80a7 	beq.w	8018310 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80181c2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80181c6:	7922      	ldrb	r2, [r4, #4]
 80181c8:	2a01      	cmp	r2, #1
 80181ca:	f040 808a 	bne.w	80182e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80181ce:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80181d2:	1ac0      	subs	r0, r0, r3
 80181d4:	2302      	movs	r3, #2
 80181d6:	fb90 f0f3 	sdiv	r0, r0, r3
 80181da:	b200      	sxth	r0, r0
 80181dc:	7c23      	ldrb	r3, [r4, #16]
 80181de:	2b00      	cmp	r3, #0
 80181e0:	f000 808b 	beq.w	80182fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80181e4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80181e8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80181ec:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80181f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80181f4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80181f8:	4410      	add	r0, r2
 80181fa:	b200      	sxth	r0, r0
 80181fc:	9000      	str	r0, [sp, #0]
 80181fe:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8018202:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8018206:	4642      	mov	r2, r8
 8018208:	2100      	movs	r1, #0
 801820a:	4658      	mov	r0, fp
 801820c:	f7ff fca2 	bl	8017b54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8018210:	2800      	cmp	r0, #0
 8018212:	d163      	bne.n	80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018214:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018218:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801821c:	b2b2      	uxth	r2, r6
 801821e:	4413      	add	r3, r2
 8018220:	1a8a      	subs	r2, r1, r2
 8018222:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8018226:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801822a:	b21b      	sxth	r3, r3
 801822c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018230:	2a00      	cmp	r2, #0
 8018232:	d153      	bne.n	80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018234:	6822      	ldr	r2, [r4, #0]
 8018236:	8869      	ldrh	r1, [r5, #2]
 8018238:	7a12      	ldrb	r2, [r2, #8]
 801823a:	1a9b      	subs	r3, r3, r2
 801823c:	88ea      	ldrh	r2, [r5, #6]
 801823e:	440a      	add	r2, r1
 8018240:	b212      	sxth	r2, r2
 8018242:	4293      	cmp	r3, r2
 8018244:	dda7      	ble.n	8018196 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8018246:	e049      	b.n	80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8018248:	7c23      	ldrb	r3, [r4, #16]
 801824a:	444f      	add	r7, r9
 801824c:	b1c3      	cbz	r3, 8018280 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801824e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8018252:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018256:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801825a:	443b      	add	r3, r7
 801825c:	4293      	cmp	r3, r2
 801825e:	da97      	bge.n	8018190 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018260:	a80e      	add	r0, sp, #56	; 0x38
 8018262:	f7ff fdeb 	bl	8017e3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8018266:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801826a:	3b01      	subs	r3, #1
 801826c:	b29b      	uxth	r3, r3
 801826e:	454b      	cmp	r3, r9
 8018270:	9309      	str	r3, [sp, #36]	; 0x24
 8018272:	d021      	beq.n	80182b8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8018274:	7961      	ldrb	r1, [r4, #5]
 8018276:	a817      	add	r0, sp, #92	; 0x5c
 8018278:	f7f2 f974 	bl	800a564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801827c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801827e:	e7f4      	b.n	801826a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8018280:	fa1f f986 	uxth.w	r9, r6
 8018284:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018288:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801828c:	443b      	add	r3, r7
 801828e:	4293      	cmp	r3, r2
 8018290:	f6bf af7e 	bge.w	8018190 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8018294:	a817      	add	r0, sp, #92	; 0x5c
 8018296:	f002 fe7f 	bl	801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801829a:	b1f8      	cbz	r0, 80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801829c:	280a      	cmp	r0, #10
 801829e:	d1f1      	bne.n	8018284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80182a0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80182a4:	444b      	add	r3, r9
 80182a6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80182aa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80182ae:	eba3 0309 	sub.w	r3, r3, r9
 80182b2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182b6:	e7e5      	b.n	8018284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80182b8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80182bc:	b2b3      	uxth	r3, r6
 80182be:	441a      	add	r2, r3
 80182c0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80182c4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80182c8:	1ad3      	subs	r3, r2, r3
 80182ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80182ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80182d2:	b11b      	cbz	r3, 80182dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80182d4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80182d8:	2b00      	cmp	r3, #0
 80182da:	d0ba      	beq.n	8018252 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80182dc:	b063      	add	sp, #396	; 0x18c
 80182de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182e2:	2a02      	cmp	r2, #2
 80182e4:	d105      	bne.n	80182f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80182e6:	7be2      	ldrb	r2, [r4, #15]
 80182e8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80182ec:	1a80      	subs	r0, r0, r2
 80182ee:	1ac0      	subs	r0, r0, r3
 80182f0:	e773      	b.n	80181da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80182f2:	2000      	movs	r0, #0
 80182f4:	e772      	b.n	80181dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80182f6:	7be0      	ldrb	r0, [r4, #15]
 80182f8:	e770      	b.n	80181dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80182fa:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80182fe:	e773      	b.n	80181e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8018300:	f1ba 0f00 	cmp.w	sl, #0
 8018304:	d0f7      	beq.n	80182f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8018306:	2264      	movs	r2, #100	; 0x64
 8018308:	4639      	mov	r1, r7
 801830a:	a849      	add	r0, sp, #292	; 0x124
 801830c:	f015 fe43 	bl	802df96 <memcpy>
 8018310:	2300      	movs	r3, #0
 8018312:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8018316:	6821      	ldr	r1, [r4, #0]
 8018318:	a849      	add	r0, sp, #292	; 0x124
 801831a:	f7ff fbae 	bl	8017a7a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801831e:	b203      	sxth	r3, r0
 8018320:	e751      	b.n	80181c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08018322 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8018322:	2b03      	cmp	r3, #3
 8018324:	d818      	bhi.n	8018358 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8018326:	e8df f003 	tbb	[pc, r3]
 801832a:	0602      	.short	0x0602
 801832c:	130d      	.short	0x130d
 801832e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8018332:	1850      	adds	r0, r2, r1
 8018334:	4770      	bx	lr
 8018336:	8803      	ldrh	r3, [r0, #0]
 8018338:	8880      	ldrh	r0, [r0, #4]
 801833a:	4418      	add	r0, r3
 801833c:	b200      	sxth	r0, r0
 801833e:	1a80      	subs	r0, r0, r2
 8018340:	3801      	subs	r0, #1
 8018342:	4770      	bx	lr
 8018344:	8803      	ldrh	r3, [r0, #0]
 8018346:	8880      	ldrh	r0, [r0, #4]
 8018348:	4418      	add	r0, r3
 801834a:	b200      	sxth	r0, r0
 801834c:	1a40      	subs	r0, r0, r1
 801834e:	e7f7      	b.n	8018340 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8018350:	f9b0 0000 	ldrsh.w	r0, [r0]
 8018354:	4410      	add	r0, r2
 8018356:	4770      	bx	lr
 8018358:	2000      	movs	r0, #0
 801835a:	4770      	bx	lr

0801835c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801835c:	2b03      	cmp	r3, #3
 801835e:	d817      	bhi.n	8018390 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8018360:	e8df f003 	tbb	[pc, r3]
 8018364:	10090602 	.word	0x10090602
 8018368:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801836c:	1850      	adds	r0, r2, r1
 801836e:	4770      	bx	lr
 8018370:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8018374:	e7fa      	b.n	801836c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8018376:	8843      	ldrh	r3, [r0, #2]
 8018378:	88c0      	ldrh	r0, [r0, #6]
 801837a:	4418      	add	r0, r3
 801837c:	b200      	sxth	r0, r0
 801837e:	1a80      	subs	r0, r0, r2
 8018380:	3801      	subs	r0, #1
 8018382:	4770      	bx	lr
 8018384:	8843      	ldrh	r3, [r0, #2]
 8018386:	88c0      	ldrh	r0, [r0, #6]
 8018388:	4418      	add	r0, r3
 801838a:	b200      	sxth	r0, r0
 801838c:	1a40      	subs	r0, r0, r1
 801838e:	e7f7      	b.n	8018380 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8018390:	2000      	movs	r0, #0
 8018392:	4770      	bx	lr

08018394 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8018394:	4b01      	ldr	r3, [pc, #4]	; (801839c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8018396:	2200      	movs	r2, #0
 8018398:	601a      	str	r2, [r3, #0]
 801839a:	4770      	bx	lr
 801839c:	2001384c 	.word	0x2001384c

080183a0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80183a0:	4603      	mov	r3, r0
 80183a2:	b1c8      	cbz	r0, 80183d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80183a4:	0c02      	lsrs	r2, r0, #16
 80183a6:	0412      	lsls	r2, r2, #16
 80183a8:	b9a2      	cbnz	r2, 80183d4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80183aa:	0403      	lsls	r3, r0, #16
 80183ac:	2010      	movs	r0, #16
 80183ae:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80183b2:	bf04      	itt	eq
 80183b4:	021b      	lsleq	r3, r3, #8
 80183b6:	3008      	addeq	r0, #8
 80183b8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80183bc:	bf04      	itt	eq
 80183be:	011b      	lsleq	r3, r3, #4
 80183c0:	3004      	addeq	r0, #4
 80183c2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80183c6:	bf04      	itt	eq
 80183c8:	009b      	lsleq	r3, r3, #2
 80183ca:	3002      	addeq	r0, #2
 80183cc:	2b00      	cmp	r3, #0
 80183ce:	db04      	blt.n	80183da <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80183d0:	3001      	adds	r0, #1
 80183d2:	4770      	bx	lr
 80183d4:	2000      	movs	r0, #0
 80183d6:	e7ea      	b.n	80183ae <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80183d8:	2020      	movs	r0, #32
 80183da:	4770      	bx	lr

080183dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80183dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e0:	b087      	sub	sp, #28
 80183e2:	460d      	mov	r5, r1
 80183e4:	4616      	mov	r6, r2
 80183e6:	4698      	mov	r8, r3
 80183e8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80183ec:	4601      	mov	r1, r0
 80183ee:	b120      	cbz	r0, 80183fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80183f0:	b11a      	cbz	r2, 80183fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80183f2:	2d1f      	cmp	r5, #31
 80183f4:	d801      	bhi.n	80183fa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80183f6:	2b1f      	cmp	r3, #31
 80183f8:	d904      	bls.n	8018404 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80183fa:	2000      	movs	r0, #0
 80183fc:	6038      	str	r0, [r7, #0]
 80183fe:	b007      	add	sp, #28
 8018400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018404:	b97d      	cbnz	r5, 8018426 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8018406:	b143      	cbz	r3, 801841a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8018408:	4602      	mov	r2, r0
 801840a:	e9cd 4700 	strd	r4, r7, [sp]
 801840e:	462b      	mov	r3, r5
 8018410:	4641      	mov	r1, r8
 8018412:	4630      	mov	r0, r6
 8018414:	f7ff ffe2 	bl	80183dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018418:	e7f1      	b.n	80183fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801841a:	f04f 33ff 	mov.w	r3, #4294967295
 801841e:	603b      	str	r3, [r7, #0]
 8018420:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018424:	e7eb      	b.n	80183fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8018426:	fa32 fa05 	lsrs.w	sl, r2, r5
 801842a:	d106      	bne.n	801843a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801842c:	4346      	muls	r6, r0
 801842e:	fbb6 f0f4 	udiv	r0, r6, r4
 8018432:	fb04 6610 	mls	r6, r4, r0, r6
 8018436:	603e      	str	r6, [r7, #0]
 8018438:	e7e1      	b.n	80183fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801843a:	2201      	movs	r2, #1
 801843c:	40aa      	lsls	r2, r5
 801843e:	3a01      	subs	r2, #1
 8018440:	4016      	ands	r6, r2
 8018442:	fa00 fb05 	lsl.w	fp, r0, r5
 8018446:	4630      	mov	r0, r6
 8018448:	fbbb f9f4 	udiv	r9, fp, r4
 801844c:	fb0a f309 	mul.w	r3, sl, r9
 8018450:	9303      	str	r3, [sp, #12]
 8018452:	f7ff ffa5 	bl	80183a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018456:	462b      	mov	r3, r5
 8018458:	460a      	mov	r2, r1
 801845a:	e9cd 4700 	strd	r4, r7, [sp]
 801845e:	4601      	mov	r1, r0
 8018460:	4630      	mov	r0, r6
 8018462:	f7ff ffbb 	bl	80183dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018466:	fb04 b919 	mls	r9, r4, r9, fp
 801846a:	4606      	mov	r6, r0
 801846c:	4648      	mov	r0, r9
 801846e:	eb05 0108 	add.w	r1, r5, r8
 8018472:	f7ff ff95 	bl	80183a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8018476:	ab05      	add	r3, sp, #20
 8018478:	e9cd 4300 	strd	r4, r3, [sp]
 801847c:	464a      	mov	r2, r9
 801847e:	4603      	mov	r3, r0
 8018480:	4650      	mov	r0, sl
 8018482:	f7ff ffab 	bl	80183dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8018486:	6839      	ldr	r1, [r7, #0]
 8018488:	9a05      	ldr	r2, [sp, #20]
 801848a:	9b03      	ldr	r3, [sp, #12]
 801848c:	4411      	add	r1, r2
 801848e:	fbb1 f2f4 	udiv	r2, r1, r4
 8018492:	18d3      	adds	r3, r2, r3
 8018494:	441e      	add	r6, r3
 8018496:	fb04 1412 	mls	r4, r4, r2, r1
 801849a:	4430      	add	r0, r6
 801849c:	603c      	str	r4, [r7, #0]
 801849e:	e7ae      	b.n	80183fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080184a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80184a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80184a4:	b085      	sub	sp, #20
 80184a6:	f1b0 0900 	subs.w	r9, r0, #0
 80184aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80184ac:	461d      	mov	r5, r3
 80184ae:	bfbf      	itttt	lt
 80184b0:	6823      	ldrlt	r3, [r4, #0]
 80184b2:	425b      	neglt	r3, r3
 80184b4:	f1c9 0900 	rsblt	r9, r9, #0
 80184b8:	6023      	strlt	r3, [r4, #0]
 80184ba:	bfb4      	ite	lt
 80184bc:	f04f 36ff 	movlt.w	r6, #4294967295
 80184c0:	2601      	movge	r6, #1
 80184c2:	2a00      	cmp	r2, #0
 80184c4:	4617      	mov	r7, r2
 80184c6:	da04      	bge.n	80184d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80184c8:	6823      	ldr	r3, [r4, #0]
 80184ca:	425b      	negs	r3, r3
 80184cc:	4257      	negs	r7, r2
 80184ce:	4276      	negs	r6, r6
 80184d0:	6023      	str	r3, [r4, #0]
 80184d2:	2d00      	cmp	r5, #0
 80184d4:	4638      	mov	r0, r7
 80184d6:	bfba      	itte	lt
 80184d8:	426d      	neglt	r5, r5
 80184da:	f04f 38ff 	movlt.w	r8, #4294967295
 80184de:	f04f 0801 	movge.w	r8, #1
 80184e2:	f7ff ff5d 	bl	80183a0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80184e6:	ab03      	add	r3, sp, #12
 80184e8:	e9cd 5300 	strd	r5, r3, [sp]
 80184ec:	463a      	mov	r2, r7
 80184ee:	4603      	mov	r3, r0
 80184f0:	4648      	mov	r0, r9
 80184f2:	f7ff ff73 	bl	80183dc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80184f6:	6823      	ldr	r3, [r4, #0]
 80184f8:	9a03      	ldr	r2, [sp, #12]
 80184fa:	4546      	cmp	r6, r8
 80184fc:	441a      	add	r2, r3
 80184fe:	fb92 f3f5 	sdiv	r3, r2, r5
 8018502:	4418      	add	r0, r3
 8018504:	bf18      	it	ne
 8018506:	4240      	negne	r0, r0
 8018508:	fb05 2313 	mls	r3, r5, r3, r2
 801850c:	1c72      	adds	r2, r6, #1
 801850e:	6023      	str	r3, [r4, #0]
 8018510:	d105      	bne.n	801851e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8018512:	2b00      	cmp	r3, #0
 8018514:	f1c3 0200 	rsb	r2, r3, #0
 8018518:	db0b      	blt.n	8018532 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801851a:	6022      	str	r2, [r4, #0]
 801851c:	e006      	b.n	801852c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801851e:	2e01      	cmp	r6, #1
 8018520:	d104      	bne.n	801852c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018522:	2b00      	cmp	r3, #0
 8018524:	da02      	bge.n	801852c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8018526:	442b      	add	r3, r5
 8018528:	3801      	subs	r0, #1
 801852a:	6023      	str	r3, [r4, #0]
 801852c:	b005      	add	sp, #20
 801852e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018532:	3801      	subs	r0, #1
 8018534:	1b52      	subs	r2, r2, r5
 8018536:	e7f0      	b.n	801851a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08018538 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8018538:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801853c:	4c1c      	ldr	r4, [pc, #112]	; (80185b0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801853e:	6807      	ldr	r7, [r0, #0]
 8018540:	69a3      	ldr	r3, [r4, #24]
 8018542:	4605      	mov	r5, r0
 8018544:	b92b      	cbnz	r3, 8018552 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8018546:	6840      	ldr	r0, [r0, #4]
 8018548:	e9c5 7000 	strd	r7, r0, [r5]
 801854c:	b004      	add	sp, #16
 801854e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018552:	68a2      	ldr	r2, [r4, #8]
 8018554:	6820      	ldr	r0, [r4, #0]
 8018556:	ae04      	add	r6, sp, #16
 8018558:	f04f 0802 	mov.w	r8, #2
 801855c:	fb93 f1f8 	sdiv	r1, r3, r8
 8018560:	440a      	add	r2, r1
 8018562:	f846 2d04 	str.w	r2, [r6, #-4]!
 8018566:	69e1      	ldr	r1, [r4, #28]
 8018568:	9600      	str	r6, [sp, #0]
 801856a:	463a      	mov	r2, r7
 801856c:	f7ff ff98 	bl	80184a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018570:	69a3      	ldr	r3, [r4, #24]
 8018572:	686a      	ldr	r2, [r5, #4]
 8018574:	6a21      	ldr	r1, [r4, #32]
 8018576:	9600      	str	r6, [sp, #0]
 8018578:	4607      	mov	r7, r0
 801857a:	6860      	ldr	r0, [r4, #4]
 801857c:	f7ff ff90 	bl	80184a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8018580:	6962      	ldr	r2, [r4, #20]
 8018582:	69a3      	ldr	r3, [r4, #24]
 8018584:	fb93 f8f8 	sdiv	r8, r3, r8
 8018588:	4442      	add	r2, r8
 801858a:	9203      	str	r2, [sp, #12]
 801858c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801858e:	682a      	ldr	r2, [r5, #0]
 8018590:	9600      	str	r6, [sp, #0]
 8018592:	4407      	add	r7, r0
 8018594:	68e0      	ldr	r0, [r4, #12]
 8018596:	f7ff ff83 	bl	80184a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801859a:	9600      	str	r6, [sp, #0]
 801859c:	4680      	mov	r8, r0
 801859e:	69a3      	ldr	r3, [r4, #24]
 80185a0:	686a      	ldr	r2, [r5, #4]
 80185a2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80185a4:	6920      	ldr	r0, [r4, #16]
 80185a6:	f7ff ff7b 	bl	80184a0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80185aa:	4440      	add	r0, r8
 80185ac:	e7cc      	b.n	8018548 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80185ae:	bf00      	nop
 80185b0:	20013850 	.word	0x20013850

080185b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80185b4:	4b07      	ldr	r3, [pc, #28]	; (80185d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80185b6:	781b      	ldrb	r3, [r3, #0]
 80185b8:	2b01      	cmp	r3, #1
 80185ba:	d109      	bne.n	80185d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80185bc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80185c0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80185c4:	8003      	strh	r3, [r0, #0]
 80185c6:	4b04      	ldr	r3, [pc, #16]	; (80185d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80185c8:	881b      	ldrh	r3, [r3, #0]
 80185ca:	3b01      	subs	r3, #1
 80185cc:	1a9b      	subs	r3, r3, r2
 80185ce:	800b      	strh	r3, [r1, #0]
 80185d0:	4770      	bx	lr
 80185d2:	bf00      	nop
 80185d4:	20013834 	.word	0x20013834
 80185d8:	20013830 	.word	0x20013830

080185dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80185dc:	b510      	push	{r4, lr}
 80185de:	4b07      	ldr	r3, [pc, #28]	; (80185fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80185e0:	781b      	ldrb	r3, [r3, #0]
 80185e2:	2b01      	cmp	r3, #1
 80185e4:	d108      	bne.n	80185f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80185e6:	4b06      	ldr	r3, [pc, #24]	; (8018600 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80185e8:	880c      	ldrh	r4, [r1, #0]
 80185ea:	881b      	ldrh	r3, [r3, #0]
 80185ec:	f9b0 2000 	ldrsh.w	r2, [r0]
 80185f0:	3b01      	subs	r3, #1
 80185f2:	1b1b      	subs	r3, r3, r4
 80185f4:	8003      	strh	r3, [r0, #0]
 80185f6:	800a      	strh	r2, [r1, #0]
 80185f8:	bd10      	pop	{r4, pc}
 80185fa:	bf00      	nop
 80185fc:	20013834 	.word	0x20013834
 8018600:	20013830 	.word	0x20013830

08018604 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8018604:	b510      	push	{r4, lr}
 8018606:	4b0a      	ldr	r3, [pc, #40]	; (8018630 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8018608:	781b      	ldrb	r3, [r3, #0]
 801860a:	2b01      	cmp	r3, #1
 801860c:	d10e      	bne.n	801862c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801860e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8018612:	8843      	ldrh	r3, [r0, #2]
 8018614:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018618:	8044      	strh	r4, [r0, #2]
 801861a:	18ca      	adds	r2, r1, r3
 801861c:	4b05      	ldr	r3, [pc, #20]	; (8018634 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801861e:	881b      	ldrh	r3, [r3, #0]
 8018620:	1a9b      	subs	r3, r3, r2
 8018622:	8003      	strh	r3, [r0, #0]
 8018624:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018628:	80c3      	strh	r3, [r0, #6]
 801862a:	8081      	strh	r1, [r0, #4]
 801862c:	bd10      	pop	{r4, pc}
 801862e:	bf00      	nop
 8018630:	20013834 	.word	0x20013834
 8018634:	20013830 	.word	0x20013830

08018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8018638:	4b08      	ldr	r3, [pc, #32]	; (801865c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801863a:	781b      	ldrb	r3, [r3, #0]
 801863c:	2b01      	cmp	r3, #1
 801863e:	d10c      	bne.n	801865a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8018640:	8803      	ldrh	r3, [r0, #0]
 8018642:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8018646:	8842      	ldrh	r2, [r0, #2]
 8018648:	8002      	strh	r2, [r0, #0]
 801864a:	185a      	adds	r2, r3, r1
 801864c:	4b04      	ldr	r3, [pc, #16]	; (8018660 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801864e:	881b      	ldrh	r3, [r3, #0]
 8018650:	1a9b      	subs	r3, r3, r2
 8018652:	8043      	strh	r3, [r0, #2]
 8018654:	88c3      	ldrh	r3, [r0, #6]
 8018656:	8083      	strh	r3, [r0, #4]
 8018658:	80c1      	strh	r1, [r0, #6]
 801865a:	4770      	bx	lr
 801865c:	20013834 	.word	0x20013834
 8018660:	20013830 	.word	0x20013830

08018664 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8018664:	b510      	push	{r4, lr}
 8018666:	4b07      	ldr	r3, [pc, #28]	; (8018684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8018668:	781b      	ldrb	r3, [r3, #0]
 801866a:	2b01      	cmp	r3, #1
 801866c:	d108      	bne.n	8018680 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801866e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8018672:	f9b0 4000 	ldrsh.w	r4, [r0]
 8018676:	8003      	strh	r3, [r0, #0]
 8018678:	8893      	ldrh	r3, [r2, #4]
 801867a:	3b01      	subs	r3, #1
 801867c:	1b1b      	subs	r3, r3, r4
 801867e:	800b      	strh	r3, [r1, #0]
 8018680:	bd10      	pop	{r4, pc}
 8018682:	bf00      	nop
 8018684:	20013834 	.word	0x20013834

08018688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8018688:	4b0b      	ldr	r3, [pc, #44]	; (80186b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801868a:	781b      	ldrb	r3, [r3, #0]
 801868c:	2b01      	cmp	r3, #1
 801868e:	d111      	bne.n	80186b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8018690:	680b      	ldr	r3, [r1, #0]
 8018692:	ed90 7a00 	vldr	s14, [r0]
 8018696:	6003      	str	r3, [r0, #0]
 8018698:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801869c:	eddf 6a07 	vldr	s13, [pc, #28]	; 80186bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80186a0:	ee07 3a90 	vmov	s15, r3
 80186a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80186a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80186ac:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80186b0:	edc1 7a00 	vstr	s15, [r1]
 80186b4:	4770      	bx	lr
 80186b6:	bf00      	nop
 80186b8:	20013834 	.word	0x20013834
 80186bc:	38d1b717 	.word	0x38d1b717

080186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80186c0:	b510      	push	{r4, lr}
 80186c2:	4b0a      	ldr	r3, [pc, #40]	; (80186ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80186c4:	781b      	ldrb	r3, [r3, #0]
 80186c6:	2b01      	cmp	r3, #1
 80186c8:	460a      	mov	r2, r1
 80186ca:	d10d      	bne.n	80186e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80186cc:	8881      	ldrh	r1, [r0, #4]
 80186ce:	8803      	ldrh	r3, [r0, #0]
 80186d0:	440b      	add	r3, r1
 80186d2:	4601      	mov	r1, r0
 80186d4:	3b01      	subs	r3, #1
 80186d6:	f821 3b02 	strh.w	r3, [r1], #2
 80186da:	f7ff ffc3 	bl	8018664 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80186de:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80186e2:	88c2      	ldrh	r2, [r0, #6]
 80186e4:	8082      	strh	r2, [r0, #4]
 80186e6:	80c3      	strh	r3, [r0, #6]
 80186e8:	bd10      	pop	{r4, pc}
 80186ea:	bf00      	nop
 80186ec:	20013834 	.word	0x20013834

080186f0 <_ZN8touchgfx11Application13requestRedrawEv>:
 80186f0:	4b06      	ldr	r3, [pc, #24]	; (801870c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 80186f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80186f6:	4b06      	ldr	r3, [pc, #24]	; (8018710 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 80186f8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 80186fc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018700:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8018704:	2100      	movs	r1, #0
 8018706:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801870a:	4770      	bx	lr
 801870c:	20013830 	.word	0x20013830
 8018710:	20013832 	.word	0x20013832

08018714 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8018714:	4b03      	ldr	r3, [pc, #12]	; (8018724 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8018716:	6818      	ldr	r0, [r3, #0]
 8018718:	b110      	cbz	r0, 8018720 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801871a:	6803      	ldr	r3, [r0, #0]
 801871c:	699b      	ldr	r3, [r3, #24]
 801871e:	4718      	bx	r3
 8018720:	4770      	bx	lr
 8018722:	bf00      	nop
 8018724:	20013880 	.word	0x20013880

08018728 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8018728:	4770      	bx	lr
	...

0801872c <_ZN8touchgfx11Application4drawEv>:
 801872c:	b507      	push	{r0, r1, r2, lr}
 801872e:	4b09      	ldr	r3, [pc, #36]	; (8018754 <_ZN8touchgfx11Application4drawEv+0x28>)
 8018730:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018734:	4b08      	ldr	r3, [pc, #32]	; (8018758 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8018736:	f8ad 2004 	strh.w	r2, [sp, #4]
 801873a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801873e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018742:	6803      	ldr	r3, [r0, #0]
 8018744:	2100      	movs	r1, #0
 8018746:	9100      	str	r1, [sp, #0]
 8018748:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801874a:	4669      	mov	r1, sp
 801874c:	4798      	blx	r3
 801874e:	b003      	add	sp, #12
 8018750:	f85d fb04 	ldr.w	pc, [sp], #4
 8018754:	20013830 	.word	0x20013830
 8018758:	20013832 	.word	0x20013832

0801875c <_ZN8touchgfx11Application10invalidateEv>:
 801875c:	4b09      	ldr	r3, [pc, #36]	; (8018784 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801875e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018762:	4b09      	ldr	r3, [pc, #36]	; (8018788 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8018764:	b082      	sub	sp, #8
 8018766:	f9b3 3000 	ldrsh.w	r3, [r3]
 801876a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801876e:	2100      	movs	r1, #0
 8018770:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018774:	9100      	str	r1, [sp, #0]
 8018776:	6803      	ldr	r3, [r0, #0]
 8018778:	aa02      	add	r2, sp, #8
 801877a:	e912 0006 	ldmdb	r2, {r1, r2}
 801877e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018780:	b002      	add	sp, #8
 8018782:	4718      	bx	r3
 8018784:	20013830 	.word	0x20013830
 8018788:	20013832 	.word	0x20013832

0801878c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801878c:	4b03      	ldr	r3, [pc, #12]	; (801879c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801878e:	6818      	ldr	r0, [r3, #0]
 8018790:	b110      	cbz	r0, 8018798 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8018792:	6803      	ldr	r3, [r0, #0]
 8018794:	69db      	ldr	r3, [r3, #28]
 8018796:	4718      	bx	r3
 8018798:	4770      	bx	lr
 801879a:	bf00      	nop
 801879c:	20013880 	.word	0x20013880

080187a0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80187a0:	4b03      	ldr	r3, [pc, #12]	; (80187b0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80187a2:	6818      	ldr	r0, [r3, #0]
 80187a4:	b110      	cbz	r0, 80187ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80187a6:	6803      	ldr	r3, [r0, #0]
 80187a8:	6a1b      	ldr	r3, [r3, #32]
 80187aa:	4718      	bx	r3
 80187ac:	4770      	bx	lr
 80187ae:	bf00      	nop
 80187b0:	20013880 	.word	0x20013880

080187b4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80187b4:	2300      	movs	r3, #0
 80187b6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80187ba:	4770      	bx	lr

080187bc <_ZN8touchgfx11Application14handleKeyEventEh>:
 80187bc:	4b03      	ldr	r3, [pc, #12]	; (80187cc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80187be:	6818      	ldr	r0, [r3, #0]
 80187c0:	b110      	cbz	r0, 80187c8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80187c2:	6803      	ldr	r3, [r0, #0]
 80187c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80187c6:	4718      	bx	r3
 80187c8:	4770      	bx	lr
 80187ca:	bf00      	nop
 80187cc:	20013880 	.word	0x20013880

080187d0 <_ZN8touchgfx11ApplicationD1Ev>:
 80187d0:	4770      	bx	lr

080187d2 <_ZN8touchgfx11ApplicationD0Ev>:
 80187d2:	b510      	push	{r4, lr}
 80187d4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80187d8:	4604      	mov	r4, r0
 80187da:	f014 f9ca 	bl	802cb72 <_ZdlPvj>
 80187de:	4620      	mov	r0, r4
 80187e0:	bd10      	pop	{r4, pc}

080187e2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80187e2:	b510      	push	{r4, lr}
 80187e4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80187e8:	888a      	ldrh	r2, [r1, #4]
 80187ea:	f9b0 3000 	ldrsh.w	r3, [r0]
 80187ee:	4422      	add	r2, r4
 80187f0:	b212      	sxth	r2, r2
 80187f2:	4293      	cmp	r3, r2
 80187f4:	da15      	bge.n	8018822 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80187f6:	8882      	ldrh	r2, [r0, #4]
 80187f8:	4413      	add	r3, r2
 80187fa:	b21b      	sxth	r3, r3
 80187fc:	429c      	cmp	r4, r3
 80187fe:	da10      	bge.n	8018822 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018800:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8018804:	88c9      	ldrh	r1, [r1, #6]
 8018806:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801880a:	4419      	add	r1, r3
 801880c:	b209      	sxth	r1, r1
 801880e:	428a      	cmp	r2, r1
 8018810:	da07      	bge.n	8018822 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8018812:	88c0      	ldrh	r0, [r0, #6]
 8018814:	4410      	add	r0, r2
 8018816:	b200      	sxth	r0, r0
 8018818:	4283      	cmp	r3, r0
 801881a:	bfac      	ite	ge
 801881c:	2000      	movge	r0, #0
 801881e:	2001      	movlt	r0, #1
 8018820:	bd10      	pop	{r4, pc}
 8018822:	2000      	movs	r0, #0
 8018824:	e7fc      	b.n	8018820 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08018826 <_ZN8touchgfx4Rect10restrictToEss>:
 8018826:	f9b0 3000 	ldrsh.w	r3, [r0]
 801882a:	2b00      	cmp	r3, #0
 801882c:	b510      	push	{r4, lr}
 801882e:	da04      	bge.n	801883a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8018830:	8884      	ldrh	r4, [r0, #4]
 8018832:	4423      	add	r3, r4
 8018834:	8083      	strh	r3, [r0, #4]
 8018836:	2300      	movs	r3, #0
 8018838:	8003      	strh	r3, [r0, #0]
 801883a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801883e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018842:	1b09      	subs	r1, r1, r4
 8018844:	428b      	cmp	r3, r1
 8018846:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801884a:	bfc8      	it	gt
 801884c:	8081      	strhgt	r1, [r0, #4]
 801884e:	2b00      	cmp	r3, #0
 8018850:	da04      	bge.n	801885c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8018852:	88c1      	ldrh	r1, [r0, #6]
 8018854:	440b      	add	r3, r1
 8018856:	80c3      	strh	r3, [r0, #6]
 8018858:	2300      	movs	r3, #0
 801885a:	8043      	strh	r3, [r0, #2]
 801885c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8018860:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8018864:	1a52      	subs	r2, r2, r1
 8018866:	4293      	cmp	r3, r2
 8018868:	bfc8      	it	gt
 801886a:	80c2      	strhgt	r2, [r0, #6]
 801886c:	bd10      	pop	{r4, pc}
	...

08018870 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8018870:	b510      	push	{r4, lr}
 8018872:	4b10      	ldr	r3, [pc, #64]	; (80188b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8018874:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018878:	4b0f      	ldr	r3, [pc, #60]	; (80188b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801887a:	460c      	mov	r4, r1
 801887c:	4620      	mov	r0, r4
 801887e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018882:	f7ff ffd0 	bl	8018826 <_ZN8touchgfx4Rect10restrictToEss>
 8018886:	4b0d      	ldr	r3, [pc, #52]	; (80188bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8018888:	6818      	ldr	r0, [r3, #0]
 801888a:	b190      	cbz	r0, 80188b2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801888c:	6803      	ldr	r3, [r0, #0]
 801888e:	4621      	mov	r1, r4
 8018890:	689b      	ldr	r3, [r3, #8]
 8018892:	4798      	blx	r3
 8018894:	4b0a      	ldr	r3, [pc, #40]	; (80188c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8018896:	6818      	ldr	r0, [r3, #0]
 8018898:	b118      	cbz	r0, 80188a2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801889a:	6803      	ldr	r3, [r0, #0]
 801889c:	4621      	mov	r1, r4
 801889e:	689b      	ldr	r3, [r3, #8]
 80188a0:	4798      	blx	r3
 80188a2:	4b08      	ldr	r3, [pc, #32]	; (80188c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80188a4:	6818      	ldr	r0, [r3, #0]
 80188a6:	6803      	ldr	r3, [r0, #0]
 80188a8:	4621      	mov	r1, r4
 80188aa:	69db      	ldr	r3, [r3, #28]
 80188ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80188b0:	4718      	bx	r3
 80188b2:	bd10      	pop	{r4, pc}
 80188b4:	20013832 	.word	0x20013832
 80188b8:	20013830 	.word	0x20013830
 80188bc:	20013880 	.word	0x20013880
 80188c0:	2001387c 	.word	0x2001387c
 80188c4:	2001383c 	.word	0x2001383c

080188c8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80188c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80188ca:	4606      	mov	r6, r0
 80188cc:	4608      	mov	r0, r1
 80188ce:	460f      	mov	r7, r1
 80188d0:	f7fa f957 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80188d4:	b9e8      	cbnz	r0, 8018912 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188d6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80188da:	f9b6 4000 	ldrsh.w	r4, [r6]
 80188de:	42a5      	cmp	r5, r4
 80188e0:	db17      	blt.n	8018912 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188e2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80188e6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80188ea:	429a      	cmp	r2, r3
 80188ec:	db11      	blt.n	8018912 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188ee:	88b9      	ldrh	r1, [r7, #4]
 80188f0:	440d      	add	r5, r1
 80188f2:	88b1      	ldrh	r1, [r6, #4]
 80188f4:	440c      	add	r4, r1
 80188f6:	b22d      	sxth	r5, r5
 80188f8:	b224      	sxth	r4, r4
 80188fa:	42a5      	cmp	r5, r4
 80188fc:	dc09      	bgt.n	8018912 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80188fe:	88f8      	ldrh	r0, [r7, #6]
 8018900:	4410      	add	r0, r2
 8018902:	88f2      	ldrh	r2, [r6, #6]
 8018904:	4413      	add	r3, r2
 8018906:	b200      	sxth	r0, r0
 8018908:	b21b      	sxth	r3, r3
 801890a:	4298      	cmp	r0, r3
 801890c:	bfcc      	ite	gt
 801890e:	2000      	movgt	r0, #0
 8018910:	2001      	movle	r0, #1
 8018912:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018914 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8018914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018916:	4604      	mov	r4, r0
 8018918:	4608      	mov	r0, r1
 801891a:	460d      	mov	r5, r1
 801891c:	f7fa f931 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018920:	b978      	cbnz	r0, 8018942 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018922:	4620      	mov	r0, r4
 8018924:	f7fa f92d 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018928:	f9b5 6000 	ldrsh.w	r6, [r5]
 801892c:	b150      	cbz	r0, 8018944 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801892e:	8026      	strh	r6, [r4, #0]
 8018930:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018934:	8063      	strh	r3, [r4, #2]
 8018936:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801893a:	80a3      	strh	r3, [r4, #4]
 801893c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018940:	80e3      	strh	r3, [r4, #6]
 8018942:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018944:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018948:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801894c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018950:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8018954:	88ed      	ldrh	r5, [r5, #6]
 8018956:	42b1      	cmp	r1, r6
 8018958:	460f      	mov	r7, r1
 801895a:	bfa8      	it	ge
 801895c:	4637      	movge	r7, r6
 801895e:	4293      	cmp	r3, r2
 8018960:	4618      	mov	r0, r3
 8018962:	4466      	add	r6, ip
 8018964:	bfa8      	it	ge
 8018966:	4610      	movge	r0, r2
 8018968:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801896c:	8027      	strh	r7, [r4, #0]
 801896e:	442a      	add	r2, r5
 8018970:	88e5      	ldrh	r5, [r4, #6]
 8018972:	8060      	strh	r0, [r4, #2]
 8018974:	4461      	add	r1, ip
 8018976:	442b      	add	r3, r5
 8018978:	b236      	sxth	r6, r6
 801897a:	b209      	sxth	r1, r1
 801897c:	b212      	sxth	r2, r2
 801897e:	b21b      	sxth	r3, r3
 8018980:	428e      	cmp	r6, r1
 8018982:	bfac      	ite	ge
 8018984:	ebc7 0106 	rsbge	r1, r7, r6
 8018988:	ebc7 0101 	rsblt	r1, r7, r1
 801898c:	429a      	cmp	r2, r3
 801898e:	bfac      	ite	ge
 8018990:	ebc0 0202 	rsbge	r2, r0, r2
 8018994:	ebc0 0203 	rsblt	r2, r0, r3
 8018998:	80a1      	strh	r1, [r4, #4]
 801899a:	80e2      	strh	r2, [r4, #6]
 801899c:	e7d1      	b.n	8018942 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080189a0 <_ZN8touchgfx11Application11getInstanceEv>:
 80189a0:	4b01      	ldr	r3, [pc, #4]	; (80189a8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80189a2:	6818      	ldr	r0, [r3, #0]
 80189a4:	4770      	bx	lr
 80189a6:	bf00      	nop
 80189a8:	20013890 	.word	0x20013890

080189ac <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80189ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80189ae:	4b10      	ldr	r3, [pc, #64]	; (80189f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80189b0:	781b      	ldrb	r3, [r3, #0]
 80189b2:	4605      	mov	r5, r0
 80189b4:	b1d3      	cbz	r3, 80189ec <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80189b6:	4b0f      	ldr	r3, [pc, #60]	; (80189f4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80189b8:	4f0f      	ldr	r7, [pc, #60]	; (80189f8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80189ba:	881c      	ldrh	r4, [r3, #0]
 80189bc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80189c0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80189c4:	42a3      	cmp	r3, r4
 80189c6:	d90e      	bls.n	80189e6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80189c8:	683b      	ldr	r3, [r7, #0]
 80189ca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80189ce:	b10a      	cbz	r2, 80189d4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80189d0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80189d2:	b900      	cbnz	r0, 80189d6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80189d4:	6898      	ldr	r0, [r3, #8]
 80189d6:	6803      	ldr	r3, [r0, #0]
 80189d8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80189dc:	69db      	ldr	r3, [r3, #28]
 80189de:	3401      	adds	r4, #1
 80189e0:	4798      	blx	r3
 80189e2:	b2a4      	uxth	r4, r4
 80189e4:	e7ec      	b.n	80189c0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80189e6:	2300      	movs	r3, #0
 80189e8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80189ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80189ee:	bf00      	nop
 80189f0:	2001383a 	.word	0x2001383a
 80189f4:	2000008c 	.word	0x2000008c
 80189f8:	2001383c 	.word	0x2001383c

080189fc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80189fc:	b510      	push	{r4, lr}
 80189fe:	2300      	movs	r3, #0
 8018a00:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8018a04:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018a08:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018a0c:	4604      	mov	r4, r0
 8018a0e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a12:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8018a16:	429a      	cmp	r2, r3
 8018a18:	d90e      	bls.n	8018a38 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8018a1a:	18e2      	adds	r2, r4, r3
 8018a1c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8018a20:	b122      	cbz	r2, 8018a2c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8018a22:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8018a26:	6803      	ldr	r3, [r0, #0]
 8018a28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8018a2a:	4798      	blx	r3
 8018a2c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8018a30:	3301      	adds	r3, #1
 8018a32:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8018a36:	e7ea      	b.n	8018a0e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8018a38:	bd10      	pop	{r4, pc}

08018a3a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8018a3a:	b530      	push	{r4, r5, lr}
 8018a3c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8018a40:	2200      	movs	r2, #0
 8018a42:	b293      	uxth	r3, r2
 8018a44:	429d      	cmp	r5, r3
 8018a46:	d90e      	bls.n	8018a66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a48:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8018a4c:	428b      	cmp	r3, r1
 8018a4e:	d10b      	bne.n	8018a68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a50:	1884      	adds	r4, r0, r2
 8018a52:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8018a56:	b13b      	cbz	r3, 8018a68 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8018a58:	3b01      	subs	r3, #1
 8018a5a:	b2db      	uxtb	r3, r3
 8018a5c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8018a60:	b90b      	cbnz	r3, 8018a66 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8018a62:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8018a66:	bd30      	pop	{r4, r5, pc}
 8018a68:	3201      	adds	r2, #1
 8018a6a:	e7ea      	b.n	8018a42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8018a6c:	2300      	movs	r3, #0
 8018a6e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018a72:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8018a76:	30a4      	adds	r0, #164	; 0xa4
 8018a78:	f802 3b01 	strb.w	r3, [r2], #1
 8018a7c:	4282      	cmp	r2, r0
 8018a7e:	d1fb      	bne.n	8018a78 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8018a80:	4770      	bx	lr
	...

08018a84 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8018a84:	b570      	push	{r4, r5, r6, lr}
 8018a86:	4c0b      	ldr	r4, [pc, #44]	; (8018ab4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8018a88:	4605      	mov	r5, r0
 8018a8a:	6820      	ldr	r0, [r4, #0]
 8018a8c:	460e      	mov	r6, r1
 8018a8e:	b110      	cbz	r0, 8018a96 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8018a90:	6803      	ldr	r3, [r0, #0]
 8018a92:	695b      	ldr	r3, [r3, #20]
 8018a94:	4798      	blx	r3
 8018a96:	1d28      	adds	r0, r5, #4
 8018a98:	f7ff ffe8 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018a9c:	6026      	str	r6, [r4, #0]
 8018a9e:	6833      	ldr	r3, [r6, #0]
 8018aa0:	4630      	mov	r0, r6
 8018aa2:	68db      	ldr	r3, [r3, #12]
 8018aa4:	4798      	blx	r3
 8018aa6:	682b      	ldr	r3, [r5, #0]
 8018aa8:	4628      	mov	r0, r5
 8018aaa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018aac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018ab0:	4718      	bx	r3
 8018ab2:	bf00      	nop
 8018ab4:	20013880 	.word	0x20013880

08018ab8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8018ab8:	2300      	movs	r3, #0
 8018aba:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8018abe:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8018ac2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018ac4:	461a      	mov	r2, r3
 8018ac6:	461c      	mov	r4, r3
 8018ac8:	461d      	mov	r5, r3
 8018aca:	459c      	cmp	ip, r3
 8018acc:	dd1a      	ble.n	8018b04 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8018ace:	18c6      	adds	r6, r0, r3
 8018ad0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8018ad4:	b16e      	cbz	r6, 8018af2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8018ad6:	429a      	cmp	r2, r3
 8018ad8:	d008      	beq.n	8018aec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8018ada:	fa1f fe82 	uxth.w	lr, r2
 8018ade:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8018ae2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8018ae6:	1887      	adds	r7, r0, r2
 8018ae8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8018aec:	3201      	adds	r2, #1
 8018aee:	3301      	adds	r3, #1
 8018af0:	e7eb      	b.n	8018aca <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8018af2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8018af6:	4299      	cmp	r1, r3
 8018af8:	bfa8      	it	ge
 8018afa:	3501      	addge	r5, #1
 8018afc:	429e      	cmp	r6, r3
 8018afe:	bfc8      	it	gt
 8018b00:	3401      	addgt	r4, #1
 8018b02:	e7f4      	b.n	8018aee <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8018b04:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8018b08:	1b49      	subs	r1, r1, r5
 8018b0a:	1b1b      	subs	r3, r3, r4
 8018b0c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8018b10:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8018b14:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8018b18:	4293      	cmp	r3, r2
 8018b1a:	dd03      	ble.n	8018b24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8018b1c:	3b01      	subs	r3, #1
 8018b1e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8018b22:	e7f7      	b.n	8018b14 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8018b24:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08018b28 <_ZN8touchgfx11Application15handleTickEventEv>:
 8018b28:	b570      	push	{r4, r5, r6, lr}
 8018b2a:	4d16      	ldr	r5, [pc, #88]	; (8018b84 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8018b2c:	4604      	mov	r4, r0
 8018b2e:	6828      	ldr	r0, [r5, #0]
 8018b30:	b140      	cbz	r0, 8018b44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b32:	7a03      	ldrb	r3, [r0, #8]
 8018b34:	b933      	cbnz	r3, 8018b44 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8018b36:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b3a:	6803      	ldr	r3, [r0, #0]
 8018b3c:	689b      	ldr	r3, [r3, #8]
 8018b3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018b42:	4718      	bx	r3
 8018b44:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8018b48:	4e0f      	ldr	r6, [pc, #60]	; (8018b88 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8018b4a:	b973      	cbnz	r3, 8018b6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b4c:	b168      	cbz	r0, 8018b6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b4e:	7a03      	ldrb	r3, [r0, #8]
 8018b50:	b15b      	cbz	r3, 8018b6a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8018b52:	6830      	ldr	r0, [r6, #0]
 8018b54:	b110      	cbz	r0, 8018b5c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8018b56:	6803      	ldr	r3, [r0, #0]
 8018b58:	691b      	ldr	r3, [r3, #16]
 8018b5a:	4798      	blx	r3
 8018b5c:	6828      	ldr	r0, [r5, #0]
 8018b5e:	6803      	ldr	r3, [r0, #0]
 8018b60:	68db      	ldr	r3, [r3, #12]
 8018b62:	4798      	blx	r3
 8018b64:	2301      	movs	r3, #1
 8018b66:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8018b6a:	3404      	adds	r4, #4
 8018b6c:	4620      	mov	r0, r4
 8018b6e:	f7ff ff45 	bl	80189fc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8018b72:	4620      	mov	r0, r4
 8018b74:	f7ff ffa0 	bl	8018ab8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018b78:	6830      	ldr	r0, [r6, #0]
 8018b7a:	b110      	cbz	r0, 8018b82 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8018b7c:	6803      	ldr	r3, [r0, #0]
 8018b7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018b80:	e7dd      	b.n	8018b3e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8018b82:	bd70      	pop	{r4, r5, r6, pc}
 8018b84:	20013884 	.word	0x20013884
 8018b88:	20013880 	.word	0x20013880

08018b8c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8018b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018b8e:	2300      	movs	r3, #0
 8018b90:	4604      	mov	r4, r0
 8018b92:	460d      	mov	r5, r1
 8018b94:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8018b98:	4618      	mov	r0, r3
 8018b9a:	b29a      	uxth	r2, r3
 8018b9c:	4291      	cmp	r1, r2
 8018b9e:	d911      	bls.n	8018bc4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8018ba0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8018ba4:	18e6      	adds	r6, r4, r3
 8018ba6:	42af      	cmp	r7, r5
 8018ba8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8018bac:	d105      	bne.n	8018bba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8018bae:	2aff      	cmp	r2, #255	; 0xff
 8018bb0:	d002      	beq.n	8018bb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018bb2:	3201      	adds	r2, #1
 8018bb4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8018bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018bba:	2a00      	cmp	r2, #0
 8018bbc:	bf08      	it	eq
 8018bbe:	2001      	moveq	r0, #1
 8018bc0:	3301      	adds	r3, #1
 8018bc2:	e7ea      	b.n	8018b9a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8018bc4:	b120      	cbz	r0, 8018bd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018bc6:	2920      	cmp	r1, #32
 8018bc8:	d102      	bne.n	8018bd0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8018bca:	4620      	mov	r0, r4
 8018bcc:	f7ff ff74 	bl	8018ab8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8018bd0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8018bd4:	2b1f      	cmp	r3, #31
 8018bd6:	d8ef      	bhi.n	8018bb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8018bd8:	18e2      	adds	r2, r4, r3
 8018bda:	2101      	movs	r1, #1
 8018bdc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8018be0:	185a      	adds	r2, r3, r1
 8018be2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8018be6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8018bea:	e7e5      	b.n	8018bb8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08018bec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8018bec:	4603      	mov	r3, r0
 8018bee:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8018bf2:	2200      	movs	r2, #0
 8018bf4:	801a      	strh	r2, [r3, #0]
 8018bf6:	805a      	strh	r2, [r3, #2]
 8018bf8:	809a      	strh	r2, [r3, #4]
 8018bfa:	80da      	strh	r2, [r3, #6]
 8018bfc:	3308      	adds	r3, #8
 8018bfe:	428b      	cmp	r3, r1
 8018c00:	d1f8      	bne.n	8018bf4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8018c02:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8018c06:	4770      	bx	lr

08018c08 <_ZN8touchgfx11ApplicationC1Ev>:
 8018c08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018c0a:	4606      	mov	r6, r0
 8018c0c:	4b1c      	ldr	r3, [pc, #112]	; (8018c80 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8018c0e:	f846 3b04 	str.w	r3, [r6], #4
 8018c12:	4604      	mov	r4, r0
 8018c14:	2500      	movs	r5, #0
 8018c16:	22a8      	movs	r2, #168	; 0xa8
 8018c18:	2100      	movs	r1, #0
 8018c1a:	4630      	mov	r0, r6
 8018c1c:	f015 f895 	bl	802dd4a <memset>
 8018c20:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8018c24:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8018c28:	f7ff ffe0 	bl	8018bec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c2c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8018c30:	f7ff ffdc 	bl	8018bec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8018c34:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8018c38:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8018c3c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8018c40:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8018c44:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8018c48:	490e      	ldr	r1, [pc, #56]	; (8018c84 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8018c4a:	480f      	ldr	r0, [pc, #60]	; (8018c88 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8018c4c:	4f0f      	ldr	r7, [pc, #60]	; (8018c8c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8018c4e:	f010 fe27 	bl	80298a0 <CRC_Lock>
 8018c52:	4b0f      	ldr	r3, [pc, #60]	; (8018c90 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8018c54:	b158      	cbz	r0, 8018c6e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8018c56:	801d      	strh	r5, [r3, #0]
 8018c58:	4a0e      	ldr	r2, [pc, #56]	; (8018c94 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8018c5a:	2300      	movs	r3, #0
 8018c5c:	6013      	str	r3, [r2, #0]
 8018c5e:	4a0e      	ldr	r2, [pc, #56]	; (8018c98 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8018c60:	603b      	str	r3, [r7, #0]
 8018c62:	4630      	mov	r0, r6
 8018c64:	6013      	str	r3, [r2, #0]
 8018c66:	f7ff ff01 	bl	8018a6c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8018c6a:	4620      	mov	r0, r4
 8018c6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018c6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8018c72:	2002      	movs	r0, #2
 8018c74:	801a      	strh	r2, [r3, #0]
 8018c76:	6038      	str	r0, [r7, #0]
 8018c78:	f001 fb4a 	bl	801a310 <_ZN8touchgfx6Screen4drawEv>
 8018c7c:	e7ec      	b.n	8018c58 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8018c7e:	bf00      	nop
 8018c80:	08031d84 	.word	0x08031d84
 8018c84:	b5e8b5cd 	.word	0xb5e8b5cd
 8018c88:	f407a5c2 	.word	0xf407a5c2
 8018c8c:	20013880 	.word	0x20013880
 8018c90:	2000008c 	.word	0x2000008c
 8018c94:	20013890 	.word	0x20013890
 8018c98:	20013884 	.word	0x20013884

08018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8018c9c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8018ca0:	3b01      	subs	r3, #1
 8018ca2:	b29b      	uxth	r3, r3
 8018ca4:	428b      	cmp	r3, r1
 8018ca6:	b510      	push	{r4, lr}
 8018ca8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8018cac:	d908      	bls.n	8018cc0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8018cae:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018cb2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8018cb6:	681a      	ldr	r2, [r3, #0]
 8018cb8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8018cbc:	685a      	ldr	r2, [r3, #4]
 8018cbe:	6062      	str	r2, [r4, #4]
 8018cc0:	bd10      	pop	{r4, pc}
	...

08018cc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8018cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cc8:	4b8f      	ldr	r3, [pc, #572]	; (8018f08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8018cca:	b08f      	sub	sp, #60	; 0x3c
 8018ccc:	ac0a      	add	r4, sp, #40	; 0x28
 8018cce:	e884 0006 	stmia.w	r4, {r1, r2}
 8018cd2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018cd6:	4b8d      	ldr	r3, [pc, #564]	; (8018f0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8018cd8:	4683      	mov	fp, r0
 8018cda:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018cde:	4620      	mov	r0, r4
 8018ce0:	f7ff fda1 	bl	8018826 <_ZN8touchgfx4Rect10restrictToEss>
 8018ce4:	4620      	mov	r0, r4
 8018ce6:	f7f9 ff4c 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018cea:	2800      	cmp	r0, #0
 8018cec:	d16a      	bne.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018cee:	9403      	str	r4, [sp, #12]
 8018cf0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8018cf4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8018cf8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8018cfc:	35a4      	adds	r5, #164	; 0xa4
 8018cfe:	9301      	str	r3, [sp, #4]
 8018d00:	b15c      	cbz	r4, 8018d1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8018d02:	4629      	mov	r1, r5
 8018d04:	9803      	ldr	r0, [sp, #12]
 8018d06:	f7ff fddf 	bl	80188c8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018d0a:	3c01      	subs	r4, #1
 8018d0c:	b118      	cbz	r0, 8018d16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8018d0e:	b2a1      	uxth	r1, r4
 8018d10:	9801      	ldr	r0, [sp, #4]
 8018d12:	f7ff ffc3 	bl	8018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018d16:	3d08      	subs	r5, #8
 8018d18:	e7f2      	b.n	8018d00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8018d1a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8018d1e:	f8cd a010 	str.w	sl, [sp, #16]
 8018d22:	f10a 33ff 	add.w	r3, sl, #4294967295
 8018d26:	9302      	str	r3, [sp, #8]
 8018d28:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8018d2c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8018d30:	9306      	str	r3, [sp, #24]
 8018d32:	445c      	add	r4, fp
 8018d34:	2500      	movs	r5, #0
 8018d36:	4626      	mov	r6, r4
 8018d38:	f8cd a014 	str.w	sl, [sp, #20]
 8018d3c:	462f      	mov	r7, r5
 8018d3e:	9b05      	ldr	r3, [sp, #20]
 8018d40:	2b00      	cmp	r3, #0
 8018d42:	d073      	beq.n	8018e2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8018d44:	9903      	ldr	r1, [sp, #12]
 8018d46:	4630      	mov	r0, r6
 8018d48:	f7ff fd4b 	bl	80187e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018d4c:	b350      	cbz	r0, 8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018d4e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8018d52:	f9b6 c000 	ldrsh.w	ip, [r6]
 8018d56:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8018d5a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8018d5e:	45e6      	cmp	lr, ip
 8018d60:	db33      	blt.n	8018dca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d62:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018d66:	88b3      	ldrh	r3, [r6, #4]
 8018d68:	4472      	add	r2, lr
 8018d6a:	4463      	add	r3, ip
 8018d6c:	b212      	sxth	r2, r2
 8018d6e:	b21b      	sxth	r3, r3
 8018d70:	429a      	cmp	r2, r3
 8018d72:	dc2a      	bgt.n	8018dca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8018d74:	88f3      	ldrh	r3, [r6, #6]
 8018d76:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8018d7a:	fa1f f289 	uxth.w	r2, r9
 8018d7e:	4413      	add	r3, r2
 8018d80:	b29b      	uxth	r3, r3
 8018d82:	45c8      	cmp	r8, r9
 8018d84:	fa1f fc88 	uxth.w	ip, r8
 8018d88:	fa0f fe83 	sxth.w	lr, r3
 8018d8c:	db0f      	blt.n	8018dae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8018d8e:	eba3 030c 	sub.w	r3, r3, ip
 8018d92:	1ac9      	subs	r1, r1, r3
 8018d94:	b209      	sxth	r1, r1
 8018d96:	2900      	cmp	r1, #0
 8018d98:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018d9c:	dd12      	ble.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018d9e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8018da2:	4605      	mov	r5, r0
 8018da4:	9b05      	ldr	r3, [sp, #20]
 8018da6:	3b01      	subs	r3, #1
 8018da8:	9305      	str	r3, [sp, #20]
 8018daa:	3e08      	subs	r6, #8
 8018dac:	e7c7      	b.n	8018d3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8018dae:	4461      	add	r1, ip
 8018db0:	b209      	sxth	r1, r1
 8018db2:	4571      	cmp	r1, lr
 8018db4:	dc38      	bgt.n	8018e28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018db6:	eba2 020c 	sub.w	r2, r2, ip
 8018dba:	b212      	sxth	r2, r2
 8018dbc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8018dc0:	2a00      	cmp	r2, #0
 8018dc2:	dcee      	bgt.n	8018da2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018dc4:	b00f      	add	sp, #60	; 0x3c
 8018dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018dca:	45c8      	cmp	r8, r9
 8018dcc:	db2c      	blt.n	8018e28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018dce:	88f3      	ldrh	r3, [r6, #6]
 8018dd0:	4499      	add	r9, r3
 8018dd2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8018dd6:	4498      	add	r8, r3
 8018dd8:	fa0f f989 	sxth.w	r9, r9
 8018ddc:	fa0f f888 	sxth.w	r8, r8
 8018de0:	45c1      	cmp	r9, r8
 8018de2:	db21      	blt.n	8018e28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018de4:	88b3      	ldrh	r3, [r6, #4]
 8018de6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018dea:	fa1f f28c 	uxth.w	r2, ip
 8018dee:	4413      	add	r3, r2
 8018df0:	b29b      	uxth	r3, r3
 8018df2:	45e6      	cmp	lr, ip
 8018df4:	fa1f f88e 	uxth.w	r8, lr
 8018df8:	fa0f f983 	sxth.w	r9, r3
 8018dfc:	db0a      	blt.n	8018e14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8018dfe:	eba3 0308 	sub.w	r3, r3, r8
 8018e02:	1ac9      	subs	r1, r1, r3
 8018e04:	b209      	sxth	r1, r1
 8018e06:	2900      	cmp	r1, #0
 8018e08:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8018e0c:	ddda      	ble.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8018e0e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8018e12:	e7c6      	b.n	8018da2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8018e14:	4441      	add	r1, r8
 8018e16:	b209      	sxth	r1, r1
 8018e18:	4549      	cmp	r1, r9
 8018e1a:	dc05      	bgt.n	8018e28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8018e1c:	eba2 0208 	sub.w	r2, r2, r8
 8018e20:	b212      	sxth	r2, r2
 8018e22:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8018e26:	e7cb      	b.n	8018dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8018e28:	4607      	mov	r7, r0
 8018e2a:	e7bb      	b.n	8018da4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8018e2c:	2d00      	cmp	r5, #0
 8018e2e:	d181      	bne.n	8018d34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8018e30:	2f00      	cmp	r7, #0
 8018e32:	f000 81dd 	beq.w	80191f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018e36:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8018e3a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8018e3e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8018e42:	b2b3      	uxth	r3, r6
 8018e44:	9305      	str	r3, [sp, #20]
 8018e46:	9a05      	ldr	r2, [sp, #20]
 8018e48:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018e4c:	4413      	add	r3, r2
 8018e4e:	b2ba      	uxth	r2, r7
 8018e50:	4492      	add	sl, r2
 8018e52:	b29b      	uxth	r3, r3
 8018e54:	fa1f fa8a 	uxth.w	sl, sl
 8018e58:	fa0f f883 	sxth.w	r8, r3
 8018e5c:	fa0f f98a 	sxth.w	r9, sl
 8018e60:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8018e64:	9b04      	ldr	r3, [sp, #16]
 8018e66:	2b00      	cmp	r3, #0
 8018e68:	d052      	beq.n	8018f10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8018e6a:	9903      	ldr	r1, [sp, #12]
 8018e6c:	4620      	mov	r0, r4
 8018e6e:	f7ff fcb8 	bl	80187e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018e72:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8018e76:	b1c0      	cbz	r0, 8018eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018e78:	f9b4 e000 	ldrsh.w	lr, [r4]
 8018e7c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8018e80:	4576      	cmp	r6, lr
 8018e82:	dc22      	bgt.n	8018eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018e84:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8018e88:	44f4      	add	ip, lr
 8018e8a:	fa0f fc8c 	sxth.w	ip, ip
 8018e8e:	45e0      	cmp	r8, ip
 8018e90:	db1b      	blt.n	8018eca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8018e92:	428f      	cmp	r7, r1
 8018e94:	fa1f fc81 	uxth.w	ip, r1
 8018e98:	88e1      	ldrh	r1, [r4, #6]
 8018e9a:	dc0d      	bgt.n	8018eb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8018e9c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8018ea0:	eba1 010c 	sub.w	r1, r1, ip
 8018ea4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8018ea8:	80e1      	strh	r1, [r4, #6]
 8018eaa:	4628      	mov	r0, r5
 8018eac:	9904      	ldr	r1, [sp, #16]
 8018eae:	3901      	subs	r1, #1
 8018eb0:	9104      	str	r1, [sp, #16]
 8018eb2:	3c08      	subs	r4, #8
 8018eb4:	4605      	mov	r5, r0
 8018eb6:	e7d3      	b.n	8018e60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8018eb8:	4461      	add	r1, ip
 8018eba:	b209      	sxth	r1, r1
 8018ebc:	4549      	cmp	r1, r9
 8018ebe:	dcf5      	bgt.n	8018eac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018ec0:	eba2 0c0c 	sub.w	ip, r2, ip
 8018ec4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8018ec8:	e7ef      	b.n	8018eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018eca:	428f      	cmp	r7, r1
 8018ecc:	dcee      	bgt.n	8018eac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018ece:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8018ed2:	4461      	add	r1, ip
 8018ed4:	b209      	sxth	r1, r1
 8018ed6:	4589      	cmp	r9, r1
 8018ed8:	dbe8      	blt.n	8018eac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018eda:	4576      	cmp	r6, lr
 8018edc:	fa1f fc8e 	uxth.w	ip, lr
 8018ee0:	88a1      	ldrh	r1, [r4, #4]
 8018ee2:	dc07      	bgt.n	8018ef4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8018ee4:	eba3 0c0c 	sub.w	ip, r3, ip
 8018ee8:	eba1 010c 	sub.w	r1, r1, ip
 8018eec:	f8a4 8000 	strh.w	r8, [r4]
 8018ef0:	80a1      	strh	r1, [r4, #4]
 8018ef2:	e7da      	b.n	8018eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018ef4:	4461      	add	r1, ip
 8018ef6:	b209      	sxth	r1, r1
 8018ef8:	4588      	cmp	r8, r1
 8018efa:	dbd7      	blt.n	8018eac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8018efc:	9905      	ldr	r1, [sp, #20]
 8018efe:	eba1 0c0c 	sub.w	ip, r1, ip
 8018f02:	f8a4 c004 	strh.w	ip, [r4, #4]
 8018f06:	e7d0      	b.n	8018eaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8018f08:	20013832 	.word	0x20013832
 8018f0c:	20013830 	.word	0x20013830
 8018f10:	2d00      	cmp	r5, #0
 8018f12:	f000 816d 	beq.w	80191f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f16:	9b06      	ldr	r3, [sp, #24]
 8018f18:	445b      	add	r3, fp
 8018f1a:	461c      	mov	r4, r3
 8018f1c:	9b02      	ldr	r3, [sp, #8]
 8018f1e:	3301      	adds	r3, #1
 8018f20:	f000 8166 	beq.w	80191f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8018f24:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8018f28:	4629      	mov	r1, r5
 8018f2a:	9803      	ldr	r0, [sp, #12]
 8018f2c:	f7ff fccc 	bl	80188c8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8018f30:	b120      	cbz	r0, 8018f3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8018f32:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018f36:	9801      	ldr	r0, [sp, #4]
 8018f38:	f7ff feb0 	bl	8018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8018f3c:	9903      	ldr	r1, [sp, #12]
 8018f3e:	4628      	mov	r0, r5
 8018f40:	f7ff fc4f 	bl	80187e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018f44:	2800      	cmp	r0, #0
 8018f46:	f000 809c 	beq.w	8019082 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8018f4a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8018f4e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8018f52:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8018f56:	9309      	str	r3, [sp, #36]	; 0x24
 8018f58:	fa1f f189 	uxth.w	r1, r9
 8018f5c:	eb01 0c03 	add.w	ip, r1, r3
 8018f60:	fa1f fa8c 	uxth.w	sl, ip
 8018f64:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8018f68:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8018f6c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8018f70:	b283      	uxth	r3, r0
 8018f72:	eb03 050c 	add.w	r5, r3, ip
 8018f76:	b2ad      	uxth	r5, r5
 8018f78:	9505      	str	r5, [sp, #20]
 8018f7a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8018f7e:	9504      	str	r5, [sp, #16]
 8018f80:	4548      	cmp	r0, r9
 8018f82:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8018f86:	f340 8099 	ble.w	80190bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8018f8a:	1a5b      	subs	r3, r3, r1
 8018f8c:	b29b      	uxth	r3, r3
 8018f8e:	4596      	cmp	lr, r2
 8018f90:	fa0f f08a 	sxth.w	r0, sl
 8018f94:	b21e      	sxth	r6, r3
 8018f96:	dd2e      	ble.n	8018ff6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8018f98:	9f02      	ldr	r7, [sp, #8]
 8018f9a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8018f9e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8018fa2:	9f04      	ldr	r7, [sp, #16]
 8018fa4:	1a3f      	subs	r7, r7, r0
 8018fa6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8018faa:	fa1f fe8e 	uxth.w	lr, lr
 8018fae:	b292      	uxth	r2, r2
 8018fb0:	ebae 0102 	sub.w	r1, lr, r2
 8018fb4:	44a6      	add	lr, r4
 8018fb6:	4402      	add	r2, r0
 8018fb8:	b289      	uxth	r1, r1
 8018fba:	fa0f fe8e 	sxth.w	lr, lr
 8018fbe:	b212      	sxth	r2, r2
 8018fc0:	b20d      	sxth	r5, r1
 8018fc2:	ebae 0202 	sub.w	r2, lr, r2
 8018fc6:	436f      	muls	r7, r5
 8018fc8:	4372      	muls	r2, r6
 8018fca:	4297      	cmp	r7, r2
 8018fcc:	db09      	blt.n	8018fe2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8018fce:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8018fd2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8018fd6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018fda:	449c      	add	ip, r3
 8018fdc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8018fe0:	e686      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018fe2:	4421      	add	r1, r4
 8018fe4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8018fe8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8018fec:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8018ff0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018ff4:	e67c      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8018ff6:	9f04      	ldr	r7, [sp, #16]
 8018ff8:	42b8      	cmp	r0, r7
 8018ffa:	da27      	bge.n	801904c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8018ffc:	9902      	ldr	r1, [sp, #8]
 8018ffe:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8019002:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8019006:	eb05 010e 	add.w	r1, r5, lr
 801900a:	fa1f f881 	uxth.w	r8, r1
 801900e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8019012:	4411      	add	r1, r2
 8019014:	eba1 0108 	sub.w	r1, r1, r8
 8019018:	b289      	uxth	r1, r1
 801901a:	fa0f f988 	sxth.w	r9, r8
 801901e:	eba2 020e 	sub.w	r2, r2, lr
 8019022:	fa0f f881 	sxth.w	r8, r1
 8019026:	1a3f      	subs	r7, r7, r0
 8019028:	4372      	muls	r2, r6
 801902a:	fb08 f707 	mul.w	r7, r8, r7
 801902e:	42ba      	cmp	r2, r7
 8019030:	dc06      	bgt.n	8019040 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8019032:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8019036:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801903a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801903e:	e7ca      	b.n	8018fd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8019040:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8019044:	4429      	add	r1, r5
 8019046:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801904a:	e651      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801904c:	9805      	ldr	r0, [sp, #20]
 801904e:	ebaa 0000 	sub.w	r0, sl, r0
 8019052:	b280      	uxth	r0, r0
 8019054:	2d06      	cmp	r5, #6
 8019056:	fa0f fe80 	sxth.w	lr, r0
 801905a:	d817      	bhi.n	801908c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801905c:	9b04      	ldr	r3, [sp, #16]
 801905e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8019062:	1c6b      	adds	r3, r5, #1
 8019064:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8019068:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801906c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8019070:	9b01      	ldr	r3, [sp, #4]
 8019072:	9801      	ldr	r0, [sp, #4]
 8019074:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8019078:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801907c:	805a      	strh	r2, [r3, #2]
 801907e:	809e      	strh	r6, [r3, #4]
 8019080:	80d9      	strh	r1, [r3, #6]
 8019082:	9b02      	ldr	r3, [sp, #8]
 8019084:	3b01      	subs	r3, #1
 8019086:	9302      	str	r3, [sp, #8]
 8019088:	3c08      	subs	r4, #8
 801908a:	e747      	b.n	8018f1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801908c:	9a02      	ldr	r2, [sp, #8]
 801908e:	45b6      	cmp	lr, r6
 8019090:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8019094:	db0d      	blt.n	80190b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8019096:	449c      	add	ip, r3
 8019098:	fa1f fc8c 	uxth.w	ip, ip
 801909c:	445a      	add	r2, fp
 801909e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80190a2:	448c      	add	ip, r1
 80190a4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80190a8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80190ac:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80190b0:	e61e      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80190b2:	445a      	add	r2, fp
 80190b4:	4484      	add	ip, r0
 80190b6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80190ba:	e78f      	b.n	8018fdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80190bc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80190c0:	fa1f f18e 	uxth.w	r1, lr
 80190c4:	eb01 0806 	add.w	r8, r1, r6
 80190c8:	b293      	uxth	r3, r2
 80190ca:	fa1f f888 	uxth.w	r8, r8
 80190ce:	9306      	str	r3, [sp, #24]
 80190d0:	fa0f f388 	sxth.w	r3, r8
 80190d4:	9307      	str	r3, [sp, #28]
 80190d6:	9f06      	ldr	r7, [sp, #24]
 80190d8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80190dc:	443b      	add	r3, r7
 80190de:	b29b      	uxth	r3, r3
 80190e0:	4596      	cmp	lr, r2
 80190e2:	9308      	str	r3, [sp, #32]
 80190e4:	da24      	bge.n	8019130 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80190e6:	9905      	ldr	r1, [sp, #20]
 80190e8:	eba3 0308 	sub.w	r3, r3, r8
 80190ec:	ebaa 0401 	sub.w	r4, sl, r1
 80190f0:	b2a4      	uxth	r4, r4
 80190f2:	b29b      	uxth	r3, r3
 80190f4:	b225      	sxth	r5, r4
 80190f6:	b219      	sxth	r1, r3
 80190f8:	eba2 020e 	sub.w	r2, r2, lr
 80190fc:	eba9 0000 	sub.w	r0, r9, r0
 8019100:	436a      	muls	r2, r5
 8019102:	4348      	muls	r0, r1
 8019104:	4282      	cmp	r2, r0
 8019106:	9a02      	ldr	r2, [sp, #8]
 8019108:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801910c:	445a      	add	r2, fp
 801910e:	dc06      	bgt.n	801911e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8019110:	9b07      	ldr	r3, [sp, #28]
 8019112:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8019116:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801911a:	44a4      	add	ip, r4
 801911c:	e75e      	b.n	8018fdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801911e:	9904      	ldr	r1, [sp, #16]
 8019120:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8019124:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8019128:	4433      	add	r3, r6
 801912a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801912e:	e5df      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019130:	9f06      	ldr	r7, [sp, #24]
 8019132:	9b04      	ldr	r3, [sp, #16]
 8019134:	1bc9      	subs	r1, r1, r7
 8019136:	fa0f f78a 	sxth.w	r7, sl
 801913a:	b289      	uxth	r1, r1
 801913c:	429f      	cmp	r7, r3
 801913e:	fa0f fe81 	sxth.w	lr, r1
 8019142:	dd23      	ble.n	801918c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8019144:	9a05      	ldr	r2, [sp, #20]
 8019146:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801914a:	9d07      	ldr	r5, [sp, #28]
 801914c:	ebaa 0202 	sub.w	r2, sl, r2
 8019150:	b292      	uxth	r2, r2
 8019152:	eba5 0a03 	sub.w	sl, r5, r3
 8019156:	b214      	sxth	r4, r2
 8019158:	eba9 0000 	sub.w	r0, r9, r0
 801915c:	9b02      	ldr	r3, [sp, #8]
 801915e:	fb0e f000 	mul.w	r0, lr, r0
 8019162:	fb04 fa0a 	mul.w	sl, r4, sl
 8019166:	00db      	lsls	r3, r3, #3
 8019168:	4550      	cmp	r0, sl
 801916a:	445b      	add	r3, fp
 801916c:	db03      	blt.n	8019176 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801916e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8019172:	4494      	add	ip, r2
 8019174:	e732      	b.n	8018fdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8019176:	9a04      	ldr	r2, [sp, #16]
 8019178:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801917c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8019180:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8019184:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8019188:	4431      	add	r1, r6
 801918a:	e75c      	b.n	8019046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801918c:	9b08      	ldr	r3, [sp, #32]
 801918e:	eba3 0308 	sub.w	r3, r3, r8
 8019192:	b29b      	uxth	r3, r3
 8019194:	2d06      	cmp	r5, #6
 8019196:	b218      	sxth	r0, r3
 8019198:	d813      	bhi.n	80191c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801919a:	9b07      	ldr	r3, [sp, #28]
 801919c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80191a0:	1c6b      	adds	r3, r5, #1
 80191a2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80191a6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80191aa:	9b01      	ldr	r3, [sp, #4]
 80191ac:	9901      	ldr	r1, [sp, #4]
 80191ae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80191b2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80191b6:	805a      	strh	r2, [r3, #2]
 80191b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80191ba:	809a      	strh	r2, [r3, #4]
 80191bc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80191c0:	e75f      	b.n	8019082 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80191c2:	9c02      	ldr	r4, [sp, #8]
 80191c4:	4570      	cmp	r0, lr
 80191c6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80191ca:	db0d      	blt.n	80191e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80191cc:	4431      	add	r1, r6
 80191ce:	9b06      	ldr	r3, [sp, #24]
 80191d0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80191d4:	b289      	uxth	r1, r1
 80191d6:	445c      	add	r4, fp
 80191d8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80191dc:	4419      	add	r1, r3
 80191de:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80191e2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80191e6:	e583      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80191e8:	445c      	add	r4, fp
 80191ea:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80191ee:	e79b      	b.n	8019128 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80191f0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80191f4:	1e65      	subs	r5, r4, #1
 80191f6:	b2ad      	uxth	r5, r5
 80191f8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80191fc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8019200:	42b5      	cmp	r5, r6
 8019202:	d044      	beq.n	801928e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8019204:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8019208:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801920c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8019210:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8019214:	4282      	cmp	r2, r0
 8019216:	d11f      	bne.n	8019258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019218:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801921c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8019220:	459c      	cmp	ip, r3
 8019222:	d119      	bne.n	8019258 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8019224:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8019228:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801922c:	19d8      	adds	r0, r3, r7
 801922e:	b200      	sxth	r0, r0
 8019230:	4288      	cmp	r0, r1
 8019232:	d109      	bne.n	8019248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8019234:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8019238:	4413      	add	r3, r2
 801923a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801923e:	4629      	mov	r1, r5
 8019240:	9801      	ldr	r0, [sp, #4]
 8019242:	f7ff fd2b 	bl	8018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019246:	e003      	b.n	8019250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019248:	4411      	add	r1, r2
 801924a:	b209      	sxth	r1, r1
 801924c:	42b9      	cmp	r1, r7
 801924e:	d0f3      	beq.n	8019238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8019250:	3d01      	subs	r5, #1
 8019252:	b2ad      	uxth	r5, r5
 8019254:	3c08      	subs	r4, #8
 8019256:	e7d3      	b.n	8019200 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8019258:	42b9      	cmp	r1, r7
 801925a:	d1f9      	bne.n	8019250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801925c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8019260:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8019264:	4299      	cmp	r1, r3
 8019266:	d1f3      	bne.n	8019250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8019268:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801926c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8019270:	181f      	adds	r7, r3, r0
 8019272:	b23f      	sxth	r7, r7
 8019274:	42ba      	cmp	r2, r7
 8019276:	d105      	bne.n	8019284 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8019278:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801927c:	440b      	add	r3, r1
 801927e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8019282:	e7dc      	b.n	801923e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8019284:	440a      	add	r2, r1
 8019286:	b212      	sxth	r2, r2
 8019288:	4290      	cmp	r0, r2
 801928a:	d1e1      	bne.n	8019250 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801928c:	e7f6      	b.n	801927c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801928e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8019292:	2e07      	cmp	r6, #7
 8019294:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8019298:	d812      	bhi.n	80192c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801929a:	1c75      	adds	r5, r6, #1
 801929c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80192a0:	9d01      	ldr	r5, [sp, #4]
 80192a2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80192a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80192aa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80192ae:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80192b2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80192b6:	442c      	add	r4, r5
 80192b8:	8061      	strh	r1, [r4, #2]
 80192ba:	80a2      	strh	r2, [r4, #4]
 80192bc:	80e3      	strh	r3, [r4, #6]
 80192be:	e581      	b.n	8018dc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80192c0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80192c4:	3e01      	subs	r6, #1
 80192c6:	445c      	add	r4, fp
 80192c8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80192cc:	f04f 37ff 	mov.w	r7, #4294967295
 80192d0:	2500      	movs	r5, #0
 80192d2:	9305      	str	r3, [sp, #20]
 80192d4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80192d8:	9302      	str	r3, [sp, #8]
 80192da:	1e72      	subs	r2, r6, #1
 80192dc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80192e0:	9304      	str	r3, [sp, #16]
 80192e2:	4691      	mov	r9, r2
 80192e4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80192e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 80192ec:	bf14      	ite	ne
 80192ee:	9905      	ldrne	r1, [sp, #20]
 80192f0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80192f4:	6818      	ldr	r0, [r3, #0]
 80192f6:	9207      	str	r2, [sp, #28]
 80192f8:	bf18      	it	ne
 80192fa:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80192fe:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019302:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8019306:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801930a:	9306      	str	r3, [sp, #24]
 801930c:	fb18 f801 	smulbb	r8, r8, r1
 8019310:	6859      	ldr	r1, [r3, #4]
 8019312:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8019316:	4671      	mov	r1, lr
 8019318:	a80c      	add	r0, sp, #48	; 0x30
 801931a:	f7ff fafb 	bl	8018914 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801931e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8019322:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8019326:	9b04      	ldr	r3, [sp, #16]
 8019328:	9a02      	ldr	r2, [sp, #8]
 801932a:	fb10 f001 	smulbb	r0, r0, r1
 801932e:	fb02 8803 	mla	r8, r2, r3, r8
 8019332:	eba0 0108 	sub.w	r1, r0, r8
 8019336:	f04f 0c08 	mov.w	ip, #8
 801933a:	fb90 f0fc 	sdiv	r0, r0, ip
 801933e:	4288      	cmp	r0, r1
 8019340:	dc20      	bgt.n	8019384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8019342:	4551      	cmp	r1, sl
 8019344:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8019348:	da03      	bge.n	8019352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801934a:	b1d9      	cbz	r1, 8019384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801934c:	468a      	mov	sl, r1
 801934e:	464f      	mov	r7, r9
 8019350:	4635      	mov	r5, r6
 8019352:	f109 39ff 	add.w	r9, r9, #4294967295
 8019356:	f119 0f02 	cmn.w	r9, #2
 801935a:	d1c5      	bne.n	80192e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801935c:	4616      	mov	r6, r2
 801935e:	3201      	adds	r2, #1
 8019360:	f1a4 0408 	sub.w	r4, r4, #8
 8019364:	d1b6      	bne.n	80192d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8019366:	9b01      	ldr	r3, [sp, #4]
 8019368:	b2ac      	uxth	r4, r5
 801936a:	00ed      	lsls	r5, r5, #3
 801936c:	1958      	adds	r0, r3, r5
 801936e:	1c7b      	adds	r3, r7, #1
 8019370:	d10b      	bne.n	801938a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8019372:	4601      	mov	r1, r0
 8019374:	9803      	ldr	r0, [sp, #12]
 8019376:	f7ff facd 	bl	8018914 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801937a:	4621      	mov	r1, r4
 801937c:	9801      	ldr	r0, [sp, #4]
 801937e:	f7ff fc8d 	bl	8018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8019382:	e4b5      	b.n	8018cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8019384:	464f      	mov	r7, r9
 8019386:	4635      	mov	r5, r6
 8019388:	e7ed      	b.n	8019366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801938a:	9b01      	ldr	r3, [sp, #4]
 801938c:	00ff      	lsls	r7, r7, #3
 801938e:	19d9      	adds	r1, r3, r7
 8019390:	f7ff fac0 	bl	8018914 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8019394:	9b03      	ldr	r3, [sp, #12]
 8019396:	cb03      	ldmia	r3!, {r0, r1}
 8019398:	445f      	add	r7, fp
 801939a:	445d      	add	r5, fp
 801939c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80193a0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80193a4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80193a8:	9b03      	ldr	r3, [sp, #12]
 80193aa:	6869      	ldr	r1, [r5, #4]
 80193ac:	c303      	stmia	r3!, {r0, r1}
 80193ae:	e7e4      	b.n	801937a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080193b0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80193b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193b4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80193b8:	b09b      	sub	sp, #108	; 0x6c
 80193ba:	4604      	mov	r4, r0
 80193bc:	4630      	mov	r0, r6
 80193be:	f7f9 fbe0 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193c2:	4605      	mov	r5, r0
 80193c4:	b948      	cbnz	r0, 80193da <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80193c6:	6823      	ldr	r3, [r4, #0]
 80193c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80193cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80193ce:	4620      	mov	r0, r4
 80193d0:	4798      	blx	r3
 80193d2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80193d6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80193da:	4bc6      	ldr	r3, [pc, #792]	; (80196f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80193dc:	681b      	ldr	r3, [r3, #0]
 80193de:	2b00      	cmp	r3, #0
 80193e0:	d03f      	beq.n	8019462 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80193e2:	4dc5      	ldr	r5, [pc, #788]	; (80196f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80193e4:	4628      	mov	r0, r5
 80193e6:	f7f9 fbcc 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80193ea:	4606      	mov	r6, r0
 80193ec:	2800      	cmp	r0, #0
 80193ee:	d138      	bne.n	8019462 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80193f0:	4628      	mov	r0, r5
 80193f2:	f7ff f907 	bl	8018604 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80193f6:	6823      	ldr	r3, [r4, #0]
 80193f8:	6829      	ldr	r1, [r5, #0]
 80193fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80193fc:	686a      	ldr	r2, [r5, #4]
 80193fe:	4620      	mov	r0, r4
 8019400:	4798      	blx	r3
 8019402:	802e      	strh	r6, [r5, #0]
 8019404:	806e      	strh	r6, [r5, #2]
 8019406:	80ae      	strh	r6, [r5, #4]
 8019408:	80ee      	strh	r6, [r5, #6]
 801940a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801940e:	4dbb      	ldr	r5, [pc, #748]	; (80196fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8019410:	4640      	mov	r0, r8
 8019412:	f7ff fbeb 	bl	8018bec <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8019416:	882e      	ldrh	r6, [r5, #0]
 8019418:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801941c:	4633      	mov	r3, r6
 801941e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8019422:	42bb      	cmp	r3, r7
 8019424:	d224      	bcs.n	8019470 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019426:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801942a:	2907      	cmp	r1, #7
 801942c:	d816      	bhi.n	801945c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801942e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8019432:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8019436:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801943a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801943e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8019442:	1c4a      	adds	r2, r1, #1
 8019444:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8019448:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801944c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8019450:	f8a2 a002 	strh.w	sl, [r2, #2]
 8019454:	f8a2 e004 	strh.w	lr, [r2, #4]
 8019458:	f8a2 c006 	strh.w	ip, [r2, #6]
 801945c:	3301      	adds	r3, #1
 801945e:	b29b      	uxth	r3, r3
 8019460:	e7df      	b.n	8019422 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8019462:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8019466:	2b00      	cmp	r3, #0
 8019468:	d1cf      	bne.n	801940a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801946a:	b01b      	add	sp, #108	; 0x6c
 801946c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019470:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8019474:	42b3      	cmp	r3, r6
 8019476:	d90c      	bls.n	8019492 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8019478:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801947c:	6822      	ldr	r2, [r4, #0]
 801947e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8019482:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8019484:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8019488:	4620      	mov	r0, r4
 801948a:	3601      	adds	r6, #1
 801948c:	47b8      	blx	r7
 801948e:	b2b6      	uxth	r6, r6
 8019490:	e7ee      	b.n	8019470 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8019492:	4a9b      	ldr	r2, [pc, #620]	; (8019700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8019494:	6813      	ldr	r3, [r2, #0]
 8019496:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801949a:	2b01      	cmp	r3, #1
 801949c:	4691      	mov	r9, r2
 801949e:	f040 80e2 	bne.w	8019666 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80194a2:	8829      	ldrh	r1, [r5, #0]
 80194a4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80194a8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80194ac:	33ae      	adds	r3, #174	; 0xae
 80194ae:	2600      	movs	r6, #0
 80194b0:	428f      	cmp	r7, r1
 80194b2:	f103 0308 	add.w	r3, r3, #8
 80194b6:	dd0a      	ble.n	80194ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80194b8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80194bc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80194c0:	4402      	add	r2, r0
 80194c2:	b212      	sxth	r2, r2
 80194c4:	4296      	cmp	r6, r2
 80194c6:	bfb8      	it	lt
 80194c8:	4616      	movlt	r6, r2
 80194ca:	3101      	adds	r1, #1
 80194cc:	e7f0      	b.n	80194b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80194ce:	4b8d      	ldr	r3, [pc, #564]	; (8019704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80194d0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8019700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80194d4:	881b      	ldrh	r3, [r3, #0]
 80194d6:	2b0f      	cmp	r3, #15
 80194d8:	bf88      	it	hi
 80194da:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80194de:	f04f 0300 	mov.w	r3, #0
 80194e2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80194e6:	bf98      	it	ls
 80194e8:	f04f 0b01 	movls.w	fp, #1
 80194ec:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80194f0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80194f4:	4b82      	ldr	r3, [pc, #520]	; (8019700 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80194f6:	4438      	add	r0, r7
 80194f8:	b207      	sxth	r7, r0
 80194fa:	6818      	ldr	r0, [r3, #0]
 80194fc:	42b7      	cmp	r7, r6
 80194fe:	6803      	ldr	r3, [r0, #0]
 8019500:	f280 8083 	bge.w	801960a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8019504:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019508:	4798      	blx	r3
 801950a:	eb07 030b 	add.w	r3, r7, fp
 801950e:	4298      	cmp	r0, r3
 8019510:	da07      	bge.n	8019522 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019512:	42b0      	cmp	r0, r6
 8019514:	da05      	bge.n	8019522 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8019516:	4287      	cmp	r7, r0
 8019518:	dd6c      	ble.n	80195f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801951a:	2f00      	cmp	r7, #0
 801951c:	dd6a      	ble.n	80195f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801951e:	4630      	mov	r0, r6
 8019520:	e004      	b.n	801952c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8019522:	4287      	cmp	r7, r0
 8019524:	dcfb      	bgt.n	801951e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8019526:	42b0      	cmp	r0, r6
 8019528:	bfa8      	it	ge
 801952a:	4630      	movge	r0, r6
 801952c:	4b76      	ldr	r3, [pc, #472]	; (8019708 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801952e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8019532:	1bc0      	subs	r0, r0, r7
 8019534:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019538:	882f      	ldrh	r7, [r5, #0]
 801953a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801953e:	2200      	movs	r2, #0
 8019540:	f8ad 2014 	strh.w	r2, [sp, #20]
 8019544:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019548:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801954c:	42bb      	cmp	r3, r7
 801954e:	d9cd      	bls.n	80194ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019550:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8019554:	ab07      	add	r3, sp, #28
 8019556:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801955a:	6851      	ldr	r1, [r2, #4]
 801955c:	c303      	stmia	r3!, {r0, r1}
 801955e:	a905      	add	r1, sp, #20
 8019560:	a807      	add	r0, sp, #28
 8019562:	f7ff f93e 	bl	80187e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8019566:	2800      	cmp	r0, #0
 8019568:	d04c      	beq.n	8019604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801956a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801956e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8019572:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8019576:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801957a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801957e:	9302      	str	r3, [sp, #8]
 8019580:	4686      	mov	lr, r0
 8019582:	4290      	cmp	r0, r2
 8019584:	4450      	add	r0, sl
 8019586:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801958a:	bfb8      	it	lt
 801958c:	4696      	movlt	lr, r2
 801958e:	4452      	add	r2, sl
 8019590:	4299      	cmp	r1, r3
 8019592:	b280      	uxth	r0, r0
 8019594:	b292      	uxth	r2, r2
 8019596:	468c      	mov	ip, r1
 8019598:	fa0f fa82 	sxth.w	sl, r2
 801959c:	bfb8      	it	lt
 801959e:	469c      	movlt	ip, r3
 80195a0:	b203      	sxth	r3, r0
 80195a2:	4553      	cmp	r3, sl
 80195a4:	bfb8      	it	lt
 80195a6:	4602      	movlt	r2, r0
 80195a8:	eba2 020e 	sub.w	r2, r2, lr
 80195ac:	f8ad 2020 	strh.w	r2, [sp, #32]
 80195b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80195b4:	9b02      	ldr	r3, [sp, #8]
 80195b6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80195ba:	4411      	add	r1, r2
 80195bc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80195c0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80195c4:	4413      	add	r3, r2
 80195c6:	b289      	uxth	r1, r1
 80195c8:	b29b      	uxth	r3, r3
 80195ca:	b208      	sxth	r0, r1
 80195cc:	b21a      	sxth	r2, r3
 80195ce:	4290      	cmp	r0, r2
 80195d0:	bfb8      	it	lt
 80195d2:	460b      	movlt	r3, r1
 80195d4:	eba3 030c 	sub.w	r3, r3, ip
 80195d8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80195dc:	a807      	add	r0, sp, #28
 80195de:	f7f9 fad0 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80195e2:	b920      	cbnz	r0, 80195ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80195e4:	6823      	ldr	r3, [r4, #0]
 80195e6:	a907      	add	r1, sp, #28
 80195e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80195ea:	4620      	mov	r0, r4
 80195ec:	4798      	blx	r3
 80195ee:	3701      	adds	r7, #1
 80195f0:	b2bf      	uxth	r7, r7
 80195f2:	e7a9      	b.n	8019548 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80195f4:	f8d9 0000 	ldr.w	r0, [r9]
 80195f8:	6803      	ldr	r3, [r0, #0]
 80195fa:	2101      	movs	r1, #1
 80195fc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8019600:	4798      	blx	r3
 8019602:	e773      	b.n	80194ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8019604:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8019608:	e7e8      	b.n	80195dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801960a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801960c:	4798      	blx	r3
 801960e:	4b3f      	ldr	r3, [pc, #252]	; (801970c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8019610:	781b      	ldrb	r3, [r3, #0]
 8019612:	2b00      	cmp	r3, #0
 8019614:	f43f af29 	beq.w	801946a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8019618:	2300      	movs	r3, #0
 801961a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801961e:	882b      	ldrh	r3, [r5, #0]
 8019620:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8019624:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8019628:	42ab      	cmp	r3, r5
 801962a:	f4bf af1e 	bcs.w	801946a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801962e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8019632:	2907      	cmp	r1, #7
 8019634:	d814      	bhi.n	8019660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8019636:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801963a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801963e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8019642:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8019646:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801964a:	1c4a      	adds	r2, r1, #1
 801964c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8019650:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8019654:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8019658:	f8a2 c002 	strh.w	ip, [r2, #2]
 801965c:	8097      	strh	r7, [r2, #4]
 801965e:	80d6      	strh	r6, [r2, #6]
 8019660:	3301      	adds	r3, #1
 8019662:	b29b      	uxth	r3, r3
 8019664:	e7e0      	b.n	8019628 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8019666:	2b02      	cmp	r3, #2
 8019668:	f040 8133 	bne.w	80198d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801966c:	4b28      	ldr	r3, [pc, #160]	; (8019710 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801966e:	781b      	ldrb	r3, [r3, #0]
 8019670:	2b01      	cmp	r3, #1
 8019672:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8019676:	f000 8098 	beq.w	80197aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801967a:	882a      	ldrh	r2, [r5, #0]
 801967c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8019680:	3201      	adds	r2, #1
 8019682:	b292      	uxth	r2, r2
 8019684:	2900      	cmp	r1, #0
 8019686:	d0c2      	beq.n	801960e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8019688:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801968c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8019690:	441e      	add	r6, r3
 8019692:	b236      	sxth	r6, r6
 8019694:	4694      	mov	ip, r2
 8019696:	f04f 0900 	mov.w	r9, #0
 801969a:	fa1f f38c 	uxth.w	r3, ip
 801969e:	4299      	cmp	r1, r3
 80196a0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80196a4:	f240 80bf 	bls.w	8019826 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80196a8:	4427      	add	r7, r4
 80196aa:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80196ae:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80196b2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80196b6:	4283      	cmp	r3, r0
 80196b8:	f340 80a1 	ble.w	80197fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80196bc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80196c0:	4406      	add	r6, r0
 80196c2:	b236      	sxth	r6, r6
 80196c4:	429e      	cmp	r6, r3
 80196c6:	bfa8      	it	ge
 80196c8:	461e      	movge	r6, r3
 80196ca:	46e1      	mov	r9, ip
 80196cc:	f10c 0c01 	add.w	ip, ip, #1
 80196d0:	e7e3      	b.n	801969a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80196d2:	d10a      	bne.n	80196ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80196d4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80196d8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80196dc:	4562      	cmp	r2, ip
 80196de:	bfb8      	it	lt
 80196e0:	4662      	movlt	r2, ip
 80196e2:	4288      	cmp	r0, r1
 80196e4:	bfb8      	it	lt
 80196e6:	461f      	movlt	r7, r3
 80196e8:	e087      	b.n	80197fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80196ea:	428a      	cmp	r2, r1
 80196ec:	bfb8      	it	lt
 80196ee:	460a      	movlt	r2, r1
 80196f0:	e083      	b.n	80197fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 80196f2:	bf00      	nop
 80196f4:	2001387c 	.word	0x2001387c
 80196f8:	20013888 	.word	0x20013888
 80196fc:	2000008c 	.word	0x2000008c
 8019700:	2001383c 	.word	0x2001383c
 8019704:	20013832 	.word	0x20013832
 8019708:	20013830 	.word	0x20013830
 801970c:	2001383a 	.word	0x2001383a
 8019710:	20013834 	.word	0x20013834
 8019714:	19a1      	adds	r1, r4, r6
 8019716:	ab07      	add	r3, sp, #28
 8019718:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801971c:	6849      	ldr	r1, [r1, #4]
 801971e:	c303      	stmia	r3!, {r0, r1}
 8019720:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8019724:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019728:	2b13      	cmp	r3, #19
 801972a:	bfd8      	it	le
 801972c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8019730:	f8ad 201c 	strh.w	r2, [sp, #28]
 8019734:	440b      	add	r3, r1
 8019736:	1a9b      	subs	r3, r3, r2
 8019738:	a807      	add	r0, sp, #28
 801973a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801973e:	f7fe ff7b 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019742:	a807      	add	r0, sp, #28
 8019744:	f7f9 fa1d 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019748:	bb78      	cbnz	r0, 80197aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801974a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801974e:	f8d9 0000 	ldr.w	r0, [r9]
 8019752:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8019756:	f8d0 e000 	ldr.w	lr, [r0]
 801975a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801975e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8019762:	f1bc 0f14 	cmp.w	ip, #20
 8019766:	bfa8      	it	ge
 8019768:	f04f 0c14 	movge.w	ip, #20
 801976c:	fa1f fc8c 	uxth.w	ip, ip
 8019770:	f8cd c000 	str.w	ip, [sp]
 8019774:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8019778:	47d8      	blx	fp
 801977a:	4683      	mov	fp, r0
 801977c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019780:	a807      	add	r0, sp, #28
 8019782:	f7fe ff3f 	bl	8018604 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8019786:	6823      	ldr	r3, [r4, #0]
 8019788:	4426      	add	r6, r4
 801978a:	4620      	mov	r0, r4
 801978c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801978e:	a907      	add	r1, sp, #28
 8019790:	4798      	blx	r3
 8019792:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8019796:	eba0 000b 	sub.w	r0, r0, fp
 801979a:	b200      	sxth	r0, r0
 801979c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80197a0:	b918      	cbnz	r0, 80197aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80197a2:	b2b9      	uxth	r1, r7
 80197a4:	4650      	mov	r0, sl
 80197a6:	f7ff fa79 	bl	8018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80197aa:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80197ae:	f1bb 0f00 	cmp.w	fp, #0
 80197b2:	f43f af2c 	beq.w	801960e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80197b6:	882b      	ldrh	r3, [r5, #0]
 80197b8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80197bc:	3301      	adds	r3, #1
 80197be:	b29b      	uxth	r3, r3
 80197c0:	2700      	movs	r7, #0
 80197c2:	b299      	uxth	r1, r3
 80197c4:	458b      	cmp	fp, r1
 80197c6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80197ca:	d9a3      	bls.n	8019714 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80197cc:	4426      	add	r6, r4
 80197ce:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80197d2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80197d6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80197da:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80197de:	4408      	add	r0, r1
 80197e0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80197e4:	4461      	add	r1, ip
 80197e6:	b200      	sxth	r0, r0
 80197e8:	b209      	sxth	r1, r1
 80197ea:	4288      	cmp	r0, r1
 80197ec:	f6bf af71 	bge.w	80196d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80197f0:	4584      	cmp	ip, r0
 80197f2:	4662      	mov	r2, ip
 80197f4:	461f      	mov	r7, r3
 80197f6:	bfb8      	it	lt
 80197f8:	4602      	movlt	r2, r0
 80197fa:	3301      	adds	r3, #1
 80197fc:	e7e1      	b.n	80197c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80197fe:	d10e      	bne.n	801981e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8019800:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8019804:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8019808:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801980c:	4473      	add	r3, lr
 801980e:	b21b      	sxth	r3, r3
 8019810:	429e      	cmp	r6, r3
 8019812:	bfa8      	it	ge
 8019814:	461e      	movge	r6, r3
 8019816:	4287      	cmp	r7, r0
 8019818:	bfb8      	it	lt
 801981a:	46e1      	movlt	r9, ip
 801981c:	e756      	b.n	80196cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801981e:	4286      	cmp	r6, r0
 8019820:	bfa8      	it	ge
 8019822:	4606      	movge	r6, r0
 8019824:	e752      	b.n	80196cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8019826:	eb0a 0007 	add.w	r0, sl, r7
 801982a:	4427      	add	r7, r4
 801982c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8019830:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8019834:	f1bb 0f13 	cmp.w	fp, #19
 8019838:	bfde      	ittt	le
 801983a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801983e:	445e      	addle	r6, fp
 8019840:	b236      	sxthle	r6, r6
 8019842:	f7f9 f99e 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019846:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801984a:	2800      	cmp	r0, #0
 801984c:	f47f af1a 	bne.w	8019684 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8019850:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8019854:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8019858:	482a      	ldr	r0, [pc, #168]	; (8019904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801985a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801985e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8019862:	6800      	ldr	r0, [r0, #0]
 8019864:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019868:	1ab6      	subs	r6, r6, r2
 801986a:	2e14      	cmp	r6, #20
 801986c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8019870:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019874:	bfa8      	it	ge
 8019876:	2614      	movge	r6, #20
 8019878:	f8d0 c000 	ldr.w	ip, [r0]
 801987c:	b2b6      	uxth	r6, r6
 801987e:	fa1f fb8b 	uxth.w	fp, fp
 8019882:	455e      	cmp	r6, fp
 8019884:	bf94      	ite	ls
 8019886:	9600      	strls	r6, [sp, #0]
 8019888:	f8cd b000 	strhi.w	fp, [sp]
 801988c:	b292      	uxth	r2, r2
 801988e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8019892:	b29b      	uxth	r3, r3
 8019894:	b289      	uxth	r1, r1
 8019896:	47b0      	blx	r6
 8019898:	6823      	ldr	r3, [r4, #0]
 801989a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801989e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80198a0:	a907      	add	r1, sp, #28
 80198a2:	4620      	mov	r0, r4
 80198a4:	4798      	blx	r3
 80198a6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80198aa:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80198ae:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80198b2:	1a5b      	subs	r3, r3, r1
 80198b4:	440a      	add	r2, r1
 80198b6:	b21b      	sxth	r3, r3
 80198b8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80198bc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80198c0:	2b00      	cmp	r3, #0
 80198c2:	f47f aeda 	bne.w	801967a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198c6:	fa1f f189 	uxth.w	r1, r9
 80198ca:	4650      	mov	r0, sl
 80198cc:	f7ff f9e6 	bl	8018c9c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80198d0:	e6d3      	b.n	801967a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80198d2:	882e      	ldrh	r6, [r5, #0]
 80198d4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80198d8:	42b3      	cmp	r3, r6
 80198da:	f67f ae98 	bls.w	801960e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80198de:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80198e2:	ab07      	add	r3, sp, #28
 80198e4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80198e8:	6851      	ldr	r1, [r2, #4]
 80198ea:	c303      	stmia	r3!, {r0, r1}
 80198ec:	a807      	add	r0, sp, #28
 80198ee:	f7f9 f948 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80198f2:	b920      	cbnz	r0, 80198fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80198f4:	6823      	ldr	r3, [r4, #0]
 80198f6:	a907      	add	r1, sp, #28
 80198f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80198fa:	4620      	mov	r0, r4
 80198fc:	4798      	blx	r3
 80198fe:	3601      	adds	r6, #1
 8019900:	b2b6      	uxth	r6, r6
 8019902:	e7e7      	b.n	80198d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8019904:	2001383c 	.word	0x2001383c

08019908 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8019908:	4b03      	ldr	r3, [pc, #12]	; (8019918 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801990a:	2200      	movs	r2, #0
 801990c:	801a      	strh	r2, [r3, #0]
 801990e:	805a      	strh	r2, [r3, #2]
 8019910:	809a      	strh	r2, [r3, #4]
 8019912:	80da      	strh	r2, [r3, #6]
 8019914:	4770      	bx	lr
 8019916:	bf00      	nop
 8019918:	20013888 	.word	0x20013888

0801991c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801991c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019920:	4606      	mov	r6, r0
 8019922:	b09d      	sub	sp, #116	; 0x74
 8019924:	a803      	add	r0, sp, #12
 8019926:	4614      	mov	r4, r2
 8019928:	468a      	mov	sl, r1
 801992a:	461d      	mov	r5, r3
 801992c:	f000 ff08 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8019930:	6833      	ldr	r3, [r6, #0]
 8019932:	4630      	mov	r0, r6
 8019934:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019936:	4798      	blx	r3
 8019938:	6833      	ldr	r3, [r6, #0]
 801993a:	4607      	mov	r7, r0
 801993c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801993e:	4630      	mov	r0, r6
 8019940:	4798      	blx	r3
 8019942:	462a      	mov	r2, r5
 8019944:	9000      	str	r0, [sp, #0]
 8019946:	4621      	mov	r1, r4
 8019948:	463b      	mov	r3, r7
 801994a:	a803      	add	r0, sp, #12
 801994c:	f000 ff53 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019950:	2500      	movs	r5, #0
 8019952:	462c      	mov	r4, r5
 8019954:	46a9      	mov	r9, r5
 8019956:	46a8      	mov	r8, r5
 8019958:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801995c:	2300      	movs	r3, #0
 801995e:	9302      	str	r3, [sp, #8]
 8019960:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8019964:	429c      	cmp	r4, r3
 8019966:	d002      	beq.n	801996e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8019968:	455c      	cmp	r4, fp
 801996a:	bf18      	it	ne
 801996c:	4625      	movne	r5, r4
 801996e:	ab02      	add	r3, sp, #8
 8019970:	4632      	mov	r2, r6
 8019972:	4651      	mov	r1, sl
 8019974:	a803      	add	r0, sp, #12
 8019976:	f001 fa41 	bl	801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801997a:	4604      	mov	r4, r0
 801997c:	b108      	cbz	r0, 8019982 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801997e:	280a      	cmp	r0, #10
 8019980:	d10a      	bne.n	8019998 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8019982:	45c1      	cmp	r9, r8
 8019984:	bf38      	it	cc
 8019986:	46c1      	movcc	r9, r8
 8019988:	f04f 0800 	mov.w	r8, #0
 801998c:	2c00      	cmp	r4, #0
 801998e:	d1e5      	bne.n	801995c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8019990:	4648      	mov	r0, r9
 8019992:	b01d      	add	sp, #116	; 0x74
 8019994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019998:	9a02      	ldr	r2, [sp, #8]
 801999a:	2a00      	cmp	r2, #0
 801999c:	d0de      	beq.n	801995c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801999e:	7b57      	ldrb	r7, [r2, #13]
 80199a0:	6833      	ldr	r3, [r6, #0]
 80199a2:	8894      	ldrh	r4, [r2, #4]
 80199a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80199a6:	007f      	lsls	r7, r7, #1
 80199a8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80199ac:	7a97      	ldrb	r7, [r2, #10]
 80199ae:	4629      	mov	r1, r5
 80199b0:	4307      	orrs	r7, r0
 80199b2:	4630      	mov	r0, r6
 80199b4:	4798      	blx	r3
 80199b6:	4438      	add	r0, r7
 80199b8:	4480      	add	r8, r0
 80199ba:	fa1f f888 	uxth.w	r8, r8
 80199be:	e7e5      	b.n	801998c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080199c0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80199c0:	b508      	push	{r3, lr}
 80199c2:	6803      	ldr	r3, [r0, #0]
 80199c4:	68db      	ldr	r3, [r3, #12]
 80199c6:	4798      	blx	r3
 80199c8:	b128      	cbz	r0, 80199d6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80199ca:	7b43      	ldrb	r3, [r0, #13]
 80199cc:	7a80      	ldrb	r0, [r0, #10]
 80199ce:	005b      	lsls	r3, r3, #1
 80199d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80199d4:	4318      	orrs	r0, r3
 80199d6:	bd08      	pop	{r3, pc}

080199d8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80199d8:	b40e      	push	{r1, r2, r3}
 80199da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80199dc:	b09e      	sub	sp, #120	; 0x78
 80199de:	ab23      	add	r3, sp, #140	; 0x8c
 80199e0:	4605      	mov	r5, r0
 80199e2:	f853 4b04 	ldr.w	r4, [r3], #4
 80199e6:	9303      	str	r3, [sp, #12]
 80199e8:	a805      	add	r0, sp, #20
 80199ea:	f000 fea9 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 80199ee:	682b      	ldr	r3, [r5, #0]
 80199f0:	4628      	mov	r0, r5
 80199f2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80199f4:	4798      	blx	r3
 80199f6:	682b      	ldr	r3, [r5, #0]
 80199f8:	4606      	mov	r6, r0
 80199fa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80199fc:	4628      	mov	r0, r5
 80199fe:	4798      	blx	r3
 8019a00:	4633      	mov	r3, r6
 8019a02:	ae1e      	add	r6, sp, #120	; 0x78
 8019a04:	4621      	mov	r1, r4
 8019a06:	9000      	str	r0, [sp, #0]
 8019a08:	9a03      	ldr	r2, [sp, #12]
 8019a0a:	2400      	movs	r4, #0
 8019a0c:	a805      	add	r0, sp, #20
 8019a0e:	f000 fef2 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019a12:	f846 4d68 	str.w	r4, [r6, #-104]!
 8019a16:	462a      	mov	r2, r5
 8019a18:	4633      	mov	r3, r6
 8019a1a:	4621      	mov	r1, r4
 8019a1c:	a805      	add	r0, sp, #20
 8019a1e:	f001 f9ed 	bl	801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019a22:	b1f0      	cbz	r0, 8019a62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8019a24:	280a      	cmp	r0, #10
 8019a26:	d018      	beq.n	8019a5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a28:	9f04      	ldr	r7, [sp, #16]
 8019a2a:	b1b7      	cbz	r7, 8019a5a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8019a2c:	7b78      	ldrb	r0, [r7, #13]
 8019a2e:	7a3b      	ldrb	r3, [r7, #8]
 8019a30:	88ea      	ldrh	r2, [r5, #6]
 8019a32:	00c1      	lsls	r1, r0, #3
 8019a34:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019a38:	4319      	orrs	r1, r3
 8019a3a:	0643      	lsls	r3, r0, #25
 8019a3c:	bf44      	itt	mi
 8019a3e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8019a42:	b219      	sxthmi	r1, r3
 8019a44:	0100      	lsls	r0, r0, #4
 8019a46:	79fb      	ldrb	r3, [r7, #7]
 8019a48:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8019a4c:	4303      	orrs	r3, r0
 8019a4e:	4413      	add	r3, r2
 8019a50:	1a5b      	subs	r3, r3, r1
 8019a52:	b21b      	sxth	r3, r3
 8019a54:	429c      	cmp	r4, r3
 8019a56:	bfb8      	it	lt
 8019a58:	461c      	movlt	r4, r3
 8019a5a:	4633      	mov	r3, r6
 8019a5c:	462a      	mov	r2, r5
 8019a5e:	2100      	movs	r1, #0
 8019a60:	e7dc      	b.n	8019a1c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8019a62:	b2a0      	uxth	r0, r4
 8019a64:	b01e      	add	sp, #120	; 0x78
 8019a66:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019a6a:	b003      	add	sp, #12
 8019a6c:	4770      	bx	lr

08019a6e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8019a6e:	7a43      	ldrb	r3, [r0, #9]
 8019a70:	8880      	ldrh	r0, [r0, #4]
 8019a72:	4418      	add	r0, r3
 8019a74:	b280      	uxth	r0, r0
 8019a76:	4770      	bx	lr

08019a78 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8019a78:	6803      	ldr	r3, [r0, #0]
 8019a7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019a7c:	4718      	bx	r3

08019a7e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8019a7e:	b40e      	push	{r1, r2, r3}
 8019a80:	b570      	push	{r4, r5, r6, lr}
 8019a82:	b09d      	sub	sp, #116	; 0x74
 8019a84:	ab21      	add	r3, sp, #132	; 0x84
 8019a86:	4604      	mov	r4, r0
 8019a88:	f853 5b04 	ldr.w	r5, [r3], #4
 8019a8c:	9302      	str	r3, [sp, #8]
 8019a8e:	a803      	add	r0, sp, #12
 8019a90:	f000 fe56 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8019a94:	6823      	ldr	r3, [r4, #0]
 8019a96:	4620      	mov	r0, r4
 8019a98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019a9a:	4798      	blx	r3
 8019a9c:	6823      	ldr	r3, [r4, #0]
 8019a9e:	4606      	mov	r6, r0
 8019aa0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019aa2:	4620      	mov	r0, r4
 8019aa4:	4798      	blx	r3
 8019aa6:	4633      	mov	r3, r6
 8019aa8:	9000      	str	r0, [sp, #0]
 8019aaa:	9a02      	ldr	r2, [sp, #8]
 8019aac:	4629      	mov	r1, r5
 8019aae:	a803      	add	r0, sp, #12
 8019ab0:	f000 fea1 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019ab4:	a803      	add	r0, sp, #12
 8019ab6:	f001 fa6f 	bl	801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019aba:	2401      	movs	r4, #1
 8019abc:	b2a3      	uxth	r3, r4
 8019abe:	b140      	cbz	r0, 8019ad2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8019ac0:	280a      	cmp	r0, #10
 8019ac2:	bf08      	it	eq
 8019ac4:	3301      	addeq	r3, #1
 8019ac6:	a803      	add	r0, sp, #12
 8019ac8:	bf08      	it	eq
 8019aca:	b21c      	sxtheq	r4, r3
 8019acc:	f001 fa64 	bl	801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8019ad0:	e7f4      	b.n	8019abc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8019ad2:	4618      	mov	r0, r3
 8019ad4:	b01d      	add	sp, #116	; 0x74
 8019ad6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019ada:	b003      	add	sp, #12
 8019adc:	4770      	bx	lr

08019ade <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8019ade:	b40e      	push	{r1, r2, r3}
 8019ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019ae2:	b09e      	sub	sp, #120	; 0x78
 8019ae4:	ab23      	add	r3, sp, #140	; 0x8c
 8019ae6:	4604      	mov	r4, r0
 8019ae8:	f853 5b04 	ldr.w	r5, [r3], #4
 8019aec:	9303      	str	r3, [sp, #12]
 8019aee:	a805      	add	r0, sp, #20
 8019af0:	f000 fe26 	bl	801a740 <_ZN8touchgfx12TextProviderC1Ev>
 8019af4:	6823      	ldr	r3, [r4, #0]
 8019af6:	4620      	mov	r0, r4
 8019af8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8019afa:	4798      	blx	r3
 8019afc:	6823      	ldr	r3, [r4, #0]
 8019afe:	4606      	mov	r6, r0
 8019b00:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8019b02:	4620      	mov	r0, r4
 8019b04:	4798      	blx	r3
 8019b06:	4633      	mov	r3, r6
 8019b08:	4629      	mov	r1, r5
 8019b0a:	9000      	str	r0, [sp, #0]
 8019b0c:	9a03      	ldr	r2, [sp, #12]
 8019b0e:	a805      	add	r0, sp, #20
 8019b10:	ad1e      	add	r5, sp, #120	; 0x78
 8019b12:	f000 fe70 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8019b16:	2100      	movs	r1, #0
 8019b18:	f845 1d68 	str.w	r1, [r5, #-104]!
 8019b1c:	4622      	mov	r2, r4
 8019b1e:	462b      	mov	r3, r5
 8019b20:	a805      	add	r0, sp, #20
 8019b22:	f001 f96b 	bl	801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b26:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8019b2a:	b1d8      	cbz	r0, 8019b64 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8019b2c:	280a      	cmp	r0, #10
 8019b2e:	d012      	beq.n	8019b56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b30:	9804      	ldr	r0, [sp, #16]
 8019b32:	b180      	cbz	r0, 8019b56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8019b34:	7b47      	ldrb	r7, [r0, #13]
 8019b36:	88e2      	ldrh	r2, [r4, #6]
 8019b38:	00fb      	lsls	r3, r7, #3
 8019b3a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8019b3e:	7a03      	ldrb	r3, [r0, #8]
 8019b40:	430b      	orrs	r3, r1
 8019b42:	0679      	lsls	r1, r7, #25
 8019b44:	bf44      	itt	mi
 8019b46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019b4a:	b21b      	sxthmi	r3, r3
 8019b4c:	1ad3      	subs	r3, r2, r3
 8019b4e:	b21b      	sxth	r3, r3
 8019b50:	429e      	cmp	r6, r3
 8019b52:	bfa8      	it	ge
 8019b54:	461e      	movge	r6, r3
 8019b56:	462b      	mov	r3, r5
 8019b58:	4622      	mov	r2, r4
 8019b5a:	2100      	movs	r1, #0
 8019b5c:	a805      	add	r0, sp, #20
 8019b5e:	f001 f94d 	bl	801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8019b62:	e7e2      	b.n	8019b2a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8019b64:	4630      	mov	r0, r6
 8019b66:	b01e      	add	sp, #120	; 0x78
 8019b68:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8019b6c:	b003      	add	sp, #12
 8019b6e:	4770      	bx	lr

08019b70 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8019b70:	b513      	push	{r0, r1, r4, lr}
 8019b72:	6803      	ldr	r3, [r0, #0]
 8019b74:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8019b78:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019b7c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8019b80:	2400      	movs	r4, #0
 8019b82:	9400      	str	r4, [sp, #0]
 8019b84:	f8ad 2006 	strh.w	r2, [sp, #6]
 8019b88:	691b      	ldr	r3, [r3, #16]
 8019b8a:	4669      	mov	r1, sp
 8019b8c:	4798      	blx	r3
 8019b8e:	b002      	add	sp, #8
 8019b90:	bd10      	pop	{r4, pc}

08019b92 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8019b92:	b538      	push	{r3, r4, r5, lr}
 8019b94:	680b      	ldr	r3, [r1, #0]
 8019b96:	460c      	mov	r4, r1
 8019b98:	68db      	ldr	r3, [r3, #12]
 8019b9a:	4605      	mov	r5, r0
 8019b9c:	4798      	blx	r3
 8019b9e:	6823      	ldr	r3, [r4, #0]
 8019ba0:	4620      	mov	r0, r4
 8019ba2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019ba4:	4629      	mov	r1, r5
 8019ba6:	4798      	blx	r3
 8019ba8:	4628      	mov	r0, r5
 8019baa:	bd38      	pop	{r3, r4, r5, pc}

08019bac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8019bac:	b410      	push	{r4}
 8019bae:	880a      	ldrh	r2, [r1, #0]
 8019bb0:	8884      	ldrh	r4, [r0, #4]
 8019bb2:	4422      	add	r2, r4
 8019bb4:	800a      	strh	r2, [r1, #0]
 8019bb6:	88c4      	ldrh	r4, [r0, #6]
 8019bb8:	884a      	ldrh	r2, [r1, #2]
 8019bba:	4422      	add	r2, r4
 8019bbc:	804a      	strh	r2, [r1, #2]
 8019bbe:	6940      	ldr	r0, [r0, #20]
 8019bc0:	b120      	cbz	r0, 8019bcc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8019bc2:	6803      	ldr	r3, [r0, #0]
 8019bc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019bca:	4718      	bx	r3
 8019bcc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019bd0:	4770      	bx	lr

08019bd2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8019bd2:	b570      	push	{r4, r5, r6, lr}
 8019bd4:	8882      	ldrh	r2, [r0, #4]
 8019bd6:	880b      	ldrh	r3, [r1, #0]
 8019bd8:	4413      	add	r3, r2
 8019bda:	800b      	strh	r3, [r1, #0]
 8019bdc:	88c2      	ldrh	r2, [r0, #6]
 8019bde:	884b      	ldrh	r3, [r1, #2]
 8019be0:	460c      	mov	r4, r1
 8019be2:	4413      	add	r3, r2
 8019be4:	804b      	strh	r3, [r1, #2]
 8019be6:	4605      	mov	r5, r0
 8019be8:	1d01      	adds	r1, r0, #4
 8019bea:	4620      	mov	r0, r4
 8019bec:	f7f8 ff86 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8019bf0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019bf4:	2b00      	cmp	r3, #0
 8019bf6:	dd0b      	ble.n	8019c10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019bf8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019bfc:	2b00      	cmp	r3, #0
 8019bfe:	dd07      	ble.n	8019c10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c00:	6968      	ldr	r0, [r5, #20]
 8019c02:	b128      	cbz	r0, 8019c10 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8019c04:	6803      	ldr	r3, [r0, #0]
 8019c06:	4621      	mov	r1, r4
 8019c08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019c0a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c0e:	4718      	bx	r3
 8019c10:	bd70      	pop	{r4, r5, r6, pc}
	...

08019c14 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8019c14:	b570      	push	{r4, r5, r6, lr}
 8019c16:	8882      	ldrh	r2, [r0, #4]
 8019c18:	880b      	ldrh	r3, [r1, #0]
 8019c1a:	4413      	add	r3, r2
 8019c1c:	800b      	strh	r3, [r1, #0]
 8019c1e:	88c2      	ldrh	r2, [r0, #6]
 8019c20:	884b      	ldrh	r3, [r1, #2]
 8019c22:	460c      	mov	r4, r1
 8019c24:	4413      	add	r3, r2
 8019c26:	804b      	strh	r3, [r1, #2]
 8019c28:	4605      	mov	r5, r0
 8019c2a:	1d01      	adds	r1, r0, #4
 8019c2c:	4620      	mov	r0, r4
 8019c2e:	f7f8 ff65 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8019c32:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8019c36:	2b00      	cmp	r3, #0
 8019c38:	dd19      	ble.n	8019c6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c3a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019c3e:	2b00      	cmp	r3, #0
 8019c40:	dd15      	ble.n	8019c6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c42:	6968      	ldr	r0, [r5, #20]
 8019c44:	b128      	cbz	r0, 8019c52 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8019c46:	6803      	ldr	r3, [r0, #0]
 8019c48:	4621      	mov	r1, r4
 8019c4a:	691b      	ldr	r3, [r3, #16]
 8019c4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c50:	4718      	bx	r3
 8019c52:	4b07      	ldr	r3, [pc, #28]	; (8019c70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8019c54:	681b      	ldr	r3, [r3, #0]
 8019c56:	3304      	adds	r3, #4
 8019c58:	429d      	cmp	r5, r3
 8019c5a:	d108      	bne.n	8019c6e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8019c5c:	f7fe fea0 	bl	80189a0 <_ZN8touchgfx11Application11getInstanceEv>
 8019c60:	6803      	ldr	r3, [r0, #0]
 8019c62:	6821      	ldr	r1, [r4, #0]
 8019c64:	6862      	ldr	r2, [r4, #4]
 8019c66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8019c68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019c6c:	4718      	bx	r3
 8019c6e:	bd70      	pop	{r4, r5, r6, pc}
 8019c70:	20013880 	.word	0x20013880

08019c74 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8019c74:	b570      	push	{r4, r5, r6, lr}
 8019c76:	4604      	mov	r4, r0
 8019c78:	4616      	mov	r6, r2
 8019c7a:	460d      	mov	r5, r1
 8019c7c:	b901      	cbnz	r1, 8019c80 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8019c7e:	b192      	cbz	r2, 8019ca6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8019c80:	6823      	ldr	r3, [r4, #0]
 8019c82:	4620      	mov	r0, r4
 8019c84:	699b      	ldr	r3, [r3, #24]
 8019c86:	4798      	blx	r3
 8019c88:	88e2      	ldrh	r2, [r4, #6]
 8019c8a:	88a1      	ldrh	r1, [r4, #4]
 8019c8c:	4432      	add	r2, r6
 8019c8e:	4429      	add	r1, r5
 8019c90:	4620      	mov	r0, r4
 8019c92:	b212      	sxth	r2, r2
 8019c94:	b209      	sxth	r1, r1
 8019c96:	f7e9 fce9 	bl	800366c <_ZN8touchgfx8Drawable5setXYEss>
 8019c9a:	6823      	ldr	r3, [r4, #0]
 8019c9c:	4620      	mov	r0, r4
 8019c9e:	699b      	ldr	r3, [r3, #24]
 8019ca0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019ca4:	4718      	bx	r3
 8019ca6:	bd70      	pop	{r4, r5, r6, pc}

08019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8019ca8:	b510      	push	{r4, lr}
 8019caa:	4604      	mov	r4, r0
 8019cac:	4608      	mov	r0, r1
 8019cae:	2300      	movs	r3, #0
 8019cb0:	8023      	strh	r3, [r4, #0]
 8019cb2:	8063      	strh	r3, [r4, #2]
 8019cb4:	6803      	ldr	r3, [r0, #0]
 8019cb6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8019cba:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8019cbe:	80a1      	strh	r1, [r4, #4]
 8019cc0:	80e2      	strh	r2, [r4, #6]
 8019cc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019cc4:	4621      	mov	r1, r4
 8019cc6:	4798      	blx	r3
 8019cc8:	4620      	mov	r0, r4
 8019cca:	bd10      	pop	{r4, pc}

08019ccc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8019ccc:	b530      	push	{r4, r5, lr}
 8019cce:	8083      	strh	r3, [r0, #4]
 8019cd0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8019cd4:	80c3      	strh	r3, [r0, #6]
 8019cd6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019cda:	7203      	strb	r3, [r0, #8]
 8019cdc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8019ce0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8019ce4:	7243      	strb	r3, [r0, #9]
 8019ce6:	7a83      	ldrb	r3, [r0, #10]
 8019ce8:	6141      	str	r1, [r0, #20]
 8019cea:	f365 0306 	bfi	r3, r5, #0, #7
 8019cee:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8019cf2:	8302      	strh	r2, [r0, #24]
 8019cf4:	f365 13c7 	bfi	r3, r5, #7, #1
 8019cf8:	7283      	strb	r3, [r0, #10]
 8019cfa:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8019cfe:	72c3      	strb	r3, [r0, #11]
 8019d00:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8019d04:	7303      	strb	r3, [r0, #12]
 8019d06:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8019d0a:	81c3      	strh	r3, [r0, #14]
 8019d0c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8019d10:	8203      	strh	r3, [r0, #16]
 8019d12:	4b01      	ldr	r3, [pc, #4]	; (8019d18 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8019d14:	6003      	str	r3, [r0, #0]
 8019d16:	bd30      	pop	{r4, r5, pc}
 8019d18:	08031e40 	.word	0x08031e40

08019d1c <_ZNK8touchgfx9ConstFont4findEt>:
 8019d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019d1e:	6944      	ldr	r4, [r0, #20]
 8019d20:	b3bc      	cbz	r4, 8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d22:	88a3      	ldrh	r3, [r4, #4]
 8019d24:	8b02      	ldrh	r2, [r0, #24]
 8019d26:	1acb      	subs	r3, r1, r3
 8019d28:	f102 32ff 	add.w	r2, r2, #4294967295
 8019d2c:	d431      	bmi.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d2e:	4293      	cmp	r3, r2
 8019d30:	dd0c      	ble.n	8019d4c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8019d32:	230e      	movs	r3, #14
 8019d34:	fb03 4302 	mla	r3, r3, r2, r4
 8019d38:	889b      	ldrh	r3, [r3, #4]
 8019d3a:	1a5b      	subs	r3, r3, r1
 8019d3c:	1ad3      	subs	r3, r2, r3
 8019d3e:	429a      	cmp	r2, r3
 8019d40:	db27      	blt.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d42:	2b00      	cmp	r3, #0
 8019d44:	bfbc      	itt	lt
 8019d46:	2302      	movlt	r3, #2
 8019d48:	fb92 f3f3 	sdivlt	r3, r2, r3
 8019d4c:	2500      	movs	r5, #0
 8019d4e:	260e      	movs	r6, #14
 8019d50:	4295      	cmp	r5, r2
 8019d52:	dc1e      	bgt.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d54:	fb06 4003 	mla	r0, r6, r3, r4
 8019d58:	8887      	ldrh	r7, [r0, #4]
 8019d5a:	42b9      	cmp	r1, r7
 8019d5c:	d01a      	beq.n	8019d94 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8019d5e:	d20d      	bcs.n	8019d7c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8019d60:	1e5a      	subs	r2, r3, #1
 8019d62:	4295      	cmp	r5, r2
 8019d64:	dc15      	bgt.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d66:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8019d6a:	1a5b      	subs	r3, r3, r1
 8019d6c:	1ad3      	subs	r3, r2, r3
 8019d6e:	429a      	cmp	r2, r3
 8019d70:	db0f      	blt.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d72:	429d      	cmp	r5, r3
 8019d74:	ddec      	ble.n	8019d50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d76:	1953      	adds	r3, r2, r5
 8019d78:	105b      	asrs	r3, r3, #1
 8019d7a:	e7e9      	b.n	8019d50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d7c:	1c5d      	adds	r5, r3, #1
 8019d7e:	42aa      	cmp	r2, r5
 8019d80:	db07      	blt.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d82:	8a43      	ldrh	r3, [r0, #18]
 8019d84:	1acb      	subs	r3, r1, r3
 8019d86:	442b      	add	r3, r5
 8019d88:	429d      	cmp	r5, r3
 8019d8a:	dc02      	bgt.n	8019d92 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8019d8c:	429a      	cmp	r2, r3
 8019d8e:	dadf      	bge.n	8019d50 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8019d90:	e7f1      	b.n	8019d76 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8019d92:	2000      	movs	r0, #0
 8019d94:	bdf0      	pop	{r4, r5, r6, r7, pc}

08019d96 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8019d96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019d98:	4604      	mov	r4, r0
 8019d9a:	4617      	mov	r7, r2
 8019d9c:	461e      	mov	r6, r3
 8019d9e:	b911      	cbnz	r1, 8019da6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8019da0:	2500      	movs	r5, #0
 8019da2:	4628      	mov	r0, r5
 8019da4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019da6:	290a      	cmp	r1, #10
 8019da8:	d0fa      	beq.n	8019da0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019daa:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8019dae:	4291      	cmp	r1, r2
 8019db0:	d0f6      	beq.n	8019da0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019db2:	f242 020b 	movw	r2, #8203	; 0x200b
 8019db6:	4291      	cmp	r1, r2
 8019db8:	d0f2      	beq.n	8019da0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dba:	f7ff ffaf 	bl	8019d1c <_ZNK8touchgfx9ConstFont4findEt>
 8019dbe:	4605      	mov	r5, r0
 8019dc0:	b950      	cbnz	r0, 8019dd8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8019dc2:	6823      	ldr	r3, [r4, #0]
 8019dc4:	4620      	mov	r0, r4
 8019dc6:	691b      	ldr	r3, [r3, #16]
 8019dc8:	4798      	blx	r3
 8019dca:	4601      	mov	r1, r0
 8019dcc:	4620      	mov	r0, r4
 8019dce:	f7ff ffa5 	bl	8019d1c <_ZNK8touchgfx9ConstFont4findEt>
 8019dd2:	4605      	mov	r5, r0
 8019dd4:	2800      	cmp	r0, #0
 8019dd6:	d0e3      	beq.n	8019da0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8019dd8:	6823      	ldr	r3, [r4, #0]
 8019dda:	4629      	mov	r1, r5
 8019ddc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8019dde:	4620      	mov	r0, r4
 8019de0:	4798      	blx	r3
 8019de2:	6038      	str	r0, [r7, #0]
 8019de4:	6823      	ldr	r3, [r4, #0]
 8019de6:	4620      	mov	r0, r4
 8019de8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019dea:	4798      	blx	r3
 8019dec:	7030      	strb	r0, [r6, #0]
 8019dee:	e7d8      	b.n	8019da2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08019df0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8019df0:	b538      	push	{r3, r4, r5, lr}
 8019df2:	4605      	mov	r5, r0
 8019df4:	f002 fb94 	bl	801c520 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019df8:	4604      	mov	r4, r0
 8019dfa:	4628      	mov	r0, r5
 8019dfc:	f002 fad4 	bl	801c3a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e00:	2800      	cmp	r0, #0
 8019e02:	bf14      	ite	ne
 8019e04:	2002      	movne	r0, #2
 8019e06:	2000      	moveq	r0, #0
 8019e08:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e0c:	b280      	uxth	r0, r0
 8019e0e:	bd38      	pop	{r3, r4, r5, pc}

08019e10 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8019e10:	b538      	push	{r3, r4, r5, lr}
 8019e12:	4605      	mov	r5, r0
 8019e14:	f002 fb84 	bl	801c520 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019e18:	4604      	mov	r4, r0
 8019e1a:	4628      	mov	r0, r5
 8019e1c:	f002 fac4 	bl	801c3a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019e20:	2800      	cmp	r0, #0
 8019e22:	bf14      	ite	ne
 8019e24:	2002      	movne	r0, #2
 8019e26:	2000      	moveq	r0, #0
 8019e28:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8019e2c:	f040 0001 	orr.w	r0, r0, #1
 8019e30:	b280      	uxth	r0, r0
 8019e32:	bd38      	pop	{r3, r4, r5, pc}

08019e34 <_ZN8touchgfx4clzuEm>:
 8019e34:	4603      	mov	r3, r0
 8019e36:	b1c8      	cbz	r0, 8019e6c <_ZN8touchgfx4clzuEm+0x38>
 8019e38:	0c02      	lsrs	r2, r0, #16
 8019e3a:	0412      	lsls	r2, r2, #16
 8019e3c:	b9a2      	cbnz	r2, 8019e68 <_ZN8touchgfx4clzuEm+0x34>
 8019e3e:	0403      	lsls	r3, r0, #16
 8019e40:	2010      	movs	r0, #16
 8019e42:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8019e46:	bf04      	itt	eq
 8019e48:	021b      	lsleq	r3, r3, #8
 8019e4a:	3008      	addeq	r0, #8
 8019e4c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8019e50:	bf04      	itt	eq
 8019e52:	011b      	lsleq	r3, r3, #4
 8019e54:	3004      	addeq	r0, #4
 8019e56:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8019e5a:	bf04      	itt	eq
 8019e5c:	009b      	lsleq	r3, r3, #2
 8019e5e:	3002      	addeq	r0, #2
 8019e60:	2b00      	cmp	r3, #0
 8019e62:	db04      	blt.n	8019e6e <_ZN8touchgfx4clzuEm+0x3a>
 8019e64:	3001      	adds	r0, #1
 8019e66:	4770      	bx	lr
 8019e68:	2000      	movs	r0, #0
 8019e6a:	e7ea      	b.n	8019e42 <_ZN8touchgfx4clzuEm+0xe>
 8019e6c:	2020      	movs	r0, #32
 8019e6e:	4770      	bx	lr

08019e70 <_ZN8touchgfx7muldivuEmmmRm>:
 8019e70:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019e74:	460f      	mov	r7, r1
 8019e76:	4615      	mov	r5, r2
 8019e78:	461e      	mov	r6, r3
 8019e7a:	4601      	mov	r1, r0
 8019e7c:	b100      	cbz	r0, 8019e80 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8019e7e:	b927      	cbnz	r7, 8019e8a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8019e80:	2000      	movs	r0, #0
 8019e82:	6030      	str	r0, [r6, #0]
 8019e84:	b002      	add	sp, #8
 8019e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019e8a:	f7ff ffd3 	bl	8019e34 <_ZN8touchgfx4clzuEm>
 8019e8e:	b980      	cbnz	r0, 8019eb2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8019e90:	4638      	mov	r0, r7
 8019e92:	f7ff ffcf 	bl	8019e34 <_ZN8touchgfx4clzuEm>
 8019e96:	2800      	cmp	r0, #0
 8019e98:	dd05      	ble.n	8019ea6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8019e9a:	4633      	mov	r3, r6
 8019e9c:	462a      	mov	r2, r5
 8019e9e:	4638      	mov	r0, r7
 8019ea0:	f7ff ffe6 	bl	8019e70 <_ZN8touchgfx7muldivuEmmmRm>
 8019ea4:	e7ee      	b.n	8019e84 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ea6:	f04f 33ff 	mov.w	r3, #4294967295
 8019eaa:	6033      	str	r3, [r6, #0]
 8019eac:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8019eb0:	e7e8      	b.n	8019e84 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019eb2:	fa37 f800 	lsrs.w	r8, r7, r0
 8019eb6:	fb07 f301 	mul.w	r3, r7, r1
 8019eba:	d105      	bne.n	8019ec8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8019ebc:	fbb3 f0f5 	udiv	r0, r3, r5
 8019ec0:	fb05 3510 	mls	r5, r5, r0, r3
 8019ec4:	6035      	str	r5, [r6, #0]
 8019ec6:	e7dd      	b.n	8019e84 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8019ec8:	2301      	movs	r3, #1
 8019eca:	fa01 fa00 	lsl.w	sl, r1, r0
 8019ece:	fa03 f000 	lsl.w	r0, r3, r0
 8019ed2:	3801      	subs	r0, #1
 8019ed4:	462a      	mov	r2, r5
 8019ed6:	4633      	mov	r3, r6
 8019ed8:	4038      	ands	r0, r7
 8019eda:	f7ff ffc9 	bl	8019e70 <_ZN8touchgfx7muldivuEmmmRm>
 8019ede:	fbba f9f5 	udiv	r9, sl, r5
 8019ee2:	462a      	mov	r2, r5
 8019ee4:	4607      	mov	r7, r0
 8019ee6:	ab01      	add	r3, sp, #4
 8019ee8:	fb05 a119 	mls	r1, r5, r9, sl
 8019eec:	4640      	mov	r0, r8
 8019eee:	f7ff ffbf 	bl	8019e70 <_ZN8touchgfx7muldivuEmmmRm>
 8019ef2:	9b01      	ldr	r3, [sp, #4]
 8019ef4:	6832      	ldr	r2, [r6, #0]
 8019ef6:	fb08 f409 	mul.w	r4, r8, r9
 8019efa:	441a      	add	r2, r3
 8019efc:	fbb2 f3f5 	udiv	r3, r2, r5
 8019f00:	441c      	add	r4, r3
 8019f02:	443c      	add	r4, r7
 8019f04:	4420      	add	r0, r4
 8019f06:	fb05 2513 	mls	r5, r5, r3, r2
 8019f0a:	e7db      	b.n	8019ec4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08019f0c <_ZN8touchgfx6muldivElllRl>:
 8019f0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f0e:	2800      	cmp	r0, #0
 8019f10:	bfba      	itte	lt
 8019f12:	4240      	neglt	r0, r0
 8019f14:	f04f 34ff 	movlt.w	r4, #4294967295
 8019f18:	2401      	movge	r4, #1
 8019f1a:	2900      	cmp	r1, #0
 8019f1c:	bfbc      	itt	lt
 8019f1e:	4249      	neglt	r1, r1
 8019f20:	4264      	neglt	r4, r4
 8019f22:	2a00      	cmp	r2, #0
 8019f24:	bfb6      	itet	lt
 8019f26:	4265      	neglt	r5, r4
 8019f28:	4625      	movge	r5, r4
 8019f2a:	4252      	neglt	r2, r2
 8019f2c:	4288      	cmp	r0, r1
 8019f2e:	461e      	mov	r6, r3
 8019f30:	bfc2      	ittt	gt
 8019f32:	4603      	movgt	r3, r0
 8019f34:	4608      	movgt	r0, r1
 8019f36:	4619      	movgt	r1, r3
 8019f38:	ab01      	add	r3, sp, #4
 8019f3a:	f7ff ff99 	bl	8019e70 <_ZN8touchgfx7muldivuEmmmRm>
 8019f3e:	9b01      	ldr	r3, [sp, #4]
 8019f40:	4368      	muls	r0, r5
 8019f42:	435c      	muls	r4, r3
 8019f44:	6034      	str	r4, [r6, #0]
 8019f46:	b002      	add	sp, #8
 8019f48:	bd70      	pop	{r4, r5, r6, pc}

08019f4a <_ZN8touchgfx6muldivElll>:
 8019f4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8019f4c:	4606      	mov	r6, r0
 8019f4e:	ab01      	add	r3, sp, #4
 8019f50:	460d      	mov	r5, r1
 8019f52:	4614      	mov	r4, r2
 8019f54:	f7ff ffda 	bl	8019f0c <_ZN8touchgfx6muldivElllRl>
 8019f58:	2e00      	cmp	r6, #0
 8019f5a:	db20      	blt.n	8019f9e <_ZN8touchgfx6muldivElll+0x54>
 8019f5c:	bf14      	ite	ne
 8019f5e:	2301      	movne	r3, #1
 8019f60:	2300      	moveq	r3, #0
 8019f62:	2d00      	cmp	r5, #0
 8019f64:	db1e      	blt.n	8019fa4 <_ZN8touchgfx6muldivElll+0x5a>
 8019f66:	bf14      	ite	ne
 8019f68:	2201      	movne	r2, #1
 8019f6a:	2200      	moveq	r2, #0
 8019f6c:	2c00      	cmp	r4, #0
 8019f6e:	fb03 f202 	mul.w	r2, r3, r2
 8019f72:	db1a      	blt.n	8019faa <_ZN8touchgfx6muldivElll+0x60>
 8019f74:	bf14      	ite	ne
 8019f76:	2301      	movne	r3, #1
 8019f78:	2300      	moveq	r3, #0
 8019f7a:	4353      	muls	r3, r2
 8019f7c:	2b01      	cmp	r3, #1
 8019f7e:	d117      	bne.n	8019fb0 <_ZN8touchgfx6muldivElll+0x66>
 8019f80:	9b01      	ldr	r3, [sp, #4]
 8019f82:	2c00      	cmp	r4, #0
 8019f84:	bfb8      	it	lt
 8019f86:	4264      	neglt	r4, r4
 8019f88:	2b00      	cmp	r3, #0
 8019f8a:	f104 0401 	add.w	r4, r4, #1
 8019f8e:	bfb8      	it	lt
 8019f90:	425b      	neglt	r3, r3
 8019f92:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019f96:	db00      	blt.n	8019f9a <_ZN8touchgfx6muldivElll+0x50>
 8019f98:	3001      	adds	r0, #1
 8019f9a:	b002      	add	sp, #8
 8019f9c:	bd70      	pop	{r4, r5, r6, pc}
 8019f9e:	f04f 33ff 	mov.w	r3, #4294967295
 8019fa2:	e7de      	b.n	8019f62 <_ZN8touchgfx6muldivElll+0x18>
 8019fa4:	f04f 32ff 	mov.w	r2, #4294967295
 8019fa8:	e7e0      	b.n	8019f6c <_ZN8touchgfx6muldivElll+0x22>
 8019faa:	f04f 33ff 	mov.w	r3, #4294967295
 8019fae:	e7e4      	b.n	8019f7a <_ZN8touchgfx6muldivElll+0x30>
 8019fb0:	3301      	adds	r3, #1
 8019fb2:	d1f2      	bne.n	8019f9a <_ZN8touchgfx6muldivElll+0x50>
 8019fb4:	9b01      	ldr	r3, [sp, #4]
 8019fb6:	2c00      	cmp	r4, #0
 8019fb8:	bfb8      	it	lt
 8019fba:	4264      	neglt	r4, r4
 8019fbc:	2b00      	cmp	r3, #0
 8019fbe:	bfb8      	it	lt
 8019fc0:	425b      	neglt	r3, r3
 8019fc2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8019fc6:	bfc8      	it	gt
 8019fc8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8019fcc:	e7e5      	b.n	8019f9a <_ZN8touchgfx6muldivElll+0x50>

08019fce <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8019fce:	2000      	movs	r0, #0
 8019fd0:	4770      	bx	lr

08019fd2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8019fd2:	2001      	movs	r0, #1
 8019fd4:	4770      	bx	lr

08019fd6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8019fd6:	2002      	movs	r0, #2
 8019fd8:	4770      	bx	lr

08019fda <_ZN8touchgfx6ScreenD1Ev>:
 8019fda:	4770      	bx	lr

08019fdc <_ZN8touchgfx12GestureEventD1Ev>:
 8019fdc:	4770      	bx	lr

08019fde <_ZN8touchgfx9DragEventD1Ev>:
 8019fde:	4770      	bx	lr

08019fe0 <_ZN8touchgfx10ClickEventD1Ev>:
 8019fe0:	4770      	bx	lr

08019fe2 <_ZN8touchgfx10ClickEventD0Ev>:
 8019fe2:	b510      	push	{r4, lr}
 8019fe4:	210c      	movs	r1, #12
 8019fe6:	4604      	mov	r4, r0
 8019fe8:	f012 fdc3 	bl	802cb72 <_ZdlPvj>
 8019fec:	4620      	mov	r0, r4
 8019fee:	bd10      	pop	{r4, pc}

08019ff0 <_ZN8touchgfx9DragEventD0Ev>:
 8019ff0:	b510      	push	{r4, lr}
 8019ff2:	2110      	movs	r1, #16
 8019ff4:	4604      	mov	r4, r0
 8019ff6:	f012 fdbc 	bl	802cb72 <_ZdlPvj>
 8019ffa:	4620      	mov	r0, r4
 8019ffc:	bd10      	pop	{r4, pc}

08019ffe <_ZN8touchgfx12GestureEventD0Ev>:
 8019ffe:	b510      	push	{r4, lr}
 801a000:	210c      	movs	r1, #12
 801a002:	4604      	mov	r4, r0
 801a004:	f012 fdb5 	bl	802cb72 <_ZdlPvj>
 801a008:	4620      	mov	r0, r4
 801a00a:	bd10      	pop	{r4, pc}

0801a00c <_ZN8touchgfx6ScreenD0Ev>:
 801a00c:	b510      	push	{r4, lr}
 801a00e:	213c      	movs	r1, #60	; 0x3c
 801a010:	4604      	mov	r4, r0
 801a012:	f012 fdae 	bl	802cb72 <_ZdlPvj>
 801a016:	4620      	mov	r0, r4
 801a018:	bd10      	pop	{r4, pc}
	...

0801a01c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801a01c:	b530      	push	{r4, r5, lr}
 801a01e:	460d      	mov	r5, r1
 801a020:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a022:	b087      	sub	sp, #28
 801a024:	4604      	mov	r4, r0
 801a026:	b301      	cbz	r1, 801a06a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801a028:	a801      	add	r0, sp, #4
 801a02a:	f7ff fe3d 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a02e:	892a      	ldrh	r2, [r5, #8]
 801a030:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801a034:	7928      	ldrb	r0, [r5, #4]
 801a036:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801a03a:	f88d 0010 	strb.w	r0, [sp, #16]
 801a03e:	1ad2      	subs	r2, r2, r3
 801a040:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801a042:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a044:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a048:	441a      	add	r2, r3
 801a04a:	896b      	ldrh	r3, [r5, #10]
 801a04c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801a050:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a054:	1b5b      	subs	r3, r3, r5
 801a056:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801a058:	442b      	add	r3, r5
 801a05a:	4d05      	ldr	r5, [pc, #20]	; (801a070 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801a05c:	9503      	str	r5, [sp, #12]
 801a05e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a062:	6803      	ldr	r3, [r0, #0]
 801a064:	a903      	add	r1, sp, #12
 801a066:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801a068:	4798      	blx	r3
 801a06a:	b007      	add	sp, #28
 801a06c:	bd30      	pop	{r4, r5, pc}
 801a06e:	bf00      	nop
 801a070:	08031ec8 	.word	0x08031ec8

0801a074 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801a074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a078:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801a07a:	b08a      	sub	sp, #40	; 0x28
 801a07c:	4604      	mov	r4, r0
 801a07e:	460d      	mov	r5, r1
 801a080:	b113      	cbz	r3, 801a088 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801a082:	790b      	ldrb	r3, [r1, #4]
 801a084:	2b00      	cmp	r3, #0
 801a086:	d044      	beq.n	801a112 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a088:	f104 0804 	add.w	r8, r4, #4
 801a08c:	4641      	mov	r1, r8
 801a08e:	a803      	add	r0, sp, #12
 801a090:	f7ff fe0a 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a094:	792b      	ldrb	r3, [r5, #4]
 801a096:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801a09a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801a09e:	b983      	cbnz	r3, 801a0c2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801a0a0:	892a      	ldrh	r2, [r5, #8]
 801a0a2:	88e9      	ldrh	r1, [r5, #6]
 801a0a4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801a0a8:	1b92      	subs	r2, r2, r6
 801a0aa:	1bc9      	subs	r1, r1, r7
 801a0ac:	9301      	str	r3, [sp, #4]
 801a0ae:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801a0b2:	9300      	str	r3, [sp, #0]
 801a0b4:	b212      	sxth	r2, r2
 801a0b6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801a0ba:	b209      	sxth	r1, r1
 801a0bc:	4640      	mov	r0, r8
 801a0be:	f7f8 fc39 	bl	8012934 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801a0c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801a0c4:	b329      	cbz	r1, 801a112 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a0c6:	a805      	add	r0, sp, #20
 801a0c8:	f7ff fdee 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a0cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801a0d0:	792b      	ldrb	r3, [r5, #4]
 801a0d2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801a0d4:	f88d 3020 	strb.w	r3, [sp, #32]
 801a0d8:	1abf      	subs	r7, r7, r2
 801a0da:	88ea      	ldrh	r2, [r5, #6]
 801a0dc:	4417      	add	r7, r2
 801a0de:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801a0e0:	4417      	add	r7, r2
 801a0e2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801a0e6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801a0ea:	1ab6      	subs	r6, r6, r2
 801a0ec:	892a      	ldrh	r2, [r5, #8]
 801a0ee:	4416      	add	r6, r2
 801a0f0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801a0f2:	4416      	add	r6, r2
 801a0f4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801a0f8:	4a07      	ldr	r2, [pc, #28]	; (801a118 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801a0fa:	9207      	str	r2, [sp, #28]
 801a0fc:	2600      	movs	r6, #0
 801a0fe:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801a102:	6803      	ldr	r3, [r0, #0]
 801a104:	a907      	add	r1, sp, #28
 801a106:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a108:	4798      	blx	r3
 801a10a:	792b      	ldrb	r3, [r5, #4]
 801a10c:	b10b      	cbz	r3, 801a112 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801a10e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801a112:	b00a      	add	sp, #40	; 0x28
 801a114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a118:	08031ea0 	.word	0x08031ea0

0801a11c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801a11c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a120:	460c      	mov	r4, r1
 801a122:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801a124:	b088      	sub	sp, #32
 801a126:	4605      	mov	r5, r0
 801a128:	2900      	cmp	r1, #0
 801a12a:	d06d      	beq.n	801a208 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801a12c:	4668      	mov	r0, sp
 801a12e:	f7ff fdbb 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a132:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801a134:	88e3      	ldrh	r3, [r4, #6]
 801a136:	f9bd 8000 	ldrsh.w	r8, [sp]
 801a13a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801a13e:	440b      	add	r3, r1
 801a140:	b21b      	sxth	r3, r3
 801a142:	4543      	cmp	r3, r8
 801a144:	db31      	blt.n	801a1aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a146:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801a14a:	44c4      	add	ip, r8
 801a14c:	fa0f fc8c 	sxth.w	ip, ip
 801a150:	4563      	cmp	r3, ip
 801a152:	da2a      	bge.n	801a1aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a154:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801a156:	8926      	ldrh	r6, [r4, #8]
 801a158:	4416      	add	r6, r2
 801a15a:	b236      	sxth	r6, r6
 801a15c:	42be      	cmp	r6, r7
 801a15e:	db24      	blt.n	801a1aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a160:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801a164:	4438      	add	r0, r7
 801a166:	b200      	sxth	r0, r0
 801a168:	4286      	cmp	r6, r0
 801a16a:	da1e      	bge.n	801a1aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a16c:	8963      	ldrh	r3, [r4, #10]
 801a16e:	4419      	add	r1, r3
 801a170:	b209      	sxth	r1, r1
 801a172:	4541      	cmp	r1, r8
 801a174:	db08      	blt.n	801a188 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a176:	4561      	cmp	r1, ip
 801a178:	da06      	bge.n	801a188 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a17a:	89a3      	ldrh	r3, [r4, #12]
 801a17c:	441a      	add	r2, r3
 801a17e:	b212      	sxth	r2, r2
 801a180:	42ba      	cmp	r2, r7
 801a182:	db01      	blt.n	801a188 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801a184:	4282      	cmp	r2, r0
 801a186:	db10      	blt.n	801a1aa <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801a188:	4b21      	ldr	r3, [pc, #132]	; (801a210 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801a18a:	9304      	str	r3, [sp, #16]
 801a18c:	2302      	movs	r3, #2
 801a18e:	f88d 3014 	strb.w	r3, [sp, #20]
 801a192:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a194:	2300      	movs	r3, #0
 801a196:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a19a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801a19e:	f8ad 301a 	strh.w	r3, [sp, #26]
 801a1a2:	6803      	ldr	r3, [r0, #0]
 801a1a4:	a904      	add	r1, sp, #16
 801a1a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801a1a8:	4798      	blx	r3
 801a1aa:	1d29      	adds	r1, r5, #4
 801a1ac:	a802      	add	r0, sp, #8
 801a1ae:	f7ff fd7b 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a1b2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a1b6:	88e0      	ldrh	r0, [r4, #6]
 801a1b8:	7921      	ldrb	r1, [r4, #4]
 801a1ba:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801a1be:	8922      	ldrh	r2, [r4, #8]
 801a1c0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801a1c2:	f88d 1014 	strb.w	r1, [sp, #20]
 801a1c6:	eba3 0808 	sub.w	r8, r3, r8
 801a1ca:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a1ce:	1bdf      	subs	r7, r3, r7
 801a1d0:	b2bb      	uxth	r3, r7
 801a1d2:	fa1f f888 	uxth.w	r8, r8
 801a1d6:	8967      	ldrh	r7, [r4, #10]
 801a1d8:	89a4      	ldrh	r4, [r4, #12]
 801a1da:	4440      	add	r0, r8
 801a1dc:	4460      	add	r0, ip
 801a1de:	441a      	add	r2, r3
 801a1e0:	44b8      	add	r8, r7
 801a1e2:	4423      	add	r3, r4
 801a1e4:	f8ad 0016 	strh.w	r0, [sp, #22]
 801a1e8:	4433      	add	r3, r6
 801a1ea:	4432      	add	r2, r6
 801a1ec:	44e0      	add	r8, ip
 801a1ee:	4c09      	ldr	r4, [pc, #36]	; (801a214 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801a1f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801a1f2:	9404      	str	r4, [sp, #16]
 801a1f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 801a1f8:	f8ad 801a 	strh.w	r8, [sp, #26]
 801a1fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801a200:	6803      	ldr	r3, [r0, #0]
 801a202:	a904      	add	r1, sp, #16
 801a204:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801a206:	4798      	blx	r3
 801a208:	b008      	add	sp, #32
 801a20a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a20e:	bf00      	nop
 801a210:	08031ea0 	.word	0x08031ea0
 801a214:	08031eb4 	.word	0x08031eb4

0801a218 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801a218:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801a21a:	4604      	mov	r4, r0
 801a21c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801a220:	3201      	adds	r2, #1
 801a222:	d112      	bne.n	801a24a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801a224:	6803      	ldr	r3, [r0, #0]
 801a226:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801a22a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801a22e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801a232:	2500      	movs	r5, #0
 801a234:	9500      	str	r5, [sp, #0]
 801a236:	466d      	mov	r5, sp
 801a238:	4629      	mov	r1, r5
 801a23a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801a23e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801a240:	4798      	blx	r3
 801a242:	e895 0003 	ldmia.w	r5, {r0, r1}
 801a246:	e884 0003 	stmia.w	r4, {r0, r1}
 801a24a:	4620      	mov	r0, r4
 801a24c:	b003      	add	sp, #12
 801a24e:	bd30      	pop	{r4, r5, pc}

0801a250 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801a250:	b513      	push	{r0, r1, r4, lr}
 801a252:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801a256:	3301      	adds	r3, #1
 801a258:	4604      	mov	r4, r0
 801a25a:	d109      	bne.n	801a270 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801a25c:	4601      	mov	r1, r0
 801a25e:	4668      	mov	r0, sp
 801a260:	f7ff fd22 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a264:	f8bd 3000 	ldrh.w	r3, [sp]
 801a268:	8423      	strh	r3, [r4, #32]
 801a26a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a26e:	8463      	strh	r3, [r4, #34]	; 0x22
 801a270:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801a274:	b002      	add	sp, #8
 801a276:	bd10      	pop	{r4, pc}

0801a278 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801a278:	b513      	push	{r0, r1, r4, lr}
 801a27a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801a27e:	3301      	adds	r3, #1
 801a280:	4604      	mov	r4, r0
 801a282:	d109      	bne.n	801a298 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801a284:	4601      	mov	r1, r0
 801a286:	4668      	mov	r0, sp
 801a288:	f7ff fd0e 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a28c:	f8bd 3000 	ldrh.w	r3, [sp]
 801a290:	8423      	strh	r3, [r4, #32]
 801a292:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a296:	8463      	strh	r3, [r4, #34]	; 0x22
 801a298:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801a29c:	b002      	add	sp, #8
 801a29e:	bd10      	pop	{r4, pc}

0801a2a0 <_ZN8touchgfx6ScreenC1Ev>:
 801a2a0:	b570      	push	{r4, r5, r6, lr}
 801a2a2:	4605      	mov	r5, r0
 801a2a4:	4b16      	ldr	r3, [pc, #88]	; (801a300 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801a2a6:	f845 3b04 	str.w	r3, [r5], #4
 801a2aa:	2300      	movs	r3, #0
 801a2ac:	8103      	strh	r3, [r0, #8]
 801a2ae:	8143      	strh	r3, [r0, #10]
 801a2b0:	8183      	strh	r3, [r0, #12]
 801a2b2:	81c3      	strh	r3, [r0, #14]
 801a2b4:	8203      	strh	r3, [r0, #16]
 801a2b6:	8243      	strh	r3, [r0, #18]
 801a2b8:	8283      	strh	r3, [r0, #20]
 801a2ba:	82c3      	strh	r3, [r0, #22]
 801a2bc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801a2c0:	6203      	str	r3, [r0, #32]
 801a2c2:	8483      	strh	r3, [r0, #36]	; 0x24
 801a2c4:	84c3      	strh	r3, [r0, #38]	; 0x26
 801a2c6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801a2ca:	4a0e      	ldr	r2, [pc, #56]	; (801a304 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801a2cc:	6343      	str	r3, [r0, #52]	; 0x34
 801a2ce:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801a2d2:	4b0d      	ldr	r3, [pc, #52]	; (801a308 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801a2d4:	6042      	str	r2, [r0, #4]
 801a2d6:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a2da:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801a2dc:	4a0b      	ldr	r2, [pc, #44]	; (801a30c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801a2de:	4604      	mov	r4, r0
 801a2e0:	2101      	movs	r1, #1
 801a2e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801a2e6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801a2ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a2ee:	4628      	mov	r0, r5
 801a2f0:	4798      	blx	r3
 801a2f2:	6863      	ldr	r3, [r4, #4]
 801a2f4:	4628      	mov	r0, r5
 801a2f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a2f8:	4631      	mov	r1, r6
 801a2fa:	4798      	blx	r3
 801a2fc:	4620      	mov	r0, r4
 801a2fe:	bd70      	pop	{r4, r5, r6, pc}
 801a300:	08031edc 	.word	0x08031edc
 801a304:	08031560 	.word	0x08031560
 801a308:	20013832 	.word	0x20013832
 801a30c:	20013830 	.word	0x20013830

0801a310 <_ZN8touchgfx6Screen4drawEv>:
 801a310:	b507      	push	{r0, r1, r2, lr}
 801a312:	4b09      	ldr	r3, [pc, #36]	; (801a338 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801a314:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a318:	4b08      	ldr	r3, [pc, #32]	; (801a33c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801a31a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a31e:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a322:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a326:	6803      	ldr	r3, [r0, #0]
 801a328:	2100      	movs	r1, #0
 801a32a:	9100      	str	r1, [sp, #0]
 801a32c:	689b      	ldr	r3, [r3, #8]
 801a32e:	4669      	mov	r1, sp
 801a330:	4798      	blx	r3
 801a332:	b003      	add	sp, #12
 801a334:	f85d fb04 	ldr.w	pc, [sp], #4
 801a338:	20013830 	.word	0x20013830
 801a33c:	20013832 	.word	0x20013832

0801a340 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801a340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a344:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a348:	2b00      	cmp	r3, #0
 801a34a:	b089      	sub	sp, #36	; 0x24
 801a34c:	4680      	mov	r8, r0
 801a34e:	460c      	mov	r4, r1
 801a350:	4615      	mov	r5, r2
 801a352:	dd0e      	ble.n	801a372 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a354:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a358:	2b00      	cmp	r3, #0
 801a35a:	dd0a      	ble.n	801a372 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a35c:	4628      	mov	r0, r5
 801a35e:	f7ff ff5b 	bl	801a218 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a362:	4621      	mov	r1, r4
 801a364:	f7fe fa3d 	bl	80187e2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801a368:	69eb      	ldr	r3, [r5, #28]
 801a36a:	b928      	cbnz	r0, 801a378 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801a36c:	461d      	mov	r5, r3
 801a36e:	2b00      	cmp	r3, #0
 801a370:	d1f4      	bne.n	801a35c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801a372:	b009      	add	sp, #36	; 0x24
 801a374:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a378:	ae04      	add	r6, sp, #16
 801a37a:	2b00      	cmp	r3, #0
 801a37c:	f000 80b5 	beq.w	801a4ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a380:	682b      	ldr	r3, [r5, #0]
 801a382:	4629      	mov	r1, r5
 801a384:	68db      	ldr	r3, [r3, #12]
 801a386:	a802      	add	r0, sp, #8
 801a388:	4798      	blx	r3
 801a38a:	4628      	mov	r0, r5
 801a38c:	f7ff ff60 	bl	801a250 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a390:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801a394:	4407      	add	r7, r0
 801a396:	4628      	mov	r0, r5
 801a398:	f7ff ff6e 	bl	801a278 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a39c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a3a0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801a3a4:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a3a8:	4418      	add	r0, r3
 801a3aa:	4621      	mov	r1, r4
 801a3ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a3b0:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a3b4:	b23f      	sxth	r7, r7
 801a3b6:	4630      	mov	r0, r6
 801a3b8:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a3bc:	f8ad 7010 	strh.w	r7, [sp, #16]
 801a3c0:	f7f8 fb9c 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 801a3c4:	4628      	mov	r0, r5
 801a3c6:	f7ff ff27 	bl	801a218 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a3ca:	4602      	mov	r2, r0
 801a3cc:	e896 0003 	ldmia.w	r6, {r0, r1}
 801a3d0:	ab06      	add	r3, sp, #24
 801a3d2:	e883 0003 	stmia.w	r3, {r0, r1}
 801a3d6:	4611      	mov	r1, r2
 801a3d8:	4618      	mov	r0, r3
 801a3da:	f7f8 fb8f 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 801a3de:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801a3e2:	f9b4 1000 	ldrsh.w	r1, [r4]
 801a3e6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801a3ea:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801a3ee:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801a3f2:	4299      	cmp	r1, r3
 801a3f4:	d10b      	bne.n	801a40e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a3f6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a3fa:	4552      	cmp	r2, sl
 801a3fc:	d107      	bne.n	801a40e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a3fe:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801a402:	455a      	cmp	r2, fp
 801a404:	d103      	bne.n	801a40e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801a406:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801a40a:	454a      	cmp	r2, r9
 801a40c:	d06d      	beq.n	801a4ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a40e:	f1bb 0f00 	cmp.w	fp, #0
 801a412:	dd65      	ble.n	801a4e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a414:	f1b9 0f00 	cmp.w	r9, #0
 801a418:	dd62      	ble.n	801a4e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801a41a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801a41e:	fa1f f08a 	uxth.w	r0, sl
 801a422:	4552      	cmp	r2, sl
 801a424:	9000      	str	r0, [sp, #0]
 801a426:	da12      	bge.n	801a44e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801a428:	9301      	str	r3, [sp, #4]
 801a42a:	9b00      	ldr	r3, [sp, #0]
 801a42c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a430:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a434:	1a9a      	subs	r2, r3, r2
 801a436:	f8ad 1010 	strh.w	r1, [sp, #16]
 801a43a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a43e:	f8ad 2016 	strh.w	r2, [sp, #22]
 801a442:	69ea      	ldr	r2, [r5, #28]
 801a444:	4631      	mov	r1, r6
 801a446:	4640      	mov	r0, r8
 801a448:	f7ff ff7a 	bl	801a340 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a44c:	9b01      	ldr	r3, [sp, #4]
 801a44e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801a452:	429a      	cmp	r2, r3
 801a454:	b29f      	uxth	r7, r3
 801a456:	da0d      	bge.n	801a474 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801a458:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a45c:	1aba      	subs	r2, r7, r2
 801a45e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a462:	f8ad 2014 	strh.w	r2, [sp, #20]
 801a466:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a46a:	69ea      	ldr	r2, [r5, #28]
 801a46c:	4631      	mov	r1, r6
 801a46e:	4640      	mov	r0, r8
 801a470:	f7ff ff66 	bl	801a340 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a474:	8822      	ldrh	r2, [r4, #0]
 801a476:	88a3      	ldrh	r3, [r4, #4]
 801a478:	445f      	add	r7, fp
 801a47a:	4413      	add	r3, r2
 801a47c:	b29b      	uxth	r3, r3
 801a47e:	b2bf      	uxth	r7, r7
 801a480:	b23a      	sxth	r2, r7
 801a482:	b219      	sxth	r1, r3
 801a484:	4291      	cmp	r1, r2
 801a486:	dd0d      	ble.n	801a4a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801a488:	1bdb      	subs	r3, r3, r7
 801a48a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a48e:	f8ad a012 	strh.w	sl, [sp, #18]
 801a492:	f8ad 3014 	strh.w	r3, [sp, #20]
 801a496:	f8ad 9016 	strh.w	r9, [sp, #22]
 801a49a:	69ea      	ldr	r2, [r5, #28]
 801a49c:	4631      	mov	r1, r6
 801a49e:	4640      	mov	r0, r8
 801a4a0:	f7ff ff4e 	bl	801a340 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a4a4:	88e2      	ldrh	r2, [r4, #6]
 801a4a6:	8863      	ldrh	r3, [r4, #2]
 801a4a8:	4413      	add	r3, r2
 801a4aa:	9a00      	ldr	r2, [sp, #0]
 801a4ac:	444a      	add	r2, r9
 801a4ae:	b29b      	uxth	r3, r3
 801a4b0:	fa1f f982 	uxth.w	r9, r2
 801a4b4:	fa0f f289 	sxth.w	r2, r9
 801a4b8:	b219      	sxth	r1, r3
 801a4ba:	428a      	cmp	r2, r1
 801a4bc:	da15      	bge.n	801a4ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801a4be:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801a4c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 801a4c6:	f8ad 1014 	strh.w	r1, [sp, #20]
 801a4ca:	eba3 0309 	sub.w	r3, r3, r9
 801a4ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a4d2:	f8ad 2012 	strh.w	r2, [sp, #18]
 801a4d6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a4da:	69ea      	ldr	r2, [r5, #28]
 801a4dc:	4631      	mov	r1, r6
 801a4de:	e001      	b.n	801a4e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801a4e0:	69ea      	ldr	r2, [r5, #28]
 801a4e2:	4621      	mov	r1, r4
 801a4e4:	4640      	mov	r0, r8
 801a4e6:	f7ff ff2b 	bl	801a340 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a4ea:	4628      	mov	r0, r5
 801a4ec:	f7ff fe94 	bl	801a218 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801a4f0:	6861      	ldr	r1, [r4, #4]
 801a4f2:	4602      	mov	r2, r0
 801a4f4:	6820      	ldr	r0, [r4, #0]
 801a4f6:	4633      	mov	r3, r6
 801a4f8:	c303      	stmia	r3!, {r0, r1}
 801a4fa:	4611      	mov	r1, r2
 801a4fc:	4630      	mov	r0, r6
 801a4fe:	f7f8 fafd 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 801a502:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801a506:	2b00      	cmp	r3, #0
 801a508:	f77f af33 	ble.w	801a372 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a50c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801a510:	2b00      	cmp	r3, #0
 801a512:	f77f af2e 	ble.w	801a372 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801a516:	4628      	mov	r0, r5
 801a518:	f7ff fe9a 	bl	801a250 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801a51c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801a520:	1a18      	subs	r0, r3, r0
 801a522:	f8ad 0010 	strh.w	r0, [sp, #16]
 801a526:	4628      	mov	r0, r5
 801a528:	f7ff fea6 	bl	801a278 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801a52c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a530:	1a18      	subs	r0, r3, r0
 801a532:	f8ad 0012 	strh.w	r0, [sp, #18]
 801a536:	682b      	ldr	r3, [r5, #0]
 801a538:	4631      	mov	r1, r6
 801a53a:	689b      	ldr	r3, [r3, #8]
 801a53c:	4628      	mov	r0, r5
 801a53e:	4798      	blx	r3
 801a540:	e717      	b.n	801a372 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801a542 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801a542:	b570      	push	{r4, r5, r6, lr}
 801a544:	460c      	mov	r4, r1
 801a546:	b086      	sub	sp, #24
 801a548:	1d06      	adds	r6, r0, #4
 801a54a:	2300      	movs	r3, #0
 801a54c:	4631      	mov	r1, r6
 801a54e:	4605      	mov	r5, r0
 801a550:	a802      	add	r0, sp, #8
 801a552:	9301      	str	r3, [sp, #4]
 801a554:	f7ff fba8 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a558:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a55c:	8822      	ldrh	r2, [r4, #0]
 801a55e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801a562:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801a566:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a56a:	1ad2      	subs	r2, r2, r3
 801a56c:	8863      	ldrh	r3, [r4, #2]
 801a56e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a572:	1a5b      	subs	r3, r3, r1
 801a574:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801a578:	f8ad 1016 	strh.w	r1, [sp, #22]
 801a57c:	aa01      	add	r2, sp, #4
 801a57e:	a904      	add	r1, sp, #16
 801a580:	4630      	mov	r0, r6
 801a582:	f8ad 3012 	strh.w	r3, [sp, #18]
 801a586:	f7f8 fb91 	bl	8012cac <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801a58a:	9a01      	ldr	r2, [sp, #4]
 801a58c:	b11a      	cbz	r2, 801a596 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801a58e:	4621      	mov	r1, r4
 801a590:	4628      	mov	r0, r5
 801a592:	f7ff fed5 	bl	801a340 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801a596:	b006      	add	sp, #24
 801a598:	bd70      	pop	{r4, r5, r6, pc}

0801a59a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801a59a:	b530      	push	{r4, r5, lr}
 801a59c:	4602      	mov	r2, r0
 801a59e:	4604      	mov	r4, r0
 801a5a0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801a5a4:	b085      	sub	sp, #20
 801a5a6:	460d      	mov	r5, r1
 801a5a8:	6851      	ldr	r1, [r2, #4]
 801a5aa:	466b      	mov	r3, sp
 801a5ac:	c303      	stmia	r3!, {r0, r1}
 801a5ae:	4629      	mov	r1, r5
 801a5b0:	4668      	mov	r0, sp
 801a5b2:	f7f8 faa3 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 801a5b6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a5ba:	b12b      	cbz	r3, 801a5c8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801a5bc:	4669      	mov	r1, sp
 801a5be:	4620      	mov	r0, r4
 801a5c0:	f7ff ffbf 	bl	801a542 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801a5c4:	b005      	add	sp, #20
 801a5c6:	bd30      	pop	{r4, r5, pc}
 801a5c8:	3404      	adds	r4, #4
 801a5ca:	4621      	mov	r1, r4
 801a5cc:	a802      	add	r0, sp, #8
 801a5ce:	f7ff fb6b 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801a5d2:	f8bd 3000 	ldrh.w	r3, [sp]
 801a5d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801a5da:	1a9b      	subs	r3, r3, r2
 801a5dc:	f8ad 3000 	strh.w	r3, [sp]
 801a5e0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a5e4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801a5e8:	4669      	mov	r1, sp
 801a5ea:	1a9b      	subs	r3, r3, r2
 801a5ec:	4620      	mov	r0, r4
 801a5ee:	f8ad 3002 	strh.w	r3, [sp, #2]
 801a5f2:	f7f8 fb22 	bl	8012c3a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801a5f6:	e7e5      	b.n	801a5c4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0801a5f8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801a5f8:	680a      	ldr	r2, [r1, #0]
 801a5fa:	460b      	mov	r3, r1
 801a5fc:	6992      	ldr	r2, [r2, #24]
 801a5fe:	1d01      	adds	r1, r0, #4
 801a600:	4618      	mov	r0, r3
 801a602:	4710      	bx	r2

0801a604 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 801a604:	4298      	cmp	r0, r3
 801a606:	d200      	bcs.n	801a60a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 801a608:	b913      	cbnz	r3, 801a610 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801a60a:	440a      	add	r2, r1
 801a60c:	b210      	sxth	r0, r2
 801a60e:	4770      	bx	lr
 801a610:	ee07 0a90 	vmov	s15, r0
 801a614:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a618:	ee07 3a90 	vmov	s15, r3
 801a61c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a620:	eddf 4a15 	vldr	s9, [pc, #84]	; 801a678 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 801a624:	eddf 5a15 	vldr	s11, [pc, #84]	; 801a67c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 801a628:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a62c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a630:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a634:	ee07 2a90 	vmov	s15, r2
 801a638:	eee7 5a24 	vfma.f32	s11, s14, s9
 801a63c:	ee27 5a07 	vmul.f32	s10, s14, s14
 801a640:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a644:	eee5 6a25 	vfma.f32	s13, s10, s11
 801a648:	ee07 1a90 	vmov	s15, r1
 801a64c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a650:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a654:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a658:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a65c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a660:	bfcc      	ite	gt
 801a662:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a666:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a66a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a66e:	ee17 3a90 	vmov	r3, s15
 801a672:	b218      	sxth	r0, r3
 801a674:	4770      	bx	lr
 801a676:	bf00      	nop
 801a678:	402ce6b0 	.word	0x402ce6b0
 801a67c:	3fd9cd60 	.word	0x3fd9cd60

0801a680 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801a680:	4298      	cmp	r0, r3
 801a682:	d200      	bcs.n	801a686 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 801a684:	b913      	cbnz	r3, 801a68c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 801a686:	440a      	add	r2, r1
 801a688:	b210      	sxth	r0, r2
 801a68a:	4770      	bx	lr
 801a68c:	ee07 0a90 	vmov	s15, r0
 801a690:	eef8 6a67 	vcvt.f32.u32	s13, s15
 801a694:	ee07 3a90 	vmov	s15, r3
 801a698:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a69c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801a6a0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a6a4:	ee37 7a66 	vsub.f32	s14, s14, s13
 801a6a8:	ee07 2a90 	vmov	s15, r2
 801a6ac:	ee67 5a07 	vmul.f32	s11, s14, s14
 801a6b0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801a6b4:	eee5 6a87 	vfma.f32	s13, s11, s14
 801a6b8:	ee07 1a90 	vmov	s15, r1
 801a6bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a6c0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a6c4:	eee6 7a26 	vfma.f32	s15, s12, s13
 801a6c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a6cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a6d0:	bfcc      	ite	gt
 801a6d2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a6d6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a6da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a6de:	ee17 3a90 	vmov	r3, s15
 801a6e2:	b218      	sxth	r0, r3
 801a6e4:	4770      	bx	lr

0801a6e6 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801a6e6:	4298      	cmp	r0, r3
 801a6e8:	d200      	bcs.n	801a6ec <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801a6ea:	b913      	cbnz	r3, 801a6f2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801a6ec:	440a      	add	r2, r1
 801a6ee:	b210      	sxth	r0, r2
 801a6f0:	4770      	bx	lr
 801a6f2:	ee07 2a90 	vmov	s15, r2
 801a6f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801a6fa:	ee07 0a90 	vmov	s15, r0
 801a6fe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801a702:	ee67 7a27 	vmul.f32	s15, s14, s15
 801a706:	ee07 3a10 	vmov	s14, r3
 801a70a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801a70e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a712:	ee07 1a90 	vmov	s15, r1
 801a716:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801a71a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a71e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801a722:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a726:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a72a:	bfcc      	ite	gt
 801a72c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801a730:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801a734:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a738:	ee17 3a90 	vmov	r3, s15
 801a73c:	b218      	sxth	r0, r3
 801a73e:	4770      	bx	lr

0801a740 <_ZN8touchgfx12TextProviderC1Ev>:
 801a740:	b538      	push	{r3, r4, r5, lr}
 801a742:	2500      	movs	r5, #0
 801a744:	2302      	movs	r3, #2
 801a746:	4604      	mov	r4, r0
 801a748:	e9c0 5500 	strd	r5, r5, [r0]
 801a74c:	7403      	strb	r3, [r0, #16]
 801a74e:	6145      	str	r5, [r0, #20]
 801a750:	7605      	strb	r5, [r0, #24]
 801a752:	83c5      	strh	r5, [r0, #30]
 801a754:	8405      	strh	r5, [r0, #32]
 801a756:	86c5      	strh	r5, [r0, #54]	; 0x36
 801a758:	8705      	strh	r5, [r0, #56]	; 0x38
 801a75a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801a75c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801a760:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 801a764:	220e      	movs	r2, #14
 801a766:	4629      	mov	r1, r5
 801a768:	304c      	adds	r0, #76	; 0x4c
 801a76a:	f013 faee 	bl	802dd4a <memset>
 801a76e:	2301      	movs	r3, #1
 801a770:	4620      	mov	r0, r4
 801a772:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801a776:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801a77a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801a77e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801a782:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 801a786:	f7ef ff2f 	bl	800a5e8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801a78a:	4620      	mov	r0, r4
 801a78c:	bd38      	pop	{r3, r4, r5, pc}

0801a78e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801a78e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801a790:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a794:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 801a796:	fab0 f080 	clz	r0, r0
 801a79a:	0940      	lsrs	r0, r0, #5
 801a79c:	4770      	bx	lr

0801a79e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801a79e:	b530      	push	{r4, r5, lr}
 801a7a0:	2500      	movs	r5, #0
 801a7a2:	2401      	movs	r4, #1
 801a7a4:	6843      	ldr	r3, [r0, #4]
 801a7a6:	b913      	cbnz	r3, 801a7ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801a7a8:	6803      	ldr	r3, [r0, #0]
 801a7aa:	b313      	cbz	r3, 801a7f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7ac:	6043      	str	r3, [r0, #4]
 801a7ae:	7e03      	ldrb	r3, [r0, #24]
 801a7b0:	b143      	cbz	r3, 801a7c4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801a7b2:	6943      	ldr	r3, [r0, #20]
 801a7b4:	b12b      	cbz	r3, 801a7c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a7b6:	881a      	ldrh	r2, [r3, #0]
 801a7b8:	b11a      	cbz	r2, 801a7c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801a7ba:	1c9a      	adds	r2, r3, #2
 801a7bc:	6142      	str	r2, [r0, #20]
 801a7be:	8818      	ldrh	r0, [r3, #0]
 801a7c0:	bd30      	pop	{r4, r5, pc}
 801a7c2:	7605      	strb	r5, [r0, #24]
 801a7c4:	6843      	ldr	r3, [r0, #4]
 801a7c6:	8819      	ldrh	r1, [r3, #0]
 801a7c8:	b199      	cbz	r1, 801a7f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801a7ca:	1c9a      	adds	r2, r3, #2
 801a7cc:	2902      	cmp	r1, #2
 801a7ce:	6042      	str	r2, [r0, #4]
 801a7d0:	d1f5      	bne.n	801a7be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801a7d2:	7c03      	ldrb	r3, [r0, #16]
 801a7d4:	2b01      	cmp	r3, #1
 801a7d6:	d8e5      	bhi.n	801a7a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7d8:	1c5a      	adds	r2, r3, #1
 801a7da:	3302      	adds	r3, #2
 801a7dc:	7402      	strb	r2, [r0, #16]
 801a7de:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801a7e2:	6143      	str	r3, [r0, #20]
 801a7e4:	2b00      	cmp	r3, #0
 801a7e6:	d0dd      	beq.n	801a7a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7e8:	881b      	ldrh	r3, [r3, #0]
 801a7ea:	2b00      	cmp	r3, #0
 801a7ec:	d0da      	beq.n	801a7a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7ee:	7604      	strb	r4, [r0, #24]
 801a7f0:	e7d8      	b.n	801a7a4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801a7f2:	2000      	movs	r0, #0
 801a7f4:	e7e4      	b.n	801a7c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801a7f6:	b430      	push	{r4, r5}
 801a7f8:	6001      	str	r1, [r0, #0]
 801a7fa:	2100      	movs	r1, #0
 801a7fc:	6041      	str	r1, [r0, #4]
 801a7fe:	6815      	ldr	r5, [r2, #0]
 801a800:	6085      	str	r5, [r0, #8]
 801a802:	6852      	ldr	r2, [r2, #4]
 801a804:	6443      	str	r3, [r0, #68]	; 0x44
 801a806:	9b02      	ldr	r3, [sp, #8]
 801a808:	60c2      	str	r2, [r0, #12]
 801a80a:	7401      	strb	r1, [r0, #16]
 801a80c:	6141      	str	r1, [r0, #20]
 801a80e:	7601      	strb	r1, [r0, #24]
 801a810:	8701      	strh	r1, [r0, #56]	; 0x38
 801a812:	8401      	strh	r1, [r0, #32]
 801a814:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801a818:	6483      	str	r3, [r0, #72]	; 0x48
 801a81a:	bc30      	pop	{r4, r5}
 801a81c:	f7ef bee4 	b.w	800a5e8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801a820 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801a820:	b408      	push	{r3}
 801a822:	b510      	push	{r4, lr}
 801a824:	b085      	sub	sp, #20
 801a826:	ac07      	add	r4, sp, #28
 801a828:	f854 3b04 	ldr.w	r3, [r4], #4
 801a82c:	9300      	str	r3, [sp, #0]
 801a82e:	4613      	mov	r3, r2
 801a830:	4622      	mov	r2, r4
 801a832:	9403      	str	r4, [sp, #12]
 801a834:	f7ff ffdf 	bl	801a7f6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801a838:	b005      	add	sp, #20
 801a83a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a83e:	b001      	add	sp, #4
 801a840:	4770      	bx	lr

0801a842 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801a842:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a844:	4605      	mov	r5, r0
 801a846:	4608      	mov	r0, r1
 801a848:	b1e9      	cbz	r1, 801a886 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801a84a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801a84e:	460b      	mov	r3, r1
 801a850:	f101 0708 	add.w	r7, r1, #8
 801a854:	4622      	mov	r2, r4
 801a856:	6818      	ldr	r0, [r3, #0]
 801a858:	6859      	ldr	r1, [r3, #4]
 801a85a:	4626      	mov	r6, r4
 801a85c:	c603      	stmia	r6!, {r0, r1}
 801a85e:	3308      	adds	r3, #8
 801a860:	42bb      	cmp	r3, r7
 801a862:	4634      	mov	r4, r6
 801a864:	d1f7      	bne.n	801a856 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801a866:	6818      	ldr	r0, [r3, #0]
 801a868:	6030      	str	r0, [r6, #0]
 801a86a:	889b      	ldrh	r3, [r3, #4]
 801a86c:	80b3      	strh	r3, [r6, #4]
 801a86e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801a872:	015b      	lsls	r3, r3, #5
 801a874:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801a878:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 801a87c:	430b      	orrs	r3, r1
 801a87e:	425b      	negs	r3, r3
 801a880:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 801a884:	4610      	mov	r0, r2
 801a886:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a888 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801a888:	b538      	push	{r3, r4, r5, lr}
 801a88a:	460c      	mov	r4, r1
 801a88c:	6811      	ldr	r1, [r2, #0]
 801a88e:	4610      	mov	r0, r2
 801a890:	68cd      	ldr	r5, [r1, #12]
 801a892:	4619      	mov	r1, r3
 801a894:	47a8      	blx	r5
 801a896:	2800      	cmp	r0, #0
 801a898:	bf08      	it	eq
 801a89a:	4620      	moveq	r0, r4
 801a89c:	bd38      	pop	{r3, r4, r5, pc}
	...

0801a8a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801a8a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a8a2:	4604      	mov	r4, r0
 801a8a4:	4615      	mov	r5, r2
 801a8a6:	4608      	mov	r0, r1
 801a8a8:	b93a      	cbnz	r2, 801a8ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801a8aa:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801a8ae:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801a8b2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801a8b6:	4628      	mov	r0, r5
 801a8b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a8ba:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801a8be:	8893      	ldrh	r3, [r2, #4]
 801a8c0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801a8c4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801a8c8:	79ee      	ldrb	r6, [r5, #7]
 801a8ca:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801a8ce:	4316      	orrs	r6, r2
 801a8d0:	19da      	adds	r2, r3, r7
 801a8d2:	b291      	uxth	r1, r2
 801a8d4:	291d      	cmp	r1, #29
 801a8d6:	b2b7      	uxth	r7, r6
 801a8d8:	d87a      	bhi.n	801a9d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8da:	2201      	movs	r2, #1
 801a8dc:	408a      	lsls	r2, r1
 801a8de:	4975      	ldr	r1, [pc, #468]	; (801aab4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801a8e0:	420a      	tst	r2, r1
 801a8e2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801a8e6:	d12d      	bne.n	801a944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801a8e8:	f412 7f60 	tst.w	r2, #896	; 0x380
 801a8ec:	d070      	beq.n	801a9d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801a8ee:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801a8f2:	462b      	mov	r3, r5
 801a8f4:	f105 0e08 	add.w	lr, r5, #8
 801a8f8:	4615      	mov	r5, r2
 801a8fa:	6818      	ldr	r0, [r3, #0]
 801a8fc:	6859      	ldr	r1, [r3, #4]
 801a8fe:	4694      	mov	ip, r2
 801a900:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801a904:	3308      	adds	r3, #8
 801a906:	4573      	cmp	r3, lr
 801a908:	4662      	mov	r2, ip
 801a90a:	d1f6      	bne.n	801a8fa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801a90c:	6818      	ldr	r0, [r3, #0]
 801a90e:	f8cc 0000 	str.w	r0, [ip]
 801a912:	889b      	ldrh	r3, [r3, #4]
 801a914:	f8ac 3004 	strh.w	r3, [ip, #4]
 801a918:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801a91c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801a920:	b2b3      	uxth	r3, r6
 801a922:	1aca      	subs	r2, r1, r3
 801a924:	b292      	uxth	r2, r2
 801a926:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801a92a:	10d2      	asrs	r2, r2, #3
 801a92c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801a930:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801a934:	4302      	orrs	r2, r0
 801a936:	1bcf      	subs	r7, r1, r7
 801a938:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801a93c:	1afb      	subs	r3, r7, r3
 801a93e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801a942:	e7b8      	b.n	801a8b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a944:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801a946:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a94a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801a94c:	f640 6333 	movw	r3, #3635	; 0xe33
 801a950:	4299      	cmp	r1, r3
 801a952:	d110      	bne.n	801a976 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 801a954:	6803      	ldr	r3, [r0, #0]
 801a956:	68db      	ldr	r3, [r3, #12]
 801a958:	4798      	blx	r3
 801a95a:	7b41      	ldrb	r1, [r0, #13]
 801a95c:	00cb      	lsls	r3, r1, #3
 801a95e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a962:	7a03      	ldrb	r3, [r0, #8]
 801a964:	0648      	lsls	r0, r1, #25
 801a966:	ea43 0302 	orr.w	r3, r3, r2
 801a96a:	bf44      	itt	mi
 801a96c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801a970:	b21b      	sxthmi	r3, r3
 801a972:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a976:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 801a97a:	443b      	add	r3, r7
 801a97c:	4433      	add	r3, r6
 801a97e:	b29b      	uxth	r3, r3
 801a980:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 801a984:	462a      	mov	r2, r5
 801a986:	f105 0c08 	add.w	ip, r5, #8
 801a98a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801a98e:	4635      	mov	r5, r6
 801a990:	6810      	ldr	r0, [r2, #0]
 801a992:	6851      	ldr	r1, [r2, #4]
 801a994:	4637      	mov	r7, r6
 801a996:	c703      	stmia	r7!, {r0, r1}
 801a998:	3208      	adds	r2, #8
 801a99a:	4562      	cmp	r2, ip
 801a99c:	463e      	mov	r6, r7
 801a99e:	d1f7      	bne.n	801a990 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801a9a0:	6810      	ldr	r0, [r2, #0]
 801a9a2:	6038      	str	r0, [r7, #0]
 801a9a4:	8892      	ldrh	r2, [r2, #4]
 801a9a6:	80ba      	strh	r2, [r7, #4]
 801a9a8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801a9ac:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801a9b0:	10db      	asrs	r3, r3, #3
 801a9b2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801a9b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801a9ba:	4313      	orrs	r3, r2
 801a9bc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801a9c0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 801a9c4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801a9c8:	1a9b      	subs	r3, r3, r2
 801a9ca:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801a9ce:	e772      	b.n	801a8b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801a9d0:	f023 0204 	bic.w	r2, r3, #4
 801a9d4:	f640 611b 	movw	r1, #3611	; 0xe1b
 801a9d8:	428a      	cmp	r2, r1
 801a9da:	d003      	beq.n	801a9e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801a9dc:	f640 621d 	movw	r2, #3613	; 0xe1d
 801a9e0:	4293      	cmp	r3, r2
 801a9e2:	d120      	bne.n	801aa26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 801a9e4:	3b01      	subs	r3, #1
 801a9e6:	4602      	mov	r2, r0
 801a9e8:	b29b      	uxth	r3, r3
 801a9ea:	4629      	mov	r1, r5
 801a9ec:	4620      	mov	r0, r4
 801a9ee:	f7ff ff4b 	bl	801a888 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801a9f2:	7b41      	ldrb	r1, [r0, #13]
 801a9f4:	00cb      	lsls	r3, r1, #3
 801a9f6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a9fa:	7a03      	ldrb	r3, [r0, #8]
 801a9fc:	0649      	lsls	r1, r1, #25
 801a9fe:	ea43 0302 	orr.w	r3, r3, r2
 801aa02:	bf44      	itt	mi
 801aa04:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aa08:	b21b      	sxthmi	r3, r3
 801aa0a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801aa0e:	7b6b      	ldrb	r3, [r5, #13]
 801aa10:	7aaa      	ldrb	r2, [r5, #10]
 801aa12:	005b      	lsls	r3, r3, #1
 801aa14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aa18:	4313      	orrs	r3, r2
 801aa1a:	115a      	asrs	r2, r3, #5
 801aa1c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801aa20:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aa24:	e036      	b.n	801aa94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801aa26:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801aa2a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801aa2e:	7a2a      	ldrb	r2, [r5, #8]
 801aa30:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801aa34:	ea42 0201 	orr.w	r2, r2, r1
 801aa38:	bf1c      	itt	ne
 801aa3a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801aa3e:	b212      	sxthne	r2, r2
 801aa40:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801aa44:	f640 6109 	movw	r1, #3593	; 0xe09
 801aa48:	f023 0210 	bic.w	r2, r3, #16
 801aa4c:	428a      	cmp	r2, r1
 801aa4e:	d003      	beq.n	801aa58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801aa50:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa54:	4293      	cmp	r3, r2
 801aa56:	d12a      	bne.n	801aaae <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 801aa58:	7b6e      	ldrb	r6, [r5, #13]
 801aa5a:	0076      	lsls	r6, r6, #1
 801aa5c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801aa60:	7aae      	ldrb	r6, [r5, #10]
 801aa62:	4316      	orrs	r6, r2
 801aa64:	f640 6213 	movw	r2, #3603	; 0xe13
 801aa68:	4293      	cmp	r3, r2
 801aa6a:	bf18      	it	ne
 801aa6c:	f103 33ff 	addne.w	r3, r3, #4294967295
 801aa70:	4602      	mov	r2, r0
 801aa72:	bf14      	ite	ne
 801aa74:	b29b      	uxthne	r3, r3
 801aa76:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801aa7a:	4629      	mov	r1, r5
 801aa7c:	4620      	mov	r0, r4
 801aa7e:	f7ff ff03 	bl	801a888 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801aa82:	7b43      	ldrb	r3, [r0, #13]
 801aa84:	7a82      	ldrb	r2, [r0, #10]
 801aa86:	005b      	lsls	r3, r3, #1
 801aa88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801aa8c:	4313      	orrs	r3, r2
 801aa8e:	1af6      	subs	r6, r6, r3
 801aa90:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 801aa94:	7b69      	ldrb	r1, [r5, #13]
 801aa96:	00cb      	lsls	r3, r1, #3
 801aa98:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801aa9c:	7a2b      	ldrb	r3, [r5, #8]
 801aa9e:	4313      	orrs	r3, r2
 801aaa0:	064a      	lsls	r2, r1, #25
 801aaa2:	bf44      	itt	mi
 801aaa4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aaa8:	b21b      	sxthmi	r3, r3
 801aaaa:	1bdb      	subs	r3, r3, r7
 801aaac:	e747      	b.n	801a93e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801aaae:	2300      	movs	r3, #0
 801aab0:	e7b6      	b.n	801aa20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801aab2:	bf00      	nop
 801aab4:	3fc00079 	.word	0x3fc00079

0801aab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801aab8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aabc:	4604      	mov	r4, r0
 801aabe:	b942      	cbnz	r2, 801aad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801aac0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801aac4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801aac8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 801aacc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801aad0:	e047      	b.n	801ab62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801aad2:	7b51      	ldrb	r1, [r2, #13]
 801aad4:	8893      	ldrh	r3, [r2, #4]
 801aad6:	010d      	lsls	r5, r1, #4
 801aad8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801aadc:	79d5      	ldrb	r5, [r2, #7]
 801aade:	4305      	orrs	r5, r0
 801aae0:	2d04      	cmp	r5, #4
 801aae2:	bfcc      	ite	gt
 801aae4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801aae8:	f04f 0e01 	movle.w	lr, #1
 801aaec:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801aaf0:	f200 80ab 	bhi.w	801ac4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 801aaf4:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801aaf8:	4283      	cmp	r3, r0
 801aafa:	d216      	bcs.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aafc:	f240 605b 	movw	r0, #1627	; 0x65b
 801ab00:	4283      	cmp	r3, r0
 801ab02:	d859      	bhi.n	801abb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 801ab04:	f240 6057 	movw	r0, #1623	; 0x657
 801ab08:	4283      	cmp	r3, r0
 801ab0a:	d20e      	bcs.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab0c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801ab10:	d24a      	bcs.n	801aba8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801ab12:	f240 604e 	movw	r0, #1614	; 0x64e
 801ab16:	4283      	cmp	r3, r0
 801ab18:	d207      	bcs.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab1a:	f240 601a 	movw	r0, #1562	; 0x61a
 801ab1e:	4283      	cmp	r3, r0
 801ab20:	d02a      	beq.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ab22:	d821      	bhi.n	801ab68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 801ab24:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801ab28:	d35b      	bcc.n	801abe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab2a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801ab2e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab32:	f040 80d0 	bne.w	801acd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab36:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801ab3a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab3e:	f040 80ca 	bne.w	801acd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801ab42:	00cb      	lsls	r3, r1, #3
 801ab44:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ab48:	7a13      	ldrb	r3, [r2, #8]
 801ab4a:	0649      	lsls	r1, r1, #25
 801ab4c:	ea43 0300 	orr.w	r3, r3, r0
 801ab50:	bf44      	itt	mi
 801ab52:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ab56:	b21b      	sxthmi	r3, r3
 801ab58:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ab5c:	1b5d      	subs	r5, r3, r5
 801ab5e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ab62:	4610      	mov	r0, r2
 801ab64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ab68:	f240 604b 	movw	r0, #1611	; 0x64b
 801ab6c:	4283      	cmp	r3, r0
 801ab6e:	d338      	bcc.n	801abe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ab70:	f240 604c 	movw	r0, #1612	; 0x64c
 801ab74:	4283      	cmp	r3, r0
 801ab76:	d9d8      	bls.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ab78:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801ab7c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801ab80:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ab84:	f040 80f2 	bne.w	801ad6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ab88:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ab8c:	f040 80ee 	bne.w	801ad6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801ab90:	00cb      	lsls	r3, r1, #3
 801ab92:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801ab96:	7a13      	ldrb	r3, [r2, #8]
 801ab98:	064e      	lsls	r6, r1, #25
 801ab9a:	ea43 0300 	orr.w	r3, r3, r0
 801ab9e:	bf44      	itt	mi
 801aba0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801aba4:	b21b      	sxthmi	r3, r3
 801aba6:	e7d9      	b.n	801ab5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801aba8:	f240 6054 	movw	r0, #1620	; 0x654
 801abac:	4283      	cmp	r3, r0
 801abae:	d8e3      	bhi.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abb0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801abb4:	d9e0      	bls.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abb6:	e7b8      	b.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abb8:	f240 6074 	movw	r0, #1652	; 0x674
 801abbc:	4283      	cmp	r3, r0
 801abbe:	d0b4      	beq.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abc0:	d82d      	bhi.n	801ac1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801abc2:	f240 605e 	movw	r0, #1630	; 0x65e
 801abc6:	4283      	cmp	r3, r0
 801abc8:	d804      	bhi.n	801abd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801abca:	f240 605d 	movw	r0, #1629	; 0x65d
 801abce:	4283      	cmp	r3, r0
 801abd0:	d3d2      	bcc.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abd2:	e7aa      	b.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abd4:	f240 605f 	movw	r0, #1631	; 0x65f
 801abd8:	4283      	cmp	r3, r0
 801abda:	d0cd      	beq.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801abdc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801abe0:	d0a3      	beq.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801abe2:	00cb      	lsls	r3, r1, #3
 801abe4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801abe8:	7a13      	ldrb	r3, [r2, #8]
 801abea:	0649      	lsls	r1, r1, #25
 801abec:	ea43 0300 	orr.w	r3, r3, r0
 801abf0:	bf44      	itt	mi
 801abf2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801abf6:	b21b      	sxthmi	r3, r3
 801abf8:	1b5d      	subs	r5, r3, r5
 801abfa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801abfe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801ac02:	7b53      	ldrb	r3, [r2, #13]
 801ac04:	015b      	lsls	r3, r3, #5
 801ac06:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801ac0a:	7993      	ldrb	r3, [r2, #6]
 801ac0c:	430b      	orrs	r3, r1
 801ac0e:	005b      	lsls	r3, r3, #1
 801ac10:	2105      	movs	r1, #5
 801ac12:	fb93 f3f1 	sdiv	r3, r3, r1
 801ac16:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801ac1a:	440b      	add	r3, r1
 801ac1c:	e756      	b.n	801aacc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801ac1e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801ac22:	4283      	cmp	r3, r0
 801ac24:	d809      	bhi.n	801ac3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801ac26:	f240 60df 	movw	r0, #1759	; 0x6df
 801ac2a:	4283      	cmp	r3, r0
 801ac2c:	f4bf af7d 	bcs.w	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac30:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801ac34:	2b05      	cmp	r3, #5
 801ac36:	d8d4      	bhi.n	801abe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac38:	e777      	b.n	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac3a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801ac3e:	4283      	cmp	r3, r0
 801ac40:	d09a      	beq.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac42:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801ac46:	4283      	cmp	r3, r0
 801ac48:	e7ca      	b.n	801abe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801ac4a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801ac4e:	d22b      	bcs.n	801aca8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801ac50:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801ac54:	4283      	cmp	r3, r0
 801ac56:	d28f      	bcs.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac58:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801ac5c:	4283      	cmp	r3, r0
 801ac5e:	d816      	bhi.n	801ac8e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801ac60:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801ac64:	4283      	cmp	r3, r0
 801ac66:	f4bf af60 	bcs.w	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac6a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801ac6e:	4283      	cmp	r3, r0
 801ac70:	d80a      	bhi.n	801ac88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801ac72:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801ac76:	4283      	cmp	r3, r0
 801ac78:	f4bf af57 	bcs.w	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801ac7c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801ac80:	4283      	cmp	r3, r0
 801ac82:	f43f af79 	beq.w	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801ac86:	e7ac      	b.n	801abe2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801ac88:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801ac8c:	e7f8      	b.n	801ac80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801ac8e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801ac92:	4283      	cmp	r3, r0
 801ac94:	d802      	bhi.n	801ac9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801ac96:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801ac9a:	e798      	b.n	801abce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801ac9c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801aca0:	4283      	cmp	r3, r0
 801aca2:	f47f af42 	bne.w	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801aca6:	e767      	b.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801aca8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801acac:	4283      	cmp	r3, r0
 801acae:	f43f af63 	beq.w	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acb2:	d802      	bhi.n	801acba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 801acb4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801acb8:	e7f2      	b.n	801aca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801acba:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801acbe:	4283      	cmp	r3, r0
 801acc0:	d805      	bhi.n	801acce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801acc2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801acc6:	4283      	cmp	r3, r0
 801acc8:	f4ff af2f 	bcc.w	801ab2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801accc:	e754      	b.n	801ab78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801acce:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801acd2:	4283      	cmp	r3, r0
 801acd4:	e7af      	b.n	801ac36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801acd6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801acda:	4617      	mov	r7, r2
 801acdc:	f102 0808 	add.w	r8, r2, #8
 801ace0:	4666      	mov	r6, ip
 801ace2:	6838      	ldr	r0, [r7, #0]
 801ace4:	6879      	ldr	r1, [r7, #4]
 801ace6:	46e6      	mov	lr, ip
 801ace8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801acec:	3708      	adds	r7, #8
 801acee:	4547      	cmp	r7, r8
 801acf0:	46f4      	mov	ip, lr
 801acf2:	d1f6      	bne.n	801ace2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 801acf4:	6838      	ldr	r0, [r7, #0]
 801acf6:	f8ce 0000 	str.w	r0, [lr]
 801acfa:	88b9      	ldrh	r1, [r7, #4]
 801acfc:	f8ae 1004 	strh.w	r1, [lr, #4]
 801ad00:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ad04:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ad08:	d009      	beq.n	801ad1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801ad0a:	7b51      	ldrb	r1, [r2, #13]
 801ad0c:	7992      	ldrb	r2, [r2, #6]
 801ad0e:	0149      	lsls	r1, r1, #5
 801ad10:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801ad14:	4311      	orrs	r1, r2
 801ad16:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801ad1a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801ad1e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801ad22:	b2ad      	uxth	r5, r5
 801ad24:	d00d      	beq.n	801ad42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801ad26:	442b      	add	r3, r5
 801ad28:	b29b      	uxth	r3, r3
 801ad2a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801ad2e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801ad32:	10db      	asrs	r3, r3, #3
 801ad34:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801ad38:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801ad3c:	4313      	orrs	r3, r2
 801ad3e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801ad42:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801ad46:	00cb      	lsls	r3, r1, #3
 801ad48:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ad4c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ad50:	064f      	lsls	r7, r1, #25
 801ad52:	ea43 0302 	orr.w	r3, r3, r2
 801ad56:	bf44      	itt	mi
 801ad58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801ad5c:	b21b      	sxthmi	r3, r3
 801ad5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801ad62:	1b5b      	subs	r3, r3, r5
 801ad64:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801ad68:	4632      	mov	r2, r6
 801ad6a:	e6fa      	b.n	801ab62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801ad6c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801ad70:	4617      	mov	r7, r2
 801ad72:	f102 0908 	add.w	r9, r2, #8
 801ad76:	4666      	mov	r6, ip
 801ad78:	6838      	ldr	r0, [r7, #0]
 801ad7a:	6879      	ldr	r1, [r7, #4]
 801ad7c:	46e0      	mov	r8, ip
 801ad7e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801ad82:	3708      	adds	r7, #8
 801ad84:	454f      	cmp	r7, r9
 801ad86:	46c4      	mov	ip, r8
 801ad88:	d1f6      	bne.n	801ad78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801ad8a:	6838      	ldr	r0, [r7, #0]
 801ad8c:	f8c8 0000 	str.w	r0, [r8]
 801ad90:	88b9      	ldrh	r1, [r7, #4]
 801ad92:	f8a8 1004 	strh.w	r1, [r8, #4]
 801ad96:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801ad9a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801ad9e:	d009      	beq.n	801adb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801ada0:	7b51      	ldrb	r1, [r2, #13]
 801ada2:	7992      	ldrb	r2, [r2, #6]
 801ada4:	0149      	lsls	r1, r1, #5
 801ada6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801adaa:	4311      	orrs	r1, r2
 801adac:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801adb0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801adb4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801adb8:	d00e      	beq.n	801add8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801adba:	eba3 030e 	sub.w	r3, r3, lr
 801adbe:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801adc2:	b29b      	uxth	r3, r3
 801adc4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801adc8:	10db      	asrs	r3, r3, #3
 801adca:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801adce:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801add2:	4313      	orrs	r3, r2
 801add4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801add8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801addc:	00cb      	lsls	r3, r1, #3
 801adde:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801ade2:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801ade6:	0648      	lsls	r0, r1, #25
 801ade8:	ea43 0302 	orr.w	r3, r3, r2
 801adec:	bf44      	itt	mi
 801adee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801adf2:	b21b      	sxthmi	r3, r3
 801adf4:	1b5d      	subs	r5, r3, r5
 801adf6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801adfa:	e7b5      	b.n	801ad68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801adfc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801adfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ae00:	461e      	mov	r6, r3
 801ae02:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ae04:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ae08:	4604      	mov	r4, r0
 801ae0a:	4617      	mov	r7, r2
 801ae0c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801ae10:	f7ef fba8 	bl	800a564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ae14:	4605      	mov	r5, r0
 801ae16:	b918      	cbnz	r0, 801ae20 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801ae18:	6030      	str	r0, [r6, #0]
 801ae1a:	4628      	mov	r0, r5
 801ae1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ae20:	683b      	ldr	r3, [r7, #0]
 801ae22:	4601      	mov	r1, r0
 801ae24:	68db      	ldr	r3, [r3, #12]
 801ae26:	4638      	mov	r0, r7
 801ae28:	4798      	blx	r3
 801ae2a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801ae2e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801ae32:	4602      	mov	r2, r0
 801ae34:	6030      	str	r0, [r6, #0]
 801ae36:	d213      	bcs.n	801ae60 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801ae38:	4643      	mov	r3, r8
 801ae3a:	4639      	mov	r1, r7
 801ae3c:	4620      	mov	r0, r4
 801ae3e:	f7ff fe3b 	bl	801aab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801ae42:	6030      	str	r0, [r6, #0]
 801ae44:	6833      	ldr	r3, [r6, #0]
 801ae46:	b143      	cbz	r3, 801ae5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801ae48:	7b5a      	ldrb	r2, [r3, #13]
 801ae4a:	7a9b      	ldrb	r3, [r3, #10]
 801ae4c:	0052      	lsls	r2, r2, #1
 801ae4e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801ae52:	4313      	orrs	r3, r2
 801ae54:	bf0c      	ite	eq
 801ae56:	2301      	moveq	r3, #1
 801ae58:	2300      	movne	r3, #0
 801ae5a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801ae5e:	e7dc      	b.n	801ae1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801ae60:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801ae64:	b29b      	uxth	r3, r3
 801ae66:	2b7f      	cmp	r3, #127	; 0x7f
 801ae68:	d804      	bhi.n	801ae74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801ae6a:	4639      	mov	r1, r7
 801ae6c:	4620      	mov	r0, r4
 801ae6e:	f7ff fd17 	bl	801a8a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801ae72:	e7e6      	b.n	801ae42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801ae74:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801ae78:	2b00      	cmp	r3, #0
 801ae7a:	d0e3      	beq.n	801ae44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae7c:	f640 1302 	movw	r3, #2306	; 0x902
 801ae80:	429d      	cmp	r5, r3
 801ae82:	d1df      	bne.n	801ae44 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801ae84:	4601      	mov	r1, r0
 801ae86:	4620      	mov	r0, r4
 801ae88:	f7ff fcdb 	bl	801a842 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801ae8c:	e7d9      	b.n	801ae42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801ae8e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801ae8e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801ae92:	461e      	mov	r6, r3
 801ae94:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801ae96:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ae9a:	4604      	mov	r4, r0
 801ae9c:	4617      	mov	r7, r2
 801ae9e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801aea2:	f7ef fb5f 	bl	800a564 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801aea6:	4605      	mov	r5, r0
 801aea8:	b918      	cbnz	r0, 801aeb2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801aeaa:	6030      	str	r0, [r6, #0]
 801aeac:	4628      	mov	r0, r5
 801aeae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801aeb2:	683b      	ldr	r3, [r7, #0]
 801aeb4:	4601      	mov	r1, r0
 801aeb6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801aeba:	4638      	mov	r0, r7
 801aebc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801aec0:	47c8      	blx	r9
 801aec2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801aec6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801aeca:	4602      	mov	r2, r0
 801aecc:	6030      	str	r0, [r6, #0]
 801aece:	d213      	bcs.n	801aef8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801aed0:	4643      	mov	r3, r8
 801aed2:	4639      	mov	r1, r7
 801aed4:	4620      	mov	r0, r4
 801aed6:	f7ff fdef 	bl	801aab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801aeda:	6030      	str	r0, [r6, #0]
 801aedc:	6833      	ldr	r3, [r6, #0]
 801aede:	b143      	cbz	r3, 801aef2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801aee0:	7b5a      	ldrb	r2, [r3, #13]
 801aee2:	7a9b      	ldrb	r3, [r3, #10]
 801aee4:	0052      	lsls	r2, r2, #1
 801aee6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801aeea:	4313      	orrs	r3, r2
 801aeec:	bf0c      	ite	eq
 801aeee:	2301      	moveq	r3, #1
 801aef0:	2300      	movne	r3, #0
 801aef2:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801aef6:	e7d9      	b.n	801aeac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801aef8:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801aefc:	b29b      	uxth	r3, r3
 801aefe:	2b7f      	cmp	r3, #127	; 0x7f
 801af00:	d804      	bhi.n	801af0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801af02:	4639      	mov	r1, r7
 801af04:	4620      	mov	r0, r4
 801af06:	f7ff fccb 	bl	801a8a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801af0a:	e7e6      	b.n	801aeda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801af0c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801af10:	2b00      	cmp	r3, #0
 801af12:	d0e3      	beq.n	801aedc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801af14:	f640 1302 	movw	r3, #2306	; 0x902
 801af18:	429d      	cmp	r5, r3
 801af1a:	d1df      	bne.n	801aedc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801af1c:	4601      	mov	r1, r0
 801af1e:	4620      	mov	r0, r4
 801af20:	f7ff fc8f 	bl	801a842 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801af24:	e7d9      	b.n	801aeda <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801af26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801af26:	b510      	push	{r4, lr}
 801af28:	4604      	mov	r4, r0
 801af2a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801af2e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af30:	b1f1      	cbz	r1, 801af70 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801af32:	2b0a      	cmp	r3, #10
 801af34:	d02f      	beq.n	801af96 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af36:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801af38:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801af3c:	3901      	subs	r1, #1
 801af3e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801af40:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 801af44:	1c51      	adds	r1, r2, #1
 801af46:	b289      	uxth	r1, r1
 801af48:	2901      	cmp	r1, #1
 801af4a:	bf84      	itt	hi
 801af4c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801af50:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801af52:	f103 0201 	add.w	r2, r3, #1
 801af56:	8722      	strh	r2, [r4, #56]	; 0x38
 801af58:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af5a:	bf98      	it	ls
 801af5c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801af5e:	4413      	add	r3, r2
 801af60:	b29b      	uxth	r3, r3
 801af62:	2b09      	cmp	r3, #9
 801af64:	bf88      	it	hi
 801af66:	3b0a      	subhi	r3, #10
 801af68:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af6c:	8458      	strh	r0, [r3, #34]	; 0x22
 801af6e:	e7dc      	b.n	801af2a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801af70:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af72:	2b0a      	cmp	r3, #10
 801af74:	d00f      	beq.n	801af96 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801af76:	4620      	mov	r0, r4
 801af78:	f7ff fc11 	bl	801a79e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801af7c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801af7e:	1c5a      	adds	r2, r3, #1
 801af80:	8722      	strh	r2, [r4, #56]	; 0x38
 801af82:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801af84:	4413      	add	r3, r2
 801af86:	b29b      	uxth	r3, r3
 801af88:	2b09      	cmp	r3, #9
 801af8a:	bf88      	it	hi
 801af8c:	3b0a      	subhi	r3, #10
 801af8e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af92:	8458      	strh	r0, [r3, #34]	; 0x22
 801af94:	e7ec      	b.n	801af70 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801af96:	bd10      	pop	{r4, pc}

0801af98 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801af98:	b538      	push	{r3, r4, r5, lr}
 801af9a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801af9c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801afa0:	4604      	mov	r4, r0
 801afa2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 801afa4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801afa6:	3a01      	subs	r2, #1
 801afa8:	8702      	strh	r2, [r0, #56]	; 0x38
 801afaa:	1c5a      	adds	r2, r3, #1
 801afac:	b292      	uxth	r2, r2
 801afae:	2a09      	cmp	r2, #9
 801afb0:	bf86      	itte	hi
 801afb2:	3b09      	subhi	r3, #9
 801afb4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801afb6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801afb8:	f7ff ffb5 	bl	801af26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801afbc:	8c23      	ldrh	r3, [r4, #32]
 801afbe:	2b01      	cmp	r3, #1
 801afc0:	bf9c      	itt	ls
 801afc2:	3301      	addls	r3, #1
 801afc4:	8423      	strhls	r3, [r4, #32]
 801afc6:	8be3      	ldrh	r3, [r4, #30]
 801afc8:	b90b      	cbnz	r3, 801afce <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801afca:	2302      	movs	r3, #2
 801afcc:	83e3      	strh	r3, [r4, #30]
 801afce:	8be3      	ldrh	r3, [r4, #30]
 801afd0:	3b01      	subs	r3, #1
 801afd2:	b29b      	uxth	r3, r3
 801afd4:	83e3      	strh	r3, [r4, #30]
 801afd6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801afda:	4628      	mov	r0, r5
 801afdc:	8365      	strh	r5, [r4, #26]
 801afde:	bd38      	pop	{r3, r4, r5, pc}

0801afe0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801afe0:	428a      	cmp	r2, r1
 801afe2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801afe6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801afe8:	d931      	bls.n	801b04e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801afea:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801afec:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801aff0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 801aff4:	19ee      	adds	r6, r5, r7
 801aff6:	1a54      	subs	r4, r2, r1
 801aff8:	3e01      	subs	r6, #1
 801affa:	fa1f fe84 	uxth.w	lr, r4
 801affe:	b2b4      	uxth	r4, r6
 801b000:	eba4 090e 	sub.w	r9, r4, lr
 801b004:	fa1f f989 	uxth.w	r9, r9
 801b008:	2c09      	cmp	r4, #9
 801b00a:	4626      	mov	r6, r4
 801b00c:	bf88      	it	hi
 801b00e:	f1a4 060a 	subhi.w	r6, r4, #10
 801b012:	f1bc 0f00 	cmp.w	ip, #0
 801b016:	bf08      	it	eq
 801b018:	f04f 0c02 	moveq.w	ip, #2
 801b01c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b020:	f10c 3cff 	add.w	ip, ip, #4294967295
 801b024:	fa1f fc8c 	uxth.w	ip, ip
 801b028:	3c01      	subs	r4, #1
 801b02a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801b02e:	b2a4      	uxth	r4, r4
 801b030:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 801b034:	454c      	cmp	r4, r9
 801b036:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801b03a:	d1e5      	bne.n	801b008 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801b03c:	eba5 050e 	sub.w	r5, r5, lr
 801b040:	eb0e 0408 	add.w	r4, lr, r8
 801b044:	8705      	strh	r5, [r0, #56]	; 0x38
 801b046:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801b04a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801b04e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801b050:	1a64      	subs	r4, r4, r1
 801b052:	4439      	add	r1, r7
 801b054:	b289      	uxth	r1, r1
 801b056:	2909      	cmp	r1, #9
 801b058:	bf88      	it	hi
 801b05a:	390a      	subhi	r1, #10
 801b05c:	8704      	strh	r4, [r0, #56]	; 0x38
 801b05e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b060:	250a      	movs	r5, #10
 801b062:	b18a      	cbz	r2, 801b088 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 801b064:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801b066:	3a01      	subs	r2, #1
 801b068:	b292      	uxth	r2, r2
 801b06a:	3101      	adds	r1, #1
 801b06c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801b070:	8701      	strh	r1, [r0, #56]	; 0x38
 801b072:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b074:	b901      	cbnz	r1, 801b078 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801b076:	86c5      	strh	r5, [r0, #54]	; 0x36
 801b078:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801b07a:	3901      	subs	r1, #1
 801b07c:	b289      	uxth	r1, r1
 801b07e:	86c1      	strh	r1, [r0, #54]	; 0x36
 801b080:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801b084:	844c      	strh	r4, [r1, #34]	; 0x22
 801b086:	e7ec      	b.n	801b062 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801b088:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b08c:	f7ff bf4b 	b.w	801af26 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801b090 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801b090:	b570      	push	{r4, r5, r6, lr}
 801b092:	2500      	movs	r5, #0
 801b094:	4295      	cmp	r5, r2
 801b096:	d011      	beq.n	801b0bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801b098:	8bc4      	ldrh	r4, [r0, #30]
 801b09a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801b09e:	4414      	add	r4, r2
 801b0a0:	3c01      	subs	r4, #1
 801b0a2:	1b64      	subs	r4, r4, r5
 801b0a4:	b2a4      	uxth	r4, r4
 801b0a6:	2c01      	cmp	r4, #1
 801b0a8:	bf88      	it	hi
 801b0aa:	3c02      	subhi	r4, #2
 801b0ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0b0:	8b64      	ldrh	r4, [r4, #26]
 801b0b2:	42b4      	cmp	r4, r6
 801b0b4:	d117      	bne.n	801b0e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801b0b6:	3501      	adds	r5, #1
 801b0b8:	b2ad      	uxth	r5, r5
 801b0ba:	e7eb      	b.n	801b094 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801b0bc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b0c0:	2400      	movs	r4, #0
 801b0c2:	4413      	add	r3, r2
 801b0c4:	b2a2      	uxth	r2, r4
 801b0c6:	429a      	cmp	r2, r3
 801b0c8:	da0f      	bge.n	801b0ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801b0ca:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801b0cc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801b0d0:	4432      	add	r2, r6
 801b0d2:	b292      	uxth	r2, r2
 801b0d4:	2a09      	cmp	r2, #9
 801b0d6:	bf88      	it	hi
 801b0d8:	3a0a      	subhi	r2, #10
 801b0da:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b0de:	3401      	adds	r4, #1
 801b0e0:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801b0e2:	42aa      	cmp	r2, r5
 801b0e4:	d0ee      	beq.n	801b0c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801b0e6:	2000      	movs	r0, #0
 801b0e8:	bd70      	pop	{r4, r5, r6, pc}
 801b0ea:	2001      	movs	r0, #1
 801b0ec:	e7fc      	b.n	801b0e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801b0ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801b0ee:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0f2:	4605      	mov	r5, r0
 801b0f4:	4616      	mov	r6, r2
 801b0f6:	1c8c      	adds	r4, r1, #2
 801b0f8:	8809      	ldrh	r1, [r1, #0]
 801b0fa:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801b0fe:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801b102:	42b3      	cmp	r3, r6
 801b104:	d124      	bne.n	801b150 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801b106:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801b10a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801b10e:	f001 070f 	and.w	r7, r1, #15
 801b112:	f8cd 8000 	str.w	r8, [sp]
 801b116:	464b      	mov	r3, r9
 801b118:	4652      	mov	r2, sl
 801b11a:	4621      	mov	r1, r4
 801b11c:	4628      	mov	r0, r5
 801b11e:	f7ff ffb7 	bl	801b090 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801b122:	4683      	mov	fp, r0
 801b124:	b168      	cbz	r0, 801b142 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801b126:	eb0a 0109 	add.w	r1, sl, r9
 801b12a:	4441      	add	r1, r8
 801b12c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801b130:	463a      	mov	r2, r7
 801b132:	4649      	mov	r1, r9
 801b134:	4628      	mov	r0, r5
 801b136:	f7ff ff53 	bl	801afe0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801b13a:	4658      	mov	r0, fp
 801b13c:	b003      	add	sp, #12
 801b13e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b142:	eb07 010a 	add.w	r1, r7, sl
 801b146:	4449      	add	r1, r9
 801b148:	4441      	add	r1, r8
 801b14a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801b14e:	e7d2      	b.n	801b0f6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801b150:	f04f 0b00 	mov.w	fp, #0
 801b154:	e7f1      	b.n	801b13a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801b156 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801b156:	b570      	push	{r4, r5, r6, lr}
 801b158:	8810      	ldrh	r0, [r2, #0]
 801b15a:	4298      	cmp	r0, r3
 801b15c:	d817      	bhi.n	801b18e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b15e:	1e48      	subs	r0, r1, #1
 801b160:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801b164:	4298      	cmp	r0, r3
 801b166:	d312      	bcc.n	801b18e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b168:	2400      	movs	r4, #0
 801b16a:	428c      	cmp	r4, r1
 801b16c:	d20f      	bcs.n	801b18e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801b16e:	1860      	adds	r0, r4, r1
 801b170:	1040      	asrs	r0, r0, #1
 801b172:	0085      	lsls	r5, r0, #2
 801b174:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801b178:	42b3      	cmp	r3, r6
 801b17a:	d902      	bls.n	801b182 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801b17c:	3001      	adds	r0, #1
 801b17e:	b284      	uxth	r4, r0
 801b180:	e7f3      	b.n	801b16a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b182:	d201      	bcs.n	801b188 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801b184:	b281      	uxth	r1, r0
 801b186:	e7f0      	b.n	801b16a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801b188:	442a      	add	r2, r5
 801b18a:	8850      	ldrh	r0, [r2, #2]
 801b18c:	bd70      	pop	{r4, r5, r6, pc}
 801b18e:	2000      	movs	r0, #0
 801b190:	e7fc      	b.n	801b18c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801b192 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801b192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b196:	6c45      	ldr	r5, [r0, #68]	; 0x44
 801b198:	886f      	ldrh	r7, [r5, #2]
 801b19a:	4604      	mov	r4, r0
 801b19c:	087f      	lsrs	r7, r7, #1
 801b19e:	260b      	movs	r6, #11
 801b1a0:	3e01      	subs	r6, #1
 801b1a2:	d013      	beq.n	801b1cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b1a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801b1a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b1aa:	462a      	mov	r2, r5
 801b1ac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801b1b0:	4639      	mov	r1, r7
 801b1b2:	4643      	mov	r3, r8
 801b1b4:	4620      	mov	r0, r4
 801b1b6:	f7ff ffce 	bl	801b156 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801b1ba:	b138      	cbz	r0, 801b1cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801b1bc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801b1c0:	4642      	mov	r2, r8
 801b1c2:	4620      	mov	r0, r4
 801b1c4:	f7ff ff93 	bl	801b0ee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801b1c8:	2800      	cmp	r0, #0
 801b1ca:	d1e9      	bne.n	801b1a0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801b1cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b1d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801b1d0:	b570      	push	{r4, r5, r6, lr}
 801b1d2:	694a      	ldr	r2, [r1, #20]
 801b1d4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801b1d6:	684b      	ldr	r3, [r1, #4]
 801b1d8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801b1da:	1b54      	subs	r4, r2, r5
 801b1dc:	f000 8106 	beq.w	801b3ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801b1e0:	1b9b      	subs	r3, r3, r6
 801b1e2:	d003      	beq.n	801b1ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b1e4:	4363      	muls	r3, r4
 801b1e6:	2210      	movs	r2, #16
 801b1e8:	fb93 f3f2 	sdiv	r3, r3, r2
 801b1ec:	680c      	ldr	r4, [r1, #0]
 801b1ee:	698a      	ldr	r2, [r1, #24]
 801b1f0:	1b65      	subs	r5, r4, r5
 801b1f2:	f000 80fd 	beq.w	801b3f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801b1f6:	1b92      	subs	r2, r2, r6
 801b1f8:	d003      	beq.n	801b202 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b1fa:	436a      	muls	r2, r5
 801b1fc:	2410      	movs	r4, #16
 801b1fe:	fb92 f2f4 	sdiv	r2, r2, r4
 801b202:	1a9b      	subs	r3, r3, r2
 801b204:	ee07 3a90 	vmov	s15, r3
 801b208:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801b42c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801b20c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b210:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b214:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b218:	460a      	mov	r2, r1
 801b21a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801b21e:	4603      	mov	r3, r0
 801b220:	f100 040c 	add.w	r4, r0, #12
 801b224:	eeb1 6a43 	vneg.f32	s12, s6
 801b228:	edd2 7a02 	vldr	s15, [r2, #8]
 801b22c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801b230:	3214      	adds	r2, #20
 801b232:	ece3 6a01 	vstmia	r3!, {s13}
 801b236:	ed52 7a02 	vldr	s15, [r2, #-8]
 801b23a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b23e:	429c      	cmp	r4, r3
 801b240:	edc3 7a02 	vstr	s15, [r3, #8]
 801b244:	ed52 7a01 	vldr	s15, [r2, #-4]
 801b248:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b24c:	edc3 7a05 	vstr	s15, [r3, #20]
 801b250:	d1ea      	bne.n	801b228 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801b252:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b254:	698b      	ldr	r3, [r1, #24]
 801b256:	edd0 4a02 	vldr	s9, [r0, #8]
 801b25a:	edd0 3a00 	vldr	s7, [r0]
 801b25e:	edd0 6a01 	vldr	s13, [r0, #4]
 801b262:	ed90 5a05 	vldr	s10, [r0, #20]
 801b266:	ed90 2a03 	vldr	s4, [r0, #12]
 801b26a:	edd0 5a04 	vldr	s11, [r0, #16]
 801b26e:	ed90 1a07 	vldr	s2, [r0, #28]
 801b272:	edd0 2a06 	vldr	s5, [r0, #24]
 801b276:	1a9b      	subs	r3, r3, r2
 801b278:	ee07 3a90 	vmov	s15, r3
 801b27c:	684b      	ldr	r3, [r1, #4]
 801b27e:	1a9b      	subs	r3, r3, r2
 801b280:	ee07 3a10 	vmov	s14, r3
 801b284:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b288:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801b28c:	ee67 7a84 	vmul.f32	s15, s15, s8
 801b290:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801b294:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b298:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801b29c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801b2a4:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b2a8:	ee32 5a45 	vsub.f32	s10, s4, s10
 801b2ac:	ee67 7a83 	vmul.f32	s15, s15, s6
 801b2b0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801b2b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b2b6:	694a      	ldr	r2, [r1, #20]
 801b2b8:	1b13      	subs	r3, r2, r4
 801b2ba:	ee07 3a10 	vmov	s14, r3
 801b2be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2c2:	680b      	ldr	r3, [r1, #0]
 801b2c4:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2c8:	1b1b      	subs	r3, r3, r4
 801b2ca:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801b2ce:	ee07 3a10 	vmov	s14, r3
 801b2d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b2d6:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b2da:	eee6 4a87 	vfma.f32	s9, s13, s14
 801b2de:	ee64 4a86 	vmul.f32	s9, s9, s12
 801b2e2:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801b2e6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b2e8:	698b      	ldr	r3, [r1, #24]
 801b2ea:	1a9b      	subs	r3, r3, r2
 801b2ec:	ee06 3a90 	vmov	s13, r3
 801b2f0:	684b      	ldr	r3, [r1, #4]
 801b2f2:	1a9b      	subs	r3, r3, r2
 801b2f4:	ee07 3a10 	vmov	s14, r3
 801b2f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b2fc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b300:	ee66 6a84 	vmul.f32	s13, s13, s8
 801b304:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b308:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801b30c:	eee5 6a87 	vfma.f32	s13, s11, s14
 801b310:	ee66 6a83 	vmul.f32	s13, s13, s6
 801b314:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801b318:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b31a:	694a      	ldr	r2, [r1, #20]
 801b31c:	1b13      	subs	r3, r2, r4
 801b31e:	ee07 3a10 	vmov	s14, r3
 801b322:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b326:	680b      	ldr	r3, [r1, #0]
 801b328:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b32c:	1b1b      	subs	r3, r3, r4
 801b32e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801b332:	ee07 3a10 	vmov	s14, r3
 801b336:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b33a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b33e:	eea5 5a87 	vfma.f32	s10, s11, s14
 801b342:	edd0 5a08 	vldr	s11, [r0, #32]
 801b346:	ee25 5a06 	vmul.f32	s10, s10, s12
 801b34a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801b34e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801b352:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b354:	698b      	ldr	r3, [r1, #24]
 801b356:	1a9b      	subs	r3, r3, r2
 801b358:	ee07 3a10 	vmov	s14, r3
 801b35c:	684b      	ldr	r3, [r1, #4]
 801b35e:	1a9b      	subs	r3, r3, r2
 801b360:	ee01 3a90 	vmov	s3, r3
 801b364:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b368:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801b36c:	ee27 7a04 	vmul.f32	s14, s14, s8
 801b370:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801b374:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801b378:	ee61 1a84 	vmul.f32	s3, s3, s8
 801b37c:	eea1 7a21 	vfma.f32	s14, s2, s3
 801b380:	ee27 7a03 	vmul.f32	s14, s14, s6
 801b384:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b388:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801b38a:	694a      	ldr	r2, [r1, #20]
 801b38c:	1b13      	subs	r3, r2, r4
 801b38e:	ee03 3a10 	vmov	s6, r3
 801b392:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b396:	680b      	ldr	r3, [r1, #0]
 801b398:	ee23 3a04 	vmul.f32	s6, s6, s8
 801b39c:	1b1b      	subs	r3, r3, r4
 801b39e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801b3a2:	ee03 3a10 	vmov	s6, r3
 801b3a6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801b3aa:	ee23 4a04 	vmul.f32	s8, s6, s8
 801b3ae:	eee1 5a04 	vfma.f32	s11, s2, s8
 801b3b2:	ee25 6a86 	vmul.f32	s12, s11, s12
 801b3b6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801b3ba:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801b3be:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801b3c2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801b3c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3ca:	dd13      	ble.n	801b3f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801b3cc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3d0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801b3d4:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b3d6:	eee3 7a87 	vfma.f32	s15, s7, s14
 801b3da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801b3de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b3e2:	dd15      	ble.n	801b410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801b3e4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801b3e8:	6403      	str	r3, [r0, #64]	; 0x40
 801b3ea:	bd70      	pop	{r4, r5, r6, pc}
 801b3ec:	4623      	mov	r3, r4
 801b3ee:	e6fd      	b.n	801b1ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801b3f0:	462a      	mov	r2, r5
 801b3f2:	e706      	b.n	801b202 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801b3f4:	d502      	bpl.n	801b3fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801b3f6:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b3fa:	e7e9      	b.n	801b3d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801b3fc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801b400:	eea3 2a85 	vfma.f32	s4, s7, s10
 801b404:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801b408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b40c:	dade      	bge.n	801b3cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801b40e:	e7f2      	b.n	801b3f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801b410:	d502      	bpl.n	801b418 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801b412:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801b416:	e7e7      	b.n	801b3e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801b418:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801b41c:	eee3 4a86 	vfma.f32	s9, s7, s12
 801b420:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801b424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b428:	dadc      	bge.n	801b3e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801b42a:	e7f2      	b.n	801b412 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801b42c:	3d800000 	.word	0x3d800000

0801b430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801b430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b434:	2714      	movs	r7, #20
 801b436:	435f      	muls	r7, r3
 801b438:	eb02 0c07 	add.w	ip, r2, r7
 801b43c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801b440:	f115 0e0f 	adds.w	lr, r5, #15
 801b444:	f100 80a2 	bmi.w	801b58c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801b448:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801b44c:	9c08      	ldr	r4, [sp, #32]
 801b44e:	f8c0 e014 	str.w	lr, [r0, #20]
 801b452:	2614      	movs	r6, #20
 801b454:	4366      	muls	r6, r4
 801b456:	eb02 0806 	add.w	r8, r2, r6
 801b45a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b45e:	f115 040f 	adds.w	r4, r5, #15
 801b462:	f100 809f 	bmi.w	801b5a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801b466:	1124      	asrs	r4, r4, #4
 801b468:	eba4 040e 	sub.w	r4, r4, lr
 801b46c:	6184      	str	r4, [r0, #24]
 801b46e:	2c00      	cmp	r4, #0
 801b470:	f000 808a 	beq.w	801b588 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801b474:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801b478:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801b47c:	5995      	ldr	r5, [r2, r6]
 801b47e:	eba4 0809 	sub.w	r8, r4, r9
 801b482:	59d4      	ldr	r4, [r2, r7]
 801b484:	eba5 0a04 	sub.w	sl, r5, r4
 801b488:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801b48c:	fb0e fe05 	mul.w	lr, lr, r5
 801b490:	fb0a ee19 	mls	lr, sl, r9, lr
 801b494:	fb08 e404 	mla	r4, r8, r4, lr
 801b498:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801b49c:	3c01      	subs	r4, #1
 801b49e:	19a4      	adds	r4, r4, r6
 801b4a0:	f100 808c 	bmi.w	801b5bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 801b4a4:	fb94 fef6 	sdiv	lr, r4, r6
 801b4a8:	f8c0 e000 	str.w	lr, [r0]
 801b4ac:	fb06 441e 	mls	r4, r6, lr, r4
 801b4b0:	6104      	str	r4, [r0, #16]
 801b4b2:	2d00      	cmp	r5, #0
 801b4b4:	f2c0 8095 	blt.w	801b5e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801b4b8:	fb95 f4f6 	sdiv	r4, r5, r6
 801b4bc:	6044      	str	r4, [r0, #4]
 801b4be:	fb06 5514 	mls	r5, r6, r4, r5
 801b4c2:	6085      	str	r5, [r0, #8]
 801b4c4:	60c6      	str	r6, [r0, #12]
 801b4c6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801b4ca:	6945      	ldr	r5, [r0, #20]
 801b4cc:	59d2      	ldr	r2, [r2, r7]
 801b4ce:	eddf 6a4d 	vldr	s13, [pc, #308]	; 801b604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801b4d2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b4d6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801b4da:	ee07 4a10 	vmov	s14, r4
 801b4de:	6804      	ldr	r4, [r0, #0]
 801b4e0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 801b4e4:	ee07 2a90 	vmov	s15, r2
 801b4e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801b4ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b4f0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b4f4:	ee27 7a26 	vmul.f32	s14, s14, s13
 801b4f8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801b4fc:	edd3 6a00 	vldr	s13, [r3]
 801b500:	eee6 6a07 	vfma.f32	s13, s12, s14
 801b504:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801b508:	eee6 6a27 	vfma.f32	s13, s12, s15
 801b50c:	edc0 6a07 	vstr	s13, [r0, #28]
 801b510:	edd0 6a01 	vldr	s13, [r0, #4]
 801b514:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801b518:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801b51c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801b520:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b524:	ed80 6a08 	vstr	s12, [r0, #32]
 801b528:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801b52a:	6242      	str	r2, [r0, #36]	; 0x24
 801b52c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801b530:	ed93 6a03 	vldr	s12, [r3, #12]
 801b534:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b538:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b53c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801b540:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 801b544:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801b548:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801b54c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801b550:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 801b554:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801b556:	6302      	str	r2, [r0, #48]	; 0x30
 801b558:	ed93 6a06 	vldr	s12, [r3, #24]
 801b55c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801b560:	eea5 6a87 	vfma.f32	s12, s11, s14
 801b564:	eeb0 7a46 	vmov.f32	s14, s12
 801b568:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801b56c:	eea6 7a27 	vfma.f32	s14, s12, s15
 801b570:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801b574:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801b578:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801b57c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b580:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 801b584:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 801b586:	63c3      	str	r3, [r0, #60]	; 0x3c
 801b588:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b58c:	f1c5 0501 	rsb	r5, r5, #1
 801b590:	f015 050f 	ands.w	r5, r5, #15
 801b594:	bf18      	it	ne
 801b596:	2501      	movne	r5, #1
 801b598:	2410      	movs	r4, #16
 801b59a:	fb9e fef4 	sdiv	lr, lr, r4
 801b59e:	ebae 0e05 	sub.w	lr, lr, r5
 801b5a2:	e753      	b.n	801b44c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 801b5a4:	f1c5 0501 	rsb	r5, r5, #1
 801b5a8:	f015 050f 	ands.w	r5, r5, #15
 801b5ac:	bf18      	it	ne
 801b5ae:	2501      	movne	r5, #1
 801b5b0:	f04f 0910 	mov.w	r9, #16
 801b5b4:	fb94 f4f9 	sdiv	r4, r4, r9
 801b5b8:	1b64      	subs	r4, r4, r5
 801b5ba:	e755      	b.n	801b468 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801b5bc:	4264      	negs	r4, r4
 801b5be:	fb94 fef6 	sdiv	lr, r4, r6
 801b5c2:	f1ce 0800 	rsb	r8, lr, #0
 801b5c6:	fb06 441e 	mls	r4, r6, lr, r4
 801b5ca:	f8c0 8000 	str.w	r8, [r0]
 801b5ce:	6104      	str	r4, [r0, #16]
 801b5d0:	2c00      	cmp	r4, #0
 801b5d2:	f43f af6e 	beq.w	801b4b2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 801b5d6:	ea6f 0e0e 	mvn.w	lr, lr
 801b5da:	f8c0 e000 	str.w	lr, [r0]
 801b5de:	1b34      	subs	r4, r6, r4
 801b5e0:	e766      	b.n	801b4b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801b5e2:	426d      	negs	r5, r5
 801b5e4:	fb95 f4f6 	sdiv	r4, r5, r6
 801b5e8:	f1c4 0e00 	rsb	lr, r4, #0
 801b5ec:	fb06 5514 	mls	r5, r6, r4, r5
 801b5f0:	f8c0 e004 	str.w	lr, [r0, #4]
 801b5f4:	6085      	str	r5, [r0, #8]
 801b5f6:	2d00      	cmp	r5, #0
 801b5f8:	f43f af64 	beq.w	801b4c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801b5fc:	43e4      	mvns	r4, r4
 801b5fe:	6044      	str	r4, [r0, #4]
 801b600:	1b75      	subs	r5, r6, r5
 801b602:	e75e      	b.n	801b4c2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801b604:	3d800000 	.word	0x3d800000

0801b608 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801b608:	4602      	mov	r2, r0
 801b60a:	b148      	cbz	r0, 801b620 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801b60c:	2300      	movs	r3, #0
 801b60e:	b298      	uxth	r0, r3
 801b610:	3301      	adds	r3, #1
 801b612:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801b616:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801b61a:	2900      	cmp	r1, #0
 801b61c:	d1f7      	bne.n	801b60e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801b61e:	4770      	bx	lr
 801b620:	4770      	bx	lr

0801b622 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801b622:	b530      	push	{r4, r5, lr}
 801b624:	4604      	mov	r4, r0
 801b626:	b159      	cbz	r1, 801b640 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801b628:	b148      	cbz	r0, 801b63e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b62a:	2300      	movs	r3, #0
 801b62c:	b298      	uxth	r0, r3
 801b62e:	4282      	cmp	r2, r0
 801b630:	d905      	bls.n	801b63e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801b632:	5ccd      	ldrb	r5, [r1, r3]
 801b634:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801b638:	3301      	adds	r3, #1
 801b63a:	2d00      	cmp	r5, #0
 801b63c:	d1f6      	bne.n	801b62c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801b63e:	bd30      	pop	{r4, r5, pc}
 801b640:	4608      	mov	r0, r1
 801b642:	e7fc      	b.n	801b63e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801b644 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 801b644:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b646:	b08b      	sub	sp, #44	; 0x2c
 801b648:	468c      	mov	ip, r1
 801b64a:	2100      	movs	r1, #0
 801b64c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b650:	4604      	mov	r4, r0
 801b652:	261f      	movs	r6, #31
 801b654:	af01      	add	r7, sp, #4
 801b656:	fb94 fef3 	sdiv	lr, r4, r3
 801b65a:	fb03 441e 	mls	r4, r3, lr, r4
 801b65e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801b662:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801b666:	b2ec      	uxtb	r4, r5
 801b668:	2d09      	cmp	r5, #9
 801b66a:	bfd4      	ite	le
 801b66c:	3430      	addle	r4, #48	; 0x30
 801b66e:	3457      	addgt	r4, #87	; 0x57
 801b670:	b2e4      	uxtb	r4, r4
 801b672:	55bc      	strb	r4, [r7, r6]
 801b674:	4674      	mov	r4, lr
 801b676:	1e71      	subs	r1, r6, #1
 801b678:	b974      	cbnz	r4, 801b698 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801b67a:	2800      	cmp	r0, #0
 801b67c:	da05      	bge.n	801b68a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801b67e:	ab0a      	add	r3, sp, #40	; 0x28
 801b680:	4419      	add	r1, r3
 801b682:	232d      	movs	r3, #45	; 0x2d
 801b684:	f801 3c24 	strb.w	r3, [r1, #-36]
 801b688:	1eb1      	subs	r1, r6, #2
 801b68a:	3101      	adds	r1, #1
 801b68c:	4439      	add	r1, r7
 801b68e:	4660      	mov	r0, ip
 801b690:	f7ff ffc7 	bl	801b622 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b694:	b00b      	add	sp, #44	; 0x2c
 801b696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b698:	460e      	mov	r6, r1
 801b69a:	e7dc      	b.n	801b656 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801b69c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801b69c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b69e:	b08b      	sub	sp, #44	; 0x2c
 801b6a0:	468c      	mov	ip, r1
 801b6a2:	2100      	movs	r1, #0
 801b6a4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b6a8:	ae01      	add	r6, sp, #4
 801b6aa:	211f      	movs	r1, #31
 801b6ac:	fbb0 f7f3 	udiv	r7, r0, r3
 801b6b0:	fb03 0517 	mls	r5, r3, r7, r0
 801b6b4:	b2ec      	uxtb	r4, r5
 801b6b6:	2d09      	cmp	r5, #9
 801b6b8:	bfd4      	ite	le
 801b6ba:	3430      	addle	r4, #48	; 0x30
 801b6bc:	3457      	addgt	r4, #87	; 0x57
 801b6be:	b2e4      	uxtb	r4, r4
 801b6c0:	558c      	strb	r4, [r1, r6]
 801b6c2:	4638      	mov	r0, r7
 801b6c4:	1e4c      	subs	r4, r1, #1
 801b6c6:	b92f      	cbnz	r7, 801b6d4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 801b6c8:	4431      	add	r1, r6
 801b6ca:	4660      	mov	r0, ip
 801b6cc:	f7ff ffa9 	bl	801b622 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801b6d0:	b00b      	add	sp, #44	; 0x2c
 801b6d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b6d4:	4621      	mov	r1, r4
 801b6d6:	e7e9      	b.n	801b6ac <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0801b6d8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801b6d8:	b410      	push	{r4}
 801b6da:	b131      	cbz	r1, 801b6ea <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6dc:	1e9c      	subs	r4, r3, #2
 801b6de:	2c22      	cmp	r4, #34	; 0x22
 801b6e0:	d803      	bhi.n	801b6ea <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801b6e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b6e6:	f7ff bfad 	b.w	801b644 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801b6ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b6ee:	4770      	bx	lr

0801b6f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801b6f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6f4:	4691      	mov	r9, r2
 801b6f6:	b085      	sub	sp, #20
 801b6f8:	6802      	ldr	r2, [r0, #0]
 801b6fa:	9201      	str	r2, [sp, #4]
 801b6fc:	4688      	mov	r8, r1
 801b6fe:	4683      	mov	fp, r0
 801b700:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801b704:	9103      	str	r1, [sp, #12]
 801b706:	4610      	mov	r0, r2
 801b708:	461c      	mov	r4, r3
 801b70a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801b70e:	9302      	str	r3, [sp, #8]
 801b710:	f7ff ff7a 	bl	801b608 <_ZN8touchgfx7Unicode6strlenEPKt>
 801b714:	f1b8 0f00 	cmp.w	r8, #0
 801b718:	bf0c      	ite	eq
 801b71a:	4684      	moveq	ip, r0
 801b71c:	f100 0c01 	addne.w	ip, r0, #1
 801b720:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801b724:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801b728:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801b72a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b72c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801b730:	9903      	ldr	r1, [sp, #12]
 801b732:	fa1f fc8c 	uxth.w	ip, ip
 801b736:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801b73a:	d041      	beq.n	801b7c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b73c:	d834      	bhi.n	801b7a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801b73e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801b742:	d059      	beq.n	801b7f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801b744:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801b748:	d03a      	beq.n	801b7c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801b74a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801b74e:	d034      	beq.n	801b7ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b750:	2400      	movs	r4, #0
 801b752:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801b756:	3a01      	subs	r2, #1
 801b758:	b169      	cbz	r1, 801b776 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b75a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b75c:	458c      	cmp	ip, r1
 801b75e:	da09      	bge.n	801b774 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b760:	eba1 010c 	sub.w	r1, r1, ip
 801b764:	b289      	uxth	r1, r1
 801b766:	b933      	cbnz	r3, 801b776 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b768:	2e00      	cmp	r6, #0
 801b76a:	d051      	beq.n	801b810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b76c:	2800      	cmp	r0, #0
 801b76e:	d04f      	beq.n	801b810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801b770:	440c      	add	r4, r1
 801b772:	b2a4      	uxth	r4, r4
 801b774:	2100      	movs	r1, #0
 801b776:	682b      	ldr	r3, [r5, #0]
 801b778:	4293      	cmp	r3, r2
 801b77a:	da07      	bge.n	801b78c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b77c:	f1b8 0f00 	cmp.w	r8, #0
 801b780:	d004      	beq.n	801b78c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801b782:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801b786:	682b      	ldr	r3, [r5, #0]
 801b788:	3301      	adds	r3, #1
 801b78a:	602b      	str	r3, [r5, #0]
 801b78c:	2730      	movs	r7, #48	; 0x30
 801b78e:	2c00      	cmp	r4, #0
 801b790:	d04e      	beq.n	801b830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b792:	682e      	ldr	r6, [r5, #0]
 801b794:	3c01      	subs	r4, #1
 801b796:	42b2      	cmp	r2, r6
 801b798:	b2a4      	uxth	r4, r4
 801b79a:	dd49      	ble.n	801b830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b79c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b7a0:	682b      	ldr	r3, [r5, #0]
 801b7a2:	3301      	adds	r3, #1
 801b7a4:	602b      	str	r3, [r5, #0]
 801b7a6:	e7f2      	b.n	801b78e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801b7a8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801b7ac:	d01d      	beq.n	801b7ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801b7ae:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801b7b2:	d002      	beq.n	801b7ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801b7b4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801b7b8:	e7c9      	b.n	801b74e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801b7ba:	4684      	mov	ip, r0
 801b7bc:	f04f 0800 	mov.w	r8, #0
 801b7c0:	2c00      	cmp	r4, #0
 801b7c2:	d0c6      	beq.n	801b752 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7c4:	b947      	cbnz	r7, 801b7d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7c6:	2801      	cmp	r0, #1
 801b7c8:	d106      	bne.n	801b7d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801b7ca:	8814      	ldrh	r4, [r2, #0]
 801b7cc:	2c30      	cmp	r4, #48	; 0x30
 801b7ce:	bf02      	ittt	eq
 801b7d0:	3202      	addeq	r2, #2
 801b7d2:	f8cb 2000 	streq.w	r2, [fp]
 801b7d6:	4638      	moveq	r0, r7
 801b7d8:	45bc      	cmp	ip, r7
 801b7da:	da14      	bge.n	801b806 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801b7dc:	b2bf      	uxth	r7, r7
 801b7de:	eba7 040c 	sub.w	r4, r7, ip
 801b7e2:	b2a4      	uxth	r4, r4
 801b7e4:	46bc      	mov	ip, r7
 801b7e6:	2600      	movs	r6, #0
 801b7e8:	e7b3      	b.n	801b752 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b7ea:	4684      	mov	ip, r0
 801b7ec:	b16c      	cbz	r4, 801b80a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801b7ee:	42b8      	cmp	r0, r7
 801b7f0:	dd00      	ble.n	801b7f4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801b7f2:	b2b8      	uxth	r0, r7
 801b7f4:	2400      	movs	r4, #0
 801b7f6:	e003      	b.n	801b800 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801b7f8:	f04f 0c01 	mov.w	ip, #1
 801b7fc:	2400      	movs	r4, #0
 801b7fe:	4660      	mov	r0, ip
 801b800:	4626      	mov	r6, r4
 801b802:	46a0      	mov	r8, r4
 801b804:	e7a5      	b.n	801b752 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b806:	2400      	movs	r4, #0
 801b808:	e7ed      	b.n	801b7e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801b80a:	4626      	mov	r6, r4
 801b80c:	46a0      	mov	r8, r4
 801b80e:	e7a0      	b.n	801b752 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801b810:	2900      	cmp	r1, #0
 801b812:	d0b0      	beq.n	801b776 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b814:	2720      	movs	r7, #32
 801b816:	682e      	ldr	r6, [r5, #0]
 801b818:	2900      	cmp	r1, #0
 801b81a:	d0ac      	beq.n	801b776 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801b81c:	3901      	subs	r1, #1
 801b81e:	4296      	cmp	r6, r2
 801b820:	b289      	uxth	r1, r1
 801b822:	daa7      	bge.n	801b774 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801b824:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801b828:	682b      	ldr	r3, [r5, #0]
 801b82a:	3301      	adds	r3, #1
 801b82c:	602b      	str	r3, [r5, #0]
 801b82e:	e7f2      	b.n	801b816 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801b830:	b188      	cbz	r0, 801b856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b832:	682b      	ldr	r3, [r5, #0]
 801b834:	3801      	subs	r0, #1
 801b836:	429a      	cmp	r2, r3
 801b838:	b280      	uxth	r0, r0
 801b83a:	dd0c      	ble.n	801b856 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801b83c:	f8db 3000 	ldr.w	r3, [fp]
 801b840:	1c9c      	adds	r4, r3, #2
 801b842:	f8cb 4000 	str.w	r4, [fp]
 801b846:	881c      	ldrh	r4, [r3, #0]
 801b848:	682b      	ldr	r3, [r5, #0]
 801b84a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801b84e:	682b      	ldr	r3, [r5, #0]
 801b850:	3301      	adds	r3, #1
 801b852:	602b      	str	r3, [r5, #0]
 801b854:	e7ec      	b.n	801b830 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801b856:	2620      	movs	r6, #32
 801b858:	b151      	cbz	r1, 801b870 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b85a:	6828      	ldr	r0, [r5, #0]
 801b85c:	3901      	subs	r1, #1
 801b85e:	4282      	cmp	r2, r0
 801b860:	b289      	uxth	r1, r1
 801b862:	dd05      	ble.n	801b870 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801b864:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801b868:	682b      	ldr	r3, [r5, #0]
 801b86a:	3301      	adds	r3, #1
 801b86c:	602b      	str	r3, [r5, #0]
 801b86e:	e7f3      	b.n	801b858 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801b870:	b005      	add	sp, #20
 801b872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b876 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801b876:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b87a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801b87e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801b882:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801b886:	2400      	movs	r4, #0
 801b888:	8014      	strh	r4, [r2, #0]
 801b88a:	701c      	strb	r4, [r3, #0]
 801b88c:	f888 4000 	strb.w	r4, [r8]
 801b890:	f88c 4000 	strb.w	r4, [ip]
 801b894:	f88e 4000 	strb.w	r4, [lr]
 801b898:	703c      	strb	r4, [r7, #0]
 801b89a:	6804      	ldr	r4, [r0, #0]
 801b89c:	b1a4      	cbz	r4, 801b8c8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801b89e:	8824      	ldrh	r4, [r4, #0]
 801b8a0:	f04f 0901 	mov.w	r9, #1
 801b8a4:	b314      	cbz	r4, 801b8ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8a6:	2c2b      	cmp	r4, #43	; 0x2b
 801b8a8:	d001      	beq.n	801b8ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801b8aa:	2c20      	cmp	r4, #32
 801b8ac:	d110      	bne.n	801b8d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801b8ae:	8014      	strh	r4, [r2, #0]
 801b8b0:	6804      	ldr	r4, [r0, #0]
 801b8b2:	b10c      	cbz	r4, 801b8b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801b8b4:	3402      	adds	r4, #2
 801b8b6:	6004      	str	r4, [r0, #0]
 801b8b8:	680c      	ldr	r4, [r1, #0]
 801b8ba:	b10c      	cbz	r4, 801b8c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801b8bc:	3401      	adds	r4, #1
 801b8be:	600c      	str	r4, [r1, #0]
 801b8c0:	6804      	ldr	r4, [r0, #0]
 801b8c2:	b17c      	cbz	r4, 801b8e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801b8c4:	8824      	ldrh	r4, [r4, #0]
 801b8c6:	e7ed      	b.n	801b8a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8c8:	680c      	ldr	r4, [r1, #0]
 801b8ca:	b17c      	cbz	r4, 801b8ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8cc:	7824      	ldrb	r4, [r4, #0]
 801b8ce:	e7e7      	b.n	801b8a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801b8d0:	2c2d      	cmp	r4, #45	; 0x2d
 801b8d2:	d102      	bne.n	801b8da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801b8d4:	f883 9000 	strb.w	r9, [r3]
 801b8d8:	e7ea      	b.n	801b8b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8da:	2c23      	cmp	r4, #35	; 0x23
 801b8dc:	d107      	bne.n	801b8ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801b8de:	f888 9000 	strb.w	r9, [r8]
 801b8e2:	e7e5      	b.n	801b8b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801b8e4:	680c      	ldr	r4, [r1, #0]
 801b8e6:	b10c      	cbz	r4, 801b8ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801b8e8:	7824      	ldrb	r4, [r4, #0]
 801b8ea:	e7db      	b.n	801b8a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801b8ec:	2400      	movs	r4, #0
 801b8ee:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801b8f2:	2b09      	cmp	r3, #9
 801b8f4:	d901      	bls.n	801b8fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801b8f6:	2c2a      	cmp	r4, #42	; 0x2a
 801b8f8:	d122      	bne.n	801b940 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b8fa:	2301      	movs	r3, #1
 801b8fc:	2c30      	cmp	r4, #48	; 0x30
 801b8fe:	f88e 3000 	strb.w	r3, [lr]
 801b902:	d10d      	bne.n	801b920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b904:	f88c 3000 	strb.w	r3, [ip]
 801b908:	6803      	ldr	r3, [r0, #0]
 801b90a:	b10b      	cbz	r3, 801b910 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801b90c:	3302      	adds	r3, #2
 801b90e:	6003      	str	r3, [r0, #0]
 801b910:	680b      	ldr	r3, [r1, #0]
 801b912:	b10b      	cbz	r3, 801b918 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801b914:	3301      	adds	r3, #1
 801b916:	600b      	str	r3, [r1, #0]
 801b918:	6803      	ldr	r3, [r0, #0]
 801b91a:	2b00      	cmp	r3, #0
 801b91c:	d02f      	beq.n	801b97e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801b91e:	881c      	ldrh	r4, [r3, #0]
 801b920:	2c2a      	cmp	r4, #42	; 0x2a
 801b922:	d135      	bne.n	801b990 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b924:	f04f 33ff 	mov.w	r3, #4294967295
 801b928:	6033      	str	r3, [r6, #0]
 801b92a:	6803      	ldr	r3, [r0, #0]
 801b92c:	b10b      	cbz	r3, 801b932 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801b92e:	3302      	adds	r3, #2
 801b930:	6003      	str	r3, [r0, #0]
 801b932:	680b      	ldr	r3, [r1, #0]
 801b934:	b10b      	cbz	r3, 801b93a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801b936:	3301      	adds	r3, #1
 801b938:	600b      	str	r3, [r1, #0]
 801b93a:	6803      	ldr	r3, [r0, #0]
 801b93c:	b31b      	cbz	r3, 801b986 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801b93e:	881c      	ldrh	r4, [r3, #0]
 801b940:	2c2e      	cmp	r4, #46	; 0x2e
 801b942:	d11a      	bne.n	801b97a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b944:	2301      	movs	r3, #1
 801b946:	703b      	strb	r3, [r7, #0]
 801b948:	6803      	ldr	r3, [r0, #0]
 801b94a:	b10b      	cbz	r3, 801b950 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801b94c:	3302      	adds	r3, #2
 801b94e:	6003      	str	r3, [r0, #0]
 801b950:	680b      	ldr	r3, [r1, #0]
 801b952:	b10b      	cbz	r3, 801b958 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801b954:	3301      	adds	r3, #1
 801b956:	600b      	str	r3, [r1, #0]
 801b958:	6803      	ldr	r3, [r0, #0]
 801b95a:	2b00      	cmp	r3, #0
 801b95c:	d036      	beq.n	801b9cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801b95e:	881b      	ldrh	r3, [r3, #0]
 801b960:	2b2a      	cmp	r3, #42	; 0x2a
 801b962:	d137      	bne.n	801b9d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b964:	f04f 33ff 	mov.w	r3, #4294967295
 801b968:	602b      	str	r3, [r5, #0]
 801b96a:	6803      	ldr	r3, [r0, #0]
 801b96c:	b10b      	cbz	r3, 801b972 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801b96e:	3302      	adds	r3, #2
 801b970:	6003      	str	r3, [r0, #0]
 801b972:	680b      	ldr	r3, [r1, #0]
 801b974:	b10b      	cbz	r3, 801b97a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b976:	3301      	adds	r3, #1
 801b978:	600b      	str	r3, [r1, #0]
 801b97a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b97e:	680c      	ldr	r4, [r1, #0]
 801b980:	b134      	cbz	r4, 801b990 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801b982:	7824      	ldrb	r4, [r4, #0]
 801b984:	e7cc      	b.n	801b920 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801b986:	680b      	ldr	r3, [r1, #0]
 801b988:	2b00      	cmp	r3, #0
 801b98a:	d0f6      	beq.n	801b97a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801b98c:	781c      	ldrb	r4, [r3, #0]
 801b98e:	e7d7      	b.n	801b940 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b990:	2300      	movs	r3, #0
 801b992:	6033      	str	r3, [r6, #0]
 801b994:	220a      	movs	r2, #10
 801b996:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801b99a:	fa1f f38c 	uxth.w	r3, ip
 801b99e:	2b09      	cmp	r3, #9
 801b9a0:	d8ce      	bhi.n	801b940 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801b9a2:	6833      	ldr	r3, [r6, #0]
 801b9a4:	fb02 c303 	mla	r3, r2, r3, ip
 801b9a8:	6033      	str	r3, [r6, #0]
 801b9aa:	6803      	ldr	r3, [r0, #0]
 801b9ac:	b10b      	cbz	r3, 801b9b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801b9ae:	3302      	adds	r3, #2
 801b9b0:	6003      	str	r3, [r0, #0]
 801b9b2:	680b      	ldr	r3, [r1, #0]
 801b9b4:	b10b      	cbz	r3, 801b9ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801b9b6:	3301      	adds	r3, #1
 801b9b8:	600b      	str	r3, [r1, #0]
 801b9ba:	6803      	ldr	r3, [r0, #0]
 801b9bc:	b10b      	cbz	r3, 801b9c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801b9be:	881c      	ldrh	r4, [r3, #0]
 801b9c0:	e7e9      	b.n	801b996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9c2:	680c      	ldr	r4, [r1, #0]
 801b9c4:	2c00      	cmp	r4, #0
 801b9c6:	d0e6      	beq.n	801b996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9c8:	7824      	ldrb	r4, [r4, #0]
 801b9ca:	e7e4      	b.n	801b996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801b9cc:	680b      	ldr	r3, [r1, #0]
 801b9ce:	b10b      	cbz	r3, 801b9d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801b9d0:	781b      	ldrb	r3, [r3, #0]
 801b9d2:	e7c5      	b.n	801b960 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801b9d4:	2200      	movs	r2, #0
 801b9d6:	602a      	str	r2, [r5, #0]
 801b9d8:	240a      	movs	r4, #10
 801b9da:	3b30      	subs	r3, #48	; 0x30
 801b9dc:	b29e      	uxth	r6, r3
 801b9de:	2e09      	cmp	r6, #9
 801b9e0:	682a      	ldr	r2, [r5, #0]
 801b9e2:	d813      	bhi.n	801ba0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801b9e4:	fb04 3302 	mla	r3, r4, r2, r3
 801b9e8:	602b      	str	r3, [r5, #0]
 801b9ea:	6803      	ldr	r3, [r0, #0]
 801b9ec:	b10b      	cbz	r3, 801b9f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801b9ee:	3302      	adds	r3, #2
 801b9f0:	6003      	str	r3, [r0, #0]
 801b9f2:	680b      	ldr	r3, [r1, #0]
 801b9f4:	b10b      	cbz	r3, 801b9fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801b9f6:	3301      	adds	r3, #1
 801b9f8:	600b      	str	r3, [r1, #0]
 801b9fa:	6803      	ldr	r3, [r0, #0]
 801b9fc:	b10b      	cbz	r3, 801ba02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801b9fe:	881b      	ldrh	r3, [r3, #0]
 801ba00:	e7eb      	b.n	801b9da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba02:	680b      	ldr	r3, [r1, #0]
 801ba04:	2b00      	cmp	r3, #0
 801ba06:	d0e8      	beq.n	801b9da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba08:	781b      	ldrb	r3, [r3, #0]
 801ba0a:	e7e6      	b.n	801b9da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801ba0c:	2a06      	cmp	r2, #6
 801ba0e:	bfa8      	it	ge
 801ba10:	2206      	movge	r2, #6
 801ba12:	602a      	str	r2, [r5, #0]
 801ba14:	e7b1      	b.n	801b97a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801ba16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba1a:	b0a3      	sub	sp, #140	; 0x8c
 801ba1c:	2600      	movs	r6, #0
 801ba1e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801ba22:	4607      	mov	r7, r0
 801ba24:	4688      	mov	r8, r1
 801ba26:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801ba2a:	4631      	mov	r1, r6
 801ba2c:	2242      	movs	r2, #66	; 0x42
 801ba2e:	4648      	mov	r0, r9
 801ba30:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801ba32:	960d      	str	r6, [sp, #52]	; 0x34
 801ba34:	f012 f989 	bl	802dd4a <memset>
 801ba38:	b15f      	cbz	r7, 801ba52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801ba3a:	f108 3aff 	add.w	sl, r8, #4294967295
 801ba3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ba40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ba42:	b152      	cbz	r2, 801ba5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801ba44:	8812      	ldrh	r2, [r2, #0]
 801ba46:	b10a      	cbz	r2, 801ba4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba48:	459a      	cmp	sl, r3
 801ba4a:	dc2e      	bgt.n	801baaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801ba4c:	2200      	movs	r2, #0
 801ba4e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ba52:	4638      	mov	r0, r7
 801ba54:	b023      	add	sp, #140	; 0x8c
 801ba56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba5a:	9a08      	ldr	r2, [sp, #32]
 801ba5c:	2a00      	cmp	r2, #0
 801ba5e:	d0f5      	beq.n	801ba4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801ba60:	7812      	ldrb	r2, [r2, #0]
 801ba62:	e7f0      	b.n	801ba46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801ba64:	2d00      	cmp	r5, #0
 801ba66:	d0ea      	beq.n	801ba3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba68:	782a      	ldrb	r2, [r5, #0]
 801ba6a:	b142      	cbz	r2, 801ba7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801ba6c:	2a25      	cmp	r2, #37	; 0x25
 801ba6e:	d001      	beq.n	801ba74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801ba70:	459a      	cmp	sl, r3
 801ba72:	dc08      	bgt.n	801ba86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801ba74:	f1bb 0f00 	cmp.w	fp, #0
 801ba78:	d121      	bne.n	801babe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801ba7a:	2d00      	cmp	r5, #0
 801ba7c:	d0df      	beq.n	801ba3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801ba7e:	782a      	ldrb	r2, [r5, #0]
 801ba80:	f04f 0b00 	mov.w	fp, #0
 801ba84:	e01d      	b.n	801bac2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801ba86:	f1bb 0f00 	cmp.w	fp, #0
 801ba8a:	d078      	beq.n	801bb7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801ba8c:	f8bb 2000 	ldrh.w	r2, [fp]
 801ba90:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801ba94:	f1bb 0f00 	cmp.w	fp, #0
 801ba98:	d002      	beq.n	801baa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801ba9a:	f10b 0202 	add.w	r2, fp, #2
 801ba9e:	9209      	str	r2, [sp, #36]	; 0x24
 801baa0:	b10d      	cbz	r5, 801baa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801baa2:	3501      	adds	r5, #1
 801baa4:	9508      	str	r5, [sp, #32]
 801baa6:	3301      	adds	r3, #1
 801baa8:	930d      	str	r3, [sp, #52]	; 0x34
 801baaa:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801baae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bab0:	f1bb 0f00 	cmp.w	fp, #0
 801bab4:	d0d6      	beq.n	801ba64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801bab6:	f8bb 2000 	ldrh.w	r2, [fp]
 801baba:	2a00      	cmp	r2, #0
 801babc:	d1d6      	bne.n	801ba6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801babe:	f8bb 2000 	ldrh.w	r2, [fp]
 801bac2:	2a00      	cmp	r2, #0
 801bac4:	d0bb      	beq.n	801ba3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bac6:	459a      	cmp	sl, r3
 801bac8:	ddb9      	ble.n	801ba3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801baca:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801bace:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801bad2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801bad6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801bada:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801bade:	960e      	str	r6, [sp, #56]	; 0x38
 801bae0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801bae4:	960f      	str	r6, [sp, #60]	; 0x3c
 801bae6:	f1bb 0f00 	cmp.w	fp, #0
 801baea:	d002      	beq.n	801baf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801baec:	f10b 0302 	add.w	r3, fp, #2
 801baf0:	9309      	str	r3, [sp, #36]	; 0x24
 801baf2:	b10d      	cbz	r5, 801baf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801baf4:	1c6b      	adds	r3, r5, #1
 801baf6:	9308      	str	r3, [sp, #32]
 801baf8:	ab0f      	add	r3, sp, #60	; 0x3c
 801bafa:	9305      	str	r3, [sp, #20]
 801bafc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801bb00:	9304      	str	r3, [sp, #16]
 801bb02:	ab0e      	add	r3, sp, #56	; 0x38
 801bb04:	9303      	str	r3, [sp, #12]
 801bb06:	ab0c      	add	r3, sp, #48	; 0x30
 801bb08:	9302      	str	r3, [sp, #8]
 801bb0a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801bb0e:	9301      	str	r3, [sp, #4]
 801bb10:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801bb14:	9300      	str	r3, [sp, #0]
 801bb16:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801bb1a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801bb1e:	a908      	add	r1, sp, #32
 801bb20:	a809      	add	r0, sp, #36	; 0x24
 801bb22:	f7ff fea8 	bl	801b876 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801bb26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bb28:	2b00      	cmp	r3, #0
 801bb2a:	bfbe      	ittt	lt
 801bb2c:	6823      	ldrlt	r3, [r4, #0]
 801bb2e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb32:	930e      	strlt	r3, [sp, #56]	; 0x38
 801bb34:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801bb36:	bfb8      	it	lt
 801bb38:	3404      	addlt	r4, #4
 801bb3a:	2b00      	cmp	r3, #0
 801bb3c:	bfb8      	it	lt
 801bb3e:	6823      	ldrlt	r3, [r4, #0]
 801bb40:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801bb44:	bfbe      	ittt	lt
 801bb46:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801bb4a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801bb4c:	3404      	addlt	r4, #4
 801bb4e:	b1d9      	cbz	r1, 801bb88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801bb50:	880b      	ldrh	r3, [r1, #0]
 801bb52:	2b69      	cmp	r3, #105	; 0x69
 801bb54:	d01f      	beq.n	801bb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb56:	d82f      	bhi.n	801bbb8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801bb58:	2b58      	cmp	r3, #88	; 0x58
 801bb5a:	d01c      	beq.n	801bb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bb5c:	d818      	bhi.n	801bb90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801bb5e:	2b25      	cmp	r3, #37	; 0x25
 801bb60:	d034      	beq.n	801bbcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801bb62:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801bb66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bb68:	f1bb 0f00 	cmp.w	fp, #0
 801bb6c:	f000 80b8 	beq.w	801bce0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801bb70:	f8bb 5000 	ldrh.w	r5, [fp]
 801bb74:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801bb78:	3301      	adds	r3, #1
 801bb7a:	930d      	str	r3, [sp, #52]	; 0x34
 801bb7c:	e029      	b.n	801bbd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bb7e:	b10d      	cbz	r5, 801bb84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801bb80:	782a      	ldrb	r2, [r5, #0]
 801bb82:	e785      	b.n	801ba90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bb84:	462a      	mov	r2, r5
 801bb86:	e783      	b.n	801ba90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801bb88:	2a00      	cmp	r2, #0
 801bb8a:	d0ea      	beq.n	801bb62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bb8c:	7813      	ldrb	r3, [r2, #0]
 801bb8e:	e7e0      	b.n	801bb52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801bb90:	3b63      	subs	r3, #99	; 0x63
 801bb92:	2b01      	cmp	r3, #1
 801bb94:	d8e5      	bhi.n	801bb62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bb96:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801bb9a:	b329      	cbz	r1, 801bbe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801bb9c:	880b      	ldrh	r3, [r1, #0]
 801bb9e:	2b69      	cmp	r3, #105	; 0x69
 801bba0:	d063      	beq.n	801bc6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bba2:	d825      	bhi.n	801bbf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801bba4:	2b63      	cmp	r3, #99	; 0x63
 801bba6:	d038      	beq.n	801bc1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801bba8:	2b64      	cmp	r3, #100	; 0x64
 801bbaa:	d05e      	beq.n	801bc6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801bbac:	2b58      	cmp	r3, #88	; 0x58
 801bbae:	d07b      	beq.n	801bca8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801bbb0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801bbb4:	4625      	mov	r5, r4
 801bbb6:	e036      	b.n	801bc26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bbb8:	2b73      	cmp	r3, #115	; 0x73
 801bbba:	d0ec      	beq.n	801bb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbbc:	d802      	bhi.n	801bbc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801bbbe:	2b6f      	cmp	r3, #111	; 0x6f
 801bbc0:	d1cf      	bne.n	801bb62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801bbc2:	e7e8      	b.n	801bb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbc4:	2b75      	cmp	r3, #117	; 0x75
 801bbc6:	d0e6      	beq.n	801bb96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801bbc8:	2b78      	cmp	r3, #120	; 0x78
 801bbca:	e7f9      	b.n	801bbc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801bbcc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbce:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801bbd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bbd4:	b10b      	cbz	r3, 801bbda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801bbd6:	3302      	adds	r3, #2
 801bbd8:	9309      	str	r3, [sp, #36]	; 0x24
 801bbda:	9b08      	ldr	r3, [sp, #32]
 801bbdc:	2b00      	cmp	r3, #0
 801bbde:	f43f af2e 	beq.w	801ba3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbe2:	3301      	adds	r3, #1
 801bbe4:	9308      	str	r3, [sp, #32]
 801bbe6:	e72a      	b.n	801ba3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801bbe8:	2a00      	cmp	r2, #0
 801bbea:	d0e1      	beq.n	801bbb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bbec:	7813      	ldrb	r3, [r2, #0]
 801bbee:	e7d6      	b.n	801bb9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801bbf0:	2b73      	cmp	r3, #115	; 0x73
 801bbf2:	d036      	beq.n	801bc62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801bbf4:	d807      	bhi.n	801bc06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801bbf6:	2b6f      	cmp	r3, #111	; 0x6f
 801bbf8:	d1da      	bne.n	801bbb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bbfa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bbfc:	1d25      	adds	r5, r4, #4
 801bbfe:	eba8 0202 	sub.w	r2, r8, r2
 801bc02:	2308      	movs	r3, #8
 801bc04:	e04a      	b.n	801bc9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bc06:	2b75      	cmp	r3, #117	; 0x75
 801bc08:	d043      	beq.n	801bc92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801bc0a:	2b78      	cmp	r3, #120	; 0x78
 801bc0c:	d1d0      	bne.n	801bbb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801bc0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc10:	1d25      	adds	r5, r4, #4
 801bc12:	eba8 0202 	sub.w	r2, r8, r2
 801bc16:	2310      	movs	r3, #16
 801bc18:	e040      	b.n	801bc9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801bc1a:	6823      	ldr	r3, [r4, #0]
 801bc1c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801bc20:	1d25      	adds	r5, r4, #4
 801bc22:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801bc26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bc28:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bc2c:	2b00      	cmp	r3, #0
 801bc2e:	d052      	beq.n	801bcd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801bc30:	881a      	ldrh	r2, [r3, #0]
 801bc32:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bc36:	a80d      	add	r0, sp, #52	; 0x34
 801bc38:	9005      	str	r0, [sp, #20]
 801bc3a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bc3e:	9004      	str	r0, [sp, #16]
 801bc40:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bc42:	9003      	str	r0, [sp, #12]
 801bc44:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bc48:	9002      	str	r0, [sp, #8]
 801bc4a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bc4c:	9001      	str	r0, [sp, #4]
 801bc4e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bc52:	9000      	str	r0, [sp, #0]
 801bc54:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801bc58:	a810      	add	r0, sp, #64	; 0x40
 801bc5a:	f7ff fd49 	bl	801b6f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bc5e:	462c      	mov	r4, r5
 801bc60:	e7b7      	b.n	801bbd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801bc62:	6823      	ldr	r3, [r4, #0]
 801bc64:	1d25      	adds	r5, r4, #4
 801bc66:	9310      	str	r3, [sp, #64]	; 0x40
 801bc68:	e7dd      	b.n	801bc26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc6c:	6820      	ldr	r0, [r4, #0]
 801bc6e:	eba8 0202 	sub.w	r2, r8, r2
 801bc72:	230a      	movs	r3, #10
 801bc74:	b292      	uxth	r2, r2
 801bc76:	4649      	mov	r1, r9
 801bc78:	f7ff fce4 	bl	801b644 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801bc7c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801bc80:	2b2d      	cmp	r3, #45	; 0x2d
 801bc82:	f104 0504 	add.w	r5, r4, #4
 801bc86:	d1ce      	bne.n	801bc26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bc88:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bc8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bc8e:	3302      	adds	r3, #2
 801bc90:	e7e9      	b.n	801bc66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801bc92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bc94:	1d25      	adds	r5, r4, #4
 801bc96:	eba8 0202 	sub.w	r2, r8, r2
 801bc9a:	230a      	movs	r3, #10
 801bc9c:	b292      	uxth	r2, r2
 801bc9e:	4649      	mov	r1, r9
 801bca0:	6820      	ldr	r0, [r4, #0]
 801bca2:	f7ff fcfb 	bl	801b69c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bca6:	e7be      	b.n	801bc26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bca8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bcaa:	6820      	ldr	r0, [r4, #0]
 801bcac:	eba8 0202 	sub.w	r2, r8, r2
 801bcb0:	b292      	uxth	r2, r2
 801bcb2:	2310      	movs	r3, #16
 801bcb4:	4649      	mov	r1, r9
 801bcb6:	f7ff fcf1 	bl	801b69c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801bcba:	1d25      	adds	r5, r4, #4
 801bcbc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801bcc0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801bcc4:	2b00      	cmp	r3, #0
 801bcc6:	d0ae      	beq.n	801bc26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801bcc8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801bccc:	2919      	cmp	r1, #25
 801bcce:	d8f7      	bhi.n	801bcc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bcd0:	3b20      	subs	r3, #32
 801bcd2:	8013      	strh	r3, [r2, #0]
 801bcd4:	e7f4      	b.n	801bcc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801bcd6:	9a08      	ldr	r2, [sp, #32]
 801bcd8:	2a00      	cmp	r2, #0
 801bcda:	d0aa      	beq.n	801bc32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bcdc:	7812      	ldrb	r2, [r2, #0]
 801bcde:	e7a8      	b.n	801bc32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801bce0:	2d00      	cmp	r5, #0
 801bce2:	f43f af47 	beq.w	801bb74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801bce6:	782d      	ldrb	r5, [r5, #0]
 801bce8:	e744      	b.n	801bb74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801bcea <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801bcea:	b507      	push	{r0, r1, r2, lr}
 801bcec:	9300      	str	r3, [sp, #0]
 801bcee:	4613      	mov	r3, r2
 801bcf0:	2200      	movs	r2, #0
 801bcf2:	f7ff fe90 	bl	801ba16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801bcf6:	b003      	add	sp, #12
 801bcf8:	f85d fb04 	ldr.w	pc, [sp], #4

0801bcfc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801bcfc:	b40c      	push	{r2, r3}
 801bcfe:	b507      	push	{r0, r1, r2, lr}
 801bd00:	ab04      	add	r3, sp, #16
 801bd02:	f853 2b04 	ldr.w	r2, [r3], #4
 801bd06:	9301      	str	r3, [sp, #4]
 801bd08:	f7ff ffef 	bl	801bcea <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801bd0c:	b003      	add	sp, #12
 801bd0e:	f85d eb04 	ldr.w	lr, [sp], #4
 801bd12:	b002      	add	sp, #8
 801bd14:	4770      	bx	lr
	...

0801bd18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801bd18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd1c:	b0c5      	sub	sp, #276	; 0x114
 801bd1e:	2400      	movs	r4, #0
 801bd20:	af11      	add	r7, sp, #68	; 0x44
 801bd22:	4606      	mov	r6, r0
 801bd24:	468a      	mov	sl, r1
 801bd26:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801bd2a:	4621      	mov	r1, r4
 801bd2c:	22c8      	movs	r2, #200	; 0xc8
 801bd2e:	4638      	mov	r0, r7
 801bd30:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801bd34:	940d      	str	r4, [sp, #52]	; 0x34
 801bd36:	f012 f808 	bl	802dd4a <memset>
 801bd3a:	b16e      	cbz	r6, 801bd58 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801bd3c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801bfe0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801bd40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bd42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd44:	b162      	cbz	r2, 801bd60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801bd46:	8812      	ldrh	r2, [r2, #0]
 801bd48:	b11a      	cbz	r2, 801bd52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd4a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801bd4e:	4299      	cmp	r1, r3
 801bd50:	dc2e      	bgt.n	801bdb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801bd52:	2200      	movs	r2, #0
 801bd54:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd58:	4630      	mov	r0, r6
 801bd5a:	b045      	add	sp, #276	; 0x114
 801bd5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd60:	9a08      	ldr	r2, [sp, #32]
 801bd62:	2a00      	cmp	r2, #0
 801bd64:	d0f5      	beq.n	801bd52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801bd66:	7812      	ldrb	r2, [r2, #0]
 801bd68:	e7ee      	b.n	801bd48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801bd6a:	2d00      	cmp	r5, #0
 801bd6c:	d0e8      	beq.n	801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd6e:	782a      	ldrb	r2, [r5, #0]
 801bd70:	b142      	cbz	r2, 801bd84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801bd72:	2a25      	cmp	r2, #37	; 0x25
 801bd74:	d001      	beq.n	801bd7a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801bd76:	4299      	cmp	r1, r3
 801bd78:	dc08      	bgt.n	801bd8c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801bd7a:	f1b8 0f00 	cmp.w	r8, #0
 801bd7e:	d121      	bne.n	801bdc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801bd80:	2d00      	cmp	r5, #0
 801bd82:	d0dd      	beq.n	801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bd84:	782a      	ldrb	r2, [r5, #0]
 801bd86:	f04f 0800 	mov.w	r8, #0
 801bd8a:	e01d      	b.n	801bdc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801bd8c:	f1b8 0f00 	cmp.w	r8, #0
 801bd90:	d07f      	beq.n	801be92 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801bd92:	f8b8 2000 	ldrh.w	r2, [r8]
 801bd96:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801bd9a:	f1b8 0f00 	cmp.w	r8, #0
 801bd9e:	d002      	beq.n	801bda6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801bda0:	f108 0202 	add.w	r2, r8, #2
 801bda4:	9209      	str	r2, [sp, #36]	; 0x24
 801bda6:	b10d      	cbz	r5, 801bdac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801bda8:	3501      	adds	r5, #1
 801bdaa:	9508      	str	r5, [sp, #32]
 801bdac:	3301      	adds	r3, #1
 801bdae:	930d      	str	r3, [sp, #52]	; 0x34
 801bdb0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801bdb4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bdb6:	f1b8 0f00 	cmp.w	r8, #0
 801bdba:	d0d6      	beq.n	801bd6a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801bdbc:	f8b8 2000 	ldrh.w	r2, [r8]
 801bdc0:	2a00      	cmp	r2, #0
 801bdc2:	d1d6      	bne.n	801bd72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801bdc4:	f8b8 2000 	ldrh.w	r2, [r8]
 801bdc8:	2a00      	cmp	r2, #0
 801bdca:	d0b9      	beq.n	801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdcc:	4299      	cmp	r1, r3
 801bdce:	ddb7      	ble.n	801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bdd0:	2300      	movs	r3, #0
 801bdd2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801bdd6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801bdda:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801bdde:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801bde2:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801bde6:	930e      	str	r3, [sp, #56]	; 0x38
 801bde8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801bdec:	930f      	str	r3, [sp, #60]	; 0x3c
 801bdee:	f1b8 0f00 	cmp.w	r8, #0
 801bdf2:	d002      	beq.n	801bdfa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801bdf4:	f108 0302 	add.w	r3, r8, #2
 801bdf8:	9309      	str	r3, [sp, #36]	; 0x24
 801bdfa:	b10d      	cbz	r5, 801be00 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801bdfc:	1c6b      	adds	r3, r5, #1
 801bdfe:	9308      	str	r3, [sp, #32]
 801be00:	ab0f      	add	r3, sp, #60	; 0x3c
 801be02:	9305      	str	r3, [sp, #20]
 801be04:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801be08:	9304      	str	r3, [sp, #16]
 801be0a:	ab0e      	add	r3, sp, #56	; 0x38
 801be0c:	9303      	str	r3, [sp, #12]
 801be0e:	ab0c      	add	r3, sp, #48	; 0x30
 801be10:	9302      	str	r3, [sp, #8]
 801be12:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801be16:	9301      	str	r3, [sp, #4]
 801be18:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801be1c:	9300      	str	r3, [sp, #0]
 801be1e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801be22:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801be26:	a908      	add	r1, sp, #32
 801be28:	a809      	add	r0, sp, #36	; 0x24
 801be2a:	f7ff fd24 	bl	801b876 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801be2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801be30:	2b00      	cmp	r3, #0
 801be32:	da0b      	bge.n	801be4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801be34:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be38:	edd3 7a00 	vldr	s15, [r3]
 801be3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be40:	3401      	adds	r4, #1
 801be42:	ee17 3a90 	vmov	r3, s15
 801be46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be4a:	930e      	str	r3, [sp, #56]	; 0x38
 801be4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801be4e:	2b00      	cmp	r3, #0
 801be50:	da0b      	bge.n	801be6a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801be52:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801be56:	edd3 7a00 	vldr	s15, [r3]
 801be5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801be5e:	3401      	adds	r4, #1
 801be60:	ee17 3a90 	vmov	r3, s15
 801be64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801be68:	930f      	str	r3, [sp, #60]	; 0x3c
 801be6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801be6c:	b1b3      	cbz	r3, 801be9c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801be6e:	881a      	ldrh	r2, [r3, #0]
 801be70:	2a25      	cmp	r2, #37	; 0x25
 801be72:	d018      	beq.n	801bea6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801be74:	2a66      	cmp	r2, #102	; 0x66
 801be76:	d01c      	beq.n	801beb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801be78:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801be7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be7e:	f1b8 0f00 	cmp.w	r8, #0
 801be82:	f000 8121 	beq.w	801c0c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801be86:	f8b8 5000 	ldrh.w	r5, [r8]
 801be8a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801be8e:	3301      	adds	r3, #1
 801be90:	e00d      	b.n	801beae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801be92:	b10d      	cbz	r5, 801be98 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801be94:	782a      	ldrb	r2, [r5, #0]
 801be96:	e77e      	b.n	801bd96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801be98:	462a      	mov	r2, r5
 801be9a:	e77c      	b.n	801bd96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801be9c:	9b08      	ldr	r3, [sp, #32]
 801be9e:	2b00      	cmp	r3, #0
 801bea0:	d0ea      	beq.n	801be78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801bea2:	781a      	ldrb	r2, [r3, #0]
 801bea4:	e7e4      	b.n	801be70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801bea6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bea8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801beac:	3302      	adds	r3, #2
 801beae:	930d      	str	r3, [sp, #52]	; 0x34
 801beb0:	e041      	b.n	801bf36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801beb2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801beb6:	edd3 7a00 	vldr	s15, [r3]
 801beba:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bebe:	9710      	str	r7, [sp, #64]	; 0x40
 801bec0:	3401      	adds	r4, #1
 801bec2:	b923      	cbnz	r3, 801bece <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801bec4:	2301      	movs	r3, #1
 801bec6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801beca:	2306      	movs	r3, #6
 801becc:	930f      	str	r3, [sp, #60]	; 0x3c
 801bece:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801bed2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bed6:	bf48      	it	mi
 801bed8:	eef1 7a67 	vnegmi.f32	s15, s15
 801bedc:	eeb0 7ae7 	vabs.f32	s14, s15
 801bee0:	bf48      	it	mi
 801bee2:	232d      	movmi	r3, #45	; 0x2d
 801bee4:	eeb4 7a45 	vcmp.f32	s14, s10
 801bee8:	bf48      	it	mi
 801beea:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801beee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bef2:	dd2b      	ble.n	801bf4c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801bef4:	4b3b      	ldr	r3, [pc, #236]	; (801bfe4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801bef6:	9311      	str	r3, [sp, #68]	; 0x44
 801bef8:	2366      	movs	r3, #102	; 0x66
 801befa:	9312      	str	r3, [sp, #72]	; 0x48
 801befc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801befe:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801bf02:	2b00      	cmp	r3, #0
 801bf04:	f000 80da 	beq.w	801c0bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801bf08:	881a      	ldrh	r2, [r3, #0]
 801bf0a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801bf0e:	a80d      	add	r0, sp, #52	; 0x34
 801bf10:	9005      	str	r0, [sp, #20]
 801bf12:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801bf16:	9004      	str	r0, [sp, #16]
 801bf18:	980e      	ldr	r0, [sp, #56]	; 0x38
 801bf1a:	9003      	str	r0, [sp, #12]
 801bf1c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801bf20:	9002      	str	r0, [sp, #8]
 801bf22:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801bf24:	9001      	str	r0, [sp, #4]
 801bf26:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801bf2a:	9000      	str	r0, [sp, #0]
 801bf2c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801bf30:	a810      	add	r0, sp, #64	; 0x40
 801bf32:	f7ff fbdd 	bl	801b6f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801bf36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf38:	b10b      	cbz	r3, 801bf3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801bf3a:	3302      	adds	r3, #2
 801bf3c:	9309      	str	r3, [sp, #36]	; 0x24
 801bf3e:	9b08      	ldr	r3, [sp, #32]
 801bf40:	2b00      	cmp	r3, #0
 801bf42:	f43f aefd 	beq.w	801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf46:	3301      	adds	r3, #1
 801bf48:	9308      	str	r3, [sp, #32]
 801bf4a:	e6f9      	b.n	801bd40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801bf4c:	eef4 7a67 	vcmp.f32	s15, s15
 801bf50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf54:	d63a      	bvs.n	801bfcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801bf56:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801bf5a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801bf5e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801bf62:	eeb0 6a67 	vmov.f32	s12, s15
 801bf66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bf6a:	eef0 5a47 	vmov.f32	s11, s14
 801bf6e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801bf72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf76:	da2d      	bge.n	801bfd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801bf78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801bf7a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801bf7e:	2100      	movs	r1, #0
 801bf80:	eef0 4a46 	vmov.f32	s9, s12
 801bf84:	ebaa 0202 	sub.w	r2, sl, r2
 801bf88:	eef4 6ac6 	vcmpe.f32	s13, s12
 801bf8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf90:	b28d      	uxth	r5, r1
 801bf92:	db2c      	blt.n	801bfee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bf94:	1a53      	subs	r3, r2, r1
 801bf96:	2b00      	cmp	r3, #0
 801bf98:	dd29      	ble.n	801bfee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801bf9a:	3101      	adds	r1, #1
 801bf9c:	2964      	cmp	r1, #100	; 0x64
 801bf9e:	d025      	beq.n	801bfec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801bfa0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801bfa4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801bfa8:	ee17 3a10 	vmov	r3, s14
 801bfac:	2b09      	cmp	r3, #9
 801bfae:	bfa8      	it	ge
 801bfb0:	2309      	movge	r3, #9
 801bfb2:	ee07 3a10 	vmov	s14, r3
 801bfb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801bfba:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801bfbe:	eee7 7a66 	vfms.f32	s15, s14, s13
 801bfc2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801bfc6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801bfca:	e7dd      	b.n	801bf88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801bfcc:	4b06      	ldr	r3, [pc, #24]	; (801bfe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801bfce:	9311      	str	r3, [sp, #68]	; 0x44
 801bfd0:	236e      	movs	r3, #110	; 0x6e
 801bfd2:	e792      	b.n	801befa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801bfd4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801bfd8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801bfdc:	e7c7      	b.n	801bf6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801bfde:	bf00      	nop
 801bfe0:	7f7fffff 	.word	0x7f7fffff
 801bfe4:	006e0069 	.word	0x006e0069
 801bfe8:	0061006e 	.word	0x0061006e
 801bfec:	2563      	movs	r5, #99	; 0x63
 801bfee:	2a63      	cmp	r2, #99	; 0x63
 801bff0:	bfd4      	ite	le
 801bff2:	ebc5 0202 	rsble	r2, r5, r2
 801bff6:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801bffa:	2a00      	cmp	r2, #0
 801bffc:	dd43      	ble.n	801c086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801bffe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c000:	2b00      	cmp	r3, #0
 801c002:	dd40      	ble.n	801c086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801c004:	f04f 0901 	mov.w	r9, #1
 801c008:	210a      	movs	r1, #10
 801c00a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801c00e:	d30c      	bcc.n	801c02a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801c010:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801c014:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c018:	ee17 0a10 	vmov	r0, s14
 801c01c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c020:	fb01 0909 	mla	r9, r1, r9, r0
 801c024:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c028:	e7ef      	b.n	801c00a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801c02a:	3501      	adds	r5, #1
 801c02c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c02e:	b292      	uxth	r2, r2
 801c030:	230a      	movs	r3, #10
 801c032:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801c036:	4648      	mov	r0, r9
 801c038:	f7ff fb4e 	bl	801b6d8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801c03c:	f1b9 0f01 	cmp.w	r9, #1
 801c040:	dc1f      	bgt.n	801c082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801c042:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801c046:	2b00      	cmp	r3, #0
 801c048:	bf0c      	ite	eq
 801c04a:	2300      	moveq	r3, #0
 801c04c:	232e      	movne	r3, #46	; 0x2e
 801c04e:	aa44      	add	r2, sp, #272	; 0x110
 801c050:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c054:	eef4 7ae4 	vcmpe.f32	s15, s9
 801c058:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c05c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801c060:	f6ff af4c 	blt.w	801befc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c064:	2300      	movs	r3, #0
 801c066:	f838 2b02 	ldrh.w	r2, [r8], #2
 801c06a:	1c59      	adds	r1, r3, #1
 801c06c:	b98a      	cbnz	r2, 801c092 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801c06e:	b29b      	uxth	r3, r3
 801c070:	2130      	movs	r1, #48	; 0x30
 801c072:	b983      	cbnz	r3, 801c096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801c074:	2331      	movs	r3, #49	; 0x31
 801c076:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801c07a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c07c:	3b02      	subs	r3, #2
 801c07e:	9310      	str	r3, [sp, #64]	; 0x40
 801c080:	e73c      	b.n	801befc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c082:	232e      	movs	r3, #46	; 0x2e
 801c084:	e7e3      	b.n	801c04e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801c086:	ab44      	add	r3, sp, #272	; 0x110
 801c088:	3501      	adds	r5, #1
 801c08a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801c08e:	2300      	movs	r3, #0
 801c090:	e7e0      	b.n	801c054 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801c092:	460b      	mov	r3, r1
 801c094:	e7e7      	b.n	801c066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801c096:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801c09a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801c09e:	2808      	cmp	r0, #8
 801c0a0:	d806      	bhi.n	801c0b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801c0a2:	a944      	add	r1, sp, #272	; 0x110
 801c0a4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801c0a8:	3201      	adds	r2, #1
 801c0aa:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801c0ae:	e725      	b.n	801befc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801c0b0:	2a39      	cmp	r2, #57	; 0x39
 801c0b2:	bf08      	it	eq
 801c0b4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801c0b8:	3b01      	subs	r3, #1
 801c0ba:	e7da      	b.n	801c072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801c0bc:	9a08      	ldr	r2, [sp, #32]
 801c0be:	2a00      	cmp	r2, #0
 801c0c0:	f43f af23 	beq.w	801bf0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0c4:	7812      	ldrb	r2, [r2, #0]
 801c0c6:	e720      	b.n	801bf0a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801c0c8:	2d00      	cmp	r5, #0
 801c0ca:	f43f aede 	beq.w	801be8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0ce:	782d      	ldrb	r5, [r5, #0]
 801c0d0:	e6db      	b.n	801be8a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801c0d2:	bf00      	nop

0801c0d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801c0d4:	b507      	push	{r0, r1, r2, lr}
 801c0d6:	9300      	str	r3, [sp, #0]
 801c0d8:	4613      	mov	r3, r2
 801c0da:	2200      	movs	r2, #0
 801c0dc:	f7ff fe1c 	bl	801bd18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801c0e0:	b003      	add	sp, #12
 801c0e2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801c0e8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801c0e8:	4b01      	ldr	r3, [pc, #4]	; (801c0f0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801c0ea:	6018      	str	r0, [r3, #0]
 801c0ec:	4770      	bx	lr
 801c0ee:	bf00      	nop
 801c0f0:	200138a4 	.word	0x200138a4

0801c0f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801c0f4:	4b06      	ldr	r3, [pc, #24]	; (801c110 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801c0f6:	881a      	ldrh	r2, [r3, #0]
 801c0f8:	4282      	cmp	r2, r0
 801c0fa:	d807      	bhi.n	801c10c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801c0fc:	4b05      	ldr	r3, [pc, #20]	; (801c114 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801c0fe:	881b      	ldrh	r3, [r3, #0]
 801c100:	4413      	add	r3, r2
 801c102:	4298      	cmp	r0, r3
 801c104:	bfac      	ite	ge
 801c106:	2000      	movge	r0, #0
 801c108:	2001      	movlt	r0, #1
 801c10a:	4770      	bx	lr
 801c10c:	2000      	movs	r0, #0
 801c10e:	4770      	bx	lr
 801c110:	200138c4 	.word	0x200138c4
 801c114:	200138c8 	.word	0x200138c8

0801c118 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801c118:	b508      	push	{r3, lr}
 801c11a:	4601      	mov	r1, r0
 801c11c:	f7ff ffea 	bl	801c0f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801c120:	b118      	cbz	r0, 801c12a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801c122:	4b02      	ldr	r3, [pc, #8]	; (801c12c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801c124:	681b      	ldr	r3, [r3, #0]
 801c126:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801c12a:	bd08      	pop	{r3, pc}
 801c12c:	200138a8 	.word	0x200138a8

0801c130 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801c130:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c132:	4c24      	ldr	r4, [pc, #144]	; (801c1c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801c134:	6823      	ldr	r3, [r4, #0]
 801c136:	2b00      	cmp	r3, #0
 801c138:	d042      	beq.n	801c1c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c13a:	4a23      	ldr	r2, [pc, #140]	; (801c1c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801c13c:	4d23      	ldr	r5, [pc, #140]	; (801c1cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801c13e:	8811      	ldrh	r1, [r2, #0]
 801c140:	f8b5 c000 	ldrh.w	ip, [r5]
 801c144:	4822      	ldr	r0, [pc, #136]	; (801c1d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801c146:	4461      	add	r1, ip
 801c148:	1c4a      	adds	r2, r1, #1
 801c14a:	f022 0201 	bic.w	r2, r2, #1
 801c14e:	008f      	lsls	r7, r1, #2
 801c150:	0412      	lsls	r2, r2, #16
 801c152:	19de      	adds	r6, r3, r7
 801c154:	0c12      	lsrs	r2, r2, #16
 801c156:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801c15a:	6006      	str	r6, [r0, #0]
 801c15c:	4e1d      	ldr	r6, [pc, #116]	; (801c1d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801c15e:	19da      	adds	r2, r3, r7
 801c160:	6032      	str	r2, [r6, #0]
 801c162:	220e      	movs	r2, #14
 801c164:	fb02 f20c 	mul.w	r2, r2, ip
 801c168:	3203      	adds	r2, #3
 801c16a:	f022 0203 	bic.w	r2, r2, #3
 801c16e:	443a      	add	r2, r7
 801c170:	4f19      	ldr	r7, [pc, #100]	; (801c1d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801c172:	4413      	add	r3, r2
 801c174:	603b      	str	r3, [r7, #0]
 801c176:	4f19      	ldr	r7, [pc, #100]	; (801c1dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801c178:	2300      	movs	r3, #0
 801c17a:	803b      	strh	r3, [r7, #0]
 801c17c:	4f18      	ldr	r7, [pc, #96]	; (801c1e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801c17e:	683f      	ldr	r7, [r7, #0]
 801c180:	1aba      	subs	r2, r7, r2
 801c182:	4f18      	ldr	r7, [pc, #96]	; (801c1e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801c184:	603a      	str	r2, [r7, #0]
 801c186:	4a18      	ldr	r2, [pc, #96]	; (801c1e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801c188:	469c      	mov	ip, r3
 801c18a:	8013      	strh	r3, [r2, #0]
 801c18c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801c190:	428b      	cmp	r3, r1
 801c192:	d10d      	bne.n	801c1b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801c194:	882d      	ldrh	r5, [r5, #0]
 801c196:	6830      	ldr	r0, [r6, #0]
 801c198:	2300      	movs	r3, #0
 801c19a:	240e      	movs	r4, #14
 801c19c:	429d      	cmp	r5, r3
 801c19e:	d90f      	bls.n	801c1c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801c1a0:	fb04 0203 	mla	r2, r4, r3, r0
 801c1a4:	3301      	adds	r3, #1
 801c1a6:	7b11      	ldrb	r1, [r2, #12]
 801c1a8:	f36f 1145 	bfc	r1, #5, #1
 801c1ac:	7311      	strb	r1, [r2, #12]
 801c1ae:	e7f5      	b.n	801c19c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801c1b0:	6822      	ldr	r2, [r4, #0]
 801c1b2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801c1b6:	6802      	ldr	r2, [r0, #0]
 801c1b8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801c1bc:	3301      	adds	r3, #1
 801c1be:	e7e7      	b.n	801c190 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801c1c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c1c2:	bf00      	nop
 801c1c4:	200138a8 	.word	0x200138a8
 801c1c8:	200138c4 	.word	0x200138c4
 801c1cc:	200138c8 	.word	0x200138c8
 801c1d0:	200138bc 	.word	0x200138bc
 801c1d4:	200138ac 	.word	0x200138ac
 801c1d8:	200138b4 	.word	0x200138b4
 801c1dc:	200138c6 	.word	0x200138c6
 801c1e0:	200138b0 	.word	0x200138b0
 801c1e4:	200138c0 	.word	0x200138c0
 801c1e8:	200138b8 	.word	0x200138b8

0801c1ec <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801c1ec:	4b06      	ldr	r3, [pc, #24]	; (801c208 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801c1ee:	681b      	ldr	r3, [r3, #0]
 801c1f0:	b943      	cbnz	r3, 801c204 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c1f2:	b139      	cbz	r1, 801c204 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801c1f4:	4b05      	ldr	r3, [pc, #20]	; (801c20c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801c1f6:	801a      	strh	r2, [r3, #0]
 801c1f8:	4b05      	ldr	r3, [pc, #20]	; (801c210 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801c1fa:	6019      	str	r1, [r3, #0]
 801c1fc:	4b05      	ldr	r3, [pc, #20]	; (801c214 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801c1fe:	6018      	str	r0, [r3, #0]
 801c200:	f7ff bf96 	b.w	801c130 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801c204:	4770      	bx	lr
 801c206:	bf00      	nop
 801c208:	200138b4 	.word	0x200138b4
 801c20c:	200138c8 	.word	0x200138c8
 801c210:	200138b0 	.word	0x200138b0
 801c214:	200138a8 	.word	0x200138a8

0801c218 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801c218:	b470      	push	{r4, r5, r6}
 801c21a:	4c07      	ldr	r4, [pc, #28]	; (801c238 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801c21c:	6826      	ldr	r6, [r4, #0]
 801c21e:	4605      	mov	r5, r0
 801c220:	4610      	mov	r0, r2
 801c222:	9a03      	ldr	r2, [sp, #12]
 801c224:	b936      	cbnz	r6, 801c234 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801c226:	6025      	str	r5, [r4, #0]
 801c228:	4c04      	ldr	r4, [pc, #16]	; (801c23c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801c22a:	8021      	strh	r1, [r4, #0]
 801c22c:	bc70      	pop	{r4, r5, r6}
 801c22e:	4619      	mov	r1, r3
 801c230:	f7ff bfdc 	b.w	801c1ec <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801c234:	bc70      	pop	{r4, r5, r6}
 801c236:	4770      	bx	lr
 801c238:	200138cc 	.word	0x200138cc
 801c23c:	200138c4 	.word	0x200138c4

0801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801c240:	4a12      	ldr	r2, [pc, #72]	; (801c28c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801c242:	8803      	ldrh	r3, [r0, #0]
 801c244:	8812      	ldrh	r2, [r2, #0]
 801c246:	4293      	cmp	r3, r2
 801c248:	d207      	bcs.n	801c25a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801c24a:	4a11      	ldr	r2, [pc, #68]	; (801c290 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801c24c:	6812      	ldr	r2, [r2, #0]
 801c24e:	2114      	movs	r1, #20
 801c250:	fb01 2303 	mla	r3, r1, r3, r2
 801c254:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801c258:	4770      	bx	lr
 801c25a:	490e      	ldr	r1, [pc, #56]	; (801c294 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801c25c:	8809      	ldrh	r1, [r1, #0]
 801c25e:	4411      	add	r1, r2
 801c260:	428b      	cmp	r3, r1
 801c262:	da04      	bge.n	801c26e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801c264:	1a9b      	subs	r3, r3, r2
 801c266:	4a0c      	ldr	r2, [pc, #48]	; (801c298 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801c268:	210e      	movs	r1, #14
 801c26a:	6812      	ldr	r2, [r2, #0]
 801c26c:	e7f0      	b.n	801c250 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801c26e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c272:	4293      	cmp	r3, r2
 801c274:	d108      	bne.n	801c288 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801c276:	4b09      	ldr	r3, [pc, #36]	; (801c29c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801c278:	781b      	ldrb	r3, [r3, #0]
 801c27a:	b91b      	cbnz	r3, 801c284 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801c27c:	4b08      	ldr	r3, [pc, #32]	; (801c2a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801c27e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c282:	4770      	bx	lr
 801c284:	4b07      	ldr	r3, [pc, #28]	; (801c2a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801c286:	e7fa      	b.n	801c27e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801c288:	2000      	movs	r0, #0
 801c28a:	4770      	bx	lr
 801c28c:	200138c4 	.word	0x200138c4
 801c290:	200138cc 	.word	0x200138cc
 801c294:	200138c8 	.word	0x200138c8
 801c298:	200138ac 	.word	0x200138ac
 801c29c:	20013834 	.word	0x20013834
 801c2a0:	20013836 	.word	0x20013836
 801c2a4:	20013838 	.word	0x20013838

0801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801c2a8:	4a12      	ldr	r2, [pc, #72]	; (801c2f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801c2aa:	8803      	ldrh	r3, [r0, #0]
 801c2ac:	8812      	ldrh	r2, [r2, #0]
 801c2ae:	4293      	cmp	r3, r2
 801c2b0:	d207      	bcs.n	801c2c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801c2b2:	4a11      	ldr	r2, [pc, #68]	; (801c2f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801c2b4:	6812      	ldr	r2, [r2, #0]
 801c2b6:	2114      	movs	r1, #20
 801c2b8:	fb01 2303 	mla	r3, r1, r3, r2
 801c2bc:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801c2c0:	4770      	bx	lr
 801c2c2:	490e      	ldr	r1, [pc, #56]	; (801c2fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801c2c4:	8809      	ldrh	r1, [r1, #0]
 801c2c6:	4411      	add	r1, r2
 801c2c8:	428b      	cmp	r3, r1
 801c2ca:	da04      	bge.n	801c2d6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801c2cc:	1a9b      	subs	r3, r3, r2
 801c2ce:	4a0c      	ldr	r2, [pc, #48]	; (801c300 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801c2d0:	210e      	movs	r1, #14
 801c2d2:	6812      	ldr	r2, [r2, #0]
 801c2d4:	e7f0      	b.n	801c2b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801c2d6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c2da:	4293      	cmp	r3, r2
 801c2dc:	d108      	bne.n	801c2f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801c2de:	4b09      	ldr	r3, [pc, #36]	; (801c304 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801c2e0:	781b      	ldrb	r3, [r3, #0]
 801c2e2:	b91b      	cbnz	r3, 801c2ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801c2e4:	4b08      	ldr	r3, [pc, #32]	; (801c308 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801c2e6:	f9b3 0000 	ldrsh.w	r0, [r3]
 801c2ea:	4770      	bx	lr
 801c2ec:	4b07      	ldr	r3, [pc, #28]	; (801c30c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801c2ee:	e7fa      	b.n	801c2e6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801c2f0:	2000      	movs	r0, #0
 801c2f2:	4770      	bx	lr
 801c2f4:	200138c4 	.word	0x200138c4
 801c2f8:	200138cc 	.word	0x200138cc
 801c2fc:	200138c8 	.word	0x200138c8
 801c300:	200138ac 	.word	0x200138ac
 801c304:	20013834 	.word	0x20013834
 801c308:	20013838 	.word	0x20013838
 801c30c:	20013836 	.word	0x20013836

0801c310 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801c310:	b510      	push	{r4, lr}
 801c312:	4a1f      	ldr	r2, [pc, #124]	; (801c390 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801c314:	880b      	ldrh	r3, [r1, #0]
 801c316:	8812      	ldrh	r2, [r2, #0]
 801c318:	4293      	cmp	r3, r2
 801c31a:	d213      	bcs.n	801c344 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801c31c:	4a1d      	ldr	r2, [pc, #116]	; (801c394 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801c31e:	6812      	ldr	r2, [r2, #0]
 801c320:	2114      	movs	r1, #20
 801c322:	fb01 2303 	mla	r3, r1, r3, r2
 801c326:	8a1a      	ldrh	r2, [r3, #16]
 801c328:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801c32c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801c330:	8a5b      	ldrh	r3, [r3, #18]
 801c332:	8004      	strh	r4, [r0, #0]
 801c334:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c338:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801c33c:	8041      	strh	r1, [r0, #2]
 801c33e:	8082      	strh	r2, [r0, #4]
 801c340:	80c3      	strh	r3, [r0, #6]
 801c342:	e00e      	b.n	801c362 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c344:	4914      	ldr	r1, [pc, #80]	; (801c398 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801c346:	8809      	ldrh	r1, [r1, #0]
 801c348:	4411      	add	r1, r2
 801c34a:	428b      	cmp	r3, r1
 801c34c:	da0a      	bge.n	801c364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801c34e:	1a9b      	subs	r3, r3, r2
 801c350:	4a12      	ldr	r2, [pc, #72]	; (801c39c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801c352:	6812      	ldr	r2, [r2, #0]
 801c354:	210e      	movs	r1, #14
 801c356:	fb01 2303 	mla	r3, r1, r3, r2
 801c35a:	681a      	ldr	r2, [r3, #0]
 801c35c:	6002      	str	r2, [r0, #0]
 801c35e:	685a      	ldr	r2, [r3, #4]
 801c360:	6042      	str	r2, [r0, #4]
 801c362:	bd10      	pop	{r4, pc}
 801c364:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c368:	4293      	cmp	r3, r2
 801c36a:	d10b      	bne.n	801c384 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801c36c:	4b0c      	ldr	r3, [pc, #48]	; (801c3a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801c36e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801c372:	4b0c      	ldr	r3, [pc, #48]	; (801c3a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801c374:	8081      	strh	r1, [r0, #4]
 801c376:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c37a:	80c2      	strh	r2, [r0, #6]
 801c37c:	2300      	movs	r3, #0
 801c37e:	8003      	strh	r3, [r0, #0]
 801c380:	8043      	strh	r3, [r0, #2]
 801c382:	e7ee      	b.n	801c362 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801c384:	2300      	movs	r3, #0
 801c386:	8003      	strh	r3, [r0, #0]
 801c388:	8043      	strh	r3, [r0, #2]
 801c38a:	8083      	strh	r3, [r0, #4]
 801c38c:	e7d8      	b.n	801c340 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801c38e:	bf00      	nop
 801c390:	200138c4 	.word	0x200138c4
 801c394:	200138cc 	.word	0x200138cc
 801c398:	200138c8 	.word	0x200138c8
 801c39c:	200138ac 	.word	0x200138ac
 801c3a0:	20013830 	.word	0x20013830
 801c3a4:	20013832 	.word	0x20013832

0801c3a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801c3a8:	4a17      	ldr	r2, [pc, #92]	; (801c408 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801c3aa:	8803      	ldrh	r3, [r0, #0]
 801c3ac:	8812      	ldrh	r2, [r2, #0]
 801c3ae:	4293      	cmp	r3, r2
 801c3b0:	d213      	bcs.n	801c3da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801c3b2:	4a16      	ldr	r2, [pc, #88]	; (801c40c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801c3b4:	6812      	ldr	r2, [r2, #0]
 801c3b6:	2114      	movs	r1, #20
 801c3b8:	fb01 2303 	mla	r3, r1, r3, r2
 801c3bc:	8a1a      	ldrh	r2, [r3, #16]
 801c3be:	8919      	ldrh	r1, [r3, #8]
 801c3c0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801c3c4:	428a      	cmp	r2, r1
 801c3c6:	db1d      	blt.n	801c404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c3c8:	8a58      	ldrh	r0, [r3, #18]
 801c3ca:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801c3ce:	895b      	ldrh	r3, [r3, #10]
 801c3d0:	4298      	cmp	r0, r3
 801c3d2:	bfac      	ite	ge
 801c3d4:	2000      	movge	r0, #0
 801c3d6:	2001      	movlt	r0, #1
 801c3d8:	4770      	bx	lr
 801c3da:	490d      	ldr	r1, [pc, #52]	; (801c410 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801c3dc:	8809      	ldrh	r1, [r1, #0]
 801c3de:	4411      	add	r1, r2
 801c3e0:	428b      	cmp	r3, r1
 801c3e2:	da0d      	bge.n	801c400 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801c3e4:	1a9b      	subs	r3, r3, r2
 801c3e6:	4a0b      	ldr	r2, [pc, #44]	; (801c414 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801c3e8:	6812      	ldr	r2, [r2, #0]
 801c3ea:	210e      	movs	r1, #14
 801c3ec:	fb01 2303 	mla	r3, r1, r3, r2
 801c3f0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801c3f4:	891a      	ldrh	r2, [r3, #8]
 801c3f6:	4291      	cmp	r1, r2
 801c3f8:	db04      	blt.n	801c404 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801c3fa:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801c3fe:	e7e6      	b.n	801c3ce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801c400:	2000      	movs	r0, #0
 801c402:	4770      	bx	lr
 801c404:	2001      	movs	r0, #1
 801c406:	4770      	bx	lr
 801c408:	200138c4 	.word	0x200138c4
 801c40c:	200138cc 	.word	0x200138cc
 801c410:	200138c8 	.word	0x200138c8
 801c414:	200138ac 	.word	0x200138ac

0801c418 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801c418:	4a12      	ldr	r2, [pc, #72]	; (801c464 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801c41a:	8803      	ldrh	r3, [r0, #0]
 801c41c:	8811      	ldrh	r1, [r2, #0]
 801c41e:	428b      	cmp	r3, r1
 801c420:	d20b      	bcs.n	801c43a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801c422:	4a11      	ldr	r2, [pc, #68]	; (801c468 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c424:	6812      	ldr	r2, [r2, #0]
 801c426:	b112      	cbz	r2, 801c42e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801c428:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c42c:	b9c0      	cbnz	r0, 801c460 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801c42e:	4a0f      	ldr	r2, [pc, #60]	; (801c46c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801c430:	6811      	ldr	r1, [r2, #0]
 801c432:	2214      	movs	r2, #20
 801c434:	4353      	muls	r3, r2
 801c436:	58c8      	ldr	r0, [r1, r3]
 801c438:	4770      	bx	lr
 801c43a:	4a0d      	ldr	r2, [pc, #52]	; (801c470 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801c43c:	8812      	ldrh	r2, [r2, #0]
 801c43e:	440a      	add	r2, r1
 801c440:	4293      	cmp	r3, r2
 801c442:	da04      	bge.n	801c44e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801c444:	4a08      	ldr	r2, [pc, #32]	; (801c468 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801c446:	6812      	ldr	r2, [r2, #0]
 801c448:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801c44c:	4770      	bx	lr
 801c44e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c452:	4293      	cmp	r3, r2
 801c454:	d103      	bne.n	801c45e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801c456:	4b07      	ldr	r3, [pc, #28]	; (801c474 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801c458:	681b      	ldr	r3, [r3, #0]
 801c45a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801c45c:	4770      	bx	lr
 801c45e:	2000      	movs	r0, #0
 801c460:	4770      	bx	lr
 801c462:	bf00      	nop
 801c464:	200138c4 	.word	0x200138c4
 801c468:	200138a8 	.word	0x200138a8
 801c46c:	200138cc 	.word	0x200138cc
 801c470:	200138c8 	.word	0x200138c8
 801c474:	2001383c 	.word	0x2001383c

0801c478 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801c478:	4b24      	ldr	r3, [pc, #144]	; (801c50c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801c47a:	8802      	ldrh	r2, [r0, #0]
 801c47c:	8818      	ldrh	r0, [r3, #0]
 801c47e:	4282      	cmp	r2, r0
 801c480:	d221      	bcs.n	801c4c6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801c482:	4b23      	ldr	r3, [pc, #140]	; (801c510 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801c484:	6819      	ldr	r1, [r3, #0]
 801c486:	2314      	movs	r3, #20
 801c488:	fb03 1302 	mla	r3, r3, r2, r1
 801c48c:	6858      	ldr	r0, [r3, #4]
 801c48e:	2800      	cmp	r0, #0
 801c490:	d03a      	beq.n	801c508 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c492:	4920      	ldr	r1, [pc, #128]	; (801c514 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c494:	6809      	ldr	r1, [r1, #0]
 801c496:	2900      	cmp	r1, #0
 801c498:	d036      	beq.n	801c508 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c49a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801c49e:	2900      	cmp	r1, #0
 801c4a0:	d032      	beq.n	801c508 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801c4a2:	891a      	ldrh	r2, [r3, #8]
 801c4a4:	8958      	ldrh	r0, [r3, #10]
 801c4a6:	4350      	muls	r0, r2
 801c4a8:	7c5a      	ldrb	r2, [r3, #17]
 801c4aa:	7cdb      	ldrb	r3, [r3, #19]
 801c4ac:	0952      	lsrs	r2, r2, #5
 801c4ae:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801c4b2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801c4b6:	2b0b      	cmp	r3, #11
 801c4b8:	bf18      	it	ne
 801c4ba:	0040      	lslne	r0, r0, #1
 801c4bc:	3003      	adds	r0, #3
 801c4be:	f020 0003 	bic.w	r0, r0, #3
 801c4c2:	4408      	add	r0, r1
 801c4c4:	4770      	bx	lr
 801c4c6:	4b14      	ldr	r3, [pc, #80]	; (801c518 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801c4c8:	881b      	ldrh	r3, [r3, #0]
 801c4ca:	4403      	add	r3, r0
 801c4cc:	429a      	cmp	r2, r3
 801c4ce:	da1a      	bge.n	801c506 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c4d0:	4b12      	ldr	r3, [pc, #72]	; (801c51c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801c4d2:	681b      	ldr	r3, [r3, #0]
 801c4d4:	1a10      	subs	r0, r2, r0
 801c4d6:	210e      	movs	r1, #14
 801c4d8:	fb01 3000 	mla	r0, r1, r0, r3
 801c4dc:	7b03      	ldrb	r3, [r0, #12]
 801c4de:	f003 031f 	and.w	r3, r3, #31
 801c4e2:	2b0b      	cmp	r3, #11
 801c4e4:	d10b      	bne.n	801c4fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801c4e6:	8903      	ldrh	r3, [r0, #8]
 801c4e8:	8940      	ldrh	r0, [r0, #10]
 801c4ea:	4358      	muls	r0, r3
 801c4ec:	4b09      	ldr	r3, [pc, #36]	; (801c514 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801c4ee:	6819      	ldr	r1, [r3, #0]
 801c4f0:	3003      	adds	r0, #3
 801c4f2:	f020 0303 	bic.w	r3, r0, #3
 801c4f6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801c4fa:	4418      	add	r0, r3
 801c4fc:	4770      	bx	lr
 801c4fe:	2b0d      	cmp	r3, #13
 801c500:	d101      	bne.n	801c506 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801c502:	300d      	adds	r0, #13
 801c504:	4770      	bx	lr
 801c506:	2000      	movs	r0, #0
 801c508:	4770      	bx	lr
 801c50a:	bf00      	nop
 801c50c:	200138c4 	.word	0x200138c4
 801c510:	200138cc 	.word	0x200138cc
 801c514:	200138a8 	.word	0x200138a8
 801c518:	200138c8 	.word	0x200138c8
 801c51c:	200138ac 	.word	0x200138ac

0801c520 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801c520:	b510      	push	{r4, lr}
 801c522:	4a17      	ldr	r2, [pc, #92]	; (801c580 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801c524:	8803      	ldrh	r3, [r0, #0]
 801c526:	8812      	ldrh	r2, [r2, #0]
 801c528:	4293      	cmp	r3, r2
 801c52a:	d20c      	bcs.n	801c546 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801c52c:	4a15      	ldr	r2, [pc, #84]	; (801c584 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801c52e:	6812      	ldr	r2, [r2, #0]
 801c530:	2114      	movs	r1, #20
 801c532:	fb01 2303 	mla	r3, r1, r3, r2
 801c536:	7c58      	ldrb	r0, [r3, #17]
 801c538:	0942      	lsrs	r2, r0, #5
 801c53a:	7cd8      	ldrb	r0, [r3, #19]
 801c53c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801c540:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801c544:	bd10      	pop	{r4, pc}
 801c546:	4910      	ldr	r1, [pc, #64]	; (801c588 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801c548:	8809      	ldrh	r1, [r1, #0]
 801c54a:	4411      	add	r1, r2
 801c54c:	428b      	cmp	r3, r1
 801c54e:	da09      	bge.n	801c564 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801c550:	1a9b      	subs	r3, r3, r2
 801c552:	4a0e      	ldr	r2, [pc, #56]	; (801c58c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801c554:	6812      	ldr	r2, [r2, #0]
 801c556:	210e      	movs	r1, #14
 801c558:	fb01 2303 	mla	r3, r1, r3, r2
 801c55c:	7b18      	ldrb	r0, [r3, #12]
 801c55e:	f000 001f 	and.w	r0, r0, #31
 801c562:	e7ef      	b.n	801c544 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c564:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801c568:	4293      	cmp	r3, r2
 801c56a:	d106      	bne.n	801c57a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801c56c:	f7e8 ffb4 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 801c570:	6803      	ldr	r3, [r0, #0]
 801c572:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c576:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c578:	4718      	bx	r3
 801c57a:	2000      	movs	r0, #0
 801c57c:	e7e2      	b.n	801c544 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801c57e:	bf00      	nop
 801c580:	200138c4 	.word	0x200138c4
 801c584:	200138cc 	.word	0x200138cc
 801c588:	200138c8 	.word	0x200138c8
 801c58c:	200138ac 	.word	0x200138ac

0801c590 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801c590:	2010      	movs	r0, #16
 801c592:	4770      	bx	lr

0801c594 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801c594:	2000      	movs	r0, #0
 801c596:	4770      	bx	lr

0801c598 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801c598:	4b02      	ldr	r3, [pc, #8]	; (801c5a4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801c59a:	8818      	ldrh	r0, [r3, #0]
 801c59c:	0040      	lsls	r0, r0, #1
 801c59e:	b280      	uxth	r0, r0
 801c5a0:	4770      	bx	lr
 801c5a2:	bf00      	nop
 801c5a4:	20013836 	.word	0x20013836

0801c5a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801c5a8:	2bff      	cmp	r3, #255	; 0xff
 801c5aa:	d050      	beq.n	801c64e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801c5ac:	2a0b      	cmp	r2, #11
 801c5ae:	d04a      	beq.n	801c646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5b0:	d80e      	bhi.n	801c5d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801c5b2:	2a03      	cmp	r2, #3
 801c5b4:	d03f      	beq.n	801c636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801c5b6:	d804      	bhi.n	801c5c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801c5b8:	2a01      	cmp	r2, #1
 801c5ba:	d03e      	beq.n	801c63a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801c5bc:	d93f      	bls.n	801c63e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801c5be:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801c5c0:	4770      	bx	lr
 801c5c2:	2a09      	cmp	r2, #9
 801c5c4:	d03f      	beq.n	801c646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801c5c6:	d83c      	bhi.n	801c642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5c8:	2a08      	cmp	r2, #8
 801c5ca:	d03a      	beq.n	801c642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801c5cc:	2000      	movs	r0, #0
 801c5ce:	4770      	bx	lr
 801c5d0:	2a2f      	cmp	r2, #47	; 0x2f
 801c5d2:	d024      	beq.n	801c61e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801c5d4:	d80d      	bhi.n	801c5f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801c5d6:	2a2d      	cmp	r2, #45	; 0x2d
 801c5d8:	d014      	beq.n	801c604 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801c5da:	d826      	bhi.n	801c62a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801c5dc:	2a2c      	cmp	r2, #44	; 0x2c
 801c5de:	d1f5      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5e0:	684b      	ldr	r3, [r1, #4]
 801c5e2:	781b      	ldrb	r3, [r3, #0]
 801c5e4:	2b01      	cmp	r3, #1
 801c5e6:	d018      	beq.n	801c61a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801c5e8:	d323      	bcc.n	801c632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801c5ea:	2b02      	cmp	r3, #2
 801c5ec:	d1ee      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c5ee:	6880      	ldr	r0, [r0, #8]
 801c5f0:	4770      	bx	lr
 801c5f2:	2a31      	cmp	r2, #49	; 0x31
 801c5f4:	d004      	beq.n	801c600 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801c5f6:	d328      	bcc.n	801c64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c5f8:	2a32      	cmp	r2, #50	; 0x32
 801c5fa:	d026      	beq.n	801c64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801c5fc:	2a33      	cmp	r2, #51	; 0x33
 801c5fe:	d1e5      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c600:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801c602:	4770      	bx	lr
 801c604:	684b      	ldr	r3, [r1, #4]
 801c606:	781b      	ldrb	r3, [r3, #0]
 801c608:	2b01      	cmp	r3, #1
 801c60a:	d004      	beq.n	801c616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801c60c:	d30b      	bcc.n	801c626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801c60e:	2b02      	cmp	r3, #2
 801c610:	d1dc      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c612:	6900      	ldr	r0, [r0, #16]
 801c614:	4770      	bx	lr
 801c616:	6a00      	ldr	r0, [r0, #32]
 801c618:	4770      	bx	lr
 801c61a:	6980      	ldr	r0, [r0, #24]
 801c61c:	4770      	bx	lr
 801c61e:	684b      	ldr	r3, [r1, #4]
 801c620:	781b      	ldrb	r3, [r3, #0]
 801c622:	2b00      	cmp	r3, #0
 801c624:	d1d2      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c626:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801c628:	4770      	bx	lr
 801c62a:	684b      	ldr	r3, [r1, #4]
 801c62c:	781b      	ldrb	r3, [r3, #0]
 801c62e:	2b00      	cmp	r3, #0
 801c630:	d1cc      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c632:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801c634:	4770      	bx	lr
 801c636:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801c638:	4770      	bx	lr
 801c63a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801c63c:	4770      	bx	lr
 801c63e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801c640:	4770      	bx	lr
 801c642:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801c644:	4770      	bx	lr
 801c646:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801c648:	4770      	bx	lr
 801c64a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801c64c:	4770      	bx	lr
 801c64e:	2a0b      	cmp	r2, #11
 801c650:	d049      	beq.n	801c6e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c652:	d80e      	bhi.n	801c672 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801c654:	2a03      	cmp	r2, #3
 801c656:	d040      	beq.n	801c6da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801c658:	d804      	bhi.n	801c664 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801c65a:	2a01      	cmp	r2, #1
 801c65c:	d03f      	beq.n	801c6de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801c65e:	d940      	bls.n	801c6e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801c660:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801c662:	4770      	bx	lr
 801c664:	2a09      	cmp	r2, #9
 801c666:	d03e      	beq.n	801c6e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801c668:	d801      	bhi.n	801c66e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801c66a:	2a08      	cmp	r2, #8
 801c66c:	d1ae      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c66e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801c670:	4770      	bx	lr
 801c672:	2a2f      	cmp	r2, #47	; 0x2f
 801c674:	d024      	beq.n	801c6c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801c676:	d80d      	bhi.n	801c694 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801c678:	2a2d      	cmp	r2, #45	; 0x2d
 801c67a:	d014      	beq.n	801c6a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801c67c:	d826      	bhi.n	801c6cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801c67e:	2a2c      	cmp	r2, #44	; 0x2c
 801c680:	d1a4      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c682:	684b      	ldr	r3, [r1, #4]
 801c684:	781b      	ldrb	r3, [r3, #0]
 801c686:	2b01      	cmp	r3, #1
 801c688:	d018      	beq.n	801c6bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801c68a:	d324      	bcc.n	801c6d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801c68c:	2b02      	cmp	r3, #2
 801c68e:	d19d      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c690:	68c0      	ldr	r0, [r0, #12]
 801c692:	4770      	bx	lr
 801c694:	2a31      	cmp	r2, #49	; 0x31
 801c696:	d004      	beq.n	801c6a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801c698:	d327      	bcc.n	801c6ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c69a:	2a32      	cmp	r2, #50	; 0x32
 801c69c:	d025      	beq.n	801c6ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801c69e:	2a33      	cmp	r2, #51	; 0x33
 801c6a0:	d194      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6a2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801c6a4:	4770      	bx	lr
 801c6a6:	684b      	ldr	r3, [r1, #4]
 801c6a8:	781b      	ldrb	r3, [r3, #0]
 801c6aa:	2b01      	cmp	r3, #1
 801c6ac:	d004      	beq.n	801c6b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801c6ae:	d30b      	bcc.n	801c6c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801c6b0:	2b02      	cmp	r3, #2
 801c6b2:	d18b      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6b4:	6940      	ldr	r0, [r0, #20]
 801c6b6:	4770      	bx	lr
 801c6b8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801c6ba:	4770      	bx	lr
 801c6bc:	69c0      	ldr	r0, [r0, #28]
 801c6be:	4770      	bx	lr
 801c6c0:	684b      	ldr	r3, [r1, #4]
 801c6c2:	781b      	ldrb	r3, [r3, #0]
 801c6c4:	2b00      	cmp	r3, #0
 801c6c6:	d181      	bne.n	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6c8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801c6ca:	4770      	bx	lr
 801c6cc:	684b      	ldr	r3, [r1, #4]
 801c6ce:	781b      	ldrb	r3, [r3, #0]
 801c6d0:	2b00      	cmp	r3, #0
 801c6d2:	f47f af7b 	bne.w	801c5cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801c6d6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801c6d8:	4770      	bx	lr
 801c6da:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801c6dc:	4770      	bx	lr
 801c6de:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801c6e0:	4770      	bx	lr
 801c6e2:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801c6e4:	4770      	bx	lr
 801c6e6:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801c6e8:	4770      	bx	lr
 801c6ea:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801c6ec:	4770      	bx	lr

0801c6ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c6ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6f2:	b087      	sub	sp, #28
 801c6f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c6f6:	9205      	str	r2, [sp, #20]
 801c6f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c6fc:	9202      	str	r2, [sp, #8]
 801c6fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c702:	9101      	str	r1, [sp, #4]
 801c704:	6841      	ldr	r1, [r0, #4]
 801c706:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801c70a:	fb01 2404 	mla	r4, r1, r4, r2
 801c70e:	6802      	ldr	r2, [r0, #0]
 801c710:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c714:	f8de 2000 	ldr.w	r2, [lr]
 801c718:	9203      	str	r2, [sp, #12]
 801c71a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801c71e:	3204      	adds	r2, #4
 801c720:	9204      	str	r2, [sp, #16]
 801c722:	9a02      	ldr	r2, [sp, #8]
 801c724:	43d6      	mvns	r6, r2
 801c726:	b2f6      	uxtb	r6, r6
 801c728:	9a01      	ldr	r2, [sp, #4]
 801c72a:	2a00      	cmp	r2, #0
 801c72c:	dc03      	bgt.n	801c736 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c72e:	9a05      	ldr	r2, [sp, #20]
 801c730:	2a00      	cmp	r2, #0
 801c732:	f340 8129 	ble.w	801c988 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c736:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c738:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801c73c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801c740:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c744:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c746:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c74a:	2b00      	cmp	r3, #0
 801c74c:	dd0e      	ble.n	801c76c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c74e:	1408      	asrs	r0, r1, #16
 801c750:	d405      	bmi.n	801c75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c752:	4560      	cmp	r0, ip
 801c754:	da03      	bge.n	801c75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c756:	1410      	asrs	r0, r2, #16
 801c758:	d401      	bmi.n	801c75e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c75a:	42b8      	cmp	r0, r7
 801c75c:	db07      	blt.n	801c76e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c75e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c760:	4401      	add	r1, r0
 801c762:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c764:	3b01      	subs	r3, #1
 801c766:	4402      	add	r2, r0
 801c768:	3402      	adds	r4, #2
 801c76a:	e7ee      	b.n	801c74a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c76c:	d071      	beq.n	801c852 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c76e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c770:	1e58      	subs	r0, r3, #1
 801c772:	fb05 1500 	mla	r5, r5, r0, r1
 801c776:	142d      	asrs	r5, r5, #16
 801c778:	d45f      	bmi.n	801c83a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c77a:	4565      	cmp	r5, ip
 801c77c:	da5d      	bge.n	801c83a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c77e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c780:	fb05 2000 	mla	r0, r5, r0, r2
 801c784:	1400      	asrs	r0, r0, #16
 801c786:	d458      	bmi.n	801c83a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c788:	42b8      	cmp	r0, r7
 801c78a:	da56      	bge.n	801c83a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801c78c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801c790:	4699      	mov	r9, r3
 801c792:	46a2      	mov	sl, r4
 801c794:	f1b9 0f00 	cmp.w	r9, #0
 801c798:	dd57      	ble.n	801c84a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801c79a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c79e:	9803      	ldr	r0, [sp, #12]
 801c7a0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801c7a4:	140d      	asrs	r5, r1, #16
 801c7a6:	fb07 000c 	mla	r0, r7, ip, r0
 801c7aa:	f109 39ff 	add.w	r9, r9, #4294967295
 801c7ae:	5d40      	ldrb	r0, [r0, r5]
 801c7b0:	9d04      	ldr	r5, [sp, #16]
 801c7b2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c7b6:	f8ba 5000 	ldrh.w	r5, [sl]
 801c7ba:	122f      	asrs	r7, r5, #8
 801c7bc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c7c0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c7c4:	fb17 f706 	smulbb	r7, r7, r6
 801c7c8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c7cc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c7d0:	00ed      	lsls	r5, r5, #3
 801c7d2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c7d6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c7da:	10c7      	asrs	r7, r0, #3
 801c7dc:	b2ed      	uxtb	r5, r5
 801c7de:	00c0      	lsls	r0, r0, #3
 801c7e0:	fb18 f806 	smulbb	r8, r8, r6
 801c7e4:	fb15 f506 	smulbb	r5, r5, r6
 801c7e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7ec:	b2c0      	uxtb	r0, r0
 801c7ee:	fa1f fc8c 	uxth.w	ip, ip
 801c7f2:	fb07 870b 	mla	r7, r7, fp, r8
 801c7f6:	fb00 500b 	mla	r0, r0, fp, r5
 801c7fa:	b280      	uxth	r0, r0
 801c7fc:	b2bf      	uxth	r7, r7
 801c7fe:	f10c 0501 	add.w	r5, ip, #1
 801c802:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c806:	f107 0801 	add.w	r8, r7, #1
 801c80a:	1c45      	adds	r5, r0, #1
 801c80c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c810:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c814:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c816:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c81a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c81e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c822:	ea45 0c0c 	orr.w	ip, r5, ip
 801c826:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c82a:	4401      	add	r1, r0
 801c82c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c82e:	ea4c 0c08 	orr.w	ip, ip, r8
 801c832:	f82a cb02 	strh.w	ip, [sl], #2
 801c836:	4402      	add	r2, r0
 801c838:	e7ac      	b.n	801c794 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c83a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801c83e:	f04f 0800 	mov.w	r8, #0
 801c842:	eb03 0008 	add.w	r0, r3, r8
 801c846:	2800      	cmp	r0, #0
 801c848:	dc41      	bgt.n	801c8ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801c84a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c84e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c852:	9b01      	ldr	r3, [sp, #4]
 801c854:	2b00      	cmp	r3, #0
 801c856:	f340 8097 	ble.w	801c988 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801c85a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c85e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c862:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c866:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c868:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c86c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c870:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c874:	eef0 6a62 	vmov.f32	s13, s5
 801c878:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c87c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c880:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c884:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801c888:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c88c:	eef0 6a43 	vmov.f32	s13, s6
 801c890:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c894:	ee12 2a90 	vmov	r2, s5
 801c898:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c89c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8a0:	ee13 2a10 	vmov	r2, s6
 801c8a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8ac:	9314      	str	r3, [sp, #80]	; 0x50
 801c8ae:	9b01      	ldr	r3, [sp, #4]
 801c8b0:	9a05      	ldr	r2, [sp, #20]
 801c8b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c8b6:	3b01      	subs	r3, #1
 801c8b8:	9301      	str	r3, [sp, #4]
 801c8ba:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801c8be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8c0:	eeb0 3a67 	vmov.f32	s6, s15
 801c8c4:	bf08      	it	eq
 801c8c6:	4613      	moveq	r3, r2
 801c8c8:	eef0 2a47 	vmov.f32	s5, s14
 801c8cc:	e72c      	b.n	801c728 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c8ce:	140f      	asrs	r7, r1, #16
 801c8d0:	d453      	bmi.n	801c97a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8d2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c8d6:	42bd      	cmp	r5, r7
 801c8d8:	dd4f      	ble.n	801c97a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c8de:	d44c      	bmi.n	801c97a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8e0:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c8e4:	4560      	cmp	r0, ip
 801c8e6:	dd48      	ble.n	801c97a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c8e8:	9803      	ldr	r0, [sp, #12]
 801c8ea:	b22d      	sxth	r5, r5
 801c8ec:	fb0c 0505 	mla	r5, ip, r5, r0
 801c8f0:	5de8      	ldrb	r0, [r5, r7]
 801c8f2:	9d04      	ldr	r5, [sp, #16]
 801c8f4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c8f8:	f06f 0501 	mvn.w	r5, #1
 801c8fc:	fb05 fb08 	mul.w	fp, r5, r8
 801c900:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c904:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c908:	122f      	asrs	r7, r5, #8
 801c90a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c90e:	fb17 f706 	smulbb	r7, r7, r6
 801c912:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c916:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c91a:	00ed      	lsls	r5, r5, #3
 801c91c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c920:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c924:	10c7      	asrs	r7, r0, #3
 801c926:	b2ed      	uxtb	r5, r5
 801c928:	00c0      	lsls	r0, r0, #3
 801c92a:	fb19 f906 	smulbb	r9, r9, r6
 801c92e:	fb15 f506 	smulbb	r5, r5, r6
 801c932:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c936:	b2c0      	uxtb	r0, r0
 801c938:	fa1f fc8c 	uxth.w	ip, ip
 801c93c:	fb07 970a 	mla	r7, r7, sl, r9
 801c940:	fb00 500a 	mla	r0, r0, sl, r5
 801c944:	b2bf      	uxth	r7, r7
 801c946:	b280      	uxth	r0, r0
 801c948:	f10c 0501 	add.w	r5, ip, #1
 801c94c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c950:	f107 0901 	add.w	r9, r7, #1
 801c954:	1c45      	adds	r5, r0, #1
 801c956:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c95a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c95e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c962:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c966:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c96a:	ea45 0c0c 	orr.w	ip, r5, ip
 801c96e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c972:	ea4c 0c09 	orr.w	ip, ip, r9
 801c976:	f824 c00b 	strh.w	ip, [r4, fp]
 801c97a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c97c:	4401      	add	r1, r0
 801c97e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801c980:	f108 38ff 	add.w	r8, r8, #4294967295
 801c984:	4402      	add	r2, r0
 801c986:	e75c      	b.n	801c842 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801c988:	b007      	add	sp, #28
 801c98a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c98e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c98e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c992:	b085      	sub	sp, #20
 801c994:	4693      	mov	fp, r2
 801c996:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c998:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c99a:	6870      	ldr	r0, [r6, #4]
 801c99c:	9100      	str	r1, [sp, #0]
 801c99e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c9a2:	fb00 2404 	mla	r4, r0, r4, r2
 801c9a6:	6832      	ldr	r2, [r6, #0]
 801c9a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c9ac:	682a      	ldr	r2, [r5, #0]
 801c9ae:	9201      	str	r2, [sp, #4]
 801c9b0:	686a      	ldr	r2, [r5, #4]
 801c9b2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c9b6:	3204      	adds	r2, #4
 801c9b8:	9202      	str	r2, [sp, #8]
 801c9ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c9be:	9a00      	ldr	r2, [sp, #0]
 801c9c0:	2a00      	cmp	r2, #0
 801c9c2:	dc03      	bgt.n	801c9cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c9c4:	f1bb 0f00 	cmp.w	fp, #0
 801c9c8:	f340 80a0 	ble.w	801cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801c9cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c9ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c9d2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c9d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c9da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c9dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c9e0:	2b00      	cmp	r3, #0
 801c9e2:	dd0c      	ble.n	801c9fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c9e4:	1406      	asrs	r6, r0, #16
 801c9e6:	d405      	bmi.n	801c9f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9e8:	454e      	cmp	r6, r9
 801c9ea:	da03      	bge.n	801c9f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9ec:	1416      	asrs	r6, r2, #16
 801c9ee:	d401      	bmi.n	801c9f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c9f0:	4546      	cmp	r6, r8
 801c9f2:	db05      	blt.n	801ca00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9f4:	4470      	add	r0, lr
 801c9f6:	4462      	add	r2, ip
 801c9f8:	3b01      	subs	r3, #1
 801c9fa:	3402      	adds	r4, #2
 801c9fc:	e7f0      	b.n	801c9e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c9fe:	d00f      	beq.n	801ca20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ca00:	1e5e      	subs	r6, r3, #1
 801ca02:	fb0e 0706 	mla	r7, lr, r6, r0
 801ca06:	143f      	asrs	r7, r7, #16
 801ca08:	d541      	bpl.n	801ca8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ca0a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ca0e:	4698      	mov	r8, r3
 801ca10:	9603      	str	r6, [sp, #12]
 801ca12:	f1b8 0f00 	cmp.w	r8, #0
 801ca16:	dc59      	bgt.n	801cacc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ca18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca20:	9b00      	ldr	r3, [sp, #0]
 801ca22:	2b00      	cmp	r3, #0
 801ca24:	dd72      	ble.n	801cb0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ca26:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca2e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca34:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca3c:	eeb0 6a62 	vmov.f32	s12, s5
 801ca40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca44:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca48:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca4c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ca50:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca54:	eeb0 6a43 	vmov.f32	s12, s6
 801ca58:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca5c:	ee12 2a90 	vmov	r2, s5
 801ca60:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca64:	fb92 fef3 	sdiv	lr, r2, r3
 801ca68:	ee13 2a10 	vmov	r2, s6
 801ca6c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ca70:	9b00      	ldr	r3, [sp, #0]
 801ca72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca76:	3b01      	subs	r3, #1
 801ca78:	9300      	str	r3, [sp, #0]
 801ca7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ca7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ca80:	eeb0 3a67 	vmov.f32	s6, s15
 801ca84:	bf08      	it	eq
 801ca86:	465b      	moveq	r3, fp
 801ca88:	eef0 2a47 	vmov.f32	s5, s14
 801ca8c:	e797      	b.n	801c9be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ca8e:	454f      	cmp	r7, r9
 801ca90:	dabb      	bge.n	801ca0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca92:	fb0c 2606 	mla	r6, ip, r6, r2
 801ca96:	1436      	asrs	r6, r6, #16
 801ca98:	d4b7      	bmi.n	801ca0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca9a:	4546      	cmp	r6, r8
 801ca9c:	dab5      	bge.n	801ca0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ca9e:	461e      	mov	r6, r3
 801caa0:	46a0      	mov	r8, r4
 801caa2:	2e00      	cmp	r6, #0
 801caa4:	ddb8      	ble.n	801ca18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801caa6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801caaa:	9901      	ldr	r1, [sp, #4]
 801caac:	1417      	asrs	r7, r2, #16
 801caae:	ea4f 4920 	mov.w	r9, r0, asr #16
 801cab2:	fb0a 1707 	mla	r7, sl, r7, r1
 801cab6:	9902      	ldr	r1, [sp, #8]
 801cab8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801cabc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801cac0:	f828 7b02 	strh.w	r7, [r8], #2
 801cac4:	4470      	add	r0, lr
 801cac6:	4462      	add	r2, ip
 801cac8:	3e01      	subs	r6, #1
 801caca:	e7ea      	b.n	801caa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801cacc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cad0:	d417      	bmi.n	801cb02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cad2:	68ae      	ldr	r6, [r5, #8]
 801cad4:	454e      	cmp	r6, r9
 801cad6:	dd14      	ble.n	801cb02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cad8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801cadc:	d411      	bmi.n	801cb02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cade:	68ef      	ldr	r7, [r5, #12]
 801cae0:	4557      	cmp	r7, sl
 801cae2:	dd0e      	ble.n	801cb02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801cae4:	9f01      	ldr	r7, [sp, #4]
 801cae6:	b236      	sxth	r6, r6
 801cae8:	fb0a 7606 	mla	r6, sl, r6, r7
 801caec:	9f02      	ldr	r7, [sp, #8]
 801caee:	f816 6009 	ldrb.w	r6, [r6, r9]
 801caf2:	f06f 0101 	mvn.w	r1, #1
 801caf6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801cafa:	fb01 f608 	mul.w	r6, r1, r8
 801cafe:	9903      	ldr	r1, [sp, #12]
 801cb00:	538f      	strh	r7, [r1, r6]
 801cb02:	4470      	add	r0, lr
 801cb04:	4462      	add	r2, ip
 801cb06:	f108 38ff 	add.w	r8, r8, #4294967295
 801cb0a:	e782      	b.n	801ca12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb0c:	b005      	add	sp, #20
 801cb0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cb12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb16:	b087      	sub	sp, #28
 801cb18:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801cb1a:	9205      	str	r2, [sp, #20]
 801cb1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cb20:	9203      	str	r2, [sp, #12]
 801cb22:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801cb26:	9102      	str	r1, [sp, #8]
 801cb28:	6861      	ldr	r1, [r4, #4]
 801cb2a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cb2e:	fb01 2000 	mla	r0, r1, r0, r2
 801cb32:	6822      	ldr	r2, [r4, #0]
 801cb34:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801cb38:	9200      	str	r2, [sp, #0]
 801cb3a:	f8dc 2000 	ldr.w	r2, [ip]
 801cb3e:	9204      	str	r2, [sp, #16]
 801cb40:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cb44:	3204      	adds	r2, #4
 801cb46:	9201      	str	r2, [sp, #4]
 801cb48:	9a03      	ldr	r2, [sp, #12]
 801cb4a:	43d5      	mvns	r5, r2
 801cb4c:	b2ed      	uxtb	r5, r5
 801cb4e:	9a02      	ldr	r2, [sp, #8]
 801cb50:	2a00      	cmp	r2, #0
 801cb52:	dc03      	bgt.n	801cb5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cb54:	9a05      	ldr	r2, [sp, #20]
 801cb56:	2a00      	cmp	r2, #0
 801cb58:	f340 812c 	ble.w	801cdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cb5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb5e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801cb62:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801cb66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb6a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb6c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801cb70:	2b00      	cmp	r3, #0
 801cb72:	dd10      	ble.n	801cb96 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cb74:	140c      	asrs	r4, r1, #16
 801cb76:	d405      	bmi.n	801cb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb78:	4574      	cmp	r4, lr
 801cb7a:	da03      	bge.n	801cb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb7c:	1414      	asrs	r4, r2, #16
 801cb7e:	d401      	bmi.n	801cb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cb80:	42bc      	cmp	r4, r7
 801cb82:	db09      	blt.n	801cb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801cb84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801cb86:	9800      	ldr	r0, [sp, #0]
 801cb88:	4421      	add	r1, r4
 801cb8a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801cb8c:	3002      	adds	r0, #2
 801cb8e:	4422      	add	r2, r4
 801cb90:	3b01      	subs	r3, #1
 801cb92:	9000      	str	r0, [sp, #0]
 801cb94:	e7ec      	b.n	801cb70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801cb96:	d071      	beq.n	801cc7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801cb98:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cb9a:	1e5c      	subs	r4, r3, #1
 801cb9c:	fb06 1604 	mla	r6, r6, r4, r1
 801cba0:	1436      	asrs	r6, r6, #16
 801cba2:	d45d      	bmi.n	801cc60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cba4:	4576      	cmp	r6, lr
 801cba6:	da5b      	bge.n	801cc60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cba8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801cbaa:	fb06 2404 	mla	r4, r6, r4, r2
 801cbae:	1424      	asrs	r4, r4, #16
 801cbb0:	d456      	bmi.n	801cc60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbb2:	42bc      	cmp	r4, r7
 801cbb4:	da54      	bge.n	801cc60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801cbb6:	f8dd 9000 	ldr.w	r9, [sp]
 801cbba:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801cbbe:	4698      	mov	r8, r3
 801cbc0:	f1b8 0f00 	cmp.w	r8, #0
 801cbc4:	dd54      	ble.n	801cc70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801cbc6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cbca:	9804      	ldr	r0, [sp, #16]
 801cbcc:	1414      	asrs	r4, r2, #16
 801cbce:	fb07 0404 	mla	r4, r7, r4, r0
 801cbd2:	140e      	asrs	r6, r1, #16
 801cbd4:	9801      	ldr	r0, [sp, #4]
 801cbd6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801cbda:	f8b9 4000 	ldrh.w	r4, [r9]
 801cbde:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cbe2:	eb00 0b0e 	add.w	fp, r0, lr
 801cbe6:	1227      	asrs	r7, r4, #8
 801cbe8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cbec:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cbf0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801cbf4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cbf6:	fb16 f60a 	smulbb	r6, r6, sl
 801cbfa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cbfe:	fb07 6705 	mla	r7, r7, r5, r6
 801cc02:	10e6      	asrs	r6, r4, #3
 801cc04:	00e4      	lsls	r4, r4, #3
 801cc06:	b2e4      	uxtb	r4, r4
 801cc08:	fb1b fb0a 	smulbb	fp, fp, sl
 801cc0c:	fb14 f405 	smulbb	r4, r4, r5
 801cc10:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cc14:	b2bf      	uxth	r7, r7
 801cc16:	fb06 b605 	mla	r6, r6, r5, fp
 801cc1a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801cc1e:	b2b6      	uxth	r6, r6
 801cc20:	fa1f fe8e 	uxth.w	lr, lr
 801cc24:	1c7c      	adds	r4, r7, #1
 801cc26:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cc2a:	f106 0b01 	add.w	fp, r6, #1
 801cc2e:	f10e 0401 	add.w	r4, lr, #1
 801cc32:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801cc36:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cc3a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cc3e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cc42:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cc46:	4327      	orrs	r7, r4
 801cc48:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cc4c:	4401      	add	r1, r0
 801cc4e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cc50:	ea47 070b 	orr.w	r7, r7, fp
 801cc54:	f829 7b02 	strh.w	r7, [r9], #2
 801cc58:	4402      	add	r2, r0
 801cc5a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cc5e:	e7af      	b.n	801cbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801cc60:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801cc64:	f04f 0e00 	mov.w	lr, #0
 801cc68:	eb03 040e 	add.w	r4, r3, lr
 801cc6c:	2c00      	cmp	r4, #0
 801cc6e:	dc43      	bgt.n	801ccf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801cc70:	9a00      	ldr	r2, [sp, #0]
 801cc72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cc76:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc7a:	9300      	str	r3, [sp, #0]
 801cc7c:	9b02      	ldr	r3, [sp, #8]
 801cc7e:	2b00      	cmp	r3, #0
 801cc80:	f340 8098 	ble.w	801cdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801cc84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cc88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cc8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cc90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cc96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cc9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cc9e:	eef0 6a62 	vmov.f32	s13, s5
 801cca2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cca6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ccaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ccae:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ccb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ccb6:	eef0 6a43 	vmov.f32	s13, s6
 801ccba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ccbe:	ee12 2a90 	vmov	r2, s5
 801ccc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ccc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccca:	ee13 2a10 	vmov	r2, s6
 801ccce:	9313      	str	r3, [sp, #76]	; 0x4c
 801ccd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ccd6:	9314      	str	r3, [sp, #80]	; 0x50
 801ccd8:	9b02      	ldr	r3, [sp, #8]
 801ccda:	9a05      	ldr	r2, [sp, #20]
 801ccdc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cce0:	3b01      	subs	r3, #1
 801cce2:	9302      	str	r3, [sp, #8]
 801cce4:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801cce8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ccea:	eeb0 3a67 	vmov.f32	s6, s15
 801ccee:	bf08      	it	eq
 801ccf0:	4613      	moveq	r3, r2
 801ccf2:	eef0 2a47 	vmov.f32	s5, s14
 801ccf6:	e72a      	b.n	801cb4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ccf8:	140f      	asrs	r7, r1, #16
 801ccfa:	d454      	bmi.n	801cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ccfc:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801cd00:	42be      	cmp	r6, r7
 801cd02:	dd50      	ble.n	801cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd04:	ea5f 4822 	movs.w	r8, r2, asr #16
 801cd08:	d44d      	bmi.n	801cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd0a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801cd0e:	4544      	cmp	r4, r8
 801cd10:	dd49      	ble.n	801cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801cd12:	9c04      	ldr	r4, [sp, #16]
 801cd14:	b236      	sxth	r6, r6
 801cd16:	fb08 4606 	mla	r6, r8, r6, r4
 801cd1a:	f06f 0001 	mvn.w	r0, #1
 801cd1e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801cd22:	9c01      	ldr	r4, [sp, #4]
 801cd24:	fb00 fa0e 	mul.w	sl, r0, lr
 801cd28:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801cd2c:	9800      	ldr	r0, [sp, #0]
 801cd2e:	eb04 0b08 	add.w	fp, r4, r8
 801cd32:	f830 400a 	ldrh.w	r4, [r0, sl]
 801cd36:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801cd3a:	9801      	ldr	r0, [sp, #4]
 801cd3c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801cd40:	f810 8008 	ldrb.w	r8, [r0, r8]
 801cd44:	9800      	ldr	r0, [sp, #0]
 801cd46:	1227      	asrs	r7, r4, #8
 801cd48:	fb16 f609 	smulbb	r6, r6, r9
 801cd4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801cd50:	fb07 6705 	mla	r7, r7, r5, r6
 801cd54:	10e6      	asrs	r6, r4, #3
 801cd56:	00e4      	lsls	r4, r4, #3
 801cd58:	b2e4      	uxtb	r4, r4
 801cd5a:	fb1b fb09 	smulbb	fp, fp, r9
 801cd5e:	fb14 f405 	smulbb	r4, r4, r5
 801cd62:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cd66:	b2bf      	uxth	r7, r7
 801cd68:	fb06 b605 	mla	r6, r6, r5, fp
 801cd6c:	fb08 4809 	mla	r8, r8, r9, r4
 801cd70:	b2b6      	uxth	r6, r6
 801cd72:	fa1f f888 	uxth.w	r8, r8
 801cd76:	1c7c      	adds	r4, r7, #1
 801cd78:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801cd7c:	f106 0b01 	add.w	fp, r6, #1
 801cd80:	f108 0401 	add.w	r4, r8, #1
 801cd84:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801cd88:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801cd8c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd90:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801cd94:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801cd98:	4327      	orrs	r7, r4
 801cd9a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801cd9e:	ea47 070b 	orr.w	r7, r7, fp
 801cda2:	f820 700a 	strh.w	r7, [r0, sl]
 801cda6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801cda8:	4401      	add	r1, r0
 801cdaa:	9814      	ldr	r0, [sp, #80]	; 0x50
 801cdac:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cdb0:	4402      	add	r2, r0
 801cdb2:	e759      	b.n	801cc68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801cdb4:	b007      	add	sp, #28
 801cdb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801cdbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdc0:	b085      	sub	sp, #20
 801cdc2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cdc6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801cdc8:	9203      	str	r2, [sp, #12]
 801cdca:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801cdce:	6870      	ldr	r0, [r6, #4]
 801cdd0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801cdd2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801cdd6:	686f      	ldr	r7, [r5, #4]
 801cdd8:	9101      	str	r1, [sp, #4]
 801cdda:	fb00 2404 	mla	r4, r0, r4, r2
 801cdde:	6832      	ldr	r2, [r6, #0]
 801cde0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cde4:	682a      	ldr	r2, [r5, #0]
 801cde6:	9202      	str	r2, [sp, #8]
 801cde8:	3704      	adds	r7, #4
 801cdea:	9a01      	ldr	r2, [sp, #4]
 801cdec:	2a00      	cmp	r2, #0
 801cdee:	dc03      	bgt.n	801cdf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cdf0:	9a03      	ldr	r2, [sp, #12]
 801cdf2:	2a00      	cmp	r2, #0
 801cdf4:	f340 80cc 	ble.w	801cf90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801cdf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801cdfa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cdfe:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ce02:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ce06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ce08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ce0c:	2b00      	cmp	r3, #0
 801ce0e:	dd0d      	ble.n	801ce2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ce10:	1406      	asrs	r6, r0, #16
 801ce12:	d405      	bmi.n	801ce20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce14:	454e      	cmp	r6, r9
 801ce16:	da03      	bge.n	801ce20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce18:	1416      	asrs	r6, r2, #16
 801ce1a:	d401      	bmi.n	801ce20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ce1c:	4546      	cmp	r6, r8
 801ce1e:	db06      	blt.n	801ce2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ce20:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ce22:	4460      	add	r0, ip
 801ce24:	4432      	add	r2, r6
 801ce26:	3b01      	subs	r3, #1
 801ce28:	3402      	adds	r4, #2
 801ce2a:	e7ef      	b.n	801ce0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ce2c:	d00f      	beq.n	801ce4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ce2e:	1e5e      	subs	r6, r3, #1
 801ce30:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ce34:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ce38:	d543      	bpl.n	801cec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ce3a:	4698      	mov	r8, r3
 801ce3c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ce40:	f1b8 0f00 	cmp.w	r8, #0
 801ce44:	dc71      	bgt.n	801cf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ce46:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ce4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ce4e:	9b01      	ldr	r3, [sp, #4]
 801ce50:	2b00      	cmp	r3, #0
 801ce52:	f340 809d 	ble.w	801cf90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ce56:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ce5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ce5e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ce62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ce64:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ce68:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ce6c:	eeb0 6a62 	vmov.f32	s12, s5
 801ce70:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ce74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ce78:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ce7c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ce80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ce84:	eeb0 6a43 	vmov.f32	s12, s6
 801ce88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ce8c:	ee12 2a90 	vmov	r2, s5
 801ce90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ce94:	fb92 fcf3 	sdiv	ip, r2, r3
 801ce98:	ee13 2a10 	vmov	r2, s6
 801ce9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801cea0:	9312      	str	r3, [sp, #72]	; 0x48
 801cea2:	9b01      	ldr	r3, [sp, #4]
 801cea4:	9a03      	ldr	r2, [sp, #12]
 801cea6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ceaa:	3b01      	subs	r3, #1
 801ceac:	9301      	str	r3, [sp, #4]
 801ceae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ceb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ceb4:	eeb0 3a67 	vmov.f32	s6, s15
 801ceb8:	bf08      	it	eq
 801ceba:	4613      	moveq	r3, r2
 801cebc:	eef0 2a47 	vmov.f32	s5, s14
 801cec0:	e793      	b.n	801cdea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cec2:	45ce      	cmp	lr, r9
 801cec4:	dab9      	bge.n	801ce3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cec6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cec8:	fb01 2606 	mla	r6, r1, r6, r2
 801cecc:	1436      	asrs	r6, r6, #16
 801cece:	d4b4      	bmi.n	801ce3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ced0:	4546      	cmp	r6, r8
 801ced2:	dab2      	bge.n	801ce3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ced4:	4698      	mov	r8, r3
 801ced6:	46a2      	mov	sl, r4
 801ced8:	f1b8 0f00 	cmp.w	r8, #0
 801cedc:	ddb3      	ble.n	801ce46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801cede:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801cee2:	9902      	ldr	r1, [sp, #8]
 801cee4:	1416      	asrs	r6, r2, #16
 801cee6:	fb09 1606 	mla	r6, r9, r6, r1
 801ceea:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801ceee:	492a      	ldr	r1, [pc, #168]	; (801cf98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801cef0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801cef4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cef8:	eb07 0b0e 	add.w	fp, r7, lr
 801cefc:	4460      	add	r0, ip
 801cefe:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801cf02:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801cf06:	00f6      	lsls	r6, r6, #3
 801cf08:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801cf0c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf10:	ea49 0606 	orr.w	r6, r9, r6
 801cf14:	f817 900e 	ldrb.w	r9, [r7, lr]
 801cf18:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf1a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801cf1e:	f82a 6b02 	strh.w	r6, [sl], #2
 801cf22:	440a      	add	r2, r1
 801cf24:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf28:	e7d6      	b.n	801ced8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801cf2a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801cf2e:	d429      	bmi.n	801cf84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf30:	68ae      	ldr	r6, [r5, #8]
 801cf32:	454e      	cmp	r6, r9
 801cf34:	dd26      	ble.n	801cf84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf36:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801cf3a:	d423      	bmi.n	801cf84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf3c:	68e9      	ldr	r1, [r5, #12]
 801cf3e:	4559      	cmp	r1, fp
 801cf40:	dd20      	ble.n	801cf84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801cf42:	9902      	ldr	r1, [sp, #8]
 801cf44:	fa0f fe86 	sxth.w	lr, r6
 801cf48:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801cf4c:	f06f 0101 	mvn.w	r1, #1
 801cf50:	f81e e009 	ldrb.w	lr, [lr, r9]
 801cf54:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801cf58:	eb07 060e 	add.w	r6, r7, lr
 801cf5c:	fb01 f908 	mul.w	r9, r1, r8
 801cf60:	f896 b002 	ldrb.w	fp, [r6, #2]
 801cf64:	7876      	ldrb	r6, [r6, #1]
 801cf66:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801cf6a:	00f6      	lsls	r6, r6, #3
 801cf6c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801cf70:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cf74:	ea4b 0606 	orr.w	r6, fp, r6
 801cf78:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801cf7c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801cf80:	f82a 6009 	strh.w	r6, [sl, r9]
 801cf84:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cf86:	4460      	add	r0, ip
 801cf88:	440a      	add	r2, r1
 801cf8a:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf8e:	e757      	b.n	801ce40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf90:	b005      	add	sp, #20
 801cf92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf96:	bf00      	nop
 801cf98:	fffff800 	.word	0xfffff800

0801cf9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfa0:	b087      	sub	sp, #28
 801cfa2:	468b      	mov	fp, r1
 801cfa4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cfa6:	9204      	str	r2, [sp, #16]
 801cfa8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801cfac:	9205      	str	r2, [sp, #20]
 801cfae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cfb2:	6841      	ldr	r1, [r0, #4]
 801cfb4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801cfb8:	fb01 2404 	mla	r4, r1, r4, r2
 801cfbc:	6802      	ldr	r2, [r0, #0]
 801cfbe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cfc2:	f8dc 2000 	ldr.w	r2, [ip]
 801cfc6:	9201      	str	r2, [sp, #4]
 801cfc8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801cfcc:	3204      	adds	r2, #4
 801cfce:	9202      	str	r2, [sp, #8]
 801cfd0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cfd4:	f1bb 0f00 	cmp.w	fp, #0
 801cfd8:	dc03      	bgt.n	801cfe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801cfda:	9a04      	ldr	r2, [sp, #16]
 801cfdc:	2a00      	cmp	r2, #0
 801cfde:	f340 8138 	ble.w	801d252 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801cfe2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cfe4:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801cfe8:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801cfec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cff0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cff2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cff6:	2b00      	cmp	r3, #0
 801cff8:	dd0e      	ble.n	801d018 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801cffa:	1402      	asrs	r2, r0, #16
 801cffc:	d405      	bmi.n	801d00a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cffe:	42ba      	cmp	r2, r7
 801d000:	da03      	bge.n	801d00a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d002:	140a      	asrs	r2, r1, #16
 801d004:	d401      	bmi.n	801d00a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d006:	42b2      	cmp	r2, r6
 801d008:	db07      	blt.n	801d01a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801d00a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d00c:	4410      	add	r0, r2
 801d00e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d010:	3b01      	subs	r3, #1
 801d012:	4411      	add	r1, r2
 801d014:	3402      	adds	r4, #2
 801d016:	e7ee      	b.n	801cff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801d018:	d019      	beq.n	801d04e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801d01a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d01c:	1e5a      	subs	r2, r3, #1
 801d01e:	fb05 0502 	mla	r5, r5, r2, r0
 801d022:	142d      	asrs	r5, r5, #16
 801d024:	d409      	bmi.n	801d03a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d026:	42bd      	cmp	r5, r7
 801d028:	da07      	bge.n	801d03a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d02a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d02c:	fb05 1202 	mla	r2, r5, r2, r1
 801d030:	1412      	asrs	r2, r2, #16
 801d032:	d402      	bmi.n	801d03a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801d034:	42b2      	cmp	r2, r6
 801d036:	f2c0 80ac 	blt.w	801d192 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801d03a:	f04f 0e00 	mov.w	lr, #0
 801d03e:	eb03 020e 	add.w	r2, r3, lr
 801d042:	2a00      	cmp	r2, #0
 801d044:	dc3e      	bgt.n	801d0c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801d046:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d04a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d04e:	f1bb 0f00 	cmp.w	fp, #0
 801d052:	f340 80fe 	ble.w	801d252 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801d056:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d05a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d05e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d062:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d064:	f1bb 0b01 	subs.w	fp, fp, #1
 801d068:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d06c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d070:	eeb0 6a62 	vmov.f32	s12, s5
 801d074:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d078:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d07c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d080:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d084:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d088:	eeb0 6a43 	vmov.f32	s12, s6
 801d08c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d090:	ee12 2a90 	vmov	r2, s5
 801d094:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d098:	fb92 f3f3 	sdiv	r3, r2, r3
 801d09c:	ee13 2a10 	vmov	r2, s6
 801d0a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d0a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801d0a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d0ac:	9a04      	ldr	r2, [sp, #16]
 801d0ae:	9314      	str	r3, [sp, #80]	; 0x50
 801d0b0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d0b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d0b6:	eeb0 3a67 	vmov.f32	s6, s15
 801d0ba:	bf08      	it	eq
 801d0bc:	4613      	moveq	r3, r2
 801d0be:	eef0 2a47 	vmov.f32	s5, s14
 801d0c2:	e787      	b.n	801cfd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d0c4:	1406      	asrs	r6, r0, #16
 801d0c6:	d45d      	bmi.n	801d184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0c8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801d0cc:	42b5      	cmp	r5, r6
 801d0ce:	dd59      	ble.n	801d184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0d0:	140f      	asrs	r7, r1, #16
 801d0d2:	d457      	bmi.n	801d184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0d4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801d0d8:	42ba      	cmp	r2, r7
 801d0da:	dd53      	ble.n	801d184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0dc:	9a01      	ldr	r2, [sp, #4]
 801d0de:	b22d      	sxth	r5, r5
 801d0e0:	fb07 2505 	mla	r5, r7, r5, r2
 801d0e4:	5daa      	ldrb	r2, [r5, r6]
 801d0e6:	9d02      	ldr	r5, [sp, #8]
 801d0e8:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d0ec:	0e2e      	lsrs	r6, r5, #24
 801d0ee:	d049      	beq.n	801d184 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801d0f0:	f06f 0201 	mvn.w	r2, #1
 801d0f4:	fb02 f20e 	mul.w	r2, r2, lr
 801d0f8:	9203      	str	r2, [sp, #12]
 801d0fa:	f834 8002 	ldrh.w	r8, [r4, r2]
 801d0fe:	9a05      	ldr	r2, [sp, #20]
 801d100:	4356      	muls	r6, r2
 801d102:	1c72      	adds	r2, r6, #1
 801d104:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d108:	1212      	asrs	r2, r2, #8
 801d10a:	fa1f f982 	uxth.w	r9, r2
 801d10e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801d112:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d116:	43d2      	mvns	r2, r2
 801d118:	b2d2      	uxtb	r2, r2
 801d11a:	fb16 f609 	smulbb	r6, r6, r9
 801d11e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d122:	fb07 6702 	mla	r7, r7, r2, r6
 801d126:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d12a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d12e:	b2ed      	uxtb	r5, r5
 801d130:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d134:	fa5f f888 	uxtb.w	r8, r8
 801d138:	fb15 f509 	smulbb	r5, r5, r9
 801d13c:	fb08 5502 	mla	r5, r8, r2, r5
 801d140:	b2bf      	uxth	r7, r7
 801d142:	fb1a fa09 	smulbb	sl, sl, r9
 801d146:	b2ad      	uxth	r5, r5
 801d148:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d14c:	fb06 a602 	mla	r6, r6, r2, sl
 801d150:	1c7a      	adds	r2, r7, #1
 801d152:	f105 0a01 	add.w	sl, r5, #1
 801d156:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d15a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d15e:	b2b6      	uxth	r6, r6
 801d160:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d164:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d168:	ea4a 0707 	orr.w	r7, sl, r7
 801d16c:	f106 0a01 	add.w	sl, r6, #1
 801d170:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d174:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d178:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d17c:	9a03      	ldr	r2, [sp, #12]
 801d17e:	ea47 070a 	orr.w	r7, r7, sl
 801d182:	52a7      	strh	r7, [r4, r2]
 801d184:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d186:	4410      	add	r0, r2
 801d188:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d18a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d18e:	4411      	add	r1, r2
 801d190:	e755      	b.n	801d03e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801d192:	f04f 0800 	mov.w	r8, #0
 801d196:	eba3 0208 	sub.w	r2, r3, r8
 801d19a:	2a00      	cmp	r2, #0
 801d19c:	f77f af53 	ble.w	801d046 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801d1a0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801d1a4:	9f01      	ldr	r7, [sp, #4]
 801d1a6:	140a      	asrs	r2, r1, #16
 801d1a8:	1405      	asrs	r5, r0, #16
 801d1aa:	fb06 7202 	mla	r2, r6, r2, r7
 801d1ae:	5d52      	ldrb	r2, [r2, r5]
 801d1b0:	9d02      	ldr	r5, [sp, #8]
 801d1b2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801d1b6:	0e2e      	lsrs	r6, r5, #24
 801d1b8:	d044      	beq.n	801d244 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801d1ba:	9a05      	ldr	r2, [sp, #20]
 801d1bc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801d1c0:	4356      	muls	r6, r2
 801d1c2:	1c72      	adds	r2, r6, #1
 801d1c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801d1c8:	1212      	asrs	r2, r2, #8
 801d1ca:	fa1f f982 	uxth.w	r9, r2
 801d1ce:	ea4f 272e 	mov.w	r7, lr, asr #8
 801d1d2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d1d6:	43d2      	mvns	r2, r2
 801d1d8:	b2d2      	uxtb	r2, r2
 801d1da:	fb16 f609 	smulbb	r6, r6, r9
 801d1de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d1e2:	fb07 6702 	mla	r7, r7, r2, r6
 801d1e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d1ea:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d1ee:	b2ed      	uxtb	r5, r5
 801d1f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d1f4:	fa5f fe8e 	uxtb.w	lr, lr
 801d1f8:	fb15 f509 	smulbb	r5, r5, r9
 801d1fc:	fb0e 5502 	mla	r5, lr, r2, r5
 801d200:	b2bf      	uxth	r7, r7
 801d202:	fb1a fa09 	smulbb	sl, sl, r9
 801d206:	b2ad      	uxth	r5, r5
 801d208:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d20c:	fb06 a602 	mla	r6, r6, r2, sl
 801d210:	1c7a      	adds	r2, r7, #1
 801d212:	f105 0a01 	add.w	sl, r5, #1
 801d216:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d21a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d21e:	b2b6      	uxth	r6, r6
 801d220:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d224:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d228:	ea4a 0707 	orr.w	r7, sl, r7
 801d22c:	f106 0a01 	add.w	sl, r6, #1
 801d230:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d234:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d238:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d23c:	ea47 070a 	orr.w	r7, r7, sl
 801d240:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d244:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801d246:	4410      	add	r0, r2
 801d248:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d24a:	f108 0801 	add.w	r8, r8, #1
 801d24e:	4411      	add	r1, r2
 801d250:	e7a1      	b.n	801d196 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801d252:	b007      	add	sp, #28
 801d254:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d258 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d25c:	b085      	sub	sp, #20
 801d25e:	468b      	mov	fp, r1
 801d260:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801d262:	9203      	str	r2, [sp, #12]
 801d264:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801d268:	6841      	ldr	r1, [r0, #4]
 801d26a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801d26e:	fb01 2404 	mla	r4, r1, r4, r2
 801d272:	6802      	ldr	r2, [r0, #0]
 801d274:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801d278:	f8de 2000 	ldr.w	r2, [lr]
 801d27c:	9200      	str	r2, [sp, #0]
 801d27e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d282:	3204      	adds	r2, #4
 801d284:	9201      	str	r2, [sp, #4]
 801d286:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d28a:	f1bb 0f00 	cmp.w	fp, #0
 801d28e:	dc03      	bgt.n	801d298 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d290:	9a03      	ldr	r2, [sp, #12]
 801d292:	2a00      	cmp	r2, #0
 801d294:	f340 8153 	ble.w	801d53e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d298:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d29a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d29e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d2a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d2a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d2a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d2ac:	2b00      	cmp	r3, #0
 801d2ae:	dd0e      	ble.n	801d2ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d2b0:	1408      	asrs	r0, r1, #16
 801d2b2:	d405      	bmi.n	801d2c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2b4:	42b8      	cmp	r0, r7
 801d2b6:	da03      	bge.n	801d2c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2b8:	1410      	asrs	r0, r2, #16
 801d2ba:	d401      	bmi.n	801d2c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801d2bc:	42b0      	cmp	r0, r6
 801d2be:	db07      	blt.n	801d2d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801d2c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d2c2:	4401      	add	r1, r0
 801d2c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d2c6:	3b01      	subs	r3, #1
 801d2c8:	4402      	add	r2, r0
 801d2ca:	3402      	adds	r4, #2
 801d2cc:	e7ee      	b.n	801d2ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801d2ce:	d017      	beq.n	801d300 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d2d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d2d2:	1e58      	subs	r0, r3, #1
 801d2d4:	fb05 1500 	mla	r5, r5, r0, r1
 801d2d8:	142d      	asrs	r5, r5, #16
 801d2da:	d409      	bmi.n	801d2f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2dc:	42bd      	cmp	r5, r7
 801d2de:	da07      	bge.n	801d2f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2e0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d2e2:	fb05 2000 	mla	r0, r5, r0, r2
 801d2e6:	1400      	asrs	r0, r0, #16
 801d2e8:	d402      	bmi.n	801d2f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d2ea:	42b0      	cmp	r0, r6
 801d2ec:	f2c0 80bc 	blt.w	801d468 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801d2f0:	2600      	movs	r6, #0
 801d2f2:	1998      	adds	r0, r3, r6
 801d2f4:	2800      	cmp	r0, #0
 801d2f6:	dc3e      	bgt.n	801d376 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801d2f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d2fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d300:	f1bb 0f00 	cmp.w	fp, #0
 801d304:	f340 811b 	ble.w	801d53e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801d308:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d30c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d310:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d314:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d316:	f1bb 0b01 	subs.w	fp, fp, #1
 801d31a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d31e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d322:	eeb0 6a62 	vmov.f32	s12, s5
 801d326:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d32a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d32e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d332:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d336:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d33a:	eeb0 6a43 	vmov.f32	s12, s6
 801d33e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d342:	ee12 2a90 	vmov	r2, s5
 801d346:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d34a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d34e:	ee13 2a10 	vmov	r2, s6
 801d352:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d356:	9311      	str	r3, [sp, #68]	; 0x44
 801d358:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d35a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d35e:	9a03      	ldr	r2, [sp, #12]
 801d360:	9312      	str	r3, [sp, #72]	; 0x48
 801d362:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d366:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d368:	eeb0 3a67 	vmov.f32	s6, s15
 801d36c:	bf08      	it	eq
 801d36e:	4613      	moveq	r3, r2
 801d370:	eef0 2a47 	vmov.f32	s5, s14
 801d374:	e789      	b.n	801d28a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801d376:	140f      	asrs	r7, r1, #16
 801d378:	d426      	bmi.n	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d37a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d37e:	42bd      	cmp	r5, r7
 801d380:	dd22      	ble.n	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d382:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d386:	d41f      	bmi.n	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d388:	f8de 000c 	ldr.w	r0, [lr, #12]
 801d38c:	4560      	cmp	r0, ip
 801d38e:	dd1b      	ble.n	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d390:	9800      	ldr	r0, [sp, #0]
 801d392:	b22d      	sxth	r5, r5
 801d394:	fb0c 0505 	mla	r5, ip, r5, r0
 801d398:	5de8      	ldrb	r0, [r5, r7]
 801d39a:	9d01      	ldr	r5, [sp, #4]
 801d39c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801d3a0:	0e07      	lsrs	r7, r0, #24
 801d3a2:	2fff      	cmp	r7, #255	; 0xff
 801d3a4:	d116      	bne.n	801d3d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801d3a6:	f06f 0501 	mvn.w	r5, #1
 801d3aa:	fb05 f706 	mul.w	r7, r5, r6
 801d3ae:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801d3b2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801d3b6:	0945      	lsrs	r5, r0, #5
 801d3b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3bc:	ea4c 0505 	orr.w	r5, ip, r5
 801d3c0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d3c4:	4305      	orrs	r5, r0
 801d3c6:	53e5      	strh	r5, [r4, r7]
 801d3c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d3ca:	4401      	add	r1, r0
 801d3cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d3ce:	3e01      	subs	r6, #1
 801d3d0:	4402      	add	r2, r0
 801d3d2:	e78e      	b.n	801d2f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d3d4:	b2fd      	uxtb	r5, r7
 801d3d6:	2f00      	cmp	r7, #0
 801d3d8:	d0f6      	beq.n	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d3da:	f06f 0701 	mvn.w	r7, #1
 801d3de:	4377      	muls	r7, r6
 801d3e0:	fa1f f985 	uxth.w	r9, r5
 801d3e4:	f834 8007 	ldrh.w	r8, [r4, r7]
 801d3e8:	9702      	str	r7, [sp, #8]
 801d3ea:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d3ee:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801d3f2:	43ed      	mvns	r5, r5
 801d3f4:	b2ed      	uxtb	r5, r5
 801d3f6:	fb17 f709 	smulbb	r7, r7, r9
 801d3fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d3fe:	fb0c 7c05 	mla	ip, ip, r5, r7
 801d402:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801d406:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801d40a:	b2c0      	uxtb	r0, r0
 801d40c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d410:	fa5f f888 	uxtb.w	r8, r8
 801d414:	fb10 f009 	smulbb	r0, r0, r9
 801d418:	fb08 0005 	mla	r0, r8, r5, r0
 801d41c:	b280      	uxth	r0, r0
 801d41e:	fa1f fc8c 	uxth.w	ip, ip
 801d422:	fb1a fa09 	smulbb	sl, sl, r9
 801d426:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d42a:	fb07 a705 	mla	r7, r7, r5, sl
 801d42e:	f100 0a01 	add.w	sl, r0, #1
 801d432:	f10c 0501 	add.w	r5, ip, #1
 801d436:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801d43a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801d43e:	b2bf      	uxth	r7, r7
 801d440:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d444:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d448:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d44c:	f107 0a01 	add.w	sl, r7, #1
 801d450:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d454:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d458:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d45c:	9802      	ldr	r0, [sp, #8]
 801d45e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d462:	f824 c000 	strh.w	ip, [r4, r0]
 801d466:	e7af      	b.n	801d3c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801d468:	f04f 0800 	mov.w	r8, #0
 801d46c:	eba3 0008 	sub.w	r0, r3, r8
 801d470:	2800      	cmp	r0, #0
 801d472:	f77f af41 	ble.w	801d2f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d476:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d47a:	9f00      	ldr	r7, [sp, #0]
 801d47c:	1410      	asrs	r0, r2, #16
 801d47e:	140d      	asrs	r5, r1, #16
 801d480:	fb06 7000 	mla	r0, r6, r0, r7
 801d484:	5d40      	ldrb	r0, [r0, r5]
 801d486:	9d01      	ldr	r5, [sp, #4]
 801d488:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801d48c:	0e2e      	lsrs	r6, r5, #24
 801d48e:	2eff      	cmp	r6, #255	; 0xff
 801d490:	d112      	bne.n	801d4b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801d492:	482c      	ldr	r0, [pc, #176]	; (801d544 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801d494:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801d498:	0968      	lsrs	r0, r5, #5
 801d49a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d49e:	4330      	orrs	r0, r6
 801d4a0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801d4a4:	4328      	orrs	r0, r5
 801d4a6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801d4aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d4ac:	4401      	add	r1, r0
 801d4ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 801d4b0:	f108 0801 	add.w	r8, r8, #1
 801d4b4:	4402      	add	r2, r0
 801d4b6:	e7d9      	b.n	801d46c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d4b8:	b2f0      	uxtb	r0, r6
 801d4ba:	2e00      	cmp	r6, #0
 801d4bc:	d0f5      	beq.n	801d4aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d4be:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801d4c2:	fa1f f980 	uxth.w	r9, r0
 801d4c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d4ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801d4ce:	43c0      	mvns	r0, r0
 801d4d0:	b2c0      	uxtb	r0, r0
 801d4d2:	fb16 f609 	smulbb	r6, r6, r9
 801d4d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d4da:	fb07 6700 	mla	r7, r7, r0, r6
 801d4de:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801d4e2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d4e6:	b2ed      	uxtb	r5, r5
 801d4e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4ec:	fa5f fc8c 	uxtb.w	ip, ip
 801d4f0:	fb15 f509 	smulbb	r5, r5, r9
 801d4f4:	fb0c 5500 	mla	r5, ip, r0, r5
 801d4f8:	b2bf      	uxth	r7, r7
 801d4fa:	fb1a fa09 	smulbb	sl, sl, r9
 801d4fe:	b2ad      	uxth	r5, r5
 801d500:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d504:	fb06 a600 	mla	r6, r6, r0, sl
 801d508:	1c78      	adds	r0, r7, #1
 801d50a:	f105 0a01 	add.w	sl, r5, #1
 801d50e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801d512:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d516:	b2b6      	uxth	r6, r6
 801d518:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d51c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801d520:	ea4a 0707 	orr.w	r7, sl, r7
 801d524:	f106 0a01 	add.w	sl, r6, #1
 801d528:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d52c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d530:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d534:	ea47 070a 	orr.w	r7, r7, sl
 801d538:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801d53c:	e7b5      	b.n	801d4aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d53e:	b005      	add	sp, #20
 801d540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d544:	fffff800 	.word	0xfffff800

0801d548 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d54c:	b087      	sub	sp, #28
 801d54e:	468b      	mov	fp, r1
 801d550:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801d552:	9204      	str	r2, [sp, #16]
 801d554:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d558:	9205      	str	r2, [sp, #20]
 801d55a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801d55e:	6861      	ldr	r1, [r4, #4]
 801d560:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801d564:	fb01 2000 	mla	r0, r1, r0, r2
 801d568:	6822      	ldr	r2, [r4, #0]
 801d56a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d56e:	f8de 2000 	ldr.w	r2, [lr]
 801d572:	9201      	str	r2, [sp, #4]
 801d574:	f8de 2004 	ldr.w	r2, [lr, #4]
 801d578:	9202      	str	r2, [sp, #8]
 801d57a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d57e:	f1bb 0f00 	cmp.w	fp, #0
 801d582:	dc03      	bgt.n	801d58c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801d584:	9a04      	ldr	r2, [sp, #16]
 801d586:	2a00      	cmp	r2, #0
 801d588:	f340 8142 	ble.w	801d810 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d58c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801d58e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801d592:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801d596:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d59a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d59c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d5a0:	2b00      	cmp	r3, #0
 801d5a2:	dd0e      	ble.n	801d5c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d5a4:	140c      	asrs	r4, r1, #16
 801d5a6:	d405      	bmi.n	801d5b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5a8:	42bc      	cmp	r4, r7
 801d5aa:	da03      	bge.n	801d5b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5ac:	1414      	asrs	r4, r2, #16
 801d5ae:	d401      	bmi.n	801d5b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d5b0:	42b4      	cmp	r4, r6
 801d5b2:	db07      	blt.n	801d5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801d5b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d5b6:	4421      	add	r1, r4
 801d5b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d5ba:	3b01      	subs	r3, #1
 801d5bc:	4422      	add	r2, r4
 801d5be:	3002      	adds	r0, #2
 801d5c0:	e7ee      	b.n	801d5a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d5c2:	d019      	beq.n	801d5f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801d5c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801d5c6:	1e5c      	subs	r4, r3, #1
 801d5c8:	fb05 1504 	mla	r5, r5, r4, r1
 801d5cc:	142d      	asrs	r5, r5, #16
 801d5ce:	d409      	bmi.n	801d5e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5d0:	42bd      	cmp	r5, r7
 801d5d2:	da07      	bge.n	801d5e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801d5d6:	fb05 2404 	mla	r4, r5, r4, r2
 801d5da:	1424      	asrs	r4, r4, #16
 801d5dc:	d402      	bmi.n	801d5e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801d5de:	42b4      	cmp	r4, r6
 801d5e0:	f2c0 80b1 	blt.w	801d746 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801d5e4:	f04f 0800 	mov.w	r8, #0
 801d5e8:	eb03 0408 	add.w	r4, r3, r8
 801d5ec:	2c00      	cmp	r4, #0
 801d5ee:	dc3e      	bgt.n	801d66e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801d5f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d5f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5f8:	f1bb 0f00 	cmp.w	fp, #0
 801d5fc:	f340 8108 	ble.w	801d810 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801d600:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d604:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d608:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d60c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d60e:	f1bb 0b01 	subs.w	fp, fp, #1
 801d612:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d616:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d61a:	eeb0 6a62 	vmov.f32	s12, s5
 801d61e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d622:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d626:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d62a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801d62e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d632:	eeb0 6a43 	vmov.f32	s12, s6
 801d636:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d63a:	ee12 2a90 	vmov	r2, s5
 801d63e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d642:	fb92 f3f3 	sdiv	r3, r2, r3
 801d646:	ee13 2a10 	vmov	r2, s6
 801d64a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d64e:	9313      	str	r3, [sp, #76]	; 0x4c
 801d650:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d652:	fb92 f3f3 	sdiv	r3, r2, r3
 801d656:	9a04      	ldr	r2, [sp, #16]
 801d658:	9314      	str	r3, [sp, #80]	; 0x50
 801d65a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801d65e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d660:	eeb0 3a67 	vmov.f32	s6, s15
 801d664:	bf08      	it	eq
 801d666:	4613      	moveq	r3, r2
 801d668:	eef0 2a47 	vmov.f32	s5, s14
 801d66c:	e787      	b.n	801d57e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801d66e:	140e      	asrs	r6, r1, #16
 801d670:	d462      	bmi.n	801d738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d672:	f8de 5008 	ldr.w	r5, [lr, #8]
 801d676:	42b5      	cmp	r5, r6
 801d678:	dd5e      	ble.n	801d738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d67a:	1417      	asrs	r7, r2, #16
 801d67c:	d45c      	bmi.n	801d738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d67e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801d682:	42bc      	cmp	r4, r7
 801d684:	dd58      	ble.n	801d738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d686:	b22d      	sxth	r5, r5
 801d688:	fb07 6505 	mla	r5, r7, r5, r6
 801d68c:	9c02      	ldr	r4, [sp, #8]
 801d68e:	5d66      	ldrb	r6, [r4, r5]
 801d690:	2e00      	cmp	r6, #0
 801d692:	d051      	beq.n	801d738 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801d694:	9c01      	ldr	r4, [sp, #4]
 801d696:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801d69a:	f06f 0401 	mvn.w	r4, #1
 801d69e:	fb04 f408 	mul.w	r4, r4, r8
 801d6a2:	9403      	str	r4, [sp, #12]
 801d6a4:	5b05      	ldrh	r5, [r0, r4]
 801d6a6:	9c05      	ldr	r4, [sp, #20]
 801d6a8:	4366      	muls	r6, r4
 801d6aa:	1c74      	adds	r4, r6, #1
 801d6ac:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d6b0:	1224      	asrs	r4, r4, #8
 801d6b2:	b2a7      	uxth	r7, r4
 801d6b4:	122e      	asrs	r6, r5, #8
 801d6b6:	43e4      	mvns	r4, r4
 801d6b8:	b2e4      	uxtb	r4, r4
 801d6ba:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801d6be:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d6c2:	fb16 f604 	smulbb	r6, r6, r4
 801d6c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d6ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6ce:	00ed      	lsls	r5, r5, #3
 801d6d0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d6d4:	b2ed      	uxtb	r5, r5
 801d6d6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801d6da:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d6de:	fb15 f504 	smulbb	r5, r5, r4
 801d6e2:	fa5f f989 	uxtb.w	r9, r9
 801d6e6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d6ea:	fb09 5507 	mla	r5, r9, r7, r5
 801d6ee:	fb1a fa04 	smulbb	sl, sl, r4
 801d6f2:	fa1f fc8c 	uxth.w	ip, ip
 801d6f6:	b2ad      	uxth	r5, r5
 801d6f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d6fc:	fb06 a607 	mla	r6, r6, r7, sl
 801d700:	f10c 0401 	add.w	r4, ip, #1
 801d704:	f105 0a01 	add.w	sl, r5, #1
 801d708:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d70c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d710:	b2b6      	uxth	r6, r6
 801d712:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d716:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d71a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d71e:	f106 0a01 	add.w	sl, r6, #1
 801d722:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d726:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d72a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d72e:	9c03      	ldr	r4, [sp, #12]
 801d730:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d734:	f820 c004 	strh.w	ip, [r0, r4]
 801d738:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d73a:	4421      	add	r1, r4
 801d73c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d73e:	f108 38ff 	add.w	r8, r8, #4294967295
 801d742:	4422      	add	r2, r4
 801d744:	e750      	b.n	801d5e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801d746:	f04f 0900 	mov.w	r9, #0
 801d74a:	eba3 0409 	sub.w	r4, r3, r9
 801d74e:	2c00      	cmp	r4, #0
 801d750:	f77f af4e 	ble.w	801d5f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801d754:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801d758:	140d      	asrs	r5, r1, #16
 801d75a:	1414      	asrs	r4, r2, #16
 801d75c:	fb06 5404 	mla	r4, r6, r4, r5
 801d760:	9d02      	ldr	r5, [sp, #8]
 801d762:	5d2e      	ldrb	r6, [r5, r4]
 801d764:	2e00      	cmp	r6, #0
 801d766:	d04c      	beq.n	801d802 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801d768:	9d01      	ldr	r5, [sp, #4]
 801d76a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801d76e:	9c05      	ldr	r4, [sp, #20]
 801d770:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801d774:	4366      	muls	r6, r4
 801d776:	1c74      	adds	r4, r6, #1
 801d778:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801d77c:	1224      	asrs	r4, r4, #8
 801d77e:	b2a7      	uxth	r7, r4
 801d780:	122e      	asrs	r6, r5, #8
 801d782:	43e4      	mvns	r4, r4
 801d784:	b2e4      	uxtb	r4, r4
 801d786:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801d78a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d78e:	fb16 f604 	smulbb	r6, r6, r4
 801d792:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d796:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d79a:	00ed      	lsls	r5, r5, #3
 801d79c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d7a0:	b2ed      	uxtb	r5, r5
 801d7a2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801d7a6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801d7aa:	fb15 f504 	smulbb	r5, r5, r4
 801d7ae:	fa5f f888 	uxtb.w	r8, r8
 801d7b2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d7b6:	fb08 5507 	mla	r5, r8, r7, r5
 801d7ba:	fb1a fa04 	smulbb	sl, sl, r4
 801d7be:	fa1f fc8c 	uxth.w	ip, ip
 801d7c2:	b2ad      	uxth	r5, r5
 801d7c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d7c8:	fb06 a607 	mla	r6, r6, r7, sl
 801d7cc:	f10c 0401 	add.w	r4, ip, #1
 801d7d0:	f105 0a01 	add.w	sl, r5, #1
 801d7d4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801d7d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d7dc:	b2b6      	uxth	r6, r6
 801d7de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d7e2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d7e6:	ea4a 0c0c 	orr.w	ip, sl, ip
 801d7ea:	f106 0a01 	add.w	sl, r6, #1
 801d7ee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801d7f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801d7f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801d7fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801d7fe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801d802:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d804:	4421      	add	r1, r4
 801d806:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801d808:	f109 0901 	add.w	r9, r9, #1
 801d80c:	4422      	add	r2, r4
 801d80e:	e79c      	b.n	801d74a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801d810:	b007      	add	sp, #28
 801d812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d816 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d816:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d81a:	b085      	sub	sp, #20
 801d81c:	468b      	mov	fp, r1
 801d81e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801d820:	9203      	str	r2, [sp, #12]
 801d822:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801d826:	6861      	ldr	r1, [r4, #4]
 801d828:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801d82c:	fb01 2000 	mla	r0, r1, r0, r2
 801d830:	6822      	ldr	r2, [r4, #0]
 801d832:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801d836:	f8d8 2000 	ldr.w	r2, [r8]
 801d83a:	9200      	str	r2, [sp, #0]
 801d83c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801d840:	9201      	str	r2, [sp, #4]
 801d842:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801d846:	f1bb 0f00 	cmp.w	fp, #0
 801d84a:	dc03      	bgt.n	801d854 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801d84c:	9a03      	ldr	r2, [sp, #12]
 801d84e:	2a00      	cmp	r2, #0
 801d850:	f340 8146 	ble.w	801dae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d854:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d856:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801d85a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801d85e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801d862:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d864:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801d868:	2b00      	cmp	r3, #0
 801d86a:	dd0e      	ble.n	801d88a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801d86c:	140c      	asrs	r4, r1, #16
 801d86e:	d405      	bmi.n	801d87c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d870:	42bc      	cmp	r4, r7
 801d872:	da03      	bge.n	801d87c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d874:	1414      	asrs	r4, r2, #16
 801d876:	d401      	bmi.n	801d87c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801d878:	42b4      	cmp	r4, r6
 801d87a:	db07      	blt.n	801d88c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d87c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d87e:	4421      	add	r1, r4
 801d880:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d882:	3b01      	subs	r3, #1
 801d884:	4422      	add	r2, r4
 801d886:	3002      	adds	r0, #2
 801d888:	e7ee      	b.n	801d868 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801d88a:	d017      	beq.n	801d8bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801d88c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801d88e:	1e5c      	subs	r4, r3, #1
 801d890:	fb05 1504 	mla	r5, r5, r4, r1
 801d894:	142d      	asrs	r5, r5, #16
 801d896:	d409      	bmi.n	801d8ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d898:	42bd      	cmp	r5, r7
 801d89a:	da07      	bge.n	801d8ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d89c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801d89e:	fb05 2404 	mla	r4, r5, r4, r2
 801d8a2:	1424      	asrs	r4, r4, #16
 801d8a4:	d402      	bmi.n	801d8ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d8a6:	42b4      	cmp	r4, r6
 801d8a8:	f2c0 80b3 	blt.w	801da12 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801d8ac:	2600      	movs	r6, #0
 801d8ae:	199c      	adds	r4, r3, r6
 801d8b0:	2c00      	cmp	r4, #0
 801d8b2:	dc3e      	bgt.n	801d932 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801d8b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d8b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d8bc:	f1bb 0f00 	cmp.w	fp, #0
 801d8c0:	f340 810e 	ble.w	801dae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801d8c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d8c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d8cc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801d8d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d8d2:	f1bb 0b01 	subs.w	fp, fp, #1
 801d8d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d8da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d8de:	eeb0 6a62 	vmov.f32	s12, s5
 801d8e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d8e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d8ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d8ee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801d8f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d8f6:	eeb0 6a43 	vmov.f32	s12, s6
 801d8fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d8fe:	ee12 2a90 	vmov	r2, s5
 801d902:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d906:	fb92 f3f3 	sdiv	r3, r2, r3
 801d90a:	ee13 2a10 	vmov	r2, s6
 801d90e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801d912:	9311      	str	r3, [sp, #68]	; 0x44
 801d914:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d916:	fb92 f3f3 	sdiv	r3, r2, r3
 801d91a:	9a03      	ldr	r2, [sp, #12]
 801d91c:	9312      	str	r3, [sp, #72]	; 0x48
 801d91e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801d922:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d924:	eeb0 3a67 	vmov.f32	s6, s15
 801d928:	bf08      	it	eq
 801d92a:	4613      	moveq	r3, r2
 801d92c:	eef0 2a47 	vmov.f32	s5, s14
 801d930:	e789      	b.n	801d846 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d932:	140f      	asrs	r7, r1, #16
 801d934:	d418      	bmi.n	801d968 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d936:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801d93a:	42bd      	cmp	r5, r7
 801d93c:	dd14      	ble.n	801d968 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d93e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801d942:	d411      	bmi.n	801d968 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d944:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801d948:	4564      	cmp	r4, ip
 801d94a:	dd0d      	ble.n	801d968 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d94c:	b22d      	sxth	r5, r5
 801d94e:	fb0c 7505 	mla	r5, ip, r5, r7
 801d952:	9c01      	ldr	r4, [sp, #4]
 801d954:	5d64      	ldrb	r4, [r4, r5]
 801d956:	2cff      	cmp	r4, #255	; 0xff
 801d958:	d10c      	bne.n	801d974 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801d95a:	9c00      	ldr	r4, [sp, #0]
 801d95c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801d960:	f06f 0401 	mvn.w	r4, #1
 801d964:	4374      	muls	r4, r6
 801d966:	5305      	strh	r5, [r0, r4]
 801d968:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801d96a:	4421      	add	r1, r4
 801d96c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d96e:	3e01      	subs	r6, #1
 801d970:	4422      	add	r2, r4
 801d972:	e79c      	b.n	801d8ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801d974:	2c00      	cmp	r4, #0
 801d976:	d0f7      	beq.n	801d968 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801d978:	9f00      	ldr	r7, [sp, #0]
 801d97a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801d97e:	f06f 0501 	mvn.w	r5, #1
 801d982:	4375      	muls	r5, r6
 801d984:	9502      	str	r5, [sp, #8]
 801d986:	5b45      	ldrh	r5, [r0, r5]
 801d988:	fa1f fc84 	uxth.w	ip, r4
 801d98c:	122f      	asrs	r7, r5, #8
 801d98e:	43e4      	mvns	r4, r4
 801d990:	b2e4      	uxtb	r4, r4
 801d992:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801d996:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d99a:	fb17 f704 	smulbb	r7, r7, r4
 801d99e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d9a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d9a6:	00ed      	lsls	r5, r5, #3
 801d9a8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801d9ac:	b2ed      	uxtb	r5, r5
 801d9ae:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801d9b2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801d9b6:	fb15 f504 	smulbb	r5, r5, r4
 801d9ba:	fa5f f989 	uxtb.w	r9, r9
 801d9be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d9c2:	fb09 550c 	mla	r5, r9, ip, r5
 801d9c6:	fb1a fa04 	smulbb	sl, sl, r4
 801d9ca:	fa1f fe8e 	uxth.w	lr, lr
 801d9ce:	b2ad      	uxth	r5, r5
 801d9d0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d9d4:	fb07 a70c 	mla	r7, r7, ip, sl
 801d9d8:	f10e 0401 	add.w	r4, lr, #1
 801d9dc:	f105 0a01 	add.w	sl, r5, #1
 801d9e0:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801d9e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801d9e8:	b2bf      	uxth	r7, r7
 801d9ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801d9ee:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801d9f2:	ea4a 0e0e 	orr.w	lr, sl, lr
 801d9f6:	f107 0a01 	add.w	sl, r7, #1
 801d9fa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801d9fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801da02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801da06:	9c02      	ldr	r4, [sp, #8]
 801da08:	ea4e 0e0a 	orr.w	lr, lr, sl
 801da0c:	f820 e004 	strh.w	lr, [r0, r4]
 801da10:	e7aa      	b.n	801d968 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801da12:	f04f 0900 	mov.w	r9, #0
 801da16:	eba3 0409 	sub.w	r4, r3, r9
 801da1a:	2c00      	cmp	r4, #0
 801da1c:	f77f af4a 	ble.w	801d8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801da20:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801da24:	1414      	asrs	r4, r2, #16
 801da26:	140d      	asrs	r5, r1, #16
 801da28:	fb06 5504 	mla	r5, r6, r4, r5
 801da2c:	9c01      	ldr	r4, [sp, #4]
 801da2e:	5d64      	ldrb	r4, [r4, r5]
 801da30:	2cff      	cmp	r4, #255	; 0xff
 801da32:	d10b      	bne.n	801da4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801da34:	9c00      	ldr	r4, [sp, #0]
 801da36:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801da3a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801da3e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801da40:	4421      	add	r1, r4
 801da42:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da44:	f109 0901 	add.w	r9, r9, #1
 801da48:	4422      	add	r2, r4
 801da4a:	e7e4      	b.n	801da16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801da4c:	2c00      	cmp	r4, #0
 801da4e:	d0f6      	beq.n	801da3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801da50:	9e00      	ldr	r6, [sp, #0]
 801da52:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801da56:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801da5a:	b2a7      	uxth	r7, r4
 801da5c:	122e      	asrs	r6, r5, #8
 801da5e:	43e4      	mvns	r4, r4
 801da60:	b2e4      	uxtb	r4, r4
 801da62:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801da66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801da6a:	fb16 f604 	smulbb	r6, r6, r4
 801da6e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801da72:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801da76:	00ed      	lsls	r5, r5, #3
 801da78:	fb0c 6c07 	mla	ip, ip, r7, r6
 801da7c:	b2ed      	uxtb	r5, r5
 801da7e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801da82:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801da86:	fb15 f504 	smulbb	r5, r5, r4
 801da8a:	fa5f fe8e 	uxtb.w	lr, lr
 801da8e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801da92:	fb0e 5507 	mla	r5, lr, r7, r5
 801da96:	fb1a fa04 	smulbb	sl, sl, r4
 801da9a:	fa1f fc8c 	uxth.w	ip, ip
 801da9e:	b2ad      	uxth	r5, r5
 801daa0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801daa4:	fb06 a607 	mla	r6, r6, r7, sl
 801daa8:	f10c 0401 	add.w	r4, ip, #1
 801daac:	f105 0a01 	add.w	sl, r5, #1
 801dab0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801dab4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dab8:	b2b6      	uxth	r6, r6
 801daba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801dabe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dac2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801dac6:	f106 0a01 	add.w	sl, r6, #1
 801daca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801dace:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dad2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801dad6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801dada:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801dade:	e7ae      	b.n	801da3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801dae0:	b005      	add	sp, #20
 801dae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dae6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dae6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daea:	b085      	sub	sp, #20
 801daec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801daee:	9203      	str	r2, [sp, #12]
 801daf0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801daf4:	9201      	str	r2, [sp, #4]
 801daf6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dafa:	9100      	str	r1, [sp, #0]
 801dafc:	6841      	ldr	r1, [r0, #4]
 801dafe:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801db02:	fb01 2404 	mla	r4, r1, r4, r2
 801db06:	6802      	ldr	r2, [r0, #0]
 801db08:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801db0c:	f8de 2000 	ldr.w	r2, [lr]
 801db10:	9202      	str	r2, [sp, #8]
 801db12:	9a01      	ldr	r2, [sp, #4]
 801db14:	43d6      	mvns	r6, r2
 801db16:	b2f6      	uxtb	r6, r6
 801db18:	9a00      	ldr	r2, [sp, #0]
 801db1a:	2a00      	cmp	r2, #0
 801db1c:	dc03      	bgt.n	801db26 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801db1e:	9a03      	ldr	r2, [sp, #12]
 801db20:	2a00      	cmp	r2, #0
 801db22:	f340 8124 	ble.w	801dd6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801db26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801db28:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801db2c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801db30:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801db34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801db36:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801db3a:	2b00      	cmp	r3, #0
 801db3c:	dd0e      	ble.n	801db5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801db3e:	1408      	asrs	r0, r1, #16
 801db40:	d405      	bmi.n	801db4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db42:	4560      	cmp	r0, ip
 801db44:	da03      	bge.n	801db4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db46:	1410      	asrs	r0, r2, #16
 801db48:	d401      	bmi.n	801db4e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801db4a:	42b8      	cmp	r0, r7
 801db4c:	db07      	blt.n	801db5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801db4e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db50:	4401      	add	r1, r0
 801db52:	9812      	ldr	r0, [sp, #72]	; 0x48
 801db54:	3b01      	subs	r3, #1
 801db56:	4402      	add	r2, r0
 801db58:	3402      	adds	r4, #2
 801db5a:	e7ee      	b.n	801db3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801db5c:	d06e      	beq.n	801dc3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801db5e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801db60:	1e58      	subs	r0, r3, #1
 801db62:	fb05 1500 	mla	r5, r5, r0, r1
 801db66:	142d      	asrs	r5, r5, #16
 801db68:	d45c      	bmi.n	801dc24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db6a:	4565      	cmp	r5, ip
 801db6c:	da5a      	bge.n	801dc24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db6e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801db70:	fb05 2000 	mla	r0, r5, r0, r2
 801db74:	1400      	asrs	r0, r0, #16
 801db76:	d455      	bmi.n	801dc24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db78:	42b8      	cmp	r0, r7
 801db7a:	da53      	bge.n	801dc24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801db7c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801db80:	4699      	mov	r9, r3
 801db82:	46a2      	mov	sl, r4
 801db84:	f1b9 0f00 	cmp.w	r9, #0
 801db88:	dd54      	ble.n	801dc34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801db8a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801db8e:	140d      	asrs	r5, r1, #16
 801db90:	1410      	asrs	r0, r2, #16
 801db92:	fb07 5000 	mla	r0, r7, r0, r5
 801db96:	9d02      	ldr	r5, [sp, #8]
 801db98:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801db9c:	f8ba 5000 	ldrh.w	r5, [sl]
 801dba0:	122f      	asrs	r7, r5, #8
 801dba2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dba6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dbaa:	fb17 f706 	smulbb	r7, r7, r6
 801dbae:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801dbb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dbb6:	00ed      	lsls	r5, r5, #3
 801dbb8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801dbbc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801dbc0:	10c7      	asrs	r7, r0, #3
 801dbc2:	b2ed      	uxtb	r5, r5
 801dbc4:	00c0      	lsls	r0, r0, #3
 801dbc6:	fb18 f806 	smulbb	r8, r8, r6
 801dbca:	fb15 f506 	smulbb	r5, r5, r6
 801dbce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dbd2:	b2c0      	uxtb	r0, r0
 801dbd4:	fa1f fc8c 	uxth.w	ip, ip
 801dbd8:	fb07 870b 	mla	r7, r7, fp, r8
 801dbdc:	fb00 500b 	mla	r0, r0, fp, r5
 801dbe0:	b280      	uxth	r0, r0
 801dbe2:	b2bf      	uxth	r7, r7
 801dbe4:	f10c 0501 	add.w	r5, ip, #1
 801dbe8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dbec:	f107 0801 	add.w	r8, r7, #1
 801dbf0:	1c45      	adds	r5, r0, #1
 801dbf2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dbf6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801dbfa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dbfc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc00:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dc04:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801dc08:	ea45 0c0c 	orr.w	ip, r5, ip
 801dc0c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801dc10:	4401      	add	r1, r0
 801dc12:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dc14:	ea4c 0c08 	orr.w	ip, ip, r8
 801dc18:	f82a cb02 	strh.w	ip, [sl], #2
 801dc1c:	4402      	add	r2, r0
 801dc1e:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc22:	e7af      	b.n	801db84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801dc24:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801dc28:	f04f 0800 	mov.w	r8, #0
 801dc2c:	eb03 0008 	add.w	r0, r3, r8
 801dc30:	2800      	cmp	r0, #0
 801dc32:	dc41      	bgt.n	801dcb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801dc34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801dc38:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801dc3c:	9b00      	ldr	r3, [sp, #0]
 801dc3e:	2b00      	cmp	r3, #0
 801dc40:	f340 8095 	ble.w	801dd6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801dc44:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dc48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dc4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dc50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dc56:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dc5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dc5e:	eef0 6a62 	vmov.f32	s13, s5
 801dc62:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dc66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dc6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dc6e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801dc72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dc76:	eef0 6a43 	vmov.f32	s13, s6
 801dc7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dc7e:	ee12 2a90 	vmov	r2, s5
 801dc82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dc86:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc8a:	ee13 2a10 	vmov	r2, s6
 801dc8e:	9311      	str	r3, [sp, #68]	; 0x44
 801dc90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dc92:	fb92 f3f3 	sdiv	r3, r2, r3
 801dc96:	9312      	str	r3, [sp, #72]	; 0x48
 801dc98:	9b00      	ldr	r3, [sp, #0]
 801dc9a:	9a03      	ldr	r2, [sp, #12]
 801dc9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dca0:	3b01      	subs	r3, #1
 801dca2:	9300      	str	r3, [sp, #0]
 801dca4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801dca8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dcaa:	eeb0 3a67 	vmov.f32	s6, s15
 801dcae:	bf08      	it	eq
 801dcb0:	4613      	moveq	r3, r2
 801dcb2:	eef0 2a47 	vmov.f32	s5, s14
 801dcb6:	e72f      	b.n	801db18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801dcb8:	140f      	asrs	r7, r1, #16
 801dcba:	d451      	bmi.n	801dd60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcbc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801dcc0:	42bd      	cmp	r5, r7
 801dcc2:	dd4d      	ble.n	801dd60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcc4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801dcc8:	d44a      	bmi.n	801dd60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcca:	f8de 000c 	ldr.w	r0, [lr, #12]
 801dcce:	4560      	cmp	r0, ip
 801dcd0:	dd46      	ble.n	801dd60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801dcd2:	b22d      	sxth	r5, r5
 801dcd4:	fb0c 7505 	mla	r5, ip, r5, r7
 801dcd8:	9802      	ldr	r0, [sp, #8]
 801dcda:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801dcde:	f06f 0501 	mvn.w	r5, #1
 801dce2:	fb05 fb08 	mul.w	fp, r5, r8
 801dce6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801dcea:	f834 500b 	ldrh.w	r5, [r4, fp]
 801dcee:	122f      	asrs	r7, r5, #8
 801dcf0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dcf4:	fb17 f706 	smulbb	r7, r7, r6
 801dcf8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801dcfc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dd00:	00ed      	lsls	r5, r5, #3
 801dd02:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801dd06:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801dd0a:	10c7      	asrs	r7, r0, #3
 801dd0c:	b2ed      	uxtb	r5, r5
 801dd0e:	00c0      	lsls	r0, r0, #3
 801dd10:	fb19 f906 	smulbb	r9, r9, r6
 801dd14:	fb15 f506 	smulbb	r5, r5, r6
 801dd18:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801dd1c:	b2c0      	uxtb	r0, r0
 801dd1e:	fa1f fc8c 	uxth.w	ip, ip
 801dd22:	fb07 970a 	mla	r7, r7, sl, r9
 801dd26:	fb00 500a 	mla	r0, r0, sl, r5
 801dd2a:	b2bf      	uxth	r7, r7
 801dd2c:	b280      	uxth	r0, r0
 801dd2e:	f10c 0501 	add.w	r5, ip, #1
 801dd32:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801dd36:	f107 0901 	add.w	r9, r7, #1
 801dd3a:	1c45      	adds	r5, r0, #1
 801dd3c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dd40:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801dd44:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dd48:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dd4c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd50:	ea45 0c0c 	orr.w	ip, r5, ip
 801dd54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dd58:	ea4c 0c09 	orr.w	ip, ip, r9
 801dd5c:	f824 c00b 	strh.w	ip, [r4, fp]
 801dd60:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd62:	4401      	add	r1, r0
 801dd64:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dd66:	f108 38ff 	add.w	r8, r8, #4294967295
 801dd6a:	4402      	add	r2, r0
 801dd6c:	e75e      	b.n	801dc2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801dd6e:	b005      	add	sp, #20
 801dd70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd78:	b085      	sub	sp, #20
 801dd7a:	4693      	mov	fp, r2
 801dd7c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dd7e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801dd80:	6870      	ldr	r0, [r6, #4]
 801dd82:	9101      	str	r1, [sp, #4]
 801dd84:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801dd88:	fb00 2404 	mla	r4, r0, r4, r2
 801dd8c:	6832      	ldr	r2, [r6, #0]
 801dd8e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801dd92:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801dd96:	682a      	ldr	r2, [r5, #0]
 801dd98:	9202      	str	r2, [sp, #8]
 801dd9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801dd9e:	9a01      	ldr	r2, [sp, #4]
 801dda0:	2a00      	cmp	r2, #0
 801dda2:	dc03      	bgt.n	801ddac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dda4:	f1bb 0f00 	cmp.w	fp, #0
 801dda8:	f340 809a 	ble.w	801dee0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801ddac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ddae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ddb2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ddb6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ddba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ddbc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ddc0:	2b00      	cmp	r3, #0
 801ddc2:	dd0c      	ble.n	801ddde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801ddc4:	1406      	asrs	r6, r0, #16
 801ddc6:	d405      	bmi.n	801ddd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddc8:	454e      	cmp	r6, r9
 801ddca:	da03      	bge.n	801ddd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddcc:	1416      	asrs	r6, r2, #16
 801ddce:	d401      	bmi.n	801ddd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801ddd0:	4546      	cmp	r6, r8
 801ddd2:	db05      	blt.n	801dde0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ddd4:	4470      	add	r0, lr
 801ddd6:	4462      	add	r2, ip
 801ddd8:	3b01      	subs	r3, #1
 801ddda:	3402      	adds	r4, #2
 801dddc:	e7f0      	b.n	801ddc0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ddde:	d00f      	beq.n	801de00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801dde0:	1e5e      	subs	r6, r3, #1
 801dde2:	fb0e 0706 	mla	r7, lr, r6, r0
 801dde6:	143f      	asrs	r7, r7, #16
 801dde8:	d541      	bpl.n	801de6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801ddea:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ddee:	4698      	mov	r8, r3
 801ddf0:	9603      	str	r6, [sp, #12]
 801ddf2:	f1b8 0f00 	cmp.w	r8, #0
 801ddf6:	dc56      	bgt.n	801dea6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801ddf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ddfc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801de00:	9b01      	ldr	r3, [sp, #4]
 801de02:	2b00      	cmp	r3, #0
 801de04:	dd6c      	ble.n	801dee0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801de06:	ee30 0a04 	vadd.f32	s0, s0, s8
 801de0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801de0e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801de12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de14:	ee31 1a05 	vadd.f32	s2, s2, s10
 801de18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801de1c:	eeb0 6a62 	vmov.f32	s12, s5
 801de20:	ee61 7a27 	vmul.f32	s15, s2, s15
 801de24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de28:	ee77 2a62 	vsub.f32	s5, s14, s5
 801de2c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801de30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801de34:	eeb0 6a43 	vmov.f32	s12, s6
 801de38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801de3c:	ee12 2a90 	vmov	r2, s5
 801de40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801de44:	fb92 fef3 	sdiv	lr, r2, r3
 801de48:	ee13 2a10 	vmov	r2, s6
 801de4c:	fb92 fcf3 	sdiv	ip, r2, r3
 801de50:	9b01      	ldr	r3, [sp, #4]
 801de52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801de56:	3b01      	subs	r3, #1
 801de58:	9301      	str	r3, [sp, #4]
 801de5a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801de5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801de60:	eeb0 3a67 	vmov.f32	s6, s15
 801de64:	bf08      	it	eq
 801de66:	465b      	moveq	r3, fp
 801de68:	eef0 2a47 	vmov.f32	s5, s14
 801de6c:	e797      	b.n	801dd9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801de6e:	454f      	cmp	r7, r9
 801de70:	dabb      	bge.n	801ddea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de72:	fb0c 2606 	mla	r6, ip, r6, r2
 801de76:	1436      	asrs	r6, r6, #16
 801de78:	d4b7      	bmi.n	801ddea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de7a:	4546      	cmp	r6, r8
 801de7c:	dab5      	bge.n	801ddea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801de7e:	461e      	mov	r6, r3
 801de80:	46a0      	mov	r8, r4
 801de82:	2e00      	cmp	r6, #0
 801de84:	ddb8      	ble.n	801ddf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801de86:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801de8a:	9902      	ldr	r1, [sp, #8]
 801de8c:	1417      	asrs	r7, r2, #16
 801de8e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801de92:	fb0a 9707 	mla	r7, sl, r7, r9
 801de96:	4470      	add	r0, lr
 801de98:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801de9c:	f828 7b02 	strh.w	r7, [r8], #2
 801dea0:	4462      	add	r2, ip
 801dea2:	3e01      	subs	r6, #1
 801dea4:	e7ed      	b.n	801de82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801dea6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801deaa:	d414      	bmi.n	801ded6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801deac:	68ae      	ldr	r6, [r5, #8]
 801deae:	454e      	cmp	r6, r9
 801deb0:	dd11      	ble.n	801ded6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801deb2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801deb6:	d40e      	bmi.n	801ded6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801deb8:	68ef      	ldr	r7, [r5, #12]
 801deba:	4557      	cmp	r7, sl
 801debc:	dd0b      	ble.n	801ded6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801debe:	b236      	sxth	r6, r6
 801dec0:	fb0a 9606 	mla	r6, sl, r6, r9
 801dec4:	9f02      	ldr	r7, [sp, #8]
 801dec6:	f06f 0101 	mvn.w	r1, #1
 801deca:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801dece:	fb01 f608 	mul.w	r6, r1, r8
 801ded2:	9903      	ldr	r1, [sp, #12]
 801ded4:	538f      	strh	r7, [r1, r6]
 801ded6:	4470      	add	r0, lr
 801ded8:	4462      	add	r2, ip
 801deda:	f108 38ff 	add.w	r8, r8, #4294967295
 801dede:	e788      	b.n	801ddf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801dee0:	b005      	add	sp, #20
 801dee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dee6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dee6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801deea:	b087      	sub	sp, #28
 801deec:	468b      	mov	fp, r1
 801deee:	9815      	ldr	r0, [sp, #84]	; 0x54
 801def0:	9203      	str	r2, [sp, #12]
 801def2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801def6:	9204      	str	r2, [sp, #16]
 801def8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801defc:	6841      	ldr	r1, [r0, #4]
 801defe:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801df02:	fb01 2505 	mla	r5, r1, r5, r2
 801df06:	6802      	ldr	r2, [r0, #0]
 801df08:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801df0c:	f8d9 2000 	ldr.w	r2, [r9]
 801df10:	9201      	str	r2, [sp, #4]
 801df12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801df16:	f1bb 0f00 	cmp.w	fp, #0
 801df1a:	dc03      	bgt.n	801df24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801df1c:	9a03      	ldr	r2, [sp, #12]
 801df1e:	2a00      	cmp	r2, #0
 801df20:	f340 8159 	ble.w	801e1d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df24:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801df26:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801df2a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801df2e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801df32:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801df34:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801df38:	2b00      	cmp	r3, #0
 801df3a:	dd0e      	ble.n	801df5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801df3c:	1402      	asrs	r2, r0, #16
 801df3e:	d405      	bmi.n	801df4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df40:	42ba      	cmp	r2, r7
 801df42:	da03      	bge.n	801df4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df44:	140a      	asrs	r2, r1, #16
 801df46:	d401      	bmi.n	801df4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801df48:	42b2      	cmp	r2, r6
 801df4a:	db07      	blt.n	801df5c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801df4c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801df4e:	4410      	add	r0, r2
 801df50:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801df52:	3b01      	subs	r3, #1
 801df54:	4411      	add	r1, r2
 801df56:	3502      	adds	r5, #2
 801df58:	e7ee      	b.n	801df38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801df5a:	d017      	beq.n	801df8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801df5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801df5e:	1e5a      	subs	r2, r3, #1
 801df60:	fb04 0402 	mla	r4, r4, r2, r0
 801df64:	1424      	asrs	r4, r4, #16
 801df66:	d409      	bmi.n	801df7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df68:	42bc      	cmp	r4, r7
 801df6a:	da07      	bge.n	801df7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801df6e:	fb04 1202 	mla	r2, r4, r2, r1
 801df72:	1412      	asrs	r2, r2, #16
 801df74:	d402      	bmi.n	801df7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801df76:	42b2      	cmp	r2, r6
 801df78:	f2c0 80bf 	blt.w	801e0fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801df7c:	2700      	movs	r7, #0
 801df7e:	19da      	adds	r2, r3, r7
 801df80:	2a00      	cmp	r2, #0
 801df82:	dc3e      	bgt.n	801e002 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801df84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801df88:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801df8c:	f1bb 0f00 	cmp.w	fp, #0
 801df90:	f340 8121 	ble.w	801e1d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801df94:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df9c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801dfa0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfa2:	f1bb 0b01 	subs.w	fp, fp, #1
 801dfa6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dfaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dfae:	eeb0 6a62 	vmov.f32	s12, s5
 801dfb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dfb6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dfbe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801dfc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dfc6:	eeb0 6a43 	vmov.f32	s12, s6
 801dfca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dfce:	ee12 2a90 	vmov	r2, s5
 801dfd2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dfd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dfda:	ee13 2a10 	vmov	r2, s6
 801dfde:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801dfe2:	9313      	str	r3, [sp, #76]	; 0x4c
 801dfe4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfe6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dfea:	9a03      	ldr	r2, [sp, #12]
 801dfec:	9314      	str	r3, [sp, #80]	; 0x50
 801dfee:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801dff2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dff4:	eeb0 3a67 	vmov.f32	s6, s15
 801dff8:	bf08      	it	eq
 801dffa:	4613      	moveq	r3, r2
 801dffc:	eef0 2a47 	vmov.f32	s5, s14
 801e000:	e789      	b.n	801df16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801e002:	1406      	asrs	r6, r0, #16
 801e004:	d42d      	bmi.n	801e062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e006:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801e00a:	42b4      	cmp	r4, r6
 801e00c:	dd29      	ble.n	801e062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e00e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801e012:	d426      	bmi.n	801e062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e014:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e018:	4562      	cmp	r2, ip
 801e01a:	dd22      	ble.n	801e062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e01c:	b224      	sxth	r4, r4
 801e01e:	9a01      	ldr	r2, [sp, #4]
 801e020:	fb0c 6404 	mla	r4, ip, r4, r6
 801e024:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801e028:	0e22      	lsrs	r2, r4, #24
 801e02a:	d01a      	beq.n	801e062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e02c:	9e04      	ldr	r6, [sp, #16]
 801e02e:	4372      	muls	r2, r6
 801e030:	1c56      	adds	r6, r2, #1
 801e032:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e036:	1212      	asrs	r2, r2, #8
 801e038:	0a26      	lsrs	r6, r4, #8
 801e03a:	2aff      	cmp	r2, #255	; 0xff
 801e03c:	9605      	str	r6, [sp, #20]
 801e03e:	d116      	bne.n	801e06e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801e040:	f06f 0201 	mvn.w	r2, #1
 801e044:	fb02 fc07 	mul.w	ip, r2, r7
 801e048:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e04c:	0962      	lsrs	r2, r4, #5
 801e04e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e052:	f026 0607 	bic.w	r6, r6, #7
 801e056:	4316      	orrs	r6, r2
 801e058:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e05c:	4326      	orrs	r6, r4
 801e05e:	f825 600c 	strh.w	r6, [r5, ip]
 801e062:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e064:	4410      	add	r0, r2
 801e066:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e068:	3f01      	subs	r7, #1
 801e06a:	4411      	add	r1, r2
 801e06c:	e787      	b.n	801df7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e06e:	f06f 0601 	mvn.w	r6, #1
 801e072:	437e      	muls	r6, r7
 801e074:	fa1f fa82 	uxth.w	sl, r2
 801e078:	f835 8006 	ldrh.w	r8, [r5, r6]
 801e07c:	9602      	str	r6, [sp, #8]
 801e07e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e082:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801e086:	43d2      	mvns	r2, r2
 801e088:	b2d2      	uxtb	r2, r2
 801e08a:	fb1c fc0a 	smulbb	ip, ip, sl
 801e08e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e092:	fb0e ce02 	mla	lr, lr, r2, ip
 801e096:	b2e4      	uxtb	r4, r4
 801e098:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e09c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e0a0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e0a4:	fa5f f888 	uxtb.w	r8, r8
 801e0a8:	fb14 f40a 	smulbb	r4, r4, sl
 801e0ac:	fb08 4402 	mla	r4, r8, r2, r4
 801e0b0:	fa1f fe8e 	uxth.w	lr, lr
 801e0b4:	fb16 f60a 	smulbb	r6, r6, sl
 801e0b8:	b2a4      	uxth	r4, r4
 801e0ba:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e0be:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e0c2:	f10e 0201 	add.w	r2, lr, #1
 801e0c6:	1c66      	adds	r6, r4, #1
 801e0c8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e0cc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e0d0:	fa1f fc8c 	uxth.w	ip, ip
 801e0d4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e0d8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e0dc:	ea46 0e0e 	orr.w	lr, r6, lr
 801e0e0:	f10c 0601 	add.w	r6, ip, #1
 801e0e4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e0e8:	0976      	lsrs	r6, r6, #5
 801e0ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e0ee:	9a02      	ldr	r2, [sp, #8]
 801e0f0:	ea4e 0e06 	orr.w	lr, lr, r6
 801e0f4:	f825 e002 	strh.w	lr, [r5, r2]
 801e0f8:	e7b3      	b.n	801e062 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801e0fa:	f04f 0800 	mov.w	r8, #0
 801e0fe:	eba3 0208 	sub.w	r2, r3, r8
 801e102:	2a00      	cmp	r2, #0
 801e104:	f77f af3e 	ble.w	801df84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801e108:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801e10c:	1404      	asrs	r4, r0, #16
 801e10e:	140a      	asrs	r2, r1, #16
 801e110:	fb06 4202 	mla	r2, r6, r2, r4
 801e114:	9c01      	ldr	r4, [sp, #4]
 801e116:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801e11a:	0e22      	lsrs	r2, r4, #24
 801e11c:	d016      	beq.n	801e14c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e11e:	9e04      	ldr	r6, [sp, #16]
 801e120:	4372      	muls	r2, r6
 801e122:	1c56      	adds	r6, r2, #1
 801e124:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801e128:	1212      	asrs	r2, r2, #8
 801e12a:	2aff      	cmp	r2, #255	; 0xff
 801e12c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801e130:	d113      	bne.n	801e15a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801e132:	0962      	lsrs	r2, r4, #5
 801e134:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e13c:	f026 0607 	bic.w	r6, r6, #7
 801e140:	4316      	orrs	r6, r2
 801e142:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e146:	4326      	orrs	r6, r4
 801e148:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801e14c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e14e:	4410      	add	r0, r2
 801e150:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e152:	f108 0801 	add.w	r8, r8, #1
 801e156:	4411      	add	r1, r2
 801e158:	e7d1      	b.n	801e0fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801e15a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801e15e:	fa1f fa82 	uxth.w	sl, r2
 801e162:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e166:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801e16a:	43d2      	mvns	r2, r2
 801e16c:	b2d2      	uxtb	r2, r2
 801e16e:	fb17 f70a 	smulbb	r7, r7, sl
 801e172:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e176:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e17a:	b2e4      	uxtb	r4, r4
 801e17c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e180:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e184:	fa5f fe8e 	uxtb.w	lr, lr
 801e188:	fb14 f40a 	smulbb	r4, r4, sl
 801e18c:	fb0e 4402 	mla	r4, lr, r2, r4
 801e190:	b2f6      	uxtb	r6, r6
 801e192:	fa1f fc8c 	uxth.w	ip, ip
 801e196:	fb16 f60a 	smulbb	r6, r6, sl
 801e19a:	b2a4      	uxth	r4, r4
 801e19c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e1a0:	fb07 6702 	mla	r7, r7, r2, r6
 801e1a4:	f10c 0201 	add.w	r2, ip, #1
 801e1a8:	1c66      	adds	r6, r4, #1
 801e1aa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e1ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801e1b2:	b2bf      	uxth	r7, r7
 801e1b4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e1b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e1bc:	ea46 0c0c 	orr.w	ip, r6, ip
 801e1c0:	1c7e      	adds	r6, r7, #1
 801e1c2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e1c6:	0976      	lsrs	r6, r6, #5
 801e1c8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e1cc:	ea4c 0c06 	orr.w	ip, ip, r6
 801e1d0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801e1d4:	e7ba      	b.n	801e14c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801e1d6:	b007      	add	sp, #28
 801e1d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e1dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e1dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1e0:	b085      	sub	sp, #20
 801e1e2:	468b      	mov	fp, r1
 801e1e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e1e6:	9203      	str	r2, [sp, #12]
 801e1e8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801e1ec:	6841      	ldr	r1, [r0, #4]
 801e1ee:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801e1f2:	fb01 2404 	mla	r4, r1, r4, r2
 801e1f6:	6802      	ldr	r2, [r0, #0]
 801e1f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e1fc:	f8d8 2000 	ldr.w	r2, [r8]
 801e200:	9201      	str	r2, [sp, #4]
 801e202:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e206:	f1bb 0f00 	cmp.w	fp, #0
 801e20a:	dc03      	bgt.n	801e214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e20c:	9a03      	ldr	r2, [sp, #12]
 801e20e:	2a00      	cmp	r2, #0
 801e210:	f340 814f 	ble.w	801e4b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e214:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e216:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801e21a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801e21e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e222:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e224:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801e228:	2b00      	cmp	r3, #0
 801e22a:	dd0e      	ble.n	801e24a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801e22c:	1408      	asrs	r0, r1, #16
 801e22e:	d405      	bmi.n	801e23c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e230:	42b8      	cmp	r0, r7
 801e232:	da03      	bge.n	801e23c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e234:	1410      	asrs	r0, r2, #16
 801e236:	d401      	bmi.n	801e23c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801e238:	42b0      	cmp	r0, r6
 801e23a:	db07      	blt.n	801e24c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e23c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e23e:	4401      	add	r1, r0
 801e240:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e242:	3b01      	subs	r3, #1
 801e244:	4402      	add	r2, r0
 801e246:	3402      	adds	r4, #2
 801e248:	e7ee      	b.n	801e228 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e24a:	d017      	beq.n	801e27c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e24c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e24e:	1e58      	subs	r0, r3, #1
 801e250:	fb05 1500 	mla	r5, r5, r0, r1
 801e254:	142d      	asrs	r5, r5, #16
 801e256:	d409      	bmi.n	801e26c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e258:	42bd      	cmp	r5, r7
 801e25a:	da07      	bge.n	801e26c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e25c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e25e:	fb05 2000 	mla	r0, r5, r0, r2
 801e262:	1400      	asrs	r0, r0, #16
 801e264:	d402      	bmi.n	801e26c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e266:	42b0      	cmp	r0, r6
 801e268:	f2c0 80ba 	blt.w	801e3e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e26c:	2600      	movs	r6, #0
 801e26e:	1998      	adds	r0, r3, r6
 801e270:	2800      	cmp	r0, #0
 801e272:	dc3e      	bgt.n	801e2f2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e278:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e27c:	f1bb 0f00 	cmp.w	fp, #0
 801e280:	f340 8117 	ble.w	801e4b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801e284:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e288:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e28c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e290:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e292:	f1bb 0b01 	subs.w	fp, fp, #1
 801e296:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e29a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e29e:	eeb0 6a62 	vmov.f32	s12, s5
 801e2a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e2a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e2ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801e2b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e2b6:	eeb0 6a43 	vmov.f32	s12, s6
 801e2ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e2be:	ee12 2a90 	vmov	r2, s5
 801e2c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e2c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2ca:	ee13 2a10 	vmov	r2, s6
 801e2ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e2d2:	9311      	str	r3, [sp, #68]	; 0x44
 801e2d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e2da:	9a03      	ldr	r2, [sp, #12]
 801e2dc:	9312      	str	r3, [sp, #72]	; 0x48
 801e2de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801e2e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e2e4:	eeb0 3a67 	vmov.f32	s6, s15
 801e2e8:	bf08      	it	eq
 801e2ea:	4613      	moveq	r3, r2
 801e2ec:	eef0 2a47 	vmov.f32	s5, s14
 801e2f0:	e789      	b.n	801e206 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e2f2:	140f      	asrs	r7, r1, #16
 801e2f4:	d424      	bmi.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e2f6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801e2fa:	42bd      	cmp	r5, r7
 801e2fc:	dd20      	ble.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e2fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801e302:	d41d      	bmi.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e304:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801e308:	4560      	cmp	r0, ip
 801e30a:	dd19      	ble.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e30c:	b22d      	sxth	r5, r5
 801e30e:	fb0c 7505 	mla	r5, ip, r5, r7
 801e312:	9801      	ldr	r0, [sp, #4]
 801e314:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801e318:	0e07      	lsrs	r7, r0, #24
 801e31a:	2fff      	cmp	r7, #255	; 0xff
 801e31c:	d116      	bne.n	801e34c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801e31e:	f06f 0501 	mvn.w	r5, #1
 801e322:	fb05 f706 	mul.w	r7, r5, r6
 801e326:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801e32a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801e32e:	0945      	lsrs	r5, r0, #5
 801e330:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e334:	ea4c 0505 	orr.w	r5, ip, r5
 801e338:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e33c:	4305      	orrs	r5, r0
 801e33e:	53e5      	strh	r5, [r4, r7]
 801e340:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e342:	4401      	add	r1, r0
 801e344:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e346:	3e01      	subs	r6, #1
 801e348:	4402      	add	r2, r0
 801e34a:	e790      	b.n	801e26e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801e34c:	b2fd      	uxtb	r5, r7
 801e34e:	2f00      	cmp	r7, #0
 801e350:	d0f6      	beq.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e352:	f06f 0701 	mvn.w	r7, #1
 801e356:	4377      	muls	r7, r6
 801e358:	fa1f f985 	uxth.w	r9, r5
 801e35c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801e360:	9702      	str	r7, [sp, #8]
 801e362:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e366:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801e36a:	43ed      	mvns	r5, r5
 801e36c:	b2ed      	uxtb	r5, r5
 801e36e:	fb17 f709 	smulbb	r7, r7, r9
 801e372:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e376:	fb0c 7c05 	mla	ip, ip, r5, r7
 801e37a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801e37e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e382:	b2c0      	uxtb	r0, r0
 801e384:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e388:	fa5f fe8e 	uxtb.w	lr, lr
 801e38c:	fb10 f009 	smulbb	r0, r0, r9
 801e390:	fb0e 0005 	mla	r0, lr, r5, r0
 801e394:	b280      	uxth	r0, r0
 801e396:	fa1f fc8c 	uxth.w	ip, ip
 801e39a:	fb1a fa09 	smulbb	sl, sl, r9
 801e39e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e3a2:	fb07 a705 	mla	r7, r7, r5, sl
 801e3a6:	f100 0a01 	add.w	sl, r0, #1
 801e3aa:	f10c 0501 	add.w	r5, ip, #1
 801e3ae:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801e3b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801e3b6:	b2bf      	uxth	r7, r7
 801e3b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e3bc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e3c0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801e3c4:	f107 0a01 	add.w	sl, r7, #1
 801e3c8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801e3cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e3d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e3d4:	9802      	ldr	r0, [sp, #8]
 801e3d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801e3da:	f824 c000 	strh.w	ip, [r4, r0]
 801e3de:	e7af      	b.n	801e340 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e3e0:	f04f 0e00 	mov.w	lr, #0
 801e3e4:	eba3 000e 	sub.w	r0, r3, lr
 801e3e8:	2800      	cmp	r0, #0
 801e3ea:	f77f af43 	ble.w	801e274 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801e3ee:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801e3f2:	140d      	asrs	r5, r1, #16
 801e3f4:	1410      	asrs	r0, r2, #16
 801e3f6:	fb06 5000 	mla	r0, r6, r0, r5
 801e3fa:	9d01      	ldr	r5, [sp, #4]
 801e3fc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801e400:	0e2e      	lsrs	r6, r5, #24
 801e402:	2eff      	cmp	r6, #255	; 0xff
 801e404:	d112      	bne.n	801e42c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801e406:	482c      	ldr	r0, [pc, #176]	; (801e4b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801e408:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801e40c:	0968      	lsrs	r0, r5, #5
 801e40e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801e412:	4330      	orrs	r0, r6
 801e414:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e418:	4328      	orrs	r0, r5
 801e41a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801e41e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e420:	4401      	add	r1, r0
 801e422:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e424:	f10e 0e01 	add.w	lr, lr, #1
 801e428:	4402      	add	r2, r0
 801e42a:	e7db      	b.n	801e3e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801e42c:	b2f0      	uxtb	r0, r6
 801e42e:	2e00      	cmp	r6, #0
 801e430:	d0f5      	beq.n	801e41e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e432:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801e436:	fa1f f980 	uxth.w	r9, r0
 801e43a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e43e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801e442:	43c0      	mvns	r0, r0
 801e444:	b2c0      	uxtb	r0, r0
 801e446:	fb16 f609 	smulbb	r6, r6, r9
 801e44a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e44e:	fb07 6700 	mla	r7, r7, r0, r6
 801e452:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801e456:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e45a:	b2ed      	uxtb	r5, r5
 801e45c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e460:	fa5f fc8c 	uxtb.w	ip, ip
 801e464:	fb15 f509 	smulbb	r5, r5, r9
 801e468:	fb0c 5500 	mla	r5, ip, r0, r5
 801e46c:	b2bf      	uxth	r7, r7
 801e46e:	fb1a fa09 	smulbb	sl, sl, r9
 801e472:	b2ad      	uxth	r5, r5
 801e474:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e478:	fb06 a600 	mla	r6, r6, r0, sl
 801e47c:	1c78      	adds	r0, r7, #1
 801e47e:	f105 0a01 	add.w	sl, r5, #1
 801e482:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801e486:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e48a:	b2b6      	uxth	r6, r6
 801e48c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e490:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e494:	ea4a 0707 	orr.w	r7, sl, r7
 801e498:	f106 0a01 	add.w	sl, r6, #1
 801e49c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e4a0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e4a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e4a8:	ea47 070a 	orr.w	r7, r7, sl
 801e4ac:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801e4b0:	e7b5      	b.n	801e41e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801e4b2:	b005      	add	sp, #20
 801e4b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e4b8:	fffff800 	.word	0xfffff800

0801e4bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4c0:	b087      	sub	sp, #28
 801e4c2:	468b      	mov	fp, r1
 801e4c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e4c6:	9203      	str	r2, [sp, #12]
 801e4c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801e4cc:	9204      	str	r2, [sp, #16]
 801e4ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e4d2:	6841      	ldr	r1, [r0, #4]
 801e4d4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801e4d8:	fb01 2404 	mla	r4, r1, r4, r2
 801e4dc:	6802      	ldr	r2, [r0, #0]
 801e4de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e4e2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e4e6:	3201      	adds	r2, #1
 801e4e8:	f022 0201 	bic.w	r2, r2, #1
 801e4ec:	9200      	str	r2, [sp, #0]
 801e4ee:	f8d9 2000 	ldr.w	r2, [r9]
 801e4f2:	9201      	str	r2, [sp, #4]
 801e4f4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e4f8:	f1bb 0f00 	cmp.w	fp, #0
 801e4fc:	dc03      	bgt.n	801e506 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e4fe:	9a03      	ldr	r2, [sp, #12]
 801e500:	2a00      	cmp	r2, #0
 801e502:	f340 8169 	ble.w	801e7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e506:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e508:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801e50c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801e510:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e514:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e516:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e51a:	2b00      	cmp	r3, #0
 801e51c:	dd0e      	ble.n	801e53c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e51e:	1402      	asrs	r2, r0, #16
 801e520:	d405      	bmi.n	801e52e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e522:	42ba      	cmp	r2, r7
 801e524:	da03      	bge.n	801e52e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e526:	140a      	asrs	r2, r1, #16
 801e528:	d401      	bmi.n	801e52e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e52a:	42b2      	cmp	r2, r6
 801e52c:	db07      	blt.n	801e53e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801e52e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e530:	4410      	add	r0, r2
 801e532:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e534:	3b01      	subs	r3, #1
 801e536:	4411      	add	r1, r2
 801e538:	3402      	adds	r4, #2
 801e53a:	e7ee      	b.n	801e51a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801e53c:	d017      	beq.n	801e56e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801e53e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e540:	1e5a      	subs	r2, r3, #1
 801e542:	fb05 0502 	mla	r5, r5, r2, r0
 801e546:	142d      	asrs	r5, r5, #16
 801e548:	d409      	bmi.n	801e55e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e54a:	42bd      	cmp	r5, r7
 801e54c:	da07      	bge.n	801e55e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e54e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e550:	fb05 1202 	mla	r2, r5, r2, r1
 801e554:	1412      	asrs	r2, r2, #16
 801e556:	d402      	bmi.n	801e55e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e558:	42b2      	cmp	r2, r6
 801e55a:	f2c0 80c7 	blt.w	801e6ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801e55e:	2700      	movs	r7, #0
 801e560:	19da      	adds	r2, r3, r7
 801e562:	2a00      	cmp	r2, #0
 801e564:	dc3e      	bgt.n	801e5e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e566:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e56a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e56e:	f1bb 0f00 	cmp.w	fp, #0
 801e572:	f340 8131 	ble.w	801e7d8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e576:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e57a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e57e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e582:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e584:	f1bb 0b01 	subs.w	fp, fp, #1
 801e588:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e58c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e590:	eeb0 6a62 	vmov.f32	s12, s5
 801e594:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e598:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e59c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e5a0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e5a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e5a8:	eeb0 6a43 	vmov.f32	s12, s6
 801e5ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e5b0:	ee12 2a90 	vmov	r2, s5
 801e5b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e5b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5bc:	ee13 2a10 	vmov	r2, s6
 801e5c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e5c4:	9313      	str	r3, [sp, #76]	; 0x4c
 801e5c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e5cc:	9a03      	ldr	r2, [sp, #12]
 801e5ce:	9314      	str	r3, [sp, #80]	; 0x50
 801e5d0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e5d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e5d6:	eeb0 3a67 	vmov.f32	s6, s15
 801e5da:	bf08      	it	eq
 801e5dc:	4613      	moveq	r3, r2
 801e5de:	eef0 2a47 	vmov.f32	s5, s14
 801e5e2:	e789      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e5e4:	1405      	asrs	r5, r0, #16
 801e5e6:	d435      	bmi.n	801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5e8:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801e5ec:	42aa      	cmp	r2, r5
 801e5ee:	dd31      	ble.n	801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5f0:	140e      	asrs	r6, r1, #16
 801e5f2:	d42f      	bmi.n	801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5f4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801e5f8:	42b2      	cmp	r2, r6
 801e5fa:	dd2b      	ble.n	801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e5fc:	9a00      	ldr	r2, [sp, #0]
 801e5fe:	fb06 5502 	mla	r5, r6, r2, r5
 801e602:	086a      	lsrs	r2, r5, #1
 801e604:	9e01      	ldr	r6, [sp, #4]
 801e606:	5cb2      	ldrb	r2, [r6, r2]
 801e608:	07ee      	lsls	r6, r5, #31
 801e60a:	bf54      	ite	pl
 801e60c:	f002 020f 	andpl.w	r2, r2, #15
 801e610:	1112      	asrmi	r2, r2, #4
 801e612:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e616:	b2d2      	uxtb	r2, r2
 801e618:	b1e2      	cbz	r2, 801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e61a:	9d04      	ldr	r5, [sp, #16]
 801e61c:	436a      	muls	r2, r5
 801e61e:	1c55      	adds	r5, r2, #1
 801e620:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e624:	4d6e      	ldr	r5, [pc, #440]	; (801e7e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e626:	682d      	ldr	r5, [r5, #0]
 801e628:	1212      	asrs	r2, r2, #8
 801e62a:	0a2e      	lsrs	r6, r5, #8
 801e62c:	2aff      	cmp	r2, #255	; 0xff
 801e62e:	9605      	str	r6, [sp, #20]
 801e630:	d116      	bne.n	801e660 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e632:	f06f 0201 	mvn.w	r2, #1
 801e636:	fb02 fc07 	mul.w	ip, r2, r7
 801e63a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801e63e:	096a      	lsrs	r2, r5, #5
 801e640:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e644:	f026 0607 	bic.w	r6, r6, #7
 801e648:	4316      	orrs	r6, r2
 801e64a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e64e:	432e      	orrs	r6, r5
 801e650:	f824 600c 	strh.w	r6, [r4, ip]
 801e654:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e656:	4410      	add	r0, r2
 801e658:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e65a:	3f01      	subs	r7, #1
 801e65c:	4411      	add	r1, r2
 801e65e:	e77f      	b.n	801e560 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801e660:	f06f 0601 	mvn.w	r6, #1
 801e664:	437e      	muls	r6, r7
 801e666:	fa1f fa82 	uxth.w	sl, r2
 801e66a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801e66e:	9602      	str	r6, [sp, #8]
 801e670:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801e674:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801e678:	43d2      	mvns	r2, r2
 801e67a:	b2d2      	uxtb	r2, r2
 801e67c:	fb1c fc0a 	smulbb	ip, ip, sl
 801e680:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801e684:	fb0e ce02 	mla	lr, lr, r2, ip
 801e688:	b2ed      	uxtb	r5, r5
 801e68a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801e68e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801e692:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801e696:	fa5f f888 	uxtb.w	r8, r8
 801e69a:	fb15 f50a 	smulbb	r5, r5, sl
 801e69e:	fb08 5502 	mla	r5, r8, r2, r5
 801e6a2:	fa1f fe8e 	uxth.w	lr, lr
 801e6a6:	fb16 f60a 	smulbb	r6, r6, sl
 801e6aa:	b2ad      	uxth	r5, r5
 801e6ac:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e6b0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801e6b4:	f10e 0201 	add.w	r2, lr, #1
 801e6b8:	1c6e      	adds	r6, r5, #1
 801e6ba:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801e6be:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801e6c2:	fa1f fc8c 	uxth.w	ip, ip
 801e6c6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e6ca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801e6ce:	ea46 0e0e 	orr.w	lr, r6, lr
 801e6d2:	f10c 0601 	add.w	r6, ip, #1
 801e6d6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801e6da:	0976      	lsrs	r6, r6, #5
 801e6dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e6e0:	9a02      	ldr	r2, [sp, #8]
 801e6e2:	ea4e 0e06 	orr.w	lr, lr, r6
 801e6e6:	f824 e002 	strh.w	lr, [r4, r2]
 801e6ea:	e7b3      	b.n	801e654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e6ec:	f04f 0800 	mov.w	r8, #0
 801e6f0:	eba3 0208 	sub.w	r2, r3, r8
 801e6f4:	2a00      	cmp	r2, #0
 801e6f6:	f77f af36 	ble.w	801e566 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801e6fa:	9e00      	ldr	r6, [sp, #0]
 801e6fc:	1402      	asrs	r2, r0, #16
 801e6fe:	140d      	asrs	r5, r1, #16
 801e700:	fb06 2505 	mla	r5, r6, r5, r2
 801e704:	086a      	lsrs	r2, r5, #1
 801e706:	9e01      	ldr	r6, [sp, #4]
 801e708:	5cb2      	ldrb	r2, [r6, r2]
 801e70a:	07ed      	lsls	r5, r5, #31
 801e70c:	bf54      	ite	pl
 801e70e:	f002 020f 	andpl.w	r2, r2, #15
 801e712:	1112      	asrmi	r2, r2, #4
 801e714:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e718:	b2d2      	uxtb	r2, r2
 801e71a:	b1c2      	cbz	r2, 801e74e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e71c:	9d04      	ldr	r5, [sp, #16]
 801e71e:	436a      	muls	r2, r5
 801e720:	1c55      	adds	r5, r2, #1
 801e722:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801e726:	4d2e      	ldr	r5, [pc, #184]	; (801e7e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801e728:	1212      	asrs	r2, r2, #8
 801e72a:	682e      	ldr	r6, [r5, #0]
 801e72c:	2aff      	cmp	r2, #255	; 0xff
 801e72e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801e732:	d113      	bne.n	801e75c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801e734:	0972      	lsrs	r2, r6, #5
 801e736:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e73a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e73e:	f025 0507 	bic.w	r5, r5, #7
 801e742:	4315      	orrs	r5, r2
 801e744:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e748:	4335      	orrs	r5, r6
 801e74a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801e74e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e750:	4410      	add	r0, r2
 801e752:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e754:	f108 0801 	add.w	r8, r8, #1
 801e758:	4411      	add	r1, r2
 801e75a:	e7c9      	b.n	801e6f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801e75c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801e760:	fa1f fa82 	uxth.w	sl, r2
 801e764:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801e768:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801e76c:	43d2      	mvns	r2, r2
 801e76e:	b2d2      	uxtb	r2, r2
 801e770:	fb17 f70a 	smulbb	r7, r7, sl
 801e774:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e778:	fb0c 7c02 	mla	ip, ip, r2, r7
 801e77c:	b2f6      	uxtb	r6, r6
 801e77e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801e782:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e786:	fa5f fe8e 	uxtb.w	lr, lr
 801e78a:	fb16 f60a 	smulbb	r6, r6, sl
 801e78e:	fb0e 6602 	mla	r6, lr, r2, r6
 801e792:	b2ed      	uxtb	r5, r5
 801e794:	fa1f fc8c 	uxth.w	ip, ip
 801e798:	fb15 f50a 	smulbb	r5, r5, sl
 801e79c:	b2b6      	uxth	r6, r6
 801e79e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e7a2:	fb07 5702 	mla	r7, r7, r2, r5
 801e7a6:	f10c 0201 	add.w	r2, ip, #1
 801e7aa:	1c75      	adds	r5, r6, #1
 801e7ac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801e7b0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e7b4:	b2bf      	uxth	r7, r7
 801e7b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e7ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e7be:	ea45 0c0c 	orr.w	ip, r5, ip
 801e7c2:	1c7d      	adds	r5, r7, #1
 801e7c4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801e7c8:	096d      	lsrs	r5, r5, #5
 801e7ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7ce:	ea4c 0c05 	orr.w	ip, ip, r5
 801e7d2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801e7d6:	e7ba      	b.n	801e74e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801e7d8:	b007      	add	sp, #28
 801e7da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e7de:	bf00      	nop
 801e7e0:	2001384c 	.word	0x2001384c

0801e7e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7e8:	b087      	sub	sp, #28
 801e7ea:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801eaf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801e7ee:	9815      	ldr	r0, [sp, #84]	; 0x54
 801e7f0:	9205      	str	r2, [sp, #20]
 801e7f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801e7f6:	9101      	str	r1, [sp, #4]
 801e7f8:	6841      	ldr	r1, [r0, #4]
 801e7fa:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801e7fe:	fb01 2404 	mla	r4, r1, r4, r2
 801e802:	6802      	ldr	r2, [r0, #0]
 801e804:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801e808:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e80c:	3201      	adds	r2, #1
 801e80e:	f022 0201 	bic.w	r2, r2, #1
 801e812:	9202      	str	r2, [sp, #8]
 801e814:	f8db 2000 	ldr.w	r2, [fp]
 801e818:	9203      	str	r2, [sp, #12]
 801e81a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801e81e:	9a01      	ldr	r2, [sp, #4]
 801e820:	2a00      	cmp	r2, #0
 801e822:	dc03      	bgt.n	801e82c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e824:	9a05      	ldr	r2, [sp, #20]
 801e826:	2a00      	cmp	r2, #0
 801e828:	f340 8162 	ble.w	801eaf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e82c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e82e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801e832:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801e836:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801e83a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e83c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801e840:	2b00      	cmp	r3, #0
 801e842:	dd0e      	ble.n	801e862 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801e844:	1402      	asrs	r2, r0, #16
 801e846:	d405      	bmi.n	801e854 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e848:	42ba      	cmp	r2, r7
 801e84a:	da03      	bge.n	801e854 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e84c:	140a      	asrs	r2, r1, #16
 801e84e:	d401      	bmi.n	801e854 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801e850:	42b2      	cmp	r2, r6
 801e852:	db07      	blt.n	801e864 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e854:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e856:	4410      	add	r0, r2
 801e858:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e85a:	3b01      	subs	r3, #1
 801e85c:	4411      	add	r1, r2
 801e85e:	3402      	adds	r4, #2
 801e860:	e7ee      	b.n	801e840 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801e862:	d017      	beq.n	801e894 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801e864:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e866:	1e5a      	subs	r2, r3, #1
 801e868:	fb05 0502 	mla	r5, r5, r2, r0
 801e86c:	142d      	asrs	r5, r5, #16
 801e86e:	d409      	bmi.n	801e884 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e870:	42bd      	cmp	r5, r7
 801e872:	da07      	bge.n	801e884 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e874:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e876:	fb05 1202 	mla	r2, r5, r2, r1
 801e87a:	1412      	asrs	r2, r2, #16
 801e87c:	d402      	bmi.n	801e884 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801e87e:	42b2      	cmp	r2, r6
 801e880:	f2c0 80c3 	blt.w	801ea0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801e884:	2500      	movs	r5, #0
 801e886:	195a      	adds	r2, r3, r5
 801e888:	2a00      	cmp	r2, #0
 801e88a:	dc3f      	bgt.n	801e90c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801e88c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801e890:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801e894:	9b01      	ldr	r3, [sp, #4]
 801e896:	2b00      	cmp	r3, #0
 801e898:	f340 812a 	ble.w	801eaf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e89c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e8a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e8a4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801e8a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e8ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e8b2:	eeb0 6a62 	vmov.f32	s12, s5
 801e8b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e8ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e8be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e8c2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801e8c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e8ca:	eeb0 6a43 	vmov.f32	s12, s6
 801e8ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e8d2:	ee12 2a90 	vmov	r2, s5
 801e8d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e8da:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8de:	ee13 2a10 	vmov	r2, s6
 801e8e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801e8e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8ea:	9314      	str	r3, [sp, #80]	; 0x50
 801e8ec:	9b01      	ldr	r3, [sp, #4]
 801e8ee:	9a05      	ldr	r2, [sp, #20]
 801e8f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801e8f4:	3b01      	subs	r3, #1
 801e8f6:	9301      	str	r3, [sp, #4]
 801e8f8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801e8fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e8fe:	eeb0 3a67 	vmov.f32	s6, s15
 801e902:	bf08      	it	eq
 801e904:	4613      	moveq	r3, r2
 801e906:	eef0 2a47 	vmov.f32	s5, s14
 801e90a:	e788      	b.n	801e81e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e90c:	1406      	asrs	r6, r0, #16
 801e90e:	d42c      	bmi.n	801e96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e910:	f8db 2008 	ldr.w	r2, [fp, #8]
 801e914:	42b2      	cmp	r2, r6
 801e916:	dd28      	ble.n	801e96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e918:	140f      	asrs	r7, r1, #16
 801e91a:	d426      	bmi.n	801e96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e91c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801e920:	42ba      	cmp	r2, r7
 801e922:	dd22      	ble.n	801e96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e924:	9a02      	ldr	r2, [sp, #8]
 801e926:	fb07 6602 	mla	r6, r7, r2, r6
 801e92a:	0872      	lsrs	r2, r6, #1
 801e92c:	9f03      	ldr	r7, [sp, #12]
 801e92e:	5cba      	ldrb	r2, [r7, r2]
 801e930:	07f6      	lsls	r6, r6, #31
 801e932:	bf54      	ite	pl
 801e934:	f002 020f 	andpl.w	r2, r2, #15
 801e938:	1112      	asrmi	r2, r2, #4
 801e93a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801e93e:	b2d2      	uxtb	r2, r2
 801e940:	2aff      	cmp	r2, #255	; 0xff
 801e942:	d118      	bne.n	801e976 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801e944:	f8d8 2000 	ldr.w	r2, [r8]
 801e948:	f06f 0601 	mvn.w	r6, #1
 801e94c:	fb06 f705 	mul.w	r7, r6, r5
 801e950:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801e954:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801e958:	0956      	lsrs	r6, r2, #5
 801e95a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e95e:	ea4c 0606 	orr.w	r6, ip, r6
 801e962:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e966:	4316      	orrs	r6, r2
 801e968:	53e6      	strh	r6, [r4, r7]
 801e96a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e96c:	4410      	add	r0, r2
 801e96e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e970:	3d01      	subs	r5, #1
 801e972:	4411      	add	r1, r2
 801e974:	e787      	b.n	801e886 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801e976:	2a00      	cmp	r2, #0
 801e978:	d0f7      	beq.n	801e96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e97a:	f06f 0601 	mvn.w	r6, #1
 801e97e:	436e      	muls	r6, r5
 801e980:	f8d8 c000 	ldr.w	ip, [r8]
 801e984:	f834 e006 	ldrh.w	lr, [r4, r6]
 801e988:	9604      	str	r6, [sp, #16]
 801e98a:	fa1f f982 	uxth.w	r9, r2
 801e98e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801e992:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801e996:	43d2      	mvns	r2, r2
 801e998:	b2d2      	uxtb	r2, r2
 801e99a:	fb16 f609 	smulbb	r6, r6, r9
 801e99e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e9a2:	fb07 6702 	mla	r7, r7, r2, r6
 801e9a6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801e9aa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801e9ae:	fa5f fc8c 	uxtb.w	ip, ip
 801e9b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801e9b6:	fa5f fe8e 	uxtb.w	lr, lr
 801e9ba:	fb1c fc09 	smulbb	ip, ip, r9
 801e9be:	fb0e cc02 	mla	ip, lr, r2, ip
 801e9c2:	b2bf      	uxth	r7, r7
 801e9c4:	fb1a fa09 	smulbb	sl, sl, r9
 801e9c8:	fa1f fc8c 	uxth.w	ip, ip
 801e9cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e9d0:	fb06 a602 	mla	r6, r6, r2, sl
 801e9d4:	1c7a      	adds	r2, r7, #1
 801e9d6:	f10c 0a01 	add.w	sl, ip, #1
 801e9da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e9de:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801e9e2:	b2b6      	uxth	r6, r6
 801e9e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801e9e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e9ec:	ea4a 0707 	orr.w	r7, sl, r7
 801e9f0:	f106 0a01 	add.w	sl, r6, #1
 801e9f4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801e9f8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e9fc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ea00:	9a04      	ldr	r2, [sp, #16]
 801ea02:	ea47 070a 	orr.w	r7, r7, sl
 801ea06:	52a7      	strh	r7, [r4, r2]
 801ea08:	e7af      	b.n	801e96a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ea0a:	f04f 0e00 	mov.w	lr, #0
 801ea0e:	eba3 020e 	sub.w	r2, r3, lr
 801ea12:	2a00      	cmp	r2, #0
 801ea14:	f77f af3a 	ble.w	801e88c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ea18:	9e02      	ldr	r6, [sp, #8]
 801ea1a:	1402      	asrs	r2, r0, #16
 801ea1c:	140d      	asrs	r5, r1, #16
 801ea1e:	fb06 2505 	mla	r5, r6, r5, r2
 801ea22:	086a      	lsrs	r2, r5, #1
 801ea24:	9e03      	ldr	r6, [sp, #12]
 801ea26:	5cb2      	ldrb	r2, [r6, r2]
 801ea28:	07ed      	lsls	r5, r5, #31
 801ea2a:	bf54      	ite	pl
 801ea2c:	f002 020f 	andpl.w	r2, r2, #15
 801ea30:	1112      	asrmi	r2, r2, #4
 801ea32:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ea36:	b2d2      	uxtb	r2, r2
 801ea38:	2aff      	cmp	r2, #255	; 0xff
 801ea3a:	d115      	bne.n	801ea68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ea3c:	f8d8 5000 	ldr.w	r5, [r8]
 801ea40:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ea44:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ea48:	096a      	lsrs	r2, r5, #5
 801ea4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea4e:	4332      	orrs	r2, r6
 801ea50:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ea54:	432a      	orrs	r2, r5
 801ea56:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ea5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ea5c:	4410      	add	r0, r2
 801ea5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ea60:	f10e 0e01 	add.w	lr, lr, #1
 801ea64:	4411      	add	r1, r2
 801ea66:	e7d2      	b.n	801ea0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ea68:	2a00      	cmp	r2, #0
 801ea6a:	d0f6      	beq.n	801ea5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ea6c:	f8d8 7000 	ldr.w	r7, [r8]
 801ea70:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ea74:	fa1f f982 	uxth.w	r9, r2
 801ea78:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ea7c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ea80:	43d2      	mvns	r2, r2
 801ea82:	b2d2      	uxtb	r2, r2
 801ea84:	fb15 f509 	smulbb	r5, r5, r9
 801ea88:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ea8c:	fb06 5602 	mla	r6, r6, r2, r5
 801ea90:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ea94:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ea98:	b2ff      	uxtb	r7, r7
 801ea9a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ea9e:	fa5f fc8c 	uxtb.w	ip, ip
 801eaa2:	fb17 f709 	smulbb	r7, r7, r9
 801eaa6:	fb0c 7702 	mla	r7, ip, r2, r7
 801eaaa:	b2b6      	uxth	r6, r6
 801eaac:	fb1a fa09 	smulbb	sl, sl, r9
 801eab0:	b2bf      	uxth	r7, r7
 801eab2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801eab6:	fb05 a502 	mla	r5, r5, r2, sl
 801eaba:	1c72      	adds	r2, r6, #1
 801eabc:	f107 0a01 	add.w	sl, r7, #1
 801eac0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eac4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801eac8:	b2ad      	uxth	r5, r5
 801eaca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801eace:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ead2:	ea4a 0606 	orr.w	r6, sl, r6
 801ead6:	f105 0a01 	add.w	sl, r5, #1
 801eada:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801eade:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801eae2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801eae6:	ea46 060a 	orr.w	r6, r6, sl
 801eaea:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801eaee:	e7b4      	b.n	801ea5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801eaf0:	b007      	add	sp, #28
 801eaf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eaf6:	bf00      	nop
 801eaf8:	2001384c 	.word	0x2001384c

0801eafc <_ZN8touchgfx8LCD16bppD1Ev>:
 801eafc:	4770      	bx	lr

0801eafe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801eafe:	4770      	bx	lr

0801eb00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801eb00:	4770      	bx	lr

0801eb02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801eb02:	4770      	bx	lr

0801eb04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801eb04:	4770      	bx	lr

0801eb06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801eb06:	4770      	bx	lr

0801eb08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801eb08:	4770      	bx	lr

0801eb0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801eb0a:	4770      	bx	lr

0801eb0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb0c:	4770      	bx	lr

0801eb0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb0e:	4770      	bx	lr

0801eb10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb10:	4770      	bx	lr

0801eb12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb12:	4770      	bx	lr

0801eb14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb14:	4770      	bx	lr

0801eb16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb16:	4770      	bx	lr

0801eb18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb18:	4770      	bx	lr

0801eb1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb1a:	4770      	bx	lr

0801eb1c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb1c:	4770      	bx	lr

0801eb1e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb1e:	4770      	bx	lr

0801eb20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb20:	4770      	bx	lr

0801eb22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb22:	4770      	bx	lr

0801eb24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801eb24:	4770      	bx	lr

0801eb26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801eb26:	4770      	bx	lr

0801eb28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801eb28:	4770      	bx	lr

0801eb2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801eb2a:	4770      	bx	lr

0801eb2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb2c:	4770      	bx	lr

0801eb2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb2e:	4770      	bx	lr

0801eb30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb30:	4770      	bx	lr

0801eb32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801eb32:	4770      	bx	lr

0801eb34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801eb34:	4770      	bx	lr

0801eb36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801eb36:	4770      	bx	lr

0801eb38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801eb38:	4770      	bx	lr

0801eb3a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801eb3a:	4770      	bx	lr

0801eb3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801eb3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eb40:	b088      	sub	sp, #32
 801eb42:	ac08      	add	r4, sp, #32
 801eb44:	4606      	mov	r6, r0
 801eb46:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801eb4a:	4620      	mov	r0, r4
 801eb4c:	4688      	mov	r8, r1
 801eb4e:	4691      	mov	r9, r2
 801eb50:	f7fd fc62 	bl	801c418 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eb54:	6833      	ldr	r3, [r6, #0]
 801eb56:	4605      	mov	r5, r0
 801eb58:	4620      	mov	r0, r4
 801eb5a:	699f      	ldr	r7, [r3, #24]
 801eb5c:	f7fd fb70 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801eb60:	4682      	mov	sl, r0
 801eb62:	4620      	mov	r0, r4
 801eb64:	f7fd fba0 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801eb68:	9500      	str	r5, [sp, #0]
 801eb6a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801eb6e:	464b      	mov	r3, r9
 801eb70:	a806      	add	r0, sp, #24
 801eb72:	4642      	mov	r2, r8
 801eb74:	4631      	mov	r1, r6
 801eb76:	47b8      	blx	r7
 801eb78:	4628      	mov	r0, r5
 801eb7a:	b008      	add	sp, #32
 801eb7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801eb80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801eb80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801eb84:	2300      	movs	r3, #0
 801eb86:	9300      	str	r3, [sp, #0]
 801eb88:	4b3d      	ldr	r3, [pc, #244]	; (801ec80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801eb8a:	781b      	ldrb	r3, [r3, #0]
 801eb8c:	2b00      	cmp	r3, #0
 801eb8e:	d137      	bne.n	801ec00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801eb90:	4a3c      	ldr	r2, [pc, #240]	; (801ec84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801eb92:	f9b2 2000 	ldrsh.w	r2, [r2]
 801eb96:	f8ad 2004 	strh.w	r2, [sp, #4]
 801eb9a:	2b00      	cmp	r3, #0
 801eb9c:	d132      	bne.n	801ec04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801eb9e:	4b3a      	ldr	r3, [pc, #232]	; (801ec88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801eba0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801eba4:	6808      	ldr	r0, [r1, #0]
 801eba6:	6849      	ldr	r1, [r1, #4]
 801eba8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ebac:	ac02      	add	r4, sp, #8
 801ebae:	ab02      	add	r3, sp, #8
 801ebb0:	c303      	stmia	r3!, {r0, r1}
 801ebb2:	4669      	mov	r1, sp
 801ebb4:	4620      	mov	r0, r4
 801ebb6:	f7f9 fd83 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ebba:	4668      	mov	r0, sp
 801ebbc:	f7f9 fd3c 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ebc0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ebc4:	f8bd 2000 	ldrh.w	r2, [sp]
 801ebc8:	4d30      	ldr	r5, [pc, #192]	; (801ec8c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ebca:	4413      	add	r3, r2
 801ebcc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ebd0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ebd4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ebd8:	6828      	ldr	r0, [r5, #0]
 801ebda:	4413      	add	r3, r2
 801ebdc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ebe0:	6803      	ldr	r3, [r0, #0]
 801ebe2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ebe4:	4798      	blx	r3
 801ebe6:	f010 0f01 	tst.w	r0, #1
 801ebea:	462f      	mov	r7, r5
 801ebec:	d00c      	beq.n	801ec08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ebee:	6828      	ldr	r0, [r5, #0]
 801ebf0:	6803      	ldr	r3, [r0, #0]
 801ebf2:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ebf6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ebf8:	4798      	blx	r3
 801ebfa:	b004      	add	sp, #16
 801ebfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ec00:	4a21      	ldr	r2, [pc, #132]	; (801ec88 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ec02:	e7c6      	b.n	801eb92 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ec04:	4b1f      	ldr	r3, [pc, #124]	; (801ec84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec06:	e7cb      	b.n	801eba0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ec08:	6838      	ldr	r0, [r7, #0]
 801ec0a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ec0e:	6803      	ldr	r3, [r0, #0]
 801ec10:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ec14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ec16:	4798      	blx	r3
 801ec18:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ec1c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ec20:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ec24:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ec28:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ec2c:	6838      	ldr	r0, [r7, #0]
 801ec2e:	6803      	ldr	r3, [r0, #0]
 801ec30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ec32:	4798      	blx	r3
 801ec34:	4a13      	ldr	r2, [pc, #76]	; (801ec84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ec36:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ec3a:	8813      	ldrh	r3, [r2, #0]
 801ec3c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ec40:	fb03 1404 	mla	r4, r3, r4, r1
 801ec44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ec48:	435d      	muls	r5, r3
 801ec4a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ec4e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ec52:	4691      	mov	r9, r2
 801ec54:	6838      	ldr	r0, [r7, #0]
 801ec56:	42ac      	cmp	r4, r5
 801ec58:	6803      	ldr	r3, [r0, #0]
 801ec5a:	d20e      	bcs.n	801ec7a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ec5c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ec60:	4632      	mov	r2, r6
 801ec62:	4643      	mov	r3, r8
 801ec64:	4621      	mov	r1, r4
 801ec66:	47d0      	blx	sl
 801ec68:	f8b9 3000 	ldrh.w	r3, [r9]
 801ec6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ec70:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ec74:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ec78:	e7ec      	b.n	801ec54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ec7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ec7c:	4798      	blx	r3
 801ec7e:	e7bc      	b.n	801ebfa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ec80:	20013834 	.word	0x20013834
 801ec84:	20013836 	.word	0x20013836
 801ec88:	20013838 	.word	0x20013838
 801ec8c:	2001383c 	.word	0x2001383c

0801ec90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ec90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec94:	b08b      	sub	sp, #44	; 0x2c
 801ec96:	460f      	mov	r7, r1
 801ec98:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ec9c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801eca0:	4616      	mov	r6, r2
 801eca2:	f1bb 0f00 	cmp.w	fp, #0
 801eca6:	d04a      	beq.n	801ed3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801eca8:	6810      	ldr	r0, [r2, #0]
 801ecaa:	6851      	ldr	r1, [r2, #4]
 801ecac:	ad06      	add	r5, sp, #24
 801ecae:	c503      	stmia	r5!, {r0, r1}
 801ecb0:	6818      	ldr	r0, [r3, #0]
 801ecb2:	6859      	ldr	r1, [r3, #4]
 801ecb4:	ad08      	add	r5, sp, #32
 801ecb6:	c503      	stmia	r5!, {r0, r1}
 801ecb8:	a806      	add	r0, sp, #24
 801ecba:	f7f9 fcbd 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ecbe:	4631      	mov	r1, r6
 801ecc0:	a808      	add	r0, sp, #32
 801ecc2:	f7f9 fcfd 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ecc6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ecca:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ecce:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801ecd2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801ecd6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801ecda:	fb16 2103 	smlabb	r1, r6, r3, r2
 801ecde:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801ece2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801ece6:	4f5f      	ldr	r7, [pc, #380]	; (801ee64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ece8:	440a      	add	r2, r1
 801ecea:	f8ad 2020 	strh.w	r2, [sp, #32]
 801ecee:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801ecf2:	6838      	ldr	r0, [r7, #0]
 801ecf4:	4413      	add	r3, r2
 801ecf6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801ecfa:	6803      	ldr	r3, [r0, #0]
 801ecfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ecfe:	4798      	blx	r3
 801ed00:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed04:	46b9      	mov	r9, r7
 801ed06:	d11d      	bne.n	801ed44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801ed08:	b9fc      	cbnz	r4, 801ed4a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ed0a:	f010 0f01 	tst.w	r0, #1
 801ed0e:	d01c      	beq.n	801ed4a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801ed10:	f8d9 0000 	ldr.w	r0, [r9]
 801ed14:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801ed18:	6801      	ldr	r1, [r0, #0]
 801ed1a:	f8cd b00c 	str.w	fp, [sp, #12]
 801ed1e:	2700      	movs	r7, #0
 801ed20:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ed24:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ed28:	9402      	str	r4, [sp, #8]
 801ed2a:	b2ad      	uxth	r5, r5
 801ed2c:	fa1f f488 	uxth.w	r4, r8
 801ed30:	9501      	str	r5, [sp, #4]
 801ed32:	9400      	str	r4, [sp, #0]
 801ed34:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801ed36:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ed3a:	4631      	mov	r1, r6
 801ed3c:	47a0      	blx	r4
 801ed3e:	b00b      	add	sp, #44	; 0x2c
 801ed40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed44:	f010 0f04 	tst.w	r0, #4
 801ed48:	e7e1      	b.n	801ed0e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ed4a:	f8d9 0000 	ldr.w	r0, [r9]
 801ed4e:	6803      	ldr	r3, [r0, #0]
 801ed50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed52:	4798      	blx	r3
 801ed54:	4b44      	ldr	r3, [pc, #272]	; (801ee68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ed56:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801ed5a:	881a      	ldrh	r2, [r3, #0]
 801ed5c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ed60:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801ed64:	fb02 1404 	mla	r4, r2, r4, r1
 801ed68:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ed6c:	469a      	mov	sl, r3
 801ed6e:	fb05 f502 	mul.w	r5, r5, r2
 801ed72:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ed76:	d059      	beq.n	801ee2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ed78:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801ed7c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ed80:	fa1f f28b 	uxth.w	r2, fp
 801ed84:	fa1f f989 	uxth.w	r9, r9
 801ed88:	469e      	mov	lr, r3
 801ed8a:	42ac      	cmp	r4, r5
 801ed8c:	d264      	bcs.n	801ee58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ed8e:	eb04 0a07 	add.w	sl, r4, r7
 801ed92:	4554      	cmp	r4, sl
 801ed94:	d23d      	bcs.n	801ee12 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ed96:	8821      	ldrh	r1, [r4, #0]
 801ed98:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ed9c:	1208      	asrs	r0, r1, #8
 801ed9e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eda2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801eda6:	fb10 f009 	smulbb	r0, r0, r9
 801edaa:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801edae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801edb2:	00c9      	lsls	r1, r1, #3
 801edb4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801edb8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801edbc:	10d8      	asrs	r0, r3, #3
 801edbe:	b2c9      	uxtb	r1, r1
 801edc0:	00db      	lsls	r3, r3, #3
 801edc2:	fa1f fc8c 	uxth.w	ip, ip
 801edc6:	fb1b fb09 	smulbb	fp, fp, r9
 801edca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801edce:	b2db      	uxtb	r3, r3
 801edd0:	fb11 f109 	smulbb	r1, r1, r9
 801edd4:	fb00 b002 	mla	r0, r0, r2, fp
 801edd8:	fb03 1302 	mla	r3, r3, r2, r1
 801eddc:	f10c 0b01 	add.w	fp, ip, #1
 801ede0:	b29b      	uxth	r3, r3
 801ede2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801ede6:	b280      	uxth	r0, r0
 801ede8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801edec:	f103 0c01 	add.w	ip, r3, #1
 801edf0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801edf4:	1c43      	adds	r3, r0, #1
 801edf6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801edfa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801edfe:	0940      	lsrs	r0, r0, #5
 801ee00:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ee04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ee08:	ea4c 0c00 	orr.w	ip, ip, r0
 801ee0c:	f824 cb02 	strh.w	ip, [r4], #2
 801ee10:	e7bf      	b.n	801ed92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801ee12:	f8be 3000 	ldrh.w	r3, [lr]
 801ee16:	eba3 0308 	sub.w	r3, r3, r8
 801ee1a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee1e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee22:	eba3 0308 	sub.w	r3, r3, r8
 801ee26:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee2a:	e7ae      	b.n	801ed8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801ee2c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ee30:	f8d9 0000 	ldr.w	r0, [r9]
 801ee34:	42ac      	cmp	r4, r5
 801ee36:	6803      	ldr	r3, [r0, #0]
 801ee38:	d20e      	bcs.n	801ee58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ee3a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801ee3e:	4632      	mov	r2, r6
 801ee40:	463b      	mov	r3, r7
 801ee42:	4621      	mov	r1, r4
 801ee44:	47c0      	blx	r8
 801ee46:	f8ba 3000 	ldrh.w	r3, [sl]
 801ee4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ee4e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ee52:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ee56:	e7eb      	b.n	801ee30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801ee58:	4b02      	ldr	r3, [pc, #8]	; (801ee64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801ee5a:	6818      	ldr	r0, [r3, #0]
 801ee5c:	6803      	ldr	r3, [r0, #0]
 801ee5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee60:	4798      	blx	r3
 801ee62:	e76c      	b.n	801ed3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ee64:	2001383c 	.word	0x2001383c
 801ee68:	20013836 	.word	0x20013836

0801ee6c <_ZN8touchgfx8LCD16bppD0Ev>:
 801ee6c:	b510      	push	{r4, lr}
 801ee6e:	2184      	movs	r1, #132	; 0x84
 801ee70:	4604      	mov	r4, r0
 801ee72:	f00d fe7e 	bl	802cb72 <_ZdlPvj>
 801ee76:	4620      	mov	r0, r4
 801ee78:	bd10      	pop	{r4, pc}

0801ee7a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ee7a:	b510      	push	{r4, lr}
 801ee7c:	2104      	movs	r1, #4
 801ee7e:	4604      	mov	r4, r0
 801ee80:	f00d fe77 	bl	802cb72 <_ZdlPvj>
 801ee84:	4620      	mov	r0, r4
 801ee86:	bd10      	pop	{r4, pc}

0801ee88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ee88:	b510      	push	{r4, lr}
 801ee8a:	2104      	movs	r1, #4
 801ee8c:	4604      	mov	r4, r0
 801ee8e:	f00d fe70 	bl	802cb72 <_ZdlPvj>
 801ee92:	4620      	mov	r0, r4
 801ee94:	bd10      	pop	{r4, pc}

0801ee96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ee96:	b510      	push	{r4, lr}
 801ee98:	f640 0144 	movw	r1, #2116	; 0x844
 801ee9c:	4604      	mov	r4, r0
 801ee9e:	f00d fe68 	bl	802cb72 <_ZdlPvj>
 801eea2:	4620      	mov	r0, r4
 801eea4:	bd10      	pop	{r4, pc}

0801eea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eea6:	b510      	push	{r4, lr}
 801eea8:	2104      	movs	r1, #4
 801eeaa:	4604      	mov	r4, r0
 801eeac:	f00d fe61 	bl	802cb72 <_ZdlPvj>
 801eeb0:	4620      	mov	r0, r4
 801eeb2:	bd10      	pop	{r4, pc}

0801eeb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801eeb4:	b510      	push	{r4, lr}
 801eeb6:	2104      	movs	r1, #4
 801eeb8:	4604      	mov	r4, r0
 801eeba:	f00d fe5a 	bl	802cb72 <_ZdlPvj>
 801eebe:	4620      	mov	r0, r4
 801eec0:	bd10      	pop	{r4, pc}

0801eec2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801eec2:	b510      	push	{r4, lr}
 801eec4:	2104      	movs	r1, #4
 801eec6:	4604      	mov	r4, r0
 801eec8:	f00d fe53 	bl	802cb72 <_ZdlPvj>
 801eecc:	4620      	mov	r0, r4
 801eece:	bd10      	pop	{r4, pc}

0801eed0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801eed0:	b510      	push	{r4, lr}
 801eed2:	2104      	movs	r1, #4
 801eed4:	4604      	mov	r4, r0
 801eed6:	f00d fe4c 	bl	802cb72 <_ZdlPvj>
 801eeda:	4620      	mov	r0, r4
 801eedc:	bd10      	pop	{r4, pc}

0801eede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801eede:	b510      	push	{r4, lr}
 801eee0:	2104      	movs	r1, #4
 801eee2:	4604      	mov	r4, r0
 801eee4:	f00d fe45 	bl	802cb72 <_ZdlPvj>
 801eee8:	4620      	mov	r0, r4
 801eeea:	bd10      	pop	{r4, pc}

0801eeec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801eeec:	b510      	push	{r4, lr}
 801eeee:	2104      	movs	r1, #4
 801eef0:	4604      	mov	r4, r0
 801eef2:	f00d fe3e 	bl	802cb72 <_ZdlPvj>
 801eef6:	4620      	mov	r0, r4
 801eef8:	bd10      	pop	{r4, pc}

0801eefa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801eefa:	b510      	push	{r4, lr}
 801eefc:	2104      	movs	r1, #4
 801eefe:	4604      	mov	r4, r0
 801ef00:	f00d fe37 	bl	802cb72 <_ZdlPvj>
 801ef04:	4620      	mov	r0, r4
 801ef06:	bd10      	pop	{r4, pc}

0801ef08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801ef08:	b510      	push	{r4, lr}
 801ef0a:	2104      	movs	r1, #4
 801ef0c:	4604      	mov	r4, r0
 801ef0e:	f00d fe30 	bl	802cb72 <_ZdlPvj>
 801ef12:	4620      	mov	r0, r4
 801ef14:	bd10      	pop	{r4, pc}

0801ef16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef16:	b510      	push	{r4, lr}
 801ef18:	2104      	movs	r1, #4
 801ef1a:	4604      	mov	r4, r0
 801ef1c:	f00d fe29 	bl	802cb72 <_ZdlPvj>
 801ef20:	4620      	mov	r0, r4
 801ef22:	bd10      	pop	{r4, pc}

0801ef24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef24:	b510      	push	{r4, lr}
 801ef26:	2104      	movs	r1, #4
 801ef28:	4604      	mov	r4, r0
 801ef2a:	f00d fe22 	bl	802cb72 <_ZdlPvj>
 801ef2e:	4620      	mov	r0, r4
 801ef30:	bd10      	pop	{r4, pc}

0801ef32 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ef32:	b510      	push	{r4, lr}
 801ef34:	2104      	movs	r1, #4
 801ef36:	4604      	mov	r4, r0
 801ef38:	f00d fe1b 	bl	802cb72 <_ZdlPvj>
 801ef3c:	4620      	mov	r0, r4
 801ef3e:	bd10      	pop	{r4, pc}

0801ef40 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ef40:	b510      	push	{r4, lr}
 801ef42:	2104      	movs	r1, #4
 801ef44:	4604      	mov	r4, r0
 801ef46:	f00d fe14 	bl	802cb72 <_ZdlPvj>
 801ef4a:	4620      	mov	r0, r4
 801ef4c:	bd10      	pop	{r4, pc}

0801ef4e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ef4e:	b510      	push	{r4, lr}
 801ef50:	2104      	movs	r1, #4
 801ef52:	4604      	mov	r4, r0
 801ef54:	f00d fe0d 	bl	802cb72 <_ZdlPvj>
 801ef58:	4620      	mov	r0, r4
 801ef5a:	bd10      	pop	{r4, pc}

0801ef5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801ef5c:	b510      	push	{r4, lr}
 801ef5e:	2104      	movs	r1, #4
 801ef60:	4604      	mov	r4, r0
 801ef62:	f00d fe06 	bl	802cb72 <_ZdlPvj>
 801ef66:	4620      	mov	r0, r4
 801ef68:	bd10      	pop	{r4, pc}

0801ef6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801ef6a:	b510      	push	{r4, lr}
 801ef6c:	2104      	movs	r1, #4
 801ef6e:	4604      	mov	r4, r0
 801ef70:	f00d fdff 	bl	802cb72 <_ZdlPvj>
 801ef74:	4620      	mov	r0, r4
 801ef76:	bd10      	pop	{r4, pc}

0801ef78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801ef78:	b510      	push	{r4, lr}
 801ef7a:	2104      	movs	r1, #4
 801ef7c:	4604      	mov	r4, r0
 801ef7e:	f00d fdf8 	bl	802cb72 <_ZdlPvj>
 801ef82:	4620      	mov	r0, r4
 801ef84:	bd10      	pop	{r4, pc}

0801ef86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ef86:	b510      	push	{r4, lr}
 801ef88:	2104      	movs	r1, #4
 801ef8a:	4604      	mov	r4, r0
 801ef8c:	f00d fdf1 	bl	802cb72 <_ZdlPvj>
 801ef90:	4620      	mov	r0, r4
 801ef92:	bd10      	pop	{r4, pc}

0801ef94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801ef94:	b510      	push	{r4, lr}
 801ef96:	2104      	movs	r1, #4
 801ef98:	4604      	mov	r4, r0
 801ef9a:	f00d fdea 	bl	802cb72 <_ZdlPvj>
 801ef9e:	4620      	mov	r0, r4
 801efa0:	bd10      	pop	{r4, pc}

0801efa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801efa2:	b510      	push	{r4, lr}
 801efa4:	2104      	movs	r1, #4
 801efa6:	4604      	mov	r4, r0
 801efa8:	f00d fde3 	bl	802cb72 <_ZdlPvj>
 801efac:	4620      	mov	r0, r4
 801efae:	bd10      	pop	{r4, pc}

0801efb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801efb0:	b510      	push	{r4, lr}
 801efb2:	2104      	movs	r1, #4
 801efb4:	4604      	mov	r4, r0
 801efb6:	f00d fddc 	bl	802cb72 <_ZdlPvj>
 801efba:	4620      	mov	r0, r4
 801efbc:	bd10      	pop	{r4, pc}

0801efbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801efbe:	b510      	push	{r4, lr}
 801efc0:	2104      	movs	r1, #4
 801efc2:	4604      	mov	r4, r0
 801efc4:	f00d fdd5 	bl	802cb72 <_ZdlPvj>
 801efc8:	4620      	mov	r0, r4
 801efca:	bd10      	pop	{r4, pc}

0801efcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801efcc:	b510      	push	{r4, lr}
 801efce:	2104      	movs	r1, #4
 801efd0:	4604      	mov	r4, r0
 801efd2:	f00d fdce 	bl	802cb72 <_ZdlPvj>
 801efd6:	4620      	mov	r0, r4
 801efd8:	bd10      	pop	{r4, pc}

0801efda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801efda:	b510      	push	{r4, lr}
 801efdc:	2104      	movs	r1, #4
 801efde:	4604      	mov	r4, r0
 801efe0:	f00d fdc7 	bl	802cb72 <_ZdlPvj>
 801efe4:	4620      	mov	r0, r4
 801efe6:	bd10      	pop	{r4, pc}

0801efe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801efe8:	b510      	push	{r4, lr}
 801efea:	2104      	movs	r1, #4
 801efec:	4604      	mov	r4, r0
 801efee:	f00d fdc0 	bl	802cb72 <_ZdlPvj>
 801eff2:	4620      	mov	r0, r4
 801eff4:	bd10      	pop	{r4, pc}

0801eff6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801eff6:	b510      	push	{r4, lr}
 801eff8:	2104      	movs	r1, #4
 801effa:	4604      	mov	r4, r0
 801effc:	f00d fdb9 	bl	802cb72 <_ZdlPvj>
 801f000:	4620      	mov	r0, r4
 801f002:	bd10      	pop	{r4, pc}

0801f004 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801f004:	b510      	push	{r4, lr}
 801f006:	2104      	movs	r1, #4
 801f008:	4604      	mov	r4, r0
 801f00a:	f00d fdb2 	bl	802cb72 <_ZdlPvj>
 801f00e:	4620      	mov	r0, r4
 801f010:	bd10      	pop	{r4, pc}

0801f012 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801f012:	b510      	push	{r4, lr}
 801f014:	2104      	movs	r1, #4
 801f016:	4604      	mov	r4, r0
 801f018:	f00d fdab 	bl	802cb72 <_ZdlPvj>
 801f01c:	4620      	mov	r0, r4
 801f01e:	bd10      	pop	{r4, pc}

0801f020 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801f020:	b510      	push	{r4, lr}
 801f022:	2104      	movs	r1, #4
 801f024:	4604      	mov	r4, r0
 801f026:	f00d fda4 	bl	802cb72 <_ZdlPvj>
 801f02a:	4620      	mov	r0, r4
 801f02c:	bd10      	pop	{r4, pc}
	...

0801f030 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f034:	b08f      	sub	sp, #60	; 0x3c
 801f036:	461c      	mov	r4, r3
 801f038:	9205      	str	r2, [sp, #20]
 801f03a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f03e:	9100      	str	r1, [sp, #0]
 801f040:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f042:	9201      	str	r2, [sp, #4]
 801f044:	2a00      	cmp	r2, #0
 801f046:	f000 8115 	beq.w	801f274 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801f04a:	6820      	ldr	r0, [r4, #0]
 801f04c:	6861      	ldr	r1, [r4, #4]
 801f04e:	aa0a      	add	r2, sp, #40	; 0x28
 801f050:	c203      	stmia	r2!, {r0, r1}
 801f052:	6818      	ldr	r0, [r3, #0]
 801f054:	6859      	ldr	r1, [r3, #4]
 801f056:	aa0c      	add	r2, sp, #48	; 0x30
 801f058:	c203      	stmia	r2!, {r0, r1}
 801f05a:	a80a      	add	r0, sp, #40	; 0x28
 801f05c:	f7f9 faec 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f060:	4621      	mov	r1, r4
 801f062:	a80c      	add	r0, sp, #48	; 0x30
 801f064:	f7f9 fb2c 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f068:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f06c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f070:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f074:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f078:	bfde      	ittt	le
 801f07a:	b2b3      	uxthle	r3, r6
 801f07c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f080:	fb92 f3f3 	sdivle	r3, r2, r3
 801f084:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f088:	bfc8      	it	gt
 801f08a:	2301      	movgt	r3, #1
 801f08c:	fb92 f1f3 	sdiv	r1, r2, r3
 801f090:	fa1f fc81 	uxth.w	ip, r1
 801f094:	fb0c 2413 	mls	r4, ip, r3, r2
 801f098:	fb14 f406 	smulbb	r4, r4, r6
 801f09c:	441d      	add	r5, r3
 801f09e:	4404      	add	r4, r0
 801f0a0:	4661      	mov	r1, ip
 801f0a2:	3d01      	subs	r5, #1
 801f0a4:	b2a4      	uxth	r4, r4
 801f0a6:	fb95 f5f3 	sdiv	r5, r5, r3
 801f0aa:	b131      	cbz	r1, 801f0ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801f0ac:	9b05      	ldr	r3, [sp, #20]
 801f0ae:	9900      	ldr	r1, [sp, #0]
 801f0b0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f0b4:	ba1b      	rev	r3, r3
 801f0b6:	4419      	add	r1, r3
 801f0b8:	9100      	str	r1, [sp, #0]
 801f0ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f0be:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801f0c2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f0c6:	4418      	add	r0, r3
 801f0c8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f0cc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f0d0:	441a      	add	r2, r3
 801f0d2:	4b6a      	ldr	r3, [pc, #424]	; (801f27c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f0d4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f0d8:	6818      	ldr	r0, [r3, #0]
 801f0da:	6803      	ldr	r3, [r0, #0]
 801f0dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0de:	4798      	blx	r3
 801f0e0:	4967      	ldr	r1, [pc, #412]	; (801f280 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801f0e2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f0e6:	880b      	ldrh	r3, [r1, #0]
 801f0e8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f0ec:	9109      	str	r1, [sp, #36]	; 0x24
 801f0ee:	fb03 c202 	mla	r2, r3, r2, ip
 801f0f2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f0f6:	4373      	muls	r3, r6
 801f0f8:	b2ad      	uxth	r5, r5
 801f0fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f0fe:	00ad      	lsls	r5, r5, #2
 801f100:	9306      	str	r3, [sp, #24]
 801f102:	1d2b      	adds	r3, r5, #4
 801f104:	9307      	str	r3, [sp, #28]
 801f106:	9b01      	ldr	r3, [sp, #4]
 801f108:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801f10c:	9103      	str	r1, [sp, #12]
 801f10e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801f112:	2c00      	cmp	r4, #0
 801f114:	bf0c      	ite	eq
 801f116:	46c6      	moveq	lr, r8
 801f118:	f04f 0e00 	movne.w	lr, #0
 801f11c:	2300      	movs	r3, #0
 801f11e:	b292      	uxth	r2, r2
 801f120:	fa1f fe8e 	uxth.w	lr, lr
 801f124:	9302      	str	r3, [sp, #8]
 801f126:	9204      	str	r2, [sp, #16]
 801f128:	9a06      	ldr	r2, [sp, #24]
 801f12a:	4282      	cmp	r2, r0
 801f12c:	f240 809d 	bls.w	801f26a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801f130:	b963      	cbnz	r3, 801f14c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f132:	9b00      	ldr	r3, [sp, #0]
 801f134:	781a      	ldrb	r2, [r3, #0]
 801f136:	0993      	lsrs	r3, r2, #6
 801f138:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f13c:	9202      	str	r2, [sp, #8]
 801f13e:	1e5a      	subs	r2, r3, #1
 801f140:	2a02      	cmp	r2, #2
 801f142:	d815      	bhi.n	801f170 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801f144:	9a00      	ldr	r2, [sp, #0]
 801f146:	3201      	adds	r2, #1
 801f148:	9200      	str	r2, [sp, #0]
 801f14a:	b29b      	uxth	r3, r3
 801f14c:	b1b4      	cbz	r4, 801f17c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801f14e:	429c      	cmp	r4, r3
 801f150:	bf95      	itete	ls
 801f152:	1b1c      	subls	r4, r3, r4
 801f154:	1ae4      	subhi	r4, r4, r3
 801f156:	fa1f fa84 	uxthls.w	sl, r4
 801f15a:	b2a4      	uxthhi	r4, r4
 801f15c:	bf87      	ittee	hi
 801f15e:	4671      	movhi	r1, lr
 801f160:	f04f 0a00 	movhi.w	sl, #0
 801f164:	fa1f f188 	uxthls.w	r1, r8
 801f168:	2400      	movls	r4, #0
 801f16a:	4653      	mov	r3, sl
 801f16c:	468e      	mov	lr, r1
 801f16e:	e7db      	b.n	801f128 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801f170:	9a00      	ldr	r2, [sp, #0]
 801f172:	9b00      	ldr	r3, [sp, #0]
 801f174:	3202      	adds	r2, #2
 801f176:	785b      	ldrb	r3, [r3, #1]
 801f178:	9200      	str	r2, [sp, #0]
 801f17a:	e7e7      	b.n	801f14c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801f17c:	2202      	movs	r2, #2
 801f17e:	4615      	mov	r5, r2
 801f180:	9907      	ldr	r1, [sp, #28]
 801f182:	9a02      	ldr	r2, [sp, #8]
 801f184:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f188:	9905      	ldr	r1, [sp, #20]
 801f18a:	4573      	cmp	r3, lr
 801f18c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801f190:	9a01      	ldr	r2, [sp, #4]
 801f192:	bf2b      	itete	cs
 801f194:	eba3 0a0e 	subcs.w	sl, r3, lr
 801f198:	ebae 0103 	subcc.w	r1, lr, r3
 801f19c:	46f1      	movcs	r9, lr
 801f19e:	4699      	movcc	r9, r3
 801f1a0:	bf27      	ittee	cs
 801f1a2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f1a6:	4621      	movcs	r1, r4
 801f1a8:	b289      	uxthcc	r1, r1
 801f1aa:	46a2      	movcc	sl, r4
 801f1ac:	2aff      	cmp	r2, #255	; 0xff
 801f1ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f1b2:	d105      	bne.n	801f1c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f1b4:	4481      	add	r9, r0
 801f1b6:	4581      	cmp	r9, r0
 801f1b8:	d045      	beq.n	801f246 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f1ba:	f820 cb02 	strh.w	ip, [r0], #2
 801f1be:	e7fa      	b.n	801f1b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801f1c0:	9d03      	ldr	r5, [sp, #12]
 801f1c2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801f1c6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f1ca:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f1ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f1d2:	436a      	muls	r2, r5
 801f1d4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f1d8:	fa5f fc8c 	uxtb.w	ip, ip
 801f1dc:	9208      	str	r2, [sp, #32]
 801f1de:	fb0b fb05 	mul.w	fp, fp, r5
 801f1e2:	fb0c fc05 	mul.w	ip, ip, r5
 801f1e6:	4481      	add	r9, r0
 801f1e8:	4581      	cmp	r9, r0
 801f1ea:	d02c      	beq.n	801f246 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801f1ec:	8802      	ldrh	r2, [r0, #0]
 801f1ee:	9d04      	ldr	r5, [sp, #16]
 801f1f0:	9f04      	ldr	r7, [sp, #16]
 801f1f2:	1216      	asrs	r6, r2, #8
 801f1f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f1f8:	fb16 f605 	smulbb	r6, r6, r5
 801f1fc:	9d08      	ldr	r5, [sp, #32]
 801f1fe:	442e      	add	r6, r5
 801f200:	10d5      	asrs	r5, r2, #3
 801f202:	00d2      	lsls	r2, r2, #3
 801f204:	b2d2      	uxtb	r2, r2
 801f206:	fb12 f207 	smulbb	r2, r2, r7
 801f20a:	b2b6      	uxth	r6, r6
 801f20c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f210:	4462      	add	r2, ip
 801f212:	fb15 f507 	smulbb	r5, r5, r7
 801f216:	b292      	uxth	r2, r2
 801f218:	1c77      	adds	r7, r6, #1
 801f21a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801f21e:	1c57      	adds	r7, r2, #1
 801f220:	445d      	add	r5, fp
 801f222:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801f226:	b2ad      	uxth	r5, r5
 801f228:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f22c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f230:	4316      	orrs	r6, r2
 801f232:	1c6a      	adds	r2, r5, #1
 801f234:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f238:	096d      	lsrs	r5, r5, #5
 801f23a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f23e:	432e      	orrs	r6, r5
 801f240:	f820 6b02 	strh.w	r6, [r0], #2
 801f244:	e7d0      	b.n	801f1e8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801f246:	4573      	cmp	r3, lr
 801f248:	d38f      	bcc.n	801f16a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f24a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f24e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f250:	fa1f f188 	uxth.w	r1, r8
 801f254:	1a64      	subs	r4, r4, r1
 801f256:	881b      	ldrh	r3, [r3, #0]
 801f258:	b2a4      	uxth	r4, r4
 801f25a:	2c00      	cmp	r4, #0
 801f25c:	eba3 0308 	sub.w	r3, r3, r8
 801f260:	bf18      	it	ne
 801f262:	2100      	movne	r1, #0
 801f264:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f268:	e77f      	b.n	801f16a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801f26a:	4b04      	ldr	r3, [pc, #16]	; (801f27c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801f26c:	6818      	ldr	r0, [r3, #0]
 801f26e:	6803      	ldr	r3, [r0, #0]
 801f270:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f272:	4798      	blx	r3
 801f274:	b00f      	add	sp, #60	; 0x3c
 801f276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f27a:	bf00      	nop
 801f27c:	2001383c 	.word	0x2001383c
 801f280:	20013836 	.word	0x20013836

0801f284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801f284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f288:	b09f      	sub	sp, #124	; 0x7c
 801f28a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801f28e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801f292:	9209      	str	r2, [sp, #36]	; 0x24
 801f294:	461d      	mov	r5, r3
 801f296:	4604      	mov	r4, r0
 801f298:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f29a:	2a00      	cmp	r2, #0
 801f29c:	f000 81eb 	beq.w	801f676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801f2a0:	6828      	ldr	r0, [r5, #0]
 801f2a2:	6869      	ldr	r1, [r5, #4]
 801f2a4:	aa1a      	add	r2, sp, #104	; 0x68
 801f2a6:	c203      	stmia	r2!, {r0, r1}
 801f2a8:	6818      	ldr	r0, [r3, #0]
 801f2aa:	6859      	ldr	r1, [r3, #4]
 801f2ac:	aa1c      	add	r2, sp, #112	; 0x70
 801f2ae:	c203      	stmia	r2!, {r0, r1}
 801f2b0:	a81a      	add	r0, sp, #104	; 0x68
 801f2b2:	f7f9 f9c1 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f2b6:	4629      	mov	r1, r5
 801f2b8:	a81c      	add	r0, sp, #112	; 0x70
 801f2ba:	f7f9 fa01 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f2be:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801f2c2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801f2c6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801f2ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801f2ce:	bfd7      	itett	le
 801f2d0:	b29a      	uxthle	r2, r3
 801f2d2:	2201      	movgt	r2, #1
 801f2d4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801f2d8:	fb91 f2f2 	sdivle	r2, r1, r2
 801f2dc:	9202      	str	r2, [sp, #8]
 801f2de:	9802      	ldr	r0, [sp, #8]
 801f2e0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801f2e4:	fb92 f0f0 	sdiv	r0, r2, r0
 801f2e8:	b280      	uxth	r0, r0
 801f2ea:	9010      	str	r0, [sp, #64]	; 0x40
 801f2ec:	9902      	ldr	r1, [sp, #8]
 801f2ee:	9802      	ldr	r0, [sp, #8]
 801f2f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f2f2:	4488      	add	r8, r1
 801f2f4:	fb05 2510 	mls	r5, r5, r0, r2
 801f2f8:	fb15 f503 	smulbb	r5, r5, r3
 801f2fc:	f108 38ff 	add.w	r8, r8, #4294967295
 801f300:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801f304:	fb98 f8f1 	sdiv	r8, r8, r1
 801f308:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801f30c:	440d      	add	r5, r1
 801f30e:	4419      	add	r1, r3
 801f310:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801f314:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801f318:	441a      	add	r2, r3
 801f31a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801f31e:	9304      	str	r3, [sp, #16]
 801f320:	4b95      	ldr	r3, [pc, #596]	; (801f578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801f322:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801f326:	6818      	ldr	r0, [r3, #0]
 801f328:	6803      	ldr	r3, [r0, #0]
 801f32a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f32c:	4798      	blx	r3
 801f32e:	4b93      	ldr	r3, [pc, #588]	; (801f57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801f330:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801f334:	881a      	ldrh	r2, [r3, #0]
 801f336:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801f33a:	9318      	str	r3, [sp, #96]	; 0x60
 801f33c:	fb02 7101 	mla	r1, r2, r1, r7
 801f340:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f344:	4356      	muls	r6, r2
 801f346:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801f34a:	f108 0801 	add.w	r8, r8, #1
 801f34e:	920a      	str	r2, [sp, #40]	; 0x28
 801f350:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f352:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f356:	930f      	str	r3, [sp, #60]	; 0x3c
 801f358:	fa1f f888 	uxth.w	r8, r8
 801f35c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801f360:	f108 0204 	add.w	r2, r8, #4
 801f364:	9211      	str	r2, [sp, #68]	; 0x44
 801f366:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f368:	4b85      	ldr	r3, [pc, #532]	; (801f580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801f36a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801f36e:	b2ad      	uxth	r5, r5
 801f370:	9215      	str	r2, [sp, #84]	; 0x54
 801f372:	2d00      	cmp	r5, #0
 801f374:	9a04      	ldr	r2, [sp, #16]
 801f376:	f04f 0100 	mov.w	r1, #0
 801f37a:	bf18      	it	ne
 801f37c:	2200      	movne	r2, #0
 801f37e:	1b1b      	subs	r3, r3, r4
 801f380:	b292      	uxth	r2, r2
 801f382:	910d      	str	r1, [sp, #52]	; 0x34
 801f384:	9319      	str	r3, [sp, #100]	; 0x64
 801f386:	9910      	ldr	r1, [sp, #64]	; 0x40
 801f388:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f38a:	fa11 f383 	uxtah	r3, r1, r3
 801f38e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801f390:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801f394:	3304      	adds	r3, #4
 801f396:	9306      	str	r3, [sp, #24]
 801f398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f39a:	4283      	cmp	r3, r0
 801f39c:	f240 8166 	bls.w	801f66c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801f3a0:	9902      	ldr	r1, [sp, #8]
 801f3a2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801f3a6:	fbb5 f3f3 	udiv	r3, r5, r3
 801f3aa:	1acb      	subs	r3, r1, r3
 801f3ac:	b29b      	uxth	r3, r3
 801f3ae:	9316      	str	r3, [sp, #88]	; 0x58
 801f3b0:	9b06      	ldr	r3, [sp, #24]
 801f3b2:	9e06      	ldr	r6, [sp, #24]
 801f3b4:	7859      	ldrb	r1, [r3, #1]
 801f3b6:	789b      	ldrb	r3, [r3, #2]
 801f3b8:	7836      	ldrb	r6, [r6, #0]
 801f3ba:	9612      	str	r6, [sp, #72]	; 0x48
 801f3bc:	021b      	lsls	r3, r3, #8
 801f3be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801f3c2:	9906      	ldr	r1, [sp, #24]
 801f3c4:	78c9      	ldrb	r1, [r1, #3]
 801f3c6:	430b      	orrs	r3, r1
 801f3c8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801f3ca:	3601      	adds	r6, #1
 801f3cc:	4419      	add	r1, r3
 801f3ce:	9605      	str	r6, [sp, #20]
 801f3d0:	1c4e      	adds	r6, r1, #1
 801f3d2:	9603      	str	r6, [sp, #12]
 801f3d4:	7849      	ldrb	r1, [r1, #1]
 801f3d6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f3d8:	0209      	lsls	r1, r1, #8
 801f3da:	5cf3      	ldrb	r3, [r6, r3]
 801f3dc:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801f3e0:	4319      	orrs	r1, r3
 801f3e2:	b28b      	uxth	r3, r1
 801f3e4:	930c      	str	r3, [sp, #48]	; 0x30
 801f3e6:	2300      	movs	r3, #0
 801f3e8:	f04f 0a01 	mov.w	sl, #1
 801f3ec:	9307      	str	r3, [sp, #28]
 801f3ee:	469c      	mov	ip, r3
 801f3f0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801f3f4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801f3f8:	46d3      	mov	fp, sl
 801f3fa:	4657      	mov	r7, sl
 801f3fc:	930e      	str	r3, [sp, #56]	; 0x38
 801f3fe:	2d00      	cmp	r5, #0
 801f400:	d07e      	beq.n	801f500 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801f402:	42af      	cmp	r7, r5
 801f404:	d26e      	bcs.n	801f4e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801f406:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f408:	9201      	str	r2, [sp, #4]
 801f40a:	1bed      	subs	r5, r5, r7
 801f40c:	4283      	cmp	r3, r0
 801f40e:	b2ad      	uxth	r5, r5
 801f410:	d802      	bhi.n	801f418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801f412:	e073      	b.n	801f4fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801f414:	2b00      	cmp	r3, #0
 801f416:	d15f      	bne.n	801f4d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801f418:	9b03      	ldr	r3, [sp, #12]
 801f41a:	785b      	ldrb	r3, [r3, #1]
 801f41c:	f1cb 0207 	rsb	r2, fp, #7
 801f420:	4093      	lsls	r3, r2
 801f422:	005b      	lsls	r3, r3, #1
 801f424:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801f428:	9b03      	ldr	r3, [sp, #12]
 801f42a:	781b      	ldrb	r3, [r3, #0]
 801f42c:	fa43 f30b 	asr.w	r3, r3, fp
 801f430:	b2db      	uxtb	r3, r3
 801f432:	4313      	orrs	r3, r2
 801f434:	f10b 0201 	add.w	r2, fp, #1
 801f438:	fa5f fb82 	uxtb.w	fp, r2
 801f43c:	9a03      	ldr	r2, [sp, #12]
 801f43e:	f1bb 0f08 	cmp.w	fp, #8
 801f442:	bf15      	itete	ne
 801f444:	3201      	addne	r2, #1
 801f446:	3202      	addeq	r2, #2
 801f448:	9203      	strne	r2, [sp, #12]
 801f44a:	9203      	streq	r2, [sp, #12]
 801f44c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f44e:	b29f      	uxth	r7, r3
 801f450:	bf08      	it	eq
 801f452:	f04f 0b00 	moveq.w	fp, #0
 801f456:	42ba      	cmp	r2, r7
 801f458:	d309      	bcc.n	801f46e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801f45a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801f45e:	2301      	movs	r3, #1
 801f460:	9a05      	ldr	r2, [sp, #20]
 801f462:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801f466:	d30e      	bcc.n	801f486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801f468:	469a      	mov	sl, r3
 801f46a:	2600      	movs	r6, #0
 801f46c:	e035      	b.n	801f4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801f46e:	9b05      	ldr	r3, [sp, #20]
 801f470:	429f      	cmp	r7, r3
 801f472:	d318      	bcc.n	801f4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801f474:	eb04 030a 	add.w	r3, r4, sl
 801f478:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801f47c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801f480:	f10a 0301 	add.w	r3, sl, #1
 801f484:	b29b      	uxth	r3, r3
 801f486:	9a05      	ldr	r2, [sp, #20]
 801f488:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801f48c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f48e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f492:	7116      	strb	r6, [r2, #4]
 801f494:	f10a 0601 	add.w	r6, sl, #1
 801f498:	80d1      	strh	r1, [r2, #6]
 801f49a:	7156      	strb	r6, [r2, #5]
 801f49c:	9a05      	ldr	r2, [sp, #20]
 801f49e:	3201      	adds	r2, #1
 801f4a0:	b292      	uxth	r2, r2
 801f4a2:	9205      	str	r2, [sp, #20]
 801f4a4:	e7e0      	b.n	801f468 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801f4a6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801f4aa:	463a      	mov	r2, r7
 801f4ac:	795b      	ldrb	r3, [r3, #5]
 801f4ae:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801f4b2:	4426      	add	r6, r4
 801f4b4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801f4b6:	eb01 0c06 	add.w	ip, r1, r6
 801f4ba:	f1bc 0f00 	cmp.w	ip, #0
 801f4be:	dd07      	ble.n	801f4d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801f4c0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801f4c4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801f4c8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801f4cc:	88d2      	ldrh	r2, [r2, #6]
 801f4ce:	e7f1      	b.n	801f4b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801f4d0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801f4d4:	b29b      	uxth	r3, r3
 801f4d6:	e7c3      	b.n	801f460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801f4d8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801f4da:	970c      	str	r7, [sp, #48]	; 0x30
 801f4dc:	9a01      	ldr	r2, [sp, #4]
 801f4de:	46b4      	mov	ip, r6
 801f4e0:	461f      	mov	r7, r3
 801f4e2:	e78c      	b.n	801f3fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801f4e4:	1b7b      	subs	r3, r7, r5
 801f4e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f4ea:	9201      	str	r2, [sp, #4]
 801f4ec:	eb0c 0605 	add.w	r6, ip, r5
 801f4f0:	b29b      	uxth	r3, r3
 801f4f2:	b2b6      	uxth	r6, r6
 801f4f4:	2500      	movs	r5, #0
 801f4f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f4f8:	4282      	cmp	r2, r0
 801f4fa:	d88b      	bhi.n	801f414 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801f4fc:	9a01      	ldr	r2, [sp, #4]
 801f4fe:	e74b      	b.n	801f398 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801f500:	4297      	cmp	r7, r2
 801f502:	d332      	bcc.n	801f56a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801f504:	1abb      	subs	r3, r7, r2
 801f506:	b29b      	uxth	r3, r3
 801f508:	9208      	str	r2, [sp, #32]
 801f50a:	9501      	str	r5, [sp, #4]
 801f50c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f50e:	29ff      	cmp	r1, #255	; 0xff
 801f510:	9908      	ldr	r1, [sp, #32]
 801f512:	eb0c 0601 	add.w	r6, ip, r1
 801f516:	d135      	bne.n	801f584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801f518:	f1a0 0e02 	sub.w	lr, r0, #2
 801f51c:	b2b6      	uxth	r6, r6
 801f51e:	45b4      	cmp	ip, r6
 801f520:	f040 808c 	bne.w	801f63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801f524:	9908      	ldr	r1, [sp, #32]
 801f526:	4297      	cmp	r7, r2
 801f528:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f52c:	d3e2      	bcc.n	801f4f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801f52e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f530:	9904      	ldr	r1, [sp, #16]
 801f532:	8812      	ldrh	r2, [r2, #0]
 801f534:	1a52      	subs	r2, r2, r1
 801f536:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f53a:	9a07      	ldr	r2, [sp, #28]
 801f53c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801f53e:	3201      	adds	r2, #1
 801f540:	428a      	cmp	r2, r1
 801f542:	9207      	str	r2, [sp, #28]
 801f544:	f040 8087 	bne.w	801f656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801f548:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801f54c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801f550:	9b04      	ldr	r3, [sp, #16]
 801f552:	1bed      	subs	r5, r5, r7
 801f554:	b2ad      	uxth	r5, r5
 801f556:	2d00      	cmp	r5, #0
 801f558:	bf08      	it	eq
 801f55a:	461a      	moveq	r2, r3
 801f55c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f55e:	bf18      	it	ne
 801f560:	2200      	movne	r2, #0
 801f562:	3301      	adds	r3, #1
 801f564:	930d      	str	r3, [sp, #52]	; 0x34
 801f566:	b292      	uxth	r2, r2
 801f568:	e70d      	b.n	801f386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801f56a:	1bd1      	subs	r1, r2, r7
 801f56c:	b28b      	uxth	r3, r1
 801f56e:	9301      	str	r3, [sp, #4]
 801f570:	9708      	str	r7, [sp, #32]
 801f572:	462b      	mov	r3, r5
 801f574:	e7ca      	b.n	801f50c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801f576:	bf00      	nop
 801f578:	2001383c 	.word	0x2001383c
 801f57c:	20013836 	.word	0x20013836
 801f580:	fffff7fb 	.word	0xfffff7fb
 801f584:	b2b6      	uxth	r6, r6
 801f586:	900b      	str	r0, [sp, #44]	; 0x2c
 801f588:	45b4      	cmp	ip, r6
 801f58a:	d0cb      	beq.n	801f524 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801f58c:	f10c 0101 	add.w	r1, ip, #1
 801f590:	44a4      	add	ip, r4
 801f592:	9117      	str	r1, [sp, #92]	; 0x5c
 801f594:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f598:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f59a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f59e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f5a0:	f8b1 c000 	ldrh.w	ip, [r1]
 801f5a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5a6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801f5aa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f5ae:	fb1e fe01 	smulbb	lr, lr, r1
 801f5b2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801f5b6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5b8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f5bc:	fb08 e801 	mla	r8, r8, r1, lr
 801f5c0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801f5c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5c6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f5ca:	fb19 f901 	smulbb	r9, r9, r1
 801f5ce:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801f5d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f5d8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801f5dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f5e0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f5e2:	fa5f fc8c 	uxtb.w	ip, ip
 801f5e6:	fb1c fc01 	smulbb	ip, ip, r1
 801f5ea:	00ed      	lsls	r5, r5, #3
 801f5ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f5ee:	b2ed      	uxtb	r5, r5
 801f5f0:	fb05 c501 	mla	r5, r5, r1, ip
 801f5f4:	fa1f f888 	uxth.w	r8, r8
 801f5f8:	fa1f fe8e 	uxth.w	lr, lr
 801f5fc:	b2ad      	uxth	r5, r5
 801f5fe:	f108 0c01 	add.w	ip, r8, #1
 801f602:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801f606:	f10e 0901 	add.w	r9, lr, #1
 801f60a:	f105 0c01 	add.w	ip, r5, #1
 801f60e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801f612:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801f616:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f61a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f61e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f622:	ea4c 0808 	orr.w	r8, ip, r8
 801f626:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801f628:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801f62c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801f630:	ea48 0809 	orr.w	r8, r8, r9
 801f634:	f821 8b02 	strh.w	r8, [r1], #2
 801f638:	910b      	str	r1, [sp, #44]	; 0x2c
 801f63a:	e7a5      	b.n	801f588 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801f63c:	f10c 0801 	add.w	r8, ip, #1
 801f640:	44a4      	add	ip, r4
 801f642:	9911      	ldr	r1, [sp, #68]	; 0x44
 801f644:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801f648:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801f64c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801f650:	fa1f fc88 	uxth.w	ip, r8
 801f654:	e763      	b.n	801f51e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801f656:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f65a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801f65e:	1aad      	subs	r5, r5, r2
 801f660:	b2ad      	uxth	r5, r5
 801f662:	2d00      	cmp	r5, #0
 801f664:	bf18      	it	ne
 801f666:	2200      	movne	r2, #0
 801f668:	9201      	str	r2, [sp, #4]
 801f66a:	e744      	b.n	801f4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801f66c:	4b03      	ldr	r3, [pc, #12]	; (801f67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801f66e:	6818      	ldr	r0, [r3, #0]
 801f670:	6803      	ldr	r3, [r0, #0]
 801f672:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f674:	4798      	blx	r3
 801f676:	b01f      	add	sp, #124	; 0x7c
 801f678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f67c:	2001383c 	.word	0x2001383c

0801f680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801f680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f684:	b08f      	sub	sp, #60	; 0x3c
 801f686:	461c      	mov	r4, r3
 801f688:	9203      	str	r2, [sp, #12]
 801f68a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f68e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f690:	9202      	str	r2, [sp, #8]
 801f692:	460f      	mov	r7, r1
 801f694:	2a00      	cmp	r2, #0
 801f696:	f000 8128 	beq.w	801f8ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801f69a:	6820      	ldr	r0, [r4, #0]
 801f69c:	6861      	ldr	r1, [r4, #4]
 801f69e:	aa0a      	add	r2, sp, #40	; 0x28
 801f6a0:	c203      	stmia	r2!, {r0, r1}
 801f6a2:	6818      	ldr	r0, [r3, #0]
 801f6a4:	6859      	ldr	r1, [r3, #4]
 801f6a6:	aa0c      	add	r2, sp, #48	; 0x30
 801f6a8:	c203      	stmia	r2!, {r0, r1}
 801f6aa:	a80a      	add	r0, sp, #40	; 0x28
 801f6ac:	f7f8 ffc4 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f6b0:	4621      	mov	r1, r4
 801f6b2:	a80c      	add	r0, sp, #48	; 0x30
 801f6b4:	f7f9 f804 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f6b8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801f6bc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801f6c0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801f6c4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f6c8:	bfde      	ittt	le
 801f6ca:	b2b3      	uxthle	r3, r6
 801f6cc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f6d0:	fb92 f3f3 	sdivle	r3, r2, r3
 801f6d4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f6d8:	bfc8      	it	gt
 801f6da:	2301      	movgt	r3, #1
 801f6dc:	fb92 f1f3 	sdiv	r1, r2, r3
 801f6e0:	fa1f fc81 	uxth.w	ip, r1
 801f6e4:	fb0c 2413 	mls	r4, ip, r3, r2
 801f6e8:	fb14 f406 	smulbb	r4, r4, r6
 801f6ec:	441d      	add	r5, r3
 801f6ee:	4404      	add	r4, r0
 801f6f0:	4661      	mov	r1, ip
 801f6f2:	3d01      	subs	r5, #1
 801f6f4:	b2a4      	uxth	r4, r4
 801f6f6:	fb95 f5f3 	sdiv	r5, r5, r3
 801f6fa:	b121      	cbz	r1, 801f706 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801f6fc:	9b03      	ldr	r3, [sp, #12]
 801f6fe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f702:	ba1b      	rev	r3, r3
 801f704:	441f      	add	r7, r3
 801f706:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801f70a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f70e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801f712:	4418      	add	r0, r3
 801f714:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801f718:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801f71c:	441a      	add	r2, r3
 801f71e:	4b74      	ldr	r3, [pc, #464]	; (801f8f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f720:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801f724:	6818      	ldr	r0, [r3, #0]
 801f726:	6803      	ldr	r3, [r0, #0]
 801f728:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f72a:	4798      	blx	r3
 801f72c:	4a71      	ldr	r2, [pc, #452]	; (801f8f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801f72e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801f732:	8813      	ldrh	r3, [r2, #0]
 801f734:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801f738:	9209      	str	r2, [sp, #36]	; 0x24
 801f73a:	fb03 c101 	mla	r1, r3, r1, ip
 801f73e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f742:	4373      	muls	r3, r6
 801f744:	b2ad      	uxth	r5, r5
 801f746:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f74a:	00ad      	lsls	r5, r5, #2
 801f74c:	2c00      	cmp	r4, #0
 801f74e:	9304      	str	r3, [sp, #16]
 801f750:	f105 0304 	add.w	r3, r5, #4
 801f754:	9305      	str	r3, [sp, #20]
 801f756:	bf0c      	ite	eq
 801f758:	46c8      	moveq	r8, r9
 801f75a:	f04f 0800 	movne.w	r8, #0
 801f75e:	2300      	movs	r3, #0
 801f760:	fa1f f888 	uxth.w	r8, r8
 801f764:	9301      	str	r3, [sp, #4]
 801f766:	9a04      	ldr	r2, [sp, #16]
 801f768:	4282      	cmp	r2, r0
 801f76a:	f240 80b9 	bls.w	801f8e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801f76e:	b95b      	cbnz	r3, 801f788 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801f770:	783a      	ldrb	r2, [r7, #0]
 801f772:	0993      	lsrs	r3, r2, #6
 801f774:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801f778:	9201      	str	r2, [sp, #4]
 801f77a:	1e5a      	subs	r2, r3, #1
 801f77c:	2a02      	cmp	r2, #2
 801f77e:	bf8d      	iteet	hi
 801f780:	787b      	ldrbhi	r3, [r7, #1]
 801f782:	3701      	addls	r7, #1
 801f784:	b29b      	uxthls	r3, r3
 801f786:	3702      	addhi	r7, #2
 801f788:	b184      	cbz	r4, 801f7ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801f78a:	429c      	cmp	r4, r3
 801f78c:	bf95      	itete	ls
 801f78e:	1b1c      	subls	r4, r3, r4
 801f790:	1ae4      	subhi	r4, r4, r3
 801f792:	fa1f fa84 	uxthls.w	sl, r4
 801f796:	b2a4      	uxthhi	r4, r4
 801f798:	bf87      	ittee	hi
 801f79a:	46c4      	movhi	ip, r8
 801f79c:	f04f 0a00 	movhi.w	sl, #0
 801f7a0:	fa1f fc89 	uxthls.w	ip, r9
 801f7a4:	2400      	movls	r4, #0
 801f7a6:	4653      	mov	r3, sl
 801f7a8:	46e0      	mov	r8, ip
 801f7aa:	e7dc      	b.n	801f766 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801f7ac:	2204      	movs	r2, #4
 801f7ae:	4615      	mov	r5, r2
 801f7b0:	9905      	ldr	r1, [sp, #20]
 801f7b2:	9a01      	ldr	r2, [sp, #4]
 801f7b4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801f7b8:	9903      	ldr	r1, [sp, #12]
 801f7ba:	588a      	ldr	r2, [r1, r2]
 801f7bc:	4543      	cmp	r3, r8
 801f7be:	bf27      	ittee	cs
 801f7c0:	eba3 0a08 	subcs.w	sl, r3, r8
 801f7c4:	46c6      	movcs	lr, r8
 801f7c6:	eba8 0c03 	subcc.w	ip, r8, r3
 801f7ca:	469e      	movcc	lr, r3
 801f7cc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801f7d0:	bf27      	ittee	cs
 801f7d2:	fa1f fa8a 	uxthcs.w	sl, sl
 801f7d6:	46a4      	movcs	ip, r4
 801f7d8:	fa1f fc8c 	uxthcc.w	ip, ip
 801f7dc:	46a2      	movcc	sl, r4
 801f7de:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801f7e2:	2900      	cmp	r1, #0
 801f7e4:	d066      	beq.n	801f8b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801f7e6:	29ff      	cmp	r1, #255	; 0xff
 801f7e8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f7ec:	d114      	bne.n	801f818 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f7ee:	9d02      	ldr	r5, [sp, #8]
 801f7f0:	2dff      	cmp	r5, #255	; 0xff
 801f7f2:	d111      	bne.n	801f818 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801f7f4:	0951      	lsrs	r1, r2, #5
 801f7f6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801f7fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801f7fe:	f026 0607 	bic.w	r6, r6, #7
 801f802:	430e      	orrs	r6, r1
 801f804:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f808:	4316      	orrs	r6, r2
 801f80a:	b2b6      	uxth	r6, r6
 801f80c:	4486      	add	lr, r0
 801f80e:	4586      	cmp	lr, r0
 801f810:	d051      	beq.n	801f8b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f812:	f820 6b02 	strh.w	r6, [r0], #2
 801f816:	e7fa      	b.n	801f80e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801f818:	9d02      	ldr	r5, [sp, #8]
 801f81a:	4369      	muls	r1, r5
 801f81c:	1c4d      	adds	r5, r1, #1
 801f81e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801f822:	122d      	asrs	r5, r5, #8
 801f824:	ea6f 0b05 	mvn.w	fp, r5
 801f828:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f82c:	b2ad      	uxth	r5, r5
 801f82e:	b2f6      	uxtb	r6, r6
 801f830:	b2d2      	uxtb	r2, r2
 801f832:	fb11 f105 	smulbb	r1, r1, r5
 801f836:	fb16 f605 	smulbb	r6, r6, r5
 801f83a:	fb12 f205 	smulbb	r2, r2, r5
 801f83e:	b289      	uxth	r1, r1
 801f840:	b2b6      	uxth	r6, r6
 801f842:	b292      	uxth	r2, r2
 801f844:	9106      	str	r1, [sp, #24]
 801f846:	9607      	str	r6, [sp, #28]
 801f848:	9208      	str	r2, [sp, #32]
 801f84a:	4486      	add	lr, r0
 801f84c:	fa5f fb8b 	uxtb.w	fp, fp
 801f850:	4586      	cmp	lr, r0
 801f852:	d030      	beq.n	801f8b6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801f854:	8802      	ldrh	r2, [r0, #0]
 801f856:	9906      	ldr	r1, [sp, #24]
 801f858:	1216      	asrs	r6, r2, #8
 801f85a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f85e:	10d5      	asrs	r5, r2, #3
 801f860:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f864:	fb06 160b 	mla	r6, r6, fp, r1
 801f868:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f86c:	9907      	ldr	r1, [sp, #28]
 801f86e:	00d2      	lsls	r2, r2, #3
 801f870:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f874:	fb05 150b 	mla	r5, r5, fp, r1
 801f878:	b2d2      	uxtb	r2, r2
 801f87a:	9908      	ldr	r1, [sp, #32]
 801f87c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f880:	b2b6      	uxth	r6, r6
 801f882:	fb02 120b 	mla	r2, r2, fp, r1
 801f886:	b292      	uxth	r2, r2
 801f888:	1c71      	adds	r1, r6, #1
 801f88a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801f88e:	1c51      	adds	r1, r2, #1
 801f890:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f894:	b2ad      	uxth	r5, r5
 801f896:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f89a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f89e:	4316      	orrs	r6, r2
 801f8a0:	1c6a      	adds	r2, r5, #1
 801f8a2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801f8a6:	096d      	lsrs	r5, r5, #5
 801f8a8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f8ac:	432e      	orrs	r6, r5
 801f8ae:	f820 6b02 	strh.w	r6, [r0], #2
 801f8b2:	e7cd      	b.n	801f850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801f8b4:	4470      	add	r0, lr
 801f8b6:	4543      	cmp	r3, r8
 801f8b8:	f4ff af75 	bcc.w	801f7a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f8bc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801f8c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8c2:	fa1f fc89 	uxth.w	ip, r9
 801f8c6:	eba4 040c 	sub.w	r4, r4, ip
 801f8ca:	881b      	ldrh	r3, [r3, #0]
 801f8cc:	b2a4      	uxth	r4, r4
 801f8ce:	2c00      	cmp	r4, #0
 801f8d0:	eba3 0309 	sub.w	r3, r3, r9
 801f8d4:	bf18      	it	ne
 801f8d6:	f04f 0c00 	movne.w	ip, #0
 801f8da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f8de:	e762      	b.n	801f7a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801f8e0:	4b03      	ldr	r3, [pc, #12]	; (801f8f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801f8e2:	6818      	ldr	r0, [r3, #0]
 801f8e4:	6803      	ldr	r3, [r0, #0]
 801f8e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f8e8:	4798      	blx	r3
 801f8ea:	b00f      	add	sp, #60	; 0x3c
 801f8ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8f0:	2001383c 	.word	0x2001383c
 801f8f4:	20013836 	.word	0x20013836

0801f8f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801f8f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8fc:	b093      	sub	sp, #76	; 0x4c
 801f8fe:	461c      	mov	r4, r3
 801f900:	9205      	str	r2, [sp, #20]
 801f902:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801f906:	9101      	str	r1, [sp, #4]
 801f908:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f90a:	9202      	str	r2, [sp, #8]
 801f90c:	2a00      	cmp	r2, #0
 801f90e:	f000 812c 	beq.w	801fb6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801f912:	6820      	ldr	r0, [r4, #0]
 801f914:	6861      	ldr	r1, [r4, #4]
 801f916:	aa0e      	add	r2, sp, #56	; 0x38
 801f918:	c203      	stmia	r2!, {r0, r1}
 801f91a:	6818      	ldr	r0, [r3, #0]
 801f91c:	6859      	ldr	r1, [r3, #4]
 801f91e:	aa10      	add	r2, sp, #64	; 0x40
 801f920:	c203      	stmia	r2!, {r0, r1}
 801f922:	a80e      	add	r0, sp, #56	; 0x38
 801f924:	f7f8 fe88 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f928:	4621      	mov	r1, r4
 801f92a:	a810      	add	r0, sp, #64	; 0x40
 801f92c:	f7f8 fec8 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f930:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f934:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801f938:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801f93c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801f940:	bfde      	ittt	le
 801f942:	b2b3      	uxthle	r3, r6
 801f944:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801f948:	fb92 f3f3 	sdivle	r3, r2, r3
 801f94c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f950:	bfc8      	it	gt
 801f952:	2301      	movgt	r3, #1
 801f954:	fb92 f1f3 	sdiv	r1, r2, r3
 801f958:	fa1f fc81 	uxth.w	ip, r1
 801f95c:	fb0c 2413 	mls	r4, ip, r3, r2
 801f960:	fb14 f406 	smulbb	r4, r4, r6
 801f964:	441d      	add	r5, r3
 801f966:	4404      	add	r4, r0
 801f968:	4661      	mov	r1, ip
 801f96a:	3d01      	subs	r5, #1
 801f96c:	b2a4      	uxth	r4, r4
 801f96e:	fb95 f5f3 	sdiv	r5, r5, r3
 801f972:	b131      	cbz	r1, 801f982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801f974:	9b05      	ldr	r3, [sp, #20]
 801f976:	9901      	ldr	r1, [sp, #4]
 801f978:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801f97c:	ba1b      	rev	r3, r3
 801f97e:	4419      	add	r1, r3
 801f980:	9101      	str	r1, [sp, #4]
 801f982:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f986:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f98a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801f98e:	4418      	add	r0, r3
 801f990:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801f994:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801f998:	441a      	add	r2, r3
 801f99a:	4b75      	ldr	r3, [pc, #468]	; (801fb70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801f99c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801f9a0:	6818      	ldr	r0, [r3, #0]
 801f9a2:	6803      	ldr	r3, [r0, #0]
 801f9a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f9a6:	4798      	blx	r3
 801f9a8:	4972      	ldr	r1, [pc, #456]	; (801fb74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801f9aa:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801f9ae:	880b      	ldrh	r3, [r1, #0]
 801f9b0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f9b4:	910d      	str	r1, [sp, #52]	; 0x34
 801f9b6:	fb03 c202 	mla	r2, r3, r2, ip
 801f9ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f9be:	4373      	muls	r3, r6
 801f9c0:	b2ad      	uxth	r5, r5
 801f9c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f9c6:	00ad      	lsls	r5, r5, #2
 801f9c8:	9308      	str	r3, [sp, #32]
 801f9ca:	1d2b      	adds	r3, r5, #4
 801f9cc:	9309      	str	r3, [sp, #36]	; 0x24
 801f9ce:	9b02      	ldr	r3, [sp, #8]
 801f9d0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f9d4:	9106      	str	r1, [sp, #24]
 801f9d6:	43da      	mvns	r2, r3
 801f9d8:	2c00      	cmp	r4, #0
 801f9da:	bf0c      	ite	eq
 801f9dc:	46dc      	moveq	ip, fp
 801f9de:	f04f 0c00 	movne.w	ip, #0
 801f9e2:	2300      	movs	r3, #0
 801f9e4:	b2d2      	uxtb	r2, r2
 801f9e6:	fa1f fc8c 	uxth.w	ip, ip
 801f9ea:	9303      	str	r3, [sp, #12]
 801f9ec:	9207      	str	r2, [sp, #28]
 801f9ee:	9a08      	ldr	r2, [sp, #32]
 801f9f0:	4282      	cmp	r2, r0
 801f9f2:	f240 80b5 	bls.w	801fb60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801f9f6:	b963      	cbnz	r3, 801fa12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801f9f8:	9b01      	ldr	r3, [sp, #4]
 801f9fa:	781a      	ldrb	r2, [r3, #0]
 801f9fc:	0993      	lsrs	r3, r2, #6
 801f9fe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801fa02:	9203      	str	r2, [sp, #12]
 801fa04:	1e5a      	subs	r2, r3, #1
 801fa06:	2a02      	cmp	r2, #2
 801fa08:	d815      	bhi.n	801fa36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801fa0a:	9a01      	ldr	r2, [sp, #4]
 801fa0c:	3201      	adds	r2, #1
 801fa0e:	9201      	str	r2, [sp, #4]
 801fa10:	b29b      	uxth	r3, r3
 801fa12:	b1b4      	cbz	r4, 801fa42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801fa14:	429c      	cmp	r4, r3
 801fa16:	bf95      	itete	ls
 801fa18:	1b1c      	subls	r4, r3, r4
 801fa1a:	1ae4      	subhi	r4, r4, r3
 801fa1c:	fa1f f884 	uxthls.w	r8, r4
 801fa20:	b2a4      	uxthhi	r4, r4
 801fa22:	bf87      	ittee	hi
 801fa24:	4666      	movhi	r6, ip
 801fa26:	f04f 0800 	movhi.w	r8, #0
 801fa2a:	fa1f f68b 	uxthls.w	r6, fp
 801fa2e:	2400      	movls	r4, #0
 801fa30:	4643      	mov	r3, r8
 801fa32:	46b4      	mov	ip, r6
 801fa34:	e7db      	b.n	801f9ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801fa36:	9a01      	ldr	r2, [sp, #4]
 801fa38:	9b01      	ldr	r3, [sp, #4]
 801fa3a:	3202      	adds	r2, #2
 801fa3c:	785b      	ldrb	r3, [r3, #1]
 801fa3e:	9201      	str	r2, [sp, #4]
 801fa40:	e7e7      	b.n	801fa12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801fa42:	2203      	movs	r2, #3
 801fa44:	4615      	mov	r5, r2
 801fa46:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fa48:	9a03      	ldr	r2, [sp, #12]
 801fa4a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801fa4e:	9905      	ldr	r1, [sp, #20]
 801fa50:	4563      	cmp	r3, ip
 801fa52:	eb01 0502 	add.w	r5, r1, r2
 801fa56:	9902      	ldr	r1, [sp, #8]
 801fa58:	bf29      	itett	cs
 801fa5a:	eba3 080c 	subcs.w	r8, r3, ip
 801fa5e:	ebac 0603 	subcc.w	r6, ip, r3
 801fa62:	fa1f f888 	uxthcs.w	r8, r8
 801fa66:	46e1      	movcs	r9, ip
 801fa68:	bf2f      	iteee	cs
 801fa6a:	4626      	movcs	r6, r4
 801fa6c:	b2b6      	uxthcc	r6, r6
 801fa6e:	4699      	movcc	r9, r3
 801fa70:	46a0      	movcc	r8, r4
 801fa72:	29ff      	cmp	r1, #255	; 0xff
 801fa74:	d04a      	beq.n	801fb0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801fa76:	9f06      	ldr	r7, [sp, #24]
 801fa78:	78a9      	ldrb	r1, [r5, #2]
 801fa7a:	9004      	str	r0, [sp, #16]
 801fa7c:	4379      	muls	r1, r7
 801fa7e:	910a      	str	r1, [sp, #40]	; 0x28
 801fa80:	7869      	ldrb	r1, [r5, #1]
 801fa82:	4379      	muls	r1, r7
 801fa84:	910b      	str	r1, [sp, #44]	; 0x2c
 801fa86:	9905      	ldr	r1, [sp, #20]
 801fa88:	5c8a      	ldrb	r2, [r1, r2]
 801fa8a:	437a      	muls	r2, r7
 801fa8c:	920c      	str	r2, [sp, #48]	; 0x30
 801fa8e:	46ca      	mov	sl, r9
 801fa90:	f1ba 0f00 	cmp.w	sl, #0
 801fa94:	d03d      	beq.n	801fb12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801fa96:	9a04      	ldr	r2, [sp, #16]
 801fa98:	9f07      	ldr	r7, [sp, #28]
 801fa9a:	8812      	ldrh	r2, [r2, #0]
 801fa9c:	1215      	asrs	r5, r2, #8
 801fa9e:	46be      	mov	lr, r7
 801faa0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801faa4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801faa6:	10d1      	asrs	r1, r2, #3
 801faa8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801faac:	fb05 750e 	mla	r5, r5, lr, r7
 801fab0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fab4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801fab6:	00d2      	lsls	r2, r2, #3
 801fab8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801fabc:	fb01 710e 	mla	r1, r1, lr, r7
 801fac0:	b2d2      	uxtb	r2, r2
 801fac2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801fac4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801fac8:	b2ad      	uxth	r5, r5
 801faca:	fb02 720e 	mla	r2, r2, lr, r7
 801face:	b292      	uxth	r2, r2
 801fad0:	f105 0e01 	add.w	lr, r5, #1
 801fad4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801fad8:	f102 0e01 	add.w	lr, r2, #1
 801fadc:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801fae0:	b289      	uxth	r1, r1
 801fae2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fae6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801faea:	4315      	orrs	r5, r2
 801faec:	1c4a      	adds	r2, r1, #1
 801faee:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801faf2:	0949      	lsrs	r1, r1, #5
 801faf4:	9a04      	ldr	r2, [sp, #16]
 801faf6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fafa:	430d      	orrs	r5, r1
 801fafc:	f822 5b02 	strh.w	r5, [r2], #2
 801fb00:	f10a 3aff 	add.w	sl, sl, #4294967295
 801fb04:	9204      	str	r2, [sp, #16]
 801fb06:	fa1f fa8a 	uxth.w	sl, sl
 801fb0a:	e7c1      	b.n	801fa90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801fb0c:	4649      	mov	r1, r9
 801fb0e:	4686      	mov	lr, r0
 801fb10:	b999      	cbnz	r1, 801fb3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801fb12:	4563      	cmp	r3, ip
 801fb14:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801fb18:	d38a      	bcc.n	801fa30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb1a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801fb1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fb20:	fa1f f68b 	uxth.w	r6, fp
 801fb24:	1ba4      	subs	r4, r4, r6
 801fb26:	881b      	ldrh	r3, [r3, #0]
 801fb28:	b2a4      	uxth	r4, r4
 801fb2a:	2c00      	cmp	r4, #0
 801fb2c:	eba3 030b 	sub.w	r3, r3, fp
 801fb30:	bf18      	it	ne
 801fb32:	2600      	movne	r6, #0
 801fb34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fb38:	e77a      	b.n	801fa30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801fb3a:	78aa      	ldrb	r2, [r5, #2]
 801fb3c:	4f0e      	ldr	r7, [pc, #56]	; (801fb78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801fb3e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801fb42:	786a      	ldrb	r2, [r5, #1]
 801fb44:	00d2      	lsls	r2, r2, #3
 801fb46:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fb4a:	ea4a 0202 	orr.w	r2, sl, r2
 801fb4e:	f895 a000 	ldrb.w	sl, [r5]
 801fb52:	3901      	subs	r1, #1
 801fb54:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801fb58:	f82e 2b02 	strh.w	r2, [lr], #2
 801fb5c:	b289      	uxth	r1, r1
 801fb5e:	e7d7      	b.n	801fb10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801fb60:	4b03      	ldr	r3, [pc, #12]	; (801fb70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801fb62:	6818      	ldr	r0, [r3, #0]
 801fb64:	6803      	ldr	r3, [r0, #0]
 801fb66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb68:	4798      	blx	r3
 801fb6a:	b013      	add	sp, #76	; 0x4c
 801fb6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb70:	2001383c 	.word	0x2001383c
 801fb74:	20013836 	.word	0x20013836
 801fb78:	fffff800 	.word	0xfffff800

0801fb7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801fb7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb80:	b09d      	sub	sp, #116	; 0x74
 801fb82:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801fb86:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801fb8a:	920e      	str	r2, [sp, #56]	; 0x38
 801fb8c:	461c      	mov	r4, r3
 801fb8e:	4683      	mov	fp, r0
 801fb90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801fb92:	2a00      	cmp	r2, #0
 801fb94:	f000 81e0 	beq.w	801ff58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801fb98:	6820      	ldr	r0, [r4, #0]
 801fb9a:	6861      	ldr	r1, [r4, #4]
 801fb9c:	aa18      	add	r2, sp, #96	; 0x60
 801fb9e:	c203      	stmia	r2!, {r0, r1}
 801fba0:	6818      	ldr	r0, [r3, #0]
 801fba2:	6859      	ldr	r1, [r3, #4]
 801fba4:	aa1a      	add	r2, sp, #104	; 0x68
 801fba6:	c203      	stmia	r2!, {r0, r1}
 801fba8:	a818      	add	r0, sp, #96	; 0x60
 801fbaa:	f7f8 fd45 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801fbae:	4621      	mov	r1, r4
 801fbb0:	a81a      	add	r0, sp, #104	; 0x68
 801fbb2:	f7f8 fd85 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801fbb6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801fbba:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801fbbe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801fbc2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801fbc6:	bfd7      	itett	le
 801fbc8:	b29a      	uxthle	r2, r3
 801fbca:	2201      	movgt	r2, #1
 801fbcc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801fbd0:	fb91 f2f2 	sdivle	r2, r1, r2
 801fbd4:	9202      	str	r2, [sp, #8]
 801fbd6:	9802      	ldr	r0, [sp, #8]
 801fbd8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801fbdc:	fb92 f0f0 	sdiv	r0, r2, r0
 801fbe0:	b280      	uxth	r0, r0
 801fbe2:	900f      	str	r0, [sp, #60]	; 0x3c
 801fbe4:	9902      	ldr	r1, [sp, #8]
 801fbe6:	9802      	ldr	r0, [sp, #8]
 801fbe8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fbea:	440c      	add	r4, r1
 801fbec:	fb05 2510 	mls	r5, r5, r0, r2
 801fbf0:	fb15 f503 	smulbb	r5, r5, r3
 801fbf4:	3c01      	subs	r4, #1
 801fbf6:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801fbfa:	fb94 f4f1 	sdiv	r4, r4, r1
 801fbfe:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801fc02:	440d      	add	r5, r1
 801fc04:	4419      	add	r1, r3
 801fc06:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801fc0a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801fc0e:	441a      	add	r2, r3
 801fc10:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801fc14:	9306      	str	r3, [sp, #24]
 801fc16:	4bb3      	ldr	r3, [pc, #716]	; (801fee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801fc18:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801fc1c:	6818      	ldr	r0, [r3, #0]
 801fc1e:	6803      	ldr	r3, [r0, #0]
 801fc20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc22:	4798      	blx	r3
 801fc24:	4bb0      	ldr	r3, [pc, #704]	; (801fee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801fc26:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801fc2a:	881a      	ldrh	r2, [r3, #0]
 801fc2c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801fc30:	9316      	str	r3, [sp, #88]	; 0x58
 801fc32:	fb02 7101 	mla	r1, r2, r1, r7
 801fc36:	3401      	adds	r4, #1
 801fc38:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801fc3c:	b2a4      	uxth	r4, r4
 801fc3e:	4356      	muls	r6, r2
 801fc40:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801fc44:	00a4      	lsls	r4, r4, #2
 801fc46:	920a      	str	r2, [sp, #40]	; 0x28
 801fc48:	1d22      	adds	r2, r4, #4
 801fc4a:	b2ad      	uxth	r5, r5
 801fc4c:	9213      	str	r2, [sp, #76]	; 0x4c
 801fc4e:	4ba7      	ldr	r3, [pc, #668]	; (801feec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801fc50:	9a06      	ldr	r2, [sp, #24]
 801fc52:	2d00      	cmp	r5, #0
 801fc54:	bf0c      	ite	eq
 801fc56:	4611      	moveq	r1, r2
 801fc58:	2100      	movne	r1, #0
 801fc5a:	2200      	movs	r2, #0
 801fc5c:	eba3 030b 	sub.w	r3, r3, fp
 801fc60:	b289      	uxth	r1, r1
 801fc62:	920d      	str	r2, [sp, #52]	; 0x34
 801fc64:	9317      	str	r3, [sp, #92]	; 0x5c
 801fc66:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fc68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fc6a:	fa12 f383 	uxtah	r3, r2, r3
 801fc6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fc70:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801fc74:	3304      	adds	r3, #4
 801fc76:	9308      	str	r3, [sp, #32]
 801fc78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc7a:	4543      	cmp	r3, r8
 801fc7c:	f240 8167 	bls.w	801ff4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801fc80:	9a02      	ldr	r2, [sp, #8]
 801fc82:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801fc86:	fbb5 f3f3 	udiv	r3, r5, r3
 801fc8a:	1ad3      	subs	r3, r2, r3
 801fc8c:	b29b      	uxth	r3, r3
 801fc8e:	9314      	str	r3, [sp, #80]	; 0x50
 801fc90:	9b08      	ldr	r3, [sp, #32]
 801fc92:	9808      	ldr	r0, [sp, #32]
 801fc94:	785a      	ldrb	r2, [r3, #1]
 801fc96:	789b      	ldrb	r3, [r3, #2]
 801fc98:	7800      	ldrb	r0, [r0, #0]
 801fc9a:	9010      	str	r0, [sp, #64]	; 0x40
 801fc9c:	021b      	lsls	r3, r3, #8
 801fc9e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801fca2:	9a08      	ldr	r2, [sp, #32]
 801fca4:	78d2      	ldrb	r2, [r2, #3]
 801fca6:	4313      	orrs	r3, r2
 801fca8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fcaa:	3001      	adds	r0, #1
 801fcac:	441a      	add	r2, r3
 801fcae:	9007      	str	r0, [sp, #28]
 801fcb0:	1c50      	adds	r0, r2, #1
 801fcb2:	9005      	str	r0, [sp, #20]
 801fcb4:	7852      	ldrb	r2, [r2, #1]
 801fcb6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fcb8:	0212      	lsls	r2, r2, #8
 801fcba:	5cc3      	ldrb	r3, [r0, r3]
 801fcbc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801fcc0:	431a      	orrs	r2, r3
 801fcc2:	b293      	uxth	r3, r2
 801fcc4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fcc6:	2300      	movs	r3, #0
 801fcc8:	9309      	str	r3, [sp, #36]	; 0x24
 801fcca:	2301      	movs	r3, #1
 801fccc:	9301      	str	r3, [sp, #4]
 801fcce:	9304      	str	r3, [sp, #16]
 801fcd0:	2300      	movs	r3, #0
 801fcd2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801fcd6:	9303      	str	r3, [sp, #12]
 801fcd8:	f04f 0e01 	mov.w	lr, #1
 801fcdc:	2d00      	cmp	r5, #0
 801fcde:	d07c      	beq.n	801fdda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801fce0:	45ae      	cmp	lr, r5
 801fce2:	d26b      	bcs.n	801fdbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801fce4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fce6:	eba5 050e 	sub.w	r5, r5, lr
 801fcea:	4543      	cmp	r3, r8
 801fcec:	b2ad      	uxth	r5, r5
 801fcee:	460c      	mov	r4, r1
 801fcf0:	d802      	bhi.n	801fcf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801fcf2:	e070      	b.n	801fdd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801fcf4:	2b00      	cmp	r3, #0
 801fcf6:	d15c      	bne.n	801fdb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801fcf8:	9b05      	ldr	r3, [sp, #20]
 801fcfa:	9a04      	ldr	r2, [sp, #16]
 801fcfc:	785b      	ldrb	r3, [r3, #1]
 801fcfe:	9904      	ldr	r1, [sp, #16]
 801fd00:	f1c2 0207 	rsb	r2, r2, #7
 801fd04:	4093      	lsls	r3, r2
 801fd06:	005b      	lsls	r3, r3, #1
 801fd08:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801fd0c:	9b05      	ldr	r3, [sp, #20]
 801fd0e:	781b      	ldrb	r3, [r3, #0]
 801fd10:	410b      	asrs	r3, r1
 801fd12:	3101      	adds	r1, #1
 801fd14:	b2c9      	uxtb	r1, r1
 801fd16:	2908      	cmp	r1, #8
 801fd18:	9104      	str	r1, [sp, #16]
 801fd1a:	9905      	ldr	r1, [sp, #20]
 801fd1c:	bf0a      	itet	eq
 801fd1e:	3102      	addeq	r1, #2
 801fd20:	3101      	addne	r1, #1
 801fd22:	9105      	streq	r1, [sp, #20]
 801fd24:	b2db      	uxtb	r3, r3
 801fd26:	bf0a      	itet	eq
 801fd28:	2100      	moveq	r1, #0
 801fd2a:	9105      	strne	r1, [sp, #20]
 801fd2c:	9104      	streq	r1, [sp, #16]
 801fd2e:	4313      	orrs	r3, r2
 801fd30:	9910      	ldr	r1, [sp, #64]	; 0x40
 801fd32:	b29a      	uxth	r2, r3
 801fd34:	4291      	cmp	r1, r2
 801fd36:	d30a      	bcc.n	801fd4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801fd38:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801fd3c:	2301      	movs	r3, #1
 801fd3e:	9907      	ldr	r1, [sp, #28]
 801fd40:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801fd44:	d30f      	bcc.n	801fd66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801fd46:	2100      	movs	r1, #0
 801fd48:	9301      	str	r3, [sp, #4]
 801fd4a:	9103      	str	r1, [sp, #12]
 801fd4c:	e032      	b.n	801fdb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801fd4e:	9b07      	ldr	r3, [sp, #28]
 801fd50:	429a      	cmp	r2, r3
 801fd52:	d318      	bcc.n	801fd86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801fd54:	9b01      	ldr	r3, [sp, #4]
 801fd56:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801fd5a:	445b      	add	r3, fp
 801fd5c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801fd60:	9b01      	ldr	r3, [sp, #4]
 801fd62:	3301      	adds	r3, #1
 801fd64:	b29b      	uxth	r3, r3
 801fd66:	9907      	ldr	r1, [sp, #28]
 801fd68:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801fd6c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fd70:	7108      	strb	r0, [r1, #4]
 801fd72:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fd74:	80c8      	strh	r0, [r1, #6]
 801fd76:	9801      	ldr	r0, [sp, #4]
 801fd78:	3001      	adds	r0, #1
 801fd7a:	7148      	strb	r0, [r1, #5]
 801fd7c:	9907      	ldr	r1, [sp, #28]
 801fd7e:	3101      	adds	r1, #1
 801fd80:	b289      	uxth	r1, r1
 801fd82:	9107      	str	r1, [sp, #28]
 801fd84:	e7df      	b.n	801fd46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801fd86:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801fd8a:	4611      	mov	r1, r2
 801fd8c:	795b      	ldrb	r3, [r3, #5]
 801fd8e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801fd92:	4458      	add	r0, fp
 801fd94:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801fd96:	4406      	add	r6, r0
 801fd98:	2e00      	cmp	r6, #0
 801fd9a:	dd06      	ble.n	801fdaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801fd9c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801fda0:	790e      	ldrb	r6, [r1, #4]
 801fda2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801fda6:	88c9      	ldrh	r1, [r1, #6]
 801fda8:	e7f4      	b.n	801fd94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801fdaa:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801fdae:	b29b      	uxth	r3, r3
 801fdb0:	e7c5      	b.n	801fd3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801fdb2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fdb4:	920b      	str	r2, [sp, #44]	; 0x2c
 801fdb6:	4621      	mov	r1, r4
 801fdb8:	469e      	mov	lr, r3
 801fdba:	e78f      	b.n	801fcdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801fdbc:	9a03      	ldr	r2, [sp, #12]
 801fdbe:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801fdc2:	442a      	add	r2, r5
 801fdc4:	ebae 0305 	sub.w	r3, lr, r5
 801fdc8:	b292      	uxth	r2, r2
 801fdca:	b29b      	uxth	r3, r3
 801fdcc:	9203      	str	r2, [sp, #12]
 801fdce:	2500      	movs	r5, #0
 801fdd0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fdd2:	4542      	cmp	r2, r8
 801fdd4:	d88e      	bhi.n	801fcf4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801fdd6:	4621      	mov	r1, r4
 801fdd8:	e74e      	b.n	801fc78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801fdda:	458e      	cmp	lr, r1
 801fddc:	bf29      	itett	cs
 801fdde:	ebae 0301 	subcs.w	r3, lr, r1
 801fde2:	eba1 040e 	subcc.w	r4, r1, lr
 801fde6:	b29b      	uxthcs	r3, r3
 801fde8:	910c      	strcs	r1, [sp, #48]	; 0x30
 801fdea:	bf2f      	iteee	cs
 801fdec:	462c      	movcs	r4, r5
 801fdee:	b2a4      	uxthcc	r4, r4
 801fdf0:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801fdf4:	462b      	movcc	r3, r5
 801fdf6:	f04f 0900 	mov.w	r9, #0
 801fdfa:	9a03      	ldr	r2, [sp, #12]
 801fdfc:	980c      	ldr	r0, [sp, #48]	; 0x30
 801fdfe:	444a      	add	r2, r9
 801fe00:	4548      	cmp	r0, r9
 801fe02:	b292      	uxth	r2, r2
 801fe04:	d074      	beq.n	801fef0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801fe06:	445a      	add	r2, fp
 801fe08:	2004      	movs	r0, #4
 801fe0a:	4605      	mov	r5, r0
 801fe0c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801fe10:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801fe12:	fb15 0202 	smlabb	r2, r5, r2, r0
 801fe16:	9812      	ldr	r0, [sp, #72]	; 0x48
 801fe18:	5880      	ldr	r0, [r0, r2]
 801fe1a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801fe1e:	d014      	beq.n	801fe4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fe20:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801fe24:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801fe28:	d112      	bne.n	801fe50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe2a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe2c:	2aff      	cmp	r2, #255	; 0xff
 801fe2e:	d10f      	bne.n	801fe50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801fe30:	0942      	lsrs	r2, r0, #5
 801fe32:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801fe36:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe3a:	f025 0507 	bic.w	r5, r5, #7
 801fe3e:	4315      	orrs	r5, r2
 801fe40:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801fe44:	4305      	orrs	r5, r0
 801fe46:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801fe4a:	f109 0901 	add.w	r9, r9, #1
 801fe4e:	e7d4      	b.n	801fdfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801fe50:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801fe54:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801fe58:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801fe5c:	9215      	str	r2, [sp, #84]	; 0x54
 801fe5e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fe60:	fb02 fa0a 	mul.w	sl, r2, sl
 801fe64:	f10a 0201 	add.w	r2, sl, #1
 801fe68:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801fe6c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801fe70:	1212      	asrs	r2, r2, #8
 801fe72:	fa1f fa82 	uxth.w	sl, r2
 801fe76:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801fe7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801fe7e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe82:	43d2      	mvns	r2, r2
 801fe84:	b2d2      	uxtb	r2, r2
 801fe86:	fb16 f60a 	smulbb	r6, r6, sl
 801fe8a:	fa5f fc8c 	uxtb.w	ip, ip
 801fe8e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801fe92:	b2c0      	uxtb	r0, r0
 801fe94:	fb07 6702 	mla	r7, r7, r2, r6
 801fe98:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801fe9c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801fe9e:	fb10 f00a 	smulbb	r0, r0, sl
 801fea2:	fb0c 0002 	mla	r0, ip, r2, r0
 801fea6:	b2ed      	uxtb	r5, r5
 801fea8:	b2bf      	uxth	r7, r7
 801feaa:	fb15 f50a 	smulbb	r5, r5, sl
 801feae:	b280      	uxth	r0, r0
 801feb0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801feb4:	fb06 5602 	mla	r6, r6, r2, r5
 801feb8:	1c7a      	adds	r2, r7, #1
 801feba:	1c45      	adds	r5, r0, #1
 801febc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801fec0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801fec4:	b2b6      	uxth	r6, r6
 801fec6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801feca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801fece:	432f      	orrs	r7, r5
 801fed0:	1c75      	adds	r5, r6, #1
 801fed2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801fed6:	096d      	lsrs	r5, r5, #5
 801fed8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fedc:	432f      	orrs	r7, r5
 801fede:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801fee2:	e7b2      	b.n	801fe4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801fee4:	2001383c 	.word	0x2001383c
 801fee8:	20013836 	.word	0x20013836
 801feec:	fffff7fb 	.word	0xfffff7fb
 801fef0:	9203      	str	r2, [sp, #12]
 801fef2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fef4:	458e      	cmp	lr, r1
 801fef6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801fefa:	f4ff af68 	bcc.w	801fdce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801fefe:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801ff00:	9906      	ldr	r1, [sp, #24]
 801ff02:	8812      	ldrh	r2, [r2, #0]
 801ff04:	1a52      	subs	r2, r2, r1
 801ff06:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801ff0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ff0c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801ff0e:	3201      	adds	r2, #1
 801ff10:	428a      	cmp	r2, r1
 801ff12:	9209      	str	r2, [sp, #36]	; 0x24
 801ff14:	d111      	bne.n	801ff3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801ff16:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801ff1a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801ff1e:	9b06      	ldr	r3, [sp, #24]
 801ff20:	eba5 0509 	sub.w	r5, r5, r9
 801ff24:	b2ad      	uxth	r5, r5
 801ff26:	2d00      	cmp	r5, #0
 801ff28:	bf08      	it	eq
 801ff2a:	4619      	moveq	r1, r3
 801ff2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff2e:	bf18      	it	ne
 801ff30:	2100      	movne	r1, #0
 801ff32:	3301      	adds	r3, #1
 801ff34:	930d      	str	r3, [sp, #52]	; 0x34
 801ff36:	b289      	uxth	r1, r1
 801ff38:	e695      	b.n	801fc66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801ff3a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801ff3e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801ff42:	1b2d      	subs	r5, r5, r4
 801ff44:	b2ad      	uxth	r5, r5
 801ff46:	2d00      	cmp	r5, #0
 801ff48:	bf18      	it	ne
 801ff4a:	2400      	movne	r4, #0
 801ff4c:	e740      	b.n	801fdd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801ff4e:	4b04      	ldr	r3, [pc, #16]	; (801ff60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801ff50:	6818      	ldr	r0, [r3, #0]
 801ff52:	6803      	ldr	r3, [r0, #0]
 801ff54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ff56:	4798      	blx	r3
 801ff58:	b01d      	add	sp, #116	; 0x74
 801ff5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff5e:	bf00      	nop
 801ff60:	2001383c 	.word	0x2001383c

0801ff64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ff64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff68:	b09f      	sub	sp, #124	; 0x7c
 801ff6a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801ff6e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801ff72:	920a      	str	r2, [sp, #40]	; 0x28
 801ff74:	461d      	mov	r5, r3
 801ff76:	4604      	mov	r4, r0
 801ff78:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ff7a:	2a00      	cmp	r2, #0
 801ff7c:	f000 81fa 	beq.w	8020374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ff80:	6828      	ldr	r0, [r5, #0]
 801ff82:	6869      	ldr	r1, [r5, #4]
 801ff84:	aa1a      	add	r2, sp, #104	; 0x68
 801ff86:	c203      	stmia	r2!, {r0, r1}
 801ff88:	6818      	ldr	r0, [r3, #0]
 801ff8a:	6859      	ldr	r1, [r3, #4]
 801ff8c:	aa1c      	add	r2, sp, #112	; 0x70
 801ff8e:	c203      	stmia	r2!, {r0, r1}
 801ff90:	a81a      	add	r0, sp, #104	; 0x68
 801ff92:	f7f8 fb51 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ff96:	4629      	mov	r1, r5
 801ff98:	a81c      	add	r0, sp, #112	; 0x70
 801ff9a:	f7f8 fb91 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ff9e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ffa2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ffa6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ffaa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ffae:	bfd7      	itett	le
 801ffb0:	b29a      	uxthle	r2, r3
 801ffb2:	2201      	movgt	r2, #1
 801ffb4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801ffb8:	fb91 f2f2 	sdivle	r2, r1, r2
 801ffbc:	9201      	str	r2, [sp, #4]
 801ffbe:	9801      	ldr	r0, [sp, #4]
 801ffc0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ffc4:	fb92 f0f0 	sdiv	r0, r2, r0
 801ffc8:	b280      	uxth	r0, r0
 801ffca:	9010      	str	r0, [sp, #64]	; 0x40
 801ffcc:	9901      	ldr	r1, [sp, #4]
 801ffce:	9801      	ldr	r0, [sp, #4]
 801ffd0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ffd2:	440e      	add	r6, r1
 801ffd4:	fb05 2510 	mls	r5, r5, r0, r2
 801ffd8:	fb15 f503 	smulbb	r5, r5, r3
 801ffdc:	3e01      	subs	r6, #1
 801ffde:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801ffe2:	fb96 f6f1 	sdiv	r6, r6, r1
 801ffe6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801ffea:	440d      	add	r5, r1
 801ffec:	4419      	add	r1, r3
 801ffee:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801fff2:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801fff6:	441a      	add	r2, r3
 801fff8:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801fffc:	9304      	str	r3, [sp, #16]
 801fffe:	4b96      	ldr	r3, [pc, #600]	; (8020258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8020000:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 8020004:	6818      	ldr	r0, [r3, #0]
 8020006:	6803      	ldr	r3, [r0, #0]
 8020008:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802000a:	4798      	blx	r3
 802000c:	4b93      	ldr	r3, [pc, #588]	; (802025c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 802000e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 8020012:	881a      	ldrh	r2, [r3, #0]
 8020014:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 8020018:	9318      	str	r3, [sp, #96]	; 0x60
 802001a:	fb02 c101 	mla	r1, r2, r1, ip
 802001e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 8020022:	4357      	muls	r7, r2
 8020024:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8020028:	3601      	adds	r6, #1
 802002a:	920b      	str	r2, [sp, #44]	; 0x2c
 802002c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802002e:	4b8c      	ldr	r3, [pc, #560]	; (8020260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8020030:	b2b6      	uxth	r6, r6
 8020032:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8020036:	1d32      	adds	r2, r6, #4
 8020038:	9206      	str	r2, [sp, #24]
 802003a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802003c:	43d2      	mvns	r2, r2
 802003e:	b2d2      	uxtb	r2, r2
 8020040:	b2ad      	uxth	r5, r5
 8020042:	9215      	str	r2, [sp, #84]	; 0x54
 8020044:	9a04      	ldr	r2, [sp, #16]
 8020046:	2d00      	cmp	r5, #0
 8020048:	bf0c      	ite	eq
 802004a:	4611      	moveq	r1, r2
 802004c:	2100      	movne	r1, #0
 802004e:	2200      	movs	r2, #0
 8020050:	1b1b      	subs	r3, r3, r4
 8020052:	b289      	uxth	r1, r1
 8020054:	920d      	str	r2, [sp, #52]	; 0x34
 8020056:	9319      	str	r3, [sp, #100]	; 0x64
 8020058:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802005a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802005c:	fa12 f383 	uxtah	r3, r2, r3
 8020060:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020062:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8020066:	3304      	adds	r3, #4
 8020068:	9307      	str	r3, [sp, #28]
 802006a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802006c:	455b      	cmp	r3, fp
 802006e:	f240 817c 	bls.w	802036a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 8020072:	9a01      	ldr	r2, [sp, #4]
 8020074:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 8020078:	fbb5 f3f3 	udiv	r3, r5, r3
 802007c:	1ad3      	subs	r3, r2, r3
 802007e:	b29b      	uxth	r3, r3
 8020080:	9316      	str	r3, [sp, #88]	; 0x58
 8020082:	9b07      	ldr	r3, [sp, #28]
 8020084:	9807      	ldr	r0, [sp, #28]
 8020086:	785a      	ldrb	r2, [r3, #1]
 8020088:	789b      	ldrb	r3, [r3, #2]
 802008a:	7800      	ldrb	r0, [r0, #0]
 802008c:	9011      	str	r0, [sp, #68]	; 0x44
 802008e:	021b      	lsls	r3, r3, #8
 8020090:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8020094:	9a07      	ldr	r2, [sp, #28]
 8020096:	78d2      	ldrb	r2, [r2, #3]
 8020098:	4313      	orrs	r3, r2
 802009a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802009c:	3001      	adds	r0, #1
 802009e:	441a      	add	r2, r3
 80200a0:	9005      	str	r0, [sp, #20]
 80200a2:	1c50      	adds	r0, r2, #1
 80200a4:	9003      	str	r0, [sp, #12]
 80200a6:	7852      	ldrb	r2, [r2, #1]
 80200a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80200aa:	0212      	lsls	r2, r2, #8
 80200ac:	5cc3      	ldrb	r3, [r0, r3]
 80200ae:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 80200b2:	431a      	orrs	r2, r3
 80200b4:	b293      	uxth	r3, r2
 80200b6:	930c      	str	r3, [sp, #48]	; 0x30
 80200b8:	2300      	movs	r3, #0
 80200ba:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 80200be:	9308      	str	r3, [sp, #32]
 80200c0:	461a      	mov	r2, r3
 80200c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80200c6:	930e      	str	r3, [sp, #56]	; 0x38
 80200c8:	f04f 0801 	mov.w	r8, #1
 80200cc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80200d0:	f8cd 8008 	str.w	r8, [sp, #8]
 80200d4:	46c4      	mov	ip, r8
 80200d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80200d8:	2d00      	cmp	r5, #0
 80200da:	d07c      	beq.n	80201d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80200dc:	45ac      	cmp	ip, r5
 80200de:	d26c      	bcs.n	80201ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 80200e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80200e2:	eba5 050c 	sub.w	r5, r5, ip
 80200e6:	455b      	cmp	r3, fp
 80200e8:	b2ad      	uxth	r5, r5
 80200ea:	4608      	mov	r0, r1
 80200ec:	d802      	bhi.n	80200f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80200ee:	e070      	b.n	80201d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 80200f0:	2b00      	cmp	r3, #0
 80200f2:	d15c      	bne.n	80201ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80200f4:	9b03      	ldr	r3, [sp, #12]
 80200f6:	9a02      	ldr	r2, [sp, #8]
 80200f8:	785b      	ldrb	r3, [r3, #1]
 80200fa:	9902      	ldr	r1, [sp, #8]
 80200fc:	f1c2 0207 	rsb	r2, r2, #7
 8020100:	4093      	lsls	r3, r2
 8020102:	005b      	lsls	r3, r3, #1
 8020104:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 8020108:	9b03      	ldr	r3, [sp, #12]
 802010a:	781b      	ldrb	r3, [r3, #0]
 802010c:	410b      	asrs	r3, r1
 802010e:	3101      	adds	r1, #1
 8020110:	b2c9      	uxtb	r1, r1
 8020112:	2908      	cmp	r1, #8
 8020114:	9102      	str	r1, [sp, #8]
 8020116:	9903      	ldr	r1, [sp, #12]
 8020118:	bf0a      	itet	eq
 802011a:	3102      	addeq	r1, #2
 802011c:	3101      	addne	r1, #1
 802011e:	9103      	streq	r1, [sp, #12]
 8020120:	b2db      	uxtb	r3, r3
 8020122:	bf0a      	itet	eq
 8020124:	2100      	moveq	r1, #0
 8020126:	9103      	strne	r1, [sp, #12]
 8020128:	9102      	streq	r1, [sp, #8]
 802012a:	4313      	orrs	r3, r2
 802012c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802012e:	b29a      	uxth	r2, r3
 8020130:	4291      	cmp	r1, r2
 8020132:	d30a      	bcc.n	802014a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 8020134:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 8020138:	2301      	movs	r3, #1
 802013a:	9905      	ldr	r1, [sp, #20]
 802013c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8020140:	d30f      	bcc.n	8020162 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 8020142:	2100      	movs	r1, #0
 8020144:	4698      	mov	r8, r3
 8020146:	9100      	str	r1, [sp, #0]
 8020148:	e032      	b.n	80201b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 802014a:	9b05      	ldr	r3, [sp, #20]
 802014c:	429a      	cmp	r2, r3
 802014e:	d318      	bcc.n	8020182 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8020150:	eb04 0308 	add.w	r3, r4, r8
 8020154:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 8020158:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 802015c:	f108 0301 	add.w	r3, r8, #1
 8020160:	b29b      	uxth	r3, r3
 8020162:	9905      	ldr	r1, [sp, #20]
 8020164:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 8020168:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802016c:	710e      	strb	r6, [r1, #4]
 802016e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8020170:	80ce      	strh	r6, [r1, #6]
 8020172:	f108 0601 	add.w	r6, r8, #1
 8020176:	714e      	strb	r6, [r1, #5]
 8020178:	9905      	ldr	r1, [sp, #20]
 802017a:	3101      	adds	r1, #1
 802017c:	b289      	uxth	r1, r1
 802017e:	9105      	str	r1, [sp, #20]
 8020180:	e7df      	b.n	8020142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 8020182:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8020186:	4611      	mov	r1, r2
 8020188:	795b      	ldrb	r3, [r3, #5]
 802018a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 802018e:	4426      	add	r6, r4
 8020190:	9f19      	ldr	r7, [sp, #100]	; 0x64
 8020192:	4437      	add	r7, r6
 8020194:	2f00      	cmp	r7, #0
 8020196:	dd06      	ble.n	80201a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8020198:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 802019c:	790f      	ldrb	r7, [r1, #4]
 802019e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80201a2:	88c9      	ldrh	r1, [r1, #6]
 80201a4:	e7f4      	b.n	8020190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80201a6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 80201aa:	b29b      	uxth	r3, r3
 80201ac:	e7c5      	b.n	802013a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80201ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80201b0:	920c      	str	r2, [sp, #48]	; 0x30
 80201b2:	4601      	mov	r1, r0
 80201b4:	9a00      	ldr	r2, [sp, #0]
 80201b6:	469c      	mov	ip, r3
 80201b8:	e78e      	b.n	80200d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 80201ba:	1957      	adds	r7, r2, r5
 80201bc:	ebac 0305 	sub.w	r3, ip, r5
 80201c0:	b2ba      	uxth	r2, r7
 80201c2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80201c6:	9200      	str	r2, [sp, #0]
 80201c8:	b29b      	uxth	r3, r3
 80201ca:	2500      	movs	r5, #0
 80201cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80201ce:	455a      	cmp	r2, fp
 80201d0:	d88e      	bhi.n	80200f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 80201d2:	4601      	mov	r1, r0
 80201d4:	e749      	b.n	802006a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 80201d6:	458c      	cmp	ip, r1
 80201d8:	bf2c      	ite	cs
 80201da:	4628      	movcs	r0, r5
 80201dc:	462b      	movcc	r3, r5
 80201de:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80201e0:	bf27      	ittee	cs
 80201e2:	9109      	strcs	r1, [sp, #36]	; 0x24
 80201e4:	ebac 0301 	subcs.w	r3, ip, r1
 80201e8:	eba1 000c 	subcc.w	r0, r1, ip
 80201ec:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 80201f0:	bf2c      	ite	cs
 80201f2:	b29b      	uxthcs	r3, r3
 80201f4:	b280      	uxthcc	r0, r0
 80201f6:	2dff      	cmp	r5, #255	; 0xff
 80201f8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80201fa:	eb02 0705 	add.w	r7, r2, r5
 80201fe:	b2bd      	uxth	r5, r7
 8020200:	9500      	str	r5, [sp, #0]
 8020202:	d12f      	bne.n	8020264 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 8020204:	465e      	mov	r6, fp
 8020206:	9d00      	ldr	r5, [sp, #0]
 8020208:	42aa      	cmp	r2, r5
 802020a:	f040 8084 	bne.w	8020316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 802020e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020210:	458c      	cmp	ip, r1
 8020212:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020216:	d3d8      	bcc.n	80201ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8020218:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802021a:	9904      	ldr	r1, [sp, #16]
 802021c:	8812      	ldrh	r2, [r2, #0]
 802021e:	1a52      	subs	r2, r2, r1
 8020220:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 8020224:	9a08      	ldr	r2, [sp, #32]
 8020226:	9916      	ldr	r1, [sp, #88]	; 0x58
 8020228:	3201      	adds	r2, #1
 802022a:	428a      	cmp	r2, r1
 802022c:	9208      	str	r2, [sp, #32]
 802022e:	f040 8092 	bne.w	8020356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 8020232:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 8020236:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 802023a:	9b04      	ldr	r3, [sp, #16]
 802023c:	eba5 050c 	sub.w	r5, r5, ip
 8020240:	b2ad      	uxth	r5, r5
 8020242:	2d00      	cmp	r5, #0
 8020244:	bf08      	it	eq
 8020246:	4619      	moveq	r1, r3
 8020248:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802024a:	bf18      	it	ne
 802024c:	2100      	movne	r1, #0
 802024e:	3301      	adds	r3, #1
 8020250:	930d      	str	r3, [sp, #52]	; 0x34
 8020252:	b289      	uxth	r1, r1
 8020254:	e700      	b.n	8020058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8020256:	bf00      	nop
 8020258:	2001383c 	.word	0x2001383c
 802025c:	20013836 	.word	0x20013836
 8020260:	fffff7fb 	.word	0xfffff7fb
 8020264:	46d9      	mov	r9, fp
 8020266:	9d00      	ldr	r5, [sp, #0]
 8020268:	42aa      	cmp	r2, r5
 802026a:	d0d0      	beq.n	802020e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 802026c:	1c55      	adds	r5, r2, #1
 802026e:	4422      	add	r2, r4
 8020270:	9517      	str	r5, [sp, #92]	; 0x5c
 8020272:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 8020276:	9a06      	ldr	r2, [sp, #24]
 8020278:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802027c:	4472      	add	r2, lr
 802027e:	9212      	str	r2, [sp, #72]	; 0x48
 8020280:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8020282:	f8b9 2000 	ldrh.w	r2, [r9]
 8020286:	f897 a002 	ldrb.w	sl, [r7, #2]
 802028a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 802028c:	1216      	asrs	r6, r2, #8
 802028e:	fb1a fa07 	smulbb	sl, sl, r7
 8020292:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020296:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8020298:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 802029c:	fb06 a607 	mla	r6, r6, r7, sl
 80202a0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 80202a2:	f897 a001 	ldrb.w	sl, [r7, #1]
 80202a6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202a8:	10d5      	asrs	r5, r2, #3
 80202aa:	fb1a fa07 	smulbb	sl, sl, r7
 80202ae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80202b2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202b4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80202b8:	fb05 a507 	mla	r5, r5, r7, sl
 80202bc:	9f06      	ldr	r7, [sp, #24]
 80202be:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80202c2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80202c4:	00d2      	lsls	r2, r2, #3
 80202c6:	fb1e fe07 	smulbb	lr, lr, r7
 80202ca:	b2d2      	uxtb	r2, r2
 80202cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80202ce:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80202d2:	b2b6      	uxth	r6, r6
 80202d4:	fb02 e207 	mla	r2, r2, r7, lr
 80202d8:	b292      	uxth	r2, r2
 80202da:	b2ad      	uxth	r5, r5
 80202dc:	f106 0a01 	add.w	sl, r6, #1
 80202e0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80202e4:	f102 0e01 	add.w	lr, r2, #1
 80202e8:	f105 0a01 	add.w	sl, r5, #1
 80202ec:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80202f0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80202f4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80202f8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80202fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020300:	ea4e 0606 	orr.w	r6, lr, r6
 8020304:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020308:	ea46 060a 	orr.w	r6, r6, sl
 802030c:	f829 6b02 	strh.w	r6, [r9], #2
 8020310:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020314:	e7a7      	b.n	8020266 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 8020316:	f102 0e01 	add.w	lr, r2, #1
 802031a:	4422      	add	r2, r4
 802031c:	9f06      	ldr	r7, [sp, #24]
 802031e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 8020322:	9a06      	ldr	r2, [sp, #24]
 8020324:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020328:	eb02 0a05 	add.w	sl, r2, r5
 802032c:	4a13      	ldr	r2, [pc, #76]	; (802037c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 802032e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020332:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 8020336:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802033a:	00d2      	lsls	r2, r2, #3
 802033c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020340:	ea49 0202 	orr.w	r2, r9, r2
 8020344:	f817 9005 	ldrb.w	r9, [r7, r5]
 8020348:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802034c:	f826 2b02 	strh.w	r2, [r6], #2
 8020350:	fa1f f28e 	uxth.w	r2, lr
 8020354:	e757      	b.n	8020206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 8020356:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 802035a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 802035e:	1a2d      	subs	r5, r5, r0
 8020360:	b2ad      	uxth	r5, r5
 8020362:	2d00      	cmp	r5, #0
 8020364:	bf18      	it	ne
 8020366:	2000      	movne	r0, #0
 8020368:	e730      	b.n	80201cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 802036a:	4b05      	ldr	r3, [pc, #20]	; (8020380 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 802036c:	6818      	ldr	r0, [r3, #0]
 802036e:	6803      	ldr	r3, [r0, #0]
 8020370:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020372:	4798      	blx	r3
 8020374:	b01f      	add	sp, #124	; 0x7c
 8020376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802037a:	bf00      	nop
 802037c:	fffff800 	.word	0xfffff800
 8020380:	2001383c 	.word	0x2001383c

08020384 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8020384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020388:	b091      	sub	sp, #68	; 0x44
 802038a:	469b      	mov	fp, r3
 802038c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8020390:	4616      	mov	r6, r2
 8020392:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8020396:	f9b3 2000 	ldrsh.w	r2, [r3]
 802039a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 802039e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80203a2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80203a6:	4604      	mov	r4, r0
 80203a8:	460d      	mov	r5, r1
 80203aa:	4640      	mov	r0, r8
 80203ac:	4659      	mov	r1, fp
 80203ae:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80203b2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80203b6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80203ba:	f7f2 fb9f 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 80203be:	4631      	mov	r1, r6
 80203c0:	4640      	mov	r0, r8
 80203c2:	f7f2 fb9b 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 80203c6:	4b74      	ldr	r3, [pc, #464]	; (8020598 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80203c8:	8818      	ldrh	r0, [r3, #0]
 80203ca:	4b74      	ldr	r3, [pc, #464]	; (802059c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80203cc:	8819      	ldrh	r1, [r3, #0]
 80203ce:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203d2:	2b00      	cmp	r3, #0
 80203d4:	b202      	sxth	r2, r0
 80203d6:	b20e      	sxth	r6, r1
 80203d8:	da07      	bge.n	80203ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80203da:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80203de:	4463      	add	r3, ip
 80203e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80203e4:	2300      	movs	r3, #0
 80203e6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80203ea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80203ee:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80203f2:	1ad2      	subs	r2, r2, r3
 80203f4:	4594      	cmp	ip, r2
 80203f6:	bfc4      	itt	gt
 80203f8:	1ac2      	subgt	r2, r0, r3
 80203fa:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80203fe:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020402:	2a00      	cmp	r2, #0
 8020404:	da07      	bge.n	8020416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8020406:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 802040a:	4462      	add	r2, ip
 802040c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8020410:	2200      	movs	r2, #0
 8020412:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8020416:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 802041a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 802041e:	eba6 060a 	sub.w	r6, r6, sl
 8020422:	42b2      	cmp	r2, r6
 8020424:	bfc4      	itt	gt
 8020426:	eba1 020a 	subgt.w	r2, r1, sl
 802042a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 802042e:	4a5c      	ldr	r2, [pc, #368]	; (80205a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8020430:	7812      	ldrb	r2, [r2, #0]
 8020432:	b9a2      	cbnz	r2, 802045e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8020434:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8020438:	4286      	cmp	r6, r0
 802043a:	4640      	mov	r0, r8
 802043c:	9303      	str	r3, [sp, #12]
 802043e:	bf14      	ite	ne
 8020440:	2600      	movne	r6, #0
 8020442:	2601      	moveq	r6, #1
 8020444:	f7f2 fb9d 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8020448:	9b03      	ldr	r3, [sp, #12]
 802044a:	b160      	cbz	r0, 8020466 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 802044c:	2300      	movs	r3, #0
 802044e:	8023      	strh	r3, [r4, #0]
 8020450:	8063      	strh	r3, [r4, #2]
 8020452:	80a3      	strh	r3, [r4, #4]
 8020454:	4620      	mov	r0, r4
 8020456:	80e3      	strh	r3, [r4, #6]
 8020458:	b011      	add	sp, #68	; 0x44
 802045a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802045e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020462:	428e      	cmp	r6, r1
 8020464:	e7e9      	b.n	802043a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8020466:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 802046a:	9205      	str	r2, [sp, #20]
 802046c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8020470:	9206      	str	r2, [sp, #24]
 8020472:	f8bb 2000 	ldrh.w	r2, [fp]
 8020476:	900e      	str	r0, [sp, #56]	; 0x38
 8020478:	1a9b      	subs	r3, r3, r2
 802047a:	b21b      	sxth	r3, r3
 802047c:	9303      	str	r3, [sp, #12]
 802047e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020482:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8020486:	ebaa 0a03 	sub.w	sl, sl, r3
 802048a:	fa0f f38a 	sxth.w	r3, sl
 802048e:	9304      	str	r3, [sp, #16]
 8020490:	9b03      	ldr	r3, [sp, #12]
 8020492:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8020496:	9b04      	ldr	r3, [sp, #16]
 8020498:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 802049c:	9b05      	ldr	r3, [sp, #20]
 802049e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80204a2:	a90e      	add	r1, sp, #56	; 0x38
 80204a4:	9b06      	ldr	r3, [sp, #24]
 80204a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80204aa:	a80c      	add	r0, sp, #48	; 0x30
 80204ac:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80204b0:	f7f8 f906 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80204b4:	4640      	mov	r0, r8
 80204b6:	f7f8 f8bf 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204ba:	a80e      	add	r0, sp, #56	; 0x38
 80204bc:	f7f8 f8bc 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80204c0:	4b38      	ldr	r3, [pc, #224]	; (80205a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80204c2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80204c6:	881b      	ldrh	r3, [r3, #0]
 80204c8:	9307      	str	r3, [sp, #28]
 80204ca:	682b      	ldr	r3, [r5, #0]
 80204cc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80205a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80204d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204d2:	4628      	mov	r0, r5
 80204d4:	4798      	blx	r3
 80204d6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80204da:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80204de:	4681      	mov	r9, r0
 80204e0:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80204e4:	f8db 0000 	ldr.w	r0, [fp]
 80204e8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80204ea:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80204ee:	6803      	ldr	r3, [r0, #0]
 80204f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204f2:	4798      	blx	r3
 80204f4:	4607      	mov	r7, r0
 80204f6:	f8db 0000 	ldr.w	r0, [fp]
 80204fa:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80204fe:	6803      	ldr	r3, [r0, #0]
 8020500:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8020504:	9109      	str	r1, [sp, #36]	; 0x24
 8020506:	9208      	str	r2, [sp, #32]
 8020508:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802050a:	4798      	blx	r3
 802050c:	f010 0f01 	tst.w	r0, #1
 8020510:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8020514:	d012      	beq.n	802053c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8020516:	f8db 0000 	ldr.w	r0, [fp]
 802051a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 802051e:	6803      	ldr	r3, [r0, #0]
 8020520:	9200      	str	r2, [sp, #0]
 8020522:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8020524:	e898 0006 	ldmia.w	r8, {r1, r2}
 8020528:	462b      	mov	r3, r5
 802052a:	47b0      	blx	r6
 802052c:	9b03      	ldr	r3, [sp, #12]
 802052e:	8023      	strh	r3, [r4, #0]
 8020530:	9b04      	ldr	r3, [sp, #16]
 8020532:	8063      	strh	r3, [r4, #2]
 8020534:	9b05      	ldr	r3, [sp, #20]
 8020536:	80a3      	strh	r3, [r4, #4]
 8020538:	9b06      	ldr	r3, [sp, #24]
 802053a:	e78b      	b.n	8020454 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 802053c:	fb09 f202 	mul.w	r2, r9, r2
 8020540:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8020544:	440f      	add	r7, r1
 8020546:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 802054a:	b166      	cbz	r6, 8020566 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 802054c:	9a07      	ldr	r2, [sp, #28]
 802054e:	4592      	cmp	sl, r2
 8020550:	d109      	bne.n	8020566 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8020552:	f8db 0000 	ldr.w	r0, [fp]
 8020556:	6802      	ldr	r2, [r0, #0]
 8020558:	fb09 f303 	mul.w	r3, r9, r3
 802055c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 802055e:	4629      	mov	r1, r5
 8020560:	463a      	mov	r2, r7
 8020562:	47b0      	blx	r6
 8020564:	e7e2      	b.n	802052c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8020566:	fb0a f303 	mul.w	r3, sl, r3
 802056a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80205a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 802056e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8020572:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8020576:	4545      	cmp	r5, r8
 8020578:	d2d8      	bcs.n	802052c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 802057a:	f8db 0000 	ldr.w	r0, [fp]
 802057e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8020582:	6802      	ldr	r2, [r0, #0]
 8020584:	4629      	mov	r1, r5
 8020586:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 802058a:	005b      	lsls	r3, r3, #1
 802058c:	463a      	mov	r2, r7
 802058e:	47d0      	blx	sl
 8020590:	444f      	add	r7, r9
 8020592:	4435      	add	r5, r6
 8020594:	e7ef      	b.n	8020576 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8020596:	bf00      	nop
 8020598:	20013830 	.word	0x20013830
 802059c:	20013832 	.word	0x20013832
 80205a0:	20013834 	.word	0x20013834
 80205a4:	20013836 	.word	0x20013836
 80205a8:	2001383c 	.word	0x2001383c

080205ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80205ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80205ae:	4606      	mov	r6, r0
 80205b0:	b087      	sub	sp, #28
 80205b2:	460c      	mov	r4, r1
 80205b4:	4617      	mov	r7, r2
 80205b6:	461d      	mov	r5, r3
 80205b8:	b333      	cbz	r3, 8020608 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205ba:	4608      	mov	r0, r1
 80205bc:	f7f2 fae1 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 80205c0:	bb10      	cbnz	r0, 8020608 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80205c2:	6820      	ldr	r0, [r4, #0]
 80205c4:	6861      	ldr	r1, [r4, #4]
 80205c6:	4c1c      	ldr	r4, [pc, #112]	; (8020638 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80205c8:	ab04      	add	r3, sp, #16
 80205ca:	c303      	stmia	r3!, {r0, r1}
 80205cc:	a804      	add	r0, sp, #16
 80205ce:	f7f8 f833 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80205d2:	6820      	ldr	r0, [r4, #0]
 80205d4:	6803      	ldr	r3, [r0, #0]
 80205d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80205d8:	4798      	blx	r3
 80205da:	2dff      	cmp	r5, #255	; 0xff
 80205dc:	d016      	beq.n	802060c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80205de:	f010 0f08 	tst.w	r0, #8
 80205e2:	6820      	ldr	r0, [r4, #0]
 80205e4:	d015      	beq.n	8020612 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80205e6:	2400      	movs	r4, #0
 80205e8:	6801      	ldr	r1, [r0, #0]
 80205ea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80205ee:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80205f2:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80205f6:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80205fa:	9401      	str	r4, [sp, #4]
 80205fc:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8020600:	9400      	str	r4, [sp, #0]
 8020602:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8020604:	4639      	mov	r1, r7
 8020606:	47a0      	blx	r4
 8020608:	b007      	add	sp, #28
 802060a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802060c:	f010 0f02 	tst.w	r0, #2
 8020610:	e7e7      	b.n	80205e2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8020612:	6803      	ldr	r3, [r0, #0]
 8020614:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020616:	4798      	blx	r3
 8020618:	4b08      	ldr	r3, [pc, #32]	; (802063c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 802061a:	881a      	ldrh	r2, [r3, #0]
 802061c:	6833      	ldr	r3, [r6, #0]
 802061e:	e9cd 7500 	strd	r7, r5, [sp]
 8020622:	4601      	mov	r1, r0
 8020624:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8020626:	4630      	mov	r0, r6
 8020628:	ab04      	add	r3, sp, #16
 802062a:	47a8      	blx	r5
 802062c:	6820      	ldr	r0, [r4, #0]
 802062e:	6803      	ldr	r3, [r0, #0]
 8020630:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020632:	4798      	blx	r3
 8020634:	e7e8      	b.n	8020608 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8020636:	bf00      	nop
 8020638:	2001383c 	.word	0x2001383c
 802063c:	20013836 	.word	0x20013836

08020640 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8020640:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020644:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8020648:	9e08      	ldr	r6, [sp, #32]
 802064a:	4688      	mov	r8, r1
 802064c:	4614      	mov	r4, r2
 802064e:	461d      	mov	r5, r3
 8020650:	2f00      	cmp	r7, #0
 8020652:	f000 80a9 	beq.w	80207a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020656:	4618      	mov	r0, r3
 8020658:	f7f2 fa93 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 802065c:	2800      	cmp	r0, #0
 802065e:	f040 80a3 	bne.w	80207a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020662:	f9b5 1000 	ldrsh.w	r1, [r5]
 8020666:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 802066a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 802066e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8020672:	fb04 1303 	mla	r3, r4, r3, r1
 8020676:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 802067a:	4365      	muls	r5, r4
 802067c:	2fff      	cmp	r7, #255	; 0xff
 802067e:	eba4 0200 	sub.w	r2, r4, r0
 8020682:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8020686:	ea4f 2816 	mov.w	r8, r6, lsr #8
 802068a:	d04a      	beq.n	8020722 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 802068c:	b2bc      	uxth	r4, r7
 802068e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8020692:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8020696:	fa5f f788 	uxtb.w	r7, r8
 802069a:	b2f3      	uxtb	r3, r6
 802069c:	0040      	lsls	r0, r0, #1
 802069e:	fb0e fe04 	mul.w	lr, lr, r4
 80206a2:	4367      	muls	r7, r4
 80206a4:	4363      	muls	r3, r4
 80206a6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80206aa:	fa1f fc8c 	uxth.w	ip, ip
 80206ae:	42a9      	cmp	r1, r5
 80206b0:	d27a      	bcs.n	80207a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80206b2:	eb01 0900 	add.w	r9, r1, r0
 80206b6:	4549      	cmp	r1, r9
 80206b8:	d231      	bcs.n	802071e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80206ba:	880a      	ldrh	r2, [r1, #0]
 80206bc:	1214      	asrs	r4, r2, #8
 80206be:	10d6      	asrs	r6, r2, #3
 80206c0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80206c4:	00d2      	lsls	r2, r2, #3
 80206c6:	b2d2      	uxtb	r2, r2
 80206c8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80206cc:	fb14 f40c 	smulbb	r4, r4, ip
 80206d0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80206d4:	4474      	add	r4, lr
 80206d6:	fb12 f20c 	smulbb	r2, r2, ip
 80206da:	b2a4      	uxth	r4, r4
 80206dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80206e0:	441a      	add	r2, r3
 80206e2:	b292      	uxth	r2, r2
 80206e4:	f104 0a01 	add.w	sl, r4, #1
 80206e8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80206ec:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80206f0:	fb16 f60c 	smulbb	r6, r6, ip
 80206f4:	f102 0a01 	add.w	sl, r2, #1
 80206f8:	443e      	add	r6, r7
 80206fa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80206fe:	b2b6      	uxth	r6, r6
 8020700:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020704:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020708:	4322      	orrs	r2, r4
 802070a:	1c74      	adds	r4, r6, #1
 802070c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8020710:	0976      	lsrs	r6, r6, #5
 8020712:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8020716:	4332      	orrs	r2, r6
 8020718:	f821 2b02 	strh.w	r2, [r1], #2
 802071c:	e7cb      	b.n	80206b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 802071e:	4441      	add	r1, r8
 8020720:	e7c5      	b.n	80206ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8020722:	4f22      	ldr	r7, [pc, #136]	; (80207ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8020724:	0973      	lsrs	r3, r6, #5
 8020726:	ea08 0707 	and.w	r7, r8, r7
 802072a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802072e:	433b      	orrs	r3, r7
 8020730:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8020734:	4333      	orrs	r3, r6
 8020736:	07e7      	lsls	r7, r4, #31
 8020738:	b29b      	uxth	r3, r3
 802073a:	d50b      	bpl.n	8020754 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 802073c:	0040      	lsls	r0, r0, #1
 802073e:	0052      	lsls	r2, r2, #1
 8020740:	42a9      	cmp	r1, r5
 8020742:	d231      	bcs.n	80207a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020744:	180c      	adds	r4, r1, r0
 8020746:	42a1      	cmp	r1, r4
 8020748:	d202      	bcs.n	8020750 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 802074a:	f821 3b02 	strh.w	r3, [r1], #2
 802074e:	e7fa      	b.n	8020746 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8020750:	4411      	add	r1, r2
 8020752:	e7f5      	b.n	8020740 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8020754:	078e      	lsls	r6, r1, #30
 8020756:	d008      	beq.n	802076a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8020758:	0066      	lsls	r6, r4, #1
 802075a:	460a      	mov	r2, r1
 802075c:	42aa      	cmp	r2, r5
 802075e:	d202      	bcs.n	8020766 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8020760:	8013      	strh	r3, [r2, #0]
 8020762:	4432      	add	r2, r6
 8020764:	e7fa      	b.n	802075c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8020766:	3102      	adds	r1, #2
 8020768:	3801      	subs	r0, #1
 802076a:	07c2      	lsls	r2, r0, #31
 802076c:	d50b      	bpl.n	8020786 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 802076e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8020772:	3a01      	subs	r2, #1
 8020774:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8020778:	0066      	lsls	r6, r4, #1
 802077a:	42aa      	cmp	r2, r5
 802077c:	d202      	bcs.n	8020784 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 802077e:	8013      	strh	r3, [r2, #0]
 8020780:	4432      	add	r2, r6
 8020782:	e7fa      	b.n	802077a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8020784:	3801      	subs	r0, #1
 8020786:	b178      	cbz	r0, 80207a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020788:	1040      	asrs	r0, r0, #1
 802078a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 802078e:	0080      	lsls	r0, r0, #2
 8020790:	0064      	lsls	r4, r4, #1
 8020792:	42a9      	cmp	r1, r5
 8020794:	d208      	bcs.n	80207a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8020796:	180e      	adds	r6, r1, r0
 8020798:	460a      	mov	r2, r1
 802079a:	42b2      	cmp	r2, r6
 802079c:	d202      	bcs.n	80207a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 802079e:	f842 3b04 	str.w	r3, [r2], #4
 80207a2:	e7fa      	b.n	802079a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80207a4:	4421      	add	r1, r4
 80207a6:	e7f4      	b.n	8020792 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80207a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80207ac:	00fff800 	.word	0x00fff800

080207b0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80207b0:	2200      	movs	r2, #0
 80207b2:	4912      	ldr	r1, [pc, #72]	; (80207fc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 80207b4:	6042      	str	r2, [r0, #4]
 80207b6:	6001      	str	r1, [r0, #0]
 80207b8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80207bc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80207c0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80207c4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80207c8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80207cc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80207d0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80207d4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80207d8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80207dc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80207e0:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80207e4:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80207e8:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80207ec:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80207f0:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 80207f4:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80207f8:	4770      	bx	lr
 80207fa:	bf00      	nop
 80207fc:	08032194 	.word	0x08032194

08020800 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8020800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020804:	460d      	mov	r5, r1
 8020806:	b08d      	sub	sp, #52	; 0x34
 8020808:	4604      	mov	r4, r0
 802080a:	6808      	ldr	r0, [r1, #0]
 802080c:	6849      	ldr	r1, [r1, #4]
 802080e:	4699      	mov	r9, r3
 8020810:	ab08      	add	r3, sp, #32
 8020812:	c303      	stmia	r3!, {r0, r1}
 8020814:	6810      	ldr	r0, [r2, #0]
 8020816:	6851      	ldr	r1, [r2, #4]
 8020818:	ab0a      	add	r3, sp, #40	; 0x28
 802081a:	c303      	stmia	r3!, {r0, r1}
 802081c:	a808      	add	r0, sp, #32
 802081e:	f7f7 ff0b 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020822:	4629      	mov	r1, r5
 8020824:	a80a      	add	r0, sp, #40	; 0x28
 8020826:	f7f7 ff4b 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802082a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802082e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8020832:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8020836:	4d63      	ldr	r5, [pc, #396]	; (80209c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8020838:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 802083c:	6828      	ldr	r0, [r5, #0]
 802083e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8020842:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020846:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802084a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 802084e:	440a      	add	r2, r1
 8020850:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8020854:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8020858:	4413      	add	r3, r2
 802085a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 802085e:	6803      	ldr	r3, [r0, #0]
 8020860:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020862:	4798      	blx	r3
 8020864:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8020868:	d119      	bne.n	802089e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 802086a:	f010 0f20 	tst.w	r0, #32
 802086e:	6828      	ldr	r0, [r5, #0]
 8020870:	d018      	beq.n	80208a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8020872:	2500      	movs	r5, #0
 8020874:	6801      	ldr	r1, [r0, #0]
 8020876:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802087a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 802087e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8020882:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8020886:	9502      	str	r5, [sp, #8]
 8020888:	b2b6      	uxth	r6, r6
 802088a:	fa1f f588 	uxth.w	r5, r8
 802088e:	9601      	str	r6, [sp, #4]
 8020890:	9500      	str	r5, [sp, #0]
 8020892:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8020894:	4621      	mov	r1, r4
 8020896:	47a8      	blx	r5
 8020898:	b00d      	add	sp, #52	; 0x34
 802089a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802089e:	f010 0f40 	tst.w	r0, #64	; 0x40
 80208a2:	e7e4      	b.n	802086e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80208a4:	6803      	ldr	r3, [r0, #0]
 80208a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80208a8:	4798      	blx	r3
 80208aa:	4947      	ldr	r1, [pc, #284]	; (80209c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80208ac:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80208b0:	880b      	ldrh	r3, [r1, #0]
 80208b2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80208b6:	fb03 5202 	mla	r2, r3, r2, r5
 80208ba:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80208be:	4373      	muls	r3, r6
 80208c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80208c4:	9307      	str	r3, [sp, #28]
 80208c6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80208ca:	9306      	str	r3, [sp, #24]
 80208cc:	468a      	mov	sl, r1
 80208ce:	9b07      	ldr	r3, [sp, #28]
 80208d0:	4298      	cmp	r0, r3
 80208d2:	d270      	bcs.n	80209b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80208d4:	9b06      	ldr	r3, [sp, #24]
 80208d6:	4621      	mov	r1, r4
 80208d8:	eb00 0b03 	add.w	fp, r0, r3
 80208dc:	4558      	cmp	r0, fp
 80208de:	d25d      	bcs.n	802099c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80208e0:	f851 4b04 	ldr.w	r4, [r1], #4
 80208e4:	0e23      	lsrs	r3, r4, #24
 80208e6:	d014      	beq.n	8020912 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80208e8:	2bff      	cmp	r3, #255	; 0xff
 80208ea:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80208ee:	d112      	bne.n	8020916 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80208f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80208f4:	d10f      	bne.n	8020916 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80208f6:	0963      	lsrs	r3, r4, #5
 80208f8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80208fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020900:	f02c 0c07 	bic.w	ip, ip, #7
 8020904:	ea43 0c0c 	orr.w	ip, r3, ip
 8020908:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 802090c:	ea4c 0404 	orr.w	r4, ip, r4
 8020910:	8004      	strh	r4, [r0, #0]
 8020912:	3002      	adds	r0, #2
 8020914:	e7e2      	b.n	80208dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8020916:	fb09 f303 	mul.w	r3, r9, r3
 802091a:	8807      	ldrh	r7, [r0, #0]
 802091c:	1c5a      	adds	r2, r3, #1
 802091e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8020922:	1212      	asrs	r2, r2, #8
 8020924:	123e      	asrs	r6, r7, #8
 8020926:	b293      	uxth	r3, r2
 8020928:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 802092c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020930:	43d2      	mvns	r2, r2
 8020932:	b2d2      	uxtb	r2, r2
 8020934:	10fd      	asrs	r5, r7, #3
 8020936:	fb1e fe03 	smulbb	lr, lr, r3
 802093a:	00ff      	lsls	r7, r7, #3
 802093c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020940:	fb06 e602 	mla	r6, r6, r2, lr
 8020944:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020948:	b2ff      	uxtb	r7, r7
 802094a:	fa5f fc8c 	uxtb.w	ip, ip
 802094e:	b2e4      	uxtb	r4, r4
 8020950:	b2b6      	uxth	r6, r6
 8020952:	fb1c fc03 	smulbb	ip, ip, r3
 8020956:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 802095a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 802095e:	fb14 f403 	smulbb	r4, r4, r3
 8020962:	fb05 c502 	mla	r5, r5, r2, ip
 8020966:	f106 0e01 	add.w	lr, r6, #1
 802096a:	fb07 4702 	mla	r7, r7, r2, r4
 802096e:	b2ad      	uxth	r5, r5
 8020970:	b2bf      	uxth	r7, r7
 8020972:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8020976:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 802097a:	f105 0c01 	add.w	ip, r5, #1
 802097e:	1c7e      	adds	r6, r7, #1
 8020980:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8020984:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020988:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802098c:	096d      	lsrs	r5, r5, #5
 802098e:	ea46 060e 	orr.w	r6, r6, lr
 8020992:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020996:	432e      	orrs	r6, r5
 8020998:	8006      	strh	r6, [r0, #0]
 802099a:	e7ba      	b.n	8020912 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 802099c:	f8ba 3000 	ldrh.w	r3, [sl]
 80209a0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80209a4:	eba3 0308 	sub.w	r3, r3, r8
 80209a8:	eba4 0408 	sub.w	r4, r4, r8
 80209ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80209b0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80209b4:	e78b      	b.n	80208ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80209b6:	4b03      	ldr	r3, [pc, #12]	; (80209c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80209b8:	6818      	ldr	r0, [r3, #0]
 80209ba:	6803      	ldr	r3, [r0, #0]
 80209bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80209be:	4798      	blx	r3
 80209c0:	e76a      	b.n	8020898 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80209c2:	bf00      	nop
 80209c4:	2001383c 	.word	0x2001383c
 80209c8:	20013836 	.word	0x20013836

080209cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80209cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80209d0:	460c      	mov	r4, r1
 80209d2:	b085      	sub	sp, #20
 80209d4:	6810      	ldr	r0, [r2, #0]
 80209d6:	6851      	ldr	r1, [r2, #4]
 80209d8:	466d      	mov	r5, sp
 80209da:	c503      	stmia	r5!, {r0, r1}
 80209dc:	6818      	ldr	r0, [r3, #0]
 80209de:	6859      	ldr	r1, [r3, #4]
 80209e0:	4616      	mov	r6, r2
 80209e2:	c503      	stmia	r5!, {r0, r1}
 80209e4:	4668      	mov	r0, sp
 80209e6:	f7f7 fe27 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80209ea:	4631      	mov	r1, r6
 80209ec:	a802      	add	r0, sp, #8
 80209ee:	f7f7 fe67 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80209f2:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80209f6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80209fa:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80209fe:	4d28      	ldr	r5, [pc, #160]	; (8020aa0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8020a00:	4e28      	ldr	r6, [pc, #160]	; (8020aa4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8020a02:	6828      	ldr	r0, [r5, #0]
 8020a04:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8020a08:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8020a0c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020a10:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8020a14:	f8bd 1000 	ldrh.w	r1, [sp]
 8020a18:	440a      	add	r2, r1
 8020a1a:	f8ad 2008 	strh.w	r2, [sp, #8]
 8020a1e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8020a22:	4413      	add	r3, r2
 8020a24:	f8ad 300a 	strh.w	r3, [sp, #10]
 8020a28:	6803      	ldr	r3, [r0, #0]
 8020a2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020a2c:	4798      	blx	r3
 8020a2e:	8833      	ldrh	r3, [r6, #0]
 8020a30:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8020a34:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8020a38:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8020aa8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8020a3c:	fb03 1202 	mla	r2, r3, r2, r1
 8020a40:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a44:	fb08 f303 	mul.w	r3, r8, r3
 8020a48:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020a4c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8020a50:	4298      	cmp	r0, r3
 8020a52:	d21d      	bcs.n	8020a90 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8020a54:	eb00 080c 	add.w	r8, r0, ip
 8020a58:	4540      	cmp	r0, r8
 8020a5a:	d20f      	bcs.n	8020a7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8020a5c:	f854 1b04 	ldr.w	r1, [r4], #4
 8020a60:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8020a64:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8020a68:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020a6c:	ea42 0209 	orr.w	r2, r2, r9
 8020a70:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020a74:	430a      	orrs	r2, r1
 8020a76:	f820 2b02 	strh.w	r2, [r0], #2
 8020a7a:	e7ed      	b.n	8020a58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8020a7c:	8832      	ldrh	r2, [r6, #0]
 8020a7e:	1bd2      	subs	r2, r2, r7
 8020a80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020a84:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8020a88:	1bd2      	subs	r2, r2, r7
 8020a8a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8020a8e:	e7df      	b.n	8020a50 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8020a90:	6828      	ldr	r0, [r5, #0]
 8020a92:	6803      	ldr	r3, [r0, #0]
 8020a94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020a96:	4798      	blx	r3
 8020a98:	b005      	add	sp, #20
 8020a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020a9e:	bf00      	nop
 8020aa0:	2001383c 	.word	0x2001383c
 8020aa4:	20013836 	.word	0x20013836
 8020aa8:	fffff800 	.word	0xfffff800

08020aac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8020aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020ab0:	460e      	mov	r6, r1
 8020ab2:	b08e      	sub	sp, #56	; 0x38
 8020ab4:	4604      	mov	r4, r0
 8020ab6:	6808      	ldr	r0, [r1, #0]
 8020ab8:	6849      	ldr	r1, [r1, #4]
 8020aba:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8020c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8020abe:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8020c98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8020ac2:	461d      	mov	r5, r3
 8020ac4:	ab0a      	add	r3, sp, #40	; 0x28
 8020ac6:	c303      	stmia	r3!, {r0, r1}
 8020ac8:	6810      	ldr	r0, [r2, #0]
 8020aca:	6851      	ldr	r1, [r2, #4]
 8020acc:	ab0c      	add	r3, sp, #48	; 0x30
 8020ace:	c303      	stmia	r3!, {r0, r1}
 8020ad0:	a80a      	add	r0, sp, #40	; 0x28
 8020ad2:	f7f7 fdb1 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020ad6:	4631      	mov	r1, r6
 8020ad8:	a80c      	add	r0, sp, #48	; 0x30
 8020ada:	f7f7 fdf1 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ade:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8020ae2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8020ae6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020aea:	f8d8 0000 	ldr.w	r0, [r8]
 8020aee:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8020af2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8020af6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020afa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020afe:	440c      	add	r4, r1
 8020b00:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8020b04:	440a      	add	r2, r1
 8020b06:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8020b0a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8020b0e:	4413      	add	r3, r2
 8020b10:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8020b14:	6803      	ldr	r3, [r0, #0]
 8020b16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020b18:	4798      	blx	r3
 8020b1a:	2dff      	cmp	r5, #255	; 0xff
 8020b1c:	d124      	bne.n	8020b68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8020b1e:	f010 0f01 	tst.w	r0, #1
 8020b22:	f8d8 0000 	ldr.w	r0, [r8]
 8020b26:	d022      	beq.n	8020b6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8020b28:	2100      	movs	r1, #0
 8020b2a:	f8d0 c000 	ldr.w	ip, [r0]
 8020b2e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8020b32:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8020b36:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8020b3a:	f04f 0e01 	mov.w	lr, #1
 8020b3e:	f8cd e018 	str.w	lr, [sp, #24]
 8020b42:	f8b9 e000 	ldrh.w	lr, [r9]
 8020b46:	9503      	str	r5, [sp, #12]
 8020b48:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8020b4c:	b2b6      	uxth	r6, r6
 8020b4e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8020b52:	9102      	str	r1, [sp, #8]
 8020b54:	b2bf      	uxth	r7, r7
 8020b56:	9601      	str	r6, [sp, #4]
 8020b58:	9700      	str	r7, [sp, #0]
 8020b5a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8020b5e:	4621      	mov	r1, r4
 8020b60:	47a8      	blx	r5
 8020b62:	b00e      	add	sp, #56	; 0x38
 8020b64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020b68:	f010 0f04 	tst.w	r0, #4
 8020b6c:	e7d9      	b.n	8020b22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8020b6e:	6803      	ldr	r3, [r0, #0]
 8020b70:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020b72:	4798      	blx	r3
 8020b74:	f8b9 3000 	ldrh.w	r3, [r9]
 8020b78:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8020b7c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8020b80:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8020b84:	fb03 1202 	mla	r2, r3, r2, r1
 8020b88:	ebac 0c07 	sub.w	ip, ip, r7
 8020b8c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020b90:	435e      	muls	r6, r3
 8020b92:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8020b96:	2dff      	cmp	r5, #255	; 0xff
 8020b98:	eba3 0707 	sub.w	r7, r3, r7
 8020b9c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8020ba0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020ba4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8020ba8:	d049      	beq.n	8020c3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8020baa:	43eb      	mvns	r3, r5
 8020bac:	fa1f f985 	uxth.w	r9, r5
 8020bb0:	b2db      	uxtb	r3, r3
 8020bb2:	42b0      	cmp	r0, r6
 8020bb4:	d266      	bcs.n	8020c84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020bb6:	eb00 0a0e 	add.w	sl, r0, lr
 8020bba:	4550      	cmp	r0, sl
 8020bbc:	4621      	mov	r1, r4
 8020bbe:	f104 0403 	add.w	r4, r4, #3
 8020bc2:	d25b      	bcs.n	8020c7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8020bc4:	8802      	ldrh	r2, [r0, #0]
 8020bc6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020bca:	ea4f 2822 	mov.w	r8, r2, asr #8
 8020bce:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8020bd2:	fb11 f109 	smulbb	r1, r1, r9
 8020bd6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8020bda:	10d5      	asrs	r5, r2, #3
 8020bdc:	fb08 1803 	mla	r8, r8, r3, r1
 8020be0:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8020be4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020be8:	fb11 f109 	smulbb	r1, r1, r9
 8020bec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8020bf0:	fb05 1503 	mla	r5, r5, r3, r1
 8020bf4:	00d2      	lsls	r2, r2, #3
 8020bf6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020bfa:	b2d2      	uxtb	r2, r2
 8020bfc:	fb11 f109 	smulbb	r1, r1, r9
 8020c00:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8020c04:	fa1f f888 	uxth.w	r8, r8
 8020c08:	fb02 1203 	mla	r2, r2, r3, r1
 8020c0c:	b292      	uxth	r2, r2
 8020c0e:	f108 0101 	add.w	r1, r8, #1
 8020c12:	b2ad      	uxth	r5, r5
 8020c14:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8020c18:	1c51      	adds	r1, r2, #1
 8020c1a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020c1e:	1c69      	adds	r1, r5, #1
 8020c20:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8020c24:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8020c28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c2c:	096d      	lsrs	r5, r5, #5
 8020c2e:	ea42 0208 	orr.w	r2, r2, r8
 8020c32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020c36:	432a      	orrs	r2, r5
 8020c38:	f820 2b02 	strh.w	r2, [r0], #2
 8020c3c:	e7bd      	b.n	8020bba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8020c3e:	4a14      	ldr	r2, [pc, #80]	; (8020c90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8020c40:	42b0      	cmp	r0, r6
 8020c42:	d21f      	bcs.n	8020c84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8020c44:	eb00 050e 	add.w	r5, r0, lr
 8020c48:	42a8      	cmp	r0, r5
 8020c4a:	4621      	mov	r1, r4
 8020c4c:	f104 0403 	add.w	r4, r4, #3
 8020c50:	d210      	bcs.n	8020c74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8020c52:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8020c56:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8020c5a:	00db      	lsls	r3, r3, #3
 8020c5c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8020c60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c64:	430b      	orrs	r3, r1
 8020c66:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8020c6a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8020c6e:	f820 3b02 	strh.w	r3, [r0], #2
 8020c72:	e7e9      	b.n	8020c48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8020c74:	4438      	add	r0, r7
 8020c76:	eb01 040c 	add.w	r4, r1, ip
 8020c7a:	e7e1      	b.n	8020c40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8020c7c:	4438      	add	r0, r7
 8020c7e:	eb01 040c 	add.w	r4, r1, ip
 8020c82:	e796      	b.n	8020bb2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8020c84:	4b03      	ldr	r3, [pc, #12]	; (8020c94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8020c86:	6818      	ldr	r0, [r3, #0]
 8020c88:	6803      	ldr	r3, [r0, #0]
 8020c8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020c8c:	4798      	blx	r3
 8020c8e:	e768      	b.n	8020b62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8020c90:	fffff800 	.word	0xfffff800
 8020c94:	2001383c 	.word	0x2001383c
 8020c98:	20013836 	.word	0x20013836

08020c9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8020c9c:	b4f0      	push	{r4, r5, r6, r7}
 8020c9e:	4616      	mov	r6, r2
 8020ca0:	2e01      	cmp	r6, #1
 8020ca2:	461c      	mov	r4, r3
 8020ca4:	460d      	mov	r5, r1
 8020ca6:	9a04      	ldr	r2, [sp, #16]
 8020ca8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8020cac:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8020cb0:	d012      	beq.n	8020cd8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8020cb2:	d303      	bcc.n	8020cbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8020cb4:	2e02      	cmp	r6, #2
 8020cb6:	d00a      	beq.n	8020cce <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8020cb8:	bcf0      	pop	{r4, r5, r6, r7}
 8020cba:	4770      	bx	lr
 8020cbc:	6805      	ldr	r5, [r0, #0]
 8020cbe:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8020cc2:	68ed      	ldr	r5, [r5, #12]
 8020cc4:	4613      	mov	r3, r2
 8020cc6:	46ac      	mov	ip, r5
 8020cc8:	4622      	mov	r2, r4
 8020cca:	bcf0      	pop	{r4, r5, r6, r7}
 8020ccc:	4760      	bx	ip
 8020cce:	4621      	mov	r1, r4
 8020cd0:	4628      	mov	r0, r5
 8020cd2:	bcf0      	pop	{r4, r5, r6, r7}
 8020cd4:	f7ff bd94 	b.w	8020800 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8020cd8:	4621      	mov	r1, r4
 8020cda:	4628      	mov	r0, r5
 8020cdc:	bcf0      	pop	{r4, r5, r6, r7}
 8020cde:	f7ff bee5 	b.w	8020aac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08020ce4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8020ce4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ce8:	4681      	mov	r9, r0
 8020cea:	b093      	sub	sp, #76	; 0x4c
 8020cec:	6810      	ldr	r0, [r2, #0]
 8020cee:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8020cf2:	4f6d      	ldr	r7, [pc, #436]	; (8020ea8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8020cf4:	4688      	mov	r8, r1
 8020cf6:	6851      	ldr	r1, [r2, #4]
 8020cf8:	ac0e      	add	r4, sp, #56	; 0x38
 8020cfa:	c403      	stmia	r4!, {r0, r1}
 8020cfc:	6818      	ldr	r0, [r3, #0]
 8020cfe:	6859      	ldr	r1, [r3, #4]
 8020d00:	ac10      	add	r4, sp, #64	; 0x40
 8020d02:	4616      	mov	r6, r2
 8020d04:	c403      	stmia	r4!, {r0, r1}
 8020d06:	a80e      	add	r0, sp, #56	; 0x38
 8020d08:	f7f7 fc96 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020d0c:	4631      	mov	r1, r6
 8020d0e:	a810      	add	r0, sp, #64	; 0x40
 8020d10:	f7f7 fcd6 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020d14:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8020d18:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8020d1c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8020d20:	4e62      	ldr	r6, [pc, #392]	; (8020eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020d22:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8020d26:	6830      	ldr	r0, [r6, #0]
 8020d28:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8020d2c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8020d30:	4489      	add	r9, r1
 8020d32:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8020d36:	440a      	add	r2, r1
 8020d38:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8020d3c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8020d40:	4413      	add	r3, r2
 8020d42:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8020d46:	6803      	ldr	r3, [r0, #0]
 8020d48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8020d4a:	4798      	blx	r3
 8020d4c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8020d50:	6830      	ldr	r0, [r6, #0]
 8020d52:	d01d      	beq.n	8020d90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8020d54:	2200      	movs	r2, #0
 8020d56:	6801      	ldr	r1, [r0, #0]
 8020d58:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8020d5c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8020d60:	220b      	movs	r2, #11
 8020d62:	9207      	str	r2, [sp, #28]
 8020d64:	883a      	ldrh	r2, [r7, #0]
 8020d66:	9206      	str	r2, [sp, #24]
 8020d68:	2201      	movs	r2, #1
 8020d6a:	e9cd a204 	strd	sl, r2, [sp, #16]
 8020d6e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8020d72:	9203      	str	r2, [sp, #12]
 8020d74:	b2a4      	uxth	r4, r4
 8020d76:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8020d7a:	9200      	str	r2, [sp, #0]
 8020d7c:	b2ad      	uxth	r5, r5
 8020d7e:	9502      	str	r5, [sp, #8]
 8020d80:	9401      	str	r4, [sp, #4]
 8020d82:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8020d84:	4642      	mov	r2, r8
 8020d86:	4649      	mov	r1, r9
 8020d88:	47a0      	blx	r4
 8020d8a:	b013      	add	sp, #76	; 0x4c
 8020d8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d90:	6803      	ldr	r3, [r0, #0]
 8020d92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020d94:	4798      	blx	r3
 8020d96:	883b      	ldrh	r3, [r7, #0]
 8020d98:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8020d9c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8020da0:	fb03 1202 	mla	r2, r3, r2, r1
 8020da4:	435d      	muls	r5, r3
 8020da6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8020daa:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8020dae:	920c      	str	r2, [sp, #48]	; 0x30
 8020db0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8020db4:	1b12      	subs	r2, r2, r4
 8020db6:	920d      	str	r2, [sp, #52]	; 0x34
 8020db8:	0062      	lsls	r2, r4, #1
 8020dba:	1b1c      	subs	r4, r3, r4
 8020dbc:	0063      	lsls	r3, r4, #1
 8020dbe:	920a      	str	r2, [sp, #40]	; 0x28
 8020dc0:	930b      	str	r3, [sp, #44]	; 0x2c
 8020dc2:	f04f 0e04 	mov.w	lr, #4
 8020dc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020dc8:	4298      	cmp	r0, r3
 8020dca:	d266      	bcs.n	8020e9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8020dcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020dce:	eb00 0b03 	add.w	fp, r0, r3
 8020dd2:	4558      	cmp	r0, fp
 8020dd4:	d25c      	bcs.n	8020e90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8020dd6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8020dda:	fb1e e303 	smlabb	r3, lr, r3, lr
 8020dde:	f858 2003 	ldr.w	r2, [r8, r3]
 8020de2:	0e11      	lsrs	r1, r2, #24
 8020de4:	d012      	beq.n	8020e0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020de6:	29ff      	cmp	r1, #255	; 0xff
 8020de8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8020dec:	d110      	bne.n	8020e10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020dee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8020df2:	d10d      	bne.n	8020e10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8020df4:	0953      	lsrs	r3, r2, #5
 8020df6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8020dfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020dfe:	f027 0707 	bic.w	r7, r7, #7
 8020e02:	431f      	orrs	r7, r3
 8020e04:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020e08:	433a      	orrs	r2, r7
 8020e0a:	8002      	strh	r2, [r0, #0]
 8020e0c:	3002      	adds	r0, #2
 8020e0e:	e7e0      	b.n	8020dd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8020e10:	fb0a f101 	mul.w	r1, sl, r1
 8020e14:	8806      	ldrh	r6, [r0, #0]
 8020e16:	1c4b      	adds	r3, r1, #1
 8020e18:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8020e1c:	1235      	asrs	r5, r6, #8
 8020e1e:	10f4      	asrs	r4, r6, #3
 8020e20:	121b      	asrs	r3, r3, #8
 8020e22:	00f6      	lsls	r6, r6, #3
 8020e24:	b299      	uxth	r1, r3
 8020e26:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8020e2a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020e2e:	b2f6      	uxtb	r6, r6
 8020e30:	43db      	mvns	r3, r3
 8020e32:	b2d2      	uxtb	r2, r2
 8020e34:	b2db      	uxtb	r3, r3
 8020e36:	fb1c fc01 	smulbb	ip, ip, r1
 8020e3a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8020e3e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8020e42:	fb12 f201 	smulbb	r2, r2, r1
 8020e46:	fb05 c503 	mla	r5, r5, r3, ip
 8020e4a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8020e4e:	b2ff      	uxtb	r7, r7
 8020e50:	fb06 2203 	mla	r2, r6, r3, r2
 8020e54:	b2ad      	uxth	r5, r5
 8020e56:	fb17 f701 	smulbb	r7, r7, r1
 8020e5a:	b292      	uxth	r2, r2
 8020e5c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8020e60:	fb04 7403 	mla	r4, r4, r3, r7
 8020e64:	f105 0c01 	add.w	ip, r5, #1
 8020e68:	1c57      	adds	r7, r2, #1
 8020e6a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020e6e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8020e72:	b2a4      	uxth	r4, r4
 8020e74:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e78:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020e7c:	433d      	orrs	r5, r7
 8020e7e:	1c67      	adds	r7, r4, #1
 8020e80:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8020e84:	0964      	lsrs	r4, r4, #5
 8020e86:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020e8a:	4325      	orrs	r5, r4
 8020e8c:	8005      	strh	r5, [r0, #0]
 8020e8e:	e7bd      	b.n	8020e0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8020e90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020e92:	4418      	add	r0, r3
 8020e94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020e96:	4499      	add	r9, r3
 8020e98:	e795      	b.n	8020dc6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8020e9a:	4b04      	ldr	r3, [pc, #16]	; (8020eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8020e9c:	6818      	ldr	r0, [r3, #0]
 8020e9e:	6803      	ldr	r3, [r0, #0]
 8020ea0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020ea2:	4798      	blx	r3
 8020ea4:	e771      	b.n	8020d8a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8020ea6:	bf00      	nop
 8020ea8:	20013836 	.word	0x20013836
 8020eac:	2001383c 	.word	0x2001383c

08020eb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8020eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020eb4:	b087      	sub	sp, #28
 8020eb6:	4680      	mov	r8, r0
 8020eb8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8020ebc:	460d      	mov	r5, r1
 8020ebe:	4614      	mov	r4, r2
 8020ec0:	2e00      	cmp	r6, #0
 8020ec2:	f000 80b9 	beq.w	8021038 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8020ec6:	6810      	ldr	r0, [r2, #0]
 8020ec8:	6851      	ldr	r1, [r2, #4]
 8020eca:	af02      	add	r7, sp, #8
 8020ecc:	c703      	stmia	r7!, {r0, r1}
 8020ece:	6818      	ldr	r0, [r3, #0]
 8020ed0:	6859      	ldr	r1, [r3, #4]
 8020ed2:	af04      	add	r7, sp, #16
 8020ed4:	c703      	stmia	r7!, {r0, r1}
 8020ed6:	a802      	add	r0, sp, #8
 8020ed8:	f7f7 fbae 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020edc:	4621      	mov	r1, r4
 8020ede:	a804      	add	r0, sp, #16
 8020ee0:	f7f7 fbee 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020ee4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8020ee8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8020eec:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8020ef0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8020ef4:	fb14 2103 	smlabb	r1, r4, r3, r2
 8020ef8:	eb08 0401 	add.w	r4, r8, r1
 8020efc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8020f00:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8020f04:	440a      	add	r2, r1
 8020f06:	f8ad 2010 	strh.w	r2, [sp, #16]
 8020f0a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8020f0e:	4413      	add	r3, r2
 8020f10:	f8ad 3012 	strh.w	r3, [sp, #18]
 8020f14:	4b4a      	ldr	r3, [pc, #296]	; (8021040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8020f16:	6818      	ldr	r0, [r3, #0]
 8020f18:	6803      	ldr	r3, [r0, #0]
 8020f1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8020f1c:	4798      	blx	r3
 8020f1e:	4b49      	ldr	r3, [pc, #292]	; (8021044 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8020f20:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8020f24:	881a      	ldrh	r2, [r3, #0]
 8020f26:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8020f2a:	2eff      	cmp	r6, #255	; 0xff
 8020f2c:	fb02 c101 	mla	r1, r2, r1, ip
 8020f30:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8020f34:	fb02 f207 	mul.w	r2, r2, r7
 8020f38:	f105 0104 	add.w	r1, r5, #4
 8020f3c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8020f40:	461d      	mov	r5, r3
 8020f42:	d05a      	beq.n	8020ffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8020f44:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8020f48:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020f4c:	b2b6      	uxth	r6, r6
 8020f4e:	fa1f fe8e 	uxth.w	lr, lr
 8020f52:	9301      	str	r3, [sp, #4]
 8020f54:	4282      	cmp	r2, r0
 8020f56:	d96a      	bls.n	802102e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8020f58:	eb00 0b0a 	add.w	fp, r0, sl
 8020f5c:	4583      	cmp	fp, r0
 8020f5e:	d940      	bls.n	8020fe2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8020f60:	f814 3b01 	ldrb.w	r3, [r4], #1
 8020f64:	8805      	ldrh	r5, [r0, #0]
 8020f66:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8020f6a:	122f      	asrs	r7, r5, #8
 8020f6c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8020f70:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020f74:	fb17 f70e 	smulbb	r7, r7, lr
 8020f78:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8020f7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020f80:	00ed      	lsls	r5, r5, #3
 8020f82:	fb0c 7c06 	mla	ip, ip, r6, r7
 8020f86:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020f8a:	10df      	asrs	r7, r3, #3
 8020f8c:	b2ed      	uxtb	r5, r5
 8020f8e:	00db      	lsls	r3, r3, #3
 8020f90:	fa1f fc8c 	uxth.w	ip, ip
 8020f94:	fb19 f90e 	smulbb	r9, r9, lr
 8020f98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020f9c:	b2db      	uxtb	r3, r3
 8020f9e:	fb15 f50e 	smulbb	r5, r5, lr
 8020fa2:	fb07 9706 	mla	r7, r7, r6, r9
 8020fa6:	fb03 5306 	mla	r3, r3, r6, r5
 8020faa:	f10c 0901 	add.w	r9, ip, #1
 8020fae:	b29b      	uxth	r3, r3
 8020fb0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020fb4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8020fb8:	f103 0c01 	add.w	ip, r3, #1
 8020fbc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8020fc0:	b2bf      	uxth	r7, r7
 8020fc2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020fc6:	ea4c 0c09 	orr.w	ip, ip, r9
 8020fca:	f107 0901 	add.w	r9, r7, #1
 8020fce:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020fd2:	097f      	lsrs	r7, r7, #5
 8020fd4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020fd8:	ea4c 0c07 	orr.w	ip, ip, r7
 8020fdc:	f820 cb02 	strh.w	ip, [r0], #2
 8020fe0:	e7bc      	b.n	8020f5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8020fe2:	9b01      	ldr	r3, [sp, #4]
 8020fe4:	881b      	ldrh	r3, [r3, #0]
 8020fe6:	eba3 0308 	sub.w	r3, r3, r8
 8020fea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020fee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8020ff2:	eba3 0308 	sub.w	r3, r3, r8
 8020ff6:	441c      	add	r4, r3
 8020ff8:	e7ac      	b.n	8020f54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8020ffa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020ffe:	4282      	cmp	r2, r0
 8021000:	d915      	bls.n	802102e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8021002:	eb00 060a 	add.w	r6, r0, sl
 8021006:	4286      	cmp	r6, r0
 8021008:	d906      	bls.n	8021018 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 802100a:	f814 3b01 	ldrb.w	r3, [r4], #1
 802100e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8021012:	f820 3b02 	strh.w	r3, [r0], #2
 8021016:	e7f6      	b.n	8021006 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8021018:	882b      	ldrh	r3, [r5, #0]
 802101a:	eba3 0308 	sub.w	r3, r3, r8
 802101e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021022:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8021026:	eba3 0308 	sub.w	r3, r3, r8
 802102a:	441c      	add	r4, r3
 802102c:	e7e7      	b.n	8020ffe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 802102e:	4b04      	ldr	r3, [pc, #16]	; (8021040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8021030:	6818      	ldr	r0, [r3, #0]
 8021032:	6803      	ldr	r3, [r0, #0]
 8021034:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021036:	4798      	blx	r3
 8021038:	b007      	add	sp, #28
 802103a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802103e:	bf00      	nop
 8021040:	2001383c 	.word	0x2001383c
 8021044:	20013836 	.word	0x20013836

08021048 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802104c:	b091      	sub	sp, #68	; 0x44
 802104e:	4680      	mov	r8, r0
 8021050:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8021054:	460f      	mov	r7, r1
 8021056:	4614      	mov	r4, r2
 8021058:	2d00      	cmp	r5, #0
 802105a:	d051      	beq.n	8021100 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802105c:	6810      	ldr	r0, [r2, #0]
 802105e:	6851      	ldr	r1, [r2, #4]
 8021060:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8021264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8021064:	ae0c      	add	r6, sp, #48	; 0x30
 8021066:	c603      	stmia	r6!, {r0, r1}
 8021068:	6818      	ldr	r0, [r3, #0]
 802106a:	6859      	ldr	r1, [r3, #4]
 802106c:	ae0e      	add	r6, sp, #56	; 0x38
 802106e:	c603      	stmia	r6!, {r0, r1}
 8021070:	a80c      	add	r0, sp, #48	; 0x30
 8021072:	f7f7 fae1 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021076:	4621      	mov	r1, r4
 8021078:	a80e      	add	r0, sp, #56	; 0x38
 802107a:	f7f7 fb21 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802107e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021082:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021086:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 802108a:	f8d9 0000 	ldr.w	r0, [r9]
 802108e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8021092:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8021096:	fb11 2103 	smlabb	r1, r1, r3, r2
 802109a:	eb08 0401 	add.w	r4, r8, r1
 802109e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80210a2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8021268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80210a6:	440a      	add	r2, r1
 80210a8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80210ac:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80210b0:	4413      	add	r3, r2
 80210b2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80210b6:	6803      	ldr	r3, [r0, #0]
 80210b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80210ba:	4798      	blx	r3
 80210bc:	f010 0f80 	tst.w	r0, #128	; 0x80
 80210c0:	f8d9 0000 	ldr.w	r0, [r9]
 80210c4:	d01f      	beq.n	8021106 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80210c6:	2200      	movs	r2, #0
 80210c8:	6801      	ldr	r1, [r0, #0]
 80210ca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80210ce:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80210d2:	220b      	movs	r2, #11
 80210d4:	9207      	str	r2, [sp, #28]
 80210d6:	f8b8 2000 	ldrh.w	r2, [r8]
 80210da:	9206      	str	r2, [sp, #24]
 80210dc:	2201      	movs	r2, #1
 80210de:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80210e2:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80210e6:	9203      	str	r2, [sp, #12]
 80210e8:	fa1f f28a 	uxth.w	r2, sl
 80210ec:	9202      	str	r2, [sp, #8]
 80210ee:	b2b6      	uxth	r6, r6
 80210f0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80210f4:	9200      	str	r2, [sp, #0]
 80210f6:	9601      	str	r6, [sp, #4]
 80210f8:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80210fa:	463a      	mov	r2, r7
 80210fc:	4621      	mov	r1, r4
 80210fe:	47a8      	blx	r5
 8021100:	b011      	add	sp, #68	; 0x44
 8021102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021106:	6803      	ldr	r3, [r0, #0]
 8021108:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802110a:	4798      	blx	r3
 802110c:	f8b8 2000 	ldrh.w	r2, [r8]
 8021110:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021114:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021118:	2dff      	cmp	r5, #255	; 0xff
 802111a:	fb02 1303 	mla	r3, r2, r3, r1
 802111e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021122:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8021126:	fb0a fa02 	mul.w	sl, sl, r2
 802112a:	d062      	beq.n	80211f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 802112c:	ea6f 0c05 	mvn.w	ip, r5
 8021130:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8021134:	930a      	str	r3, [sp, #40]	; 0x28
 8021136:	b2ad      	uxth	r5, r5
 8021138:	fa5f fc8c 	uxtb.w	ip, ip
 802113c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8021140:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021142:	4298      	cmp	r0, r3
 8021144:	f080 8085 	bcs.w	8021252 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021148:	eb00 0b09 	add.w	fp, r0, r9
 802114c:	4558      	cmp	r0, fp
 802114e:	d246      	bcs.n	80211de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8021150:	f814 eb01 	ldrb.w	lr, [r4], #1
 8021154:	2303      	movs	r3, #3
 8021156:	2204      	movs	r2, #4
 8021158:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 802115c:	eb07 0a0e 	add.w	sl, r7, lr
 8021160:	8803      	ldrh	r3, [r0, #0]
 8021162:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8021166:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802116a:	1219      	asrs	r1, r3, #8
 802116c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021170:	fb18 f805 	smulbb	r8, r8, r5
 8021174:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8021178:	10da      	asrs	r2, r3, #3
 802117a:	fb01 810c 	mla	r1, r1, ip, r8
 802117e:	00db      	lsls	r3, r3, #3
 8021180:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021184:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021188:	b2db      	uxtb	r3, r3
 802118a:	fb18 f805 	smulbb	r8, r8, r5
 802118e:	fb1e fe05 	smulbb	lr, lr, r5
 8021192:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8021196:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 802119a:	b289      	uxth	r1, r1
 802119c:	fb02 820c 	mla	r2, r2, ip, r8
 80211a0:	fb03 e30c 	mla	r3, r3, ip, lr
 80211a4:	b292      	uxth	r2, r2
 80211a6:	b29b      	uxth	r3, r3
 80211a8:	f101 0801 	add.w	r8, r1, #1
 80211ac:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80211b0:	f103 0e01 	add.w	lr, r3, #1
 80211b4:	f102 0801 	add.w	r8, r2, #1
 80211b8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80211bc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80211c0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80211c4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80211c8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80211cc:	ea4e 0101 	orr.w	r1, lr, r1
 80211d0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80211d4:	ea41 0108 	orr.w	r1, r1, r8
 80211d8:	f820 1b02 	strh.w	r1, [r0], #2
 80211dc:	e7b6      	b.n	802114c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80211de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211e0:	881b      	ldrh	r3, [r3, #0]
 80211e2:	1b9b      	subs	r3, r3, r6
 80211e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80211e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80211ec:	1b9b      	subs	r3, r3, r6
 80211ee:	441c      	add	r4, r3
 80211f0:	e7a6      	b.n	8021140 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80211f2:	491b      	ldr	r1, [pc, #108]	; (8021260 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80211f4:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80211f8:	2203      	movs	r2, #3
 80211fa:	2504      	movs	r5, #4
 80211fc:	4550      	cmp	r0, sl
 80211fe:	d228      	bcs.n	8021252 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8021200:	eb00 0c09 	add.w	ip, r0, r9
 8021204:	4560      	cmp	r0, ip
 8021206:	4623      	mov	r3, r4
 8021208:	d219      	bcs.n	802123e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 802120a:	f893 e000 	ldrb.w	lr, [r3]
 802120e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8021212:	eb07 0b0e 	add.w	fp, r7, lr
 8021216:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802121a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 802121e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021222:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021226:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 802122a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802122e:	ea43 030b 	orr.w	r3, r3, fp
 8021232:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8021236:	3401      	adds	r4, #1
 8021238:	f820 3b02 	strh.w	r3, [r0], #2
 802123c:	e7e2      	b.n	8021204 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 802123e:	f8b8 3000 	ldrh.w	r3, [r8]
 8021242:	1b9b      	subs	r3, r3, r6
 8021244:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021248:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802124c:	1b9b      	subs	r3, r3, r6
 802124e:	441c      	add	r4, r3
 8021250:	e7d4      	b.n	80211fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8021252:	4b04      	ldr	r3, [pc, #16]	; (8021264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8021254:	6818      	ldr	r0, [r3, #0]
 8021256:	6803      	ldr	r3, [r0, #0]
 8021258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802125a:	4798      	blx	r3
 802125c:	e750      	b.n	8021100 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 802125e:	bf00      	nop
 8021260:	fffff800 	.word	0xfffff800
 8021264:	2001383c 	.word	0x2001383c
 8021268:	20013836 	.word	0x20013836

0802126c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 802126c:	b4f0      	push	{r4, r5, r6, r7}
 802126e:	460c      	mov	r4, r1
 8021270:	4611      	mov	r1, r2
 8021272:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021276:	780f      	ldrb	r7, [r1, #0]
 8021278:	784e      	ldrb	r6, [r1, #1]
 802127a:	2f01      	cmp	r7, #1
 802127c:	461a      	mov	r2, r3
 802127e:	9b04      	ldr	r3, [sp, #16]
 8021280:	d036      	beq.n	80212f0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 8021282:	d31e      	bcc.n	80212c2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 8021284:	2f02      	cmp	r7, #2
 8021286:	d14a      	bne.n	802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 8021288:	2e03      	cmp	r6, #3
 802128a:	d848      	bhi.n	802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802128c:	e8df f006 	tbb	[pc, r6]
 8021290:	16140702 	.word	0x16140702
 8021294:	9504      	str	r5, [sp, #16]
 8021296:	4620      	mov	r0, r4
 8021298:	bcf0      	pop	{r4, r5, r6, r7}
 802129a:	f7ff be09 	b.w	8020eb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802129e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212a0:	2800      	cmp	r0, #0
 80212a2:	d03c      	beq.n	802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212a4:	6806      	ldr	r6, [r0, #0]
 80212a6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212aa:	68b5      	ldr	r5, [r6, #8]
 80212ac:	4613      	mov	r3, r2
 80212ae:	46ac      	mov	ip, r5
 80212b0:	460a      	mov	r2, r1
 80212b2:	4621      	mov	r1, r4
 80212b4:	bcf0      	pop	{r4, r5, r6, r7}
 80212b6:	4760      	bx	ip
 80212b8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212ba:	e7f1      	b.n	80212a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212bc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212c0:	e7ee      	b.n	80212a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 80212c2:	2e03      	cmp	r6, #3
 80212c4:	d82b      	bhi.n	802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212c6:	e8df f006 	tbb	[pc, r6]
 80212ca:	0702      	.short	0x0702
 80212cc:	100e      	.short	0x100e
 80212ce:	9504      	str	r5, [sp, #16]
 80212d0:	4620      	mov	r0, r4
 80212d2:	bcf0      	pop	{r4, r5, r6, r7}
 80212d4:	f7ff bd06 	b.w	8020ce4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80212d8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80212da:	b300      	cbz	r0, 802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212dc:	6806      	ldr	r6, [r0, #0]
 80212de:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80212e2:	68f5      	ldr	r5, [r6, #12]
 80212e4:	e7e2      	b.n	80212ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80212e6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 80212e8:	e7f7      	b.n	80212da <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80212ea:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 80212ee:	e7f4      	b.n	80212da <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 80212f0:	2e03      	cmp	r6, #3
 80212f2:	d814      	bhi.n	802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 80212f4:	e8df f006 	tbb	[pc, r6]
 80212f8:	100e0702 	.word	0x100e0702
 80212fc:	9504      	str	r5, [sp, #16]
 80212fe:	4620      	mov	r0, r4
 8021300:	bcf0      	pop	{r4, r5, r6, r7}
 8021302:	f7ff bea1 	b.w	8021048 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8021306:	6f80      	ldr	r0, [r0, #120]	; 0x78
 8021308:	b148      	cbz	r0, 802131e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 802130a:	6806      	ldr	r6, [r0, #0]
 802130c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8021310:	6935      	ldr	r5, [r6, #16]
 8021312:	e7cb      	b.n	80212ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8021314:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8021316:	e7f7      	b.n	8021308 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 8021318:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 802131c:	e7f4      	b.n	8021308 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 802131e:	bcf0      	pop	{r4, r5, r6, r7}
 8021320:	4770      	bx	lr
	...

08021324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8021324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021328:	4604      	mov	r4, r0
 802132a:	b087      	sub	sp, #28
 802132c:	6810      	ldr	r0, [r2, #0]
 802132e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8021332:	f8df 9238 	ldr.w	r9, [pc, #568]	; 802156c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8021336:	460e      	mov	r6, r1
 8021338:	6851      	ldr	r1, [r2, #4]
 802133a:	ad02      	add	r5, sp, #8
 802133c:	c503      	stmia	r5!, {r0, r1}
 802133e:	6818      	ldr	r0, [r3, #0]
 8021340:	6859      	ldr	r1, [r3, #4]
 8021342:	ad04      	add	r5, sp, #16
 8021344:	4617      	mov	r7, r2
 8021346:	c503      	stmia	r5!, {r0, r1}
 8021348:	a802      	add	r0, sp, #8
 802134a:	f7f7 f975 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802134e:	4639      	mov	r1, r7
 8021350:	a804      	add	r0, sp, #16
 8021352:	f7f7 f9b5 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021356:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802135a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802135e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8021362:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8021366:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802136a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802136e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021372:	440e      	add	r6, r1
 8021374:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8021378:	440a      	add	r2, r1
 802137a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802137e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8021382:	4413      	add	r3, r2
 8021384:	f8ad 3012 	strh.w	r3, [sp, #18]
 8021388:	4b77      	ldr	r3, [pc, #476]	; (8021568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802138a:	6818      	ldr	r0, [r3, #0]
 802138c:	6803      	ldr	r3, [r0, #0]
 802138e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021390:	4798      	blx	r3
 8021392:	f8b9 b000 	ldrh.w	fp, [r9]
 8021396:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802139a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802139e:	fb0b 2303 	mla	r3, fp, r3, r2
 80213a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80213a6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80213aa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80213ae:	fb05 f50b 	mul.w	r5, r5, fp
 80213b2:	9300      	str	r3, [sp, #0]
 80213b4:	d069      	beq.n	802148a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80213b6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80213ba:	4558      	cmp	r0, fp
 80213bc:	f080 80cc 	bcs.w	8021558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80213c0:	9b00      	ldr	r3, [sp, #0]
 80213c2:	18c3      	adds	r3, r0, r3
 80213c4:	9301      	str	r3, [sp, #4]
 80213c6:	4631      	mov	r1, r6
 80213c8:	9b01      	ldr	r3, [sp, #4]
 80213ca:	4298      	cmp	r0, r3
 80213cc:	d24f      	bcs.n	802146e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80213ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 80213d2:	2a00      	cmp	r2, #0
 80213d4:	d048      	beq.n	8021468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213d6:	fb0a f202 	mul.w	r2, sl, r2
 80213da:	1c53      	adds	r3, r2, #1
 80213dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80213e0:	121b      	asrs	r3, r3, #8
 80213e2:	d041      	beq.n	8021468 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80213e4:	8802      	ldrh	r2, [r0, #0]
 80213e6:	f8b4 c000 	ldrh.w	ip, [r4]
 80213ea:	b29e      	uxth	r6, r3
 80213ec:	1215      	asrs	r5, r2, #8
 80213ee:	43db      	mvns	r3, r3
 80213f0:	b2db      	uxtb	r3, r3
 80213f2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80213f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80213fa:	fb15 f503 	smulbb	r5, r5, r3
 80213fe:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8021402:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021406:	00d2      	lsls	r2, r2, #3
 8021408:	fb07 5706 	mla	r7, r7, r6, r5
 802140c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8021410:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021414:	b2d2      	uxtb	r2, r2
 8021416:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802141a:	b2bf      	uxth	r7, r7
 802141c:	fb1e fe03 	smulbb	lr, lr, r3
 8021420:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021424:	fa5f fc8c 	uxtb.w	ip, ip
 8021428:	fb12 f203 	smulbb	r2, r2, r3
 802142c:	fb05 e506 	mla	r5, r5, r6, lr
 8021430:	fb0c 2c06 	mla	ip, ip, r6, r2
 8021434:	f107 0e01 	add.w	lr, r7, #1
 8021438:	fa1f fc8c 	uxth.w	ip, ip
 802143c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8021440:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8021444:	f10c 0701 	add.w	r7, ip, #1
 8021448:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802144c:	b2ad      	uxth	r5, r5
 802144e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021452:	ea47 070e 	orr.w	r7, r7, lr
 8021456:	f105 0e01 	add.w	lr, r5, #1
 802145a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802145e:	096d      	lsrs	r5, r5, #5
 8021460:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021464:	432f      	orrs	r7, r5
 8021466:	8007      	strh	r7, [r0, #0]
 8021468:	3002      	adds	r0, #2
 802146a:	3402      	adds	r4, #2
 802146c:	e7ac      	b.n	80213c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802146e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021472:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021476:	eba3 0308 	sub.w	r3, r3, r8
 802147a:	eba6 0608 	sub.w	r6, r6, r8
 802147e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021482:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021486:	440e      	add	r6, r1
 8021488:	e797      	b.n	80213ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802148a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802148e:	42a8      	cmp	r0, r5
 8021490:	d262      	bcs.n	8021558 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8021492:	9b00      	ldr	r3, [sp, #0]
 8021494:	4631      	mov	r1, r6
 8021496:	eb00 0b03 	add.w	fp, r0, r3
 802149a:	4558      	cmp	r0, fp
 802149c:	d24e      	bcs.n	802153c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802149e:	f811 3b01 	ldrb.w	r3, [r1], #1
 80214a2:	b12b      	cbz	r3, 80214b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80214a4:	2bff      	cmp	r3, #255	; 0xff
 80214a6:	f8b4 e000 	ldrh.w	lr, [r4]
 80214aa:	d104      	bne.n	80214b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80214ac:	f8a0 e000 	strh.w	lr, [r0]
 80214b0:	3002      	adds	r0, #2
 80214b2:	3402      	adds	r4, #2
 80214b4:	e7f1      	b.n	802149a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80214b6:	8802      	ldrh	r2, [r0, #0]
 80214b8:	b29f      	uxth	r7, r3
 80214ba:	1216      	asrs	r6, r2, #8
 80214bc:	43db      	mvns	r3, r3
 80214be:	b2db      	uxtb	r3, r3
 80214c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80214c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80214c8:	fb16 f603 	smulbb	r6, r6, r3
 80214cc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80214d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80214d4:	00d2      	lsls	r2, r2, #3
 80214d6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80214da:	b2d2      	uxtb	r2, r2
 80214dc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80214e0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80214e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80214e8:	fb1a fa03 	smulbb	sl, sl, r3
 80214ec:	fa1f fc8c 	uxth.w	ip, ip
 80214f0:	fb12 f303 	smulbb	r3, r2, r3
 80214f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80214f8:	fa5f fe8e 	uxtb.w	lr, lr
 80214fc:	fb06 a607 	mla	r6, r6, r7, sl
 8021500:	f10c 0201 	add.w	r2, ip, #1
 8021504:	fb0e 3307 	mla	r3, lr, r7, r3
 8021508:	b2b6      	uxth	r6, r6
 802150a:	b29b      	uxth	r3, r3
 802150c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8021510:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8021514:	f106 0a01 	add.w	sl, r6, #1
 8021518:	f103 0c01 	add.w	ip, r3, #1
 802151c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8021520:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8021524:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021528:	0976      	lsrs	r6, r6, #5
 802152a:	ea4c 0c02 	orr.w	ip, ip, r2
 802152e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021532:	ea4c 0c06 	orr.w	ip, ip, r6
 8021536:	f8a0 c000 	strh.w	ip, [r0]
 802153a:	e7b9      	b.n	80214b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 802153c:	f8b9 3000 	ldrh.w	r3, [r9]
 8021540:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8021544:	eba3 0308 	sub.w	r3, r3, r8
 8021548:	eba6 0608 	sub.w	r6, r6, r8
 802154c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8021550:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021554:	440e      	add	r6, r1
 8021556:	e79a      	b.n	802148e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8021558:	4b03      	ldr	r3, [pc, #12]	; (8021568 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802155a:	6818      	ldr	r0, [r3, #0]
 802155c:	6803      	ldr	r3, [r0, #0]
 802155e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021560:	4798      	blx	r3
 8021562:	b007      	add	sp, #28
 8021564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021568:	2001383c 	.word	0x2001383c
 802156c:	20013836 	.word	0x20013836

08021570 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8021570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021574:	b089      	sub	sp, #36	; 0x24
 8021576:	4682      	mov	sl, r0
 8021578:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802157c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802157e:	460f      	mov	r7, r1
 8021580:	4691      	mov	r9, r2
 8021582:	4698      	mov	r8, r3
 8021584:	2e00      	cmp	r6, #0
 8021586:	d03d      	beq.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021588:	4608      	mov	r0, r1
 802158a:	f7fa fe59 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802158e:	4605      	mov	r5, r0
 8021590:	4638      	mov	r0, r7
 8021592:	f7fa fe89 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021596:	f8ad 000e 	strh.w	r0, [sp, #14]
 802159a:	4638      	mov	r0, r7
 802159c:	f8ad 9008 	strh.w	r9, [sp, #8]
 80215a0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80215a4:	f8ad 800a 	strh.w	r8, [sp, #10]
 80215a8:	f7fa ff36 	bl	801c418 <_ZNK8touchgfx6Bitmap7getDataEv>
 80215ac:	4605      	mov	r5, r0
 80215ae:	4638      	mov	r0, r7
 80215b0:	f7fa ff62 	bl	801c478 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80215b4:	4681      	mov	r9, r0
 80215b6:	4638      	mov	r0, r7
 80215b8:	f7fa ffb2 	bl	801c520 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80215bc:	280b      	cmp	r0, #11
 80215be:	d821      	bhi.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215c0:	e8df f000 	tbb	[pc, r0]
 80215c4:	2006aebe 	.word	0x2006aebe
 80215c8:	20202020 	.word	0x20202020
 80215cc:	b5202020 	.word	0xb5202020
 80215d0:	4bb0      	ldr	r3, [pc, #704]	; (8021894 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 80215d2:	6818      	ldr	r0, [r3, #0]
 80215d4:	6803      	ldr	r3, [r0, #0]
 80215d6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80215d8:	4798      	blx	r3
 80215da:	2eff      	cmp	r6, #255	; 0xff
 80215dc:	d101      	bne.n	80215e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 80215de:	0683      	lsls	r3, r0, #26
 80215e0:	d506      	bpl.n	80215f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 80215e2:	4633      	mov	r3, r6
 80215e4:	4622      	mov	r2, r4
 80215e6:	a902      	add	r1, sp, #8
 80215e8:	4628      	mov	r0, r5
 80215ea:	f7ff f909 	bl	8020800 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80215ee:	e009      	b.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 80215f0:	4638      	mov	r0, r7
 80215f2:	f7fa fed9 	bl	801c3a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80215f6:	b940      	cbnz	r0, 802160a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 80215f8:	4623      	mov	r3, r4
 80215fa:	aa02      	add	r2, sp, #8
 80215fc:	4629      	mov	r1, r5
 80215fe:	4650      	mov	r0, sl
 8021600:	f7ff f9e4 	bl	80209cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8021604:	b009      	add	sp, #36	; 0x24
 8021606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802160a:	f10d 0818 	add.w	r8, sp, #24
 802160e:	4639      	mov	r1, r7
 8021610:	4640      	mov	r0, r8
 8021612:	f7fa fe7d 	bl	801c310 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8021616:	e898 0003 	ldmia.w	r8, {r0, r1}
 802161a:	af04      	add	r7, sp, #16
 802161c:	e887 0003 	stmia.w	r7, {r0, r1}
 8021620:	4638      	mov	r0, r7
 8021622:	4621      	mov	r1, r4
 8021624:	f7f1 fa6a 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 8021628:	4638      	mov	r0, r7
 802162a:	f7f1 faaa 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 802162e:	2800      	cmp	r0, #0
 8021630:	d1d7      	bne.n	80215e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 8021632:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8021636:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 802163a:	4293      	cmp	r3, r2
 802163c:	dd12      	ble.n	8021664 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 802163e:	1a9b      	subs	r3, r3, r2
 8021640:	f9b4 0000 	ldrsh.w	r0, [r4]
 8021644:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8021648:	f8ad 0018 	strh.w	r0, [sp, #24]
 802164c:	f8ad 201a 	strh.w	r2, [sp, #26]
 8021650:	f8ad 101c 	strh.w	r1, [sp, #28]
 8021654:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021658:	4642      	mov	r2, r8
 802165a:	4633      	mov	r3, r6
 802165c:	a902      	add	r1, sp, #8
 802165e:	4628      	mov	r0, r5
 8021660:	f7ff f8ce 	bl	8020800 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021664:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8021668:	f9b4 2000 	ldrsh.w	r2, [r4]
 802166c:	4293      	cmp	r3, r2
 802166e:	dd12      	ble.n	8021696 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 8021670:	1a9b      	subs	r3, r3, r2
 8021672:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8021676:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802167a:	f8ad 2018 	strh.w	r2, [sp, #24]
 802167e:	f8ad 001a 	strh.w	r0, [sp, #26]
 8021682:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021686:	f8ad 101e 	strh.w	r1, [sp, #30]
 802168a:	23ff      	movs	r3, #255	; 0xff
 802168c:	4642      	mov	r2, r8
 802168e:	a902      	add	r1, sp, #8
 8021690:	4628      	mov	r0, r5
 8021692:	f7ff f8b5 	bl	8020800 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8021696:	463b      	mov	r3, r7
 8021698:	aa02      	add	r2, sp, #8
 802169a:	4629      	mov	r1, r5
 802169c:	4650      	mov	r0, sl
 802169e:	f7ff f995 	bl	80209cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80216a2:	88a2      	ldrh	r2, [r4, #4]
 80216a4:	8823      	ldrh	r3, [r4, #0]
 80216a6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80216aa:	4413      	add	r3, r2
 80216ac:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80216b0:	440a      	add	r2, r1
 80216b2:	b29b      	uxth	r3, r3
 80216b4:	b292      	uxth	r2, r2
 80216b6:	b211      	sxth	r1, r2
 80216b8:	b218      	sxth	r0, r3
 80216ba:	4288      	cmp	r0, r1
 80216bc:	dd12      	ble.n	80216e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80216be:	1a9b      	subs	r3, r3, r2
 80216c0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80216c4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 80216c8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80216cc:	f8ad 301c 	strh.w	r3, [sp, #28]
 80216d0:	f8ad 001e 	strh.w	r0, [sp, #30]
 80216d4:	23ff      	movs	r3, #255	; 0xff
 80216d6:	4642      	mov	r2, r8
 80216d8:	a902      	add	r1, sp, #8
 80216da:	4628      	mov	r0, r5
 80216dc:	f8ad 601a 	strh.w	r6, [sp, #26]
 80216e0:	f7ff f88e 	bl	8020800 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80216e4:	88e2      	ldrh	r2, [r4, #6]
 80216e6:	8863      	ldrh	r3, [r4, #2]
 80216e8:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80216ec:	4413      	add	r3, r2
 80216ee:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80216f2:	440a      	add	r2, r1
 80216f4:	b29b      	uxth	r3, r3
 80216f6:	b292      	uxth	r2, r2
 80216f8:	b211      	sxth	r1, r2
 80216fa:	b218      	sxth	r0, r3
 80216fc:	4288      	cmp	r0, r1
 80216fe:	dd81      	ble.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021700:	1a9b      	subs	r3, r3, r2
 8021702:	f9b4 6000 	ldrsh.w	r6, [r4]
 8021706:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802170a:	f8ad 301e 	strh.w	r3, [sp, #30]
 802170e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8021712:	f8ad 101a 	strh.w	r1, [sp, #26]
 8021716:	f8ad 001c 	strh.w	r0, [sp, #28]
 802171a:	23ff      	movs	r3, #255	; 0xff
 802171c:	4642      	mov	r2, r8
 802171e:	e762      	b.n	80215e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 8021720:	4633      	mov	r3, r6
 8021722:	4622      	mov	r2, r4
 8021724:	a902      	add	r1, sp, #8
 8021726:	4628      	mov	r0, r5
 8021728:	f7ff f9c0 	bl	8020aac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 802172c:	e76a      	b.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802172e:	e9cd 4600 	strd	r4, r6, [sp]
 8021732:	ab02      	add	r3, sp, #8
 8021734:	464a      	mov	r2, r9
 8021736:	4629      	mov	r1, r5
 8021738:	4650      	mov	r0, sl
 802173a:	f7ff fd97 	bl	802126c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 802173e:	e761      	b.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021740:	4638      	mov	r0, r7
 8021742:	f7fa fe31 	bl	801c3a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8021746:	b950      	cbnz	r0, 802175e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 8021748:	e9cd 6000 	strd	r6, r0, [sp]
 802174c:	f8da 3000 	ldr.w	r3, [sl]
 8021750:	aa02      	add	r2, sp, #8
 8021752:	68de      	ldr	r6, [r3, #12]
 8021754:	4629      	mov	r1, r5
 8021756:	4623      	mov	r3, r4
 8021758:	4650      	mov	r0, sl
 802175a:	47b0      	blx	r6
 802175c:	e752      	b.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 802175e:	f10d 0818 	add.w	r8, sp, #24
 8021762:	4639      	mov	r1, r7
 8021764:	4640      	mov	r0, r8
 8021766:	f7fa fdd3 	bl	801c310 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802176a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802176e:	af04      	add	r7, sp, #16
 8021770:	e887 0003 	stmia.w	r7, {r0, r1}
 8021774:	4638      	mov	r0, r7
 8021776:	4621      	mov	r1, r4
 8021778:	f7f1 f9c0 	bl	8012afc <_ZN8touchgfx4RectaNERKS0_>
 802177c:	4638      	mov	r0, r7
 802177e:	f7f1 fa00 	bl	8012b82 <_ZNK8touchgfx4Rect7isEmptyEv>
 8021782:	b138      	cbz	r0, 8021794 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 8021784:	9600      	str	r6, [sp, #0]
 8021786:	4623      	mov	r3, r4
 8021788:	aa02      	add	r2, sp, #8
 802178a:	4649      	mov	r1, r9
 802178c:	4628      	mov	r0, r5
 802178e:	f7ff fdc9 	bl	8021324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021792:	e737      	b.n	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021794:	e9cd 6000 	strd	r6, r0, [sp]
 8021798:	f8da 3000 	ldr.w	r3, [sl]
 802179c:	aa02      	add	r2, sp, #8
 802179e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80217a2:	4629      	mov	r1, r5
 80217a4:	463b      	mov	r3, r7
 80217a6:	4650      	mov	r0, sl
 80217a8:	47d8      	blx	fp
 80217aa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80217ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80217b2:	4293      	cmp	r3, r2
 80217b4:	dd13      	ble.n	80217de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 80217b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80217ba:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80217be:	f8ad 0018 	strh.w	r0, [sp, #24]
 80217c2:	1a9b      	subs	r3, r3, r2
 80217c4:	f8ad 201a 	strh.w	r2, [sp, #26]
 80217c8:	f8ad 101c 	strh.w	r1, [sp, #28]
 80217cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80217d0:	9600      	str	r6, [sp, #0]
 80217d2:	4643      	mov	r3, r8
 80217d4:	aa02      	add	r2, sp, #8
 80217d6:	4649      	mov	r1, r9
 80217d8:	4628      	mov	r0, r5
 80217da:	f7ff fda3 	bl	8021324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80217de:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80217e2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80217e6:	4293      	cmp	r3, r2
 80217e8:	dd13      	ble.n	8021812 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 80217ea:	1a9b      	subs	r3, r3, r2
 80217ec:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80217f0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80217f4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80217f8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80217fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021800:	f8ad 101e 	strh.w	r1, [sp, #30]
 8021804:	9600      	str	r6, [sp, #0]
 8021806:	4643      	mov	r3, r8
 8021808:	aa02      	add	r2, sp, #8
 802180a:	4649      	mov	r1, r9
 802180c:	4628      	mov	r0, r5
 802180e:	f7ff fd89 	bl	8021324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021812:	88a2      	ldrh	r2, [r4, #4]
 8021814:	8823      	ldrh	r3, [r4, #0]
 8021816:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 802181a:	4413      	add	r3, r2
 802181c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8021820:	440a      	add	r2, r1
 8021822:	b29b      	uxth	r3, r3
 8021824:	b292      	uxth	r2, r2
 8021826:	b211      	sxth	r1, r2
 8021828:	b218      	sxth	r0, r3
 802182a:	4288      	cmp	r0, r1
 802182c:	dd13      	ble.n	8021856 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 802182e:	1a9b      	subs	r3, r3, r2
 8021830:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8021834:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8021838:	f8ad 1018 	strh.w	r1, [sp, #24]
 802183c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8021840:	f8ad 001e 	strh.w	r0, [sp, #30]
 8021844:	9600      	str	r6, [sp, #0]
 8021846:	4643      	mov	r3, r8
 8021848:	aa02      	add	r2, sp, #8
 802184a:	4649      	mov	r1, r9
 802184c:	4628      	mov	r0, r5
 802184e:	f8ad 701a 	strh.w	r7, [sp, #26]
 8021852:	f7ff fd67 	bl	8021324 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8021856:	88e2      	ldrh	r2, [r4, #6]
 8021858:	8863      	ldrh	r3, [r4, #2]
 802185a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802185e:	4413      	add	r3, r2
 8021860:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8021864:	440a      	add	r2, r1
 8021866:	b29b      	uxth	r3, r3
 8021868:	b292      	uxth	r2, r2
 802186a:	b211      	sxth	r1, r2
 802186c:	b218      	sxth	r0, r3
 802186e:	4288      	cmp	r0, r1
 8021870:	f77f aec8 	ble.w	8021604 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 8021874:	f9b4 7000 	ldrsh.w	r7, [r4]
 8021878:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802187c:	f8ad 7018 	strh.w	r7, [sp, #24]
 8021880:	1a9b      	subs	r3, r3, r2
 8021882:	f8ad 301e 	strh.w	r3, [sp, #30]
 8021886:	f8ad 101a 	strh.w	r1, [sp, #26]
 802188a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802188e:	9600      	str	r6, [sp, #0]
 8021890:	4643      	mov	r3, r8
 8021892:	e779      	b.n	8021788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 8021894:	2001383c 	.word	0x2001383c

08021898 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8021898:	b180      	cbz	r0, 80218bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 802189a:	2903      	cmp	r1, #3
 802189c:	d81c      	bhi.n	80218d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 802189e:	e8df f001 	tbb	[pc, r1]
 80218a2:	1d02      	.short	0x1d02
 80218a4:	1f08      	.short	0x1f08
 80218a6:	4b10      	ldr	r3, [pc, #64]	; (80218e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80218a8:	8818      	ldrh	r0, [r3, #0]
 80218aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218ae:	4240      	negs	r0, r0
 80218b0:	4770      	bx	lr
 80218b2:	4b0d      	ldr	r3, [pc, #52]	; (80218e8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80218b4:	8818      	ldrh	r0, [r3, #0]
 80218b6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80218ba:	4770      	bx	lr
 80218bc:	2903      	cmp	r1, #3
 80218be:	d80b      	bhi.n	80218d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80218c0:	a301      	add	r3, pc, #4	; (adr r3, 80218c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80218c2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80218c6:	bf00      	nop
 80218c8:	080218dd 	.word	0x080218dd
 80218cc:	080218b3 	.word	0x080218b3
 80218d0:	080218e1 	.word	0x080218e1
 80218d4:	080218a7 	.word	0x080218a7
 80218d8:	2000      	movs	r0, #0
 80218da:	4770      	bx	lr
 80218dc:	2001      	movs	r0, #1
 80218de:	4770      	bx	lr
 80218e0:	f04f 30ff 	mov.w	r0, #4294967295
 80218e4:	4770      	bx	lr
 80218e6:	bf00      	nop
 80218e8:	20013836 	.word	0x20013836

080218ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80218ec:	b180      	cbz	r0, 8021910 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80218ee:	2903      	cmp	r1, #3
 80218f0:	d81c      	bhi.n	802192c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80218f2:	e8df f001 	tbb	[pc, r1]
 80218f6:	021d      	.short	0x021d
 80218f8:	071f      	.short	0x071f
 80218fa:	4b10      	ldr	r3, [pc, #64]	; (802193c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80218fc:	8818      	ldrh	r0, [r3, #0]
 80218fe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8021902:	4770      	bx	lr
 8021904:	4b0d      	ldr	r3, [pc, #52]	; (802193c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8021906:	8818      	ldrh	r0, [r3, #0]
 8021908:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802190c:	4240      	negs	r0, r0
 802190e:	4770      	bx	lr
 8021910:	2903      	cmp	r1, #3
 8021912:	d80b      	bhi.n	802192c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8021914:	a301      	add	r3, pc, #4	; (adr r3, 802191c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8021916:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 802191a:	bf00      	nop
 802191c:	080218fb 	.word	0x080218fb
 8021920:	08021935 	.word	0x08021935
 8021924:	08021905 	.word	0x08021905
 8021928:	08021931 	.word	0x08021931
 802192c:	2000      	movs	r0, #0
 802192e:	4770      	bx	lr
 8021930:	2001      	movs	r0, #1
 8021932:	4770      	bx	lr
 8021934:	f04f 30ff 	mov.w	r0, #4294967295
 8021938:	4770      	bx	lr
 802193a:	bf00      	nop
 802193c:	20013836 	.word	0x20013836

08021940 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8021940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021944:	b099      	sub	sp, #100	; 0x64
 8021946:	910b      	str	r1, [sp, #44]	; 0x2c
 8021948:	a914      	add	r1, sp, #80	; 0x50
 802194a:	e881 000c 	stmia.w	r1, {r2, r3}
 802194e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8021952:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8021956:	f891 900d 	ldrb.w	r9, [r1, #13]
 802195a:	9309      	str	r3, [sp, #36]	; 0x24
 802195c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021960:	9310      	str	r3, [sp, #64]	; 0x40
 8021962:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8021966:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 802196a:	930c      	str	r3, [sp, #48]	; 0x30
 802196c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8021970:	798f      	ldrb	r7, [r1, #6]
 8021972:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8021976:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 802197a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 802197e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8021982:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8021986:	431f      	orrs	r7, r3
 8021988:	f000 8195 	beq.w	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 802198c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8021990:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8021994:	f891 9007 	ldrb.w	r9, [r1, #7]
 8021998:	ea59 0903 	orrs.w	r9, r9, r3
 802199c:	f000 818b 	beq.w	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80219a0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80219a4:	b29b      	uxth	r3, r3
 80219a6:	2d00      	cmp	r5, #0
 80219a8:	f000 812e 	beq.w	8021c08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80219ac:	1aed      	subs	r5, r5, r3
 80219ae:	b2ad      	uxth	r5, r5
 80219b0:	042b      	lsls	r3, r5, #16
 80219b2:	d502      	bpl.n	80219ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80219b4:	1b64      	subs	r4, r4, r5
 80219b6:	b224      	sxth	r4, r4
 80219b8:	2500      	movs	r5, #0
 80219ba:	f9b2 1000 	ldrsh.w	r1, [r2]
 80219be:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80219c2:	428c      	cmp	r4, r1
 80219c4:	b28b      	uxth	r3, r1
 80219c6:	bfbf      	itttt	lt
 80219c8:	18ed      	addlt	r5, r5, r3
 80219ca:	1b2c      	sublt	r4, r5, r4
 80219cc:	b2a5      	uxthlt	r5, r4
 80219ce:	460c      	movlt	r4, r1
 80219d0:	8891      	ldrh	r1, [r2, #4]
 80219d2:	440b      	add	r3, r1
 80219d4:	b21b      	sxth	r3, r3
 80219d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80219d8:	88d3      	ldrh	r3, [r2, #6]
 80219da:	8852      	ldrh	r2, [r2, #2]
 80219dc:	4413      	add	r3, r2
 80219de:	b21b      	sxth	r3, r3
 80219e0:	930d      	str	r3, [sp, #52]	; 0x34
 80219e2:	4bbe      	ldr	r3, [pc, #760]	; (8021cdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 80219e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80219e6:	f893 b000 	ldrb.w	fp, [r3]
 80219ea:	f10b 3cff 	add.w	ip, fp, #4294967295
 80219ee:	f1dc 0300 	rsbs	r3, ip, #0
 80219f2:	eb43 030c 	adc.w	r3, r3, ip
 80219f6:	930e      	str	r3, [sp, #56]	; 0x38
 80219f8:	4621      	mov	r1, r4
 80219fa:	4653      	mov	r3, sl
 80219fc:	a814      	add	r0, sp, #80	; 0x50
 80219fe:	f7f6 fc90 	bl	8018322 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8021a02:	4621      	mov	r1, r4
 8021a04:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8021a08:	4653      	mov	r3, sl
 8021a0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8021a0c:	a814      	add	r0, sp, #80	; 0x50
 8021a0e:	f7f6 fca5 	bl	801835c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8021a12:	a918      	add	r1, sp, #96	; 0x60
 8021a14:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8021a18:	a817      	add	r0, sp, #92	; 0x5c
 8021a1a:	f7f6 fdcb 	bl	80185b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8021a1e:	f1ba 0f00 	cmp.w	sl, #0
 8021a22:	f040 80f4 	bne.w	8021c0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8021a26:	f1bb 0f01 	cmp.w	fp, #1
 8021a2a:	f040 80f8 	bne.w	8021c1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8021a2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021a30:	2b00      	cmp	r3, #0
 8021a32:	f040 8145 	bne.w	8021cc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8021a36:	b2ba      	uxth	r2, r7
 8021a38:	b905      	cbnz	r5, 8021a3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8021a3a:	b16e      	cbz	r6, 8021a58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8021a3c:	fb06 5302 	mla	r3, r6, r2, r5
 8021a40:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8021a42:	fb08 f303 	mul.w	r3, r8, r3
 8021a46:	4631      	mov	r1, r6
 8021a48:	f003 0607 	and.w	r6, r3, #7
 8021a4c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8021a50:	9328      	str	r3, [sp, #160]	; 0xa0
 8021a52:	eba9 0301 	sub.w	r3, r9, r1
 8021a56:	930a      	str	r3, [sp, #40]	; 0x28
 8021a58:	4651      	mov	r1, sl
 8021a5a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a5c:	f7ff ff1c 	bl	8021898 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8021a60:	4681      	mov	r9, r0
 8021a62:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021a64:	f7ff ff42 	bl	80218ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8021a68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021a6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021a6c:	eba3 0a01 	sub.w	sl, r3, r1
 8021a70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021a72:	459a      	cmp	sl, r3
 8021a74:	bfa8      	it	ge
 8021a76:	469a      	movge	sl, r3
 8021a78:	f1ba 0f00 	cmp.w	sl, #0
 8021a7c:	4683      	mov	fp, r0
 8021a7e:	f340 811a 	ble.w	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021a84:	1b64      	subs	r4, r4, r5
 8021a86:	1b1c      	subs	r4, r3, r4
 8021a88:	42bc      	cmp	r4, r7
 8021a8a:	bfd4      	ite	le
 8021a8c:	ebc5 0504 	rsble	r5, r5, r4
 8021a90:	ebc5 0507 	rsbgt	r5, r5, r7
 8021a94:	2d00      	cmp	r5, #0
 8021a96:	f340 810e 	ble.w	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021a9a:	1b52      	subs	r2, r2, r5
 8021a9c:	fb08 f302 	mul.w	r3, r8, r2
 8021aa0:	930f      	str	r3, [sp, #60]	; 0x3c
 8021aa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021aa4:	2b00      	cmp	r3, #0
 8021aa6:	f040 8116 	bne.w	8021cd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8021aaa:	4b8d      	ldr	r3, [pc, #564]	; (8021ce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8021aac:	6818      	ldr	r0, [r3, #0]
 8021aae:	6803      	ldr	r3, [r0, #0]
 8021ab0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8021ab2:	4798      	blx	r3
 8021ab4:	2301      	movs	r3, #1
 8021ab6:	fa03 f308 	lsl.w	r3, r3, r8
 8021aba:	4a8a      	ldr	r2, [pc, #552]	; (8021ce4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8021abc:	3b01      	subs	r3, #1
 8021abe:	b2db      	uxtb	r3, r3
 8021ac0:	8811      	ldrh	r1, [r2, #0]
 8021ac2:	930e      	str	r3, [sp, #56]	; 0x38
 8021ac4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8021ac8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8021acc:	fb01 2303 	mla	r3, r1, r3, r2
 8021ad0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8021ad4:	930a      	str	r3, [sp, #40]	; 0x28
 8021ad6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ad8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8021adc:	9313      	str	r3, [sp, #76]	; 0x4c
 8021ade:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ae0:	0a19      	lsrs	r1, r3, #8
 8021ae2:	b2cb      	uxtb	r3, r1
 8021ae4:	9312      	str	r3, [sp, #72]	; 0x48
 8021ae6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021ae8:	b2db      	uxtb	r3, r3
 8021aea:	9311      	str	r3, [sp, #68]	; 0x44
 8021aec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8021aee:	095a      	lsrs	r2, r3, #5
 8021af0:	4b7d      	ldr	r3, [pc, #500]	; (8021ce8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8021af2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021af6:	400b      	ands	r3, r1
 8021af8:	4313      	orrs	r3, r2
 8021afa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8021afc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021b00:	4313      	orrs	r3, r2
 8021b02:	b29b      	uxth	r3, r3
 8021b04:	9310      	str	r3, [sp, #64]	; 0x40
 8021b06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021b08:	781a      	ldrb	r2, [r3, #0]
 8021b0a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021b0e:	4132      	asrs	r2, r6
 8021b10:	fb05 b919 	mls	r9, r5, r9, fp
 8021b14:	fb03 fb05 	mul.w	fp, r3, r5
 8021b18:	b2d2      	uxtb	r2, r2
 8021b1a:	930d      	str	r3, [sp, #52]	; 0x34
 8021b1c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8021b20:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8021b24:	f0c0 80f5 	bcc.w	8021d12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8021b28:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8021b2c:	46ae      	mov	lr, r5
 8021b2e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8021b32:	f0c0 80dd 	bcc.w	8021cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8021b36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021b38:	4013      	ands	r3, r2
 8021b3a:	d055      	beq.n	8021be8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8021b3c:	20ff      	movs	r0, #255	; 0xff
 8021b3e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021b40:	fb90 f1f1 	sdiv	r1, r0, r1
 8021b44:	434b      	muls	r3, r1
 8021b46:	2bfe      	cmp	r3, #254	; 0xfe
 8021b48:	dd03      	ble.n	8021b52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8021b4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b4c:	4281      	cmp	r1, r0
 8021b4e:	f000 80cd 	beq.w	8021cec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8021b52:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021b54:	f8bc 4000 	ldrh.w	r4, [ip]
 8021b58:	fb11 f303 	smulbb	r3, r1, r3
 8021b5c:	b29b      	uxth	r3, r3
 8021b5e:	1c59      	adds	r1, r3, #1
 8021b60:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8021b64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021b68:	b29f      	uxth	r7, r3
 8021b6a:	43db      	mvns	r3, r3
 8021b6c:	b2db      	uxtb	r3, r3
 8021b6e:	9309      	str	r3, [sp, #36]	; 0x24
 8021b70:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b72:	1220      	asrs	r0, r4, #8
 8021b74:	fb13 f907 	smulbb	r9, r3, r7
 8021b78:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021b7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b7e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8021b82:	fb00 9003 	mla	r0, r0, r3, r9
 8021b86:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8021b88:	10e1      	asrs	r1, r4, #3
 8021b8a:	fb13 f907 	smulbb	r9, r3, r7
 8021b8e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021b92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b94:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8021b98:	fb01 9103 	mla	r1, r1, r3, r9
 8021b9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021b9e:	00e4      	lsls	r4, r4, #3
 8021ba0:	fb13 f707 	smulbb	r7, r3, r7
 8021ba4:	b2e4      	uxtb	r4, r4
 8021ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ba8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021bac:	fb04 7403 	mla	r4, r4, r3, r7
 8021bb0:	b280      	uxth	r0, r0
 8021bb2:	b2a4      	uxth	r4, r4
 8021bb4:	1c43      	adds	r3, r0, #1
 8021bb6:	f104 0901 	add.w	r9, r4, #1
 8021bba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8021bbe:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8021bc2:	b289      	uxth	r1, r1
 8021bc4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8021bc8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8021bcc:	ea49 0000 	orr.w	r0, r9, r0
 8021bd0:	f101 0901 	add.w	r9, r1, #1
 8021bd4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8021bd8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bdc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021be0:	ea40 0009 	orr.w	r0, r0, r9
 8021be4:	f8ac 0000 	strh.w	r0, [ip]
 8021be8:	4446      	add	r6, r8
 8021bea:	b2b6      	uxth	r6, r6
 8021bec:	2e07      	cmp	r6, #7
 8021bee:	bf81      	itttt	hi
 8021bf0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8021bf2:	785a      	ldrbhi	r2, [r3, #1]
 8021bf4:	3301      	addhi	r3, #1
 8021bf6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8021bf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021bfa:	bf9a      	itte	ls
 8021bfc:	fa42 f208 	asrls.w	r2, r2, r8
 8021c00:	b2d2      	uxtbls	r2, r2
 8021c02:	2600      	movhi	r6, #0
 8021c04:	449c      	add	ip, r3
 8021c06:	e792      	b.n	8021b2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8021c08:	441c      	add	r4, r3
 8021c0a:	b224      	sxth	r4, r4
 8021c0c:	e6d5      	b.n	80219ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8021c0e:	f1ba 0f01 	cmp.w	sl, #1
 8021c12:	f47f af0c 	bne.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c16:	f1bb 0f01 	cmp.w	fp, #1
 8021c1a:	f47f af08 	bne.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c1e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8021ce0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8021c22:	f8db 0000 	ldr.w	r0, [fp]
 8021c26:	6803      	ldr	r3, [r0, #0]
 8021c28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8021c2a:	4798      	blx	r3
 8021c2c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8021c30:	465a      	mov	r2, fp
 8021c32:	d006      	beq.n	8021c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021c34:	f1b8 0f04 	cmp.w	r8, #4
 8021c38:	d140      	bne.n	8021cbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8021c3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021c3c:	3300      	adds	r3, #0
 8021c3e:	bf18      	it	ne
 8021c40:	2301      	movne	r3, #1
 8021c42:	0580      	lsls	r0, r0, #22
 8021c44:	d56e      	bpl.n	8021d24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c46:	f1b8 0f08 	cmp.w	r8, #8
 8021c4a:	d16b      	bne.n	8021d24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8021c4c:	2b00      	cmp	r3, #0
 8021c4e:	bf0c      	ite	eq
 8021c50:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8021c54:	f44f 7180 	movne.w	r1, #256	; 0x100
 8021c58:	2d00      	cmp	r5, #0
 8021c5a:	f47f aee8 	bne.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c5e:	2e00      	cmp	r6, #0
 8021c60:	f47f aee5 	bne.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c64:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021c66:	19e3      	adds	r3, r4, r7
 8021c68:	4283      	cmp	r3, r0
 8021c6a:	f73f aee0 	bgt.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021c70:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021c72:	444b      	add	r3, r9
 8021c74:	4283      	cmp	r3, r0
 8021c76:	f73f aeda 	bgt.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021c7a:	6810      	ldr	r0, [r2, #0]
 8021c7c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8021c80:	6804      	ldr	r4, [r0, #0]
 8021c82:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8021c86:	b2bf      	uxth	r7, r7
 8021c88:	f1b8 0f08 	cmp.w	r8, #8
 8021c8c:	f04f 0500 	mov.w	r5, #0
 8021c90:	bf18      	it	ne
 8021c92:	3701      	addne	r7, #1
 8021c94:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8021c98:	990c      	ldr	r1, [sp, #48]	; 0x30
 8021c9a:	9104      	str	r1, [sp, #16]
 8021c9c:	bf18      	it	ne
 8021c9e:	f027 0701 	bicne.w	r7, r7, #1
 8021ca2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8021ca4:	bf18      	it	ne
 8021ca6:	b2bf      	uxthne	r7, r7
 8021ca8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8021cac:	e9cd 7900 	strd	r7, r9, [sp]
 8021cb0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8021cb2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8021cb4:	47a0      	blx	r4
 8021cb6:	b019      	add	sp, #100	; 0x64
 8021cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cbc:	2300      	movs	r3, #0
 8021cbe:	e7c0      	b.n	8021c42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8021cc0:	2208      	movs	r2, #8
 8021cc2:	fb92 f3f8 	sdiv	r3, r2, r8
 8021cc6:	1e5a      	subs	r2, r3, #1
 8021cc8:	443a      	add	r2, r7
 8021cca:	fb92 f2f3 	sdiv	r2, r2, r3
 8021cce:	fb12 f203 	smulbb	r2, r2, r3
 8021cd2:	b292      	uxth	r2, r2
 8021cd4:	e6b0      	b.n	8021a38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8021cd6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021cd8:	e6ec      	b.n	8021ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8021cda:	bf00      	nop
 8021cdc:	20013834 	.word	0x20013834
 8021ce0:	2001383c 	.word	0x2001383c
 8021ce4:	20013836 	.word	0x20013836
 8021ce8:	00fff800 	.word	0x00fff800
 8021cec:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021cee:	e779      	b.n	8021be4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8021cf0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021cf2:	b153      	cbz	r3, 8021d0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8021cf4:	441e      	add	r6, r3
 8021cf6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021cf8:	b2b6      	uxth	r6, r6
 8021cfa:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8021cfe:	f006 0607 	and.w	r6, r6, #7
 8021d02:	781a      	ldrb	r2, [r3, #0]
 8021d04:	9328      	str	r3, [sp, #160]	; 0xa0
 8021d06:	4132      	asrs	r2, r6
 8021d08:	b2d2      	uxtb	r2, r2
 8021d0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d0c:	445b      	add	r3, fp
 8021d0e:	930a      	str	r3, [sp, #40]	; 0x28
 8021d10:	e706      	b.n	8021b20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8021d12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d14:	2b00      	cmp	r3, #0
 8021d16:	d1ce      	bne.n	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d18:	4b05      	ldr	r3, [pc, #20]	; (8021d30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8021d1a:	6818      	ldr	r0, [r3, #0]
 8021d1c:	6803      	ldr	r3, [r0, #0]
 8021d1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021d20:	4798      	blx	r3
 8021d22:	e7c8      	b.n	8021cb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8021d24:	2b00      	cmp	r3, #0
 8021d26:	f43f ae82 	beq.w	8021a2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8021d2a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8021d2e:	e793      	b.n	8021c58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8021d30:	2001383c 	.word	0x2001383c

08021d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8021d34:	b538      	push	{r3, r4, r5, lr}
 8021d36:	4c15      	ldr	r4, [pc, #84]	; (8021d8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8021d38:	7823      	ldrb	r3, [r4, #0]
 8021d3a:	f3bf 8f5b 	dmb	ish
 8021d3e:	07da      	lsls	r2, r3, #31
 8021d40:	4605      	mov	r5, r0
 8021d42:	d40b      	bmi.n	8021d5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d44:	4620      	mov	r0, r4
 8021d46:	f00a ff16 	bl	802cb76 <__cxa_guard_acquire>
 8021d4a:	b138      	cbz	r0, 8021d5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8021d4c:	4620      	mov	r0, r4
 8021d4e:	f00a ff1e 	bl	802cb8e <__cxa_guard_release>
 8021d52:	4a0f      	ldr	r2, [pc, #60]	; (8021d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d54:	490f      	ldr	r1, [pc, #60]	; (8021d94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8021d56:	4810      	ldr	r0, [pc, #64]	; (8021d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d58:	f00a ff06 	bl	802cb68 <__aeabi_atexit>
 8021d5c:	4c0f      	ldr	r4, [pc, #60]	; (8021d9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8021d5e:	7823      	ldrb	r3, [r4, #0]
 8021d60:	f3bf 8f5b 	dmb	ish
 8021d64:	07db      	lsls	r3, r3, #31
 8021d66:	d40b      	bmi.n	8021d80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d68:	4620      	mov	r0, r4
 8021d6a:	f00a ff04 	bl	802cb76 <__cxa_guard_acquire>
 8021d6e:	b138      	cbz	r0, 8021d80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8021d70:	4620      	mov	r0, r4
 8021d72:	f00a ff0c 	bl	802cb8e <__cxa_guard_release>
 8021d76:	4a06      	ldr	r2, [pc, #24]	; (8021d90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8021d78:	4909      	ldr	r1, [pc, #36]	; (8021da0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8021d7a:	480a      	ldr	r0, [pc, #40]	; (8021da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d7c:	f00a fef4 	bl	802cb68 <__aeabi_atexit>
 8021d80:	4b05      	ldr	r3, [pc, #20]	; (8021d98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8021d82:	612b      	str	r3, [r5, #16]
 8021d84:	4b07      	ldr	r3, [pc, #28]	; (8021da4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8021d86:	616b      	str	r3, [r5, #20]
 8021d88:	bd38      	pop	{r3, r4, r5, pc}
 8021d8a:	bf00      	nop
 8021d8c:	2001391c 	.word	0x2001391c
 8021d90:	20000000 	.word	0x20000000
 8021d94:	0801eb37 	.word	0x0801eb37
 8021d98:	200000d8 	.word	0x200000d8
 8021d9c:	20013920 	.word	0x20013920
 8021da0:	0801eb35 	.word	0x0801eb35
 8021da4:	200000dc 	.word	0x200000dc

08021da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8021da8:	b538      	push	{r3, r4, r5, lr}
 8021daa:	4c15      	ldr	r4, [pc, #84]	; (8021e00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8021dac:	7823      	ldrb	r3, [r4, #0]
 8021dae:	f3bf 8f5b 	dmb	ish
 8021db2:	07da      	lsls	r2, r3, #31
 8021db4:	4605      	mov	r5, r0
 8021db6:	d40b      	bmi.n	8021dd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021db8:	4620      	mov	r0, r4
 8021dba:	f00a fedc 	bl	802cb76 <__cxa_guard_acquire>
 8021dbe:	b138      	cbz	r0, 8021dd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8021dc0:	4620      	mov	r0, r4
 8021dc2:	f00a fee4 	bl	802cb8e <__cxa_guard_release>
 8021dc6:	4a0f      	ldr	r2, [pc, #60]	; (8021e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021dc8:	490f      	ldr	r1, [pc, #60]	; (8021e08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8021dca:	4810      	ldr	r0, [pc, #64]	; (8021e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021dcc:	f00a fecc 	bl	802cb68 <__aeabi_atexit>
 8021dd0:	4c0f      	ldr	r4, [pc, #60]	; (8021e10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8021dd2:	7823      	ldrb	r3, [r4, #0]
 8021dd4:	f3bf 8f5b 	dmb	ish
 8021dd8:	07db      	lsls	r3, r3, #31
 8021dda:	d40b      	bmi.n	8021df4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021ddc:	4620      	mov	r0, r4
 8021dde:	f00a feca 	bl	802cb76 <__cxa_guard_acquire>
 8021de2:	b138      	cbz	r0, 8021df4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8021de4:	4620      	mov	r0, r4
 8021de6:	f00a fed2 	bl	802cb8e <__cxa_guard_release>
 8021dea:	4a06      	ldr	r2, [pc, #24]	; (8021e04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8021dec:	4909      	ldr	r1, [pc, #36]	; (8021e14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8021dee:	480a      	ldr	r0, [pc, #40]	; (8021e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021df0:	f00a feba 	bl	802cb68 <__aeabi_atexit>
 8021df4:	4b05      	ldr	r3, [pc, #20]	; (8021e0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8021df6:	60ab      	str	r3, [r5, #8]
 8021df8:	4b07      	ldr	r3, [pc, #28]	; (8021e18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8021dfa:	60eb      	str	r3, [r5, #12]
 8021dfc:	bd38      	pop	{r3, r4, r5, pc}
 8021dfe:	bf00      	nop
 8021e00:	200138f4 	.word	0x200138f4
 8021e04:	20000000 	.word	0x20000000
 8021e08:	0801eb3b 	.word	0x0801eb3b
 8021e0c:	200000b0 	.word	0x200000b0
 8021e10:	200138f8 	.word	0x200138f8
 8021e14:	0801eb39 	.word	0x0801eb39
 8021e18:	200000b4 	.word	0x200000b4

08021e1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8021e1c:	b510      	push	{r4, lr}
 8021e1e:	4604      	mov	r4, r0
 8021e20:	f7ff ff88 	bl	8021d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8021e24:	4620      	mov	r0, r4
 8021e26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021e2a:	f7ff bfbd 	b.w	8021da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08021e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8021e30:	b538      	push	{r3, r4, r5, lr}
 8021e32:	4c15      	ldr	r4, [pc, #84]	; (8021e88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8021e34:	7823      	ldrb	r3, [r4, #0]
 8021e36:	f3bf 8f5b 	dmb	ish
 8021e3a:	07da      	lsls	r2, r3, #31
 8021e3c:	4605      	mov	r5, r0
 8021e3e:	d40b      	bmi.n	8021e58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e40:	4620      	mov	r0, r4
 8021e42:	f00a fe98 	bl	802cb76 <__cxa_guard_acquire>
 8021e46:	b138      	cbz	r0, 8021e58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8021e48:	4620      	mov	r0, r4
 8021e4a:	f00a fea0 	bl	802cb8e <__cxa_guard_release>
 8021e4e:	4a0f      	ldr	r2, [pc, #60]	; (8021e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e50:	490f      	ldr	r1, [pc, #60]	; (8021e90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8021e52:	4810      	ldr	r0, [pc, #64]	; (8021e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e54:	f00a fe88 	bl	802cb68 <__aeabi_atexit>
 8021e58:	4c0f      	ldr	r4, [pc, #60]	; (8021e98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8021e5a:	7823      	ldrb	r3, [r4, #0]
 8021e5c:	f3bf 8f5b 	dmb	ish
 8021e60:	07db      	lsls	r3, r3, #31
 8021e62:	d40b      	bmi.n	8021e7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e64:	4620      	mov	r0, r4
 8021e66:	f00a fe86 	bl	802cb76 <__cxa_guard_acquire>
 8021e6a:	b138      	cbz	r0, 8021e7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8021e6c:	4620      	mov	r0, r4
 8021e6e:	f00a fe8e 	bl	802cb8e <__cxa_guard_release>
 8021e72:	4a06      	ldr	r2, [pc, #24]	; (8021e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8021e74:	4909      	ldr	r1, [pc, #36]	; (8021e9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8021e76:	480a      	ldr	r0, [pc, #40]	; (8021ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e78:	f00a fe76 	bl	802cb68 <__aeabi_atexit>
 8021e7c:	4b05      	ldr	r3, [pc, #20]	; (8021e94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8021e7e:	622b      	str	r3, [r5, #32]
 8021e80:	4b07      	ldr	r3, [pc, #28]	; (8021ea0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8021e82:	626b      	str	r3, [r5, #36]	; 0x24
 8021e84:	bd38      	pop	{r3, r4, r5, pc}
 8021e86:	bf00      	nop
 8021e88:	20013924 	.word	0x20013924
 8021e8c:	20000000 	.word	0x20000000
 8021e90:	0801eb2f 	.word	0x0801eb2f
 8021e94:	200000e0 	.word	0x200000e0
 8021e98:	20013928 	.word	0x20013928
 8021e9c:	0801eb2d 	.word	0x0801eb2d
 8021ea0:	200000e4 	.word	0x200000e4

08021ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8021ea4:	b538      	push	{r3, r4, r5, lr}
 8021ea6:	4c15      	ldr	r4, [pc, #84]	; (8021efc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8021ea8:	7823      	ldrb	r3, [r4, #0]
 8021eaa:	f3bf 8f5b 	dmb	ish
 8021eae:	07da      	lsls	r2, r3, #31
 8021eb0:	4605      	mov	r5, r0
 8021eb2:	d40b      	bmi.n	8021ecc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021eb4:	4620      	mov	r0, r4
 8021eb6:	f00a fe5e 	bl	802cb76 <__cxa_guard_acquire>
 8021eba:	b138      	cbz	r0, 8021ecc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8021ebc:	4620      	mov	r0, r4
 8021ebe:	f00a fe66 	bl	802cb8e <__cxa_guard_release>
 8021ec2:	4a0f      	ldr	r2, [pc, #60]	; (8021f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ec4:	490f      	ldr	r1, [pc, #60]	; (8021f04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8021ec6:	4810      	ldr	r0, [pc, #64]	; (8021f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ec8:	f00a fe4e 	bl	802cb68 <__aeabi_atexit>
 8021ecc:	4c0f      	ldr	r4, [pc, #60]	; (8021f0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8021ece:	7823      	ldrb	r3, [r4, #0]
 8021ed0:	f3bf 8f5b 	dmb	ish
 8021ed4:	07db      	lsls	r3, r3, #31
 8021ed6:	d40b      	bmi.n	8021ef0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021ed8:	4620      	mov	r0, r4
 8021eda:	f00a fe4c 	bl	802cb76 <__cxa_guard_acquire>
 8021ede:	b138      	cbz	r0, 8021ef0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8021ee0:	4620      	mov	r0, r4
 8021ee2:	f00a fe54 	bl	802cb8e <__cxa_guard_release>
 8021ee6:	4a06      	ldr	r2, [pc, #24]	; (8021f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8021ee8:	4909      	ldr	r1, [pc, #36]	; (8021f10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8021eea:	480a      	ldr	r0, [pc, #40]	; (8021f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021eec:	f00a fe3c 	bl	802cb68 <__aeabi_atexit>
 8021ef0:	4b05      	ldr	r3, [pc, #20]	; (8021f08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8021ef2:	61ab      	str	r3, [r5, #24]
 8021ef4:	4b07      	ldr	r3, [pc, #28]	; (8021f14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8021ef6:	61eb      	str	r3, [r5, #28]
 8021ef8:	bd38      	pop	{r3, r4, r5, pc}
 8021efa:	bf00      	nop
 8021efc:	200138fc 	.word	0x200138fc
 8021f00:	20000000 	.word	0x20000000
 8021f04:	0801eb33 	.word	0x0801eb33
 8021f08:	200000b8 	.word	0x200000b8
 8021f0c:	20013900 	.word	0x20013900
 8021f10:	0801eb31 	.word	0x0801eb31
 8021f14:	200000bc 	.word	0x200000bc

08021f18 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8021f18:	b510      	push	{r4, lr}
 8021f1a:	4604      	mov	r4, r0
 8021f1c:	f7ff ff88 	bl	8021e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8021f20:	4620      	mov	r0, r4
 8021f22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021f26:	f7ff bfbd 	b.w	8021ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08021f2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8021f2c:	b538      	push	{r3, r4, r5, lr}
 8021f2e:	4c15      	ldr	r4, [pc, #84]	; (8021f84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8021f30:	7823      	ldrb	r3, [r4, #0]
 8021f32:	f3bf 8f5b 	dmb	ish
 8021f36:	07da      	lsls	r2, r3, #31
 8021f38:	4605      	mov	r5, r0
 8021f3a:	d40b      	bmi.n	8021f54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f3c:	4620      	mov	r0, r4
 8021f3e:	f00a fe1a 	bl	802cb76 <__cxa_guard_acquire>
 8021f42:	b138      	cbz	r0, 8021f54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8021f44:	4620      	mov	r0, r4
 8021f46:	f00a fe22 	bl	802cb8e <__cxa_guard_release>
 8021f4a:	4a0f      	ldr	r2, [pc, #60]	; (8021f88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f4c:	490f      	ldr	r1, [pc, #60]	; (8021f8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8021f4e:	4810      	ldr	r0, [pc, #64]	; (8021f90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f50:	f00a fe0a 	bl	802cb68 <__aeabi_atexit>
 8021f54:	4c0f      	ldr	r4, [pc, #60]	; (8021f94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8021f56:	7823      	ldrb	r3, [r4, #0]
 8021f58:	f3bf 8f5b 	dmb	ish
 8021f5c:	07db      	lsls	r3, r3, #31
 8021f5e:	d40b      	bmi.n	8021f78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f60:	4620      	mov	r0, r4
 8021f62:	f00a fe08 	bl	802cb76 <__cxa_guard_acquire>
 8021f66:	b138      	cbz	r0, 8021f78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8021f68:	4620      	mov	r0, r4
 8021f6a:	f00a fe10 	bl	802cb8e <__cxa_guard_release>
 8021f6e:	4a06      	ldr	r2, [pc, #24]	; (8021f88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8021f70:	4909      	ldr	r1, [pc, #36]	; (8021f98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8021f72:	480a      	ldr	r0, [pc, #40]	; (8021f9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f74:	f00a fdf8 	bl	802cb68 <__aeabi_atexit>
 8021f78:	4b05      	ldr	r3, [pc, #20]	; (8021f90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8021f7a:	632b      	str	r3, [r5, #48]	; 0x30
 8021f7c:	4b07      	ldr	r3, [pc, #28]	; (8021f9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8021f7e:	636b      	str	r3, [r5, #52]	; 0x34
 8021f80:	bd38      	pop	{r3, r4, r5, pc}
 8021f82:	bf00      	nop
 8021f84:	20013934 	.word	0x20013934
 8021f88:	20000000 	.word	0x20000000
 8021f8c:	0801eb27 	.word	0x0801eb27
 8021f90:	200000f0 	.word	0x200000f0
 8021f94:	20013938 	.word	0x20013938
 8021f98:	0801eb25 	.word	0x0801eb25
 8021f9c:	200000f4 	.word	0x200000f4

08021fa0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8021fa0:	b538      	push	{r3, r4, r5, lr}
 8021fa2:	4c15      	ldr	r4, [pc, #84]	; (8021ff8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8021fa4:	7823      	ldrb	r3, [r4, #0]
 8021fa6:	f3bf 8f5b 	dmb	ish
 8021faa:	07da      	lsls	r2, r3, #31
 8021fac:	4605      	mov	r5, r0
 8021fae:	d40b      	bmi.n	8021fc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021fb0:	4620      	mov	r0, r4
 8021fb2:	f00a fde0 	bl	802cb76 <__cxa_guard_acquire>
 8021fb6:	b138      	cbz	r0, 8021fc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8021fb8:	4620      	mov	r0, r4
 8021fba:	f00a fde8 	bl	802cb8e <__cxa_guard_release>
 8021fbe:	4a0f      	ldr	r2, [pc, #60]	; (8021ffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021fc0:	490f      	ldr	r1, [pc, #60]	; (8022000 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8021fc2:	4810      	ldr	r0, [pc, #64]	; (8022004 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021fc4:	f00a fdd0 	bl	802cb68 <__aeabi_atexit>
 8021fc8:	4c0f      	ldr	r4, [pc, #60]	; (8022008 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8021fca:	7823      	ldrb	r3, [r4, #0]
 8021fcc:	f3bf 8f5b 	dmb	ish
 8021fd0:	07db      	lsls	r3, r3, #31
 8021fd2:	d40b      	bmi.n	8021fec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021fd4:	4620      	mov	r0, r4
 8021fd6:	f00a fdce 	bl	802cb76 <__cxa_guard_acquire>
 8021fda:	b138      	cbz	r0, 8021fec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8021fdc:	4620      	mov	r0, r4
 8021fde:	f00a fdd6 	bl	802cb8e <__cxa_guard_release>
 8021fe2:	4a06      	ldr	r2, [pc, #24]	; (8021ffc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8021fe4:	4909      	ldr	r1, [pc, #36]	; (802200c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8021fe6:	480a      	ldr	r0, [pc, #40]	; (8022010 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021fe8:	f00a fdbe 	bl	802cb68 <__aeabi_atexit>
 8021fec:	4b05      	ldr	r3, [pc, #20]	; (8022004 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8021fee:	62ab      	str	r3, [r5, #40]	; 0x28
 8021ff0:	4b07      	ldr	r3, [pc, #28]	; (8022010 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8021ff2:	62eb      	str	r3, [r5, #44]	; 0x2c
 8021ff4:	bd38      	pop	{r3, r4, r5, pc}
 8021ff6:	bf00      	nop
 8021ff8:	20013904 	.word	0x20013904
 8021ffc:	20000000 	.word	0x20000000
 8022000:	0801eb2b 	.word	0x0801eb2b
 8022004:	200000c0 	.word	0x200000c0
 8022008:	20013908 	.word	0x20013908
 802200c:	0801eb29 	.word	0x0801eb29
 8022010:	200000c4 	.word	0x200000c4

08022014 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8022014:	b510      	push	{r4, lr}
 8022016:	4604      	mov	r4, r0
 8022018:	f7ff ff88 	bl	8021f2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802201c:	4620      	mov	r0, r4
 802201e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022022:	f7ff bfbd 	b.w	8021fa0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022028 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022028:	b538      	push	{r3, r4, r5, lr}
 802202a:	4c15      	ldr	r4, [pc, #84]	; (8022080 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802202c:	7823      	ldrb	r3, [r4, #0]
 802202e:	f3bf 8f5b 	dmb	ish
 8022032:	07da      	lsls	r2, r3, #31
 8022034:	4605      	mov	r5, r0
 8022036:	d40b      	bmi.n	8022050 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022038:	4620      	mov	r0, r4
 802203a:	f00a fd9c 	bl	802cb76 <__cxa_guard_acquire>
 802203e:	b138      	cbz	r0, 8022050 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022040:	4620      	mov	r0, r4
 8022042:	f00a fda4 	bl	802cb8e <__cxa_guard_release>
 8022046:	4a0f      	ldr	r2, [pc, #60]	; (8022084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022048:	490f      	ldr	r1, [pc, #60]	; (8022088 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802204a:	4810      	ldr	r0, [pc, #64]	; (802208c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802204c:	f00a fd8c 	bl	802cb68 <__aeabi_atexit>
 8022050:	4c0f      	ldr	r4, [pc, #60]	; (8022090 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8022052:	7823      	ldrb	r3, [r4, #0]
 8022054:	f3bf 8f5b 	dmb	ish
 8022058:	07db      	lsls	r3, r3, #31
 802205a:	d40b      	bmi.n	8022074 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802205c:	4620      	mov	r0, r4
 802205e:	f00a fd8a 	bl	802cb76 <__cxa_guard_acquire>
 8022062:	b138      	cbz	r0, 8022074 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022064:	4620      	mov	r0, r4
 8022066:	f00a fd92 	bl	802cb8e <__cxa_guard_release>
 802206a:	4a06      	ldr	r2, [pc, #24]	; (8022084 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802206c:	4909      	ldr	r1, [pc, #36]	; (8022094 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802206e:	480a      	ldr	r0, [pc, #40]	; (8022098 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022070:	f00a fd7a 	bl	802cb68 <__aeabi_atexit>
 8022074:	4b05      	ldr	r3, [pc, #20]	; (802208c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022076:	652b      	str	r3, [r5, #80]	; 0x50
 8022078:	4b07      	ldr	r3, [pc, #28]	; (8022098 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802207a:	656b      	str	r3, [r5, #84]	; 0x54
 802207c:	bd38      	pop	{r3, r4, r5, pc}
 802207e:	bf00      	nop
 8022080:	2001393c 	.word	0x2001393c
 8022084:	20000000 	.word	0x20000000
 8022088:	0801eb17 	.word	0x0801eb17
 802208c:	200000f8 	.word	0x200000f8
 8022090:	20013940 	.word	0x20013940
 8022094:	0801eb15 	.word	0x0801eb15
 8022098:	200000fc 	.word	0x200000fc

0802209c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802209c:	b538      	push	{r3, r4, r5, lr}
 802209e:	4c15      	ldr	r4, [pc, #84]	; (80220f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80220a0:	7823      	ldrb	r3, [r4, #0]
 80220a2:	f3bf 8f5b 	dmb	ish
 80220a6:	07da      	lsls	r2, r3, #31
 80220a8:	4605      	mov	r5, r0
 80220aa:	d40b      	bmi.n	80220c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80220ac:	4620      	mov	r0, r4
 80220ae:	f00a fd62 	bl	802cb76 <__cxa_guard_acquire>
 80220b2:	b138      	cbz	r0, 80220c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80220b4:	4620      	mov	r0, r4
 80220b6:	f00a fd6a 	bl	802cb8e <__cxa_guard_release>
 80220ba:	4a0f      	ldr	r2, [pc, #60]	; (80220f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80220bc:	490f      	ldr	r1, [pc, #60]	; (80220fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80220be:	4810      	ldr	r0, [pc, #64]	; (8022100 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220c0:	f00a fd52 	bl	802cb68 <__aeabi_atexit>
 80220c4:	4c0f      	ldr	r4, [pc, #60]	; (8022104 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80220c6:	7823      	ldrb	r3, [r4, #0]
 80220c8:	f3bf 8f5b 	dmb	ish
 80220cc:	07db      	lsls	r3, r3, #31
 80220ce:	d40b      	bmi.n	80220e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220d0:	4620      	mov	r0, r4
 80220d2:	f00a fd50 	bl	802cb76 <__cxa_guard_acquire>
 80220d6:	b138      	cbz	r0, 80220e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80220d8:	4620      	mov	r0, r4
 80220da:	f00a fd58 	bl	802cb8e <__cxa_guard_release>
 80220de:	4a06      	ldr	r2, [pc, #24]	; (80220f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80220e0:	4909      	ldr	r1, [pc, #36]	; (8022108 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80220e2:	480a      	ldr	r0, [pc, #40]	; (802210c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80220e4:	f00a fd40 	bl	802cb68 <__aeabi_atexit>
 80220e8:	4b05      	ldr	r3, [pc, #20]	; (8022100 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80220ea:	64ab      	str	r3, [r5, #72]	; 0x48
 80220ec:	4b07      	ldr	r3, [pc, #28]	; (802210c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80220ee:	64eb      	str	r3, [r5, #76]	; 0x4c
 80220f0:	bd38      	pop	{r3, r4, r5, pc}
 80220f2:	bf00      	nop
 80220f4:	20013944 	.word	0x20013944
 80220f8:	20000000 	.word	0x20000000
 80220fc:	0801eb1b 	.word	0x0801eb1b
 8022100:	20000100 	.word	0x20000100
 8022104:	20013948 	.word	0x20013948
 8022108:	0801eb19 	.word	0x0801eb19
 802210c:	20000104 	.word	0x20000104

08022110 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8022110:	b538      	push	{r3, r4, r5, lr}
 8022112:	4c15      	ldr	r4, [pc, #84]	; (8022168 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8022114:	7823      	ldrb	r3, [r4, #0]
 8022116:	f3bf 8f5b 	dmb	ish
 802211a:	07da      	lsls	r2, r3, #31
 802211c:	4605      	mov	r5, r0
 802211e:	d40b      	bmi.n	8022138 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022120:	4620      	mov	r0, r4
 8022122:	f00a fd28 	bl	802cb76 <__cxa_guard_acquire>
 8022126:	b138      	cbz	r0, 8022138 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022128:	4620      	mov	r0, r4
 802212a:	f00a fd30 	bl	802cb8e <__cxa_guard_release>
 802212e:	4a0f      	ldr	r2, [pc, #60]	; (802216c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022130:	490f      	ldr	r1, [pc, #60]	; (8022170 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022132:	4810      	ldr	r0, [pc, #64]	; (8022174 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022134:	f00a fd18 	bl	802cb68 <__aeabi_atexit>
 8022138:	4c0f      	ldr	r4, [pc, #60]	; (8022178 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802213a:	7823      	ldrb	r3, [r4, #0]
 802213c:	f3bf 8f5b 	dmb	ish
 8022140:	07db      	lsls	r3, r3, #31
 8022142:	d40b      	bmi.n	802215c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022144:	4620      	mov	r0, r4
 8022146:	f00a fd16 	bl	802cb76 <__cxa_guard_acquire>
 802214a:	b138      	cbz	r0, 802215c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802214c:	4620      	mov	r0, r4
 802214e:	f00a fd1e 	bl	802cb8e <__cxa_guard_release>
 8022152:	4a06      	ldr	r2, [pc, #24]	; (802216c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022154:	4909      	ldr	r1, [pc, #36]	; (802217c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022156:	480a      	ldr	r0, [pc, #40]	; (8022180 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022158:	f00a fd06 	bl	802cb68 <__aeabi_atexit>
 802215c:	4b05      	ldr	r3, [pc, #20]	; (8022174 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802215e:	642b      	str	r3, [r5, #64]	; 0x40
 8022160:	4b07      	ldr	r3, [pc, #28]	; (8022180 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022162:	646b      	str	r3, [r5, #68]	; 0x44
 8022164:	bd38      	pop	{r3, r4, r5, pc}
 8022166:	bf00      	nop
 8022168:	2001390c 	.word	0x2001390c
 802216c:	20000000 	.word	0x20000000
 8022170:	0801eb1f 	.word	0x0801eb1f
 8022174:	200000c8 	.word	0x200000c8
 8022178:	20013910 	.word	0x20013910
 802217c:	0801eb1d 	.word	0x0801eb1d
 8022180:	200000cc 	.word	0x200000cc

08022184 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022184:	b538      	push	{r3, r4, r5, lr}
 8022186:	4c15      	ldr	r4, [pc, #84]	; (80221dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022188:	7823      	ldrb	r3, [r4, #0]
 802218a:	f3bf 8f5b 	dmb	ish
 802218e:	07da      	lsls	r2, r3, #31
 8022190:	4605      	mov	r5, r0
 8022192:	d40b      	bmi.n	80221ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022194:	4620      	mov	r0, r4
 8022196:	f00a fcee 	bl	802cb76 <__cxa_guard_acquire>
 802219a:	b138      	cbz	r0, 80221ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802219c:	4620      	mov	r0, r4
 802219e:	f00a fcf6 	bl	802cb8e <__cxa_guard_release>
 80221a2:	4a0f      	ldr	r2, [pc, #60]	; (80221e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221a4:	490f      	ldr	r1, [pc, #60]	; (80221e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80221a6:	4810      	ldr	r0, [pc, #64]	; (80221e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221a8:	f00a fcde 	bl	802cb68 <__aeabi_atexit>
 80221ac:	4c0f      	ldr	r4, [pc, #60]	; (80221ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80221ae:	7823      	ldrb	r3, [r4, #0]
 80221b0:	f3bf 8f5b 	dmb	ish
 80221b4:	07db      	lsls	r3, r3, #31
 80221b6:	d40b      	bmi.n	80221d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221b8:	4620      	mov	r0, r4
 80221ba:	f00a fcdc 	bl	802cb76 <__cxa_guard_acquire>
 80221be:	b138      	cbz	r0, 80221d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80221c0:	4620      	mov	r0, r4
 80221c2:	f00a fce4 	bl	802cb8e <__cxa_guard_release>
 80221c6:	4a06      	ldr	r2, [pc, #24]	; (80221e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80221c8:	4909      	ldr	r1, [pc, #36]	; (80221f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80221ca:	480a      	ldr	r0, [pc, #40]	; (80221f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221cc:	f00a fccc 	bl	802cb68 <__aeabi_atexit>
 80221d0:	4b05      	ldr	r3, [pc, #20]	; (80221e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80221d2:	63ab      	str	r3, [r5, #56]	; 0x38
 80221d4:	4b07      	ldr	r3, [pc, #28]	; (80221f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80221d6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80221d8:	bd38      	pop	{r3, r4, r5, pc}
 80221da:	bf00      	nop
 80221dc:	2001392c 	.word	0x2001392c
 80221e0:	20000000 	.word	0x20000000
 80221e4:	0801eb23 	.word	0x0801eb23
 80221e8:	200000e8 	.word	0x200000e8
 80221ec:	20013930 	.word	0x20013930
 80221f0:	0801eb21 	.word	0x0801eb21
 80221f4:	200000ec 	.word	0x200000ec

080221f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80221f8:	b510      	push	{r4, lr}
 80221fa:	4604      	mov	r4, r0
 80221fc:	f7ff ff14 	bl	8022028 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022200:	4620      	mov	r0, r4
 8022202:	f7ff ff85 	bl	8022110 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022206:	4620      	mov	r0, r4
 8022208:	f7ff ff48 	bl	802209c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802220c:	4620      	mov	r0, r4
 802220e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022212:	f7ff bfb7 	b.w	8022184 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022218 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022218:	b538      	push	{r3, r4, r5, lr}
 802221a:	4c15      	ldr	r4, [pc, #84]	; (8022270 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802221c:	7823      	ldrb	r3, [r4, #0]
 802221e:	f3bf 8f5b 	dmb	ish
 8022222:	07da      	lsls	r2, r3, #31
 8022224:	4605      	mov	r5, r0
 8022226:	d40b      	bmi.n	8022240 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022228:	4620      	mov	r0, r4
 802222a:	f00a fca4 	bl	802cb76 <__cxa_guard_acquire>
 802222e:	b138      	cbz	r0, 8022240 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022230:	4620      	mov	r0, r4
 8022232:	f00a fcac 	bl	802cb8e <__cxa_guard_release>
 8022236:	4a0f      	ldr	r2, [pc, #60]	; (8022274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022238:	490f      	ldr	r1, [pc, #60]	; (8022278 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802223a:	4810      	ldr	r0, [pc, #64]	; (802227c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802223c:	f00a fc94 	bl	802cb68 <__aeabi_atexit>
 8022240:	4c0f      	ldr	r4, [pc, #60]	; (8022280 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8022242:	7823      	ldrb	r3, [r4, #0]
 8022244:	f3bf 8f5b 	dmb	ish
 8022248:	07db      	lsls	r3, r3, #31
 802224a:	d40b      	bmi.n	8022264 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802224c:	4620      	mov	r0, r4
 802224e:	f00a fc92 	bl	802cb76 <__cxa_guard_acquire>
 8022252:	b138      	cbz	r0, 8022264 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022254:	4620      	mov	r0, r4
 8022256:	f00a fc9a 	bl	802cb8e <__cxa_guard_release>
 802225a:	4a06      	ldr	r2, [pc, #24]	; (8022274 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802225c:	4909      	ldr	r1, [pc, #36]	; (8022284 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802225e:	480a      	ldr	r0, [pc, #40]	; (8022288 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022260:	f00a fc82 	bl	802cb68 <__aeabi_atexit>
 8022264:	4b05      	ldr	r3, [pc, #20]	; (802227c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022266:	662b      	str	r3, [r5, #96]	; 0x60
 8022268:	4b07      	ldr	r3, [pc, #28]	; (8022288 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802226a:	666b      	str	r3, [r5, #100]	; 0x64
 802226c:	bd38      	pop	{r3, r4, r5, pc}
 802226e:	bf00      	nop
 8022270:	20013914 	.word	0x20013914
 8022274:	20000000 	.word	0x20000000
 8022278:	0801eb0f 	.word	0x0801eb0f
 802227c:	200000d0 	.word	0x200000d0
 8022280:	20013918 	.word	0x20013918
 8022284:	0801eb0d 	.word	0x0801eb0d
 8022288:	200000d4 	.word	0x200000d4

0802228c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802228c:	b538      	push	{r3, r4, r5, lr}
 802228e:	4c15      	ldr	r4, [pc, #84]	; (80222e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022290:	7823      	ldrb	r3, [r4, #0]
 8022292:	f3bf 8f5b 	dmb	ish
 8022296:	07da      	lsls	r2, r3, #31
 8022298:	4605      	mov	r5, r0
 802229a:	d40b      	bmi.n	80222b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802229c:	4620      	mov	r0, r4
 802229e:	f00a fc6a 	bl	802cb76 <__cxa_guard_acquire>
 80222a2:	b138      	cbz	r0, 80222b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80222a4:	4620      	mov	r0, r4
 80222a6:	f00a fc72 	bl	802cb8e <__cxa_guard_release>
 80222aa:	4a0f      	ldr	r2, [pc, #60]	; (80222e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222ac:	490f      	ldr	r1, [pc, #60]	; (80222ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80222ae:	4810      	ldr	r0, [pc, #64]	; (80222f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222b0:	f00a fc5a 	bl	802cb68 <__aeabi_atexit>
 80222b4:	4c0f      	ldr	r4, [pc, #60]	; (80222f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80222b6:	7823      	ldrb	r3, [r4, #0]
 80222b8:	f3bf 8f5b 	dmb	ish
 80222bc:	07db      	lsls	r3, r3, #31
 80222be:	d40b      	bmi.n	80222d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222c0:	4620      	mov	r0, r4
 80222c2:	f00a fc58 	bl	802cb76 <__cxa_guard_acquire>
 80222c6:	b138      	cbz	r0, 80222d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80222c8:	4620      	mov	r0, r4
 80222ca:	f00a fc60 	bl	802cb8e <__cxa_guard_release>
 80222ce:	4a06      	ldr	r2, [pc, #24]	; (80222e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80222d0:	4909      	ldr	r1, [pc, #36]	; (80222f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80222d2:	480a      	ldr	r0, [pc, #40]	; (80222fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222d4:	f00a fc48 	bl	802cb68 <__aeabi_atexit>
 80222d8:	4b05      	ldr	r3, [pc, #20]	; (80222f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80222da:	65ab      	str	r3, [r5, #88]	; 0x58
 80222dc:	4b07      	ldr	r3, [pc, #28]	; (80222fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80222de:	65eb      	str	r3, [r5, #92]	; 0x5c
 80222e0:	bd38      	pop	{r3, r4, r5, pc}
 80222e2:	bf00      	nop
 80222e4:	200138ec 	.word	0x200138ec
 80222e8:	20000000 	.word	0x20000000
 80222ec:	0801eb13 	.word	0x0801eb13
 80222f0:	200000a8 	.word	0x200000a8
 80222f4:	200138f0 	.word	0x200138f0
 80222f8:	0801eb11 	.word	0x0801eb11
 80222fc:	200000ac 	.word	0x200000ac

08022300 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022300:	b510      	push	{r4, lr}
 8022302:	4604      	mov	r4, r0
 8022304:	f7ff ff88 	bl	8022218 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022308:	4620      	mov	r0, r4
 802230a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802230e:	f7ff bfbd 	b.w	802228c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022314:	b538      	push	{r3, r4, r5, lr}
 8022316:	4c15      	ldr	r4, [pc, #84]	; (802236c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022318:	7823      	ldrb	r3, [r4, #0]
 802231a:	f3bf 8f5b 	dmb	ish
 802231e:	07da      	lsls	r2, r3, #31
 8022320:	4605      	mov	r5, r0
 8022322:	d40b      	bmi.n	802233c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022324:	4620      	mov	r0, r4
 8022326:	f00a fc26 	bl	802cb76 <__cxa_guard_acquire>
 802232a:	b138      	cbz	r0, 802233c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802232c:	4620      	mov	r0, r4
 802232e:	f00a fc2e 	bl	802cb8e <__cxa_guard_release>
 8022332:	4a0f      	ldr	r2, [pc, #60]	; (8022370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022334:	490f      	ldr	r1, [pc, #60]	; (8022374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022336:	4810      	ldr	r0, [pc, #64]	; (8022378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022338:	f00a fc16 	bl	802cb68 <__aeabi_atexit>
 802233c:	4c0f      	ldr	r4, [pc, #60]	; (802237c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802233e:	7823      	ldrb	r3, [r4, #0]
 8022340:	f3bf 8f5b 	dmb	ish
 8022344:	07db      	lsls	r3, r3, #31
 8022346:	d40b      	bmi.n	8022360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022348:	4620      	mov	r0, r4
 802234a:	f00a fc14 	bl	802cb76 <__cxa_guard_acquire>
 802234e:	b138      	cbz	r0, 8022360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022350:	4620      	mov	r0, r4
 8022352:	f00a fc1c 	bl	802cb8e <__cxa_guard_release>
 8022356:	4a06      	ldr	r2, [pc, #24]	; (8022370 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022358:	4909      	ldr	r1, [pc, #36]	; (8022380 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802235a:	480a      	ldr	r0, [pc, #40]	; (8022384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802235c:	f00a fc04 	bl	802cb68 <__aeabi_atexit>
 8022360:	4b05      	ldr	r3, [pc, #20]	; (8022378 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022362:	672b      	str	r3, [r5, #112]	; 0x70
 8022364:	4b07      	ldr	r3, [pc, #28]	; (8022384 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022366:	676b      	str	r3, [r5, #116]	; 0x74
 8022368:	bd38      	pop	{r3, r4, r5, pc}
 802236a:	bf00      	nop
 802236c:	200138e4 	.word	0x200138e4
 8022370:	20000000 	.word	0x20000000
 8022374:	0801eb07 	.word	0x0801eb07
 8022378:	200000a0 	.word	0x200000a0
 802237c:	200138e8 	.word	0x200138e8
 8022380:	0801eb05 	.word	0x0801eb05
 8022384:	200000a4 	.word	0x200000a4

08022388 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022388:	b538      	push	{r3, r4, r5, lr}
 802238a:	4c15      	ldr	r4, [pc, #84]	; (80223e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802238c:	7823      	ldrb	r3, [r4, #0]
 802238e:	f3bf 8f5b 	dmb	ish
 8022392:	07da      	lsls	r2, r3, #31
 8022394:	4605      	mov	r5, r0
 8022396:	d40b      	bmi.n	80223b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022398:	4620      	mov	r0, r4
 802239a:	f00a fbec 	bl	802cb76 <__cxa_guard_acquire>
 802239e:	b138      	cbz	r0, 80223b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80223a0:	4620      	mov	r0, r4
 80223a2:	f00a fbf4 	bl	802cb8e <__cxa_guard_release>
 80223a6:	4a0f      	ldr	r2, [pc, #60]	; (80223e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223a8:	490f      	ldr	r1, [pc, #60]	; (80223e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80223aa:	4810      	ldr	r0, [pc, #64]	; (80223ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223ac:	f00a fbdc 	bl	802cb68 <__aeabi_atexit>
 80223b0:	4c0f      	ldr	r4, [pc, #60]	; (80223f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80223b2:	7823      	ldrb	r3, [r4, #0]
 80223b4:	f3bf 8f5b 	dmb	ish
 80223b8:	07db      	lsls	r3, r3, #31
 80223ba:	d40b      	bmi.n	80223d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223bc:	4620      	mov	r0, r4
 80223be:	f00a fbda 	bl	802cb76 <__cxa_guard_acquire>
 80223c2:	b138      	cbz	r0, 80223d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80223c4:	4620      	mov	r0, r4
 80223c6:	f00a fbe2 	bl	802cb8e <__cxa_guard_release>
 80223ca:	4a06      	ldr	r2, [pc, #24]	; (80223e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80223cc:	4909      	ldr	r1, [pc, #36]	; (80223f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80223ce:	480a      	ldr	r0, [pc, #40]	; (80223f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223d0:	f00a fbca 	bl	802cb68 <__aeabi_atexit>
 80223d4:	4b05      	ldr	r3, [pc, #20]	; (80223ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80223d6:	66ab      	str	r3, [r5, #104]	; 0x68
 80223d8:	4b07      	ldr	r3, [pc, #28]	; (80223f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80223da:	66eb      	str	r3, [r5, #108]	; 0x6c
 80223dc:	bd38      	pop	{r3, r4, r5, pc}
 80223de:	bf00      	nop
 80223e0:	200138dc 	.word	0x200138dc
 80223e4:	20000000 	.word	0x20000000
 80223e8:	0801eb0b 	.word	0x0801eb0b
 80223ec:	20000098 	.word	0x20000098
 80223f0:	200138e0 	.word	0x200138e0
 80223f4:	0801eb09 	.word	0x0801eb09
 80223f8:	2000009c 	.word	0x2000009c

080223fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80223fc:	b510      	push	{r4, lr}
 80223fe:	4604      	mov	r4, r0
 8022400:	f7ff ff88 	bl	8022314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8022404:	4620      	mov	r0, r4
 8022406:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802240a:	f7ff bfbd 	b.w	8022388 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802240e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802240e:	b510      	push	{r4, lr}
 8022410:	4604      	mov	r4, r0
 8022412:	f7ff fff3 	bl	80223fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8022416:	4620      	mov	r0, r4
 8022418:	f7ff ff72 	bl	8022300 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802241c:	4620      	mov	r0, r4
 802241e:	f7ff fdf9 	bl	8022014 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8022422:	4620      	mov	r0, r4
 8022424:	f7ff fcfa 	bl	8021e1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8022428:	4620      	mov	r0, r4
 802242a:	f7ff fd75 	bl	8021f18 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802242e:	4620      	mov	r0, r4
 8022430:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022434:	f7ff bee0 	b.w	80221f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08022438 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8022438:	b538      	push	{r3, r4, r5, lr}
 802243a:	4c0b      	ldr	r4, [pc, #44]	; (8022468 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802243c:	7823      	ldrb	r3, [r4, #0]
 802243e:	f3bf 8f5b 	dmb	ish
 8022442:	07db      	lsls	r3, r3, #31
 8022444:	4605      	mov	r5, r0
 8022446:	d40b      	bmi.n	8022460 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022448:	4620      	mov	r0, r4
 802244a:	f00a fb94 	bl	802cb76 <__cxa_guard_acquire>
 802244e:	b138      	cbz	r0, 8022460 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8022450:	4620      	mov	r0, r4
 8022452:	f00a fb9c 	bl	802cb8e <__cxa_guard_release>
 8022456:	4a05      	ldr	r2, [pc, #20]	; (802246c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8022458:	4905      	ldr	r1, [pc, #20]	; (8022470 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802245a:	4806      	ldr	r0, [pc, #24]	; (8022474 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802245c:	f00a fb84 	bl	802cb68 <__aeabi_atexit>
 8022460:	4b04      	ldr	r3, [pc, #16]	; (8022474 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8022462:	67ab      	str	r3, [r5, #120]	; 0x78
 8022464:	bd38      	pop	{r3, r4, r5, pc}
 8022466:	bf00      	nop
 8022468:	200138d0 	.word	0x200138d0
 802246c:	20000000 	.word	0x20000000
 8022470:	0801eb03 	.word	0x0801eb03
 8022474:	20000090 	.word	0x20000090

08022478 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8022478:	b538      	push	{r3, r4, r5, lr}
 802247a:	4c0b      	ldr	r4, [pc, #44]	; (80224a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802247c:	7823      	ldrb	r3, [r4, #0]
 802247e:	f3bf 8f5b 	dmb	ish
 8022482:	07db      	lsls	r3, r3, #31
 8022484:	4605      	mov	r5, r0
 8022486:	d40b      	bmi.n	80224a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022488:	4620      	mov	r0, r4
 802248a:	f00a fb74 	bl	802cb76 <__cxa_guard_acquire>
 802248e:	b138      	cbz	r0, 80224a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8022490:	4620      	mov	r0, r4
 8022492:	f00a fb7c 	bl	802cb8e <__cxa_guard_release>
 8022496:	4a05      	ldr	r2, [pc, #20]	; (80224ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8022498:	4905      	ldr	r1, [pc, #20]	; (80224b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802249a:	4806      	ldr	r0, [pc, #24]	; (80224b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802249c:	f00a fb64 	bl	802cb68 <__aeabi_atexit>
 80224a0:	4b04      	ldr	r3, [pc, #16]	; (80224b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80224a2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80224a4:	bd38      	pop	{r3, r4, r5, pc}
 80224a6:	bf00      	nop
 80224a8:	200138d4 	.word	0x200138d4
 80224ac:	20000000 	.word	0x20000000
 80224b0:	0801eb01 	.word	0x0801eb01
 80224b4:	20000094 	.word	0x20000094

080224b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80224b8:	b570      	push	{r4, r5, r6, lr}
 80224ba:	4d0d      	ldr	r5, [pc, #52]	; (80224f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80224bc:	4c0d      	ldr	r4, [pc, #52]	; (80224f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80224be:	782b      	ldrb	r3, [r5, #0]
 80224c0:	f3bf 8f5b 	dmb	ish
 80224c4:	f013 0f01 	tst.w	r3, #1
 80224c8:	4606      	mov	r6, r0
 80224ca:	d10d      	bne.n	80224e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224cc:	4628      	mov	r0, r5
 80224ce:	f00a fb52 	bl	802cb76 <__cxa_guard_acquire>
 80224d2:	b148      	cbz	r0, 80224e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80224d4:	4b08      	ldr	r3, [pc, #32]	; (80224f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80224d6:	6023      	str	r3, [r4, #0]
 80224d8:	4628      	mov	r0, r5
 80224da:	f00a fb58 	bl	802cb8e <__cxa_guard_release>
 80224de:	4a07      	ldr	r2, [pc, #28]	; (80224fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80224e0:	4907      	ldr	r1, [pc, #28]	; (8022500 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80224e2:	4620      	mov	r0, r4
 80224e4:	f00a fb40 	bl	802cb68 <__aeabi_atexit>
 80224e8:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 80224ec:	bd70      	pop	{r4, r5, r6, pc}
 80224ee:	bf00      	nop
 80224f0:	200138d8 	.word	0x200138d8
 80224f4:	2001394c 	.word	0x2001394c
 80224f8:	08031f48 	.word	0x08031f48
 80224fc:	20000000 	.word	0x20000000
 8022500:	0801eaff 	.word	0x0801eaff

08022504 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8022504:	b510      	push	{r4, lr}
 8022506:	4604      	mov	r4, r0
 8022508:	f7ff ff96 	bl	8022438 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802250c:	4620      	mov	r0, r4
 802250e:	f7ff ffb3 	bl	8022478 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8022512:	4620      	mov	r0, r4
 8022514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022518:	f7ff bfce 	b.w	80224b8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802251c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802251c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022520:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8022524:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8022528:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802252c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8022530:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8022534:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8022538:	8808      	ldrh	r0, [r1, #0]
 802253a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802253e:	2d00      	cmp	r5, #0
 8022540:	eb02 0a0c 	add.w	sl, r2, ip
 8022544:	f2c0 80b0 	blt.w	80226a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8022548:	45ab      	cmp	fp, r5
 802254a:	f340 80ad 	ble.w	80226a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802254e:	2c00      	cmp	r4, #0
 8022550:	f2c0 80a8 	blt.w	80226a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8022554:	45a6      	cmp	lr, r4
 8022556:	f340 80a5 	ble.w	80226a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802255a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802255e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8022562:	1c62      	adds	r2, r4, #1
 8022564:	f100 80a3 	bmi.w	80226ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022568:	4596      	cmp	lr, r2
 802256a:	f340 80a0 	ble.w	80226ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802256e:	f1b9 0f00 	cmp.w	r9, #0
 8022572:	f000 809c 	beq.w	80226ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8022576:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802257a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802257e:	3501      	adds	r5, #1
 8022580:	f100 8099 	bmi.w	80226b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022584:	45ab      	cmp	fp, r5
 8022586:	f340 8096 	ble.w	80226b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 802258a:	2f00      	cmp	r7, #0
 802258c:	f000 8093 	beq.w	80226b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8022590:	2c00      	cmp	r4, #0
 8022592:	f2c0 808e 	blt.w	80226b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8022596:	45a6      	cmp	lr, r4
 8022598:	f340 808b 	ble.w	80226b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 802259c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80225a0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80225a4:	3401      	adds	r4, #1
 80225a6:	f100 8089 	bmi.w	80226bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225aa:	45a6      	cmp	lr, r4
 80225ac:	f340 8086 	ble.w	80226bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225b0:	f1b9 0f00 	cmp.w	r9, #0
 80225b4:	f000 8082 	beq.w	80226bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80225b8:	44d6      	add	lr, sl
 80225ba:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80225be:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80225c2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80225c6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225ca:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80225ce:	fb19 fe07 	smulbb	lr, r9, r7
 80225d2:	ea44 0808 	orr.w	r8, r4, r8
 80225d6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80225da:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80225de:	f1c7 0210 	rsb	r2, r7, #16
 80225e2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80225e6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80225ea:	ea44 0c0c 	orr.w	ip, r4, ip
 80225ee:	eba2 0209 	sub.w	r2, r2, r9
 80225f2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80225f6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80225fa:	fb04 f40c 	mul.w	r4, r4, ip
 80225fe:	fb02 4808 	mla	r8, r2, r8, r4
 8022602:	041a      	lsls	r2, r3, #16
 8022604:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022608:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802260c:	4313      	orrs	r3, r2
 802260e:	042a      	lsls	r2, r5, #16
 8022610:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022614:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022618:	fb0e 8303 	mla	r3, lr, r3, r8
 802261c:	432a      	orrs	r2, r5
 802261e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022622:	fb07 3202 	mla	r2, r7, r2, r3
 8022626:	0d53      	lsrs	r3, r2, #21
 8022628:	0952      	lsrs	r2, r2, #5
 802262a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802262e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022632:	431a      	orrs	r2, r3
 8022634:	b293      	uxth	r3, r2
 8022636:	b2b4      	uxth	r4, r6
 8022638:	1202      	asrs	r2, r0, #8
 802263a:	43f6      	mvns	r6, r6
 802263c:	b2f6      	uxtb	r6, r6
 802263e:	121d      	asrs	r5, r3, #8
 8022640:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022644:	fb12 f206 	smulbb	r2, r2, r6
 8022648:	10c7      	asrs	r7, r0, #3
 802264a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802264e:	00c0      	lsls	r0, r0, #3
 8022650:	fb05 2504 	mla	r5, r5, r4, r2
 8022654:	b2c0      	uxtb	r0, r0
 8022656:	10da      	asrs	r2, r3, #3
 8022658:	00db      	lsls	r3, r3, #3
 802265a:	b2db      	uxtb	r3, r3
 802265c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022660:	fb10 f006 	smulbb	r0, r0, r6
 8022664:	b2ad      	uxth	r5, r5
 8022666:	fb03 0004 	mla	r0, r3, r4, r0
 802266a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802266e:	fb17 f706 	smulbb	r7, r7, r6
 8022672:	b280      	uxth	r0, r0
 8022674:	1c6b      	adds	r3, r5, #1
 8022676:	fb02 7204 	mla	r2, r2, r4, r7
 802267a:	b292      	uxth	r2, r2
 802267c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022680:	1c43      	adds	r3, r0, #1
 8022682:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022686:	1c50      	adds	r0, r2, #1
 8022688:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802268c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022690:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022694:	0952      	lsrs	r2, r2, #5
 8022696:	432b      	orrs	r3, r5
 8022698:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802269c:	4313      	orrs	r3, r2
 802269e:	800b      	strh	r3, [r1, #0]
 80226a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80226a4:	4680      	mov	r8, r0
 80226a6:	e75c      	b.n	8022562 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80226a8:	4684      	mov	ip, r0
 80226aa:	4680      	mov	r8, r0
 80226ac:	e767      	b.n	802257e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80226ae:	4684      	mov	ip, r0
 80226b0:	e765      	b.n	802257e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80226b2:	4605      	mov	r5, r0
 80226b4:	e776      	b.n	80225a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80226b6:	4603      	mov	r3, r0
 80226b8:	4605      	mov	r5, r0
 80226ba:	e782      	b.n	80225c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80226bc:	4603      	mov	r3, r0
 80226be:	e780      	b.n	80225c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080226c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226c4:	b099      	sub	sp, #100	; 0x64
 80226c6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80226ca:	9215      	str	r2, [sp, #84]	; 0x54
 80226cc:	9309      	str	r3, [sp, #36]	; 0x24
 80226ce:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80226d0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80226d4:	930d      	str	r3, [sp, #52]	; 0x34
 80226d6:	910c      	str	r1, [sp, #48]	; 0x30
 80226d8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80226dc:	9016      	str	r0, [sp, #88]	; 0x58
 80226de:	6850      	ldr	r0, [r2, #4]
 80226e0:	6812      	ldr	r2, [r2, #0]
 80226e2:	fb00 1303 	mla	r3, r0, r3, r1
 80226e6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80226ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226ec:	681b      	ldr	r3, [r3, #0]
 80226ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80226f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226f2:	685e      	ldr	r6, [r3, #4]
 80226f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80226f6:	43db      	mvns	r3, r3
 80226f8:	b2db      	uxtb	r3, r3
 80226fa:	3604      	adds	r6, #4
 80226fc:	930a      	str	r3, [sp, #40]	; 0x28
 80226fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022700:	2b00      	cmp	r3, #0
 8022702:	dc03      	bgt.n	802270c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022704:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8022706:	2b00      	cmp	r3, #0
 8022708:	f340 8225 	ble.w	8022b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802270c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802270e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022712:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022716:	1e48      	subs	r0, r1, #1
 8022718:	1e57      	subs	r7, r2, #1
 802271a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802271c:	2b00      	cmp	r3, #0
 802271e:	f340 80e3 	ble.w	80228e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8022722:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8022726:	ea4f 4325 	mov.w	r3, r5, asr #16
 802272a:	d406      	bmi.n	802273a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802272c:	4584      	cmp	ip, r0
 802272e:	da04      	bge.n	802273a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022730:	2b00      	cmp	r3, #0
 8022732:	db02      	blt.n	802273a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022734:	42bb      	cmp	r3, r7
 8022736:	f2c0 80d8 	blt.w	80228ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802273a:	f11c 0c01 	adds.w	ip, ip, #1
 802273e:	f100 80c9 	bmi.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022742:	4561      	cmp	r1, ip
 8022744:	f2c0 80c6 	blt.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022748:	3301      	adds	r3, #1
 802274a:	f100 80c3 	bmi.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802274e:	429a      	cmp	r2, r3
 8022750:	f2c0 80c0 	blt.w	80228d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022754:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8022758:	4647      	mov	r7, r8
 802275a:	f1bb 0f00 	cmp.w	fp, #0
 802275e:	f340 80e3 	ble.w	8022928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8022762:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8022764:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022766:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802276a:	689b      	ldr	r3, [r3, #8]
 802276c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8022770:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022774:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8022778:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802277c:	f100 8121 	bmi.w	80229c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022780:	f103 39ff 	add.w	r9, r3, #4294967295
 8022784:	454a      	cmp	r2, r9
 8022786:	f280 811c 	bge.w	80229c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802278a:	f1bc 0f00 	cmp.w	ip, #0
 802278e:	f2c0 8118 	blt.w	80229c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8022792:	f10e 39ff 	add.w	r9, lr, #4294967295
 8022796:	45cc      	cmp	ip, r9
 8022798:	f280 8113 	bge.w	80229c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802279c:	b21b      	sxth	r3, r3
 802279e:	fb0c 2203 	mla	r2, ip, r3, r2
 80227a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227a4:	eb04 0902 	add.w	r9, r4, r2
 80227a8:	5ca2      	ldrb	r2, [r4, r2]
 80227aa:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80227ae:	2800      	cmp	r0, #0
 80227b0:	f000 80fe 	beq.w	80229b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80227b4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80227b8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80227bc:	9211      	str	r2, [sp, #68]	; 0x44
 80227be:	b151      	cbz	r1, 80227d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80227c0:	eb09 0203 	add.w	r2, r9, r3
 80227c4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80227c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80227ce:	7853      	ldrb	r3, [r2, #1]
 80227d0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80227d4:	9312      	str	r3, [sp, #72]	; 0x48
 80227d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80227d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80227da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80227de:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80227e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80227e6:	ea4c 0c03 	orr.w	ip, ip, r3
 80227ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80227ec:	041b      	lsls	r3, r3, #16
 80227ee:	fb10 f201 	smulbb	r2, r0, r1
 80227f2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80227f6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80227fa:	10d2      	asrs	r2, r2, #3
 80227fc:	4323      	orrs	r3, r4
 80227fe:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8022802:	4353      	muls	r3, r2
 8022804:	fb09 330c 	mla	r3, r9, ip, r3
 8022808:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802280c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022810:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022814:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022818:	f1c1 0c10 	rsb	ip, r1, #16
 802281c:	ebac 0c00 	sub.w	ip, ip, r0
 8022820:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022824:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022828:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802282a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802282c:	0418      	lsls	r0, r3, #16
 802282e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022832:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022836:	4318      	orrs	r0, r3
 8022838:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802283c:	fb02 c200 	mla	r2, r2, r0, ip
 8022840:	0d53      	lsrs	r3, r2, #21
 8022842:	0952      	lsrs	r2, r2, #5
 8022844:	8838      	ldrh	r0, [r7, #0]
 8022846:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802284a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802284e:	431a      	orrs	r2, r3
 8022850:	b292      	uxth	r2, r2
 8022852:	1201      	asrs	r1, r0, #8
 8022854:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8022858:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802285c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022860:	fb11 f104 	smulbb	r1, r1, r4
 8022864:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022868:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802286c:	00c0      	lsls	r0, r0, #3
 802286e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8022872:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022876:	10d1      	asrs	r1, r2, #3
 8022878:	b2c0      	uxtb	r0, r0
 802287a:	00d2      	lsls	r2, r2, #3
 802287c:	b2d2      	uxtb	r2, r2
 802287e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022882:	fb1e fe04 	smulbb	lr, lr, r4
 8022886:	fb10 f004 	smulbb	r0, r0, r4
 802288a:	fa1f fc8c 	uxth.w	ip, ip
 802288e:	fb01 e103 	mla	r1, r1, r3, lr
 8022892:	fb02 0303 	mla	r3, r2, r3, r0
 8022896:	b29a      	uxth	r2, r3
 8022898:	f10c 0301 	add.w	r3, ip, #1
 802289c:	b289      	uxth	r1, r1
 802289e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80228a2:	1c53      	adds	r3, r2, #1
 80228a4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80228a8:	1c4a      	adds	r2, r1, #1
 80228aa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80228ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80228b2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80228b6:	0949      	lsrs	r1, r1, #5
 80228b8:	ea43 030c 	orr.w	r3, r3, ip
 80228bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80228c0:	430b      	orrs	r3, r1
 80228c2:	803b      	strh	r3, [r7, #0]
 80228c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228c6:	449a      	add	sl, r3
 80228c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228ca:	3702      	adds	r7, #2
 80228cc:	441d      	add	r5, r3
 80228ce:	f10b 3bff 	add.w	fp, fp, #4294967295
 80228d2:	e742      	b.n	802275a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80228d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80228d6:	449a      	add	sl, r3
 80228d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80228da:	441d      	add	r5, r3
 80228dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228de:	3b01      	subs	r3, #1
 80228e0:	9309      	str	r3, [sp, #36]	; 0x24
 80228e2:	f108 0802 	add.w	r8, r8, #2
 80228e6:	e718      	b.n	802271a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80228e8:	d023      	beq.n	8022932 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80228ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228ec:	9825      	ldr	r0, [sp, #148]	; 0x94
 80228ee:	3b01      	subs	r3, #1
 80228f0:	fb00 a003 	mla	r0, r0, r3, sl
 80228f4:	1400      	asrs	r0, r0, #16
 80228f6:	f53f af2d 	bmi.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80228fa:	3901      	subs	r1, #1
 80228fc:	4288      	cmp	r0, r1
 80228fe:	f6bf af29 	bge.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022902:	9926      	ldr	r1, [sp, #152]	; 0x98
 8022904:	fb01 5303 	mla	r3, r1, r3, r5
 8022908:	141b      	asrs	r3, r3, #16
 802290a:	f53f af23 	bmi.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802290e:	3a01      	subs	r2, #1
 8022910:	4293      	cmp	r3, r2
 8022912:	f6bf af1f 	bge.w	8022754 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022916:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802291a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802291e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8022922:	f1be 0f00 	cmp.w	lr, #0
 8022926:	dc6c      	bgt.n	8022a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022928:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802292a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802292e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8022932:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022934:	2b00      	cmp	r3, #0
 8022936:	f340 810e 	ble.w	8022b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802293a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802293e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022942:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022946:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022948:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802294c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022950:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022954:	eef0 6a62 	vmov.f32	s13, s5
 8022958:	ee61 7a27 	vmul.f32	s15, s2, s15
 802295c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022960:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022964:	ee16 aa90 	vmov	sl, s13
 8022968:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802296c:	eef0 6a43 	vmov.f32	s13, s6
 8022970:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022974:	ee12 2a90 	vmov	r2, s5
 8022978:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802297c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022980:	ee13 2a10 	vmov	r2, s6
 8022984:	9325      	str	r3, [sp, #148]	; 0x94
 8022986:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8022988:	fb92 f3f3 	sdiv	r3, r2, r3
 802298c:	9326      	str	r3, [sp, #152]	; 0x98
 802298e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022990:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8022992:	3b01      	subs	r3, #1
 8022994:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022998:	930c      	str	r3, [sp, #48]	; 0x30
 802299a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802299c:	bf08      	it	eq
 802299e:	4613      	moveq	r3, r2
 80229a0:	ee16 5a90 	vmov	r5, s13
 80229a4:	9309      	str	r3, [sp, #36]	; 0x24
 80229a6:	eeb0 3a67 	vmov.f32	s6, s15
 80229aa:	eef0 2a47 	vmov.f32	s5, s14
 80229ae:	e6a6      	b.n	80226fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80229b0:	2900      	cmp	r1, #0
 80229b2:	f43f af10 	beq.w	80227d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229b6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80229ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80229be:	930f      	str	r3, [sp, #60]	; 0x3c
 80229c0:	e709      	b.n	80227d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80229c2:	f112 0901 	adds.w	r9, r2, #1
 80229c6:	f53f af7d 	bmi.w	80228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229ca:	454b      	cmp	r3, r9
 80229cc:	f6ff af7a 	blt.w	80228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229d0:	f11c 0901 	adds.w	r9, ip, #1
 80229d4:	f53f af76 	bmi.w	80228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229d8:	45ce      	cmp	lr, r9
 80229da:	f6ff af73 	blt.w	80228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80229de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229e0:	9202      	str	r2, [sp, #8]
 80229e2:	b21b      	sxth	r3, r3
 80229e4:	fa0f f28e 	sxth.w	r2, lr
 80229e8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80229ec:	e9cd c003 	strd	ip, r0, [sp, #12]
 80229f0:	9201      	str	r2, [sp, #4]
 80229f2:	9300      	str	r3, [sp, #0]
 80229f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80229f6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80229f8:	4633      	mov	r3, r6
 80229fa:	4639      	mov	r1, r7
 80229fc:	f7ff fd8e 	bl	802251c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8022a00:	e760      	b.n	80228c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8022a02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022a04:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022a06:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022a0a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8022a0e:	1429      	asrs	r1, r5, #16
 8022a10:	fb03 2101 	mla	r1, r3, r1, r2
 8022a14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022a16:	440a      	add	r2, r1
 8022a18:	5c61      	ldrb	r1, [r4, r1]
 8022a1a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8022a1e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022a22:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8022a26:	f1bc 0f00 	cmp.w	ip, #0
 8022a2a:	f000 808c 	beq.w	8022b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8022a2e:	7857      	ldrb	r7, [r2, #1]
 8022a30:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8022a34:	9413      	str	r4, [sp, #76]	; 0x4c
 8022a36:	b140      	cbz	r0, 8022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022a38:	18d7      	adds	r7, r2, r3
 8022a3a:	5cd3      	ldrb	r3, [r2, r3]
 8022a3c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a40:	9310      	str	r3, [sp, #64]	; 0x40
 8022a42:	787b      	ldrb	r3, [r7, #1]
 8022a44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022a48:	9314      	str	r3, [sp, #80]	; 0x50
 8022a4a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8022a4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022a4e:	fb1c f200 	smulbb	r2, ip, r0
 8022a52:	041f      	lsls	r7, r3, #16
 8022a54:	10d2      	asrs	r2, r2, #3
 8022a56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a5a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8022a5e:	431f      	orrs	r7, r3
 8022a60:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8022a64:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a66:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8022a68:	041b      	lsls	r3, r3, #16
 8022a6a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8022a6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022a72:	ea43 030b 	orr.w	r3, r3, fp
 8022a76:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022a78:	4353      	muls	r3, r2
 8022a7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022a7e:	fb04 3707 	mla	r7, r4, r7, r3
 8022a82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022a86:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022a8a:	ea43 0b01 	orr.w	fp, r3, r1
 8022a8e:	f1c0 0110 	rsb	r1, r0, #16
 8022a92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022a94:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022a96:	eba1 0c0c 	sub.w	ip, r1, ip
 8022a9a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022a9e:	fb0c 770b 	mla	r7, ip, fp, r7
 8022aa2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022aa6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8022aaa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022aae:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022ab2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8022ab6:	fb02 770c 	mla	r7, r2, ip, r7
 8022aba:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022abc:	0d79      	lsrs	r1, r7, #21
 8022abe:	097f      	lsrs	r7, r7, #5
 8022ac0:	8812      	ldrh	r2, [r2, #0]
 8022ac2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022ac6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022aca:	430f      	orrs	r7, r1
 8022acc:	b2bb      	uxth	r3, r7
 8022ace:	1211      	asrs	r1, r2, #8
 8022ad0:	1218      	asrs	r0, r3, #8
 8022ad2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ad6:	fb11 f104 	smulbb	r1, r1, r4
 8022ada:	10d7      	asrs	r7, r2, #3
 8022adc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022ae0:	00d2      	lsls	r2, r2, #3
 8022ae2:	fb00 1009 	mla	r0, r0, r9, r1
 8022ae6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022aea:	10d9      	asrs	r1, r3, #3
 8022aec:	b2d2      	uxtb	r2, r2
 8022aee:	00db      	lsls	r3, r3, #3
 8022af0:	fb17 f704 	smulbb	r7, r7, r4
 8022af4:	fb12 f204 	smulbb	r2, r2, r4
 8022af8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022afc:	b2db      	uxtb	r3, r3
 8022afe:	b280      	uxth	r0, r0
 8022b00:	fb01 7109 	mla	r1, r1, r9, r7
 8022b04:	fb03 2309 	mla	r3, r3, r9, r2
 8022b08:	b29b      	uxth	r3, r3
 8022b0a:	b289      	uxth	r1, r1
 8022b0c:	1c42      	adds	r2, r0, #1
 8022b0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022b12:	1c4f      	adds	r7, r1, #1
 8022b14:	1c5a      	adds	r2, r3, #1
 8022b16:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022b1a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022b1e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022b22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022b26:	0949      	lsrs	r1, r1, #5
 8022b28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022b2a:	4310      	orrs	r0, r2
 8022b2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022b30:	4308      	orrs	r0, r1
 8022b32:	f823 0b02 	strh.w	r0, [r3], #2
 8022b36:	930e      	str	r3, [sp, #56]	; 0x38
 8022b38:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b3a:	449a      	add	sl, r3
 8022b3c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8022b3e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022b42:	441d      	add	r5, r3
 8022b44:	e6ed      	b.n	8022922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8022b46:	2800      	cmp	r0, #0
 8022b48:	f43f af7f 	beq.w	8022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b4c:	5cd3      	ldrb	r3, [r2, r3]
 8022b4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8022b52:	9310      	str	r3, [sp, #64]	; 0x40
 8022b54:	e779      	b.n	8022a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022b56:	b019      	add	sp, #100	; 0x64
 8022b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8022b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022b60:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8022b64:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8022b68:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8022b6c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8022b70:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022b74:	8808      	ldrh	r0, [r1, #0]
 8022b76:	fb08 470e 	mla	r7, r8, lr, r4
 8022b7a:	f1b8 0f00 	cmp.w	r8, #0
 8022b7e:	eb02 0907 	add.w	r9, r2, r7
 8022b82:	db67      	blt.n	8022c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022b84:	45c2      	cmp	sl, r8
 8022b86:	dd65      	ble.n	8022c54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8022b88:	2c00      	cmp	r4, #0
 8022b8a:	db61      	blt.n	8022c50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022b8c:	45a6      	cmp	lr, r4
 8022b8e:	dd5f      	ble.n	8022c50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8022b90:	5dd2      	ldrb	r2, [r2, r7]
 8022b92:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8022b96:	1c62      	adds	r2, r4, #1
 8022b98:	d45f      	bmi.n	8022c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022b9a:	4596      	cmp	lr, r2
 8022b9c:	dd5d      	ble.n	8022c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022b9e:	2d00      	cmp	r5, #0
 8022ba0:	d05b      	beq.n	8022c5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8022ba2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8022ba6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8022baa:	f118 0801 	adds.w	r8, r8, #1
 8022bae:	d458      	bmi.n	8022c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bb0:	45c2      	cmp	sl, r8
 8022bb2:	dd56      	ble.n	8022c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bb4:	2e00      	cmp	r6, #0
 8022bb6:	d054      	beq.n	8022c62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8022bb8:	2c00      	cmp	r4, #0
 8022bba:	db50      	blt.n	8022c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022bbc:	45a6      	cmp	lr, r4
 8022bbe:	dd4e      	ble.n	8022c5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8022bc0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8022bc4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8022bc8:	3401      	adds	r4, #1
 8022bca:	d407      	bmi.n	8022bdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bcc:	45a6      	cmp	lr, r4
 8022bce:	dd05      	ble.n	8022bdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bd0:	b125      	cbz	r5, 8022bdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8022bd2:	44ce      	add	lr, r9
 8022bd4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8022bd8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8022bdc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022be0:	fb15 f406 	smulbb	r4, r5, r6
 8022be4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022be8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022bec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022bf0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022bf4:	ea43 0c0c 	orr.w	ip, r3, ip
 8022bf8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022bfc:	f1c6 0310 	rsb	r3, r6, #16
 8022c00:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022c04:	1b5b      	subs	r3, r3, r5
 8022c06:	ea4e 0707 	orr.w	r7, lr, r7
 8022c0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022c0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022c12:	437d      	muls	r5, r7
 8022c14:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022c18:	0403      	lsls	r3, r0, #16
 8022c1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c22:	4318      	orrs	r0, r3
 8022c24:	0413      	lsls	r3, r2, #16
 8022c26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022c2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022c2e:	4313      	orrs	r3, r2
 8022c30:	fb04 c000 	mla	r0, r4, r0, ip
 8022c34:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022c38:	fb06 0003 	mla	r0, r6, r3, r0
 8022c3c:	0d43      	lsrs	r3, r0, #21
 8022c3e:	0940      	lsrs	r0, r0, #5
 8022c40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022c44:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c48:	4318      	orrs	r0, r3
 8022c4a:	8008      	strh	r0, [r1, #0]
 8022c4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022c50:	4684      	mov	ip, r0
 8022c52:	e7a0      	b.n	8022b96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8022c54:	4607      	mov	r7, r0
 8022c56:	4684      	mov	ip, r0
 8022c58:	e7a7      	b.n	8022baa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c5a:	4607      	mov	r7, r0
 8022c5c:	e7a5      	b.n	8022baa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8022c5e:	4602      	mov	r2, r0
 8022c60:	e7b2      	b.n	8022bc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8022c62:	4602      	mov	r2, r0
 8022c64:	e7ba      	b.n	8022bdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08022c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c6a:	b093      	sub	sp, #76	; 0x4c
 8022c6c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022c70:	920f      	str	r2, [sp, #60]	; 0x3c
 8022c72:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022c74:	9108      	str	r1, [sp, #32]
 8022c76:	9306      	str	r3, [sp, #24]
 8022c78:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8022c7c:	9010      	str	r0, [sp, #64]	; 0x40
 8022c7e:	6850      	ldr	r0, [r2, #4]
 8022c80:	6812      	ldr	r2, [r2, #0]
 8022c82:	fb00 1303 	mla	r3, r0, r3, r1
 8022c86:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022c8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c8c:	681b      	ldr	r3, [r3, #0]
 8022c8e:	9307      	str	r3, [sp, #28]
 8022c90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c92:	685f      	ldr	r7, [r3, #4]
 8022c94:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022c98:	3704      	adds	r7, #4
 8022c9a:	9b08      	ldr	r3, [sp, #32]
 8022c9c:	2b00      	cmp	r3, #0
 8022c9e:	dc03      	bgt.n	8022ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022ca0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022ca2:	2b00      	cmp	r3, #0
 8022ca4:	f340 81b2 	ble.w	802300c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022ca8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022caa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022cae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022cb2:	1e48      	subs	r0, r1, #1
 8022cb4:	f102 3cff 	add.w	ip, r2, #4294967295
 8022cb8:	9b06      	ldr	r3, [sp, #24]
 8022cba:	2b00      	cmp	r3, #0
 8022cbc:	f340 80a9 	ble.w	8022e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8022cc0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022cc4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022cc8:	d406      	bmi.n	8022cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cca:	4586      	cmp	lr, r0
 8022ccc:	da04      	bge.n	8022cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cce:	2b00      	cmp	r3, #0
 8022cd0:	db02      	blt.n	8022cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022cd2:	4563      	cmp	r3, ip
 8022cd4:	f2c0 809e 	blt.w	8022e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8022cd8:	f11e 0e01 	adds.w	lr, lr, #1
 8022cdc:	f100 808f 	bmi.w	8022dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022ce0:	4571      	cmp	r1, lr
 8022ce2:	f2c0 808c 	blt.w	8022dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022ce6:	3301      	adds	r3, #1
 8022ce8:	f100 8089 	bmi.w	8022dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cec:	429a      	cmp	r2, r3
 8022cee:	f2c0 8086 	blt.w	8022dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022cf2:	f8dd b018 	ldr.w	fp, [sp, #24]
 8022cf6:	46c8      	mov	r8, r9
 8022cf8:	f1bb 0f00 	cmp.w	fp, #0
 8022cfc:	f340 80a6 	ble.w	8022e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022d00:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8022d02:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022d04:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022d08:	689b      	ldr	r3, [r3, #8]
 8022d0a:	1422      	asrs	r2, r4, #16
 8022d0c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022d10:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022d14:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022d18:	f100 80e3 	bmi.w	8022ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d1c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022d20:	4552      	cmp	r2, sl
 8022d22:	f280 80de 	bge.w	8022ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d26:	f1bc 0f00 	cmp.w	ip, #0
 8022d2a:	f2c0 80da 	blt.w	8022ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d2e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022d32:	45d4      	cmp	ip, sl
 8022d34:	f280 80d5 	bge.w	8022ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8022d38:	b21b      	sxth	r3, r3
 8022d3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8022d3e:	9d07      	ldr	r5, [sp, #28]
 8022d40:	eb05 0a02 	add.w	sl, r5, r2
 8022d44:	5caa      	ldrb	r2, [r5, r2]
 8022d46:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8022d4a:	2800      	cmp	r0, #0
 8022d4c:	f000 80c0 	beq.w	8022ed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8022d50:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8022d54:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8022d58:	920b      	str	r2, [sp, #44]	; 0x2c
 8022d5a:	b151      	cbz	r1, 8022d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022d5c:	eb0a 0203 	add.w	r2, sl, r3
 8022d60:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022d64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d68:	9309      	str	r3, [sp, #36]	; 0x24
 8022d6a:	7853      	ldrb	r3, [r2, #1]
 8022d6c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022d70:	930c      	str	r3, [sp, #48]	; 0x30
 8022d72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022d74:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8022d76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022d7a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022d7e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022d82:	ea4c 0c03 	orr.w	ip, ip, r3
 8022d86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022d88:	041b      	lsls	r3, r3, #16
 8022d8a:	fb10 f201 	smulbb	r2, r0, r1
 8022d8e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d92:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022d96:	10d2      	asrs	r2, r2, #3
 8022d98:	432b      	orrs	r3, r5
 8022d9a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8022d9e:	4353      	muls	r3, r2
 8022da0:	fb0a 330c 	mla	r3, sl, ip, r3
 8022da4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8022da8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022dac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022db0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8022db4:	f1c1 0c10 	rsb	ip, r1, #16
 8022db8:	ebac 0c00 	sub.w	ip, ip, r0
 8022dbc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8022dc0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8022dc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022dc6:	0418      	lsls	r0, r3, #16
 8022dc8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022dcc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022dd0:	4318      	orrs	r0, r3
 8022dd2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8022dd6:	fb02 c200 	mla	r2, r2, r0, ip
 8022dda:	0d53      	lsrs	r3, r2, #21
 8022ddc:	0952      	lsrs	r2, r2, #5
 8022dde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022de2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022de6:	431a      	orrs	r2, r3
 8022de8:	f8a8 2000 	strh.w	r2, [r8]
 8022dec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022dee:	441c      	add	r4, r3
 8022df0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022df2:	f108 0802 	add.w	r8, r8, #2
 8022df6:	441e      	add	r6, r3
 8022df8:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022dfc:	e77c      	b.n	8022cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022dfe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022e00:	441c      	add	r4, r3
 8022e02:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e04:	441e      	add	r6, r3
 8022e06:	9b06      	ldr	r3, [sp, #24]
 8022e08:	3b01      	subs	r3, #1
 8022e0a:	9306      	str	r3, [sp, #24]
 8022e0c:	f109 0902 	add.w	r9, r9, #2
 8022e10:	e752      	b.n	8022cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022e12:	d020      	beq.n	8022e56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022e14:	9b06      	ldr	r3, [sp, #24]
 8022e16:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022e18:	3b01      	subs	r3, #1
 8022e1a:	fb00 4003 	mla	r0, r0, r3, r4
 8022e1e:	1400      	asrs	r0, r0, #16
 8022e20:	f53f af67 	bmi.w	8022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e24:	3901      	subs	r1, #1
 8022e26:	4288      	cmp	r0, r1
 8022e28:	f6bf af63 	bge.w	8022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e2c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022e2e:	fb01 6303 	mla	r3, r1, r3, r6
 8022e32:	141b      	asrs	r3, r3, #16
 8022e34:	f53f af5d 	bmi.w	8022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e38:	3a01      	subs	r2, #1
 8022e3a:	4293      	cmp	r3, r2
 8022e3c:	f6bf af59 	bge.w	8022cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8022e40:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8022e44:	46ca      	mov	sl, r9
 8022e46:	f1b8 0f00 	cmp.w	r8, #0
 8022e4a:	dc67      	bgt.n	8022f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8022e4c:	9b06      	ldr	r3, [sp, #24]
 8022e4e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022e52:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022e56:	9b08      	ldr	r3, [sp, #32]
 8022e58:	2b00      	cmp	r3, #0
 8022e5a:	f340 80d7 	ble.w	802300c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8022e5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022e62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022e66:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022e6a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022e70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022e74:	eeb0 6a62 	vmov.f32	s12, s5
 8022e78:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022e7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022e80:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022e84:	ee16 4a10 	vmov	r4, s12
 8022e88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022e8c:	eeb0 6a43 	vmov.f32	s12, s6
 8022e90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e94:	ee12 2a90 	vmov	r2, s5
 8022e98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ea0:	ee13 2a10 	vmov	r2, s6
 8022ea4:	931f      	str	r3, [sp, #124]	; 0x7c
 8022ea6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ea8:	fb92 f3f3 	sdiv	r3, r2, r3
 8022eac:	9320      	str	r3, [sp, #128]	; 0x80
 8022eae:	9b08      	ldr	r3, [sp, #32]
 8022eb0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022eb2:	3b01      	subs	r3, #1
 8022eb4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022eb8:	9308      	str	r3, [sp, #32]
 8022eba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022ebc:	bf08      	it	eq
 8022ebe:	4613      	moveq	r3, r2
 8022ec0:	ee16 6a10 	vmov	r6, s12
 8022ec4:	9306      	str	r3, [sp, #24]
 8022ec6:	eeb0 3a67 	vmov.f32	s6, s15
 8022eca:	eef0 2a47 	vmov.f32	s5, s14
 8022ece:	e6e4      	b.n	8022c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022ed0:	2900      	cmp	r1, #0
 8022ed2:	f43f af4e 	beq.w	8022d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ed6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8022eda:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022ede:	9309      	str	r3, [sp, #36]	; 0x24
 8022ee0:	e747      	b.n	8022d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8022ee2:	f112 0a01 	adds.w	sl, r2, #1
 8022ee6:	d481      	bmi.n	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ee8:	4553      	cmp	r3, sl
 8022eea:	f6ff af7f 	blt.w	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022eee:	f11c 0a01 	adds.w	sl, ip, #1
 8022ef2:	f53f af7b 	bmi.w	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ef6:	45d6      	cmp	lr, sl
 8022ef8:	f6ff af78 	blt.w	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022efc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8022f00:	b21b      	sxth	r3, r3
 8022f02:	fa0f f28e 	sxth.w	r2, lr
 8022f06:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8022f0a:	9201      	str	r2, [sp, #4]
 8022f0c:	9300      	str	r3, [sp, #0]
 8022f0e:	9a07      	ldr	r2, [sp, #28]
 8022f10:	9810      	ldr	r0, [sp, #64]	; 0x40
 8022f12:	463b      	mov	r3, r7
 8022f14:	4641      	mov	r1, r8
 8022f16:	f7ff fe21 	bl	8022b5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022f1a:	e767      	b.n	8022dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022f1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f1e:	9d07      	ldr	r5, [sp, #28]
 8022f20:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022f24:	1422      	asrs	r2, r4, #16
 8022f26:	1431      	asrs	r1, r6, #16
 8022f28:	fb03 2101 	mla	r1, r3, r1, r2
 8022f2c:	9a07      	ldr	r2, [sp, #28]
 8022f2e:	440a      	add	r2, r1
 8022f30:	5c69      	ldrb	r1, [r5, r1]
 8022f32:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8022f36:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022f3a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8022f3e:	f1be 0f00 	cmp.w	lr, #0
 8022f42:	d05c      	beq.n	8022ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8022f44:	f892 c001 	ldrb.w	ip, [r2, #1]
 8022f48:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8022f4c:	950d      	str	r5, [sp, #52]	; 0x34
 8022f4e:	b150      	cbz	r0, 8022f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8022f50:	eb02 0c03 	add.w	ip, r2, r3
 8022f54:	5cd3      	ldrb	r3, [r2, r3]
 8022f56:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f5a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f5c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8022f60:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8022f64:	930e      	str	r3, [sp, #56]	; 0x38
 8022f66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022f68:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8022f6a:	fb1e f200 	smulbb	r2, lr, r0
 8022f6e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8022f72:	10d2      	asrs	r2, r2, #3
 8022f74:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f78:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8022f7c:	ea4c 0c03 	orr.w	ip, ip, r3
 8022f80:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8022f84:	9311      	str	r3, [sp, #68]	; 0x44
 8022f86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022f88:	041b      	lsls	r3, r3, #16
 8022f8a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8022f8e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022f92:	ea43 030b 	orr.w	r3, r3, fp
 8022f96:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022f98:	4353      	muls	r3, r2
 8022f9a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022f9e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8022fa2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022fa6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8022faa:	ea43 0b01 	orr.w	fp, r3, r1
 8022fae:	f1c0 0110 	rsb	r1, r0, #16
 8022fb2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022fb4:	eba1 0e0e 	sub.w	lr, r1, lr
 8022fb8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8022fbc:	fb0e cc0b 	mla	ip, lr, fp, ip
 8022fc0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8022fc4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8022fc8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022fcc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8022fd0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8022fd4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022fd8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8022fdc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022fe0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022fe4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022fe8:	ea43 0c0c 	orr.w	ip, r3, ip
 8022fec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022fee:	f82a cb02 	strh.w	ip, [sl], #2
 8022ff2:	441c      	add	r4, r3
 8022ff4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ff6:	f108 38ff 	add.w	r8, r8, #4294967295
 8022ffa:	441e      	add	r6, r3
 8022ffc:	e723      	b.n	8022e46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8022ffe:	2800      	cmp	r0, #0
 8023000:	d0b1      	beq.n	8022f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8023002:	5cd3      	ldrb	r3, [r2, r3]
 8023004:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023008:	930a      	str	r3, [sp, #40]	; 0x28
 802300a:	e7ac      	b.n	8022f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802300c:	b013      	add	sp, #76	; 0x4c
 802300e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023012 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8023012:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023016:	880d      	ldrh	r5, [r1, #0]
 8023018:	b087      	sub	sp, #28
 802301a:	10ef      	asrs	r7, r5, #3
 802301c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8023020:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023024:	00ed      	lsls	r5, r5, #3
 8023026:	9701      	str	r7, [sp, #4]
 8023028:	b2ed      	uxtb	r5, r5
 802302a:	9502      	str	r5, [sp, #8]
 802302c:	9d01      	ldr	r5, [sp, #4]
 802302e:	9103      	str	r1, [sp, #12]
 8023030:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8023034:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8023038:	9902      	ldr	r1, [sp, #8]
 802303a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802303e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8023042:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8023046:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802304a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802304e:	022d      	lsls	r5, r5, #8
 8023050:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8023054:	fb06 0709 	mla	r7, r6, r9, r0
 8023058:	430d      	orrs	r5, r1
 802305a:	2e00      	cmp	r6, #0
 802305c:	eb02 0c07 	add.w	ip, r2, r7
 8023060:	9505      	str	r5, [sp, #20]
 8023062:	f2c0 80b6 	blt.w	80231d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8023066:	45b3      	cmp	fp, r6
 8023068:	f340 80b3 	ble.w	80231d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802306c:	2800      	cmp	r0, #0
 802306e:	f2c0 80ae 	blt.w	80231ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023072:	4581      	cmp	r9, r0
 8023074:	f340 80ab 	ble.w	80231ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8023078:	5dd7      	ldrb	r7, [r2, r7]
 802307a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802307e:	441f      	add	r7, r3
 8023080:	1c42      	adds	r2, r0, #1
 8023082:	f100 80a9 	bmi.w	80231d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023086:	4591      	cmp	r9, r2
 8023088:	f340 80a6 	ble.w	80231d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802308c:	2c00      	cmp	r4, #0
 802308e:	f000 80a3 	beq.w	80231d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8023092:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023096:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802309a:	441d      	add	r5, r3
 802309c:	3601      	adds	r6, #1
 802309e:	f100 809f 	bmi.w	80231e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230a2:	45b3      	cmp	fp, r6
 80230a4:	f340 809c 	ble.w	80231e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230a8:	f1be 0f00 	cmp.w	lr, #0
 80230ac:	f000 8098 	beq.w	80231e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80230b0:	2800      	cmp	r0, #0
 80230b2:	f2c0 8093 	blt.w	80231dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80230b6:	4581      	cmp	r9, r0
 80230b8:	f340 8090 	ble.w	80231dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80230bc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80230c0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80230c4:	441e      	add	r6, r3
 80230c6:	3001      	adds	r0, #1
 80230c8:	f100 808d 	bmi.w	80231e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230cc:	4581      	cmp	r9, r0
 80230ce:	f340 808a 	ble.w	80231e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230d2:	2c00      	cmp	r4, #0
 80230d4:	f000 8087 	beq.w	80231e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80230d8:	44e1      	add	r9, ip
 80230da:	f899 2001 	ldrb.w	r2, [r9, #1]
 80230de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80230e2:	4413      	add	r3, r2
 80230e4:	b2a4      	uxth	r4, r4
 80230e6:	fa1f fe8e 	uxth.w	lr, lr
 80230ea:	fb04 fb0e 	mul.w	fp, r4, lr
 80230ee:	0124      	lsls	r4, r4, #4
 80230f0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 80230f4:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 80230f8:	eba4 040b 	sub.w	r4, r4, fp
 80230fc:	fa1f f08e 	uxth.w	r0, lr
 8023100:	b2a2      	uxth	r2, r4
 8023102:	78ac      	ldrb	r4, [r5, #2]
 8023104:	f897 c002 	ldrb.w	ip, [r7, #2]
 8023108:	9901      	ldr	r1, [sp, #4]
 802310a:	eba9 0900 	sub.w	r9, r9, r0
 802310e:	fa1f f989 	uxth.w	r9, r9
 8023112:	4354      	muls	r4, r2
 8023114:	fb09 440c 	mla	r4, r9, ip, r4
 8023118:	f896 c002 	ldrb.w	ip, [r6, #2]
 802311c:	fb00 440c 	mla	r4, r0, ip, r4
 8023120:	f893 c002 	ldrb.w	ip, [r3, #2]
 8023124:	fa1f fe88 	uxth.w	lr, r8
 8023128:	ea6f 0808 	mvn.w	r8, r8
 802312c:	fa5f f888 	uxtb.w	r8, r8
 8023130:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8023134:	fb1a fa08 	smulbb	sl, sl, r8
 8023138:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802313c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8023140:	f895 a001 	ldrb.w	sl, [r5, #1]
 8023144:	787c      	ldrb	r4, [r7, #1]
 8023146:	782d      	ldrb	r5, [r5, #0]
 8023148:	783f      	ldrb	r7, [r7, #0]
 802314a:	fb02 fa0a 	mul.w	sl, r2, sl
 802314e:	fb09 aa04 	mla	sl, r9, r4, sl
 8023152:	7874      	ldrb	r4, [r6, #1]
 8023154:	436a      	muls	r2, r5
 8023156:	7835      	ldrb	r5, [r6, #0]
 8023158:	fb00 aa04 	mla	sl, r0, r4, sl
 802315c:	fb09 2207 	mla	r2, r9, r7, r2
 8023160:	785c      	ldrb	r4, [r3, #1]
 8023162:	781b      	ldrb	r3, [r3, #0]
 8023164:	fb00 2005 	mla	r0, r0, r5, r2
 8023168:	fb0b a404 	mla	r4, fp, r4, sl
 802316c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8023170:	9b02      	ldr	r3, [sp, #8]
 8023172:	fb11 fa08 	smulbb	sl, r1, r8
 8023176:	fa1f fc8c 	uxth.w	ip, ip
 802317a:	fb13 f808 	smulbb	r8, r3, r8
 802317e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8023182:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8023186:	fb04 a40e 	mla	r4, r4, lr, sl
 802318a:	f10c 0301 	add.w	r3, ip, #1
 802318e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8023192:	fa1f fe8e 	uxth.w	lr, lr
 8023196:	b2a4      	uxth	r4, r4
 8023198:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802319c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80231a0:	f104 0a01 	add.w	sl, r4, #1
 80231a4:	f10e 0c01 	add.w	ip, lr, #1
 80231a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80231ac:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80231b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80231b4:	0964      	lsrs	r4, r4, #5
 80231b6:	ea4c 0c03 	orr.w	ip, ip, r3
 80231ba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80231be:	9b03      	ldr	r3, [sp, #12]
 80231c0:	ea4c 0c04 	orr.w	ip, ip, r4
 80231c4:	f8a3 c000 	strh.w	ip, [r3]
 80231c8:	b007      	add	sp, #28
 80231ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231ce:	af05      	add	r7, sp, #20
 80231d0:	e756      	b.n	8023080 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80231d2:	ad05      	add	r5, sp, #20
 80231d4:	462f      	mov	r7, r5
 80231d6:	e761      	b.n	802309c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231d8:	ad05      	add	r5, sp, #20
 80231da:	e75f      	b.n	802309c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80231dc:	ae05      	add	r6, sp, #20
 80231de:	e772      	b.n	80230c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80231e0:	ab05      	add	r3, sp, #20
 80231e2:	461e      	mov	r6, r3
 80231e4:	e77e      	b.n	80230e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 80231e6:	ab05      	add	r3, sp, #20
 80231e8:	e77c      	b.n	80230e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

080231ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80231ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80231ee:	b095      	sub	sp, #84	; 0x54
 80231f0:	9212      	str	r2, [sp, #72]	; 0x48
 80231f2:	9309      	str	r3, [sp, #36]	; 0x24
 80231f4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80231f6:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80231fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80231fc:	910e      	str	r1, [sp, #56]	; 0x38
 80231fe:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8023202:	9013      	str	r0, [sp, #76]	; 0x4c
 8023204:	6850      	ldr	r0, [r2, #4]
 8023206:	6812      	ldr	r2, [r2, #0]
 8023208:	fb00 1303 	mla	r3, r0, r3, r1
 802320c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023210:	930a      	str	r3, [sp, #40]	; 0x28
 8023212:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023214:	681b      	ldr	r3, [r3, #0]
 8023216:	930d      	str	r3, [sp, #52]	; 0x34
 8023218:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802321a:	685c      	ldr	r4, [r3, #4]
 802321c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802321e:	43db      	mvns	r3, r3
 8023220:	b2db      	uxtb	r3, r3
 8023222:	3404      	adds	r4, #4
 8023224:	930b      	str	r3, [sp, #44]	; 0x2c
 8023226:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023228:	2b00      	cmp	r3, #0
 802322a:	dc03      	bgt.n	8023234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802322c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802322e:	2b00      	cmp	r3, #0
 8023230:	f340 8255 	ble.w	80236de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023234:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023236:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802323a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802323e:	1e48      	subs	r0, r1, #1
 8023240:	1e55      	subs	r5, r2, #1
 8023242:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023244:	2b00      	cmp	r3, #0
 8023246:	f340 80f9 	ble.w	802343c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802324a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802324c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802324e:	1436      	asrs	r6, r6, #16
 8023250:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023254:	d406      	bmi.n	8023264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023256:	4286      	cmp	r6, r0
 8023258:	da04      	bge.n	8023264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802325a:	2b00      	cmp	r3, #0
 802325c:	db02      	blt.n	8023264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802325e:	42ab      	cmp	r3, r5
 8023260:	f2c0 80ed 	blt.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8023264:	3601      	adds	r6, #1
 8023266:	f100 80da 	bmi.w	802341e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802326a:	42b1      	cmp	r1, r6
 802326c:	f2c0 80d7 	blt.w	802341e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023270:	3301      	adds	r3, #1
 8023272:	f100 80d4 	bmi.w	802341e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8023276:	429a      	cmp	r2, r3
 8023278:	f2c0 80d1 	blt.w	802341e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802327c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802327e:	9311      	str	r3, [sp, #68]	; 0x44
 8023280:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023282:	930c      	str	r3, [sp, #48]	; 0x30
 8023284:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023286:	2b00      	cmp	r3, #0
 8023288:	f340 80fa 	ble.w	8023480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802328c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802328e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023290:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023292:	68c6      	ldr	r6, [r0, #12]
 8023294:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023296:	141d      	asrs	r5, r3, #16
 8023298:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802329c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802329e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80232a0:	1400      	asrs	r0, r0, #16
 80232a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80232a6:	6892      	ldr	r2, [r2, #8]
 80232a8:	f100 813e 	bmi.w	8023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232ac:	1e57      	subs	r7, r2, #1
 80232ae:	42b8      	cmp	r0, r7
 80232b0:	f280 813a 	bge.w	8023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232b4:	2d00      	cmp	r5, #0
 80232b6:	f2c0 8137 	blt.w	8023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232ba:	1e77      	subs	r7, r6, #1
 80232bc:	42bd      	cmp	r5, r7
 80232be:	f280 8133 	bge.w	8023528 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80232c2:	b212      	sxth	r2, r2
 80232c4:	fb05 0002 	mla	r0, r5, r2, r0
 80232c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80232ca:	f815 a000 	ldrb.w	sl, [r5, r0]
 80232ce:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80232d2:	182e      	adds	r6, r5, r0
 80232d4:	eb04 050a 	add.w	r5, r4, sl
 80232d8:	2b00      	cmp	r3, #0
 80232da:	f000 8117 	beq.w	802350c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80232de:	f896 c001 	ldrb.w	ip, [r6, #1]
 80232e2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80232e6:	44a4      	add	ip, r4
 80232e8:	2900      	cmp	r1, #0
 80232ea:	f000 8117 	beq.w	802351c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 80232ee:	18b0      	adds	r0, r6, r2
 80232f0:	5cb2      	ldrb	r2, [r6, r2]
 80232f2:	7840      	ldrb	r0, [r0, #1]
 80232f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80232f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80232fc:	4422      	add	r2, r4
 80232fe:	4420      	add	r0, r4
 8023300:	b29b      	uxth	r3, r3
 8023302:	b289      	uxth	r1, r1
 8023304:	fb03 f901 	mul.w	r9, r3, r1
 8023308:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802330c:	011b      	lsls	r3, r3, #4
 802330e:	b289      	uxth	r1, r1
 8023310:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023314:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023318:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802331a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802331e:	f8b6 e000 	ldrh.w	lr, [r6]
 8023322:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023326:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802332a:	eba3 0309 	sub.w	r3, r3, r9
 802332e:	b29b      	uxth	r3, r3
 8023330:	eba8 0801 	sub.w	r8, r8, r1
 8023334:	fa1f f888 	uxth.w	r8, r8
 8023338:	435f      	muls	r7, r3
 802333a:	fb08 770b 	mla	r7, r8, fp, r7
 802333e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023342:	9310      	str	r3, [sp, #64]	; 0x40
 8023344:	fb01 770b 	mla	r7, r1, fp, r7
 8023348:	f890 b002 	ldrb.w	fp, [r0, #2]
 802334c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802334e:	fb09 770b 	mla	r7, r9, fp, r7
 8023352:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023356:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802335a:	fb1b fb03 	smulbb	fp, fp, r3
 802335e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023362:	fb07 b706 	mla	r7, r7, r6, fp
 8023366:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023368:	f895 b001 	ldrb.w	fp, [r5, #1]
 802336c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023370:	f89c c000 	ldrb.w	ip, [ip]
 8023374:	435d      	muls	r5, r3
 8023376:	fb08 550b 	mla	r5, r8, fp, r5
 802337a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802337e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023380:	fb01 550b 	mla	r5, r1, fp, r5
 8023384:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023388:	fb09 550b 	mla	r5, r9, fp, r5
 802338c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023390:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023394:	fb1b fb03 	smulbb	fp, fp, r3
 8023398:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802339a:	fb03 f30c 	mul.w	r3, r3, ip
 802339e:	f892 c000 	ldrb.w	ip, [r2]
 80233a2:	fb08 330a 	mla	r3, r8, sl, r3
 80233a6:	fb01 330c 	mla	r3, r1, ip, r3
 80233aa:	f890 c000 	ldrb.w	ip, [r0]
 80233ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80233b2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80233b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80233b8:	fa5f fe8e 	uxtb.w	lr, lr
 80233bc:	b2bf      	uxth	r7, r7
 80233be:	fb1e fe03 	smulbb	lr, lr, r3
 80233c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80233c6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80233ca:	fb05 b506 	mla	r5, r5, r6, fp
 80233ce:	1c7b      	adds	r3, r7, #1
 80233d0:	fb0c e606 	mla	r6, ip, r6, lr
 80233d4:	b2ad      	uxth	r5, r5
 80233d6:	b2b6      	uxth	r6, r6
 80233d8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80233dc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80233e0:	f105 0b01 	add.w	fp, r5, #1
 80233e4:	1c77      	adds	r7, r6, #1
 80233e6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80233ea:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80233ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80233f2:	096d      	lsrs	r5, r5, #5
 80233f4:	431f      	orrs	r7, r3
 80233f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80233fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80233fc:	433d      	orrs	r5, r7
 80233fe:	801d      	strh	r5, [r3, #0]
 8023400:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023402:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023404:	3302      	adds	r3, #2
 8023406:	930c      	str	r3, [sp, #48]	; 0x30
 8023408:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802340a:	4413      	add	r3, r2
 802340c:	931f      	str	r3, [sp, #124]	; 0x7c
 802340e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023410:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023412:	4413      	add	r3, r2
 8023414:	9320      	str	r3, [sp, #128]	; 0x80
 8023416:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023418:	3b01      	subs	r3, #1
 802341a:	9311      	str	r3, [sp, #68]	; 0x44
 802341c:	e732      	b.n	8023284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802341e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8023420:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023422:	4433      	add	r3, r6
 8023424:	931f      	str	r3, [sp, #124]	; 0x7c
 8023426:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8023428:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802342a:	4433      	add	r3, r6
 802342c:	9320      	str	r3, [sp, #128]	; 0x80
 802342e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023430:	3b01      	subs	r3, #1
 8023432:	9309      	str	r3, [sp, #36]	; 0x24
 8023434:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023436:	3302      	adds	r3, #2
 8023438:	930a      	str	r3, [sp, #40]	; 0x28
 802343a:	e702      	b.n	8023242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802343c:	d027      	beq.n	802348e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802343e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023440:	9821      	ldr	r0, [sp, #132]	; 0x84
 8023442:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023444:	3b01      	subs	r3, #1
 8023446:	fb00 5003 	mla	r0, r0, r3, r5
 802344a:	1400      	asrs	r0, r0, #16
 802344c:	f53f af16 	bmi.w	802327c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023450:	3901      	subs	r1, #1
 8023452:	4288      	cmp	r0, r1
 8023454:	f6bf af12 	bge.w	802327c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023458:	9922      	ldr	r1, [sp, #136]	; 0x88
 802345a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802345c:	fb01 0303 	mla	r3, r1, r3, r0
 8023460:	141b      	asrs	r3, r3, #16
 8023462:	f53f af0b 	bmi.w	802327c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023466:	3a01      	subs	r2, #1
 8023468:	4293      	cmp	r3, r2
 802346a:	f6bf af07 	bge.w	802327c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802346e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023470:	9311      	str	r3, [sp, #68]	; 0x44
 8023472:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8023476:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023478:	930c      	str	r3, [sp, #48]	; 0x30
 802347a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802347c:	2b00      	cmp	r3, #0
 802347e:	dc70      	bgt.n	8023562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023480:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023482:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023484:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023488:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802348c:	930a      	str	r3, [sp, #40]	; 0x28
 802348e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023490:	2b00      	cmp	r3, #0
 8023492:	f340 8124 	ble.w	80236de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8023496:	ee30 0a04 	vadd.f32	s0, s0, s8
 802349a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802349e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80234a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80234a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80234ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80234b0:	eef0 6a62 	vmov.f32	s13, s5
 80234b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80234b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80234c0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80234c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80234c8:	eef0 6a43 	vmov.f32	s13, s6
 80234cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80234d0:	ee12 2a90 	vmov	r2, s5
 80234d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80234d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80234dc:	ee13 2a10 	vmov	r2, s6
 80234e0:	9321      	str	r3, [sp, #132]	; 0x84
 80234e2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80234e8:	9322      	str	r3, [sp, #136]	; 0x88
 80234ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80234ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80234ee:	3b01      	subs	r3, #1
 80234f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234f4:	930e      	str	r3, [sp, #56]	; 0x38
 80234f6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80234f8:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 80234fc:	bf08      	it	eq
 80234fe:	4613      	moveq	r3, r2
 8023500:	9309      	str	r3, [sp, #36]	; 0x24
 8023502:	eeb0 3a67 	vmov.f32	s6, s15
 8023506:	eef0 2a47 	vmov.f32	s5, s14
 802350a:	e68c      	b.n	8023226 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802350c:	b149      	cbz	r1, 8023522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802350e:	5cb2      	ldrb	r2, [r6, r2]
 8023510:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023514:	4422      	add	r2, r4
 8023516:	4628      	mov	r0, r5
 8023518:	46ac      	mov	ip, r5
 802351a:	e6f1      	b.n	8023300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802351c:	4628      	mov	r0, r5
 802351e:	462a      	mov	r2, r5
 8023520:	e6ee      	b.n	8023300 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023522:	4628      	mov	r0, r5
 8023524:	462a      	mov	r2, r5
 8023526:	e7f7      	b.n	8023518 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8023528:	1c47      	adds	r7, r0, #1
 802352a:	f53f af69 	bmi.w	8023400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802352e:	42ba      	cmp	r2, r7
 8023530:	f6ff af66 	blt.w	8023400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023534:	1c6f      	adds	r7, r5, #1
 8023536:	f53f af63 	bmi.w	8023400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802353a:	42be      	cmp	r6, r7
 802353c:	f6ff af60 	blt.w	8023400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023540:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8023542:	9002      	str	r0, [sp, #8]
 8023544:	b236      	sxth	r6, r6
 8023546:	b212      	sxth	r2, r2
 8023548:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802354c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8023550:	9200      	str	r2, [sp, #0]
 8023552:	9601      	str	r6, [sp, #4]
 8023554:	4623      	mov	r3, r4
 8023556:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802355a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802355c:	f7ff fd59 	bl	8023012 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8023560:	e74e      	b.n	8023400 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8023562:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023564:	9820      	ldr	r0, [sp, #128]	; 0x80
 8023566:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8023568:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802356a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802356e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8023570:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023574:	142d      	asrs	r5, r5, #16
 8023576:	1400      	asrs	r0, r0, #16
 8023578:	fb02 5000 	mla	r0, r2, r0, r5
 802357c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802357e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023582:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023586:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 802358a:	182e      	adds	r6, r5, r0
 802358c:	eb04 0509 	add.w	r5, r4, r9
 8023590:	2b00      	cmp	r3, #0
 8023592:	f000 8096 	beq.w	80236c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8023596:	7877      	ldrb	r7, [r6, #1]
 8023598:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802359c:	4427      	add	r7, r4
 802359e:	2900      	cmp	r1, #0
 80235a0:	f000 8097 	beq.w	80236d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80235a4:	18b0      	adds	r0, r6, r2
 80235a6:	5cb2      	ldrb	r2, [r6, r2]
 80235a8:	7840      	ldrb	r0, [r0, #1]
 80235aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80235ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80235b2:	4422      	add	r2, r4
 80235b4:	4420      	add	r0, r4
 80235b6:	b29b      	uxth	r3, r3
 80235b8:	b289      	uxth	r1, r1
 80235ba:	fb03 f801 	mul.w	r8, r3, r1
 80235be:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80235c0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80235c4:	f8b6 c000 	ldrh.w	ip, [r6]
 80235c8:	78be      	ldrb	r6, [r7, #2]
 80235ca:	f814 9009 	ldrb.w	r9, [r4, r9]
 80235ce:	011b      	lsls	r3, r3, #4
 80235d0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80235d4:	b289      	uxth	r1, r1
 80235d6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80235da:	eba3 0308 	sub.w	r3, r3, r8
 80235de:	b29b      	uxth	r3, r3
 80235e0:	ebae 0e01 	sub.w	lr, lr, r1
 80235e4:	fa1f fe8e 	uxth.w	lr, lr
 80235e8:	435e      	muls	r6, r3
 80235ea:	fb0e 660b 	mla	r6, lr, fp, r6
 80235ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 80235f2:	9310      	str	r3, [sp, #64]	; 0x40
 80235f4:	fb01 660b 	mla	r6, r1, fp, r6
 80235f8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80235fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80235fe:	fb08 660b 	mla	r6, r8, fp, r6
 8023602:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8023606:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802360a:	fb1b fb03 	smulbb	fp, fp, r3
 802360e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023612:	fb06 b60a 	mla	r6, r6, sl, fp
 8023616:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023618:	f895 b001 	ldrb.w	fp, [r5, #1]
 802361c:	787d      	ldrb	r5, [r7, #1]
 802361e:	783f      	ldrb	r7, [r7, #0]
 8023620:	435d      	muls	r5, r3
 8023622:	fb0e 550b 	mla	r5, lr, fp, r5
 8023626:	f892 b001 	ldrb.w	fp, [r2, #1]
 802362a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802362c:	fb01 550b 	mla	r5, r1, fp, r5
 8023630:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023634:	fb08 550b 	mla	r5, r8, fp, r5
 8023638:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802363c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023640:	fb1b fb03 	smulbb	fp, fp, r3
 8023644:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023646:	437b      	muls	r3, r7
 8023648:	7817      	ldrb	r7, [r2, #0]
 802364a:	fb0e 3309 	mla	r3, lr, r9, r3
 802364e:	fb01 3307 	mla	r3, r1, r7, r3
 8023652:	7807      	ldrb	r7, [r0, #0]
 8023654:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023658:	fb08 3707 	mla	r7, r8, r7, r3
 802365c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802365e:	fa5f fc8c 	uxtb.w	ip, ip
 8023662:	fb1c fc03 	smulbb	ip, ip, r3
 8023666:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802366a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802366e:	fb05 b50a 	mla	r5, r5, sl, fp
 8023672:	fb07 c70a 	mla	r7, r7, sl, ip
 8023676:	b2b6      	uxth	r6, r6
 8023678:	b2ad      	uxth	r5, r5
 802367a:	b2bf      	uxth	r7, r7
 802367c:	1c73      	adds	r3, r6, #1
 802367e:	1c7a      	adds	r2, r7, #1
 8023680:	f105 0b01 	add.w	fp, r5, #1
 8023684:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8023688:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802368c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023690:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8023694:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023698:	096d      	lsrs	r5, r5, #5
 802369a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802369c:	4316      	orrs	r6, r2
 802369e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80236a2:	432e      	orrs	r6, r5
 80236a4:	f823 6b02 	strh.w	r6, [r3], #2
 80236a8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80236aa:	930c      	str	r3, [sp, #48]	; 0x30
 80236ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80236ae:	4413      	add	r3, r2
 80236b0:	931f      	str	r3, [sp, #124]	; 0x7c
 80236b2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80236b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80236b6:	4413      	add	r3, r2
 80236b8:	9320      	str	r3, [sp, #128]	; 0x80
 80236ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80236bc:	3b01      	subs	r3, #1
 80236be:	9311      	str	r3, [sp, #68]	; 0x44
 80236c0:	e6db      	b.n	802347a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80236c2:	b149      	cbz	r1, 80236d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80236c4:	5cb2      	ldrb	r2, [r6, r2]
 80236c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80236ca:	4422      	add	r2, r4
 80236cc:	4628      	mov	r0, r5
 80236ce:	462f      	mov	r7, r5
 80236d0:	e771      	b.n	80235b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236d2:	4628      	mov	r0, r5
 80236d4:	462a      	mov	r2, r5
 80236d6:	e76e      	b.n	80235b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80236d8:	4628      	mov	r0, r5
 80236da:	462a      	mov	r2, r5
 80236dc:	e7f7      	b.n	80236ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80236de:	b015      	add	sp, #84	; 0x54
 80236e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080236e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80236e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80236e8:	880f      	ldrh	r7, [r1, #0]
 80236ea:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 80236ee:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80236f2:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 80236f6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80236fa:	023c      	lsls	r4, r7, #8
 80236fc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8023700:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8023704:	017c      	lsls	r4, r7, #5
 8023706:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802370a:	00ff      	lsls	r7, r7, #3
 802370c:	ea4b 0404 	orr.w	r4, fp, r4
 8023710:	b2ff      	uxtb	r7, r7
 8023712:	fb05 ca0e 	mla	sl, r5, lr, ip
 8023716:	4327      	orrs	r7, r4
 8023718:	2d00      	cmp	r5, #0
 802371a:	eb02 080a 	add.w	r8, r2, sl
 802371e:	9701      	str	r7, [sp, #4]
 8023720:	db7e      	blt.n	8023820 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023722:	45a9      	cmp	r9, r5
 8023724:	dd7c      	ble.n	8023820 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8023726:	f1bc 0f00 	cmp.w	ip, #0
 802372a:	db77      	blt.n	802381c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802372c:	45e6      	cmp	lr, ip
 802372e:	dd75      	ble.n	802381c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8023730:	f812 700a 	ldrb.w	r7, [r2, sl]
 8023734:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8023738:	441f      	add	r7, r3
 802373a:	f11c 0201 	adds.w	r2, ip, #1
 802373e:	d472      	bmi.n	8023826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023740:	4596      	cmp	lr, r2
 8023742:	dd70      	ble.n	8023826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023744:	2800      	cmp	r0, #0
 8023746:	d06e      	beq.n	8023826 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8023748:	f898 4001 	ldrb.w	r4, [r8, #1]
 802374c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023750:	441c      	add	r4, r3
 8023752:	3501      	adds	r5, #1
 8023754:	d46b      	bmi.n	802382e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8023756:	45a9      	cmp	r9, r5
 8023758:	dd69      	ble.n	802382e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802375a:	2e00      	cmp	r6, #0
 802375c:	d067      	beq.n	802382e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802375e:	f1bc 0f00 	cmp.w	ip, #0
 8023762:	db62      	blt.n	802382a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023764:	45e6      	cmp	lr, ip
 8023766:	dd60      	ble.n	802382a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8023768:	f818 500e 	ldrb.w	r5, [r8, lr]
 802376c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023770:	441d      	add	r5, r3
 8023772:	f11c 0201 	adds.w	r2, ip, #1
 8023776:	d45d      	bmi.n	8023834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023778:	4596      	cmp	lr, r2
 802377a:	dd5b      	ble.n	8023834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802377c:	2800      	cmp	r0, #0
 802377e:	d059      	beq.n	8023834 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8023780:	44c6      	add	lr, r8
 8023782:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023786:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802378a:	4413      	add	r3, r2
 802378c:	b280      	uxth	r0, r0
 802378e:	b2b2      	uxth	r2, r6
 8023790:	fb00 f602 	mul.w	r6, r0, r2
 8023794:	0100      	lsls	r0, r0, #4
 8023796:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 802379a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 802379e:	1b80      	subs	r0, r0, r6
 80237a0:	fa1f fc82 	uxth.w	ip, r2
 80237a4:	b282      	uxth	r2, r0
 80237a6:	78a0      	ldrb	r0, [r4, #2]
 80237a8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80237ac:	f897 9000 	ldrb.w	r9, [r7]
 80237b0:	787f      	ldrb	r7, [r7, #1]
 80237b2:	eba8 080c 	sub.w	r8, r8, ip
 80237b6:	fa1f f888 	uxth.w	r8, r8
 80237ba:	4350      	muls	r0, r2
 80237bc:	fb08 0e0e 	mla	lr, r8, lr, r0
 80237c0:	78a8      	ldrb	r0, [r5, #2]
 80237c2:	fb0c e000 	mla	r0, ip, r0, lr
 80237c6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80237ca:	fb06 0e0e 	mla	lr, r6, lr, r0
 80237ce:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 80237d2:	f894 e000 	ldrb.w	lr, [r4]
 80237d6:	fb02 fe0e 	mul.w	lr, r2, lr
 80237da:	fb08 e909 	mla	r9, r8, r9, lr
 80237de:	f895 e000 	ldrb.w	lr, [r5]
 80237e2:	fb0c 990e 	mla	r9, ip, lr, r9
 80237e6:	f893 e000 	ldrb.w	lr, [r3]
 80237ea:	785b      	ldrb	r3, [r3, #1]
 80237ec:	fb06 9e0e 	mla	lr, r6, lr, r9
 80237f0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80237f4:	ea4e 0e00 	orr.w	lr, lr, r0
 80237f8:	7860      	ldrb	r0, [r4, #1]
 80237fa:	4350      	muls	r0, r2
 80237fc:	786a      	ldrb	r2, [r5, #1]
 80237fe:	fb08 0007 	mla	r0, r8, r7, r0
 8023802:	fb0c 0202 	mla	r2, ip, r2, r0
 8023806:	fb06 2303 	mla	r3, r6, r3, r2
 802380a:	095b      	lsrs	r3, r3, #5
 802380c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023810:	ea4e 0303 	orr.w	r3, lr, r3
 8023814:	800b      	strh	r3, [r1, #0]
 8023816:	b003      	add	sp, #12
 8023818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802381c:	af01      	add	r7, sp, #4
 802381e:	e78c      	b.n	802373a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8023820:	ac01      	add	r4, sp, #4
 8023822:	4627      	mov	r7, r4
 8023824:	e795      	b.n	8023752 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8023826:	ac01      	add	r4, sp, #4
 8023828:	e793      	b.n	8023752 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802382a:	ad01      	add	r5, sp, #4
 802382c:	e7a1      	b.n	8023772 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802382e:	ab01      	add	r3, sp, #4
 8023830:	461d      	mov	r5, r3
 8023832:	e7ab      	b.n	802378c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8023834:	ab01      	add	r3, sp, #4
 8023836:	e7a9      	b.n	802378c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08023838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802383c:	b08f      	sub	sp, #60	; 0x3c
 802383e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8023842:	920c      	str	r2, [sp, #48]	; 0x30
 8023844:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8023846:	910a      	str	r1, [sp, #40]	; 0x28
 8023848:	9306      	str	r3, [sp, #24]
 802384a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802384e:	900d      	str	r0, [sp, #52]	; 0x34
 8023850:	6850      	ldr	r0, [r2, #4]
 8023852:	6812      	ldr	r2, [r2, #0]
 8023854:	fb00 1303 	mla	r3, r0, r3, r1
 8023858:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802385c:	9307      	str	r3, [sp, #28]
 802385e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023860:	681b      	ldr	r3, [r3, #0]
 8023862:	9308      	str	r3, [sp, #32]
 8023864:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023866:	685c      	ldr	r4, [r3, #4]
 8023868:	3404      	adds	r4, #4
 802386a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802386c:	2b00      	cmp	r3, #0
 802386e:	dc03      	bgt.n	8023878 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023870:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023872:	2b00      	cmp	r3, #0
 8023874:	f340 81d6 	ble.w	8023c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023878:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802387a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802387e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023882:	1e48      	subs	r0, r1, #1
 8023884:	1e56      	subs	r6, r2, #1
 8023886:	9b06      	ldr	r3, [sp, #24]
 8023888:	2b00      	cmp	r3, #0
 802388a:	f340 80b7 	ble.w	80239fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 802388e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8023892:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023896:	d406      	bmi.n	80238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023898:	4287      	cmp	r7, r0
 802389a:	da04      	bge.n	80238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802389c:	2b00      	cmp	r3, #0
 802389e:	db02      	blt.n	80238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80238a0:	42b3      	cmp	r3, r6
 80238a2:	f2c0 80ac 	blt.w	80239fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80238a6:	3701      	adds	r7, #1
 80238a8:	f100 809d 	bmi.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238ac:	42b9      	cmp	r1, r7
 80238ae:	f2c0 809a 	blt.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238b2:	3301      	adds	r3, #1
 80238b4:	f100 8097 	bmi.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238b8:	429a      	cmp	r2, r3
 80238ba:	f2c0 8094 	blt.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80238be:	9b06      	ldr	r3, [sp, #24]
 80238c0:	930b      	str	r3, [sp, #44]	; 0x2c
 80238c2:	9b07      	ldr	r3, [sp, #28]
 80238c4:	9309      	str	r3, [sp, #36]	; 0x24
 80238c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80238c8:	2b00      	cmp	r3, #0
 80238ca:	f340 80b5 	ble.w	8023a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80238ce:	9820      	ldr	r0, [sp, #128]	; 0x80
 80238d0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80238d2:	68c7      	ldr	r7, [r0, #12]
 80238d4:	6892      	ldr	r2, [r2, #8]
 80238d6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80238da:	ea4f 4625 	mov.w	r6, r5, asr #16
 80238de:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80238e2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80238e6:	f100 80fb 	bmi.w	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238ea:	f102 3cff 	add.w	ip, r2, #4294967295
 80238ee:	4560      	cmp	r0, ip
 80238f0:	f280 80f6 	bge.w	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238f4:	2e00      	cmp	r6, #0
 80238f6:	f2c0 80f3 	blt.w	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80238fa:	f107 3cff 	add.w	ip, r7, #4294967295
 80238fe:	4566      	cmp	r6, ip
 8023900:	f280 80ee 	bge.w	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8023904:	b212      	sxth	r2, r2
 8023906:	fb06 0002 	mla	r0, r6, r2, r0
 802390a:	9e08      	ldr	r6, [sp, #32]
 802390c:	1837      	adds	r7, r6, r0
 802390e:	5c30      	ldrb	r0, [r6, r0]
 8023910:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8023914:	eb04 0c08 	add.w	ip, r4, r8
 8023918:	2b00      	cmp	r3, #0
 802391a:	f000 80d3 	beq.w	8023ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802391e:	787e      	ldrb	r6, [r7, #1]
 8023920:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023924:	4426      	add	r6, r4
 8023926:	2900      	cmp	r1, #0
 8023928:	f000 80d4 	beq.w	8023ad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802392c:	18b8      	adds	r0, r7, r2
 802392e:	5cba      	ldrb	r2, [r7, r2]
 8023930:	7840      	ldrb	r0, [r0, #1]
 8023932:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023936:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802393a:	4422      	add	r2, r4
 802393c:	4420      	add	r0, r4
 802393e:	b29b      	uxth	r3, r3
 8023940:	b289      	uxth	r1, r1
 8023942:	fb03 f901 	mul.w	r9, r3, r1
 8023946:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802394a:	011b      	lsls	r3, r3, #4
 802394c:	b289      	uxth	r1, r1
 802394e:	78b7      	ldrb	r7, [r6, #2]
 8023950:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023954:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023958:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802395c:	eba3 0309 	sub.w	r3, r3, r9
 8023960:	b29b      	uxth	r3, r3
 8023962:	ebae 0e01 	sub.w	lr, lr, r1
 8023966:	fa1f fe8e 	uxth.w	lr, lr
 802396a:	435f      	muls	r7, r3
 802396c:	fb0e 770a 	mla	r7, lr, sl, r7
 8023970:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023974:	fb01 770a 	mla	r7, r1, sl, r7
 8023978:	f890 a002 	ldrb.w	sl, [r0, #2]
 802397c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023980:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023984:	f896 8000 	ldrb.w	r8, [r6]
 8023988:	7876      	ldrb	r6, [r6, #1]
 802398a:	fb03 f808 	mul.w	r8, r3, r8
 802398e:	fb0e 8807 	mla	r8, lr, r7, r8
 8023992:	7817      	ldrb	r7, [r2, #0]
 8023994:	fb01 8807 	mla	r8, r1, r7, r8
 8023998:	7807      	ldrb	r7, [r0, #0]
 802399a:	fb09 8707 	mla	r7, r9, r7, r8
 802399e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80239a2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80239a6:	ea47 070a 	orr.w	r7, r7, sl
 80239aa:	4373      	muls	r3, r6
 80239ac:	f892 a001 	ldrb.w	sl, [r2, #1]
 80239b0:	fb0e 330c 	mla	r3, lr, ip, r3
 80239b4:	fb01 310a 	mla	r1, r1, sl, r3
 80239b8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80239bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239be:	fb09 1a0a 	mla	sl, r9, sl, r1
 80239c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80239c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80239ca:	ea47 070a 	orr.w	r7, r7, sl
 80239ce:	801f      	strh	r7, [r3, #0]
 80239d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239d2:	3302      	adds	r3, #2
 80239d4:	9309      	str	r3, [sp, #36]	; 0x24
 80239d6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239d8:	449b      	add	fp, r3
 80239da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239dc:	441d      	add	r5, r3
 80239de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80239e0:	3b01      	subs	r3, #1
 80239e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80239e4:	e76f      	b.n	80238c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80239e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80239e8:	449b      	add	fp, r3
 80239ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80239ec:	441d      	add	r5, r3
 80239ee:	9b06      	ldr	r3, [sp, #24]
 80239f0:	3b01      	subs	r3, #1
 80239f2:	9306      	str	r3, [sp, #24]
 80239f4:	9b07      	ldr	r3, [sp, #28]
 80239f6:	3302      	adds	r3, #2
 80239f8:	9307      	str	r3, [sp, #28]
 80239fa:	e744      	b.n	8023886 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 80239fc:	d023      	beq.n	8023a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80239fe:	9b06      	ldr	r3, [sp, #24]
 8023a00:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023a02:	3b01      	subs	r3, #1
 8023a04:	fb00 b003 	mla	r0, r0, r3, fp
 8023a08:	1400      	asrs	r0, r0, #16
 8023a0a:	f53f af58 	bmi.w	80238be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a0e:	3901      	subs	r1, #1
 8023a10:	4288      	cmp	r0, r1
 8023a12:	f6bf af54 	bge.w	80238be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a16:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023a18:	fb01 5303 	mla	r3, r1, r3, r5
 8023a1c:	141b      	asrs	r3, r3, #16
 8023a1e:	f53f af4e 	bmi.w	80238be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a22:	3a01      	subs	r2, #1
 8023a24:	4293      	cmp	r3, r2
 8023a26:	f6bf af4a 	bge.w	80238be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8023a2a:	9b06      	ldr	r3, [sp, #24]
 8023a2c:	9309      	str	r3, [sp, #36]	; 0x24
 8023a2e:	9b07      	ldr	r3, [sp, #28]
 8023a30:	930b      	str	r3, [sp, #44]	; 0x2c
 8023a32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023a34:	2b00      	cmp	r3, #0
 8023a36:	dc70      	bgt.n	8023b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023a38:	9b06      	ldr	r3, [sp, #24]
 8023a3a:	9a07      	ldr	r2, [sp, #28]
 8023a3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023a40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023a44:	9307      	str	r3, [sp, #28]
 8023a46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a48:	2b00      	cmp	r3, #0
 8023a4a:	f340 80eb 	ble.w	8023c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8023a4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a68:	eef0 6a62 	vmov.f32	s13, s5
 8023a6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a78:	ee16 ba90 	vmov	fp, s13
 8023a7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a80:	eef0 6a43 	vmov.f32	s13, s6
 8023a84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a88:	ee12 2a90 	vmov	r2, s5
 8023a8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a90:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a94:	ee13 2a10 	vmov	r2, s6
 8023a98:	931b      	str	r3, [sp, #108]	; 0x6c
 8023a9a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023a9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023aa0:	931c      	str	r3, [sp, #112]	; 0x70
 8023aa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023aa4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023aa6:	3b01      	subs	r3, #1
 8023aa8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023aac:	930a      	str	r3, [sp, #40]	; 0x28
 8023aae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023ab0:	bf08      	it	eq
 8023ab2:	4613      	moveq	r3, r2
 8023ab4:	ee16 5a90 	vmov	r5, s13
 8023ab8:	9306      	str	r3, [sp, #24]
 8023aba:	eeb0 3a67 	vmov.f32	s6, s15
 8023abe:	eef0 2a47 	vmov.f32	s5, s14
 8023ac2:	e6d2      	b.n	802386a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8023ac4:	b149      	cbz	r1, 8023ada <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8023ac6:	5cba      	ldrb	r2, [r7, r2]
 8023ac8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023acc:	4422      	add	r2, r4
 8023ace:	4660      	mov	r0, ip
 8023ad0:	4666      	mov	r6, ip
 8023ad2:	e734      	b.n	802393e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023ad4:	4660      	mov	r0, ip
 8023ad6:	4662      	mov	r2, ip
 8023ad8:	e731      	b.n	802393e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8023ada:	4660      	mov	r0, ip
 8023adc:	4662      	mov	r2, ip
 8023ade:	e7f7      	b.n	8023ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023ae0:	f110 0c01 	adds.w	ip, r0, #1
 8023ae4:	f53f af74 	bmi.w	80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023ae8:	4562      	cmp	r2, ip
 8023aea:	f6ff af71 	blt.w	80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023aee:	f116 0c01 	adds.w	ip, r6, #1
 8023af2:	f53f af6d 	bmi.w	80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023af6:	4567      	cmp	r7, ip
 8023af8:	f6ff af6a 	blt.w	80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023afc:	b23f      	sxth	r7, r7
 8023afe:	b212      	sxth	r2, r2
 8023b00:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8023b04:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8023b08:	9200      	str	r2, [sp, #0]
 8023b0a:	9701      	str	r7, [sp, #4]
 8023b0c:	4623      	mov	r3, r4
 8023b0e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8023b12:	980d      	ldr	r0, [sp, #52]	; 0x34
 8023b14:	f7ff fde6 	bl	80236e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8023b18:	e75a      	b.n	80239d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023b1a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8023b1c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8023b20:	ea4f 462b 	mov.w	r6, fp, asr #16
 8023b24:	1428      	asrs	r0, r5, #16
 8023b26:	fb02 6000 	mla	r0, r2, r0, r6
 8023b2a:	9e08      	ldr	r6, [sp, #32]
 8023b2c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8023b30:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8023b34:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8023b38:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023b3c:	1837      	adds	r7, r6, r0
 8023b3e:	eb04 0c08 	add.w	ip, r4, r8
 8023b42:	2b00      	cmp	r3, #0
 8023b44:	d060      	beq.n	8023c08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8023b46:	787e      	ldrb	r6, [r7, #1]
 8023b48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8023b4c:	4426      	add	r6, r4
 8023b4e:	2900      	cmp	r1, #0
 8023b50:	d062      	beq.n	8023c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8023b52:	18b8      	adds	r0, r7, r2
 8023b54:	5cba      	ldrb	r2, [r7, r2]
 8023b56:	7840      	ldrb	r0, [r0, #1]
 8023b58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023b5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023b60:	4422      	add	r2, r4
 8023b62:	4420      	add	r0, r4
 8023b64:	b29b      	uxth	r3, r3
 8023b66:	b289      	uxth	r1, r1
 8023b68:	fb03 f901 	mul.w	r9, r3, r1
 8023b6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023b70:	011b      	lsls	r3, r3, #4
 8023b72:	b289      	uxth	r1, r1
 8023b74:	78b7      	ldrb	r7, [r6, #2]
 8023b76:	f89c a002 	ldrb.w	sl, [ip, #2]
 8023b7a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8023b7e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8023b82:	eba3 0309 	sub.w	r3, r3, r9
 8023b86:	b29b      	uxth	r3, r3
 8023b88:	ebae 0e01 	sub.w	lr, lr, r1
 8023b8c:	fa1f fe8e 	uxth.w	lr, lr
 8023b90:	435f      	muls	r7, r3
 8023b92:	fb0e 770a 	mla	r7, lr, sl, r7
 8023b96:	f892 a002 	ldrb.w	sl, [r2, #2]
 8023b9a:	fb01 770a 	mla	r7, r1, sl, r7
 8023b9e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8023ba2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8023ba6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8023baa:	f896 8000 	ldrb.w	r8, [r6]
 8023bae:	7876      	ldrb	r6, [r6, #1]
 8023bb0:	fb03 f808 	mul.w	r8, r3, r8
 8023bb4:	fb0e 8807 	mla	r8, lr, r7, r8
 8023bb8:	7817      	ldrb	r7, [r2, #0]
 8023bba:	fb01 8807 	mla	r8, r1, r7, r8
 8023bbe:	7807      	ldrb	r7, [r0, #0]
 8023bc0:	fb09 8707 	mla	r7, r9, r7, r8
 8023bc4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8023bc8:	4373      	muls	r3, r6
 8023bca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023bce:	7856      	ldrb	r6, [r2, #1]
 8023bd0:	ea47 070a 	orr.w	r7, r7, sl
 8023bd4:	fb0e 330c 	mla	r3, lr, ip, r3
 8023bd8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8023bdc:	fb01 3306 	mla	r3, r1, r6, r3
 8023be0:	fb09 3a0a 	mla	sl, r9, sl, r3
 8023be4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023be8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023bea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023bee:	ea47 070a 	orr.w	r7, r7, sl
 8023bf2:	f823 7b02 	strh.w	r7, [r3], #2
 8023bf6:	930b      	str	r3, [sp, #44]	; 0x2c
 8023bf8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023bfa:	449b      	add	fp, r3
 8023bfc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023bfe:	441d      	add	r5, r3
 8023c00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023c02:	3b01      	subs	r3, #1
 8023c04:	9309      	str	r3, [sp, #36]	; 0x24
 8023c06:	e714      	b.n	8023a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8023c08:	b149      	cbz	r1, 8023c1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023c0a:	5cba      	ldrb	r2, [r7, r2]
 8023c0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c10:	4422      	add	r2, r4
 8023c12:	4660      	mov	r0, ip
 8023c14:	4666      	mov	r6, ip
 8023c16:	e7a5      	b.n	8023b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023c18:	4660      	mov	r0, ip
 8023c1a:	4662      	mov	r2, ip
 8023c1c:	e7a2      	b.n	8023b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8023c1e:	4660      	mov	r0, ip
 8023c20:	4662      	mov	r2, ip
 8023c22:	e7f7      	b.n	8023c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8023c24:	b00f      	add	sp, #60	; 0x3c
 8023c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023c2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8023c2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023c2e:	b085      	sub	sp, #20
 8023c30:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8023c34:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8023c38:	9102      	str	r1, [sp, #8]
 8023c3a:	2c00      	cmp	r4, #0
 8023c3c:	fb04 710c 	mla	r1, r4, ip, r7
 8023c40:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8023c44:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8023c48:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023c4c:	eb02 0e01 	add.w	lr, r2, r1
 8023c50:	f2c0 8122 	blt.w	8023e98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c54:	45a0      	cmp	r8, r4
 8023c56:	f340 811f 	ble.w	8023e98 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8023c5a:	2f00      	cmp	r7, #0
 8023c5c:	f2c0 811a 	blt.w	8023e94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c60:	45bc      	cmp	ip, r7
 8023c62:	f340 8117 	ble.w	8023e94 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8023c66:	5c52      	ldrb	r2, [r2, r1]
 8023c68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8023c6c:	1c7a      	adds	r2, r7, #1
 8023c6e:	f100 8116 	bmi.w	8023e9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c72:	4594      	cmp	ip, r2
 8023c74:	f340 8113 	ble.w	8023e9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8023c78:	2e00      	cmp	r6, #0
 8023c7a:	f000 8112 	beq.w	8023ea2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8023c7e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023c82:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8023c86:	3401      	adds	r4, #1
 8023c88:	f100 810f 	bmi.w	8023eaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023c8c:	45a0      	cmp	r8, r4
 8023c8e:	f340 810c 	ble.w	8023eaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8023c92:	2800      	cmp	r0, #0
 8023c94:	f000 810c 	beq.w	8023eb0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8023c98:	2f00      	cmp	r7, #0
 8023c9a:	f2c0 8104 	blt.w	8023ea6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023c9e:	45bc      	cmp	ip, r7
 8023ca0:	f340 8101 	ble.w	8023ea6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8023ca4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8023ca8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8023cac:	3701      	adds	r7, #1
 8023cae:	f100 8102 	bmi.w	8023eb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023cb2:	45bc      	cmp	ip, r7
 8023cb4:	f340 80ff 	ble.w	8023eb6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8023cb8:	2e00      	cmp	r6, #0
 8023cba:	f000 80fe 	beq.w	8023eba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8023cbe:	44f4      	add	ip, lr
 8023cc0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8023cc4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8023cc8:	b2b6      	uxth	r6, r6
 8023cca:	b280      	uxth	r0, r0
 8023ccc:	fb00 fe06 	mul.w	lr, r0, r6
 8023cd0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023cd4:	0136      	lsls	r6, r6, #4
 8023cd6:	eba6 070e 	sub.w	r7, r6, lr
 8023cda:	b280      	uxth	r0, r0
 8023cdc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023ce0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023ce4:	b2bf      	uxth	r7, r7
 8023ce6:	1a1b      	subs	r3, r3, r0
 8023ce8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023cec:	b29b      	uxth	r3, r3
 8023cee:	fb0a f607 	mul.w	r6, sl, r7
 8023cf2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023cf6:	fb0b 6603 	mla	r6, fp, r3, r6
 8023cfa:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023cfe:	fb00 6609 	mla	r6, r0, r9, r6
 8023d02:	fb0e 6608 	mla	r6, lr, r8, r6
 8023d06:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023d0a:	9600      	str	r6, [sp, #0]
 8023d0c:	2e00      	cmp	r6, #0
 8023d0e:	f000 80be 	beq.w	8023e8e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8023d12:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023d16:	fb0b fc0c 	mul.w	ip, fp, ip
 8023d1a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023d1e:	fb0b f505 	mul.w	r5, fp, r5
 8023d22:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023d26:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023d2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d2e:	44dc      	add	ip, fp
 8023d30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d34:	9501      	str	r5, [sp, #4]
 8023d36:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023d3a:	9503      	str	r5, [sp, #12]
 8023d3c:	9d01      	ldr	r5, [sp, #4]
 8023d3e:	9e02      	ldr	r6, [sp, #8]
 8023d40:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023d44:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023d48:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023d4c:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d50:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023d54:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023d58:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023d5c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023d60:	4465      	add	r5, ip
 8023d62:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023d66:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023d6a:	fb09 fc0c 	mul.w	ip, r9, ip
 8023d6e:	fb09 f904 	mul.w	r9, r9, r4
 8023d72:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023d76:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023d7a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023d7e:	fb08 f404 	mul.w	r4, r8, r4
 8023d82:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023d86:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023d8a:	fb08 f802 	mul.w	r8, r8, r2
 8023d8e:	fb0a fa01 	mul.w	sl, sl, r1
 8023d92:	0a22      	lsrs	r2, r4, #8
 8023d94:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023d98:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023d9c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023da0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023da4:	4414      	add	r4, r2
 8023da6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023daa:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023dae:	0a2d      	lsrs	r5, r5, #8
 8023db0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023db4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023db8:	9a03      	ldr	r2, [sp, #12]
 8023dba:	8836      	ldrh	r6, [r6, #0]
 8023dbc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023dc0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023dc4:	437d      	muls	r5, r7
 8023dc6:	4461      	add	r1, ip
 8023dc8:	0a24      	lsrs	r4, r4, #8
 8023dca:	fb02 5503 	mla	r5, r2, r3, r5
 8023dce:	0a09      	lsrs	r1, r1, #8
 8023dd0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023dd4:	fb04 540e 	mla	r4, r4, lr, r5
 8023dd8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023ddc:	fb01 4100 	mla	r1, r1, r0, r4
 8023de0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023de4:	0a09      	lsrs	r1, r1, #8
 8023de6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023dea:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023dee:	fb07 f70a 	mul.w	r7, r7, sl
 8023df2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023df6:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023dfa:	fb03 7101 	mla	r1, r3, r1, r7
 8023dfe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023e02:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023e06:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023e0a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023e0e:	fb00 e101 	mla	r1, r0, r1, lr
 8023e12:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8023e16:	9a00      	ldr	r2, [sp, #0]
 8023e18:	b287      	uxth	r7, r0
 8023e1a:	437a      	muls	r2, r7
 8023e1c:	0a09      	lsrs	r1, r1, #8
 8023e1e:	1c53      	adds	r3, r2, #1
 8023e20:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023e24:	4321      	orrs	r1, r4
 8023e26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e2a:	1235      	asrs	r5, r6, #8
 8023e2c:	0c0a      	lsrs	r2, r1, #16
 8023e2e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023e32:	b2db      	uxtb	r3, r3
 8023e34:	fb12 f207 	smulbb	r2, r2, r7
 8023e38:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023e3c:	fb05 2503 	mla	r5, r5, r3, r2
 8023e40:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8023e44:	10f2      	asrs	r2, r6, #3
 8023e46:	b2c8      	uxtb	r0, r1
 8023e48:	00f6      	lsls	r6, r6, #3
 8023e4a:	fb14 f407 	smulbb	r4, r4, r7
 8023e4e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023e52:	b2f6      	uxtb	r6, r6
 8023e54:	fb10 f007 	smulbb	r0, r0, r7
 8023e58:	fb02 4203 	mla	r2, r2, r3, r4
 8023e5c:	b2ad      	uxth	r5, r5
 8023e5e:	fb06 0303 	mla	r3, r6, r3, r0
 8023e62:	b299      	uxth	r1, r3
 8023e64:	b294      	uxth	r4, r2
 8023e66:	1c6b      	adds	r3, r5, #1
 8023e68:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023e6c:	1c62      	adds	r2, r4, #1
 8023e6e:	1c4b      	adds	r3, r1, #1
 8023e70:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023e74:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8023e78:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023e7c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023e80:	0952      	lsrs	r2, r2, #5
 8023e82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023e86:	432b      	orrs	r3, r5
 8023e88:	4313      	orrs	r3, r2
 8023e8a:	9a02      	ldr	r2, [sp, #8]
 8023e8c:	8013      	strh	r3, [r2, #0]
 8023e8e:	b005      	add	sp, #20
 8023e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023e94:	2500      	movs	r5, #0
 8023e96:	e6e9      	b.n	8023c6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8023e98:	2100      	movs	r1, #0
 8023e9a:	460d      	mov	r5, r1
 8023e9c:	e6f3      	b.n	8023c86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023e9e:	2100      	movs	r1, #0
 8023ea0:	e6f1      	b.n	8023c86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023ea2:	4631      	mov	r1, r6
 8023ea4:	e6ef      	b.n	8023c86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8023ea6:	2400      	movs	r4, #0
 8023ea8:	e700      	b.n	8023cac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8023eaa:	2200      	movs	r2, #0
 8023eac:	4614      	mov	r4, r2
 8023eae:	e70b      	b.n	8023cc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023eb0:	4602      	mov	r2, r0
 8023eb2:	4604      	mov	r4, r0
 8023eb4:	e708      	b.n	8023cc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023eb6:	2200      	movs	r2, #0
 8023eb8:	e706      	b.n	8023cc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8023eba:	4632      	mov	r2, r6
 8023ebc:	e704      	b.n	8023cc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08023ebe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023ebe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ec2:	b09f      	sub	sp, #124	; 0x7c
 8023ec4:	921b      	str	r2, [sp, #108]	; 0x6c
 8023ec6:	9309      	str	r3, [sp, #36]	; 0x24
 8023ec8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8023eca:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8023ece:	931c      	str	r3, [sp, #112]	; 0x70
 8023ed0:	9119      	str	r1, [sp, #100]	; 0x64
 8023ed2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8023ed6:	901d      	str	r0, [sp, #116]	; 0x74
 8023ed8:	6850      	ldr	r0, [r2, #4]
 8023eda:	6812      	ldr	r2, [r2, #0]
 8023edc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8023ede:	fb00 1303 	mla	r3, r0, r3, r1
 8023ee2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ee6:	930c      	str	r3, [sp, #48]	; 0x30
 8023ee8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023eea:	681b      	ldr	r3, [r3, #0]
 8023eec:	9312      	str	r3, [sp, #72]	; 0x48
 8023eee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023ef0:	685e      	ldr	r6, [r3, #4]
 8023ef2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8023ef6:	930d      	str	r3, [sp, #52]	; 0x34
 8023ef8:	3604      	adds	r6, #4
 8023efa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023efc:	2b00      	cmp	r3, #0
 8023efe:	dc03      	bgt.n	8023f08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023f00:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023f02:	2b00      	cmp	r3, #0
 8023f04:	f340 8388 	ble.w	8024618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8023f08:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023f0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023f12:	1e48      	subs	r0, r1, #1
 8023f14:	1e57      	subs	r7, r2, #1
 8023f16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f18:	2b00      	cmp	r3, #0
 8023f1a:	f340 8195 	ble.w	8024248 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8023f1e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8023f20:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023f24:	ea4f 4325 	mov.w	r3, r5, asr #16
 8023f28:	d406      	bmi.n	8023f38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f2a:	4584      	cmp	ip, r0
 8023f2c:	da04      	bge.n	8023f38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f2e:	2b00      	cmp	r3, #0
 8023f30:	db02      	blt.n	8023f38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8023f32:	42bb      	cmp	r3, r7
 8023f34:	f2c0 8189 	blt.w	802424a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8023f38:	f11c 0c01 	adds.w	ip, ip, #1
 8023f3c:	f100 8177 	bmi.w	802422e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f40:	4561      	cmp	r1, ip
 8023f42:	f2c0 8174 	blt.w	802422e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f46:	3301      	adds	r3, #1
 8023f48:	f100 8171 	bmi.w	802422e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f4c:	429a      	cmp	r2, r3
 8023f4e:	f2c0 816e 	blt.w	802422e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023f52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023f54:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8023f56:	931a      	str	r3, [sp, #104]	; 0x68
 8023f58:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8023f5a:	2b00      	cmp	r3, #0
 8023f5c:	f340 8193 	ble.w	8024286 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8023f60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f62:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023f66:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8023f68:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8023f6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023f6e:	141b      	asrs	r3, r3, #16
 8023f70:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8023f74:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8023f78:	f100 81d6 	bmi.w	8024328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f7c:	f100 38ff 	add.w	r8, r0, #4294967295
 8023f80:	4543      	cmp	r3, r8
 8023f82:	f280 81d1 	bge.w	8024328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f86:	f1bc 0f00 	cmp.w	ip, #0
 8023f8a:	f2c0 81cd 	blt.w	8024328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f8e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023f92:	45c4      	cmp	ip, r8
 8023f94:	f280 81c8 	bge.w	8024328 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8023f98:	b200      	sxth	r0, r0
 8023f9a:	fb0c 3300 	mla	r3, ip, r0, r3
 8023f9e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023fa0:	eb04 0803 	add.w	r8, r4, r3
 8023fa4:	5ce3      	ldrb	r3, [r4, r3]
 8023fa6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023faa:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8023fae:	2a00      	cmp	r2, #0
 8023fb0:	f000 81af 	beq.w	8024312 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8023fb4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8023fb8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8023fbc:	940e      	str	r4, [sp, #56]	; 0x38
 8023fbe:	0e24      	lsrs	r4, r4, #24
 8023fc0:	9415      	str	r4, [sp, #84]	; 0x54
 8023fc2:	b179      	cbz	r1, 8023fe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8023fc4:	eb08 0c00 	add.w	ip, r8, r0
 8023fc8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8023fcc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023fd0:	900a      	str	r0, [sp, #40]	; 0x28
 8023fd2:	0e00      	lsrs	r0, r0, #24
 8023fd4:	9013      	str	r0, [sp, #76]	; 0x4c
 8023fd6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8023fda:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8023fde:	900f      	str	r0, [sp, #60]	; 0x3c
 8023fe0:	0e00      	lsrs	r0, r0, #24
 8023fe2:	9016      	str	r0, [sp, #88]	; 0x58
 8023fe4:	b292      	uxth	r2, r2
 8023fe6:	b289      	uxth	r1, r1
 8023fe8:	fb02 f901 	mul.w	r9, r2, r1
 8023fec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023ff0:	0112      	lsls	r2, r2, #4
 8023ff2:	eba2 0809 	sub.w	r8, r2, r9
 8023ff6:	b289      	uxth	r1, r1
 8023ff8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023ffc:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023ffe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024000:	fa1f f888 	uxth.w	r8, r8
 8024004:	1a52      	subs	r2, r2, r1
 8024006:	b292      	uxth	r2, r2
 8024008:	fb08 f000 	mul.w	r0, r8, r0
 802400c:	fb02 000e 	mla	r0, r2, lr, r0
 8024010:	fb01 0004 	mla	r0, r1, r4, r0
 8024014:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024016:	fb09 0004 	mla	r0, r9, r4, r0
 802401a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802401e:	2800      	cmp	r0, #0
 8024020:	f000 80fa 	beq.w	8024218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024024:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024028:	d01b      	beq.n	8024062 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802402a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802402e:	fb0e fa0a 	mul.w	sl, lr, sl
 8024032:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024036:	fb0e fe03 	mul.w	lr, lr, r3
 802403a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802403e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024042:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024046:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802404a:	4453      	add	r3, sl
 802404c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024050:	0a1b      	lsrs	r3, r3, #8
 8024052:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024056:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802405a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802405e:	ea43 030c 	orr.w	r3, r3, ip
 8024062:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024064:	2cff      	cmp	r4, #255	; 0xff
 8024066:	d021      	beq.n	80240ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024068:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802406a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802406e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024070:	fb04 fb0b 	mul.w	fp, r4, fp
 8024074:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024076:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802407a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802407c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024080:	fb04 fa0a 	mul.w	sl, r4, sl
 8024084:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024088:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802408c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024090:	44de      	add	lr, fp
 8024092:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024096:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802409a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802409e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240a2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240a6:	ea4e 040a 	orr.w	r4, lr, sl
 80240aa:	940e      	str	r4, [sp, #56]	; 0x38
 80240ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240ae:	2cff      	cmp	r4, #255	; 0xff
 80240b0:	d021      	beq.n	80240f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80240b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240b4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80240b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240ba:	fb04 fb0b 	mul.w	fp, r4, fp
 80240be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80240c0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80240c4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80240c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80240ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80240ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240d2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80240d6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80240da:	44de      	add	lr, fp
 80240dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80240e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80240e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80240ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80240f0:	ea4e 040a 	orr.w	r4, lr, sl
 80240f4:	940a      	str	r4, [sp, #40]	; 0x28
 80240f6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80240f8:	2cff      	cmp	r4, #255	; 0xff
 80240fa:	d021      	beq.n	8024140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80240fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80240fe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024102:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024104:	fb04 fb0b 	mul.w	fp, r4, fp
 8024108:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802410a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802410e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024110:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024114:	fb04 fa0a 	mul.w	sl, r4, sl
 8024118:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802411c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024120:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024124:	44de      	add	lr, fp
 8024126:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802412a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802412e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024132:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024136:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802413a:	ea4e 040a 	orr.w	r4, lr, sl
 802413e:	940f      	str	r4, [sp, #60]	; 0x3c
 8024140:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024142:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024146:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024148:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802414c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024150:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024154:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024158:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802415a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802415e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024162:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024164:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024168:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802416c:	fb08 f80e 	mul.w	r8, r8, lr
 8024170:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024174:	fb02 8303 	mla	r3, r2, r3, r8
 8024178:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802417a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802417c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024180:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024182:	fb01 330a 	mla	r3, r1, sl, r3
 8024186:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802418a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802418c:	fb09 3901 	mla	r9, r9, r1, r3
 8024190:	4342      	muls	r2, r0
 8024192:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024196:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802419a:	883b      	ldrh	r3, [r7, #0]
 802419c:	1c50      	adds	r0, r2, #1
 802419e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80241a2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80241a6:	ea4c 0c09 	orr.w	ip, ip, r9
 80241aa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80241ae:	1219      	asrs	r1, r3, #8
 80241b0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80241b4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80241b8:	b2c0      	uxtb	r0, r0
 80241ba:	fb12 f204 	smulbb	r2, r2, r4
 80241be:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80241c2:	fb01 2100 	mla	r1, r1, r0, r2
 80241c6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80241ca:	10da      	asrs	r2, r3, #3
 80241cc:	fa5f fc8c 	uxtb.w	ip, ip
 80241d0:	00db      	lsls	r3, r3, #3
 80241d2:	fb1c fc04 	smulbb	ip, ip, r4
 80241d6:	b2db      	uxtb	r3, r3
 80241d8:	b289      	uxth	r1, r1
 80241da:	fb03 c300 	mla	r3, r3, r0, ip
 80241de:	fa1f fc83 	uxth.w	ip, r3
 80241e2:	1c4b      	adds	r3, r1, #1
 80241e4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80241e8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80241ec:	fb1e fe04 	smulbb	lr, lr, r4
 80241f0:	f10c 0301 	add.w	r3, ip, #1
 80241f4:	fb02 e200 	mla	r2, r2, r0, lr
 80241f8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80241fc:	b292      	uxth	r2, r2
 80241fe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8024202:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024206:	430b      	orrs	r3, r1
 8024208:	1c51      	adds	r1, r2, #1
 802420a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802420e:	0952      	lsrs	r2, r2, #5
 8024210:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024214:	4313      	orrs	r3, r2
 8024216:	803b      	strh	r3, [r7, #0]
 8024218:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802421a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802421c:	441a      	add	r2, r3
 802421e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024220:	9229      	str	r2, [sp, #164]	; 0xa4
 8024222:	441d      	add	r5, r3
 8024224:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024226:	3b01      	subs	r3, #1
 8024228:	3702      	adds	r7, #2
 802422a:	931a      	str	r3, [sp, #104]	; 0x68
 802422c:	e694      	b.n	8023f58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802422e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8024230:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024232:	441c      	add	r4, r3
 8024234:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024236:	9429      	str	r4, [sp, #164]	; 0xa4
 8024238:	441d      	add	r5, r3
 802423a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802423c:	3b01      	subs	r3, #1
 802423e:	9309      	str	r3, [sp, #36]	; 0x24
 8024240:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024242:	3302      	adds	r3, #2
 8024244:	930c      	str	r3, [sp, #48]	; 0x30
 8024246:	e666      	b.n	8023f16 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024248:	d024      	beq.n	8024294 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802424a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802424c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802424e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8024250:	3b01      	subs	r3, #1
 8024252:	fb00 4003 	mla	r0, r0, r3, r4
 8024256:	1400      	asrs	r0, r0, #16
 8024258:	f53f ae7b 	bmi.w	8023f52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802425c:	3901      	subs	r1, #1
 802425e:	4288      	cmp	r0, r1
 8024260:	f6bf ae77 	bge.w	8023f52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024264:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8024266:	fb01 5303 	mla	r3, r1, r3, r5
 802426a:	141b      	asrs	r3, r3, #16
 802426c:	f53f ae71 	bmi.w	8023f52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024270:	3a01      	subs	r2, #1
 8024272:	4293      	cmp	r3, r2
 8024274:	f6bf ae6d 	bge.w	8023f52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024278:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802427c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024280:	f1bb 0f00 	cmp.w	fp, #0
 8024284:	dc70      	bgt.n	8024368 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8024286:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024288:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802428c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802428e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024292:	930c      	str	r3, [sp, #48]	; 0x30
 8024294:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024296:	2b00      	cmp	r3, #0
 8024298:	f340 81be 	ble.w	8024618 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802429c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80242a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80242a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80242a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80242ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80242b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80242b6:	eef0 6a62 	vmov.f32	s13, s5
 80242ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80242be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80242c6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80242ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80242ce:	eef0 6a43 	vmov.f32	s13, s6
 80242d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80242d6:	ee12 2a90 	vmov	r2, s5
 80242da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80242de:	fb92 f3f3 	sdiv	r3, r2, r3
 80242e2:	ee13 2a10 	vmov	r2, s6
 80242e6:	932b      	str	r3, [sp, #172]	; 0xac
 80242e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80242ee:	932c      	str	r3, [sp, #176]	; 0xb0
 80242f0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80242f2:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80242f4:	3b01      	subs	r3, #1
 80242f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242fa:	9319      	str	r3, [sp, #100]	; 0x64
 80242fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242fe:	bf08      	it	eq
 8024300:	4613      	moveq	r3, r2
 8024302:	ee16 5a90 	vmov	r5, s13
 8024306:	9309      	str	r3, [sp, #36]	; 0x24
 8024308:	eeb0 3a67 	vmov.f32	s6, s15
 802430c:	eef0 2a47 	vmov.f32	s5, s14
 8024310:	e5f3      	b.n	8023efa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024312:	2900      	cmp	r1, #0
 8024314:	f43f ae66 	beq.w	8023fe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024318:	f818 0000 	ldrb.w	r0, [r8, r0]
 802431c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024320:	900a      	str	r0, [sp, #40]	; 0x28
 8024322:	0e00      	lsrs	r0, r0, #24
 8024324:	9013      	str	r0, [sp, #76]	; 0x4c
 8024326:	e65d      	b.n	8023fe4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8024328:	f113 0801 	adds.w	r8, r3, #1
 802432c:	f53f af74 	bmi.w	8024218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024330:	4540      	cmp	r0, r8
 8024332:	f6ff af71 	blt.w	8024218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024336:	f11c 0801 	adds.w	r8, ip, #1
 802433a:	f53f af6d 	bmi.w	8024218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802433e:	45c6      	cmp	lr, r8
 8024340:	f6ff af6a 	blt.w	8024218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024344:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024346:	9302      	str	r3, [sp, #8]
 8024348:	b200      	sxth	r0, r0
 802434a:	fa0f f38e 	sxth.w	r3, lr
 802434e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8024352:	e9cd c203 	strd	ip, r2, [sp, #12]
 8024356:	9301      	str	r3, [sp, #4]
 8024358:	9000      	str	r0, [sp, #0]
 802435a:	4633      	mov	r3, r6
 802435c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802435e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8024360:	4639      	mov	r1, r7
 8024362:	f7ff fc62 	bl	8023c2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8024366:	e757      	b.n	8024218 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024368:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802436a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802436c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024370:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024372:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024376:	1427      	asrs	r7, r4, #16
 8024378:	142b      	asrs	r3, r5, #16
 802437a:	fb01 7303 	mla	r3, r1, r3, r7
 802437e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024380:	18e7      	adds	r7, r4, r3
 8024382:	5ce3      	ldrb	r3, [r4, r3]
 8024384:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024388:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802438c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024390:	2a00      	cmp	r2, #0
 8024392:	f000 8137 	beq.w	8024604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024396:	f897 e001 	ldrb.w	lr, [r7, #1]
 802439a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802439e:	9410      	str	r4, [sp, #64]	; 0x40
 80243a0:	0e24      	lsrs	r4, r4, #24
 80243a2:	9417      	str	r4, [sp, #92]	; 0x5c
 80243a4:	b170      	cbz	r0, 80243c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80243a6:	eb07 0e01 	add.w	lr, r7, r1
 80243aa:	5c79      	ldrb	r1, [r7, r1]
 80243ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80243b0:	910b      	str	r1, [sp, #44]	; 0x2c
 80243b2:	0e09      	lsrs	r1, r1, #24
 80243b4:	9114      	str	r1, [sp, #80]	; 0x50
 80243b6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80243ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80243be:	9111      	str	r1, [sp, #68]	; 0x44
 80243c0:	0e09      	lsrs	r1, r1, #24
 80243c2:	9118      	str	r1, [sp, #96]	; 0x60
 80243c4:	b292      	uxth	r2, r2
 80243c6:	b280      	uxth	r0, r0
 80243c8:	fb02 f800 	mul.w	r8, r2, r0
 80243cc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80243d0:	0112      	lsls	r2, r2, #4
 80243d2:	eba2 0e08 	sub.w	lr, r2, r8
 80243d6:	b280      	uxth	r0, r0
 80243d8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80243dc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80243de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80243e0:	fa1f fe8e 	uxth.w	lr, lr
 80243e4:	1a12      	subs	r2, r2, r0
 80243e6:	b292      	uxth	r2, r2
 80243e8:	fb0e f101 	mul.w	r1, lr, r1
 80243ec:	fb02 110c 	mla	r1, r2, ip, r1
 80243f0:	fb00 1104 	mla	r1, r0, r4, r1
 80243f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80243f6:	fb08 1104 	mla	r1, r8, r4, r1
 80243fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80243fe:	2900      	cmp	r1, #0
 8024400:	f000 80f5 	beq.w	80245ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024404:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024408:	d019      	beq.n	802443e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802440a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802440e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024412:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024416:	fb0c fc03 	mul.w	ip, ip, r3
 802441a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802441e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024422:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024426:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802442a:	4453      	add	r3, sl
 802442c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024430:	0a1b      	lsrs	r3, r3, #8
 8024432:	0a3f      	lsrs	r7, r7, #8
 8024434:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024438:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802443c:	433b      	orrs	r3, r7
 802443e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024440:	2cff      	cmp	r4, #255	; 0xff
 8024442:	d020      	beq.n	8024486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8024444:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024446:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802444a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802444c:	4367      	muls	r7, r4
 802444e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024450:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024454:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8024456:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802445a:	fb04 fa0a 	mul.w	sl, r4, sl
 802445e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024462:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024466:	44bc      	add	ip, r7
 8024468:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802446c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024470:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024474:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024478:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802447c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024480:	ea4c 040a 	orr.w	r4, ip, sl
 8024484:	9410      	str	r4, [sp, #64]	; 0x40
 8024486:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024488:	2cff      	cmp	r4, #255	; 0xff
 802448a:	d020      	beq.n	80244ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802448c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802448e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024492:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024494:	4367      	muls	r7, r4
 8024496:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024498:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802449c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802449e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80244a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244ae:	44bc      	add	ip, r7
 80244b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80244b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80244bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80244c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80244c8:	ea4c 040a 	orr.w	r4, ip, sl
 80244cc:	940b      	str	r4, [sp, #44]	; 0x2c
 80244ce:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244d0:	2cff      	cmp	r4, #255	; 0xff
 80244d2:	d020      	beq.n	8024516 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80244d4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80244da:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244dc:	4367      	muls	r7, r4
 80244de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80244e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80244e4:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80244e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80244ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80244ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80244f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80244f6:	44bc      	add	ip, r7
 80244f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80244fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024500:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024504:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024508:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802450c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024510:	ea4c 040a 	orr.w	r4, ip, sl
 8024514:	9411      	str	r4, [sp, #68]	; 0x44
 8024516:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024518:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802451c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802451e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024522:	fb0e f707 	mul.w	r7, lr, r7
 8024526:	fb02 770c 	mla	r7, r2, ip, r7
 802452a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802452e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024530:	fb00 770c 	mla	r7, r0, ip, r7
 8024534:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024538:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802453a:	fb08 770c 	mla	r7, r8, ip, r7
 802453e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024542:	fb0e fe0c 	mul.w	lr, lr, ip
 8024546:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802454a:	fb02 e303 	mla	r3, r2, r3, lr
 802454e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024550:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024552:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024556:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024558:	fb00 330a 	mla	r3, r0, sl, r3
 802455c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8024560:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024564:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024566:	f8b9 0000 	ldrh.w	r0, [r9]
 802456a:	434b      	muls	r3, r1
 802456c:	0a3f      	lsrs	r7, r7, #8
 802456e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024572:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024576:	1c59      	adds	r1, r3, #1
 8024578:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802457c:	ea47 070c 	orr.w	r7, r7, ip
 8024580:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024584:	1202      	asrs	r2, r0, #8
 8024586:	0c3b      	lsrs	r3, r7, #16
 8024588:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802458c:	b2c9      	uxtb	r1, r1
 802458e:	fb13 f304 	smulbb	r3, r3, r4
 8024592:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024596:	fb02 3201 	mla	r2, r2, r1, r3
 802459a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802459e:	10c3      	asrs	r3, r0, #3
 80245a0:	b2ff      	uxtb	r7, r7
 80245a2:	00c0      	lsls	r0, r0, #3
 80245a4:	b292      	uxth	r2, r2
 80245a6:	fb1c fc04 	smulbb	ip, ip, r4
 80245aa:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80245ae:	b2c0      	uxtb	r0, r0
 80245b0:	fb17 f704 	smulbb	r7, r7, r4
 80245b4:	fb03 c301 	mla	r3, r3, r1, ip
 80245b8:	fb00 7001 	mla	r0, r0, r1, r7
 80245bc:	f102 0c01 	add.w	ip, r2, #1
 80245c0:	b280      	uxth	r0, r0
 80245c2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80245c6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80245ca:	1c42      	adds	r2, r0, #1
 80245cc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80245d0:	b29b      	uxth	r3, r3
 80245d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80245d6:	ea42 020c 	orr.w	r2, r2, ip
 80245da:	f103 0c01 	add.w	ip, r3, #1
 80245de:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80245e2:	095b      	lsrs	r3, r3, #5
 80245e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80245e8:	431a      	orrs	r2, r3
 80245ea:	f8a9 2000 	strh.w	r2, [r9]
 80245ee:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80245f0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80245f2:	441a      	add	r2, r3
 80245f4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80245f6:	9229      	str	r2, [sp, #164]	; 0xa4
 80245f8:	f109 0902 	add.w	r9, r9, #2
 80245fc:	441d      	add	r5, r3
 80245fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024602:	e63d      	b.n	8024280 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024604:	2800      	cmp	r0, #0
 8024606:	f43f aedd 	beq.w	80243c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802460a:	5c79      	ldrb	r1, [r7, r1]
 802460c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024610:	910b      	str	r1, [sp, #44]	; 0x2c
 8024612:	0e09      	lsrs	r1, r1, #24
 8024614:	9114      	str	r1, [sp, #80]	; 0x50
 8024616:	e6d5      	b.n	80243c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8024618:	b01f      	add	sp, #124	; 0x7c
 802461a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802461e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802461e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024622:	b089      	sub	sp, #36	; 0x24
 8024624:	9101      	str	r1, [sp, #4]
 8024626:	9801      	ldr	r0, [sp, #4]
 8024628:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802462c:	8800      	ldrh	r0, [r0, #0]
 802462e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8024632:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8024636:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802463a:	1206      	asrs	r6, r0, #8
 802463c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8024640:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024644:	9602      	str	r6, [sp, #8]
 8024646:	10c6      	asrs	r6, r0, #3
 8024648:	00c0      	lsls	r0, r0, #3
 802464a:	b2c0      	uxtb	r0, r0
 802464c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024650:	9004      	str	r0, [sp, #16]
 8024652:	2f00      	cmp	r7, #0
 8024654:	fb07 100c 	mla	r0, r7, ip, r1
 8024658:	9603      	str	r6, [sp, #12]
 802465a:	eb02 0e00 	add.w	lr, r2, r0
 802465e:	f2c0 810a 	blt.w	8024876 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024662:	45b8      	cmp	r8, r7
 8024664:	f340 8107 	ble.w	8024876 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8024668:	2900      	cmp	r1, #0
 802466a:	f2c0 8102 	blt.w	8024872 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802466e:	458c      	cmp	ip, r1
 8024670:	f340 80ff 	ble.w	8024872 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8024674:	5c12      	ldrb	r2, [r2, r0]
 8024676:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802467a:	1c4a      	adds	r2, r1, #1
 802467c:	f100 80fe 	bmi.w	802487c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024680:	4594      	cmp	ip, r2
 8024682:	f340 80fb 	ble.w	802487c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8024686:	2d00      	cmp	r5, #0
 8024688:	f000 80fa 	beq.w	8024880 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802468c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8024690:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8024694:	3701      	adds	r7, #1
 8024696:	f100 80f7 	bmi.w	8024888 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802469a:	45b8      	cmp	r8, r7
 802469c:	f340 80f4 	ble.w	8024888 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80246a0:	2c00      	cmp	r4, #0
 80246a2:	f000 80f4 	beq.w	802488e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80246a6:	2900      	cmp	r1, #0
 80246a8:	eb0e 020c 	add.w	r2, lr, ip
 80246ac:	f2c0 80ea 	blt.w	8024884 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80246b0:	458c      	cmp	ip, r1
 80246b2:	f340 80e7 	ble.w	8024884 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80246b6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80246ba:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80246be:	3101      	adds	r1, #1
 80246c0:	f100 80e8 	bmi.w	8024894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246c4:	458c      	cmp	ip, r1
 80246c6:	f340 80e5 	ble.w	8024894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80246ca:	2d00      	cmp	r5, #0
 80246cc:	f000 80e4 	beq.w	8024898 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80246d0:	7852      	ldrb	r2, [r2, #1]
 80246d2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80246d6:	0e0b      	lsrs	r3, r1, #24
 80246d8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80246dc:	9300      	str	r3, [sp, #0]
 80246de:	b2a4      	uxth	r4, r4
 80246e0:	b2ab      	uxth	r3, r5
 80246e2:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80246e6:	fb03 f904 	mul.w	r9, r3, r4
 80246ea:	fb0a f505 	mul.w	r5, sl, r5
 80246ee:	011b      	lsls	r3, r3, #4
 80246f0:	eba3 0e09 	sub.w	lr, r3, r9
 80246f4:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80246f8:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80246fc:	0a28      	lsrs	r0, r5, #8
 80246fe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8024702:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8024706:	4405      	add	r5, r0
 8024708:	0a2d      	lsrs	r5, r5, #8
 802470a:	fb0a f303 	mul.w	r3, sl, r3
 802470e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8024712:	9005      	str	r0, [sp, #20]
 8024714:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8024718:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802471c:	0a1b      	lsrs	r3, r3, #8
 802471e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8024722:	9306      	str	r3, [sp, #24]
 8024724:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8024728:	fb0b f303 	mul.w	r3, fp, r3
 802472c:	0a1d      	lsrs	r5, r3, #8
 802472e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024732:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8024736:	fb0b f606 	mul.w	r6, fp, r6
 802473a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802473e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8024742:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024746:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802474a:	fb08 f707 	mul.w	r7, r8, r7
 802474e:	441d      	add	r5, r3
 8024750:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8024754:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8024758:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802475c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8024760:	fb08 fc0c 	mul.w	ip, r8, ip
 8024764:	0a1b      	lsrs	r3, r3, #8
 8024766:	9307      	str	r3, [sp, #28]
 8024768:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802476c:	0e0b      	lsrs	r3, r1, #24
 802476e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8024772:	435f      	muls	r7, r3
 8024774:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024778:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 802477c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8024780:	4460      	add	r0, ip
 8024782:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024786:	b2a4      	uxth	r4, r4
 8024788:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802478c:	0a2d      	lsrs	r5, r5, #8
 802478e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024792:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024796:	fa1f fe8e 	uxth.w	lr, lr
 802479a:	4359      	muls	r1, r3
 802479c:	1b12      	subs	r2, r2, r4
 802479e:	9b05      	ldr	r3, [sp, #20]
 80247a0:	44bc      	add	ip, r7
 80247a2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80247a6:	b292      	uxth	r2, r2
 80247a8:	fb05 f50e 	mul.w	r5, r5, lr
 80247ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80247b0:	fb03 5502 	mla	r5, r3, r2, r5
 80247b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80247b8:	9b06      	ldr	r3, [sp, #24]
 80247ba:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80247be:	0a36      	lsrs	r6, r6, #8
 80247c0:	0a00      	lsrs	r0, r0, #8
 80247c2:	fb0c 5509 	mla	r5, ip, r9, r5
 80247c6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80247ca:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80247ce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80247d2:	fb00 5504 	mla	r5, r0, r4, r5
 80247d6:	fb0e f606 	mul.w	r6, lr, r6
 80247da:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80247de:	0a09      	lsrs	r1, r1, #8
 80247e0:	9b07      	ldr	r3, [sp, #28]
 80247e2:	fb02 6000 	mla	r0, r2, r0, r6
 80247e6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80247ea:	fb09 0001 	mla	r0, r9, r1, r0
 80247ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80247f2:	fb0e fe0b 	mul.w	lr, lr, fp
 80247f6:	fb04 0003 	mla	r0, r4, r3, r0
 80247fa:	fb02 e20a 	mla	r2, r2, sl, lr
 80247fe:	9b00      	ldr	r3, [sp, #0]
 8024800:	fb04 2408 	mla	r4, r4, r8, r2
 8024804:	fb09 4903 	mla	r9, r9, r3, r4
 8024808:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802480c:	9b02      	ldr	r3, [sp, #8]
 802480e:	9a04      	ldr	r2, [sp, #16]
 8024810:	fa5f f989 	uxtb.w	r9, r9
 8024814:	fb03 f109 	mul.w	r1, r3, r9
 8024818:	9b03      	ldr	r3, [sp, #12]
 802481a:	0a2d      	lsrs	r5, r5, #8
 802481c:	0a00      	lsrs	r0, r0, #8
 802481e:	fb03 f309 	mul.w	r3, r3, r9
 8024822:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024826:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802482a:	4305      	orrs	r5, r0
 802482c:	fb02 f909 	mul.w	r9, r2, r9
 8024830:	1c58      	adds	r0, r3, #1
 8024832:	1c4a      	adds	r2, r1, #1
 8024834:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024838:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802483c:	0a2b      	lsrs	r3, r5, #8
 802483e:	0c2a      	lsrs	r2, r5, #16
 8024840:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024844:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8024848:	00db      	lsls	r3, r3, #3
 802484a:	0212      	lsls	r2, r2, #8
 802484c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8024850:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024854:	4313      	orrs	r3, r2
 8024856:	f109 0201 	add.w	r2, r9, #1
 802485a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802485e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8024862:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024866:	431d      	orrs	r5, r3
 8024868:	9b01      	ldr	r3, [sp, #4]
 802486a:	801d      	strh	r5, [r3, #0]
 802486c:	b009      	add	sp, #36	; 0x24
 802486e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024872:	2000      	movs	r0, #0
 8024874:	e701      	b.n	802467a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8024876:	2600      	movs	r6, #0
 8024878:	4630      	mov	r0, r6
 802487a:	e70b      	b.n	8024694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802487c:	2600      	movs	r6, #0
 802487e:	e709      	b.n	8024694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024880:	462e      	mov	r6, r5
 8024882:	e707      	b.n	8024694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8024884:	2700      	movs	r7, #0
 8024886:	e71a      	b.n	80246be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8024888:	2100      	movs	r1, #0
 802488a:	460f      	mov	r7, r1
 802488c:	e723      	b.n	80246d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802488e:	4621      	mov	r1, r4
 8024890:	4627      	mov	r7, r4
 8024892:	e720      	b.n	80246d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024894:	2100      	movs	r1, #0
 8024896:	e71e      	b.n	80246d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8024898:	4629      	mov	r1, r5
 802489a:	e71c      	b.n	80246d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0802489c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802489c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80248a0:	b09b      	sub	sp, #108	; 0x6c
 80248a2:	9218      	str	r2, [sp, #96]	; 0x60
 80248a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80248a6:	9116      	str	r1, [sp, #88]	; 0x58
 80248a8:	9307      	str	r3, [sp, #28]
 80248aa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80248ae:	9019      	str	r0, [sp, #100]	; 0x64
 80248b0:	6850      	ldr	r0, [r2, #4]
 80248b2:	6812      	ldr	r2, [r2, #0]
 80248b4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80248b6:	fb00 1303 	mla	r3, r0, r3, r1
 80248ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80248be:	930a      	str	r3, [sp, #40]	; 0x28
 80248c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248c2:	681b      	ldr	r3, [r3, #0]
 80248c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80248c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248c8:	685e      	ldr	r6, [r3, #4]
 80248ca:	3604      	adds	r6, #4
 80248cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80248ce:	2b00      	cmp	r3, #0
 80248d0:	dc03      	bgt.n	80248da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80248d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80248d4:	2b00      	cmp	r3, #0
 80248d6:	f340 8373 	ble.w	8024fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80248da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80248dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248e4:	1e48      	subs	r0, r1, #1
 80248e6:	1e57      	subs	r7, r2, #1
 80248e8:	9b07      	ldr	r3, [sp, #28]
 80248ea:	2b00      	cmp	r3, #0
 80248ec:	f340 8190 	ble.w	8024c10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80248f0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80248f2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80248f6:	ea4f 4325 	mov.w	r3, r5, asr #16
 80248fa:	d406      	bmi.n	802490a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80248fc:	4584      	cmp	ip, r0
 80248fe:	da04      	bge.n	802490a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024900:	2b00      	cmp	r3, #0
 8024902:	db02      	blt.n	802490a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024904:	42bb      	cmp	r3, r7
 8024906:	f2c0 8184 	blt.w	8024c12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802490a:	f11c 0c01 	adds.w	ip, ip, #1
 802490e:	f100 8172 	bmi.w	8024bf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024912:	4561      	cmp	r1, ip
 8024914:	f2c0 816f 	blt.w	8024bf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024918:	3301      	adds	r3, #1
 802491a:	f100 816c 	bmi.w	8024bf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802491e:	429a      	cmp	r2, r3
 8024920:	f2c0 8169 	blt.w	8024bf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8024924:	9b07      	ldr	r3, [sp, #28]
 8024926:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024928:	9317      	str	r3, [sp, #92]	; 0x5c
 802492a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802492c:	2b00      	cmp	r3, #0
 802492e:	f340 818e 	ble.w	8024c4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8024932:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024934:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024938:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802493a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802493e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024940:	141b      	asrs	r3, r3, #16
 8024942:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024946:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802494a:	f100 81d1 	bmi.w	8024cf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802494e:	f101 38ff 	add.w	r8, r1, #4294967295
 8024952:	4543      	cmp	r3, r8
 8024954:	f280 81cc 	bge.w	8024cf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024958:	f1bc 0f00 	cmp.w	ip, #0
 802495c:	f2c0 81c8 	blt.w	8024cf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8024960:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024964:	45c4      	cmp	ip, r8
 8024966:	f280 81c3 	bge.w	8024cf0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802496a:	b209      	sxth	r1, r1
 802496c:	fb0c 3301 	mla	r3, ip, r1, r3
 8024970:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024972:	eb04 0803 	add.w	r8, r4, r3
 8024976:	5ce3      	ldrb	r3, [r4, r3]
 8024978:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802497c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024980:	2a00      	cmp	r2, #0
 8024982:	f000 81aa 	beq.w	8024cda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8024986:	f898 c001 	ldrb.w	ip, [r8, #1]
 802498a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802498e:	940b      	str	r4, [sp, #44]	; 0x2c
 8024990:	0e24      	lsrs	r4, r4, #24
 8024992:	9412      	str	r4, [sp, #72]	; 0x48
 8024994:	b178      	cbz	r0, 80249b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024996:	eb08 0c01 	add.w	ip, r8, r1
 802499a:	f818 1001 	ldrb.w	r1, [r8, r1]
 802499e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80249a2:	9108      	str	r1, [sp, #32]
 80249a4:	0e09      	lsrs	r1, r1, #24
 80249a6:	9110      	str	r1, [sp, #64]	; 0x40
 80249a8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80249ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80249b0:	910c      	str	r1, [sp, #48]	; 0x30
 80249b2:	0e09      	lsrs	r1, r1, #24
 80249b4:	9113      	str	r1, [sp, #76]	; 0x4c
 80249b6:	b292      	uxth	r2, r2
 80249b8:	b280      	uxth	r0, r0
 80249ba:	fb02 f900 	mul.w	r9, r2, r0
 80249be:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80249c2:	0112      	lsls	r2, r2, #4
 80249c4:	eba2 0809 	sub.w	r8, r2, r9
 80249c8:	b280      	uxth	r0, r0
 80249ca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80249ce:	9912      	ldr	r1, [sp, #72]	; 0x48
 80249d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80249d2:	fa1f f888 	uxth.w	r8, r8
 80249d6:	1a12      	subs	r2, r2, r0
 80249d8:	b292      	uxth	r2, r2
 80249da:	fb08 f101 	mul.w	r1, r8, r1
 80249de:	fb02 110e 	mla	r1, r2, lr, r1
 80249e2:	fb00 1104 	mla	r1, r0, r4, r1
 80249e6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80249e8:	fb09 1104 	mla	r1, r9, r4, r1
 80249ec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80249f0:	2900      	cmp	r1, #0
 80249f2:	f000 80f5 	beq.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80249f6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80249fa:	d01b      	beq.n	8024a34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80249fc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024a00:	fb0e fa0a 	mul.w	sl, lr, sl
 8024a04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a08:	fb0e fe03 	mul.w	lr, lr, r3
 8024a0c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024a10:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a14:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a18:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024a1c:	4453      	add	r3, sl
 8024a1e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024a22:	0a1b      	lsrs	r3, r3, #8
 8024a24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a2c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024a30:	ea43 030c 	orr.w	r3, r3, ip
 8024a34:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a36:	2cff      	cmp	r4, #255	; 0xff
 8024a38:	d021      	beq.n	8024a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8024a3a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a3c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a40:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a42:	fb04 fb0b 	mul.w	fp, r4, fp
 8024a46:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024a48:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024a4c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024a4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a52:	fb04 fa0a 	mul.w	sl, r4, sl
 8024a56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024a5e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024a62:	44de      	add	lr, fp
 8024a64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024a68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024a6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024a74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024a78:	ea4e 040a 	orr.w	r4, lr, sl
 8024a7c:	940b      	str	r4, [sp, #44]	; 0x2c
 8024a7e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a80:	2cff      	cmp	r4, #255	; 0xff
 8024a82:	d021      	beq.n	8024ac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024a84:	9c08      	ldr	r4, [sp, #32]
 8024a86:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024a8a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a8c:	fb04 fb0b 	mul.w	fp, r4, fp
 8024a90:	9c08      	ldr	r4, [sp, #32]
 8024a92:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024a96:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8024a98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024a9c:	fb04 fa0a 	mul.w	sl, r4, sl
 8024aa0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024aa4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024aa8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024aac:	44de      	add	lr, fp
 8024aae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024ab2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024ab6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024aba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024abe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ac2:	ea4e 040a 	orr.w	r4, lr, sl
 8024ac6:	9408      	str	r4, [sp, #32]
 8024ac8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024aca:	2cff      	cmp	r4, #255	; 0xff
 8024acc:	d021      	beq.n	8024b12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024ace:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024ad0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024ad4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ad6:	fb04 fb0b 	mul.w	fp, r4, fp
 8024ada:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024adc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024ae0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024ae2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024ae6:	fb04 fa0a 	mul.w	sl, r4, sl
 8024aea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024aee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024af2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024af6:	44de      	add	lr, fp
 8024af8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024afc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024b00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024b04:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024b08:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024b0c:	ea4e 040a 	orr.w	r4, lr, sl
 8024b10:	940c      	str	r4, [sp, #48]	; 0x30
 8024b12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b14:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024b18:	9c08      	ldr	r4, [sp, #32]
 8024b1a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024b1e:	fb08 fc0c 	mul.w	ip, r8, ip
 8024b22:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024b26:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b2a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024b2c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024b30:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024b34:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024b36:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024b3a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024b3e:	fb08 f80e 	mul.w	r8, r8, lr
 8024b42:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024b46:	fb02 8303 	mla	r3, r2, r3, r8
 8024b4a:	9a08      	ldr	r2, [sp, #32]
 8024b4c:	f8b7 8000 	ldrh.w	r8, [r7]
 8024b50:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024b54:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b56:	fb00 330a 	mla	r3, r0, sl, r3
 8024b5a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8024b5e:	fb09 3900 	mla	r9, r9, r0, r3
 8024b62:	43c9      	mvns	r1, r1
 8024b64:	ea4f 2228 	mov.w	r2, r8, asr #8
 8024b68:	fa5f fe81 	uxtb.w	lr, r1
 8024b6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024b70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024b74:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b78:	fb02 f20e 	mul.w	r2, r2, lr
 8024b7c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024b80:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024b84:	ea4c 0c09 	orr.w	ip, ip, r9
 8024b88:	1c53      	adds	r3, r2, #1
 8024b8a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8024b8e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8024b92:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8024b96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b9a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024b9e:	4a63      	ldr	r2, [pc, #396]	; (8024d2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8024ba0:	fb00 f00e 	mul.w	r0, r0, lr
 8024ba4:	b2db      	uxtb	r3, r3
 8024ba6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8024baa:	1c43      	adds	r3, r0, #1
 8024bac:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bb0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8024bb4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8024bb8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024bbc:	b2c9      	uxtb	r1, r1
 8024bbe:	00db      	lsls	r3, r3, #3
 8024bc0:	fb01 f10e 	mul.w	r1, r1, lr
 8024bc4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024bc8:	4313      	orrs	r3, r2
 8024bca:	1c4a      	adds	r2, r1, #1
 8024bcc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024bd0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024bd4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024bd8:	ea4c 0c03 	orr.w	ip, ip, r3
 8024bdc:	f8a7 c000 	strh.w	ip, [r7]
 8024be0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024be2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024be4:	441a      	add	r2, r3
 8024be6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024be8:	9225      	str	r2, [sp, #148]	; 0x94
 8024bea:	441d      	add	r5, r3
 8024bec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024bee:	3b01      	subs	r3, #1
 8024bf0:	3702      	adds	r7, #2
 8024bf2:	9317      	str	r3, [sp, #92]	; 0x5c
 8024bf4:	e699      	b.n	802492a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024bf6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024bf8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024bfa:	441c      	add	r4, r3
 8024bfc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024bfe:	9425      	str	r4, [sp, #148]	; 0x94
 8024c00:	441d      	add	r5, r3
 8024c02:	9b07      	ldr	r3, [sp, #28]
 8024c04:	3b01      	subs	r3, #1
 8024c06:	9307      	str	r3, [sp, #28]
 8024c08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c0a:	3302      	adds	r3, #2
 8024c0c:	930a      	str	r3, [sp, #40]	; 0x28
 8024c0e:	e66b      	b.n	80248e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8024c10:	d024      	beq.n	8024c5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8024c12:	9b07      	ldr	r3, [sp, #28]
 8024c14:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024c16:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024c18:	3b01      	subs	r3, #1
 8024c1a:	fb00 4003 	mla	r0, r0, r3, r4
 8024c1e:	1400      	asrs	r0, r0, #16
 8024c20:	f53f ae80 	bmi.w	8024924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c24:	3901      	subs	r1, #1
 8024c26:	4288      	cmp	r0, r1
 8024c28:	f6bf ae7c 	bge.w	8024924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c2c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024c2e:	fb01 5303 	mla	r3, r1, r3, r5
 8024c32:	141b      	asrs	r3, r3, #16
 8024c34:	f53f ae76 	bmi.w	8024924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c38:	3a01      	subs	r2, #1
 8024c3a:	4293      	cmp	r3, r2
 8024c3c:	f6bf ae72 	bge.w	8024924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024c40:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024c44:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8024c48:	f1bb 0f00 	cmp.w	fp, #0
 8024c4c:	dc70      	bgt.n	8024d30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8024c4e:	9b07      	ldr	r3, [sp, #28]
 8024c50:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024c54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c56:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024c5a:	930a      	str	r3, [sp, #40]	; 0x28
 8024c5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024c5e:	2b00      	cmp	r3, #0
 8024c60:	f340 81ae 	ble.w	8024fc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8024c64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c7e:	eef0 6a62 	vmov.f32	s13, s5
 8024c82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c8e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8024c92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c96:	eef0 6a43 	vmov.f32	s13, s6
 8024c9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024c9e:	ee12 2a90 	vmov	r2, s5
 8024ca2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024ca6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024caa:	ee13 2a10 	vmov	r2, s6
 8024cae:	9327      	str	r3, [sp, #156]	; 0x9c
 8024cb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cb6:	9328      	str	r3, [sp, #160]	; 0xa0
 8024cb8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024cba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024cbc:	3b01      	subs	r3, #1
 8024cbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024cc2:	9316      	str	r3, [sp, #88]	; 0x58
 8024cc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024cc6:	bf08      	it	eq
 8024cc8:	4613      	moveq	r3, r2
 8024cca:	ee16 5a90 	vmov	r5, s13
 8024cce:	9307      	str	r3, [sp, #28]
 8024cd0:	eeb0 3a67 	vmov.f32	s6, s15
 8024cd4:	eef0 2a47 	vmov.f32	s5, s14
 8024cd8:	e5f8      	b.n	80248cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8024cda:	2800      	cmp	r0, #0
 8024cdc:	f43f ae6b 	beq.w	80249b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024ce0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8024ce4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024ce8:	9108      	str	r1, [sp, #32]
 8024cea:	0e09      	lsrs	r1, r1, #24
 8024cec:	9110      	str	r1, [sp, #64]	; 0x40
 8024cee:	e662      	b.n	80249b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8024cf0:	f113 0801 	adds.w	r8, r3, #1
 8024cf4:	f53f af74 	bmi.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024cf8:	4541      	cmp	r1, r8
 8024cfa:	f6ff af71 	blt.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024cfe:	f11c 0801 	adds.w	r8, ip, #1
 8024d02:	f53f af6d 	bmi.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d06:	45c6      	cmp	lr, r8
 8024d08:	f6ff af6a 	blt.w	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d0c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8024d10:	b209      	sxth	r1, r1
 8024d12:	fa0f f38e 	sxth.w	r3, lr
 8024d16:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8024d1a:	9301      	str	r3, [sp, #4]
 8024d1c:	9100      	str	r1, [sp, #0]
 8024d1e:	4633      	mov	r3, r6
 8024d20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d22:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024d24:	4639      	mov	r1, r7
 8024d26:	f7ff fc7a 	bl	802461e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8024d2a:	e759      	b.n	8024be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8024d2c:	fffff800 	.word	0xfffff800
 8024d30:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8024d32:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8024d34:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024d38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024d3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d3e:	1427      	asrs	r7, r4, #16
 8024d40:	142b      	asrs	r3, r5, #16
 8024d42:	fb01 7303 	mla	r3, r1, r3, r7
 8024d46:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024d48:	18e7      	adds	r7, r4, r3
 8024d4a:	5ce3      	ldrb	r3, [r4, r3]
 8024d4c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024d50:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8024d54:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024d58:	2a00      	cmp	r2, #0
 8024d5a:	f000 8127 	beq.w	8024fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024d5e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8024d62:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8024d66:	940d      	str	r4, [sp, #52]	; 0x34
 8024d68:	0e24      	lsrs	r4, r4, #24
 8024d6a:	9414      	str	r4, [sp, #80]	; 0x50
 8024d6c:	b170      	cbz	r0, 8024d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024d6e:	eb07 0e01 	add.w	lr, r7, r1
 8024d72:	5c79      	ldrb	r1, [r7, r1]
 8024d74:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d78:	9109      	str	r1, [sp, #36]	; 0x24
 8024d7a:	0e09      	lsrs	r1, r1, #24
 8024d7c:	9111      	str	r1, [sp, #68]	; 0x44
 8024d7e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8024d82:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024d86:	910e      	str	r1, [sp, #56]	; 0x38
 8024d88:	0e09      	lsrs	r1, r1, #24
 8024d8a:	9115      	str	r1, [sp, #84]	; 0x54
 8024d8c:	b292      	uxth	r2, r2
 8024d8e:	b280      	uxth	r0, r0
 8024d90:	fb02 f800 	mul.w	r8, r2, r0
 8024d94:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8024d98:	0112      	lsls	r2, r2, #4
 8024d9a:	eba2 0e08 	sub.w	lr, r2, r8
 8024d9e:	b280      	uxth	r0, r0
 8024da0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8024da4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024da6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024da8:	fa1f fe8e 	uxth.w	lr, lr
 8024dac:	1a09      	subs	r1, r1, r0
 8024dae:	b289      	uxth	r1, r1
 8024db0:	fb0e f202 	mul.w	r2, lr, r2
 8024db4:	fb01 220c 	mla	r2, r1, ip, r2
 8024db8:	fb00 2204 	mla	r2, r0, r4, r2
 8024dbc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024dbe:	fb08 2204 	mla	r2, r8, r4, r2
 8024dc2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8024dc6:	2a00      	cmp	r2, #0
 8024dc8:	f000 80e5 	beq.w	8024f96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8024dcc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024dd0:	d019      	beq.n	8024e06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8024dd2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024dd6:	fb0c fa0a 	mul.w	sl, ip, sl
 8024dda:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024dde:	fb0c fc03 	mul.w	ip, ip, r3
 8024de2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024de6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024dea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024dee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024df2:	4453      	add	r3, sl
 8024df4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024df8:	0a1b      	lsrs	r3, r3, #8
 8024dfa:	0a3f      	lsrs	r7, r7, #8
 8024dfc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024e00:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024e04:	433b      	orrs	r3, r7
 8024e06:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e08:	2cff      	cmp	r4, #255	; 0xff
 8024e0a:	d020      	beq.n	8024e4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8024e0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e0e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e12:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e14:	4367      	muls	r7, r4
 8024e16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e18:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e1c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8024e1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e22:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e2e:	44bc      	add	ip, r7
 8024e30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e48:	ea4c 040a 	orr.w	r4, ip, sl
 8024e4c:	940d      	str	r4, [sp, #52]	; 0x34
 8024e4e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e50:	2cff      	cmp	r4, #255	; 0xff
 8024e52:	d020      	beq.n	8024e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8024e54:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e56:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024e5a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e5c:	4367      	muls	r7, r4
 8024e5e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024e60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024e64:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8024e66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024e6a:	fb04 fa0a 	mul.w	sl, r4, sl
 8024e6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024e72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e76:	44bc      	add	ip, r7
 8024e78:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024e7c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024e80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024e88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024e90:	ea4c 040a 	orr.w	r4, ip, sl
 8024e94:	9409      	str	r4, [sp, #36]	; 0x24
 8024e96:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024e98:	2cff      	cmp	r4, #255	; 0xff
 8024e9a:	d020      	beq.n	8024ede <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8024e9c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024e9e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024ea2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024ea4:	4367      	muls	r7, r4
 8024ea6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024ea8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024eac:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024eae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024eb2:	fb04 fa0a 	mul.w	sl, r4, sl
 8024eb6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024eba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ebe:	44bc      	add	ip, r7
 8024ec0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024ec4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024ec8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024ecc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024ed0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024ed4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024ed8:	ea4c 040a 	orr.w	r4, ip, sl
 8024edc:	940e      	str	r4, [sp, #56]	; 0x38
 8024ede:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024ee0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8024ee4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8024ee6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024eea:	fb0e f707 	mul.w	r7, lr, r7
 8024eee:	fb01 770c 	mla	r7, r1, ip, r7
 8024ef2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ef6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024ef8:	fb00 770c 	mla	r7, r0, ip, r7
 8024efc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024f00:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024f02:	fb08 770c 	mla	r7, r8, ip, r7
 8024f06:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8024f0a:	fb0e fe0c 	mul.w	lr, lr, ip
 8024f0e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024f12:	fb01 e303 	mla	r3, r1, r3, lr
 8024f16:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024f18:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024f1c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024f1e:	fb00 330a 	mla	r3, r0, sl, r3
 8024f22:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024f26:	fb08 3c0c 	mla	ip, r8, ip, r3
 8024f2a:	f8b9 3000 	ldrh.w	r3, [r9]
 8024f2e:	43d2      	mvns	r2, r2
 8024f30:	1218      	asrs	r0, r3, #8
 8024f32:	b2d2      	uxtb	r2, r2
 8024f34:	10d9      	asrs	r1, r3, #3
 8024f36:	0a3f      	lsrs	r7, r7, #8
 8024f38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024f3c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024f40:	00db      	lsls	r3, r3, #3
 8024f42:	4350      	muls	r0, r2
 8024f44:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024f48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024f4c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f50:	b2db      	uxtb	r3, r3
 8024f52:	ea47 070c 	orr.w	r7, r7, ip
 8024f56:	4351      	muls	r1, r2
 8024f58:	4353      	muls	r3, r2
 8024f5a:	1c42      	adds	r2, r0, #1
 8024f5c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f60:	0c3a      	lsrs	r2, r7, #16
 8024f62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024f66:	4a18      	ldr	r2, [pc, #96]	; (8024fc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8024f68:	b2c0      	uxtb	r0, r0
 8024f6a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8024f6e:	1c4a      	adds	r2, r1, #1
 8024f70:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f74:	0a3a      	lsrs	r2, r7, #8
 8024f76:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024f7a:	00c9      	lsls	r1, r1, #3
 8024f7c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024f80:	4301      	orrs	r1, r0
 8024f82:	1c58      	adds	r0, r3, #1
 8024f84:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024f88:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8024f8c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8024f90:	4308      	orrs	r0, r1
 8024f92:	f8a9 0000 	strh.w	r0, [r9]
 8024f96:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024f98:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024f9a:	441a      	add	r2, r3
 8024f9c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024f9e:	9225      	str	r2, [sp, #148]	; 0x94
 8024fa0:	f109 0902 	add.w	r9, r9, #2
 8024fa4:	441d      	add	r5, r3
 8024fa6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024faa:	e64d      	b.n	8024c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8024fac:	2800      	cmp	r0, #0
 8024fae:	f43f aeed 	beq.w	8024d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fb2:	5c79      	ldrb	r1, [r7, r1]
 8024fb4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8024fb8:	9109      	str	r1, [sp, #36]	; 0x24
 8024fba:	0e09      	lsrs	r1, r1, #24
 8024fbc:	9111      	str	r1, [sp, #68]	; 0x44
 8024fbe:	e6e5      	b.n	8024d8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8024fc0:	b01b      	add	sp, #108	; 0x6c
 8024fc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024fc6:	bf00      	nop
 8024fc8:	fffff800 	.word	0xfffff800

08024fcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8024fcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024fd0:	b085      	sub	sp, #20
 8024fd2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8024fd6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8024fda:	9103      	str	r1, [sp, #12]
 8024fdc:	fb00 7406 	mla	r4, r0, r6, r7
 8024fe0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8024fe4:	2800      	cmp	r0, #0
 8024fe6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8024fea:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8024fee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8024ff2:	9501      	str	r5, [sp, #4]
 8024ff4:	eb03 0904 	add.w	r9, r3, r4
 8024ff8:	f2c0 8150 	blt.w	802529c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8024ffc:	4583      	cmp	fp, r0
 8024ffe:	f340 814d 	ble.w	802529c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8025002:	2f00      	cmp	r7, #0
 8025004:	f2c0 8146 	blt.w	8025294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8025008:	42be      	cmp	r6, r7
 802500a:	f340 8143 	ble.w	8025294 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802500e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8025012:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8025016:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802501a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802501e:	4355      	muls	r5, r2
 8025020:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025024:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025028:	fb0c f203 	mul.w	r2, ip, r3
 802502c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025030:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025034:	441d      	add	r5, r3
 8025036:	f102 0320 	add.w	r3, r2, #32
 802503a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802503e:	0a1b      	lsrs	r3, r3, #8
 8025040:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025044:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025048:	431c      	orrs	r4, r3
 802504a:	1c7b      	adds	r3, r7, #1
 802504c:	f100 812b 	bmi.w	80252a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025050:	429e      	cmp	r6, r3
 8025052:	f340 8128 	ble.w	80252a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8025056:	2900      	cmp	r1, #0
 8025058:	f000 8128 	beq.w	80252ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802505c:	9a01      	ldr	r2, [sp, #4]
 802505e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025062:	8855      	ldrh	r5, [r2, #2]
 8025064:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025068:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802506c:	fb08 f802 	mul.w	r8, r8, r2
 8025070:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025074:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025078:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802507c:	435d      	muls	r5, r3
 802507e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025082:	44d0      	add	r8, sl
 8025084:	f105 0a20 	add.w	sl, r5, #32
 8025088:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802508c:	0a2d      	lsrs	r5, r5, #8
 802508e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025092:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025096:	432a      	orrs	r2, r5
 8025098:	3001      	adds	r0, #1
 802509a:	f100 810d 	bmi.w	80252b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802509e:	4583      	cmp	fp, r0
 80250a0:	f340 810a 	ble.w	80252b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80250a4:	f1be 0f00 	cmp.w	lr, #0
 80250a8:	f000 810b 	beq.w	80252c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80250ac:	2f00      	cmp	r7, #0
 80250ae:	f2c0 8100 	blt.w	80252b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80250b2:	42be      	cmp	r6, r7
 80250b4:	f340 80fd 	ble.w	80252b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80250b8:	9801      	ldr	r0, [sp, #4]
 80250ba:	f819 5006 	ldrb.w	r5, [r9, r6]
 80250be:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80250c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80250c6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80250ca:	fb0a fa00 	mul.w	sl, sl, r0
 80250ce:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80250d2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80250d6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80250da:	fb05 f808 	mul.w	r8, r5, r8
 80250de:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80250e2:	4482      	add	sl, r0
 80250e4:	f108 0020 	add.w	r0, r8, #32
 80250e8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80250ec:	0a00      	lsrs	r0, r0, #8
 80250ee:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80250f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80250f6:	ea4b 0b00 	orr.w	fp, fp, r0
 80250fa:	3701      	adds	r7, #1
 80250fc:	f100 80e6 	bmi.w	80252cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025100:	42be      	cmp	r6, r7
 8025102:	f340 80e3 	ble.w	80252cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8025106:	2900      	cmp	r1, #0
 8025108:	f000 80e3 	beq.w	80252d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802510c:	3601      	adds	r6, #1
 802510e:	9801      	ldr	r0, [sp, #4]
 8025110:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025114:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025118:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802511c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025120:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025124:	fb09 f906 	mul.w	r9, r9, r6
 8025128:	fb07 f800 	mul.w	r8, r7, r0
 802512c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025130:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025134:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025138:	44d1      	add	r9, sl
 802513a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802513e:	f108 0020 	add.w	r0, r8, #32
 8025142:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025146:	0a00      	lsrs	r0, r0, #8
 8025148:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802514c:	4330      	orrs	r0, r6
 802514e:	b28e      	uxth	r6, r1
 8025150:	fa1f f98e 	uxth.w	r9, lr
 8025154:	fb06 f809 	mul.w	r8, r6, r9
 8025158:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802515c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025160:	0136      	lsls	r6, r6, #4
 8025162:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025166:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802516a:	9601      	str	r6, [sp, #4]
 802516c:	ea4a 0404 	orr.w	r4, sl, r4
 8025170:	fa1f f689 	uxth.w	r6, r9
 8025174:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025178:	fb11 f90e 	smulbb	r9, r1, lr
 802517c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025180:	9602      	str	r6, [sp, #8]
 8025182:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025186:	4626      	mov	r6, r4
 8025188:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802518c:	f1ce 0410 	rsb	r4, lr, #16
 8025190:	1a64      	subs	r4, r4, r1
 8025192:	ea4a 0202 	orr.w	r2, sl, r2
 8025196:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802519a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802519e:	434a      	muls	r2, r1
 80251a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80251a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80251a8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80251ac:	fb04 2406 	mla	r4, r4, r6, r2
 80251b0:	ea4a 0000 	orr.w	r0, sl, r0
 80251b4:	fb09 4200 	mla	r2, r9, r0, r4
 80251b8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80251bc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80251c0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80251c4:	ea44 0b0b 	orr.w	fp, r4, fp
 80251c8:	9c01      	ldr	r4, [sp, #4]
 80251ca:	9e02      	ldr	r6, [sp, #8]
 80251cc:	9903      	ldr	r1, [sp, #12]
 80251ce:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80251d2:	1ba4      	subs	r4, r4, r6
 80251d4:	9e01      	ldr	r6, [sp, #4]
 80251d6:	8808      	ldrh	r0, [r1, #0]
 80251d8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80251dc:	eba6 0608 	sub.w	r6, r6, r8
 80251e0:	b2b6      	uxth	r6, r6
 80251e2:	b2a4      	uxth	r4, r4
 80251e4:	4373      	muls	r3, r6
 80251e6:	fb0c 3304 	mla	r3, ip, r4, r3
 80251ea:	9c02      	ldr	r4, [sp, #8]
 80251ec:	fb04 3505 	mla	r5, r4, r5, r3
 80251f0:	fb08 5707 	mla	r7, r8, r7, r5
 80251f4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80251f8:	b289      	uxth	r1, r1
 80251fa:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80251fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025202:	434f      	muls	r7, r1
 8025204:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025208:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802520c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025210:	1c7b      	adds	r3, r7, #1
 8025212:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025216:	ea42 0e0e 	orr.w	lr, r2, lr
 802521a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802521e:	fa1f f28e 	uxth.w	r2, lr
 8025222:	1203      	asrs	r3, r0, #8
 8025224:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025228:	b2ff      	uxtb	r7, r7
 802522a:	1215      	asrs	r5, r2, #8
 802522c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025230:	fb13 f307 	smulbb	r3, r3, r7
 8025234:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025238:	fb05 3501 	mla	r5, r5, r1, r3
 802523c:	10c3      	asrs	r3, r0, #3
 802523e:	10d4      	asrs	r4, r2, #3
 8025240:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025244:	fb13 f307 	smulbb	r3, r3, r7
 8025248:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802524c:	fb04 3401 	mla	r4, r4, r1, r3
 8025250:	00c3      	lsls	r3, r0, #3
 8025252:	00d2      	lsls	r2, r2, #3
 8025254:	b2db      	uxtb	r3, r3
 8025256:	fb13 f307 	smulbb	r3, r3, r7
 802525a:	b2d2      	uxtb	r2, r2
 802525c:	fb02 3101 	mla	r1, r2, r1, r3
 8025260:	b2ad      	uxth	r5, r5
 8025262:	b289      	uxth	r1, r1
 8025264:	b2a4      	uxth	r4, r4
 8025266:	1c6b      	adds	r3, r5, #1
 8025268:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802526c:	1c62      	adds	r2, r4, #1
 802526e:	1c4b      	adds	r3, r1, #1
 8025270:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025274:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025278:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802527c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025280:	0964      	lsrs	r4, r4, #5
 8025282:	432b      	orrs	r3, r5
 8025284:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025288:	9a03      	ldr	r2, [sp, #12]
 802528a:	4323      	orrs	r3, r4
 802528c:	8013      	strh	r3, [r2, #0]
 802528e:	b005      	add	sp, #20
 8025290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025294:	f04f 0c00 	mov.w	ip, #0
 8025298:	4664      	mov	r4, ip
 802529a:	e6d6      	b.n	802504a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802529c:	2300      	movs	r3, #0
 802529e:	469c      	mov	ip, r3
 80252a0:	461a      	mov	r2, r3
 80252a2:	461c      	mov	r4, r3
 80252a4:	e6f8      	b.n	8025098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252a6:	2300      	movs	r3, #0
 80252a8:	461a      	mov	r2, r3
 80252aa:	e6f5      	b.n	8025098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252ac:	460b      	mov	r3, r1
 80252ae:	460a      	mov	r2, r1
 80252b0:	e6f2      	b.n	8025098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80252b2:	2500      	movs	r5, #0
 80252b4:	46ab      	mov	fp, r5
 80252b6:	e720      	b.n	80250fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80252b8:	2700      	movs	r7, #0
 80252ba:	463d      	mov	r5, r7
 80252bc:	4638      	mov	r0, r7
 80252be:	46bb      	mov	fp, r7
 80252c0:	e745      	b.n	802514e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252c2:	4677      	mov	r7, lr
 80252c4:	4675      	mov	r5, lr
 80252c6:	4670      	mov	r0, lr
 80252c8:	46f3      	mov	fp, lr
 80252ca:	e740      	b.n	802514e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252cc:	2700      	movs	r7, #0
 80252ce:	4638      	mov	r0, r7
 80252d0:	e73d      	b.n	802514e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80252d2:	460f      	mov	r7, r1
 80252d4:	4608      	mov	r0, r1
 80252d6:	e73a      	b.n	802514e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080252d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80252d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252dc:	b097      	sub	sp, #92	; 0x5c
 80252de:	9214      	str	r2, [sp, #80]	; 0x50
 80252e0:	9308      	str	r3, [sp, #32]
 80252e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80252e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80252e8:	9312      	str	r3, [sp, #72]	; 0x48
 80252ea:	9111      	str	r1, [sp, #68]	; 0x44
 80252ec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80252f0:	9015      	str	r0, [sp, #84]	; 0x54
 80252f2:	6850      	ldr	r0, [r2, #4]
 80252f4:	6812      	ldr	r2, [r2, #0]
 80252f6:	fb00 1303 	mla	r3, r0, r3, r1
 80252fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80252fe:	9309      	str	r3, [sp, #36]	; 0x24
 8025300:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025302:	681b      	ldr	r3, [r3, #0]
 8025304:	930b      	str	r3, [sp, #44]	; 0x2c
 8025306:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025308:	685b      	ldr	r3, [r3, #4]
 802530a:	930c      	str	r3, [sp, #48]	; 0x30
 802530c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8025310:	930a      	str	r3, [sp, #40]	; 0x28
 8025312:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8025314:	2b00      	cmp	r3, #0
 8025316:	dc03      	bgt.n	8025320 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025318:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802531a:	2b00      	cmp	r3, #0
 802531c:	f340 83cb 	ble.w	8025ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8025320:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025322:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025326:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802532a:	1e48      	subs	r0, r1, #1
 802532c:	1e55      	subs	r5, r2, #1
 802532e:	9b08      	ldr	r3, [sp, #32]
 8025330:	2b00      	cmp	r3, #0
 8025332:	f340 81a3 	ble.w	802567c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8025336:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8025338:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802533a:	1436      	asrs	r6, r6, #16
 802533c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025340:	d406      	bmi.n	8025350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025342:	4286      	cmp	r6, r0
 8025344:	da04      	bge.n	8025350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025346:	2b00      	cmp	r3, #0
 8025348:	db02      	blt.n	8025350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802534a:	42ab      	cmp	r3, r5
 802534c:	f2c0 8197 	blt.w	802567e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8025350:	3601      	adds	r6, #1
 8025352:	f100 8184 	bmi.w	802565e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025356:	42b1      	cmp	r1, r6
 8025358:	f2c0 8181 	blt.w	802565e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802535c:	3301      	adds	r3, #1
 802535e:	f100 817e 	bmi.w	802565e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025362:	429a      	cmp	r2, r3
 8025364:	f2c0 817b 	blt.w	802565e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8025368:	9b08      	ldr	r3, [sp, #32]
 802536a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802536c:	9313      	str	r3, [sp, #76]	; 0x4c
 802536e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025372:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025374:	2b00      	cmp	r3, #0
 8025376:	f340 81a4 	ble.w	80256c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802537a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802537c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802537e:	1418      	asrs	r0, r3, #16
 8025380:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025382:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025386:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8025388:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802538c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802538e:	142d      	asrs	r5, r5, #16
 8025390:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025394:	f100 81f8 	bmi.w	8025788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8025398:	f102 3eff 	add.w	lr, r2, #4294967295
 802539c:	4575      	cmp	r5, lr
 802539e:	f280 81f3 	bge.w	8025788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253a2:	2800      	cmp	r0, #0
 80253a4:	f2c0 81f0 	blt.w	8025788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253a8:	f103 3eff 	add.w	lr, r3, #4294967295
 80253ac:	4570      	cmp	r0, lr
 80253ae:	f280 81eb 	bge.w	8025788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80253b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80253b4:	b212      	sxth	r2, r2
 80253b6:	fb00 5002 	mla	r0, r0, r2, r5
 80253ba:	fa1f fe81 	uxth.w	lr, r1
 80253be:	eb03 0a00 	add.w	sl, r3, r0
 80253c2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80253c6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80253ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80253ce:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80253d2:	b29b      	uxth	r3, r3
 80253d4:	f1bc 0f00 	cmp.w	ip, #0
 80253d8:	f000 81b9 	beq.w	802574e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80253dc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80253e0:	940d      	str	r4, [sp, #52]	; 0x34
 80253e2:	eb0a 0b02 	add.w	fp, sl, r2
 80253e6:	fa1f fa8c 	uxth.w	sl, ip
 80253ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80253ee:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80253f2:	fa1f fa8a 	uxth.w	sl, sl
 80253f6:	eba5 050e 	sub.w	r5, r5, lr
 80253fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80253fe:	940e      	str	r4, [sp, #56]	; 0x38
 8025400:	eba3 030a 	sub.w	r3, r3, sl
 8025404:	b2ad      	uxth	r5, r5
 8025406:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025408:	b29b      	uxth	r3, r3
 802540a:	fb08 f505 	mul.w	r5, r8, r5
 802540e:	fb09 5303 	mla	r3, r9, r3, r5
 8025412:	fb0a 3304 	mla	r3, sl, r4, r3
 8025416:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025418:	fb0e 3304 	mla	r3, lr, r4, r3
 802541c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025420:	2b00      	cmp	r3, #0
 8025422:	f000 810f 	beq.w	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025426:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025428:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802542c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025430:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025434:	f000 8190 	beq.w	8025758 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8025438:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802543c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025440:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025444:	fb09 f000 	mul.w	r0, r9, r0
 8025448:	fb0a fe0e 	mul.w	lr, sl, lr
 802544c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025450:	f100 0b20 	add.w	fp, r0, #32
 8025454:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025458:	44ce      	add	lr, r9
 802545a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802545e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025462:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025466:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802546a:	ea4e 0909 	orr.w	r9, lr, r9
 802546e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025472:	8868      	ldrh	r0, [r5, #2]
 8025474:	d019      	beq.n	80254aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8025476:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802547a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802547e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025482:	fb08 f800 	mul.w	r8, r8, r0
 8025486:	fb0a fe0e 	mul.w	lr, sl, lr
 802548a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802548e:	f108 0b20 	add.w	fp, r8, #32
 8025492:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025496:	4486      	add	lr, r0
 8025498:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802549c:	0a00      	lsrs	r0, r0, #8
 802549e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80254a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80254a6:	ea4e 0000 	orr.w	r0, lr, r0
 80254aa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80254ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80254b2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80254b6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80254ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80254be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80254c2:	ea4e 0909 	orr.w	r9, lr, r9
 80254c6:	ea4a 0000 	orr.w	r0, sl, r0
 80254ca:	f1bc 0f00 	cmp.w	ip, #0
 80254ce:	f000 8145 	beq.w	802575c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80254d2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80254d6:	3a01      	subs	r2, #1
 80254d8:	0052      	lsls	r2, r2, #1
 80254da:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80254dc:	3202      	adds	r2, #2
 80254de:	2cff      	cmp	r4, #255	; 0xff
 80254e0:	eb05 0e02 	add.w	lr, r5, r2
 80254e4:	5aaa      	ldrh	r2, [r5, r2]
 80254e6:	d018      	beq.n	802551a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80254e8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80254ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254f0:	fb04 fa02 	mul.w	sl, r4, r2
 80254f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80254f8:	fb08 f805 	mul.w	r8, r8, r5
 80254fc:	f10a 0520 	add.w	r5, sl, #32
 8025500:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025504:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025508:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802550c:	4442      	add	r2, r8
 802550e:	0a2d      	lsrs	r5, r5, #8
 8025510:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025514:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025518:	432a      	orrs	r2, r5
 802551a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802551c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025520:	2cff      	cmp	r4, #255	; 0xff
 8025522:	d01a      	beq.n	802555a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8025524:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025528:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802552c:	fb04 fa05 	mul.w	sl, r4, r5
 8025530:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025534:	fb08 f80e 	mul.w	r8, r8, lr
 8025538:	f10a 0e20 	add.w	lr, sl, #32
 802553c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8025540:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8025544:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025548:	4445      	add	r5, r8
 802554a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802554e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8025552:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025556:	ea45 050e 	orr.w	r5, r5, lr
 802555a:	fb1c fe01 	smulbb	lr, ip, r1
 802555e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8025562:	f1cc 0810 	rsb	r8, ip, #16
 8025566:	eba8 0801 	sub.w	r8, r8, r1
 802556a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802556e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8025572:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8025576:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802557a:	4341      	muls	r1, r0
 802557c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025580:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025584:	ea4a 0202 	orr.w	r2, sl, r2
 8025588:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802558c:	fb09 1108 	mla	r1, r9, r8, r1
 8025590:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025594:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8025598:	fb0c 1102 	mla	r1, ip, r2, r1
 802559c:	ea4b 0505 	orr.w	r5, fp, r5
 80255a0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80255a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80255a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80255ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80255b0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80255b4:	ea42 0e0e 	orr.w	lr, r2, lr
 80255b8:	fa1f f28e 	uxth.w	r2, lr
 80255bc:	2bff      	cmp	r3, #255	; 0xff
 80255be:	d103      	bne.n	80255c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80255c0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80255c2:	29ff      	cmp	r1, #255	; 0xff
 80255c4:	f000 80de 	beq.w	8025784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80255c8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80255ca:	8838      	ldrh	r0, [r7, #0]
 80255cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80255ce:	434b      	muls	r3, r1
 80255d0:	f103 0c01 	add.w	ip, r3, #1
 80255d4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80255d8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80255dc:	fa5f fc83 	uxtb.w	ip, r3
 80255e0:	1203      	asrs	r3, r0, #8
 80255e2:	1215      	asrs	r5, r2, #8
 80255e4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80255e8:	fb13 f30c 	smulbb	r3, r3, ip
 80255ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80255f0:	fb05 3501 	mla	r5, r5, r1, r3
 80255f4:	10c3      	asrs	r3, r0, #3
 80255f6:	10d1      	asrs	r1, r2, #3
 80255f8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80255fc:	fb13 f30c 	smulbb	r3, r3, ip
 8025600:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025604:	fb01 3104 	mla	r1, r1, r4, r3
 8025608:	00c3      	lsls	r3, r0, #3
 802560a:	00d2      	lsls	r2, r2, #3
 802560c:	b2db      	uxtb	r3, r3
 802560e:	b2d2      	uxtb	r2, r2
 8025610:	fb13 f30c 	smulbb	r3, r3, ip
 8025614:	b2ad      	uxth	r5, r5
 8025616:	fb02 3304 	mla	r3, r2, r4, r3
 802561a:	b29a      	uxth	r2, r3
 802561c:	1c6b      	adds	r3, r5, #1
 802561e:	b289      	uxth	r1, r1
 8025620:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025624:	1c53      	adds	r3, r2, #1
 8025626:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802562a:	1c4a      	adds	r2, r1, #1
 802562c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8025630:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025634:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025638:	0949      	lsrs	r1, r1, #5
 802563a:	432b      	orrs	r3, r5
 802563c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025640:	430b      	orrs	r3, r1
 8025642:	803b      	strh	r3, [r7, #0]
 8025644:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025646:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025648:	4413      	add	r3, r2
 802564a:	9321      	str	r3, [sp, #132]	; 0x84
 802564c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802564e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025650:	441a      	add	r2, r3
 8025652:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025654:	9222      	str	r2, [sp, #136]	; 0x88
 8025656:	3b01      	subs	r3, #1
 8025658:	3702      	adds	r7, #2
 802565a:	9313      	str	r3, [sp, #76]	; 0x4c
 802565c:	e689      	b.n	8025372 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802565e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025660:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8025662:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8025664:	4433      	add	r3, r6
 8025666:	9321      	str	r3, [sp, #132]	; 0x84
 8025668:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802566a:	441c      	add	r4, r3
 802566c:	9b08      	ldr	r3, [sp, #32]
 802566e:	9422      	str	r4, [sp, #136]	; 0x88
 8025670:	3b01      	subs	r3, #1
 8025672:	9308      	str	r3, [sp, #32]
 8025674:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025676:	3302      	adds	r3, #2
 8025678:	9309      	str	r3, [sp, #36]	; 0x24
 802567a:	e658      	b.n	802532e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802567c:	d028      	beq.n	80256d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802567e:	9b08      	ldr	r3, [sp, #32]
 8025680:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8025682:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8025684:	3b01      	subs	r3, #1
 8025686:	fb00 5003 	mla	r0, r0, r3, r5
 802568a:	1400      	asrs	r0, r0, #16
 802568c:	f53f ae6c 	bmi.w	8025368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025690:	3901      	subs	r1, #1
 8025692:	4288      	cmp	r0, r1
 8025694:	f6bf ae68 	bge.w	8025368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025698:	9924      	ldr	r1, [sp, #144]	; 0x90
 802569a:	9822      	ldr	r0, [sp, #136]	; 0x88
 802569c:	fb01 0303 	mla	r3, r1, r3, r0
 80256a0:	141b      	asrs	r3, r3, #16
 80256a2:	f53f ae61 	bmi.w	8025368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256a6:	3a01      	subs	r2, #1
 80256a8:	4293      	cmp	r3, r2
 80256aa:	f6bf ae5d 	bge.w	8025368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80256ae:	9b08      	ldr	r3, [sp, #32]
 80256b0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80256b4:	9313      	str	r3, [sp, #76]	; 0x4c
 80256b6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80256ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80256bc:	2b00      	cmp	r3, #0
 80256be:	f300 8082 	bgt.w	80257c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80256c2:	9b08      	ldr	r3, [sp, #32]
 80256c4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80256c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80256ca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80256ce:	9309      	str	r3, [sp, #36]	; 0x24
 80256d0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80256d2:	2b00      	cmp	r3, #0
 80256d4:	f340 81ef 	ble.w	8025ab6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80256d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80256dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80256e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80256e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80256e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80256ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80256ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80256f2:	eef0 6a62 	vmov.f32	s13, s5
 80256f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80256fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80256fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025702:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8025706:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802570a:	eef0 6a43 	vmov.f32	s13, s6
 802570e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025712:	ee12 2a90 	vmov	r2, s5
 8025716:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802571a:	fb92 f3f3 	sdiv	r3, r2, r3
 802571e:	ee13 2a10 	vmov	r2, s6
 8025722:	9323      	str	r3, [sp, #140]	; 0x8c
 8025724:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025726:	fb92 f3f3 	sdiv	r3, r2, r3
 802572a:	9324      	str	r3, [sp, #144]	; 0x90
 802572c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802572e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025730:	3b01      	subs	r3, #1
 8025732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025736:	9311      	str	r3, [sp, #68]	; 0x44
 8025738:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802573a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802573e:	bf08      	it	eq
 8025740:	4613      	moveq	r3, r2
 8025742:	9308      	str	r3, [sp, #32]
 8025744:	eeb0 3a67 	vmov.f32	s6, s15
 8025748:	eef0 2a47 	vmov.f32	s5, s14
 802574c:	e5e1      	b.n	8025312 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802574e:	fb08 f505 	mul.w	r5, r8, r5
 8025752:	fb09 5303 	mla	r3, r9, r3, r5
 8025756:	e661      	b.n	802541c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8025758:	4681      	mov	r9, r0
 802575a:	e688      	b.n	802546e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802575c:	f1c1 0210 	rsb	r2, r1, #16
 8025760:	4341      	muls	r1, r0
 8025762:	fb09 1902 	mla	r9, r9, r2, r1
 8025766:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802576a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802576e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8025772:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025776:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802577a:	ea42 0909 	orr.w	r9, r2, r9
 802577e:	fa1f f289 	uxth.w	r2, r9
 8025782:	e71b      	b.n	80255bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8025784:	803a      	strh	r2, [r7, #0]
 8025786:	e75d      	b.n	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025788:	f115 0e01 	adds.w	lr, r5, #1
 802578c:	f53f af5a 	bmi.w	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025790:	4572      	cmp	r2, lr
 8025792:	f6ff af57 	blt.w	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8025796:	f110 0e01 	adds.w	lr, r0, #1
 802579a:	f53f af53 	bmi.w	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802579e:	4573      	cmp	r3, lr
 80257a0:	f6ff af50 	blt.w	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257a4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80257a6:	9502      	str	r5, [sp, #8]
 80257a8:	b21b      	sxth	r3, r3
 80257aa:	b212      	sxth	r2, r2
 80257ac:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80257b0:	9301      	str	r3, [sp, #4]
 80257b2:	9200      	str	r2, [sp, #0]
 80257b4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80257b8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80257bc:	4639      	mov	r1, r7
 80257be:	9815      	ldr	r0, [sp, #84]	; 0x54
 80257c0:	f7ff fc04 	bl	8024fcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80257c4:	e73e      	b.n	8025644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80257c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80257cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257ce:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80257d2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80257d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80257d8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80257da:	141f      	asrs	r7, r3, #16
 80257dc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80257de:	141b      	asrs	r3, r3, #16
 80257e0:	fb01 3707 	mla	r7, r1, r7, r3
 80257e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80257e6:	fa1f fc82 	uxth.w	ip, r2
 80257ea:	eb03 0a07 	add.w	sl, r3, r7
 80257ee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80257f2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80257f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80257fa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80257fe:	b29b      	uxth	r3, r3
 8025800:	2d00      	cmp	r5, #0
 8025802:	f000 813d 	beq.w	8025a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8025806:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802580a:	940f      	str	r4, [sp, #60]	; 0x3c
 802580c:	eb0a 0b01 	add.w	fp, sl, r1
 8025810:	fa1f fa85 	uxth.w	sl, r5
 8025814:	fb0a fc0c 	mul.w	ip, sl, ip
 8025818:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802581c:	fa1f fa8a 	uxth.w	sl, sl
 8025820:	eba0 000c 	sub.w	r0, r0, ip
 8025824:	eba3 030a 	sub.w	r3, r3, sl
 8025828:	b280      	uxth	r0, r0
 802582a:	fb08 f000 	mul.w	r0, r8, r0
 802582e:	b29b      	uxth	r3, r3
 8025830:	fb09 0303 	mla	r3, r9, r3, r0
 8025834:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8025836:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802583a:	9410      	str	r4, [sp, #64]	; 0x40
 802583c:	fb0a 3300 	mla	r3, sl, r0, r3
 8025840:	fb0c 3304 	mla	r3, ip, r4, r3
 8025844:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025848:	2b00      	cmp	r3, #0
 802584a:	f000 810b 	beq.w	8025a64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802584e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8025850:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025852:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025856:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802585a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802585e:	f000 8114 	beq.w	8025a8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8025862:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8025866:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802586a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802586e:	fb09 f707 	mul.w	r7, r9, r7
 8025872:	fb0a fc0c 	mul.w	ip, sl, ip
 8025876:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802587a:	f107 0b20 	add.w	fp, r7, #32
 802587e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8025882:	44cc      	add	ip, r9
 8025884:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8025888:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802588c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8025890:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025894:	ea4c 0909 	orr.w	r9, ip, r9
 8025898:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802589c:	8847      	ldrh	r7, [r0, #2]
 802589e:	d019      	beq.n	80258d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80258a0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80258a4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80258a8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258ac:	fb08 f807 	mul.w	r8, r8, r7
 80258b0:	fb0a fc0c 	mul.w	ip, sl, ip
 80258b4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80258b8:	f108 0b20 	add.w	fp, r8, #32
 80258bc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80258c0:	44bc      	add	ip, r7
 80258c2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80258c6:	0a3f      	lsrs	r7, r7, #8
 80258c8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80258cc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80258d0:	ea4c 0707 	orr.w	r7, ip, r7
 80258d4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80258d8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80258dc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80258e0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80258e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80258e8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80258ec:	ea4c 0909 	orr.w	r9, ip, r9
 80258f0:	ea4a 0707 	orr.w	r7, sl, r7
 80258f4:	2d00      	cmp	r5, #0
 80258f6:	f000 80ca 	beq.w	8025a8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80258fa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80258fe:	3901      	subs	r1, #1
 8025900:	0049      	lsls	r1, r1, #1
 8025902:	3102      	adds	r1, #2
 8025904:	eb00 0c01 	add.w	ip, r0, r1
 8025908:	5a41      	ldrh	r1, [r0, r1]
 802590a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802590c:	28ff      	cmp	r0, #255	; 0xff
 802590e:	d019      	beq.n	8025944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8025910:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025912:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8025916:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802591a:	fb04 fa01 	mul.w	sl, r4, r1
 802591e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025922:	fb08 f800 	mul.w	r8, r8, r0
 8025926:	f10a 0020 	add.w	r0, sl, #32
 802592a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802592e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025932:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025936:	4441      	add	r1, r8
 8025938:	0a00      	lsrs	r0, r0, #8
 802593a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802593e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025942:	4301      	orrs	r1, r0
 8025944:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025946:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802594a:	2cff      	cmp	r4, #255	; 0xff
 802594c:	d01a      	beq.n	8025984 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802594e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8025952:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025956:	fb04 fa00 	mul.w	sl, r4, r0
 802595a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802595e:	fb08 f80c 	mul.w	r8, r8, ip
 8025962:	f10a 0c20 	add.w	ip, sl, #32
 8025966:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802596a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802596e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025972:	4440      	add	r0, r8
 8025974:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025978:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802597c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8025980:	ea40 000c 	orr.w	r0, r0, ip
 8025984:	fb15 fc02 	smulbb	ip, r5, r2
 8025988:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802598c:	f1c5 0810 	rsb	r8, r5, #16
 8025990:	eba8 0802 	sub.w	r8, r8, r2
 8025994:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025998:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802599c:	437a      	muls	r2, r7
 802599e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80259a2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80259a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80259aa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80259ae:	fb09 2208 	mla	r2, r9, r8, r2
 80259b2:	ea4a 0101 	orr.w	r1, sl, r1
 80259b6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80259ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80259be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80259c2:	fb05 2201 	mla	r2, r5, r1, r2
 80259c6:	ea4b 0000 	orr.w	r0, fp, r0
 80259ca:	fb0c 2200 	mla	r2, ip, r0, r2
 80259ce:	0d57      	lsrs	r7, r2, #21
 80259d0:	0952      	lsrs	r2, r2, #5
 80259d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80259d6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80259da:	433a      	orrs	r2, r7
 80259dc:	2bff      	cmp	r3, #255	; 0xff
 80259de:	b292      	uxth	r2, r2
 80259e0:	d102      	bne.n	80259e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80259e2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80259e4:	29ff      	cmp	r1, #255	; 0xff
 80259e6:	d063      	beq.n	8025ab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 80259e8:	980a      	ldr	r0, [sp, #40]	; 0x28
 80259ea:	f8be 1000 	ldrh.w	r1, [lr]
 80259ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80259f0:	4343      	muls	r3, r0
 80259f2:	1c58      	adds	r0, r3, #1
 80259f4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80259f8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80259fc:	1208      	asrs	r0, r1, #8
 80259fe:	b2db      	uxtb	r3, r3
 8025a00:	1215      	asrs	r5, r2, #8
 8025a02:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025a06:	fb10 f003 	smulbb	r0, r0, r3
 8025a0a:	10cf      	asrs	r7, r1, #3
 8025a0c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025a10:	00c9      	lsls	r1, r1, #3
 8025a12:	fb05 0504 	mla	r5, r5, r4, r0
 8025a16:	b2c9      	uxtb	r1, r1
 8025a18:	10d0      	asrs	r0, r2, #3
 8025a1a:	00d2      	lsls	r2, r2, #3
 8025a1c:	fb11 f103 	smulbb	r1, r1, r3
 8025a20:	b2d2      	uxtb	r2, r2
 8025a22:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025a26:	fb02 1204 	mla	r2, r2, r4, r1
 8025a2a:	fb17 f703 	smulbb	r7, r7, r3
 8025a2e:	b2ad      	uxth	r5, r5
 8025a30:	b292      	uxth	r2, r2
 8025a32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a36:	fb00 7004 	mla	r0, r0, r4, r7
 8025a3a:	1c6b      	adds	r3, r5, #1
 8025a3c:	1c57      	adds	r7, r2, #1
 8025a3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025a42:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025a46:	b280      	uxth	r0, r0
 8025a48:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025a4c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a50:	433d      	orrs	r5, r7
 8025a52:	1c47      	adds	r7, r0, #1
 8025a54:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8025a58:	097f      	lsrs	r7, r7, #5
 8025a5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025a5e:	433d      	orrs	r5, r7
 8025a60:	f8ae 5000 	strh.w	r5, [lr]
 8025a64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025a66:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8025a68:	4413      	add	r3, r2
 8025a6a:	9321      	str	r3, [sp, #132]	; 0x84
 8025a6c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8025a6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025a70:	441a      	add	r2, r3
 8025a72:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8025a74:	9222      	str	r2, [sp, #136]	; 0x88
 8025a76:	3b01      	subs	r3, #1
 8025a78:	f10e 0e02 	add.w	lr, lr, #2
 8025a7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8025a7e:	e61c      	b.n	80256ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8025a80:	fb08 f000 	mul.w	r0, r8, r0
 8025a84:	fb09 0303 	mla	r3, r9, r3, r0
 8025a88:	e6dc      	b.n	8025844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8025a8a:	46b9      	mov	r9, r7
 8025a8c:	e704      	b.n	8025898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8025a8e:	f1c2 0110 	rsb	r1, r2, #16
 8025a92:	437a      	muls	r2, r7
 8025a94:	fb09 2901 	mla	r9, r9, r1, r2
 8025a98:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8025a9c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8025aa0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8025aa4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025aa8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025aac:	4302      	orrs	r2, r0
 8025aae:	e795      	b.n	80259dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8025ab0:	f8ae 2000 	strh.w	r2, [lr]
 8025ab4:	e7d6      	b.n	8025a64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8025ab6:	b017      	add	sp, #92	; 0x5c
 8025ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025abc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8025abc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ac0:	b085      	sub	sp, #20
 8025ac2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8025ac6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025aca:	9103      	str	r1, [sp, #12]
 8025acc:	fb00 7406 	mla	r4, r0, r6, r7
 8025ad0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8025ad4:	2800      	cmp	r0, #0
 8025ad6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8025ada:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8025ade:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025ae2:	9501      	str	r5, [sp, #4]
 8025ae4:	eb02 0904 	add.w	r9, r2, r4
 8025ae8:	f2c0 8141 	blt.w	8025d6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025aec:	4583      	cmp	fp, r0
 8025aee:	f340 813e 	ble.w	8025d6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8025af2:	2f00      	cmp	r7, #0
 8025af4:	f2c0 8137 	blt.w	8025d66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025af8:	42be      	cmp	r6, r7
 8025afa:	f340 8134 	ble.w	8025d66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8025afe:	f812 c004 	ldrb.w	ip, [r2, r4]
 8025b02:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8025b06:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025b0a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8025b0e:	4355      	muls	r5, r2
 8025b10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b14:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8025b18:	fb0c f203 	mul.w	r2, ip, r3
 8025b1c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8025b20:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8025b24:	441d      	add	r5, r3
 8025b26:	f102 0320 	add.w	r3, r2, #32
 8025b2a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025b2e:	0a1b      	lsrs	r3, r3, #8
 8025b30:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8025b34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025b38:	431c      	orrs	r4, r3
 8025b3a:	1c7b      	adds	r3, r7, #1
 8025b3c:	f100 811c 	bmi.w	8025d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b40:	429e      	cmp	r6, r3
 8025b42:	f340 8119 	ble.w	8025d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8025b46:	2900      	cmp	r1, #0
 8025b48:	f000 8119 	beq.w	8025d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8025b4c:	9a01      	ldr	r2, [sp, #4]
 8025b4e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8025b52:	8855      	ldrh	r5, [r2, #2]
 8025b54:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8025b58:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8025b5c:	fb08 f802 	mul.w	r8, r8, r2
 8025b60:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b64:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025b68:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8025b6c:	435d      	muls	r5, r3
 8025b6e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025b72:	44d0      	add	r8, sl
 8025b74:	f105 0a20 	add.w	sl, r5, #32
 8025b78:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8025b7c:	0a2d      	lsrs	r5, r5, #8
 8025b7e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025b82:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025b86:	432a      	orrs	r2, r5
 8025b88:	3001      	adds	r0, #1
 8025b8a:	f100 80fe 	bmi.w	8025d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025b8e:	4583      	cmp	fp, r0
 8025b90:	f340 80fb 	ble.w	8025d8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8025b94:	f1be 0f00 	cmp.w	lr, #0
 8025b98:	f000 80fc 	beq.w	8025d94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8025b9c:	2f00      	cmp	r7, #0
 8025b9e:	f2c0 80f1 	blt.w	8025d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025ba2:	42be      	cmp	r6, r7
 8025ba4:	f340 80ee 	ble.w	8025d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8025ba8:	9801      	ldr	r0, [sp, #4]
 8025baa:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025bae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8025bb2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8025bb6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8025bba:	fb0a fa00 	mul.w	sl, sl, r0
 8025bbe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025bc2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8025bc6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8025bca:	fb05 f808 	mul.w	r8, r5, r8
 8025bce:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8025bd2:	4482      	add	sl, r0
 8025bd4:	f108 0020 	add.w	r0, r8, #32
 8025bd8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025bdc:	0a00      	lsrs	r0, r0, #8
 8025bde:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8025be2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025be6:	ea4b 0b00 	orr.w	fp, fp, r0
 8025bea:	3701      	adds	r7, #1
 8025bec:	f100 80d7 	bmi.w	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025bf0:	42be      	cmp	r6, r7
 8025bf2:	f340 80d4 	ble.w	8025d9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8025bf6:	2900      	cmp	r1, #0
 8025bf8:	f000 80d4 	beq.w	8025da4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8025bfc:	3601      	adds	r6, #1
 8025bfe:	9801      	ldr	r0, [sp, #4]
 8025c00:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025c04:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8025c08:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8025c0c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8025c10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c14:	fb09 f906 	mul.w	r9, r9, r6
 8025c18:	fb07 f800 	mul.w	r8, r7, r0
 8025c1c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8025c20:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8025c24:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8025c28:	44d1      	add	r9, sl
 8025c2a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8025c2e:	f108 0020 	add.w	r0, r8, #32
 8025c32:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8025c36:	0a00      	lsrs	r0, r0, #8
 8025c38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025c3c:	4330      	orrs	r0, r6
 8025c3e:	b28e      	uxth	r6, r1
 8025c40:	fa1f f98e 	uxth.w	r9, lr
 8025c44:	fb06 f809 	mul.w	r8, r6, r9
 8025c48:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8025c4c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025c50:	0136      	lsls	r6, r6, #4
 8025c52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c56:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8025c5a:	9601      	str	r6, [sp, #4]
 8025c5c:	ea4a 0404 	orr.w	r4, sl, r4
 8025c60:	fa1f f689 	uxth.w	r6, r9
 8025c64:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025c68:	fb11 f90e 	smulbb	r9, r1, lr
 8025c6c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8025c70:	9602      	str	r6, [sp, #8]
 8025c72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c76:	4626      	mov	r6, r4
 8025c78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025c7c:	f1ce 0410 	rsb	r4, lr, #16
 8025c80:	1a64      	subs	r4, r4, r1
 8025c82:	ea4a 0202 	orr.w	r2, sl, r2
 8025c86:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8025c8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025c8e:	434a      	muls	r2, r1
 8025c90:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025c94:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025c98:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025c9c:	fb04 2406 	mla	r4, r4, r6, r2
 8025ca0:	ea4a 0000 	orr.w	r0, sl, r0
 8025ca4:	fb09 4200 	mla	r2, r9, r0, r4
 8025ca8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8025cac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8025cb0:	9801      	ldr	r0, [sp, #4]
 8025cb2:	9903      	ldr	r1, [sp, #12]
 8025cb4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025cb8:	ea44 0b0b 	orr.w	fp, r4, fp
 8025cbc:	9c02      	ldr	r4, [sp, #8]
 8025cbe:	8809      	ldrh	r1, [r1, #0]
 8025cc0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025cc4:	1b00      	subs	r0, r0, r4
 8025cc6:	9c01      	ldr	r4, [sp, #4]
 8025cc8:	eba4 0608 	sub.w	r6, r4, r8
 8025ccc:	b2b6      	uxth	r6, r6
 8025cce:	b280      	uxth	r0, r0
 8025cd0:	4373      	muls	r3, r6
 8025cd2:	fb0c 3300 	mla	r3, ip, r0, r3
 8025cd6:	9802      	ldr	r0, [sp, #8]
 8025cd8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025cdc:	fb00 3505 	mla	r5, r0, r5, r3
 8025ce0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8025ce4:	fb08 5707 	mla	r7, r8, r7, r5
 8025ce8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8025cec:	120b      	asrs	r3, r1, #8
 8025cee:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025cf2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8025cf6:	b2ff      	uxtb	r7, r7
 8025cf8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025cfc:	10c8      	asrs	r0, r1, #3
 8025cfe:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025d02:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025d06:	00c9      	lsls	r1, r1, #3
 8025d08:	437b      	muls	r3, r7
 8025d0a:	ea42 0e0e 	orr.w	lr, r2, lr
 8025d0e:	b2c9      	uxtb	r1, r1
 8025d10:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025d14:	fa1f f28e 	uxth.w	r2, lr
 8025d18:	4378      	muls	r0, r7
 8025d1a:	434f      	muls	r7, r1
 8025d1c:	1c59      	adds	r1, r3, #1
 8025d1e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025d22:	1213      	asrs	r3, r2, #8
 8025d24:	f023 0307 	bic.w	r3, r3, #7
 8025d28:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8025d2c:	1c41      	adds	r1, r0, #1
 8025d2e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025d32:	10d1      	asrs	r1, r2, #3
 8025d34:	f021 0103 	bic.w	r1, r1, #3
 8025d38:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025d3c:	021b      	lsls	r3, r3, #8
 8025d3e:	00c9      	lsls	r1, r1, #3
 8025d40:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025d44:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025d48:	430b      	orrs	r3, r1
 8025d4a:	1c79      	adds	r1, r7, #1
 8025d4c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8025d50:	00d2      	lsls	r2, r2, #3
 8025d52:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8025d56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025d5a:	431a      	orrs	r2, r3
 8025d5c:	9b03      	ldr	r3, [sp, #12]
 8025d5e:	801a      	strh	r2, [r3, #0]
 8025d60:	b005      	add	sp, #20
 8025d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d66:	f04f 0c00 	mov.w	ip, #0
 8025d6a:	4664      	mov	r4, ip
 8025d6c:	e6e5      	b.n	8025b3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8025d6e:	2300      	movs	r3, #0
 8025d70:	469c      	mov	ip, r3
 8025d72:	461a      	mov	r2, r3
 8025d74:	461c      	mov	r4, r3
 8025d76:	e707      	b.n	8025b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d78:	2300      	movs	r3, #0
 8025d7a:	461a      	mov	r2, r3
 8025d7c:	e704      	b.n	8025b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d7e:	460b      	mov	r3, r1
 8025d80:	460a      	mov	r2, r1
 8025d82:	e701      	b.n	8025b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8025d84:	2500      	movs	r5, #0
 8025d86:	46ab      	mov	fp, r5
 8025d88:	e72f      	b.n	8025bea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8025d8a:	2700      	movs	r7, #0
 8025d8c:	463d      	mov	r5, r7
 8025d8e:	4638      	mov	r0, r7
 8025d90:	46bb      	mov	fp, r7
 8025d92:	e754      	b.n	8025c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025d94:	4677      	mov	r7, lr
 8025d96:	4675      	mov	r5, lr
 8025d98:	4670      	mov	r0, lr
 8025d9a:	46f3      	mov	fp, lr
 8025d9c:	e74f      	b.n	8025c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025d9e:	2700      	movs	r7, #0
 8025da0:	4638      	mov	r0, r7
 8025da2:	e74c      	b.n	8025c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8025da4:	460f      	mov	r7, r1
 8025da6:	4608      	mov	r0, r1
 8025da8:	e749      	b.n	8025c3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08025dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025db0:	b093      	sub	sp, #76	; 0x4c
 8025db2:	9210      	str	r2, [sp, #64]	; 0x40
 8025db4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025db6:	910e      	str	r1, [sp, #56]	; 0x38
 8025db8:	9306      	str	r3, [sp, #24]
 8025dba:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8025dbe:	9011      	str	r0, [sp, #68]	; 0x44
 8025dc0:	6850      	ldr	r0, [r2, #4]
 8025dc2:	6812      	ldr	r2, [r2, #0]
 8025dc4:	fb00 1303 	mla	r3, r0, r3, r1
 8025dc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025dcc:	9307      	str	r3, [sp, #28]
 8025dce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dd0:	681b      	ldr	r3, [r3, #0]
 8025dd2:	9308      	str	r3, [sp, #32]
 8025dd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dd6:	685b      	ldr	r3, [r3, #4]
 8025dd8:	9309      	str	r3, [sp, #36]	; 0x24
 8025dda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8025ddc:	2b00      	cmp	r3, #0
 8025dde:	dc03      	bgt.n	8025de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8025de0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025de2:	2b00      	cmp	r3, #0
 8025de4:	f340 83b4 	ble.w	8026550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8025de8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025dea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025dee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025df2:	1e48      	subs	r0, r1, #1
 8025df4:	1e55      	subs	r5, r2, #1
 8025df6:	9b06      	ldr	r3, [sp, #24]
 8025df8:	2b00      	cmp	r3, #0
 8025dfa:	f340 8163 	ble.w	80260c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8025dfe:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8025e00:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e02:	1436      	asrs	r6, r6, #16
 8025e04:	ea4f 4323 	mov.w	r3, r3, asr #16
 8025e08:	d406      	bmi.n	8025e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e0a:	4286      	cmp	r6, r0
 8025e0c:	da04      	bge.n	8025e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e0e:	2b00      	cmp	r3, #0
 8025e10:	db02      	blt.n	8025e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8025e12:	42ab      	cmp	r3, r5
 8025e14:	f2c0 8157 	blt.w	80260c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8025e18:	3601      	adds	r6, #1
 8025e1a:	f100 8144 	bmi.w	80260a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e1e:	42b1      	cmp	r1, r6
 8025e20:	f2c0 8141 	blt.w	80260a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e24:	3301      	adds	r3, #1
 8025e26:	f100 813e 	bmi.w	80260a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e2a:	429a      	cmp	r2, r3
 8025e2c:	f2c0 813b 	blt.w	80260a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8025e30:	9b06      	ldr	r3, [sp, #24]
 8025e32:	9f07      	ldr	r7, [sp, #28]
 8025e34:	930f      	str	r3, [sp, #60]	; 0x3c
 8025e36:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8025e3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025e3c:	2b00      	cmp	r3, #0
 8025e3e:	f340 8164 	ble.w	802610a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8025e42:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e44:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8025e46:	1418      	asrs	r0, r3, #16
 8025e48:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8025e4a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8025e4e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8025e50:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8025e54:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025e56:	142d      	asrs	r5, r5, #16
 8025e58:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8025e5c:	f100 81ee 	bmi.w	802623c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e60:	f102 3eff 	add.w	lr, r2, #4294967295
 8025e64:	4575      	cmp	r5, lr
 8025e66:	f280 81e9 	bge.w	802623c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e6a:	2800      	cmp	r0, #0
 8025e6c:	f2c0 81e6 	blt.w	802623c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e70:	f103 3eff 	add.w	lr, r3, #4294967295
 8025e74:	4570      	cmp	r0, lr
 8025e76:	f280 81e1 	bge.w	802623c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8025e7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e7c:	b212      	sxth	r2, r2
 8025e7e:	fb00 5002 	mla	r0, r0, r2, r5
 8025e82:	fa1f fe81 	uxth.w	lr, r1
 8025e86:	eb03 0a00 	add.w	sl, r3, r0
 8025e8a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8025e8e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8025e92:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8025e96:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8025e9a:	b29b      	uxth	r3, r3
 8025e9c:	f1bc 0f00 	cmp.w	ip, #0
 8025ea0:	f000 8179 	beq.w	8026196 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8025ea4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8025ea8:	940a      	str	r4, [sp, #40]	; 0x28
 8025eaa:	eb0a 0b02 	add.w	fp, sl, r2
 8025eae:	fa1f fa8c 	uxth.w	sl, ip
 8025eb2:	fb0a fe0e 	mul.w	lr, sl, lr
 8025eb6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8025eba:	fa1f fa8a 	uxth.w	sl, sl
 8025ebe:	eba5 050e 	sub.w	r5, r5, lr
 8025ec2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8025ec6:	940b      	str	r4, [sp, #44]	; 0x2c
 8025ec8:	eba3 030a 	sub.w	r3, r3, sl
 8025ecc:	b2ad      	uxth	r5, r5
 8025ece:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025ed0:	b29b      	uxth	r3, r3
 8025ed2:	fb08 f505 	mul.w	r5, r8, r5
 8025ed6:	fb09 5303 	mla	r3, r9, r3, r5
 8025eda:	fb0a 3304 	mla	r3, sl, r4, r3
 8025ede:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025ee0:	fb0e 3304 	mla	r3, lr, r4, r3
 8025ee4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ee8:	2b00      	cmp	r3, #0
 8025eea:	f000 80cf 	beq.w	802608c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8025eee:	9c08      	ldr	r4, [sp, #32]
 8025ef0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025ef4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8025ef8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8025efc:	f000 8150 	beq.w	80261a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8025f00:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f04:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8025f08:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f0c:	fb09 f000 	mul.w	r0, r9, r0
 8025f10:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f14:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8025f18:	f100 0b20 	add.w	fp, r0, #32
 8025f1c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f20:	44ce      	add	lr, r9
 8025f22:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8025f26:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025f2a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f2e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8025f32:	ea4e 0909 	orr.w	r9, lr, r9
 8025f36:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8025f3a:	8868      	ldrh	r0, [r5, #2]
 8025f3c:	d019      	beq.n	8025f72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8025f3e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8025f42:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8025f46:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f4a:	fb08 f800 	mul.w	r8, r8, r0
 8025f4e:	fb0a fe0e 	mul.w	lr, sl, lr
 8025f52:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8025f56:	f108 0b20 	add.w	fp, r8, #32
 8025f5a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8025f5e:	4486      	add	lr, r0
 8025f60:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8025f64:	0a00      	lsrs	r0, r0, #8
 8025f66:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8025f6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025f6e:	ea4e 0000 	orr.w	r0, lr, r0
 8025f72:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8025f76:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8025f7a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8025f7e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8025f82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f86:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025f8a:	ea4e 0909 	orr.w	r9, lr, r9
 8025f8e:	ea4a 0000 	orr.w	r0, sl, r0
 8025f92:	f1bc 0f00 	cmp.w	ip, #0
 8025f96:	f000 8105 	beq.w	80261a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025f9a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8025f9e:	3a01      	subs	r2, #1
 8025fa0:	0052      	lsls	r2, r2, #1
 8025fa2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8025fa4:	3202      	adds	r2, #2
 8025fa6:	2cff      	cmp	r4, #255	; 0xff
 8025fa8:	eb05 0e02 	add.w	lr, r5, r2
 8025fac:	5aaa      	ldrh	r2, [r5, r2]
 8025fae:	d018      	beq.n	8025fe2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8025fb0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8025fb4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fb8:	fb04 fa02 	mul.w	sl, r4, r2
 8025fbc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025fc0:	fb08 f805 	mul.w	r8, r8, r5
 8025fc4:	f10a 0520 	add.w	r5, sl, #32
 8025fc8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8025fcc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8025fd0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025fd4:	4442      	add	r2, r8
 8025fd6:	0a2d      	lsrs	r5, r5, #8
 8025fd8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8025fdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025fe0:	432a      	orrs	r2, r5
 8025fe2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025fe4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8025fe8:	2cff      	cmp	r4, #255	; 0xff
 8025fea:	d01a      	beq.n	8026022 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8025fec:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8025ff0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025ff4:	fb04 fa05 	mul.w	sl, r4, r5
 8025ff8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8025ffc:	fb08 f80e 	mul.w	r8, r8, lr
 8026000:	f10a 0e20 	add.w	lr, sl, #32
 8026004:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026008:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802600c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026010:	4445      	add	r5, r8
 8026012:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026016:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802601a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802601e:	ea45 050e 	orr.w	r5, r5, lr
 8026022:	fb1c fe01 	smulbb	lr, ip, r1
 8026026:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802602a:	f1cc 0810 	rsb	r8, ip, #16
 802602e:	eba8 0801 	sub.w	r8, r8, r1
 8026032:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026036:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802603a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802603e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8026042:	4341      	muls	r1, r0
 8026044:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026048:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802604c:	ea4a 0202 	orr.w	r2, sl, r2
 8026050:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026054:	fb09 1108 	mla	r1, r9, r8, r1
 8026058:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802605c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026060:	fb0c 1102 	mla	r1, ip, r2, r1
 8026064:	ea4b 0505 	orr.w	r5, fp, r5
 8026068:	fb0e 1e05 	mla	lr, lr, r5, r1
 802606c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026070:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026074:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026078:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802607c:	ea42 0e0e 	orr.w	lr, r2, lr
 8026080:	fa1f f28e 	uxth.w	r2, lr
 8026084:	2bff      	cmp	r3, #255	; 0xff
 8026086:	f040 80a1 	bne.w	80261cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802608a:	803a      	strh	r2, [r7, #0]
 802608c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802608e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8026090:	4413      	add	r3, r2
 8026092:	931d      	str	r3, [sp, #116]	; 0x74
 8026094:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8026096:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026098:	441a      	add	r2, r3
 802609a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802609c:	921e      	str	r2, [sp, #120]	; 0x78
 802609e:	3b01      	subs	r3, #1
 80260a0:	3702      	adds	r7, #2
 80260a2:	930f      	str	r3, [sp, #60]	; 0x3c
 80260a4:	e6c9      	b.n	8025e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80260a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80260a8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80260aa:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80260ac:	4433      	add	r3, r6
 80260ae:	931d      	str	r3, [sp, #116]	; 0x74
 80260b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80260b2:	441c      	add	r4, r3
 80260b4:	9b06      	ldr	r3, [sp, #24]
 80260b6:	941e      	str	r4, [sp, #120]	; 0x78
 80260b8:	3b01      	subs	r3, #1
 80260ba:	9306      	str	r3, [sp, #24]
 80260bc:	9b07      	ldr	r3, [sp, #28]
 80260be:	3302      	adds	r3, #2
 80260c0:	9307      	str	r3, [sp, #28]
 80260c2:	e698      	b.n	8025df6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80260c4:	d028      	beq.n	8026118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80260c6:	9b06      	ldr	r3, [sp, #24]
 80260c8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80260ca:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80260cc:	3b01      	subs	r3, #1
 80260ce:	fb00 5003 	mla	r0, r0, r3, r5
 80260d2:	1400      	asrs	r0, r0, #16
 80260d4:	f53f aeac 	bmi.w	8025e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260d8:	3901      	subs	r1, #1
 80260da:	4288      	cmp	r0, r1
 80260dc:	f6bf aea8 	bge.w	8025e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260e0:	9920      	ldr	r1, [sp, #128]	; 0x80
 80260e2:	981e      	ldr	r0, [sp, #120]	; 0x78
 80260e4:	fb01 0303 	mla	r3, r1, r3, r0
 80260e8:	141b      	asrs	r3, r3, #16
 80260ea:	f53f aea1 	bmi.w	8025e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260ee:	3a01      	subs	r2, #1
 80260f0:	4293      	cmp	r3, r2
 80260f2:	f6bf ae9d 	bge.w	8025e30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80260f6:	9b06      	ldr	r3, [sp, #24]
 80260f8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80260fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80260fe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026102:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026104:	2b00      	cmp	r3, #0
 8026106:	f300 80b6 	bgt.w	8026276 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802610a:	9b06      	ldr	r3, [sp, #24]
 802610c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026110:	9b07      	ldr	r3, [sp, #28]
 8026112:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026116:	9307      	str	r3, [sp, #28]
 8026118:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802611a:	2b00      	cmp	r3, #0
 802611c:	f340 8218 	ble.w	8026550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8026120:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026124:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026128:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802612c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802612e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026132:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026136:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802613a:	eef0 6a62 	vmov.f32	s13, s5
 802613e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026142:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026146:	ee77 2a62 	vsub.f32	s5, s14, s5
 802614a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802614e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026152:	eef0 6a43 	vmov.f32	s13, s6
 8026156:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802615a:	ee12 2a90 	vmov	r2, s5
 802615e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026162:	fb92 f3f3 	sdiv	r3, r2, r3
 8026166:	ee13 2a10 	vmov	r2, s6
 802616a:	931f      	str	r3, [sp, #124]	; 0x7c
 802616c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802616e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026172:	9320      	str	r3, [sp, #128]	; 0x80
 8026174:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026176:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026178:	3b01      	subs	r3, #1
 802617a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802617e:	930e      	str	r3, [sp, #56]	; 0x38
 8026180:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026182:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8026186:	bf08      	it	eq
 8026188:	4613      	moveq	r3, r2
 802618a:	9306      	str	r3, [sp, #24]
 802618c:	eeb0 3a67 	vmov.f32	s6, s15
 8026190:	eef0 2a47 	vmov.f32	s5, s14
 8026194:	e621      	b.n	8025dda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8026196:	fb08 f505 	mul.w	r5, r8, r5
 802619a:	fb09 5303 	mla	r3, r9, r3, r5
 802619e:	e6a1      	b.n	8025ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80261a0:	4681      	mov	r9, r0
 80261a2:	e6c8      	b.n	8025f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80261a4:	f1c1 0210 	rsb	r2, r1, #16
 80261a8:	4341      	muls	r1, r0
 80261aa:	fb09 1902 	mla	r9, r9, r2, r1
 80261ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80261b2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80261b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80261ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80261be:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80261c2:	ea42 0909 	orr.w	r9, r2, r9
 80261c6:	fa1f f289 	uxth.w	r2, r9
 80261ca:	e75b      	b.n	8026084 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80261cc:	f8b7 c000 	ldrh.w	ip, [r7]
 80261d0:	43db      	mvns	r3, r3
 80261d2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80261d6:	fa5f fe83 	uxtb.w	lr, r3
 80261da:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80261de:	fb00 f00e 	mul.w	r0, r0, lr
 80261e2:	1c41      	adds	r1, r0, #1
 80261e4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80261e8:	1211      	asrs	r1, r2, #8
 80261ea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80261ee:	f021 0107 	bic.w	r1, r1, #7
 80261f2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80261f6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80261fa:	48d7      	ldr	r0, [pc, #860]	; (8026558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80261fc:	fb05 f50e 	mul.w	r5, r5, lr
 8026200:	b2c9      	uxtb	r1, r1
 8026202:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8026206:	1c69      	adds	r1, r5, #1
 8026208:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802620c:	10d1      	asrs	r1, r2, #3
 802620e:	f021 0103 	bic.w	r1, r1, #3
 8026212:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026216:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802621a:	b2db      	uxtb	r3, r3
 802621c:	00c9      	lsls	r1, r1, #3
 802621e:	fb03 f30e 	mul.w	r3, r3, lr
 8026222:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026226:	4301      	orrs	r1, r0
 8026228:	1c58      	adds	r0, r3, #1
 802622a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802622e:	00d2      	lsls	r2, r2, #3
 8026230:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026234:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026238:	430a      	orrs	r2, r1
 802623a:	e726      	b.n	802608a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802623c:	f115 0e01 	adds.w	lr, r5, #1
 8026240:	f53f af24 	bmi.w	802608c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026244:	4572      	cmp	r2, lr
 8026246:	f6ff af21 	blt.w	802608c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802624a:	f110 0e01 	adds.w	lr, r0, #1
 802624e:	f53f af1d 	bmi.w	802608c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026252:	4573      	cmp	r3, lr
 8026254:	f6ff af1a 	blt.w	802608c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026258:	b21b      	sxth	r3, r3
 802625a:	b212      	sxth	r2, r2
 802625c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8026260:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8026264:	9301      	str	r3, [sp, #4]
 8026266:	9200      	str	r2, [sp, #0]
 8026268:	4639      	mov	r1, r7
 802626a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802626e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026270:	f7ff fc24 	bl	8025abc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8026274:	e70a      	b.n	802608c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8026276:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026278:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802627c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802627e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8026282:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026284:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026288:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802628a:	141f      	asrs	r7, r3, #16
 802628c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802628e:	141b      	asrs	r3, r3, #16
 8026290:	fb01 3707 	mla	r7, r1, r7, r3
 8026294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026296:	fa1f fc82 	uxth.w	ip, r2
 802629a:	eb03 0a07 	add.w	sl, r3, r7
 802629e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80262a2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80262a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80262aa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80262ae:	b29b      	uxth	r3, r3
 80262b0:	2d00      	cmp	r5, #0
 80262b2:	f000 80fe 	beq.w	80264b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80262b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80262ba:	940c      	str	r4, [sp, #48]	; 0x30
 80262bc:	eb0a 0b01 	add.w	fp, sl, r1
 80262c0:	fa1f fa85 	uxth.w	sl, r5
 80262c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80262c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80262cc:	fa1f fa8a 	uxth.w	sl, sl
 80262d0:	eba0 000c 	sub.w	r0, r0, ip
 80262d4:	eba3 030a 	sub.w	r3, r3, sl
 80262d8:	b280      	uxth	r0, r0
 80262da:	fb08 f000 	mul.w	r0, r8, r0
 80262de:	b29b      	uxth	r3, r3
 80262e0:	fb09 0303 	mla	r3, r9, r3, r0
 80262e4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80262e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80262ea:	940d      	str	r4, [sp, #52]	; 0x34
 80262ec:	fb0a 3300 	mla	r3, sl, r0, r3
 80262f0:	fb0c 3304 	mla	r3, ip, r4, r3
 80262f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262f8:	2b00      	cmp	r3, #0
 80262fa:	f000 80cc 	beq.w	8026496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80262fe:	9808      	ldr	r0, [sp, #32]
 8026300:	9c08      	ldr	r4, [sp, #32]
 8026302:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026306:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802630a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802630e:	f000 80d5 	beq.w	80264bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8026312:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026316:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802631a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802631e:	fb09 f707 	mul.w	r7, r9, r7
 8026322:	fb0a fc0c 	mul.w	ip, sl, ip
 8026326:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802632a:	f107 0b20 	add.w	fp, r7, #32
 802632e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026332:	44cc      	add	ip, r9
 8026334:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026338:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802633c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026340:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026344:	ea4c 0909 	orr.w	r9, ip, r9
 8026348:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802634c:	8847      	ldrh	r7, [r0, #2]
 802634e:	d019      	beq.n	8026384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8026350:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8026354:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026358:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802635c:	fb08 f807 	mul.w	r8, r8, r7
 8026360:	fb0a fc0c 	mul.w	ip, sl, ip
 8026364:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026368:	f108 0b20 	add.w	fp, r8, #32
 802636c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026370:	44bc      	add	ip, r7
 8026372:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8026376:	0a3f      	lsrs	r7, r7, #8
 8026378:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802637c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026380:	ea4c 0707 	orr.w	r7, ip, r7
 8026384:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026388:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802638c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026390:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026394:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026398:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802639c:	ea4c 0909 	orr.w	r9, ip, r9
 80263a0:	ea4a 0707 	orr.w	r7, sl, r7
 80263a4:	2d00      	cmp	r5, #0
 80263a6:	f000 808b 	beq.w	80264c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80263aa:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80263ae:	3901      	subs	r1, #1
 80263b0:	0049      	lsls	r1, r1, #1
 80263b2:	3102      	adds	r1, #2
 80263b4:	eb00 0c01 	add.w	ip, r0, r1
 80263b8:	5a41      	ldrh	r1, [r0, r1]
 80263ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 80263bc:	28ff      	cmp	r0, #255	; 0xff
 80263be:	d019      	beq.n	80263f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80263c0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80263c2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80263c6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263ca:	fb04 fa01 	mul.w	sl, r4, r1
 80263ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80263d2:	fb08 f800 	mul.w	r8, r8, r0
 80263d6:	f10a 0020 	add.w	r0, sl, #32
 80263da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80263de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80263e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80263e6:	4441      	add	r1, r8
 80263e8:	0a00      	lsrs	r0, r0, #8
 80263ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80263ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80263f2:	4301      	orrs	r1, r0
 80263f4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80263f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80263fa:	2cff      	cmp	r4, #255	; 0xff
 80263fc:	d01a      	beq.n	8026434 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80263fe:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8026402:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026406:	fb04 fa00 	mul.w	sl, r4, r0
 802640a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802640e:	fb08 f80c 	mul.w	r8, r8, ip
 8026412:	f10a 0c20 	add.w	ip, sl, #32
 8026416:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802641a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802641e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026422:	4440      	add	r0, r8
 8026424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026428:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802642c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026430:	ea40 000c 	orr.w	r0, r0, ip
 8026434:	fb15 fc02 	smulbb	ip, r5, r2
 8026438:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802643c:	f1c5 0810 	rsb	r8, r5, #16
 8026440:	eba8 0802 	sub.w	r8, r8, r2
 8026444:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026448:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802644c:	437a      	muls	r2, r7
 802644e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026452:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026456:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802645a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802645e:	fb09 2208 	mla	r2, r9, r8, r2
 8026462:	ea4a 0101 	orr.w	r1, sl, r1
 8026466:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802646a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802646e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026472:	fb05 2201 	mla	r2, r5, r1, r2
 8026476:	ea4b 0000 	orr.w	r0, fp, r0
 802647a:	fb0c 2200 	mla	r2, ip, r0, r2
 802647e:	0d57      	lsrs	r7, r2, #21
 8026480:	0952      	lsrs	r2, r2, #5
 8026482:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026486:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802648a:	433a      	orrs	r2, r7
 802648c:	2bff      	cmp	r3, #255	; 0xff
 802648e:	b292      	uxth	r2, r2
 8026490:	d127      	bne.n	80264e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8026492:	f8ae 2000 	strh.w	r2, [lr]
 8026496:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026498:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802649a:	4413      	add	r3, r2
 802649c:	931d      	str	r3, [sp, #116]	; 0x74
 802649e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80264a0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80264a2:	441a      	add	r2, r3
 80264a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80264a6:	921e      	str	r2, [sp, #120]	; 0x78
 80264a8:	3b01      	subs	r3, #1
 80264aa:	f10e 0e02 	add.w	lr, lr, #2
 80264ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80264b0:	e627      	b.n	8026102 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80264b2:	fb08 f000 	mul.w	r0, r8, r0
 80264b6:	fb09 0303 	mla	r3, r9, r3, r0
 80264ba:	e71b      	b.n	80262f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80264bc:	46b9      	mov	r9, r7
 80264be:	e743      	b.n	8026348 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80264c0:	f1c2 0110 	rsb	r1, r2, #16
 80264c4:	437a      	muls	r2, r7
 80264c6:	fb09 2901 	mla	r9, r9, r1, r2
 80264ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80264ce:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80264d2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80264d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80264da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80264de:	4302      	orrs	r2, r0
 80264e0:	e7d4      	b.n	802648c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80264e2:	f8be 7000 	ldrh.w	r7, [lr]
 80264e6:	4c1c      	ldr	r4, [pc, #112]	; (8026558 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80264e8:	43db      	mvns	r3, r3
 80264ea:	1238      	asrs	r0, r7, #8
 80264ec:	fa5f fc83 	uxtb.w	ip, r3
 80264f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80264f4:	10fd      	asrs	r5, r7, #3
 80264f6:	fb00 f00c 	mul.w	r0, r0, ip
 80264fa:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80264fe:	fb05 f10c 	mul.w	r1, r5, ip
 8026502:	1c45      	adds	r5, r0, #1
 8026504:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026508:	1215      	asrs	r5, r2, #8
 802650a:	f025 0507 	bic.w	r5, r5, #7
 802650e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8026512:	1c4d      	adds	r5, r1, #1
 8026514:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026518:	10d1      	asrs	r1, r2, #3
 802651a:	f021 0103 	bic.w	r1, r1, #3
 802651e:	00fb      	lsls	r3, r7, #3
 8026520:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026524:	b2db      	uxtb	r3, r3
 8026526:	b2c0      	uxtb	r0, r0
 8026528:	00c9      	lsls	r1, r1, #3
 802652a:	fb03 f30c 	mul.w	r3, r3, ip
 802652e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026532:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8026536:	4308      	orrs	r0, r1
 8026538:	1c59      	adds	r1, r3, #1
 802653a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802653e:	00d2      	lsls	r2, r2, #3
 8026540:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026544:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026548:	4318      	orrs	r0, r3
 802654a:	f8ae 0000 	strh.w	r0, [lr]
 802654e:	e7a2      	b.n	8026496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8026550:	b013      	add	sp, #76	; 0x4c
 8026552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026556:	bf00      	nop
 8026558:	fffff800 	.word	0xfffff800

0802655c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802655c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026560:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8026564:	fb05 4c03 	mla	ip, r5, r3, r4
 8026568:	2d00      	cmp	r5, #0
 802656a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802656e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8026572:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026576:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802657a:	8808      	ldrh	r0, [r1, #0]
 802657c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8026580:	f2c0 80a7 	blt.w	80266d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8026584:	45aa      	cmp	sl, r5
 8026586:	f340 80a4 	ble.w	80266d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802658a:	2c00      	cmp	r4, #0
 802658c:	f2c0 809f 	blt.w	80266ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026590:	42a3      	cmp	r3, r4
 8026592:	f340 809c 	ble.w	80266ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8026596:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802659a:	1c62      	adds	r2, r4, #1
 802659c:	f100 809c 	bmi.w	80266d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265a0:	4293      	cmp	r3, r2
 80265a2:	f340 8099 	ble.w	80266d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265a6:	f1b9 0f00 	cmp.w	r9, #0
 80265aa:	f000 8095 	beq.w	80266d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80265ae:	f8be c002 	ldrh.w	ip, [lr, #2]
 80265b2:	3501      	adds	r5, #1
 80265b4:	f100 8094 	bmi.w	80266e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265b8:	45aa      	cmp	sl, r5
 80265ba:	f340 8091 	ble.w	80266e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265be:	2f00      	cmp	r7, #0
 80265c0:	f000 808e 	beq.w	80266e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80265c4:	2c00      	cmp	r4, #0
 80265c6:	f2c0 8089 	blt.w	80266dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265ca:	42a3      	cmp	r3, r4
 80265cc:	f340 8086 	ble.w	80266dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80265d0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80265d4:	3401      	adds	r4, #1
 80265d6:	f100 8086 	bmi.w	80266e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265da:	42a3      	cmp	r3, r4
 80265dc:	f340 8083 	ble.w	80266e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265e0:	f1b9 0f00 	cmp.w	r9, #0
 80265e4:	d07f      	beq.n	80266e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80265e6:	3301      	adds	r3, #1
 80265e8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80265ec:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80265f0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80265f4:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80265f8:	fb19 fe07 	smulbb	lr, r9, r7
 80265fc:	ea44 0808 	orr.w	r8, r4, r8
 8026600:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8026604:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8026608:	f1c7 0210 	rsb	r2, r7, #16
 802660c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026610:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026614:	ea44 0c0c 	orr.w	ip, r4, ip
 8026618:	eba2 0209 	sub.w	r2, r2, r9
 802661c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026620:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026624:	fb04 f40c 	mul.w	r4, r4, ip
 8026628:	fb02 4808 	mla	r8, r2, r8, r4
 802662c:	041a      	lsls	r2, r3, #16
 802662e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026632:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026636:	4313      	orrs	r3, r2
 8026638:	042a      	lsls	r2, r5, #16
 802663a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802663e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026642:	fb0e 8303 	mla	r3, lr, r3, r8
 8026646:	432a      	orrs	r2, r5
 8026648:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802664c:	fb07 3202 	mla	r2, r7, r2, r3
 8026650:	0d53      	lsrs	r3, r2, #21
 8026652:	0952      	lsrs	r2, r2, #5
 8026654:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026658:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802665c:	431a      	orrs	r2, r3
 802665e:	b293      	uxth	r3, r2
 8026660:	b2b4      	uxth	r4, r6
 8026662:	1202      	asrs	r2, r0, #8
 8026664:	43f6      	mvns	r6, r6
 8026666:	b2f6      	uxtb	r6, r6
 8026668:	121d      	asrs	r5, r3, #8
 802666a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802666e:	fb12 f206 	smulbb	r2, r2, r6
 8026672:	10c7      	asrs	r7, r0, #3
 8026674:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026678:	00c0      	lsls	r0, r0, #3
 802667a:	fb05 2504 	mla	r5, r5, r4, r2
 802667e:	b2c0      	uxtb	r0, r0
 8026680:	10da      	asrs	r2, r3, #3
 8026682:	00db      	lsls	r3, r3, #3
 8026684:	b2db      	uxtb	r3, r3
 8026686:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802668a:	fb10 f006 	smulbb	r0, r0, r6
 802668e:	b2ad      	uxth	r5, r5
 8026690:	fb03 0004 	mla	r0, r3, r4, r0
 8026694:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026698:	fb17 f706 	smulbb	r7, r7, r6
 802669c:	b280      	uxth	r0, r0
 802669e:	1c6b      	adds	r3, r5, #1
 80266a0:	fb02 7204 	mla	r2, r2, r4, r7
 80266a4:	b292      	uxth	r2, r2
 80266a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80266aa:	1c43      	adds	r3, r0, #1
 80266ac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80266b0:	1c50      	adds	r0, r2, #1
 80266b2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80266b6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80266ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80266be:	0952      	lsrs	r2, r2, #5
 80266c0:	432b      	orrs	r3, r5
 80266c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266c6:	4313      	orrs	r3, r2
 80266c8:	800b      	strh	r3, [r1, #0]
 80266ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80266ce:	4680      	mov	r8, r0
 80266d0:	e763      	b.n	802659a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80266d2:	4684      	mov	ip, r0
 80266d4:	4680      	mov	r8, r0
 80266d6:	e76c      	b.n	80265b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266d8:	4684      	mov	ip, r0
 80266da:	e76a      	b.n	80265b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80266dc:	4605      	mov	r5, r0
 80266de:	e779      	b.n	80265d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80266e0:	4603      	mov	r3, r0
 80266e2:	4605      	mov	r5, r0
 80266e4:	e782      	b.n	80265ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80266e6:	4603      	mov	r3, r0
 80266e8:	e780      	b.n	80265ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080266ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80266ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266ee:	b093      	sub	sp, #76	; 0x4c
 80266f0:	461d      	mov	r5, r3
 80266f2:	9210      	str	r2, [sp, #64]	; 0x40
 80266f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80266f6:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80266fa:	920b      	str	r2, [sp, #44]	; 0x2c
 80266fc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8026700:	910a      	str	r1, [sp, #40]	; 0x28
 8026702:	6859      	ldr	r1, [r3, #4]
 8026704:	681b      	ldr	r3, [r3, #0]
 8026706:	9011      	str	r0, [sp, #68]	; 0x44
 8026708:	fb01 2707 	mla	r7, r1, r7, r2
 802670c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8026710:	9307      	str	r3, [sp, #28]
 8026712:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026714:	681b      	ldr	r3, [r3, #0]
 8026716:	9309      	str	r3, [sp, #36]	; 0x24
 8026718:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802671a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802671e:	43db      	mvns	r3, r3
 8026720:	b2db      	uxtb	r3, r3
 8026722:	9308      	str	r3, [sp, #32]
 8026724:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026726:	2b00      	cmp	r3, #0
 8026728:	dc03      	bgt.n	8026732 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802672a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802672c:	2b00      	cmp	r3, #0
 802672e:	f340 8203 	ble.w	8026b38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026732:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026734:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026738:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802673c:	1e48      	subs	r0, r1, #1
 802673e:	f102 3cff 	add.w	ip, r2, #4294967295
 8026742:	2d00      	cmp	r5, #0
 8026744:	f340 80da 	ble.w	80268fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8026748:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802674c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026750:	d406      	bmi.n	8026760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026752:	4586      	cmp	lr, r0
 8026754:	da04      	bge.n	8026760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8026756:	2b00      	cmp	r3, #0
 8026758:	db02      	blt.n	8026760 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802675a:	4563      	cmp	r3, ip
 802675c:	f2c0 80cf 	blt.w	80268fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026760:	f11e 0e01 	adds.w	lr, lr, #1
 8026764:	f100 80c1 	bmi.w	80268ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026768:	4571      	cmp	r1, lr
 802676a:	f2c0 80be 	blt.w	80268ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802676e:	3301      	adds	r3, #1
 8026770:	f100 80bb 	bmi.w	80268ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8026774:	429a      	cmp	r2, r3
 8026776:	f2c0 80b8 	blt.w	80268ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802677a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802677e:	46a9      	mov	r9, r5
 8026780:	f1b9 0f00 	cmp.w	r9, #0
 8026784:	f340 80d8 	ble.w	8026938 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8026788:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802678a:	1421      	asrs	r1, r4, #16
 802678c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026790:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026794:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026798:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802679c:	f100 8111 	bmi.w	80269c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267a0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80267a4:	4551      	cmp	r1, sl
 80267a6:	f280 810c 	bge.w	80269c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267aa:	2800      	cmp	r0, #0
 80267ac:	f2c0 8109 	blt.w	80269c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267b0:	f103 3aff 	add.w	sl, r3, #4294967295
 80267b4:	4550      	cmp	r0, sl
 80267b6:	f280 8104 	bge.w	80269c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80267ba:	fa0f f38e 	sxth.w	r3, lr
 80267be:	fb00 1103 	mla	r1, r0, r3, r1
 80267c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80267c4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80267c8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80267cc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80267d0:	f1bc 0f00 	cmp.w	ip, #0
 80267d4:	d007      	beq.n	80267e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80267d6:	005b      	lsls	r3, r3, #1
 80267d8:	eb0a 0003 	add.w	r0, sl, r3
 80267dc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80267e0:	930c      	str	r3, [sp, #48]	; 0x30
 80267e2:	8843      	ldrh	r3, [r0, #2]
 80267e4:	930d      	str	r3, [sp, #52]	; 0x34
 80267e6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80267ea:	fb12 f30c 	smulbb	r3, r2, ip
 80267ee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80267f2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80267f6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80267fa:	10db      	asrs	r3, r3, #3
 80267fc:	ea40 000e 	orr.w	r0, r0, lr
 8026800:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026804:	f1cc 0e10 	rsb	lr, ip, #16
 8026808:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802680c:	ebae 0e02 	sub.w	lr, lr, r2
 8026810:	ea4a 0101 	orr.w	r1, sl, r1
 8026814:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026818:	4351      	muls	r1, r2
 802681a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802681c:	9f08      	ldr	r7, [sp, #32]
 802681e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026822:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026826:	0410      	lsls	r0, r2, #16
 8026828:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802682c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026830:	4310      	orrs	r0, r2
 8026832:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026834:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026836:	0412      	lsls	r2, r2, #16
 8026838:	fb03 e000 	mla	r0, r3, r0, lr
 802683c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026840:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026844:	ea42 020e 	orr.w	r2, r2, lr
 8026848:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802684c:	fb03 0302 	mla	r3, r3, r2, r0
 8026850:	0d5a      	lsrs	r2, r3, #21
 8026852:	095b      	lsrs	r3, r3, #5
 8026854:	f8b8 0000 	ldrh.w	r0, [r8]
 8026858:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802685c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026860:	4313      	orrs	r3, r2
 8026862:	b29b      	uxth	r3, r3
 8026864:	1201      	asrs	r1, r0, #8
 8026866:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802686a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802686e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026872:	fb11 f107 	smulbb	r1, r1, r7
 8026876:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802687a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802687e:	00c0      	lsls	r0, r0, #3
 8026880:	fb0c 1c02 	mla	ip, ip, r2, r1
 8026884:	b2c0      	uxtb	r0, r0
 8026886:	10d9      	asrs	r1, r3, #3
 8026888:	00db      	lsls	r3, r3, #3
 802688a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802688e:	b2db      	uxtb	r3, r3
 8026890:	fb10 f007 	smulbb	r0, r0, r7
 8026894:	fa1f fc8c 	uxth.w	ip, ip
 8026898:	fb03 0302 	mla	r3, r3, r2, r0
 802689c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80268a0:	fb1e fe07 	smulbb	lr, lr, r7
 80268a4:	fb01 e102 	mla	r1, r1, r2, lr
 80268a8:	b29a      	uxth	r2, r3
 80268aa:	f10c 0301 	add.w	r3, ip, #1
 80268ae:	b289      	uxth	r1, r1
 80268b0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80268b4:	1c53      	adds	r3, r2, #1
 80268b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80268ba:	1c4a      	adds	r2, r1, #1
 80268bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80268c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80268c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80268c8:	0949      	lsrs	r1, r1, #5
 80268ca:	ea43 030c 	orr.w	r3, r3, ip
 80268ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80268d2:	430b      	orrs	r3, r1
 80268d4:	f8a8 3000 	strh.w	r3, [r8]
 80268d8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268da:	441c      	add	r4, r3
 80268dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80268de:	f108 0802 	add.w	r8, r8, #2
 80268e2:	441e      	add	r6, r3
 80268e4:	f109 39ff 	add.w	r9, r9, #4294967295
 80268e8:	e74a      	b.n	8026780 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80268ea:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80268ec:	441c      	add	r4, r3
 80268ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80268f0:	441e      	add	r6, r3
 80268f2:	9b07      	ldr	r3, [sp, #28]
 80268f4:	3302      	adds	r3, #2
 80268f6:	3d01      	subs	r5, #1
 80268f8:	9307      	str	r3, [sp, #28]
 80268fa:	e722      	b.n	8026742 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80268fc:	d022      	beq.n	8026944 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80268fe:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026900:	1e6b      	subs	r3, r5, #1
 8026902:	fb00 4003 	mla	r0, r0, r3, r4
 8026906:	1400      	asrs	r0, r0, #16
 8026908:	f53f af37 	bmi.w	802677a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802690c:	3901      	subs	r1, #1
 802690e:	4288      	cmp	r0, r1
 8026910:	f6bf af33 	bge.w	802677a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026914:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026916:	fb01 6303 	mla	r3, r1, r3, r6
 802691a:	141b      	asrs	r3, r3, #16
 802691c:	f53f af2d 	bmi.w	802677a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026920:	3a01      	subs	r2, #1
 8026922:	4293      	cmp	r3, r2
 8026924:	f6bf af29 	bge.w	802677a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026928:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802692c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8026930:	46a8      	mov	r8, r5
 8026932:	f1b8 0f00 	cmp.w	r8, #0
 8026936:	dc5e      	bgt.n	80269f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8026938:	9b07      	ldr	r3, [sp, #28]
 802693a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802693e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8026942:	9307      	str	r3, [sp, #28]
 8026944:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026946:	2b00      	cmp	r3, #0
 8026948:	f340 80f6 	ble.w	8026b38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802694c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026950:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026954:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026958:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802695a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802695e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026962:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026966:	eef0 6a62 	vmov.f32	s13, s5
 802696a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802696e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026972:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026976:	ee16 4a90 	vmov	r4, s13
 802697a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802697e:	eef0 6a43 	vmov.f32	s13, s6
 8026982:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026986:	ee12 2a90 	vmov	r2, s5
 802698a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802698e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026992:	ee13 2a10 	vmov	r2, s6
 8026996:	931f      	str	r3, [sp, #124]	; 0x7c
 8026998:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802699a:	fb92 f3f3 	sdiv	r3, r2, r3
 802699e:	9320      	str	r3, [sp, #128]	; 0x80
 80269a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80269a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80269a4:	3b01      	subs	r3, #1
 80269a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80269aa:	930a      	str	r3, [sp, #40]	; 0x28
 80269ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80269ae:	ee16 6a90 	vmov	r6, s13
 80269b2:	bf14      	ite	ne
 80269b4:	461d      	movne	r5, r3
 80269b6:	4615      	moveq	r5, r2
 80269b8:	eeb0 3a67 	vmov.f32	s6, s15
 80269bc:	eef0 2a47 	vmov.f32	s5, s14
 80269c0:	e6b0      	b.n	8026724 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80269c2:	f111 0a01 	adds.w	sl, r1, #1
 80269c6:	d487      	bmi.n	80268d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269c8:	45d6      	cmp	lr, sl
 80269ca:	db85      	blt.n	80268d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269cc:	f110 0a01 	adds.w	sl, r0, #1
 80269d0:	d482      	bmi.n	80268d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269d2:	4553      	cmp	r3, sl
 80269d4:	db80      	blt.n	80268d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269d6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80269d8:	9101      	str	r1, [sp, #4]
 80269da:	b21b      	sxth	r3, r3
 80269dc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80269e0:	9300      	str	r3, [sp, #0]
 80269e2:	e9cd c704 	strd	ip, r7, [sp, #16]
 80269e6:	fa0f f38e 	sxth.w	r3, lr
 80269ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80269ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80269ee:	4641      	mov	r1, r8
 80269f0:	f7ff fdb4 	bl	802655c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80269f4:	e770      	b.n	80268d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80269f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269f8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80269fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80269fe:	1430      	asrs	r0, r6, #16
 8026a00:	1423      	asrs	r3, r4, #16
 8026a02:	fb01 3000 	mla	r0, r1, r0, r3
 8026a06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a08:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8026a0c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8026a10:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026a14:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026a18:	8858      	ldrh	r0, [r3, #2]
 8026a1a:	f1be 0f00 	cmp.w	lr, #0
 8026a1e:	d00b      	beq.n	8026a38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8026a20:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026a24:	3901      	subs	r1, #1
 8026a26:	0049      	lsls	r1, r1, #1
 8026a28:	3102      	adds	r1, #2
 8026a2a:	eb03 0b01 	add.w	fp, r3, r1
 8026a2e:	5a5b      	ldrh	r3, [r3, r1]
 8026a30:	930e      	str	r3, [sp, #56]	; 0x38
 8026a32:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026a36:	930f      	str	r3, [sp, #60]	; 0x3c
 8026a38:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8026a3c:	fb12 f30e 	smulbb	r3, r2, lr
 8026a40:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026a44:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026a48:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8026a4c:	10db      	asrs	r3, r3, #3
 8026a4e:	ea41 010c 	orr.w	r1, r1, ip
 8026a52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a56:	f1ce 0c10 	rsb	ip, lr, #16
 8026a5a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a5e:	ebac 0c02 	sub.w	ip, ip, r2
 8026a62:	ea4b 0000 	orr.w	r0, fp, r0
 8026a66:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026a6a:	4350      	muls	r0, r2
 8026a6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026a6e:	9f08      	ldr	r7, [sp, #32]
 8026a70:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026a74:	fb0c 0c01 	mla	ip, ip, r1, r0
 8026a78:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026a7c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8026a80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026a82:	980e      	ldr	r0, [sp, #56]	; 0x38
 8026a84:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026a88:	0412      	lsls	r2, r2, #16
 8026a8a:	ea4b 0101 	orr.w	r1, fp, r1
 8026a8e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026a92:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026a96:	fb03 c101 	mla	r1, r3, r1, ip
 8026a9a:	4302      	orrs	r2, r0
 8026a9c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026aa0:	fb03 1202 	mla	r2, r3, r2, r1
 8026aa4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8026aa8:	0952      	lsrs	r2, r2, #5
 8026aaa:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8026aae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026ab2:	f8b9 2000 	ldrh.w	r2, [r9]
 8026ab6:	ea4b 0303 	orr.w	r3, fp, r3
 8026aba:	b29b      	uxth	r3, r3
 8026abc:	1211      	asrs	r1, r2, #8
 8026abe:	1218      	asrs	r0, r3, #8
 8026ac0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026ac4:	fb11 f107 	smulbb	r1, r1, r7
 8026ac8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8026acc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ad0:	00d2      	lsls	r2, r2, #3
 8026ad2:	fb00 100a 	mla	r0, r0, sl, r1
 8026ad6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8026ada:	10d9      	asrs	r1, r3, #3
 8026adc:	b2d2      	uxtb	r2, r2
 8026ade:	00db      	lsls	r3, r3, #3
 8026ae0:	fb1c fc07 	smulbb	ip, ip, r7
 8026ae4:	fb12 f207 	smulbb	r2, r2, r7
 8026ae8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026aec:	b2db      	uxtb	r3, r3
 8026aee:	b280      	uxth	r0, r0
 8026af0:	fb01 c10a 	mla	r1, r1, sl, ip
 8026af4:	fb03 230a 	mla	r3, r3, sl, r2
 8026af8:	b29b      	uxth	r3, r3
 8026afa:	b289      	uxth	r1, r1
 8026afc:	1c42      	adds	r2, r0, #1
 8026afe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026b02:	f101 0c01 	add.w	ip, r1, #1
 8026b06:	1c5a      	adds	r2, r3, #1
 8026b08:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026b0c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8026b10:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026b12:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026b16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026b1a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026b1e:	4310      	orrs	r0, r2
 8026b20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b24:	441c      	add	r4, r3
 8026b26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b28:	ea40 000c 	orr.w	r0, r0, ip
 8026b2c:	f829 0b02 	strh.w	r0, [r9], #2
 8026b30:	441e      	add	r6, r3
 8026b32:	f108 38ff 	add.w	r8, r8, #4294967295
 8026b36:	e6fc      	b.n	8026932 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8026b38:	b013      	add	sp, #76	; 0x4c
 8026b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8026b3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8026b42:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8026b46:	fb0e 4703 	mla	r7, lr, r3, r4
 8026b4a:	f1be 0f00 	cmp.w	lr, #0
 8026b4e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8026b52:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8026b56:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8026b5a:	8808      	ldrh	r0, [r1, #0]
 8026b5c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8026b60:	db60      	blt.n	8026c24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b62:	45f1      	cmp	r9, lr
 8026b64:	dd5e      	ble.n	8026c24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8026b66:	2c00      	cmp	r4, #0
 8026b68:	db5a      	blt.n	8026c20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b6a:	42a3      	cmp	r3, r4
 8026b6c:	dd58      	ble.n	8026c20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8026b6e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8026b72:	1c62      	adds	r2, r4, #1
 8026b74:	d459      	bmi.n	8026c2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b76:	4293      	cmp	r3, r2
 8026b78:	dd57      	ble.n	8026c2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b7a:	2d00      	cmp	r5, #0
 8026b7c:	d055      	beq.n	8026c2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8026b7e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8026b82:	f11e 0e01 	adds.w	lr, lr, #1
 8026b86:	d454      	bmi.n	8026c32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b88:	45f1      	cmp	r9, lr
 8026b8a:	dd52      	ble.n	8026c32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b8c:	2e00      	cmp	r6, #0
 8026b8e:	d050      	beq.n	8026c32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8026b90:	2c00      	cmp	r4, #0
 8026b92:	db4c      	blt.n	8026c2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026b94:	42a3      	cmp	r3, r4
 8026b96:	dd4a      	ble.n	8026c2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8026b98:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8026b9c:	3401      	adds	r4, #1
 8026b9e:	d405      	bmi.n	8026bac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026ba0:	42a3      	cmp	r3, r4
 8026ba2:	dd03      	ble.n	8026bac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026ba4:	b115      	cbz	r5, 8026bac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8026ba6:	3301      	adds	r3, #1
 8026ba8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8026bac:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026bb0:	fb15 f406 	smulbb	r4, r5, r6
 8026bb4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bb8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8026bbc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026bc0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8026bc4:	ea43 0c0c 	orr.w	ip, r3, ip
 8026bc8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026bcc:	f1c6 0310 	rsb	r3, r6, #16
 8026bd0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026bd4:	1b5b      	subs	r3, r3, r5
 8026bd6:	ea4e 0707 	orr.w	r7, lr, r7
 8026bda:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8026bde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8026be2:	437d      	muls	r5, r7
 8026be4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8026be8:	0403      	lsls	r3, r0, #16
 8026bea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026bf2:	4318      	orrs	r0, r3
 8026bf4:	0413      	lsls	r3, r2, #16
 8026bf6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026bfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026bfe:	4313      	orrs	r3, r2
 8026c00:	fb04 c000 	mla	r0, r4, r0, ip
 8026c04:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8026c08:	fb06 0003 	mla	r0, r6, r3, r0
 8026c0c:	0d43      	lsrs	r3, r0, #21
 8026c0e:	0940      	lsrs	r0, r0, #5
 8026c10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c14:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026c18:	4318      	orrs	r0, r3
 8026c1a:	8008      	strh	r0, [r1, #0]
 8026c1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026c20:	4684      	mov	ip, r0
 8026c22:	e7a6      	b.n	8026b72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8026c24:	4607      	mov	r7, r0
 8026c26:	4684      	mov	ip, r0
 8026c28:	e7ab      	b.n	8026b82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c2a:	4607      	mov	r7, r0
 8026c2c:	e7a9      	b.n	8026b82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8026c2e:	4602      	mov	r2, r0
 8026c30:	e7b4      	b.n	8026b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8026c32:	4602      	mov	r2, r0
 8026c34:	e7ba      	b.n	8026bac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08026c36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026c36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026c3a:	b08f      	sub	sp, #60	; 0x3c
 8026c3c:	461d      	mov	r5, r3
 8026c3e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8026c40:	920c      	str	r2, [sp, #48]	; 0x30
 8026c42:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8026c46:	9107      	str	r1, [sp, #28]
 8026c48:	6859      	ldr	r1, [r3, #4]
 8026c4a:	681b      	ldr	r3, [r3, #0]
 8026c4c:	900d      	str	r0, [sp, #52]	; 0x34
 8026c4e:	fb01 2707 	mla	r7, r1, r7, r2
 8026c52:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8026c56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c58:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8026c5c:	f8d3 8000 	ldr.w	r8, [r3]
 8026c60:	9b07      	ldr	r3, [sp, #28]
 8026c62:	2b00      	cmp	r3, #0
 8026c64:	dc03      	bgt.n	8026c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8026c66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026c68:	2b00      	cmp	r3, #0
 8026c6a:	f340 8181 	ble.w	8026f70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026c6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026c70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026c74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026c78:	1e48      	subs	r0, r1, #1
 8026c7a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026c7e:	2d00      	cmp	r5, #0
 8026c80:	f340 809b 	ble.w	8026dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8026c84:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026c88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026c8c:	d406      	bmi.n	8026c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c8e:	4586      	cmp	lr, r0
 8026c90:	da04      	bge.n	8026c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c92:	2b00      	cmp	r3, #0
 8026c94:	db02      	blt.n	8026c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8026c96:	4563      	cmp	r3, ip
 8026c98:	f2c0 8090 	blt.w	8026dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8026c9c:	f11e 0e01 	adds.w	lr, lr, #1
 8026ca0:	f100 8084 	bmi.w	8026dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026ca4:	4571      	cmp	r1, lr
 8026ca6:	f2c0 8081 	blt.w	8026dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026caa:	3301      	adds	r3, #1
 8026cac:	d47e      	bmi.n	8026dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cae:	429a      	cmp	r2, r3
 8026cb0:	db7c      	blt.n	8026dac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8026cb2:	46aa      	mov	sl, r5
 8026cb4:	46b9      	mov	r9, r7
 8026cb6:	f1ba 0f00 	cmp.w	sl, #0
 8026cba:	f340 8099 	ble.w	8026df0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8026cbe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026cc0:	1421      	asrs	r1, r4, #16
 8026cc2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026cc6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026cca:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026cce:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8026cd2:	f100 80d0 	bmi.w	8026e76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cd6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026cda:	4559      	cmp	r1, fp
 8026cdc:	f280 80cb 	bge.w	8026e76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026ce0:	2800      	cmp	r0, #0
 8026ce2:	f2c0 80c8 	blt.w	8026e76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026ce6:	f103 3bff 	add.w	fp, r3, #4294967295
 8026cea:	4558      	cmp	r0, fp
 8026cec:	f280 80c3 	bge.w	8026e76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8026cf0:	fa0f fe8e 	sxth.w	lr, lr
 8026cf4:	fb00 110e 	mla	r1, r0, lr, r1
 8026cf8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026cfc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8026d00:	8841      	ldrh	r1, [r0, #2]
 8026d02:	f1bc 0f00 	cmp.w	ip, #0
 8026d06:	d00b      	beq.n	8026d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8026d08:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8026d0c:	3b01      	subs	r3, #1
 8026d0e:	005b      	lsls	r3, r3, #1
 8026d10:	3302      	adds	r3, #2
 8026d12:	eb00 0e03 	add.w	lr, r0, r3
 8026d16:	5ac3      	ldrh	r3, [r0, r3]
 8026d18:	9308      	str	r3, [sp, #32]
 8026d1a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8026d1e:	9309      	str	r3, [sp, #36]	; 0x24
 8026d20:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8026d24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d28:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026d2c:	ea40 000b 	orr.w	r0, r0, fp
 8026d30:	fb12 f30c 	smulbb	r3, r2, ip
 8026d34:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026d38:	10db      	asrs	r3, r3, #3
 8026d3a:	f1cc 0e10 	rsb	lr, ip, #16
 8026d3e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026d42:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026d46:	ebae 0e02 	sub.w	lr, lr, r2
 8026d4a:	ea4b 0101 	orr.w	r1, fp, r1
 8026d4e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026d52:	4351      	muls	r1, r2
 8026d54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026d56:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8026d5a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8026d5e:	0410      	lsls	r0, r2, #16
 8026d60:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026d64:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026d68:	4310      	orrs	r0, r2
 8026d6a:	9a08      	ldr	r2, [sp, #32]
 8026d6c:	9908      	ldr	r1, [sp, #32]
 8026d6e:	0412      	lsls	r2, r2, #16
 8026d70:	fb03 e000 	mla	r0, r3, r0, lr
 8026d74:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026d78:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8026d7c:	ea42 020e 	orr.w	r2, r2, lr
 8026d80:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8026d84:	fb03 0302 	mla	r3, r3, r2, r0
 8026d88:	0d5a      	lsrs	r2, r3, #21
 8026d8a:	095b      	lsrs	r3, r3, #5
 8026d8c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d90:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026d94:	4313      	orrs	r3, r2
 8026d96:	f8a9 3000 	strh.w	r3, [r9]
 8026d9a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026d9c:	441c      	add	r4, r3
 8026d9e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026da0:	f109 0902 	add.w	r9, r9, #2
 8026da4:	441e      	add	r6, r3
 8026da6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8026daa:	e784      	b.n	8026cb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8026dac:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026dae:	441c      	add	r4, r3
 8026db0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026db2:	3d01      	subs	r5, #1
 8026db4:	441e      	add	r6, r3
 8026db6:	3702      	adds	r7, #2
 8026db8:	e761      	b.n	8026c7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026dba:	d01d      	beq.n	8026df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8026dbc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8026dbe:	1e6b      	subs	r3, r5, #1
 8026dc0:	fb00 4003 	mla	r0, r0, r3, r4
 8026dc4:	1400      	asrs	r0, r0, #16
 8026dc6:	f53f af74 	bmi.w	8026cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dca:	3901      	subs	r1, #1
 8026dcc:	4288      	cmp	r0, r1
 8026dce:	f6bf af70 	bge.w	8026cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dd2:	991c      	ldr	r1, [sp, #112]	; 0x70
 8026dd4:	fb01 6303 	mla	r3, r1, r3, r6
 8026dd8:	141b      	asrs	r3, r3, #16
 8026dda:	f53f af6a 	bmi.w	8026cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026dde:	3a01      	subs	r2, #1
 8026de0:	4293      	cmp	r3, r2
 8026de2:	f6bf af66 	bge.w	8026cb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8026de6:	46a9      	mov	r9, r5
 8026de8:	46ba      	mov	sl, r7
 8026dea:	f1b9 0f00 	cmp.w	r9, #0
 8026dee:	dc5a      	bgt.n	8026ea6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8026df0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026df4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8026df8:	9b07      	ldr	r3, [sp, #28]
 8026dfa:	2b00      	cmp	r3, #0
 8026dfc:	f340 80b8 	ble.w	8026f70 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8026e00:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026e04:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026e08:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026e0c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026e12:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026e16:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026e1a:	eef0 6a62 	vmov.f32	s13, s5
 8026e1e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026e2a:	ee16 4a90 	vmov	r4, s13
 8026e2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026e32:	eef0 6a43 	vmov.f32	s13, s6
 8026e36:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026e3a:	ee12 2a90 	vmov	r2, s5
 8026e3e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026e42:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e46:	ee13 2a10 	vmov	r2, s6
 8026e4a:	931b      	str	r3, [sp, #108]	; 0x6c
 8026e4c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026e52:	931c      	str	r3, [sp, #112]	; 0x70
 8026e54:	9b07      	ldr	r3, [sp, #28]
 8026e56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026e58:	3b01      	subs	r3, #1
 8026e5a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026e5e:	9307      	str	r3, [sp, #28]
 8026e60:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026e62:	ee16 6a90 	vmov	r6, s13
 8026e66:	bf14      	ite	ne
 8026e68:	461d      	movne	r5, r3
 8026e6a:	4615      	moveq	r5, r2
 8026e6c:	eeb0 3a67 	vmov.f32	s6, s15
 8026e70:	eef0 2a47 	vmov.f32	s5, s14
 8026e74:	e6f4      	b.n	8026c60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8026e76:	f111 0b01 	adds.w	fp, r1, #1
 8026e7a:	d48e      	bmi.n	8026d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e7c:	45de      	cmp	lr, fp
 8026e7e:	db8c      	blt.n	8026d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e80:	f110 0b01 	adds.w	fp, r0, #1
 8026e84:	d489      	bmi.n	8026d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e86:	455b      	cmp	r3, fp
 8026e88:	db87      	blt.n	8026d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026e8a:	b21b      	sxth	r3, r3
 8026e8c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8026e90:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8026e94:	9300      	str	r3, [sp, #0]
 8026e96:	4642      	mov	r2, r8
 8026e98:	fa0f f38e 	sxth.w	r3, lr
 8026e9c:	4649      	mov	r1, r9
 8026e9e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026ea0:	f7ff fe4d 	bl	8026b3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8026ea4:	e779      	b.n	8026d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8026ea6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026ea8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026eac:	1420      	asrs	r0, r4, #16
 8026eae:	1431      	asrs	r1, r6, #16
 8026eb0:	fb03 0101 	mla	r1, r3, r1, r0
 8026eb4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8026eb8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8026ebc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8026ec0:	8841      	ldrh	r1, [r0, #2]
 8026ec2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026ec6:	f1be 0f00 	cmp.w	lr, #0
 8026eca:	d00b      	beq.n	8026ee4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026ecc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8026ed0:	3b01      	subs	r3, #1
 8026ed2:	005b      	lsls	r3, r3, #1
 8026ed4:	3302      	adds	r3, #2
 8026ed6:	eb00 0b03 	add.w	fp, r0, r3
 8026eda:	5ac3      	ldrh	r3, [r0, r3]
 8026edc:	930a      	str	r3, [sp, #40]	; 0x28
 8026ede:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8026ee2:	930b      	str	r3, [sp, #44]	; 0x2c
 8026ee4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8026ee8:	fb12 f30e 	smulbb	r3, r2, lr
 8026eec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026ef0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026ef4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026ef8:	10db      	asrs	r3, r3, #3
 8026efa:	ea40 000c 	orr.w	r0, r0, ip
 8026efe:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f02:	f1ce 0c10 	rsb	ip, lr, #16
 8026f06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026f0a:	ebac 0c02 	sub.w	ip, ip, r2
 8026f0e:	ea4b 0101 	orr.w	r1, fp, r1
 8026f12:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8026f16:	4351      	muls	r1, r2
 8026f18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026f1a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8026f1e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8026f22:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8026f26:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8026f2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026f2c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026f2e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026f32:	0412      	lsls	r2, r2, #16
 8026f34:	ea4b 0000 	orr.w	r0, fp, r0
 8026f38:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026f3c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8026f40:	fb03 c000 	mla	r0, r3, r0, ip
 8026f44:	ea42 0b0b 	orr.w	fp, r2, fp
 8026f48:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8026f4c:	fb03 000b 	mla	r0, r3, fp, r0
 8026f50:	0d43      	lsrs	r3, r0, #21
 8026f52:	0940      	lsrs	r0, r0, #5
 8026f54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026f58:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026f5c:	4318      	orrs	r0, r3
 8026f5e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8026f60:	f82a 0b02 	strh.w	r0, [sl], #2
 8026f64:	441c      	add	r4, r3
 8026f66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026f68:	f109 39ff 	add.w	r9, r9, #4294967295
 8026f6c:	441e      	add	r6, r3
 8026f6e:	e73c      	b.n	8026dea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8026f70:	b00f      	add	sp, #60	; 0x3c
 8026f72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026f76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8026f76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f7a:	b085      	sub	sp, #20
 8026f7c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8026f80:	9102      	str	r1, [sp, #8]
 8026f82:	2c00      	cmp	r4, #0
 8026f84:	fb04 7103 	mla	r1, r4, r3, r7
 8026f88:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8026f8c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8026f90:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026f94:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8026f98:	f2c0 811b 	blt.w	80271d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026f9c:	45a6      	cmp	lr, r4
 8026f9e:	f340 8118 	ble.w	80271d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8026fa2:	2f00      	cmp	r7, #0
 8026fa4:	f2c0 8113 	blt.w	80271ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026fa8:	42bb      	cmp	r3, r7
 8026faa:	f340 8110 	ble.w	80271ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8026fae:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8026fb2:	1c7a      	adds	r2, r7, #1
 8026fb4:	f100 8110 	bmi.w	80271d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026fb8:	4293      	cmp	r3, r2
 8026fba:	f340 810d 	ble.w	80271d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8026fbe:	2e00      	cmp	r6, #0
 8026fc0:	f000 810c 	beq.w	80271dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8026fc4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8026fc8:	3401      	adds	r4, #1
 8026fca:	f100 810b 	bmi.w	80271e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fce:	45a6      	cmp	lr, r4
 8026fd0:	f340 8108 	ble.w	80271e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8026fd4:	2800      	cmp	r0, #0
 8026fd6:	f000 8108 	beq.w	80271ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8026fda:	2f00      	cmp	r7, #0
 8026fdc:	f2c0 8100 	blt.w	80271e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026fe0:	42bb      	cmp	r3, r7
 8026fe2:	f340 80fd 	ble.w	80271e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8026fe6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8026fea:	3701      	adds	r7, #1
 8026fec:	f100 8100 	bmi.w	80271f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026ff0:	42bb      	cmp	r3, r7
 8026ff2:	f340 80fd 	ble.w	80271f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8026ff6:	2e00      	cmp	r6, #0
 8026ff8:	f000 80fc 	beq.w	80271f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8026ffc:	3301      	adds	r3, #1
 8026ffe:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8027002:	b2b6      	uxth	r6, r6
 8027004:	b280      	uxth	r0, r0
 8027006:	fb00 fe06 	mul.w	lr, r0, r6
 802700a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802700e:	0136      	lsls	r6, r6, #4
 8027010:	eba6 070e 	sub.w	r7, r6, lr
 8027014:	b280      	uxth	r0, r0
 8027016:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802701a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802701e:	b2bf      	uxth	r7, r7
 8027020:	1a1b      	subs	r3, r3, r0
 8027022:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8027026:	b29b      	uxth	r3, r3
 8027028:	fb0a f607 	mul.w	r6, sl, r7
 802702c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027030:	fb0b 6603 	mla	r6, fp, r3, r6
 8027034:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8027038:	fb00 6609 	mla	r6, r0, r9, r6
 802703c:	fb0e 6608 	mla	r6, lr, r8, r6
 8027040:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027044:	9600      	str	r6, [sp, #0]
 8027046:	2e00      	cmp	r6, #0
 8027048:	f000 80be 	beq.w	80271c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802704c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027050:	fb0b fc0c 	mul.w	ip, fp, ip
 8027054:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027058:	fb0b f505 	mul.w	r5, fp, r5
 802705c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027060:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027064:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027068:	44dc      	add	ip, fp
 802706a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802706e:	9501      	str	r5, [sp, #4]
 8027070:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027074:	9503      	str	r5, [sp, #12]
 8027076:	9d01      	ldr	r5, [sp, #4]
 8027078:	9e02      	ldr	r6, [sp, #8]
 802707a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802707e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027082:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027086:	fb0a fc0c 	mul.w	ip, sl, ip
 802708a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802708e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027092:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027096:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802709a:	4465      	add	r5, ip
 802709c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80270a0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80270a4:	fb09 fc0c 	mul.w	ip, r9, ip
 80270a8:	fb09 f904 	mul.w	r9, r9, r4
 80270ac:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80270b0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80270b4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80270b8:	fb08 f404 	mul.w	r4, r8, r4
 80270bc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80270c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80270c4:	fb08 f802 	mul.w	r8, r8, r2
 80270c8:	fb0a fa01 	mul.w	sl, sl, r1
 80270cc:	0a22      	lsrs	r2, r4, #8
 80270ce:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80270d2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80270d6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80270da:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80270de:	4414      	add	r4, r2
 80270e0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80270e4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80270e8:	0a2d      	lsrs	r5, r5, #8
 80270ea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80270ee:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80270f2:	9a03      	ldr	r2, [sp, #12]
 80270f4:	8836      	ldrh	r6, [r6, #0]
 80270f6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80270fa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80270fe:	437d      	muls	r5, r7
 8027100:	4461      	add	r1, ip
 8027102:	0a24      	lsrs	r4, r4, #8
 8027104:	fb02 5503 	mla	r5, r2, r3, r5
 8027108:	0a09      	lsrs	r1, r1, #8
 802710a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802710e:	fb04 540e 	mla	r4, r4, lr, r5
 8027112:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027116:	fb01 4100 	mla	r1, r1, r0, r4
 802711a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802711e:	0a09      	lsrs	r1, r1, #8
 8027120:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027124:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027128:	fb07 f70a 	mul.w	r7, r7, sl
 802712c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027130:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027134:	fb03 7101 	mla	r1, r3, r1, r7
 8027138:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802713c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027140:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027144:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027148:	fb00 e101 	mla	r1, r0, r1, lr
 802714c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8027150:	9a00      	ldr	r2, [sp, #0]
 8027152:	b287      	uxth	r7, r0
 8027154:	437a      	muls	r2, r7
 8027156:	0a09      	lsrs	r1, r1, #8
 8027158:	1c53      	adds	r3, r2, #1
 802715a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802715e:	4321      	orrs	r1, r4
 8027160:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027164:	1235      	asrs	r5, r6, #8
 8027166:	0c0a      	lsrs	r2, r1, #16
 8027168:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802716c:	b2db      	uxtb	r3, r3
 802716e:	fb12 f207 	smulbb	r2, r2, r7
 8027172:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8027176:	fb05 2503 	mla	r5, r5, r3, r2
 802717a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802717e:	10f2      	asrs	r2, r6, #3
 8027180:	b2c8      	uxtb	r0, r1
 8027182:	00f6      	lsls	r6, r6, #3
 8027184:	fb14 f407 	smulbb	r4, r4, r7
 8027188:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802718c:	b2f6      	uxtb	r6, r6
 802718e:	fb10 f007 	smulbb	r0, r0, r7
 8027192:	fb02 4203 	mla	r2, r2, r3, r4
 8027196:	b2ad      	uxth	r5, r5
 8027198:	fb06 0303 	mla	r3, r6, r3, r0
 802719c:	b299      	uxth	r1, r3
 802719e:	b294      	uxth	r4, r2
 80271a0:	1c6b      	adds	r3, r5, #1
 80271a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80271a6:	1c62      	adds	r2, r4, #1
 80271a8:	1c4b      	adds	r3, r1, #1
 80271aa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80271ae:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80271b2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80271b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80271ba:	0952      	lsrs	r2, r2, #5
 80271bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80271c0:	432b      	orrs	r3, r5
 80271c2:	4313      	orrs	r3, r2
 80271c4:	9a02      	ldr	r2, [sp, #8]
 80271c6:	8013      	strh	r3, [r2, #0]
 80271c8:	b005      	add	sp, #20
 80271ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80271ce:	2500      	movs	r5, #0
 80271d0:	e6ef      	b.n	8026fb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80271d2:	2100      	movs	r1, #0
 80271d4:	460d      	mov	r5, r1
 80271d6:	e6f7      	b.n	8026fc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271d8:	2100      	movs	r1, #0
 80271da:	e6f5      	b.n	8026fc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271dc:	4631      	mov	r1, r6
 80271de:	e6f3      	b.n	8026fc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80271e0:	2400      	movs	r4, #0
 80271e2:	e702      	b.n	8026fea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80271e4:	2200      	movs	r2, #0
 80271e6:	4614      	mov	r4, r2
 80271e8:	e70b      	b.n	8027002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271ea:	4602      	mov	r2, r0
 80271ec:	4604      	mov	r4, r0
 80271ee:	e708      	b.n	8027002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271f0:	2200      	movs	r2, #0
 80271f2:	e706      	b.n	8027002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80271f4:	4632      	mov	r2, r6
 80271f6:	e704      	b.n	8027002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080271f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80271f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80271fc:	b09d      	sub	sp, #116	; 0x74
 80271fe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8027202:	9219      	str	r2, [sp, #100]	; 0x64
 8027204:	9307      	str	r3, [sp, #28]
 8027206:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8027208:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802720c:	931a      	str	r3, [sp, #104]	; 0x68
 802720e:	9117      	str	r1, [sp, #92]	; 0x5c
 8027210:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8027214:	901b      	str	r0, [sp, #108]	; 0x6c
 8027216:	6850      	ldr	r0, [r2, #4]
 8027218:	6812      	ldr	r2, [r2, #0]
 802721a:	fb00 1303 	mla	r3, r0, r3, r1
 802721e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027222:	930a      	str	r3, [sp, #40]	; 0x28
 8027224:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027226:	681b      	ldr	r3, [r3, #0]
 8027228:	9310      	str	r3, [sp, #64]	; 0x40
 802722a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802722e:	930b      	str	r3, [sp, #44]	; 0x2c
 8027230:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027232:	2b00      	cmp	r3, #0
 8027234:	dc03      	bgt.n	802723e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8027236:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8027238:	2b00      	cmp	r3, #0
 802723a:	f340 8375 	ble.w	8027928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802723e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027240:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027244:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027248:	1e48      	subs	r0, r1, #1
 802724a:	1e57      	subs	r7, r2, #1
 802724c:	9b07      	ldr	r3, [sp, #28]
 802724e:	2b00      	cmp	r3, #0
 8027250:	f340 818e 	ble.w	8027570 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8027254:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027258:	ea4f 4326 	mov.w	r3, r6, asr #16
 802725c:	d406      	bmi.n	802726c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802725e:	4584      	cmp	ip, r0
 8027260:	da04      	bge.n	802726c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027262:	2b00      	cmp	r3, #0
 8027264:	db02      	blt.n	802726c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8027266:	42bb      	cmp	r3, r7
 8027268:	f2c0 8183 	blt.w	8027572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802726c:	f11c 0c01 	adds.w	ip, ip, #1
 8027270:	f100 8173 	bmi.w	802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027274:	4561      	cmp	r1, ip
 8027276:	f2c0 8170 	blt.w	802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802727a:	3301      	adds	r3, #1
 802727c:	f100 816d 	bmi.w	802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027280:	429a      	cmp	r2, r3
 8027282:	f2c0 816a 	blt.w	802755a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8027286:	9b07      	ldr	r3, [sp, #28]
 8027288:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802728a:	9318      	str	r3, [sp, #96]	; 0x60
 802728c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802728e:	2b00      	cmp	r3, #0
 8027290:	f340 818c 	ble.w	80275ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8027294:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8027296:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027298:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802729c:	689b      	ldr	r3, [r3, #8]
 802729e:	1422      	asrs	r2, r4, #16
 80272a0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80272a4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80272a8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80272ac:	f100 81cd 	bmi.w	802764a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80272b4:	4542      	cmp	r2, r8
 80272b6:	f280 81c8 	bge.w	802764a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272ba:	f1bc 0f00 	cmp.w	ip, #0
 80272be:	f2c0 81c4 	blt.w	802764a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80272c6:	45c4      	cmp	ip, r8
 80272c8:	f280 81bf 	bge.w	802764a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80272cc:	b21b      	sxth	r3, r3
 80272ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80272d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80272d4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80272d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80272dc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80272e0:	2800      	cmp	r0, #0
 80272e2:	f000 81a9 	beq.w	8027638 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80272e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80272ea:	950c      	str	r5, [sp, #48]	; 0x30
 80272ec:	0e2d      	lsrs	r5, r5, #24
 80272ee:	9513      	str	r5, [sp, #76]	; 0x4c
 80272f0:	b181      	cbz	r1, 8027314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80272f2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80272f6:	3b01      	subs	r3, #1
 80272f8:	009b      	lsls	r3, r3, #2
 80272fa:	3304      	adds	r3, #4
 80272fc:	eb08 0c03 	add.w	ip, r8, r3
 8027300:	f858 3003 	ldr.w	r3, [r8, r3]
 8027304:	9308      	str	r3, [sp, #32]
 8027306:	0e1b      	lsrs	r3, r3, #24
 8027308:	9311      	str	r3, [sp, #68]	; 0x44
 802730a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802730e:	930d      	str	r3, [sp, #52]	; 0x34
 8027310:	0e1b      	lsrs	r3, r3, #24
 8027312:	9314      	str	r3, [sp, #80]	; 0x50
 8027314:	b280      	uxth	r0, r0
 8027316:	b289      	uxth	r1, r1
 8027318:	fb00 f901 	mul.w	r9, r0, r1
 802731c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027320:	0100      	lsls	r0, r0, #4
 8027322:	eba0 0809 	sub.w	r8, r0, r9
 8027326:	b289      	uxth	r1, r1
 8027328:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802732c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802732e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8027330:	fa1f f888 	uxth.w	r8, r8
 8027334:	1a5b      	subs	r3, r3, r1
 8027336:	b29b      	uxth	r3, r3
 8027338:	fb08 f000 	mul.w	r0, r8, r0
 802733c:	fb03 000e 	mla	r0, r3, lr, r0
 8027340:	fb01 0005 	mla	r0, r1, r5, r0
 8027344:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027346:	fb09 0005 	mla	r0, r9, r5, r0
 802734a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802734e:	2800      	cmp	r0, #0
 8027350:	f000 80fa 	beq.w	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027354:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027358:	d01b      	beq.n	8027392 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802735a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802735e:	fb0e fa0a 	mul.w	sl, lr, sl
 8027362:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027366:	fb0e fe02 	mul.w	lr, lr, r2
 802736a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802736e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027372:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027376:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802737a:	4452      	add	r2, sl
 802737c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027380:	0a12      	lsrs	r2, r2, #8
 8027382:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027386:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802738a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802738e:	ea42 020c 	orr.w	r2, r2, ip
 8027392:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027394:	2dff      	cmp	r5, #255	; 0xff
 8027396:	d021      	beq.n	80273dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8027398:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802739a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802739e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80273a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80273a6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80273aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80273ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80273b4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273b8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80273bc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80273c0:	44de      	add	lr, fp
 80273c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80273c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80273ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80273ce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80273d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80273d6:	ea4e 050a 	orr.w	r5, lr, sl
 80273da:	950c      	str	r5, [sp, #48]	; 0x30
 80273dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273de:	2dff      	cmp	r5, #255	; 0xff
 80273e0:	d021      	beq.n	8027426 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80273e2:	9d08      	ldr	r5, [sp, #32]
 80273e4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80273e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273ea:	fb05 fb0b 	mul.w	fp, r5, fp
 80273ee:	9d08      	ldr	r5, [sp, #32]
 80273f0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80273f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80273fa:	fb05 fa0a 	mul.w	sl, r5, sl
 80273fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027402:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027406:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802740a:	44de      	add	lr, fp
 802740c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027410:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027414:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027418:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802741c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027420:	ea4e 050a 	orr.w	r5, lr, sl
 8027424:	9508      	str	r5, [sp, #32]
 8027426:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027428:	2dff      	cmp	r5, #255	; 0xff
 802742a:	d021      	beq.n	8027470 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802742c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802742e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027432:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027434:	fb05 fb0b 	mul.w	fp, r5, fp
 8027438:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802743a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802743e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8027440:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027444:	fb05 fa0a 	mul.w	sl, r5, sl
 8027448:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802744c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027450:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027454:	44de      	add	lr, fp
 8027456:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802745a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802745e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027462:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027466:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802746a:	ea4e 050a 	orr.w	r5, lr, sl
 802746e:	950d      	str	r5, [sp, #52]	; 0x34
 8027470:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027472:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027476:	9d08      	ldr	r5, [sp, #32]
 8027478:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802747c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027480:	fb03 cc0e 	mla	ip, r3, lr, ip
 8027484:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027488:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802748a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802748e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027492:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027494:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027498:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802749c:	fb08 f80e 	mul.w	r8, r8, lr
 80274a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80274a4:	fb03 8202 	mla	r2, r3, r2, r8
 80274a8:	9b08      	ldr	r3, [sp, #32]
 80274aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80274ac:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80274b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80274b2:	fb01 220a 	mla	r2, r1, sl, r2
 80274b6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80274ba:	fb09 2901 	mla	r9, r9, r1, r2
 80274be:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80274c0:	883b      	ldrh	r3, [r7, #0]
 80274c2:	4342      	muls	r2, r0
 80274c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80274c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80274cc:	1c50      	adds	r0, r2, #1
 80274ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80274d2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80274d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80274da:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80274de:	1219      	asrs	r1, r3, #8
 80274e0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80274e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80274e8:	b2c0      	uxtb	r0, r0
 80274ea:	fb12 f205 	smulbb	r2, r2, r5
 80274ee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80274f2:	fb01 2100 	mla	r1, r1, r0, r2
 80274f6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80274fa:	10da      	asrs	r2, r3, #3
 80274fc:	fa5f fc8c 	uxtb.w	ip, ip
 8027500:	00db      	lsls	r3, r3, #3
 8027502:	fb1c fc05 	smulbb	ip, ip, r5
 8027506:	b2db      	uxtb	r3, r3
 8027508:	b289      	uxth	r1, r1
 802750a:	fb03 c300 	mla	r3, r3, r0, ip
 802750e:	fa1f fc83 	uxth.w	ip, r3
 8027512:	1c4b      	adds	r3, r1, #1
 8027514:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027518:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802751c:	fb1e fe05 	smulbb	lr, lr, r5
 8027520:	f10c 0301 	add.w	r3, ip, #1
 8027524:	fb02 e200 	mla	r2, r2, r0, lr
 8027528:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802752c:	b292      	uxth	r2, r2
 802752e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027532:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8027536:	430b      	orrs	r3, r1
 8027538:	1c51      	adds	r1, r2, #1
 802753a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802753e:	0952      	lsrs	r2, r2, #5
 8027540:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027544:	4313      	orrs	r3, r2
 8027546:	803b      	strh	r3, [r7, #0]
 8027548:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802754a:	441c      	add	r4, r3
 802754c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802754e:	441e      	add	r6, r3
 8027550:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027552:	3b01      	subs	r3, #1
 8027554:	3702      	adds	r7, #2
 8027556:	9318      	str	r3, [sp, #96]	; 0x60
 8027558:	e698      	b.n	802728c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802755a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802755c:	441c      	add	r4, r3
 802755e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8027560:	441e      	add	r6, r3
 8027562:	9b07      	ldr	r3, [sp, #28]
 8027564:	3b01      	subs	r3, #1
 8027566:	9307      	str	r3, [sp, #28]
 8027568:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802756a:	3302      	adds	r3, #2
 802756c:	930a      	str	r3, [sp, #40]	; 0x28
 802756e:	e66d      	b.n	802724c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8027570:	d023      	beq.n	80275ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8027572:	9b07      	ldr	r3, [sp, #28]
 8027574:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8027576:	3b01      	subs	r3, #1
 8027578:	fb00 4003 	mla	r0, r0, r3, r4
 802757c:	1400      	asrs	r0, r0, #16
 802757e:	f53f ae82 	bmi.w	8027286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027582:	3901      	subs	r1, #1
 8027584:	4288      	cmp	r0, r1
 8027586:	f6bf ae7e 	bge.w	8027286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802758a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802758c:	fb01 6303 	mla	r3, r1, r3, r6
 8027590:	141b      	asrs	r3, r3, #16
 8027592:	f53f ae78 	bmi.w	8027286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027596:	3a01      	subs	r2, #1
 8027598:	4293      	cmp	r3, r2
 802759a:	f6bf ae74 	bge.w	8027286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802759e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80275a2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80275a6:	f1bb 0f00 	cmp.w	fp, #0
 80275aa:	dc6c      	bgt.n	8027686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80275ac:	9b07      	ldr	r3, [sp, #28]
 80275ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80275b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80275b4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80275b8:	930a      	str	r3, [sp, #40]	; 0x28
 80275ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80275bc:	2b00      	cmp	r3, #0
 80275be:	f340 81b3 	ble.w	8027928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80275c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80275c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80275ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80275ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80275d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80275d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80275d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80275dc:	eef0 6a62 	vmov.f32	s13, s5
 80275e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80275e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80275e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80275ec:	ee16 4a90 	vmov	r4, s13
 80275f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80275f4:	eef0 6a43 	vmov.f32	s13, s6
 80275f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80275fc:	ee12 2a90 	vmov	r2, s5
 8027600:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027604:	fb92 f3f3 	sdiv	r3, r2, r3
 8027608:	ee13 2a10 	vmov	r2, s6
 802760c:	9329      	str	r3, [sp, #164]	; 0xa4
 802760e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027610:	fb92 f3f3 	sdiv	r3, r2, r3
 8027614:	932a      	str	r3, [sp, #168]	; 0xa8
 8027616:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027618:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802761a:	3b01      	subs	r3, #1
 802761c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027620:	9317      	str	r3, [sp, #92]	; 0x5c
 8027622:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027624:	bf08      	it	eq
 8027626:	4613      	moveq	r3, r2
 8027628:	ee16 6a90 	vmov	r6, s13
 802762c:	9307      	str	r3, [sp, #28]
 802762e:	eeb0 3a67 	vmov.f32	s6, s15
 8027632:	eef0 2a47 	vmov.f32	s5, s14
 8027636:	e5fb      	b.n	8027230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8027638:	2900      	cmp	r1, #0
 802763a:	f43f ae6b 	beq.w	8027314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802763e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027642:	9308      	str	r3, [sp, #32]
 8027644:	0e1b      	lsrs	r3, r3, #24
 8027646:	9311      	str	r3, [sp, #68]	; 0x44
 8027648:	e664      	b.n	8027314 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802764a:	f112 0801 	adds.w	r8, r2, #1
 802764e:	f53f af7b 	bmi.w	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027652:	4543      	cmp	r3, r8
 8027654:	f6ff af78 	blt.w	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027658:	f11c 0801 	adds.w	r8, ip, #1
 802765c:	f53f af74 	bmi.w	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027660:	45c6      	cmp	lr, r8
 8027662:	f6ff af71 	blt.w	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027666:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8027668:	9201      	str	r2, [sp, #4]
 802766a:	fa0f f28e 	sxth.w	r2, lr
 802766e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8027672:	e9cd c002 	strd	ip, r0, [sp, #8]
 8027676:	9200      	str	r2, [sp, #0]
 8027678:	b21b      	sxth	r3, r3
 802767a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802767c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802767e:	4639      	mov	r1, r7
 8027680:	f7ff fc79 	bl	8026f76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8027684:	e760      	b.n	8027548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8027686:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8027688:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802768a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802768e:	1427      	asrs	r7, r4, #16
 8027690:	1433      	asrs	r3, r6, #16
 8027692:	fb01 7303 	mla	r3, r1, r3, r7
 8027696:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802769a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802769e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80276a2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80276a6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80276aa:	2a00      	cmp	r2, #0
 80276ac:	f000 8133 	beq.w	8027916 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80276b0:	687d      	ldr	r5, [r7, #4]
 80276b2:	950e      	str	r5, [sp, #56]	; 0x38
 80276b4:	0e2d      	lsrs	r5, r5, #24
 80276b6:	9515      	str	r5, [sp, #84]	; 0x54
 80276b8:	b178      	cbz	r0, 80276da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80276ba:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80276be:	3901      	subs	r1, #1
 80276c0:	0089      	lsls	r1, r1, #2
 80276c2:	3104      	adds	r1, #4
 80276c4:	eb07 0e01 	add.w	lr, r7, r1
 80276c8:	5879      	ldr	r1, [r7, r1]
 80276ca:	9109      	str	r1, [sp, #36]	; 0x24
 80276cc:	0e09      	lsrs	r1, r1, #24
 80276ce:	9112      	str	r1, [sp, #72]	; 0x48
 80276d0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80276d4:	910f      	str	r1, [sp, #60]	; 0x3c
 80276d6:	0e09      	lsrs	r1, r1, #24
 80276d8:	9116      	str	r1, [sp, #88]	; 0x58
 80276da:	b292      	uxth	r2, r2
 80276dc:	b280      	uxth	r0, r0
 80276de:	fb02 f800 	mul.w	r8, r2, r0
 80276e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80276e6:	0112      	lsls	r2, r2, #4
 80276e8:	eba2 0e08 	sub.w	lr, r2, r8
 80276ec:	b280      	uxth	r0, r0
 80276ee:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80276f2:	9915      	ldr	r1, [sp, #84]	; 0x54
 80276f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80276f6:	fa1f fe8e 	uxth.w	lr, lr
 80276fa:	1a12      	subs	r2, r2, r0
 80276fc:	b292      	uxth	r2, r2
 80276fe:	fb0e f101 	mul.w	r1, lr, r1
 8027702:	fb02 110c 	mla	r1, r2, ip, r1
 8027706:	fb00 1105 	mla	r1, r0, r5, r1
 802770a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802770c:	fb08 1105 	mla	r1, r8, r5, r1
 8027710:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8027714:	2900      	cmp	r1, #0
 8027716:	f000 80f5 	beq.w	8027904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802771a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802771e:	d019      	beq.n	8027754 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8027720:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8027724:	fb0c fa0a 	mul.w	sl, ip, sl
 8027728:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802772c:	fb0c fc03 	mul.w	ip, ip, r3
 8027730:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8027734:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027738:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802773c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8027740:	4453      	add	r3, sl
 8027742:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8027746:	0a1b      	lsrs	r3, r3, #8
 8027748:	0a3f      	lsrs	r7, r7, #8
 802774a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802774e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8027752:	433b      	orrs	r3, r7
 8027754:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027756:	2dff      	cmp	r5, #255	; 0xff
 8027758:	d020      	beq.n	802779c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802775a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802775c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027760:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8027762:	436f      	muls	r7, r5
 8027764:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027766:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802776a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802776c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027770:	fb05 fa0a 	mul.w	sl, r5, sl
 8027774:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027778:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802777c:	44bc      	add	ip, r7
 802777e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027782:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027786:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802778a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802778e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027792:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027796:	ea4c 050a 	orr.w	r5, ip, sl
 802779a:	950e      	str	r5, [sp, #56]	; 0x38
 802779c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802779e:	2dff      	cmp	r5, #255	; 0xff
 80277a0:	d020      	beq.n	80277e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80277a2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80277a4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80277a8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277aa:	436f      	muls	r7, r5
 80277ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80277ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80277b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80277b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80277b8:	fb05 fa0a 	mul.w	sl, r5, sl
 80277bc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80277c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277c4:	44bc      	add	ip, r7
 80277c6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80277ca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80277ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80277d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80277d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80277da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80277de:	ea4c 050a 	orr.w	r5, ip, sl
 80277e2:	9509      	str	r5, [sp, #36]	; 0x24
 80277e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277e6:	2dff      	cmp	r5, #255	; 0xff
 80277e8:	d020      	beq.n	802782c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80277ea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80277ec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80277f0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277f2:	436f      	muls	r7, r5
 80277f4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80277f6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80277fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80277fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8027800:	fb05 fa0a 	mul.w	sl, r5, sl
 8027804:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8027808:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802780c:	44bc      	add	ip, r7
 802780e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8027812:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8027816:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802781a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802781e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027822:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027826:	ea4c 050a 	orr.w	r5, ip, sl
 802782a:	950f      	str	r5, [sp, #60]	; 0x3c
 802782c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802782e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8027832:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8027834:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8027838:	fb0e f707 	mul.w	r7, lr, r7
 802783c:	fb02 770c 	mla	r7, r2, ip, r7
 8027840:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027844:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027846:	fb00 770c 	mla	r7, r0, ip, r7
 802784a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802784e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027850:	fb08 770c 	mla	r7, r8, ip, r7
 8027854:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8027858:	fb0e fe0c 	mul.w	lr, lr, ip
 802785c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027860:	fb02 e303 	mla	r3, r2, r3, lr
 8027864:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027866:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027868:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802786c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802786e:	fb00 330a 	mla	r3, r0, sl, r3
 8027872:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8027876:	fb08 3c0c 	mla	ip, r8, ip, r3
 802787a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802787c:	f8b9 0000 	ldrh.w	r0, [r9]
 8027880:	4359      	muls	r1, r3
 8027882:	0a3f      	lsrs	r7, r7, #8
 8027884:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027888:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802788c:	1c4b      	adds	r3, r1, #1
 802788e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8027892:	ea47 070c 	orr.w	r7, r7, ip
 8027896:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802789a:	1202      	asrs	r2, r0, #8
 802789c:	0c3b      	lsrs	r3, r7, #16
 802789e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80278a2:	b2c9      	uxtb	r1, r1
 80278a4:	fb13 f305 	smulbb	r3, r3, r5
 80278a8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80278ac:	fb02 3201 	mla	r2, r2, r1, r3
 80278b0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80278b4:	10c3      	asrs	r3, r0, #3
 80278b6:	b2ff      	uxtb	r7, r7
 80278b8:	00c0      	lsls	r0, r0, #3
 80278ba:	b2c0      	uxtb	r0, r0
 80278bc:	fb17 f705 	smulbb	r7, r7, r5
 80278c0:	fb00 7001 	mla	r0, r0, r1, r7
 80278c4:	b292      	uxth	r2, r2
 80278c6:	fb1c fc05 	smulbb	ip, ip, r5
 80278ca:	b280      	uxth	r0, r0
 80278cc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80278d0:	fb03 c301 	mla	r3, r3, r1, ip
 80278d4:	1c51      	adds	r1, r2, #1
 80278d6:	f100 0c01 	add.w	ip, r0, #1
 80278da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80278de:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80278e2:	b29b      	uxth	r3, r3
 80278e4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80278e8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80278ec:	ea4c 0202 	orr.w	r2, ip, r2
 80278f0:	f103 0c01 	add.w	ip, r3, #1
 80278f4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80278f8:	095b      	lsrs	r3, r3, #5
 80278fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80278fe:	431a      	orrs	r2, r3
 8027900:	f8a9 2000 	strh.w	r2, [r9]
 8027904:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027906:	441c      	add	r4, r3
 8027908:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802790a:	f109 0902 	add.w	r9, r9, #2
 802790e:	441e      	add	r6, r3
 8027910:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027914:	e647      	b.n	80275a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8027916:	2800      	cmp	r0, #0
 8027918:	f43f aedf 	beq.w	80276da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802791c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8027920:	9109      	str	r1, [sp, #36]	; 0x24
 8027922:	0e09      	lsrs	r1, r1, #24
 8027924:	9112      	str	r1, [sp, #72]	; 0x48
 8027926:	e6d8      	b.n	80276da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8027928:	b01d      	add	sp, #116	; 0x74
 802792a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802792e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802792e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027932:	b085      	sub	sp, #20
 8027934:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8027938:	9102      	str	r1, [sp, #8]
 802793a:	2c00      	cmp	r4, #0
 802793c:	fb04 7103 	mla	r1, r4, r3, r7
 8027940:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027944:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027948:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802794c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8027950:	f2c0 810c 	blt.w	8027b6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8027954:	45a6      	cmp	lr, r4
 8027956:	f340 8109 	ble.w	8027b6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802795a:	2f00      	cmp	r7, #0
 802795c:	f2c0 8104 	blt.w	8027b68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027960:	42bb      	cmp	r3, r7
 8027962:	f340 8101 	ble.w	8027b68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8027966:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802796a:	1c7a      	adds	r2, r7, #1
 802796c:	f100 8101 	bmi.w	8027b72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027970:	4293      	cmp	r3, r2
 8027972:	f340 80fe 	ble.w	8027b72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8027976:	2e00      	cmp	r6, #0
 8027978:	f000 80fd 	beq.w	8027b76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802797c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8027980:	3401      	adds	r4, #1
 8027982:	f100 80fc 	bmi.w	8027b7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8027986:	45a6      	cmp	lr, r4
 8027988:	f340 80f9 	ble.w	8027b7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802798c:	2800      	cmp	r0, #0
 802798e:	f000 80f9 	beq.w	8027b84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8027992:	2f00      	cmp	r7, #0
 8027994:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8027998:	f2c0 80ef 	blt.w	8027b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802799c:	42bb      	cmp	r3, r7
 802799e:	f340 80ec 	ble.w	8027b7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80279a2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80279a6:	3701      	adds	r7, #1
 80279a8:	f100 80ef 	bmi.w	8027b8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80279ac:	42bb      	cmp	r3, r7
 80279ae:	f340 80ec 	ble.w	8027b8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80279b2:	2e00      	cmp	r6, #0
 80279b4:	f000 80eb 	beq.w	8027b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80279b8:	6852      	ldr	r2, [r2, #4]
 80279ba:	b2b6      	uxth	r6, r6
 80279bc:	b280      	uxth	r0, r0
 80279be:	fb00 fe06 	mul.w	lr, r0, r6
 80279c2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80279c6:	0136      	lsls	r6, r6, #4
 80279c8:	eba6 070e 	sub.w	r7, r6, lr
 80279cc:	b280      	uxth	r0, r0
 80279ce:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80279d2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80279d6:	b2bf      	uxth	r7, r7
 80279d8:	1a1b      	subs	r3, r3, r0
 80279da:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80279de:	b29b      	uxth	r3, r3
 80279e0:	fb07 f60a 	mul.w	r6, r7, sl
 80279e4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80279e8:	fb0b 6603 	mla	r6, fp, r3, r6
 80279ec:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80279f0:	fb00 6609 	mla	r6, r0, r9, r6
 80279f4:	fb0e 6608 	mla	r6, lr, r8, r6
 80279f8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80279fc:	9600      	str	r6, [sp, #0]
 80279fe:	2e00      	cmp	r6, #0
 8027a00:	f000 80af 	beq.w	8027b62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8027a04:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027a08:	fb0b fc0c 	mul.w	ip, fp, ip
 8027a0c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8027a10:	fb0b f505 	mul.w	r5, fp, r5
 8027a14:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8027a18:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8027a1c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a20:	44dc      	add	ip, fp
 8027a22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027a26:	9501      	str	r5, [sp, #4]
 8027a28:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8027a2c:	9503      	str	r5, [sp, #12]
 8027a2e:	9d01      	ldr	r5, [sp, #4]
 8027a30:	9e02      	ldr	r6, [sp, #8]
 8027a32:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8027a36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8027a3a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8027a3e:	fb0a fc0c 	mul.w	ip, sl, ip
 8027a42:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8027a46:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8027a4a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027a4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027a52:	4465      	add	r5, ip
 8027a54:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8027a58:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027a5c:	fb09 fc0c 	mul.w	ip, r9, ip
 8027a60:	fb09 f904 	mul.w	r9, r9, r4
 8027a64:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8027a68:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8027a6c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8027a70:	fb08 f404 	mul.w	r4, r8, r4
 8027a74:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027a78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027a7c:	fb08 f802 	mul.w	r8, r8, r2
 8027a80:	fb0a fa01 	mul.w	sl, sl, r1
 8027a84:	0a22      	lsrs	r2, r4, #8
 8027a86:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8027a8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027a8e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8027a92:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8027a96:	4414      	add	r4, r2
 8027a98:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8027a9c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8027aa0:	0a2d      	lsrs	r5, r5, #8
 8027aa2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8027aa6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8027aaa:	9a03      	ldr	r2, [sp, #12]
 8027aac:	8836      	ldrh	r6, [r6, #0]
 8027aae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027ab2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8027ab6:	437d      	muls	r5, r7
 8027ab8:	4461      	add	r1, ip
 8027aba:	0a24      	lsrs	r4, r4, #8
 8027abc:	fb02 5503 	mla	r5, r2, r3, r5
 8027ac0:	0a09      	lsrs	r1, r1, #8
 8027ac2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027ac6:	fb04 540e 	mla	r4, r4, lr, r5
 8027aca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8027ace:	fb01 4100 	mla	r1, r1, r0, r4
 8027ad2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027ad6:	0a09      	lsrs	r1, r1, #8
 8027ad8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027adc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8027ae0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8027ae4:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8027ae8:	fb07 f70a 	mul.w	r7, r7, sl
 8027aec:	fb03 7101 	mla	r1, r3, r1, r7
 8027af0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027af4:	9b00      	ldr	r3, [sp, #0]
 8027af6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8027afa:	fb0e 1e08 	mla	lr, lr, r8, r1
 8027afe:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8027b02:	fb00 e101 	mla	r1, r0, r1, lr
 8027b06:	43da      	mvns	r2, r3
 8027b08:	1233      	asrs	r3, r6, #8
 8027b0a:	b2d2      	uxtb	r2, r2
 8027b0c:	10f0      	asrs	r0, r6, #3
 8027b0e:	0a09      	lsrs	r1, r1, #8
 8027b10:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8027b14:	00f6      	lsls	r6, r6, #3
 8027b16:	4353      	muls	r3, r2
 8027b18:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8027b1c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027b20:	b2f6      	uxtb	r6, r6
 8027b22:	4321      	orrs	r1, r4
 8027b24:	4350      	muls	r0, r2
 8027b26:	4356      	muls	r6, r2
 8027b28:	1c5a      	adds	r2, r3, #1
 8027b2a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027b2e:	0c0b      	lsrs	r3, r1, #16
 8027b30:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027b34:	1c42      	adds	r2, r0, #1
 8027b36:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027b3a:	0a0a      	lsrs	r2, r1, #8
 8027b3c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027b40:	021b      	lsls	r3, r3, #8
 8027b42:	00d2      	lsls	r2, r2, #3
 8027b44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b48:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8027b4c:	4313      	orrs	r3, r2
 8027b4e:	1c72      	adds	r2, r6, #1
 8027b50:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8027b54:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8027b58:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027b5c:	4319      	orrs	r1, r3
 8027b5e:	9b02      	ldr	r3, [sp, #8]
 8027b60:	8019      	strh	r1, [r3, #0]
 8027b62:	b005      	add	sp, #20
 8027b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027b68:	2500      	movs	r5, #0
 8027b6a:	e6fe      	b.n	802796a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8027b6c:	2100      	movs	r1, #0
 8027b6e:	460d      	mov	r5, r1
 8027b70:	e706      	b.n	8027980 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b72:	2100      	movs	r1, #0
 8027b74:	e704      	b.n	8027980 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b76:	4631      	mov	r1, r6
 8027b78:	e702      	b.n	8027980 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8027b7a:	2400      	movs	r4, #0
 8027b7c:	e713      	b.n	80279a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8027b7e:	2200      	movs	r2, #0
 8027b80:	4614      	mov	r4, r2
 8027b82:	e71a      	b.n	80279ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b84:	4602      	mov	r2, r0
 8027b86:	4604      	mov	r4, r0
 8027b88:	e717      	b.n	80279ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b8a:	2200      	movs	r2, #0
 8027b8c:	e715      	b.n	80279ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8027b8e:	4632      	mov	r2, r6
 8027b90:	e713      	b.n	80279ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08027b94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b98:	b09b      	sub	sp, #108	; 0x6c
 8027b9a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027b9e:	9218      	str	r2, [sp, #96]	; 0x60
 8027ba0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8027ba2:	9116      	str	r1, [sp, #88]	; 0x58
 8027ba4:	9307      	str	r3, [sp, #28]
 8027ba6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8027baa:	9019      	str	r0, [sp, #100]	; 0x64
 8027bac:	6850      	ldr	r0, [r2, #4]
 8027bae:	6812      	ldr	r2, [r2, #0]
 8027bb0:	fb00 1303 	mla	r3, r0, r3, r1
 8027bb4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027bb8:	930a      	str	r3, [sp, #40]	; 0x28
 8027bba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027bbc:	681b      	ldr	r3, [r3, #0]
 8027bbe:	930f      	str	r3, [sp, #60]	; 0x3c
 8027bc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027bc2:	2b00      	cmp	r3, #0
 8027bc4:	dc03      	bgt.n	8027bce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8027bc6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027bc8:	2b00      	cmp	r3, #0
 8027bca:	f340 8386 	ble.w	80282da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027bce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027bd0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027bd4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027bd8:	1e48      	subs	r0, r1, #1
 8027bda:	1e57      	subs	r7, r2, #1
 8027bdc:	9b07      	ldr	r3, [sp, #28]
 8027bde:	2b00      	cmp	r3, #0
 8027be0:	f340 8166 	ble.w	8027eb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8027be4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8027be8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027bec:	d406      	bmi.n	8027bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bee:	4584      	cmp	ip, r0
 8027bf0:	da04      	bge.n	8027bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bf2:	2b00      	cmp	r3, #0
 8027bf4:	db02      	blt.n	8027bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8027bf6:	42bb      	cmp	r3, r7
 8027bf8:	f2c0 815b 	blt.w	8027eb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8027bfc:	f11c 0c01 	adds.w	ip, ip, #1
 8027c00:	f100 814b 	bmi.w	8027e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c04:	4561      	cmp	r1, ip
 8027c06:	f2c0 8148 	blt.w	8027e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c0a:	3301      	adds	r3, #1
 8027c0c:	f100 8145 	bmi.w	8027e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c10:	429a      	cmp	r2, r3
 8027c12:	f2c0 8142 	blt.w	8027e9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8027c16:	9b07      	ldr	r3, [sp, #28]
 8027c18:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8027c1a:	9317      	str	r3, [sp, #92]	; 0x5c
 8027c1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027c1e:	2b00      	cmp	r3, #0
 8027c20:	f340 8165 	ble.w	8027eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8027c24:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8027c26:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027c28:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027c2c:	689b      	ldr	r3, [r3, #8]
 8027c2e:	1422      	asrs	r2, r4, #16
 8027c30:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8027c34:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8027c38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027c3c:	f100 81d5 	bmi.w	8027fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c40:	f103 38ff 	add.w	r8, r3, #4294967295
 8027c44:	4542      	cmp	r2, r8
 8027c46:	f280 81d0 	bge.w	8027fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c4a:	f1bc 0f00 	cmp.w	ip, #0
 8027c4e:	f2c0 81cc 	blt.w	8027fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c52:	f10e 38ff 	add.w	r8, lr, #4294967295
 8027c56:	45c4      	cmp	ip, r8
 8027c58:	f280 81c7 	bge.w	8027fea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8027c5c:	b21b      	sxth	r3, r3
 8027c5e:	fb0c 2203 	mla	r2, ip, r3, r2
 8027c62:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8027c64:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8027c68:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8027c6c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8027c70:	2900      	cmp	r1, #0
 8027c72:	f000 8182 	beq.w	8027f7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8027c76:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8027c7a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027c7c:	0e2d      	lsrs	r5, r5, #24
 8027c7e:	9512      	str	r5, [sp, #72]	; 0x48
 8027c80:	b180      	cbz	r0, 8027ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027c82:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8027c86:	3b01      	subs	r3, #1
 8027c88:	009b      	lsls	r3, r3, #2
 8027c8a:	3304      	adds	r3, #4
 8027c8c:	eb08 0c03 	add.w	ip, r8, r3
 8027c90:	f858 3003 	ldr.w	r3, [r8, r3]
 8027c94:	9308      	str	r3, [sp, #32]
 8027c96:	0e1b      	lsrs	r3, r3, #24
 8027c98:	9310      	str	r3, [sp, #64]	; 0x40
 8027c9a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8027c9e:	930c      	str	r3, [sp, #48]	; 0x30
 8027ca0:	0e1b      	lsrs	r3, r3, #24
 8027ca2:	9313      	str	r3, [sp, #76]	; 0x4c
 8027ca4:	b289      	uxth	r1, r1
 8027ca6:	b280      	uxth	r0, r0
 8027ca8:	fb01 f900 	mul.w	r9, r1, r0
 8027cac:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8027cb0:	0109      	lsls	r1, r1, #4
 8027cb2:	eba1 0809 	sub.w	r8, r1, r9
 8027cb6:	b280      	uxth	r0, r0
 8027cb8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8027cbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8027cbe:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027cc0:	fa1f f888 	uxth.w	r8, r8
 8027cc4:	1a09      	subs	r1, r1, r0
 8027cc6:	b289      	uxth	r1, r1
 8027cc8:	fb08 f303 	mul.w	r3, r8, r3
 8027ccc:	fb01 330e 	mla	r3, r1, lr, r3
 8027cd0:	fb00 3305 	mla	r3, r0, r5, r3
 8027cd4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027cd6:	fb09 3305 	mla	r3, r9, r5, r3
 8027cda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8027cde:	2b00      	cmp	r3, #0
 8027ce0:	f000 80d2 	beq.w	8027e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027ce4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8027ce8:	d01b      	beq.n	8027d22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8027cea:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8027cee:	fb0e fa0a 	mul.w	sl, lr, sl
 8027cf2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027cf6:	fb0e fe02 	mul.w	lr, lr, r2
 8027cfa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8027cfe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d02:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027d06:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8027d0a:	4452      	add	r2, sl
 8027d0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8027d10:	0a12      	lsrs	r2, r2, #8
 8027d12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027d16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027d1a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8027d1e:	ea42 020c 	orr.w	r2, r2, ip
 8027d22:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d24:	2dff      	cmp	r5, #255	; 0xff
 8027d26:	d021      	beq.n	8027d6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027d28:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d2a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d30:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d34:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027d36:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027d3a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8027d3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d40:	fb05 fa0a 	mul.w	sl, r5, sl
 8027d44:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d48:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027d4c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027d50:	44de      	add	lr, fp
 8027d52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027d56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027d5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027d5e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027d66:	ea4e 050a 	orr.w	r5, lr, sl
 8027d6a:	950b      	str	r5, [sp, #44]	; 0x2c
 8027d6c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d6e:	2dff      	cmp	r5, #255	; 0xff
 8027d70:	d021      	beq.n	8027db6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8027d72:	9d08      	ldr	r5, [sp, #32]
 8027d74:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027d78:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d7a:	fb05 fb0b 	mul.w	fp, r5, fp
 8027d7e:	9d08      	ldr	r5, [sp, #32]
 8027d80:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027d84:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027d86:	fb05 fa0e 	mul.w	sl, r5, lr
 8027d8a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027d8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027d92:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027d96:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027d9a:	44de      	add	lr, fp
 8027d9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027da0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027da4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027da8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027dac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027db0:	ea4e 050a 	orr.w	r5, lr, sl
 8027db4:	9508      	str	r5, [sp, #32]
 8027db6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027db8:	2dff      	cmp	r5, #255	; 0xff
 8027dba:	d021      	beq.n	8027e00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027dbc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dbe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8027dc2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027dc4:	fb05 fb0b 	mul.w	fp, r5, fp
 8027dc8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027dca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8027dce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8027dd0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8027dd4:	fb05 fa0a 	mul.w	sl, r5, sl
 8027dd8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027ddc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027de0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8027de4:	44de      	add	lr, fp
 8027de6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8027dea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8027dee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8027df2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8027df6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8027dfa:	ea4e 050a 	orr.w	r5, lr, sl
 8027dfe:	950c      	str	r5, [sp, #48]	; 0x30
 8027e00:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e02:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8027e06:	9d08      	ldr	r5, [sp, #32]
 8027e08:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8027e0c:	fb08 fc0c 	mul.w	ip, r8, ip
 8027e10:	fb01 cc0e 	mla	ip, r1, lr, ip
 8027e14:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e18:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027e1a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8027e1e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8027e22:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8027e24:	fb09 cc0e 	mla	ip, r9, lr, ip
 8027e28:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8027e2c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027e30:	fb08 f80e 	mul.w	r8, r8, lr
 8027e34:	fb01 8202 	mla	r2, r1, r2, r8
 8027e38:	9908      	ldr	r1, [sp, #32]
 8027e3a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8027e3e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027e40:	fb00 220a 	mla	r2, r0, sl, r2
 8027e44:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8027e48:	fb09 2900 	mla	r9, r9, r0, r2
 8027e4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027e50:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8027e54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8027e58:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8027e5c:	ea4c 0c09 	orr.w	ip, ip, r9
 8027e60:	2bff      	cmp	r3, #255	; 0xff
 8027e62:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8027e66:	f040 8091 	bne.w	8027f8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8027e6a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8027e6e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8027e72:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027e76:	f022 0207 	bic.w	r2, r2, #7
 8027e7a:	431a      	orrs	r2, r3
 8027e7c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8027e80:	ea4c 0c02 	orr.w	ip, ip, r2
 8027e84:	f8a7 c000 	strh.w	ip, [r7]
 8027e88:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027e8a:	441c      	add	r4, r3
 8027e8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027e8e:	441e      	add	r6, r3
 8027e90:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8027e92:	3b01      	subs	r3, #1
 8027e94:	3702      	adds	r7, #2
 8027e96:	9317      	str	r3, [sp, #92]	; 0x5c
 8027e98:	e6c0      	b.n	8027c1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8027e9a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027e9c:	441c      	add	r4, r3
 8027e9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027ea0:	441e      	add	r6, r3
 8027ea2:	9b07      	ldr	r3, [sp, #28]
 8027ea4:	3b01      	subs	r3, #1
 8027ea6:	9307      	str	r3, [sp, #28]
 8027ea8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027eaa:	3302      	adds	r3, #2
 8027eac:	930a      	str	r3, [sp, #40]	; 0x28
 8027eae:	e695      	b.n	8027bdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8027eb0:	d024      	beq.n	8027efc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8027eb2:	9b07      	ldr	r3, [sp, #28]
 8027eb4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8027eb6:	3b01      	subs	r3, #1
 8027eb8:	fb00 4003 	mla	r0, r0, r3, r4
 8027ebc:	1400      	asrs	r0, r0, #16
 8027ebe:	f53f aeaa 	bmi.w	8027c16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ec2:	3901      	subs	r1, #1
 8027ec4:	4288      	cmp	r0, r1
 8027ec6:	f6bf aea6 	bge.w	8027c16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027eca:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027ecc:	fb01 6303 	mla	r3, r1, r3, r6
 8027ed0:	141b      	asrs	r3, r3, #16
 8027ed2:	f53f aea0 	bmi.w	8027c16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ed6:	3a01      	subs	r2, #1
 8027ed8:	4293      	cmp	r3, r2
 8027eda:	f6bf ae9c 	bge.w	8027c16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8027ede:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8027ee2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8027ee6:	f1bb 0f00 	cmp.w	fp, #0
 8027eea:	f300 809a 	bgt.w	8028022 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8027eee:	9b07      	ldr	r3, [sp, #28]
 8027ef0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8027ef4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027ef6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8027efa:	930a      	str	r3, [sp, #40]	; 0x28
 8027efc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027efe:	2b00      	cmp	r3, #0
 8027f00:	f340 81eb 	ble.w	80282da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8027f04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027f08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027f0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027f10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027f16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027f1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027f1e:	eef0 6a62 	vmov.f32	s13, s5
 8027f22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027f26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027f2e:	ee16 4a90 	vmov	r4, s13
 8027f32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027f36:	eef0 6a43 	vmov.f32	s13, s6
 8027f3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027f3e:	ee12 2a90 	vmov	r2, s5
 8027f42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027f46:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f4a:	ee13 2a10 	vmov	r2, s6
 8027f4e:	9327      	str	r3, [sp, #156]	; 0x9c
 8027f50:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8027f56:	9328      	str	r3, [sp, #160]	; 0xa0
 8027f58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027f5a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8027f5c:	3b01      	subs	r3, #1
 8027f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027f62:	9316      	str	r3, [sp, #88]	; 0x58
 8027f64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027f66:	bf08      	it	eq
 8027f68:	4613      	moveq	r3, r2
 8027f6a:	ee16 6a90 	vmov	r6, s13
 8027f6e:	9307      	str	r3, [sp, #28]
 8027f70:	eeb0 3a67 	vmov.f32	s6, s15
 8027f74:	eef0 2a47 	vmov.f32	s5, s14
 8027f78:	e622      	b.n	8027bc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8027f7a:	2800      	cmp	r0, #0
 8027f7c:	f43f ae92 	beq.w	8027ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f80:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8027f84:	9308      	str	r3, [sp, #32]
 8027f86:	0e1b      	lsrs	r3, r3, #24
 8027f88:	9310      	str	r3, [sp, #64]	; 0x40
 8027f8a:	e68b      	b.n	8027ca4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8027f8c:	8839      	ldrh	r1, [r7, #0]
 8027f8e:	4dd4      	ldr	r5, [pc, #848]	; (80282e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8027f90:	43db      	mvns	r3, r3
 8027f92:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8027f96:	fa5f f883 	uxtb.w	r8, r3
 8027f9a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8027f9e:	fb0e fe08 	mul.w	lr, lr, r8
 8027fa2:	10c8      	asrs	r0, r1, #3
 8027fa4:	00cb      	lsls	r3, r1, #3
 8027fa6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027faa:	f10e 0101 	add.w	r1, lr, #1
 8027fae:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8027fb2:	fb00 f008 	mul.w	r0, r0, r8
 8027fb6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8027fba:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8027fbe:	f100 0e01 	add.w	lr, r0, #1
 8027fc2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8027fc6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8027fca:	b2db      	uxtb	r3, r3
 8027fcc:	b2c9      	uxtb	r1, r1
 8027fce:	00d2      	lsls	r2, r2, #3
 8027fd0:	fb03 f308 	mul.w	r3, r3, r8
 8027fd4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8027fd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027fdc:	430a      	orrs	r2, r1
 8027fde:	1c59      	adds	r1, r3, #1
 8027fe0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8027fe4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8027fe8:	e748      	b.n	8027e7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8027fea:	f112 0801 	adds.w	r8, r2, #1
 8027fee:	f53f af4b 	bmi.w	8027e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027ff2:	4543      	cmp	r3, r8
 8027ff4:	f6ff af48 	blt.w	8027e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8027ff8:	f11c 0801 	adds.w	r8, ip, #1
 8027ffc:	f53f af44 	bmi.w	8027e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028000:	45c6      	cmp	lr, r8
 8028002:	f6ff af41 	blt.w	8027e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028006:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802800a:	fa0f f28e 	sxth.w	r2, lr
 802800e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8028012:	9200      	str	r2, [sp, #0]
 8028014:	b21b      	sxth	r3, r3
 8028016:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028018:	9819      	ldr	r0, [sp, #100]	; 0x64
 802801a:	4639      	mov	r1, r7
 802801c:	f7ff fc87 	bl	802792e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028020:	e732      	b.n	8027e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8028022:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028024:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028026:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802802a:	1421      	asrs	r1, r4, #16
 802802c:	1433      	asrs	r3, r6, #16
 802802e:	fb07 1303 	mla	r3, r7, r3, r1
 8028032:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028034:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028038:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802803c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028040:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028044:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028048:	2a00      	cmp	r2, #0
 802804a:	f000 8107 	beq.w	802825c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802804e:	684d      	ldr	r5, [r1, #4]
 8028050:	950d      	str	r5, [sp, #52]	; 0x34
 8028052:	0e2d      	lsrs	r5, r5, #24
 8028054:	9514      	str	r5, [sp, #80]	; 0x50
 8028056:	b178      	cbz	r0, 8028078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028058:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802805c:	3f01      	subs	r7, #1
 802805e:	00bf      	lsls	r7, r7, #2
 8028060:	3704      	adds	r7, #4
 8028062:	eb01 0e07 	add.w	lr, r1, r7
 8028066:	59c9      	ldr	r1, [r1, r7]
 8028068:	9109      	str	r1, [sp, #36]	; 0x24
 802806a:	0e09      	lsrs	r1, r1, #24
 802806c:	9111      	str	r1, [sp, #68]	; 0x44
 802806e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8028072:	910e      	str	r1, [sp, #56]	; 0x38
 8028074:	0e09      	lsrs	r1, r1, #24
 8028076:	9115      	str	r1, [sp, #84]	; 0x54
 8028078:	b292      	uxth	r2, r2
 802807a:	b280      	uxth	r0, r0
 802807c:	fb02 f900 	mul.w	r9, r2, r0
 8028080:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028084:	0112      	lsls	r2, r2, #4
 8028086:	eba2 0e09 	sub.w	lr, r2, r9
 802808a:	b280      	uxth	r0, r0
 802808c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8028090:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028092:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028094:	fa1f fe8e 	uxth.w	lr, lr
 8028098:	1a09      	subs	r1, r1, r0
 802809a:	b289      	uxth	r1, r1
 802809c:	fb0e f202 	mul.w	r2, lr, r2
 80280a0:	fb01 220c 	mla	r2, r1, ip, r2
 80280a4:	fb00 2205 	mla	r2, r0, r5, r2
 80280a8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80280aa:	fb09 2205 	mla	r2, r9, r5, r2
 80280ae:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80280b2:	2a00      	cmp	r2, #0
 80280b4:	f000 80c9 	beq.w	802824a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80280b8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80280bc:	d019      	beq.n	80280f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80280be:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80280c2:	fb0c fa0a 	mul.w	sl, ip, sl
 80280c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80280ca:	fb0c fc03 	mul.w	ip, ip, r3
 80280ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80280d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280d6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80280da:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80280de:	4453      	add	r3, sl
 80280e0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80280e4:	0a1b      	lsrs	r3, r3, #8
 80280e6:	0a3f      	lsrs	r7, r7, #8
 80280e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80280ec:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80280f0:	433b      	orrs	r3, r7
 80280f2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80280f4:	2dff      	cmp	r5, #255	; 0xff
 80280f6:	d020      	beq.n	802813a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80280f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80280fa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80280fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028100:	436f      	muls	r7, r5
 8028102:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8028104:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028108:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802810a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802810e:	fb05 fa0a 	mul.w	sl, r5, sl
 8028112:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028116:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802811a:	44bc      	add	ip, r7
 802811c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028120:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028124:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028128:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802812c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028130:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028134:	ea4c 050a 	orr.w	r5, ip, sl
 8028138:	950d      	str	r5, [sp, #52]	; 0x34
 802813a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802813c:	2dff      	cmp	r5, #255	; 0xff
 802813e:	d020      	beq.n	8028182 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8028140:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028142:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028146:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028148:	436f      	muls	r7, r5
 802814a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802814c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028150:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028152:	fb05 fa0c 	mul.w	sl, r5, ip
 8028156:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802815a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802815e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028162:	44bc      	add	ip, r7
 8028164:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028168:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802816c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028170:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028174:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028178:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802817c:	ea4c 050a 	orr.w	r5, ip, sl
 8028180:	9509      	str	r5, [sp, #36]	; 0x24
 8028182:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028184:	2dff      	cmp	r5, #255	; 0xff
 8028186:	d020      	beq.n	80281ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8028188:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802818a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802818e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028190:	436f      	muls	r7, r5
 8028192:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028194:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028198:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802819a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802819e:	fb05 fa0a 	mul.w	sl, r5, sl
 80281a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80281a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281aa:	44bc      	add	ip, r7
 80281ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80281b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80281b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80281b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80281bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80281c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80281c4:	ea4c 050a 	orr.w	r5, ip, sl
 80281c8:	950e      	str	r5, [sp, #56]	; 0x38
 80281ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281cc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80281d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80281d2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80281d6:	fb0e f707 	mul.w	r7, lr, r7
 80281da:	fb01 770c 	mla	r7, r1, ip, r7
 80281de:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80281e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80281e4:	fb00 770c 	mla	r7, r0, ip, r7
 80281e8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80281ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80281ee:	fb09 770c 	mla	r7, r9, ip, r7
 80281f2:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80281f6:	fb0e fe0c 	mul.w	lr, lr, ip
 80281fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80281fe:	fb01 e303 	mla	r3, r1, r3, lr
 8028202:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028204:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028208:	990e      	ldr	r1, [sp, #56]	; 0x38
 802820a:	fb00 330a 	mla	r3, r0, sl, r3
 802820e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8028212:	fb09 3c0c 	mla	ip, r9, ip, r3
 8028216:	0a3f      	lsrs	r7, r7, #8
 8028218:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802821c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028220:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028224:	ea47 070c 	orr.w	r7, r7, ip
 8028228:	2aff      	cmp	r2, #255	; 0xff
 802822a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802822e:	d11e      	bne.n	802826e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8028230:	097a      	lsrs	r2, r7, #5
 8028232:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8028236:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802823a:	f023 0307 	bic.w	r3, r3, #7
 802823e:	4313      	orrs	r3, r2
 8028240:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8028244:	431f      	orrs	r7, r3
 8028246:	f8a8 7000 	strh.w	r7, [r8]
 802824a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802824c:	441c      	add	r4, r3
 802824e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028250:	f108 0802 	add.w	r8, r8, #2
 8028254:	441e      	add	r6, r3
 8028256:	f10b 3bff 	add.w	fp, fp, #4294967295
 802825a:	e644      	b.n	8027ee6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802825c:	2800      	cmp	r0, #0
 802825e:	f43f af0b 	beq.w	8028078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8028262:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8028266:	9109      	str	r1, [sp, #36]	; 0x24
 8028268:	0e09      	lsrs	r1, r1, #24
 802826a:	9111      	str	r1, [sp, #68]	; 0x44
 802826c:	e704      	b.n	8028078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802826e:	f8b8 1000 	ldrh.w	r1, [r8]
 8028272:	43d2      	mvns	r2, r2
 8028274:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8028278:	fa5f fe82 	uxtb.w	lr, r2
 802827c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8028280:	fb0c fc0e 	mul.w	ip, ip, lr
 8028284:	10c8      	asrs	r0, r1, #3
 8028286:	00ca      	lsls	r2, r1, #3
 8028288:	f10c 0101 	add.w	r1, ip, #1
 802828c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028290:	0c39      	lsrs	r1, r7, #16
 8028292:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8028296:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802829a:	4911      	ldr	r1, [pc, #68]	; (80282e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802829c:	fb00 f00e 	mul.w	r0, r0, lr
 80282a0:	fa5f fc8c 	uxtb.w	ip, ip
 80282a4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80282a8:	b2d2      	uxtb	r2, r2
 80282aa:	1c41      	adds	r1, r0, #1
 80282ac:	fb02 f20e 	mul.w	r2, r2, lr
 80282b0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80282b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80282b8:	1c51      	adds	r1, r2, #1
 80282ba:	00c0      	lsls	r0, r0, #3
 80282bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80282c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80282c4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80282c8:	ea4c 0c00 	orr.w	ip, ip, r0
 80282cc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80282d0:	ea47 0c0c 	orr.w	ip, r7, ip
 80282d4:	f8a8 c000 	strh.w	ip, [r8]
 80282d8:	e7b7      	b.n	802824a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80282da:	b01b      	add	sp, #108	; 0x6c
 80282dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282e0:	fffff800 	.word	0xfffff800

080282e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80282e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80282e8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80282ec:	2d00      	cmp	r5, #0
 80282ee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80282f2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80282f6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80282fa:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80282fe:	fb05 0e03 	mla	lr, r5, r3, r0
 8028302:	f2c0 808c 	blt.w	802841e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8028306:	45a9      	cmp	r9, r5
 8028308:	f340 8089 	ble.w	802841e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802830c:	2800      	cmp	r0, #0
 802830e:	f2c0 8084 	blt.w	802841a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028312:	4580      	cmp	r8, r0
 8028314:	f340 8081 	ble.w	802841a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8028318:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802831c:	f01e 0f01 	tst.w	lr, #1
 8028320:	5d16      	ldrb	r6, [r2, r4]
 8028322:	bf0c      	ite	eq
 8028324:	f006 060f 	andeq.w	r6, r6, #15
 8028328:	1136      	asrne	r6, r6, #4
 802832a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802832e:	b2f6      	uxtb	r6, r6
 8028330:	1c44      	adds	r4, r0, #1
 8028332:	d477      	bmi.n	8028424 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028334:	45a0      	cmp	r8, r4
 8028336:	dd75      	ble.n	8028424 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8028338:	2f00      	cmp	r7, #0
 802833a:	d075      	beq.n	8028428 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802833c:	f10e 0a01 	add.w	sl, lr, #1
 8028340:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028344:	f01a 0f01 	tst.w	sl, #1
 8028348:	5d14      	ldrb	r4, [r2, r4]
 802834a:	bf0c      	ite	eq
 802834c:	f004 040f 	andeq.w	r4, r4, #15
 8028350:	1124      	asrne	r4, r4, #4
 8028352:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028356:	b2e4      	uxtb	r4, r4
 8028358:	3501      	adds	r5, #1
 802835a:	d469      	bmi.n	8028430 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802835c:	45a9      	cmp	r9, r5
 802835e:	dd67      	ble.n	8028430 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8028360:	f1bc 0f00 	cmp.w	ip, #0
 8028364:	d067      	beq.n	8028436 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8028366:	2800      	cmp	r0, #0
 8028368:	db60      	blt.n	802842c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802836a:	4580      	cmp	r8, r0
 802836c:	dd5e      	ble.n	802842c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802836e:	eb03 090e 	add.w	r9, r3, lr
 8028372:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028376:	f019 0f01 	tst.w	r9, #1
 802837a:	5d55      	ldrb	r5, [r2, r5]
 802837c:	bf0c      	ite	eq
 802837e:	f005 050f 	andeq.w	r5, r5, #15
 8028382:	112d      	asrne	r5, r5, #4
 8028384:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028388:	b2ed      	uxtb	r5, r5
 802838a:	3001      	adds	r0, #1
 802838c:	d456      	bmi.n	802843c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802838e:	4580      	cmp	r8, r0
 8028390:	dd54      	ble.n	802843c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8028392:	2f00      	cmp	r7, #0
 8028394:	d054      	beq.n	8028440 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8028396:	3301      	adds	r3, #1
 8028398:	449e      	add	lr, r3
 802839a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802839e:	f01e 0f01 	tst.w	lr, #1
 80283a2:	5cd0      	ldrb	r0, [r2, r3]
 80283a4:	bf0c      	ite	eq
 80283a6:	f000 000f 	andeq.w	r0, r0, #15
 80283aa:	1100      	asrne	r0, r0, #4
 80283ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80283b0:	b2c3      	uxtb	r3, r0
 80283b2:	b2ba      	uxth	r2, r7
 80283b4:	fa1f fc8c 	uxth.w	ip, ip
 80283b8:	fb02 f00c 	mul.w	r0, r2, ip
 80283bc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80283c0:	0112      	lsls	r2, r2, #4
 80283c2:	fa1f fc8c 	uxth.w	ip, ip
 80283c6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80283ca:	1a12      	subs	r2, r2, r0
 80283cc:	eba7 070c 	sub.w	r7, r7, ip
 80283d0:	b292      	uxth	r2, r2
 80283d2:	b2bf      	uxth	r7, r7
 80283d4:	4362      	muls	r2, r4
 80283d6:	fb06 2207 	mla	r2, r6, r7, r2
 80283da:	fb0c 2505 	mla	r5, ip, r5, r2
 80283de:	fb00 5303 	mla	r3, r0, r3, r5
 80283e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80283e6:	b1b3      	cbz	r3, 8028416 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80283e8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80283ec:	435a      	muls	r2, r3
 80283ee:	1c53      	adds	r3, r2, #1
 80283f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80283f4:	4a2d      	ldr	r2, [pc, #180]	; (80284ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80283f6:	121b      	asrs	r3, r3, #8
 80283f8:	6812      	ldr	r2, [r2, #0]
 80283fa:	2bff      	cmp	r3, #255	; 0xff
 80283fc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8028400:	d120      	bne.n	8028444 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8028402:	4b2b      	ldr	r3, [pc, #172]	; (80284b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8028404:	0950      	lsrs	r0, r2, #5
 8028406:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802840a:	4033      	ands	r3, r6
 802840c:	4318      	orrs	r0, r3
 802840e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028412:	4302      	orrs	r2, r0
 8028414:	800a      	strh	r2, [r1, #0]
 8028416:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802841a:	2600      	movs	r6, #0
 802841c:	e788      	b.n	8028330 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802841e:	2400      	movs	r4, #0
 8028420:	4626      	mov	r6, r4
 8028422:	e799      	b.n	8028358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028424:	2400      	movs	r4, #0
 8028426:	e797      	b.n	8028358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8028428:	463c      	mov	r4, r7
 802842a:	e795      	b.n	8028358 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802842c:	2500      	movs	r5, #0
 802842e:	e7ac      	b.n	802838a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8028430:	2300      	movs	r3, #0
 8028432:	461d      	mov	r5, r3
 8028434:	e7bd      	b.n	80283b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028436:	4663      	mov	r3, ip
 8028438:	4665      	mov	r5, ip
 802843a:	e7ba      	b.n	80283b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802843c:	2300      	movs	r3, #0
 802843e:	e7b8      	b.n	80283b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028440:	463b      	mov	r3, r7
 8028442:	e7b6      	b.n	80283b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8028444:	880d      	ldrh	r5, [r1, #0]
 8028446:	b29f      	uxth	r7, r3
 8028448:	122c      	asrs	r4, r5, #8
 802844a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802844e:	43db      	mvns	r3, r3
 8028450:	b2db      	uxtb	r3, r3
 8028452:	fb10 f007 	smulbb	r0, r0, r7
 8028456:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802845a:	fb04 0403 	mla	r4, r4, r3, r0
 802845e:	b2f6      	uxtb	r6, r6
 8028460:	10e8      	asrs	r0, r5, #3
 8028462:	b2d2      	uxtb	r2, r2
 8028464:	00ed      	lsls	r5, r5, #3
 8028466:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802846a:	fb12 f207 	smulbb	r2, r2, r7
 802846e:	fb16 f607 	smulbb	r6, r6, r7
 8028472:	b2ed      	uxtb	r5, r5
 8028474:	b2a4      	uxth	r4, r4
 8028476:	fb00 6603 	mla	r6, r0, r3, r6
 802847a:	fb05 2303 	mla	r3, r5, r3, r2
 802847e:	b29a      	uxth	r2, r3
 8028480:	1c63      	adds	r3, r4, #1
 8028482:	b2b0      	uxth	r0, r6
 8028484:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028488:	1c53      	adds	r3, r2, #1
 802848a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802848e:	1c42      	adds	r2, r0, #1
 8028490:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028494:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028498:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802849c:	0940      	lsrs	r0, r0, #5
 802849e:	4323      	orrs	r3, r4
 80284a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80284a4:	4303      	orrs	r3, r0
 80284a6:	800b      	strh	r3, [r1, #0]
 80284a8:	e7b5      	b.n	8028416 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80284aa:	bf00      	nop
 80284ac:	2001384c 	.word	0x2001384c
 80284b0:	00fff800 	.word	0x00fff800

080284b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80284b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80284b8:	b097      	sub	sp, #92	; 0x5c
 80284ba:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80284be:	9214      	str	r2, [sp, #80]	; 0x50
 80284c0:	9309      	str	r3, [sp, #36]	; 0x24
 80284c2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80284c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80284c8:	910d      	str	r1, [sp, #52]	; 0x34
 80284ca:	930f      	str	r3, [sp, #60]	; 0x3c
 80284cc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80284d0:	9015      	str	r0, [sp, #84]	; 0x54
 80284d2:	6850      	ldr	r0, [r2, #4]
 80284d4:	6812      	ldr	r2, [r2, #0]
 80284d6:	fb00 1303 	mla	r3, r0, r3, r1
 80284da:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80284de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284e0:	689b      	ldr	r3, [r3, #8]
 80284e2:	3301      	adds	r3, #1
 80284e4:	f023 0301 	bic.w	r3, r3, #1
 80284e8:	930a      	str	r3, [sp, #40]	; 0x28
 80284ea:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284ec:	681f      	ldr	r7, [r3, #0]
 80284ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80284f0:	2b00      	cmp	r3, #0
 80284f2:	dc03      	bgt.n	80284fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80284f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80284f6:	2b00      	cmp	r3, #0
 80284f8:	f340 8287 	ble.w	8028a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80284fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80284fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028502:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028506:	1e48      	subs	r0, r1, #1
 8028508:	f102 3cff 	add.w	ip, r2, #4294967295
 802850c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802850e:	2b00      	cmp	r3, #0
 8028510:	f340 80c4 	ble.w	802869c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8028514:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028518:	ea4f 4326 	mov.w	r3, r6, asr #16
 802851c:	d406      	bmi.n	802852c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802851e:	4586      	cmp	lr, r0
 8028520:	da04      	bge.n	802852c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028522:	2b00      	cmp	r3, #0
 8028524:	db02      	blt.n	802852c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8028526:	4563      	cmp	r3, ip
 8028528:	f2c0 80b9 	blt.w	802869e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802852c:	f11e 0e01 	adds.w	lr, lr, #1
 8028530:	f100 80aa 	bmi.w	8028688 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028534:	4571      	cmp	r1, lr
 8028536:	f2c0 80a7 	blt.w	8028688 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802853a:	3301      	adds	r3, #1
 802853c:	f100 80a4 	bmi.w	8028688 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028540:	429a      	cmp	r2, r3
 8028542:	f2c0 80a1 	blt.w	8028688 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8028546:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028548:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802854c:	930e      	str	r3, [sp, #56]	; 0x38
 802854e:	46c8      	mov	r8, r9
 8028550:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8028552:	2b00      	cmp	r3, #0
 8028554:	f340 80c3 	ble.w	80286de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8028558:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802855a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802855e:	1423      	asrs	r3, r4, #16
 8028560:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028564:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028568:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802856c:	f100 814d 	bmi.w	802880a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028570:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028574:	455b      	cmp	r3, fp
 8028576:	f280 8148 	bge.w	802880a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802857a:	2800      	cmp	r0, #0
 802857c:	f2c0 8145 	blt.w	802880a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8028580:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028584:	4558      	cmp	r0, fp
 8028586:	f280 8140 	bge.w	802880a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802858a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802858c:	fb00 3305 	mla	r3, r0, r5, r3
 8028590:	0858      	lsrs	r0, r3, #1
 8028592:	07dd      	lsls	r5, r3, #31
 8028594:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028598:	bf54      	ite	pl
 802859a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802859e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80285a2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80285a6:	fa5f fc8c 	uxtb.w	ip, ip
 80285aa:	2a00      	cmp	r2, #0
 80285ac:	f000 80db 	beq.w	8028766 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80285b0:	1c58      	adds	r0, r3, #1
 80285b2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80285b6:	07c0      	lsls	r0, r0, #31
 80285b8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80285bc:	bf54      	ite	pl
 80285be:	f00e 0e0f 	andpl.w	lr, lr, #15
 80285c2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80285c6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80285ca:	fa5f f08e 	uxtb.w	r0, lr
 80285ce:	9010      	str	r0, [sp, #64]	; 0x40
 80285d0:	b1c9      	cbz	r1, 8028606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80285d2:	4453      	add	r3, sl
 80285d4:	0858      	lsrs	r0, r3, #1
 80285d6:	07dd      	lsls	r5, r3, #31
 80285d8:	5c38      	ldrb	r0, [r7, r0]
 80285da:	bf54      	ite	pl
 80285dc:	f000 000f 	andpl.w	r0, r0, #15
 80285e0:	1100      	asrmi	r0, r0, #4
 80285e2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80285e6:	3301      	adds	r3, #1
 80285e8:	b2c0      	uxtb	r0, r0
 80285ea:	900b      	str	r0, [sp, #44]	; 0x2c
 80285ec:	0858      	lsrs	r0, r3, #1
 80285ee:	07dd      	lsls	r5, r3, #31
 80285f0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80285f4:	bf54      	ite	pl
 80285f6:	f00e 030f 	andpl.w	r3, lr, #15
 80285fa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80285fe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028602:	b2db      	uxtb	r3, r3
 8028604:	9311      	str	r3, [sp, #68]	; 0x44
 8028606:	b292      	uxth	r2, r2
 8028608:	b289      	uxth	r1, r1
 802860a:	fb02 f301 	mul.w	r3, r2, r1
 802860e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028612:	0112      	lsls	r2, r2, #4
 8028614:	b289      	uxth	r1, r1
 8028616:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802861a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802861c:	1ad2      	subs	r2, r2, r3
 802861e:	1a40      	subs	r0, r0, r1
 8028620:	b292      	uxth	r2, r2
 8028622:	436a      	muls	r2, r5
 8028624:	b280      	uxth	r0, r0
 8028626:	fb0c 2c00 	mla	ip, ip, r0, r2
 802862a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802862c:	fb01 c102 	mla	r1, r1, r2, ip
 8028630:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028632:	fb03 1302 	mla	r3, r3, r2, r1
 8028636:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802863a:	b1db      	cbz	r3, 8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802863c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802863e:	4353      	muls	r3, r2
 8028640:	1c5a      	adds	r2, r3, #1
 8028642:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028646:	4ac6      	ldr	r2, [pc, #792]	; (8028960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028648:	121b      	asrs	r3, r3, #8
 802864a:	6812      	ldr	r2, [r2, #0]
 802864c:	2bff      	cmp	r3, #255	; 0xff
 802864e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8028652:	f040 8099 	bne.w	8028788 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8028656:	0953      	lsrs	r3, r2, #5
 8028658:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802865c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028660:	f02c 0c07 	bic.w	ip, ip, #7
 8028664:	ea43 0c0c 	orr.w	ip, r3, ip
 8028668:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802866c:	ea4c 0202 	orr.w	r2, ip, r2
 8028670:	f8a8 2000 	strh.w	r2, [r8]
 8028674:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028676:	441c      	add	r4, r3
 8028678:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802867a:	441e      	add	r6, r3
 802867c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802867e:	3b01      	subs	r3, #1
 8028680:	f108 0802 	add.w	r8, r8, #2
 8028684:	930e      	str	r3, [sp, #56]	; 0x38
 8028686:	e763      	b.n	8028550 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8028688:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802868a:	441c      	add	r4, r3
 802868c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802868e:	441e      	add	r6, r3
 8028690:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028692:	3b01      	subs	r3, #1
 8028694:	9309      	str	r3, [sp, #36]	; 0x24
 8028696:	f109 0902 	add.w	r9, r9, #2
 802869a:	e737      	b.n	802850c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802869c:	d024      	beq.n	80286e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802869e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286a0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80286a2:	3b01      	subs	r3, #1
 80286a4:	fb00 4003 	mla	r0, r0, r3, r4
 80286a8:	1400      	asrs	r0, r0, #16
 80286aa:	f53f af4c 	bmi.w	8028546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286ae:	3901      	subs	r1, #1
 80286b0:	4288      	cmp	r0, r1
 80286b2:	f6bf af48 	bge.w	8028546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286b6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80286b8:	fb01 6303 	mla	r3, r1, r3, r6
 80286bc:	141b      	asrs	r3, r3, #16
 80286be:	f53f af42 	bmi.w	8028546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286c2:	3a01      	subs	r2, #1
 80286c4:	4293      	cmp	r3, r2
 80286c6:	f6bf af3e 	bge.w	8028546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80286ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80286ce:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80286d2:	930e      	str	r3, [sp, #56]	; 0x38
 80286d4:	46c8      	mov	r8, r9
 80286d6:	f1bb 0f00 	cmp.w	fp, #0
 80286da:	f300 80b7 	bgt.w	802884c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80286de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286e0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80286e4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80286e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80286ea:	2b00      	cmp	r3, #0
 80286ec:	f340 818d 	ble.w	8028a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80286f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80286f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80286f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80286fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80286fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028702:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028706:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802870a:	eef0 6a62 	vmov.f32	s13, s5
 802870e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028716:	ee77 2a62 	vsub.f32	s5, s14, s5
 802871a:	ee16 4a90 	vmov	r4, s13
 802871e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028722:	eef0 6a43 	vmov.f32	s13, s6
 8028726:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802872a:	ee12 2a90 	vmov	r2, s5
 802872e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028732:	fb92 f3f3 	sdiv	r3, r2, r3
 8028736:	ee13 2a10 	vmov	r2, s6
 802873a:	9323      	str	r3, [sp, #140]	; 0x8c
 802873c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802873e:	fb92 f3f3 	sdiv	r3, r2, r3
 8028742:	9324      	str	r3, [sp, #144]	; 0x90
 8028744:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028746:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028748:	3b01      	subs	r3, #1
 802874a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802874e:	930d      	str	r3, [sp, #52]	; 0x34
 8028750:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028752:	bf08      	it	eq
 8028754:	4613      	moveq	r3, r2
 8028756:	ee16 6a90 	vmov	r6, s13
 802875a:	9309      	str	r3, [sp, #36]	; 0x24
 802875c:	eeb0 3a67 	vmov.f32	s6, s15
 8028760:	eef0 2a47 	vmov.f32	s5, s14
 8028764:	e6c3      	b.n	80284ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8028766:	2900      	cmp	r1, #0
 8028768:	f43f af4d 	beq.w	8028606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802876c:	eb0a 0003 	add.w	r0, sl, r3
 8028770:	0843      	lsrs	r3, r0, #1
 8028772:	07c0      	lsls	r0, r0, #31
 8028774:	5cfb      	ldrb	r3, [r7, r3]
 8028776:	bf54      	ite	pl
 8028778:	f003 030f 	andpl.w	r3, r3, #15
 802877c:	111b      	asrmi	r3, r3, #4
 802877e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028782:	b2db      	uxtb	r3, r3
 8028784:	930b      	str	r3, [sp, #44]	; 0x2c
 8028786:	e73e      	b.n	8028606 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8028788:	f8b8 e000 	ldrh.w	lr, [r8]
 802878c:	fa1f fb83 	uxth.w	fp, r3
 8028790:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028794:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8028798:	43db      	mvns	r3, r3
 802879a:	b2db      	uxtb	r3, r3
 802879c:	fb11 f10b 	smulbb	r1, r1, fp
 80287a0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80287a4:	fb00 1003 	mla	r0, r0, r3, r1
 80287a8:	fa5f fc8c 	uxtb.w	ip, ip
 80287ac:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80287b0:	b2d2      	uxtb	r2, r2
 80287b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80287b6:	b280      	uxth	r0, r0
 80287b8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80287bc:	fb1c fc0b 	smulbb	ip, ip, fp
 80287c0:	fa5f fe8e 	uxtb.w	lr, lr
 80287c4:	fb12 fb0b 	smulbb	fp, r2, fp
 80287c8:	fb01 cc03 	mla	ip, r1, r3, ip
 80287cc:	fb0e bb03 	mla	fp, lr, r3, fp
 80287d0:	1c43      	adds	r3, r0, #1
 80287d2:	fa1f fc8c 	uxth.w	ip, ip
 80287d6:	fa1f fb8b 	uxth.w	fp, fp
 80287da:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80287de:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80287e2:	f10c 0101 	add.w	r1, ip, #1
 80287e6:	f10b 0001 	add.w	r0, fp, #1
 80287ea:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80287ee:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80287f2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80287f6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80287fa:	4318      	orrs	r0, r3
 80287fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028800:	ea40 000c 	orr.w	r0, r0, ip
 8028804:	f8a8 0000 	strh.w	r0, [r8]
 8028808:	e734      	b.n	8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802880a:	f113 0b01 	adds.w	fp, r3, #1
 802880e:	f53f af31 	bmi.w	8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028812:	45dc      	cmp	ip, fp
 8028814:	f6ff af2e 	blt.w	8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028818:	f110 0b01 	adds.w	fp, r0, #1
 802881c:	f53f af2a 	bmi.w	8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028820:	45de      	cmp	lr, fp
 8028822:	f6ff af27 	blt.w	8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8028826:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028828:	9302      	str	r3, [sp, #8]
 802882a:	fa0f f38e 	sxth.w	r3, lr
 802882e:	9301      	str	r3, [sp, #4]
 8028830:	fa0f f38c 	sxth.w	r3, ip
 8028834:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028838:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802883c:	9300      	str	r3, [sp, #0]
 802883e:	463a      	mov	r2, r7
 8028840:	4653      	mov	r3, sl
 8028842:	4641      	mov	r1, r8
 8028844:	9815      	ldr	r0, [sp, #84]	; 0x54
 8028846:	f7ff fd4d 	bl	80282e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802884a:	e713      	b.n	8028674 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802884c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802884e:	1422      	asrs	r2, r4, #16
 8028850:	1433      	asrs	r3, r6, #16
 8028852:	fb05 2303 	mla	r3, r5, r3, r2
 8028856:	085a      	lsrs	r2, r3, #1
 8028858:	07dd      	lsls	r5, r3, #31
 802885a:	5cba      	ldrb	r2, [r7, r2]
 802885c:	bf54      	ite	pl
 802885e:	f002 020f 	andpl.w	r2, r2, #15
 8028862:	1112      	asrmi	r2, r2, #4
 8028864:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028868:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802886c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028870:	b2d2      	uxtb	r2, r2
 8028872:	2900      	cmp	r1, #0
 8028874:	d076      	beq.n	8028964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8028876:	f103 0e01 	add.w	lr, r3, #1
 802887a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802887e:	f01e 0f01 	tst.w	lr, #1
 8028882:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028886:	bf0c      	ite	eq
 8028888:	f00c 0c0f 	andeq.w	ip, ip, #15
 802888c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8028890:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028894:	fa5f f58c 	uxtb.w	r5, ip
 8028898:	9512      	str	r5, [sp, #72]	; 0x48
 802889a:	b300      	cbz	r0, 80288de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802889c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802889e:	442b      	add	r3, r5
 80288a0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288a4:	07dd      	lsls	r5, r3, #31
 80288a6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288aa:	bf54      	ite	pl
 80288ac:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288b0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288b4:	3301      	adds	r3, #1
 80288b6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288ba:	fa5f f58c 	uxtb.w	r5, ip
 80288be:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80288c2:	950c      	str	r5, [sp, #48]	; 0x30
 80288c4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80288c8:	07dd      	lsls	r5, r3, #31
 80288ca:	bf54      	ite	pl
 80288cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80288d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80288d4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80288d8:	fa5f f38c 	uxtb.w	r3, ip
 80288dc:	9313      	str	r3, [sp, #76]	; 0x4c
 80288de:	b289      	uxth	r1, r1
 80288e0:	b280      	uxth	r0, r0
 80288e2:	fb01 f300 	mul.w	r3, r1, r0
 80288e6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80288ea:	0109      	lsls	r1, r1, #4
 80288ec:	b280      	uxth	r0, r0
 80288ee:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80288f2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80288f4:	1ac9      	subs	r1, r1, r3
 80288f6:	ebac 0c00 	sub.w	ip, ip, r0
 80288fa:	b289      	uxth	r1, r1
 80288fc:	4369      	muls	r1, r5
 80288fe:	fa1f fc8c 	uxth.w	ip, ip
 8028902:	fb02 120c 	mla	r2, r2, ip, r1
 8028906:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028908:	fb00 2001 	mla	r0, r0, r1, r2
 802890c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802890e:	fb03 0302 	mla	r3, r3, r2, r0
 8028912:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028916:	b1d3      	cbz	r3, 802894e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028918:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802891a:	4353      	muls	r3, r2
 802891c:	1c5a      	adds	r2, r3, #1
 802891e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8028922:	4a0f      	ldr	r2, [pc, #60]	; (8028960 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8028924:	121b      	asrs	r3, r3, #8
 8028926:	6812      	ldr	r2, [r2, #0]
 8028928:	2bff      	cmp	r3, #255	; 0xff
 802892a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802892e:	d12d      	bne.n	802898c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8028930:	0953      	lsrs	r3, r2, #5
 8028932:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8028936:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802893a:	f02c 0c07 	bic.w	ip, ip, #7
 802893e:	ea43 0c0c 	orr.w	ip, r3, ip
 8028942:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028946:	ea4c 0202 	orr.w	r2, ip, r2
 802894a:	f8a8 2000 	strh.w	r2, [r8]
 802894e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8028950:	441c      	add	r4, r3
 8028952:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028954:	f108 0802 	add.w	r8, r8, #2
 8028958:	441e      	add	r6, r3
 802895a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802895e:	e6ba      	b.n	80286d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8028960:	2001384c 	.word	0x2001384c
 8028964:	2800      	cmp	r0, #0
 8028966:	d0ba      	beq.n	80288de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8028968:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802896a:	442b      	add	r3, r5
 802896c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8028970:	07db      	lsls	r3, r3, #31
 8028972:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8028976:	bf54      	ite	pl
 8028978:	f00c 0c0f 	andpl.w	ip, ip, #15
 802897c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028980:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028984:	fa5f f38c 	uxtb.w	r3, ip
 8028988:	930c      	str	r3, [sp, #48]	; 0x30
 802898a:	e7a8      	b.n	80288de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802898c:	f8b8 e000 	ldrh.w	lr, [r8]
 8028990:	fa1f fa83 	uxth.w	sl, r3
 8028994:	ea4f 202e 	mov.w	r0, lr, asr #8
 8028998:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802899c:	43db      	mvns	r3, r3
 802899e:	b2db      	uxtb	r3, r3
 80289a0:	fb11 f10a 	smulbb	r1, r1, sl
 80289a4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80289a8:	fb00 1003 	mla	r0, r0, r3, r1
 80289ac:	b2d2      	uxtb	r2, r2
 80289ae:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80289b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80289b6:	fa5f fe8e 	uxtb.w	lr, lr
 80289ba:	fb12 f20a 	smulbb	r2, r2, sl
 80289be:	fb0e 2203 	mla	r2, lr, r3, r2
 80289c2:	fa5f fc8c 	uxtb.w	ip, ip
 80289c6:	b280      	uxth	r0, r0
 80289c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80289cc:	b292      	uxth	r2, r2
 80289ce:	fb1c fc0a 	smulbb	ip, ip, sl
 80289d2:	fb01 cc03 	mla	ip, r1, r3, ip
 80289d6:	1c43      	adds	r3, r0, #1
 80289d8:	1c51      	adds	r1, r2, #1
 80289da:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80289de:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80289e2:	fa1f fc8c 	uxth.w	ip, ip
 80289e6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80289ea:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80289ee:	4308      	orrs	r0, r1
 80289f0:	f10c 0101 	add.w	r1, ip, #1
 80289f4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80289f8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80289fc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8028a00:	ea40 000c 	orr.w	r0, r0, ip
 8028a04:	f8a8 0000 	strh.w	r0, [r8]
 8028a08:	e7a1      	b.n	802894e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8028a0a:	b017      	add	sp, #92	; 0x5c
 8028a0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028a10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8028a10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028a14:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8028a18:	2d00      	cmp	r5, #0
 8028a1a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8028a1e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8028a22:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8028a26:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8028a2a:	fb05 0e03 	mla	lr, r5, r3, r0
 8028a2e:	f2c0 80b0 	blt.w	8028b92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a32:	45a9      	cmp	r9, r5
 8028a34:	f340 80ad 	ble.w	8028b92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8028a38:	2800      	cmp	r0, #0
 8028a3a:	f2c0 80a8 	blt.w	8028b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a3e:	4580      	cmp	r8, r0
 8028a40:	f340 80a5 	ble.w	8028b8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8028a44:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8028a48:	f01e 0f01 	tst.w	lr, #1
 8028a4c:	5d16      	ldrb	r6, [r2, r4]
 8028a4e:	bf0c      	ite	eq
 8028a50:	f006 060f 	andeq.w	r6, r6, #15
 8028a54:	1136      	asrne	r6, r6, #4
 8028a56:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8028a5a:	b2f6      	uxtb	r6, r6
 8028a5c:	1c44      	adds	r4, r0, #1
 8028a5e:	f100 809b 	bmi.w	8028b98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a62:	45a0      	cmp	r8, r4
 8028a64:	f340 8098 	ble.w	8028b98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8028a68:	2f00      	cmp	r7, #0
 8028a6a:	f000 8097 	beq.w	8028b9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8028a6e:	f10e 0a01 	add.w	sl, lr, #1
 8028a72:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8028a76:	f01a 0f01 	tst.w	sl, #1
 8028a7a:	5d14      	ldrb	r4, [r2, r4]
 8028a7c:	bf0c      	ite	eq
 8028a7e:	f004 040f 	andeq.w	r4, r4, #15
 8028a82:	1124      	asrne	r4, r4, #4
 8028a84:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8028a88:	b2e4      	uxtb	r4, r4
 8028a8a:	3501      	adds	r5, #1
 8028a8c:	f100 808a 	bmi.w	8028ba4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028a90:	45a9      	cmp	r9, r5
 8028a92:	f340 8087 	ble.w	8028ba4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8028a96:	f1bc 0f00 	cmp.w	ip, #0
 8028a9a:	f000 8086 	beq.w	8028baa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8028a9e:	2800      	cmp	r0, #0
 8028aa0:	db7e      	blt.n	8028ba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028aa2:	4580      	cmp	r8, r0
 8028aa4:	dd7c      	ble.n	8028ba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8028aa6:	eb03 090e 	add.w	r9, r3, lr
 8028aaa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8028aae:	f019 0f01 	tst.w	r9, #1
 8028ab2:	5d55      	ldrb	r5, [r2, r5]
 8028ab4:	bf0c      	ite	eq
 8028ab6:	f005 050f 	andeq.w	r5, r5, #15
 8028aba:	112d      	asrne	r5, r5, #4
 8028abc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8028ac0:	b2ed      	uxtb	r5, r5
 8028ac2:	3001      	adds	r0, #1
 8028ac4:	d474      	bmi.n	8028bb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028ac6:	4580      	cmp	r8, r0
 8028ac8:	dd72      	ble.n	8028bb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8028aca:	2f00      	cmp	r7, #0
 8028acc:	d072      	beq.n	8028bb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8028ace:	3301      	adds	r3, #1
 8028ad0:	449e      	add	lr, r3
 8028ad2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8028ad6:	f01e 0f01 	tst.w	lr, #1
 8028ada:	5cd0      	ldrb	r0, [r2, r3]
 8028adc:	bf0c      	ite	eq
 8028ade:	f000 000f 	andeq.w	r0, r0, #15
 8028ae2:	1100      	asrne	r0, r0, #4
 8028ae4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028ae8:	b2c3      	uxtb	r3, r0
 8028aea:	b2ba      	uxth	r2, r7
 8028aec:	fa1f fc8c 	uxth.w	ip, ip
 8028af0:	fb02 f00c 	mul.w	r0, r2, ip
 8028af4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8028af8:	0112      	lsls	r2, r2, #4
 8028afa:	fa1f fc8c 	uxth.w	ip, ip
 8028afe:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8028b02:	1a12      	subs	r2, r2, r0
 8028b04:	eba7 070c 	sub.w	r7, r7, ip
 8028b08:	b292      	uxth	r2, r2
 8028b0a:	b2bf      	uxth	r7, r7
 8028b0c:	4362      	muls	r2, r4
 8028b0e:	fb06 2207 	mla	r2, r6, r7, r2
 8028b12:	fb0c 2505 	mla	r5, ip, r5, r2
 8028b16:	fb00 5303 	mla	r3, r0, r3, r5
 8028b1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028b1e:	b3a3      	cbz	r3, 8028b8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8028b20:	4a25      	ldr	r2, [pc, #148]	; (8028bb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8028b22:	880e      	ldrh	r6, [r1, #0]
 8028b24:	6815      	ldr	r5, [r2, #0]
 8028b26:	1234      	asrs	r4, r6, #8
 8028b28:	b29a      	uxth	r2, r3
 8028b2a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8028b2e:	43db      	mvns	r3, r3
 8028b30:	b2db      	uxtb	r3, r3
 8028b32:	fb10 f002 	smulbb	r0, r0, r2
 8028b36:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8028b3a:	fb04 0403 	mla	r4, r4, r3, r0
 8028b3e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8028b42:	10f0      	asrs	r0, r6, #3
 8028b44:	b2ed      	uxtb	r5, r5
 8028b46:	00f6      	lsls	r6, r6, #3
 8028b48:	fb17 f702 	smulbb	r7, r7, r2
 8028b4c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028b50:	fb15 f202 	smulbb	r2, r5, r2
 8028b54:	b2f6      	uxtb	r6, r6
 8028b56:	b2a4      	uxth	r4, r4
 8028b58:	fb00 7003 	mla	r0, r0, r3, r7
 8028b5c:	fb06 2303 	mla	r3, r6, r3, r2
 8028b60:	b29a      	uxth	r2, r3
 8028b62:	1c63      	adds	r3, r4, #1
 8028b64:	b280      	uxth	r0, r0
 8028b66:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028b6a:	1c53      	adds	r3, r2, #1
 8028b6c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028b70:	1c42      	adds	r2, r0, #1
 8028b72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8028b76:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8028b7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028b7e:	0940      	lsrs	r0, r0, #5
 8028b80:	4323      	orrs	r3, r4
 8028b82:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028b86:	4303      	orrs	r3, r0
 8028b88:	800b      	strh	r3, [r1, #0]
 8028b8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8028b8e:	2600      	movs	r6, #0
 8028b90:	e764      	b.n	8028a5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8028b92:	2400      	movs	r4, #0
 8028b94:	4626      	mov	r6, r4
 8028b96:	e778      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028b98:	2400      	movs	r4, #0
 8028b9a:	e776      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028b9c:	463c      	mov	r4, r7
 8028b9e:	e774      	b.n	8028a8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8028ba0:	2500      	movs	r5, #0
 8028ba2:	e78e      	b.n	8028ac2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8028ba4:	2300      	movs	r3, #0
 8028ba6:	461d      	mov	r5, r3
 8028ba8:	e79f      	b.n	8028aea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028baa:	4663      	mov	r3, ip
 8028bac:	4665      	mov	r5, ip
 8028bae:	e79c      	b.n	8028aea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bb0:	2300      	movs	r3, #0
 8028bb2:	e79a      	b.n	8028aea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bb4:	463b      	mov	r3, r7
 8028bb6:	e798      	b.n	8028aea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8028bb8:	2001384c 	.word	0x2001384c

08028bbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028bc0:	b093      	sub	sp, #76	; 0x4c
 8028bc2:	461d      	mov	r5, r3
 8028bc4:	920c      	str	r2, [sp, #48]	; 0x30
 8028bc6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8028bc8:	9107      	str	r1, [sp, #28]
 8028bca:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8028bce:	9011      	str	r0, [sp, #68]	; 0x44
 8028bd0:	6850      	ldr	r0, [r2, #4]
 8028bd2:	6812      	ldr	r2, [r2, #0]
 8028bd4:	fb00 1303 	mla	r3, r0, r3, r1
 8028bd8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8028bdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bde:	689b      	ldr	r3, [r3, #8]
 8028be0:	3301      	adds	r3, #1
 8028be2:	f023 0301 	bic.w	r3, r3, #1
 8028be6:	9306      	str	r3, [sp, #24]
 8028be8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028bea:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8028bee:	681f      	ldr	r7, [r3, #0]
 8028bf0:	9b07      	ldr	r3, [sp, #28]
 8028bf2:	2b00      	cmp	r3, #0
 8028bf4:	dc03      	bgt.n	8028bfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8028bf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8028bf8:	2b00      	cmp	r3, #0
 8028bfa:	f340 8267 	ble.w	80290cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028bfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028c04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028c08:	1e48      	subs	r0, r1, #1
 8028c0a:	f102 3cff 	add.w	ip, r2, #4294967295
 8028c0e:	2d00      	cmp	r5, #0
 8028c10:	f340 80b8 	ble.w	8028d84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8028c14:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8028c18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028c1c:	d406      	bmi.n	8028c2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c1e:	4586      	cmp	lr, r0
 8028c20:	da04      	bge.n	8028c2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c22:	2b00      	cmp	r3, #0
 8028c24:	db02      	blt.n	8028c2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8028c26:	4563      	cmp	r3, ip
 8028c28:	f2c0 80ad 	blt.w	8028d86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8028c2c:	f11e 0e01 	adds.w	lr, lr, #1
 8028c30:	f100 80a0 	bmi.w	8028d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c34:	4571      	cmp	r1, lr
 8028c36:	f2c0 809d 	blt.w	8028d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c3a:	3301      	adds	r3, #1
 8028c3c:	f100 809a 	bmi.w	8028d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c40:	429a      	cmp	r2, r3
 8028c42:	f2c0 8097 	blt.w	8028d74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8028c46:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8028c4a:	9509      	str	r5, [sp, #36]	; 0x24
 8028c4c:	46c8      	mov	r8, r9
 8028c4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028c50:	2b00      	cmp	r3, #0
 8028c52:	f340 80b6 	ble.w	8028dc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8028c56:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8028c5a:	9308      	str	r3, [sp, #32]
 8028c5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8028c5e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8028c62:	1423      	asrs	r3, r4, #16
 8028c64:	ea4f 4026 	mov.w	r0, r6, asr #16
 8028c68:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8028c6c:	f100 813e 	bmi.w	8028eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c70:	f10c 3bff 	add.w	fp, ip, #4294967295
 8028c74:	455b      	cmp	r3, fp
 8028c76:	f280 8139 	bge.w	8028eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c7a:	2800      	cmp	r0, #0
 8028c7c:	f2c0 8136 	blt.w	8028eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c80:	f10e 3bff 	add.w	fp, lr, #4294967295
 8028c84:	4558      	cmp	r0, fp
 8028c86:	f280 8131 	bge.w	8028eec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8028c8a:	9a06      	ldr	r2, [sp, #24]
 8028c8c:	fb00 3302 	mla	r3, r0, r2, r3
 8028c90:	0858      	lsrs	r0, r3, #1
 8028c92:	07da      	lsls	r2, r3, #31
 8028c94:	f817 c000 	ldrb.w	ip, [r7, r0]
 8028c98:	9a08      	ldr	r2, [sp, #32]
 8028c9a:	bf54      	ite	pl
 8028c9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8028ca0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8028ca4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8028ca8:	fa5f fc8c 	uxtb.w	ip, ip
 8028cac:	2a00      	cmp	r2, #0
 8028cae:	f000 80cb 	beq.w	8028e48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8028cb2:	1c58      	adds	r0, r3, #1
 8028cb4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8028cb8:	07c0      	lsls	r0, r0, #31
 8028cba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8028cbe:	bf54      	ite	pl
 8028cc0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8028cc4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8028cc8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8028ccc:	fa5f fe8e 	uxtb.w	lr, lr
 8028cd0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8028cd4:	b1b9      	cbz	r1, 8028d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028cd6:	4453      	add	r3, sl
 8028cd8:	0858      	lsrs	r0, r3, #1
 8028cda:	07da      	lsls	r2, r3, #31
 8028cdc:	5c38      	ldrb	r0, [r7, r0]
 8028cde:	bf54      	ite	pl
 8028ce0:	f000 000f 	andpl.w	r0, r0, #15
 8028ce4:	1100      	asrmi	r0, r0, #4
 8028ce6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8028cea:	b2c0      	uxtb	r0, r0
 8028cec:	900a      	str	r0, [sp, #40]	; 0x28
 8028cee:	1c58      	adds	r0, r3, #1
 8028cf0:	0843      	lsrs	r3, r0, #1
 8028cf2:	07c2      	lsls	r2, r0, #31
 8028cf4:	5cfb      	ldrb	r3, [r7, r3]
 8028cf6:	bf54      	ite	pl
 8028cf8:	f003 030f 	andpl.w	r3, r3, #15
 8028cfc:	111b      	asrmi	r3, r3, #4
 8028cfe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028d02:	b2db      	uxtb	r3, r3
 8028d04:	930e      	str	r3, [sp, #56]	; 0x38
 8028d06:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8028d0a:	b289      	uxth	r1, r1
 8028d0c:	fb02 f301 	mul.w	r3, r2, r1
 8028d10:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8028d14:	0112      	lsls	r2, r2, #4
 8028d16:	b289      	uxth	r1, r1
 8028d18:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8028d1c:	1a40      	subs	r0, r0, r1
 8028d1e:	fa1f fe80 	uxth.w	lr, r0
 8028d22:	1ad2      	subs	r2, r2, r3
 8028d24:	980d      	ldr	r0, [sp, #52]	; 0x34
 8028d26:	b292      	uxth	r2, r2
 8028d28:	4342      	muls	r2, r0
 8028d2a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8028d2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028d30:	fb01 c102 	mla	r1, r1, r2, ip
 8028d34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028d36:	fb03 1302 	mla	r3, r3, r2, r1
 8028d3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028d3e:	2bff      	cmp	r3, #255	; 0xff
 8028d40:	f040 8093 	bne.w	8028e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8028d44:	4bbe      	ldr	r3, [pc, #760]	; (8029040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028d46:	681a      	ldr	r2, [r3, #0]
 8028d48:	4bbe      	ldr	r3, [pc, #760]	; (8029044 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028d4a:	0951      	lsrs	r1, r2, #5
 8028d4c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028d50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028d54:	430b      	orrs	r3, r1
 8028d56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8028d5a:	4313      	orrs	r3, r2
 8028d5c:	f8a8 3000 	strh.w	r3, [r8]
 8028d60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d62:	441c      	add	r4, r3
 8028d64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d66:	441e      	add	r6, r3
 8028d68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028d6a:	3b01      	subs	r3, #1
 8028d6c:	f108 0802 	add.w	r8, r8, #2
 8028d70:	9309      	str	r3, [sp, #36]	; 0x24
 8028d72:	e76c      	b.n	8028c4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8028d74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8028d76:	441c      	add	r4, r3
 8028d78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8028d7a:	3d01      	subs	r5, #1
 8028d7c:	441e      	add	r6, r3
 8028d7e:	f109 0902 	add.w	r9, r9, #2
 8028d82:	e744      	b.n	8028c0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8028d84:	d021      	beq.n	8028dca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8028d86:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8028d88:	1e6b      	subs	r3, r5, #1
 8028d8a:	fb00 4003 	mla	r0, r0, r3, r4
 8028d8e:	1400      	asrs	r0, r0, #16
 8028d90:	f53f af59 	bmi.w	8028c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028d94:	3901      	subs	r1, #1
 8028d96:	4288      	cmp	r0, r1
 8028d98:	f6bf af55 	bge.w	8028c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028d9c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8028d9e:	fb01 6303 	mla	r3, r1, r3, r6
 8028da2:	141b      	asrs	r3, r3, #16
 8028da4:	f53f af4f 	bmi.w	8028c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028da8:	3a01      	subs	r2, #1
 8028daa:	4293      	cmp	r3, r2
 8028dac:	f6bf af4b 	bge.w	8028c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8028db0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8028db4:	9308      	str	r3, [sp, #32]
 8028db6:	46a8      	mov	r8, r5
 8028db8:	46ce      	mov	lr, r9
 8028dba:	f1b8 0f00 	cmp.w	r8, #0
 8028dbe:	f300 80b5 	bgt.w	8028f2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028dc2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8028dc6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8028dca:	9b07      	ldr	r3, [sp, #28]
 8028dcc:	2b00      	cmp	r3, #0
 8028dce:	f340 817d 	ble.w	80290cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8028dd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8028dd6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028dda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8028dde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028de0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8028de4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8028de8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8028dec:	eef0 6a62 	vmov.f32	s13, s5
 8028df0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8028df4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028df8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8028dfc:	ee16 4a90 	vmov	r4, s13
 8028e00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8028e04:	eef0 6a43 	vmov.f32	s13, s6
 8028e08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8028e0c:	ee12 2a90 	vmov	r2, s5
 8028e10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8028e14:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e18:	ee13 2a10 	vmov	r2, s6
 8028e1c:	931f      	str	r3, [sp, #124]	; 0x7c
 8028e1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8028e24:	9320      	str	r3, [sp, #128]	; 0x80
 8028e26:	9b07      	ldr	r3, [sp, #28]
 8028e28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028e2a:	3b01      	subs	r3, #1
 8028e2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028e30:	9307      	str	r3, [sp, #28]
 8028e32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8028e34:	ee16 6a90 	vmov	r6, s13
 8028e38:	bf14      	ite	ne
 8028e3a:	461d      	movne	r5, r3
 8028e3c:	4615      	moveq	r5, r2
 8028e3e:	eeb0 3a67 	vmov.f32	s6, s15
 8028e42:	eef0 2a47 	vmov.f32	s5, s14
 8028e46:	e6d3      	b.n	8028bf0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8028e48:	2900      	cmp	r1, #0
 8028e4a:	f43f af5c 	beq.w	8028d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e4e:	eb0a 0003 	add.w	r0, sl, r3
 8028e52:	0843      	lsrs	r3, r0, #1
 8028e54:	07c0      	lsls	r0, r0, #31
 8028e56:	5cfb      	ldrb	r3, [r7, r3]
 8028e58:	bf54      	ite	pl
 8028e5a:	f003 030f 	andpl.w	r3, r3, #15
 8028e5e:	111b      	asrmi	r3, r3, #4
 8028e60:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8028e64:	b2db      	uxtb	r3, r3
 8028e66:	930a      	str	r3, [sp, #40]	; 0x28
 8028e68:	e74d      	b.n	8028d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8028e6a:	2b00      	cmp	r3, #0
 8028e6c:	f43f af78 	beq.w	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028e70:	4a73      	ldr	r2, [pc, #460]	; (8029040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028e72:	f8b8 c000 	ldrh.w	ip, [r8]
 8028e76:	6810      	ldr	r0, [r2, #0]
 8028e78:	fa1f fe83 	uxth.w	lr, r3
 8028e7c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8028e80:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8028e84:	43db      	mvns	r3, r3
 8028e86:	b2db      	uxtb	r3, r3
 8028e88:	fb12 f20e 	smulbb	r2, r2, lr
 8028e8c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8028e90:	fb01 2103 	mla	r1, r1, r3, r2
 8028e94:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8028e98:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8028e9c:	b2c0      	uxtb	r0, r0
 8028e9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8028ea2:	fb1b fb0e 	smulbb	fp, fp, lr
 8028ea6:	b289      	uxth	r1, r1
 8028ea8:	fb10 fe0e 	smulbb	lr, r0, lr
 8028eac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028eb0:	fa5f fc8c 	uxtb.w	ip, ip
 8028eb4:	fb02 b203 	mla	r2, r2, r3, fp
 8028eb8:	1c48      	adds	r0, r1, #1
 8028eba:	fb0c e303 	mla	r3, ip, r3, lr
 8028ebe:	b292      	uxth	r2, r2
 8028ec0:	b29b      	uxth	r3, r3
 8028ec2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8028ec6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8028eca:	f102 0b01 	add.w	fp, r2, #1
 8028ece:	1c59      	adds	r1, r3, #1
 8028ed0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8028ed4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8028ed8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8028edc:	0952      	lsrs	r2, r2, #5
 8028ede:	4301      	orrs	r1, r0
 8028ee0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028ee4:	4311      	orrs	r1, r2
 8028ee6:	f8a8 1000 	strh.w	r1, [r8]
 8028eea:	e739      	b.n	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028eec:	f113 0b01 	adds.w	fp, r3, #1
 8028ef0:	f53f af36 	bmi.w	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028ef4:	45dc      	cmp	ip, fp
 8028ef6:	f6ff af33 	blt.w	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028efa:	f110 0b01 	adds.w	fp, r0, #1
 8028efe:	f53f af2f 	bmi.w	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f02:	45de      	cmp	lr, fp
 8028f04:	f6ff af2c 	blt.w	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f08:	9a08      	ldr	r2, [sp, #32]
 8028f0a:	9302      	str	r3, [sp, #8]
 8028f0c:	fa0f f38e 	sxth.w	r3, lr
 8028f10:	9301      	str	r3, [sp, #4]
 8028f12:	fa0f f38c 	sxth.w	r3, ip
 8028f16:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8028f1a:	9105      	str	r1, [sp, #20]
 8028f1c:	9300      	str	r3, [sp, #0]
 8028f1e:	463a      	mov	r2, r7
 8028f20:	4653      	mov	r3, sl
 8028f22:	4641      	mov	r1, r8
 8028f24:	9811      	ldr	r0, [sp, #68]	; 0x44
 8028f26:	f7ff fd73 	bl	8028a10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8028f2a:	e719      	b.n	8028d60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028f2c:	9906      	ldr	r1, [sp, #24]
 8028f2e:	1422      	asrs	r2, r4, #16
 8028f30:	1433      	asrs	r3, r6, #16
 8028f32:	fb01 2303 	mla	r3, r1, r3, r2
 8028f36:	085a      	lsrs	r2, r3, #1
 8028f38:	07d9      	lsls	r1, r3, #31
 8028f3a:	5cba      	ldrb	r2, [r7, r2]
 8028f3c:	bf54      	ite	pl
 8028f3e:	f002 020f 	andpl.w	r2, r2, #15
 8028f42:	1112      	asrmi	r2, r2, #4
 8028f44:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8028f48:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028f4c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8028f50:	b2d2      	uxtb	r2, r2
 8028f52:	2800      	cmp	r0, #0
 8028f54:	d062      	beq.n	802901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8028f56:	f103 0a01 	add.w	sl, r3, #1
 8028f5a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8028f5e:	f01a 0f01 	tst.w	sl, #1
 8028f62:	5c79      	ldrb	r1, [r7, r1]
 8028f64:	bf0c      	ite	eq
 8028f66:	f001 010f 	andeq.w	r1, r1, #15
 8028f6a:	1109      	asrne	r1, r1, #4
 8028f6c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f70:	b2c9      	uxtb	r1, r1
 8028f72:	910f      	str	r1, [sp, #60]	; 0x3c
 8028f74:	f1bc 0f00 	cmp.w	ip, #0
 8028f78:	d019      	beq.n	8028fae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8028f7a:	9908      	ldr	r1, [sp, #32]
 8028f7c:	440b      	add	r3, r1
 8028f7e:	0859      	lsrs	r1, r3, #1
 8028f80:	f013 0f01 	tst.w	r3, #1
 8028f84:	5c79      	ldrb	r1, [r7, r1]
 8028f86:	bf0c      	ite	eq
 8028f88:	f001 010f 	andeq.w	r1, r1, #15
 8028f8c:	1109      	asrne	r1, r1, #4
 8028f8e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028f92:	b2c9      	uxtb	r1, r1
 8028f94:	3301      	adds	r3, #1
 8028f96:	910b      	str	r1, [sp, #44]	; 0x2c
 8028f98:	0859      	lsrs	r1, r3, #1
 8028f9a:	07db      	lsls	r3, r3, #31
 8028f9c:	5c79      	ldrb	r1, [r7, r1]
 8028f9e:	bf54      	ite	pl
 8028fa0:	f001 010f 	andpl.w	r1, r1, #15
 8028fa4:	1109      	asrmi	r1, r1, #4
 8028fa6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8028faa:	b2c9      	uxtb	r1, r1
 8028fac:	9110      	str	r1, [sp, #64]	; 0x40
 8028fae:	b280      	uxth	r0, r0
 8028fb0:	fa1f fc8c 	uxth.w	ip, ip
 8028fb4:	fb00 f30c 	mul.w	r3, r0, ip
 8028fb8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8028fbc:	0100      	lsls	r0, r0, #4
 8028fbe:	fa1f fc8c 	uxth.w	ip, ip
 8028fc2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8028fc6:	eba1 010c 	sub.w	r1, r1, ip
 8028fca:	fa1f fa81 	uxth.w	sl, r1
 8028fce:	1ac0      	subs	r0, r0, r3
 8028fd0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028fd2:	b280      	uxth	r0, r0
 8028fd4:	4348      	muls	r0, r1
 8028fd6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8028fd8:	fb02 020a 	mla	r2, r2, sl, r0
 8028fdc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8028fe0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028fe2:	fb03 c302 	mla	r3, r3, r2, ip
 8028fe6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028fea:	2bff      	cmp	r3, #255	; 0xff
 8028fec:	d12c      	bne.n	8029048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8028fee:	4b14      	ldr	r3, [pc, #80]	; (8029040 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8028ff0:	681a      	ldr	r2, [r3, #0]
 8028ff2:	4b14      	ldr	r3, [pc, #80]	; (8029044 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8028ff4:	0951      	lsrs	r1, r2, #5
 8028ff6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8028ffa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8028ffe:	430b      	orrs	r3, r1
 8029000:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8029004:	4313      	orrs	r3, r2
 8029006:	f8ae 3000 	strh.w	r3, [lr]
 802900a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802900c:	441c      	add	r4, r3
 802900e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029010:	f10e 0e02 	add.w	lr, lr, #2
 8029014:	441e      	add	r6, r3
 8029016:	f108 38ff 	add.w	r8, r8, #4294967295
 802901a:	e6ce      	b.n	8028dba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802901c:	f1bc 0f00 	cmp.w	ip, #0
 8029020:	d0c5      	beq.n	8028fae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8029022:	9908      	ldr	r1, [sp, #32]
 8029024:	440b      	add	r3, r1
 8029026:	0859      	lsrs	r1, r3, #1
 8029028:	07db      	lsls	r3, r3, #31
 802902a:	5c79      	ldrb	r1, [r7, r1]
 802902c:	bf54      	ite	pl
 802902e:	f001 010f 	andpl.w	r1, r1, #15
 8029032:	1109      	asrmi	r1, r1, #4
 8029034:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029038:	b2c9      	uxtb	r1, r1
 802903a:	910b      	str	r1, [sp, #44]	; 0x2c
 802903c:	e7b7      	b.n	8028fae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802903e:	bf00      	nop
 8029040:	2001384c 	.word	0x2001384c
 8029044:	fffff800 	.word	0xfffff800
 8029048:	2b00      	cmp	r3, #0
 802904a:	d0de      	beq.n	802900a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802904c:	4a21      	ldr	r2, [pc, #132]	; (80290d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802904e:	f8be c000 	ldrh.w	ip, [lr]
 8029052:	6810      	ldr	r0, [r2, #0]
 8029054:	fa1f fa83 	uxth.w	sl, r3
 8029058:	ea4f 212c 	mov.w	r1, ip, asr #8
 802905c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8029060:	43db      	mvns	r3, r3
 8029062:	b2db      	uxtb	r3, r3
 8029064:	fb12 f20a 	smulbb	r2, r2, sl
 8029068:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802906c:	fb01 2103 	mla	r1, r1, r3, r2
 8029070:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8029074:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029078:	b2c0      	uxtb	r0, r0
 802907a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802907e:	fa5f fc8c 	uxtb.w	ip, ip
 8029082:	fb10 f00a 	smulbb	r0, r0, sl
 8029086:	fb0c 0003 	mla	r0, ip, r3, r0
 802908a:	b289      	uxth	r1, r1
 802908c:	fb1b fb0a 	smulbb	fp, fp, sl
 8029090:	b280      	uxth	r0, r0
 8029092:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029096:	fb02 b203 	mla	r2, r2, r3, fp
 802909a:	1c4b      	adds	r3, r1, #1
 802909c:	f100 0b01 	add.w	fp, r0, #1
 80290a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80290a4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80290a8:	b292      	uxth	r2, r2
 80290aa:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80290ae:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80290b2:	ea4b 0101 	orr.w	r1, fp, r1
 80290b6:	f102 0b01 	add.w	fp, r2, #1
 80290ba:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80290be:	0952      	lsrs	r2, r2, #5
 80290c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80290c4:	4311      	orrs	r1, r2
 80290c6:	f8ae 1000 	strh.w	r1, [lr]
 80290ca:	e79e      	b.n	802900a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80290cc:	b013      	add	sp, #76	; 0x4c
 80290ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80290d2:	bf00      	nop
 80290d4:	2001384c 	.word	0x2001384c

080290d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80290d8:	b570      	push	{r4, r5, r6, lr}
 80290da:	1208      	asrs	r0, r1, #8
 80290dc:	b29e      	uxth	r6, r3
 80290de:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80290e2:	1213      	asrs	r3, r2, #8
 80290e4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80290e8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80290ec:	fb13 f305 	smulbb	r3, r3, r5
 80290f0:	fb10 f006 	smulbb	r0, r0, r6
 80290f4:	4418      	add	r0, r3
 80290f6:	10cc      	asrs	r4, r1, #3
 80290f8:	10d3      	asrs	r3, r2, #3
 80290fa:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80290fe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8029102:	fb13 f305 	smulbb	r3, r3, r5
 8029106:	fb14 f406 	smulbb	r4, r4, r6
 802910a:	00c9      	lsls	r1, r1, #3
 802910c:	00d2      	lsls	r2, r2, #3
 802910e:	441c      	add	r4, r3
 8029110:	b2d2      	uxtb	r2, r2
 8029112:	b2cb      	uxtb	r3, r1
 8029114:	fb12 f205 	smulbb	r2, r2, r5
 8029118:	b280      	uxth	r0, r0
 802911a:	fb13 f306 	smulbb	r3, r3, r6
 802911e:	4413      	add	r3, r2
 8029120:	1c42      	adds	r2, r0, #1
 8029122:	b29b      	uxth	r3, r3
 8029124:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029128:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802912c:	1c58      	adds	r0, r3, #1
 802912e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029132:	b2a4      	uxth	r4, r4
 8029134:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029138:	4310      	orrs	r0, r2
 802913a:	1c62      	adds	r2, r4, #1
 802913c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029140:	0964      	lsrs	r4, r4, #5
 8029142:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8029146:	4320      	orrs	r0, r4
 8029148:	bd70      	pop	{r4, r5, r6, pc}
	...

0802914c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802914c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029150:	b08f      	sub	sp, #60	; 0x3c
 8029152:	461c      	mov	r4, r3
 8029154:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8029158:	9004      	str	r0, [sp, #16]
 802915a:	460d      	mov	r5, r1
 802915c:	4616      	mov	r6, r2
 802915e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8029160:	2f00      	cmp	r7, #0
 8029162:	f000 80f6 	beq.w	8029352 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8029166:	6820      	ldr	r0, [r4, #0]
 8029168:	6861      	ldr	r1, [r4, #4]
 802916a:	aa0a      	add	r2, sp, #40	; 0x28
 802916c:	c203      	stmia	r2!, {r0, r1}
 802916e:	6818      	ldr	r0, [r3, #0]
 8029170:	6859      	ldr	r1, [r3, #4]
 8029172:	aa0c      	add	r2, sp, #48	; 0x30
 8029174:	c203      	stmia	r2!, {r0, r1}
 8029176:	a80a      	add	r0, sp, #40	; 0x28
 8029178:	f7ef fa5e 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802917c:	4621      	mov	r1, r4
 802917e:	a80c      	add	r0, sp, #48	; 0x30
 8029180:	f7ef fa9e 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029184:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8029188:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802918c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8029190:	f002 0301 	and.w	r3, r2, #1
 8029194:	9306      	str	r3, [sp, #24]
 8029196:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802919a:	f003 0101 	and.w	r1, r3, #1
 802919e:	9105      	str	r1, [sp, #20]
 80291a0:	9805      	ldr	r0, [sp, #20]
 80291a2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80291a6:	4403      	add	r3, r0
 80291a8:	fb01 2303 	mla	r3, r1, r3, r2
 80291ac:	f04f 0802 	mov.w	r8, #2
 80291b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80291b4:	441d      	add	r5, r3
 80291b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80291ba:	441a      	add	r2, r3
 80291bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80291c0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80291c4:	4419      	add	r1, r3
 80291c6:	4b64      	ldr	r3, [pc, #400]	; (8029358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80291c8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80291cc:	6818      	ldr	r0, [r3, #0]
 80291ce:	6803      	ldr	r3, [r0, #0]
 80291d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80291d2:	4798      	blx	r3
 80291d4:	4a61      	ldr	r2, [pc, #388]	; (802935c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80291d6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80291da:	8813      	ldrh	r3, [r2, #0]
 80291dc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80291e0:	2fff      	cmp	r7, #255	; 0xff
 80291e2:	fb03 a404 	mla	r4, r3, r4, sl
 80291e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80291ea:	f106 0604 	add.w	r6, r6, #4
 80291ee:	4611      	mov	r1, r2
 80291f0:	fb03 fb0b 	mul.w	fp, r3, fp
 80291f4:	d06b      	beq.n	80292ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80291f6:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80291fa:	9303      	str	r3, [sp, #12]
 80291fc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8029200:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8029204:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8029208:	9b07      	ldr	r3, [sp, #28]
 802920a:	42a3      	cmp	r3, r4
 802920c:	f240 809c 	bls.w	8029348 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8029210:	9b06      	ldr	r3, [sp, #24]
 8029212:	2b00      	cmp	r3, #0
 8029214:	d039      	beq.n	802928a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8029216:	782b      	ldrb	r3, [r5, #0]
 8029218:	8822      	ldrh	r2, [r4, #0]
 802921a:	9804      	ldr	r0, [sp, #16]
 802921c:	f003 030f 	and.w	r3, r3, #15
 8029220:	f105 0801 	add.w	r8, r5, #1
 8029224:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8029228:	9b03      	ldr	r3, [sp, #12]
 802922a:	9300      	str	r3, [sp, #0]
 802922c:	463b      	mov	r3, r7
 802922e:	f7ff ff53 	bl	80290d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029232:	f824 0b02 	strh.w	r0, [r4], #2
 8029236:	f109 3bff 	add.w	fp, r9, #4294967295
 802923a:	f1bb 0f01 	cmp.w	fp, #1
 802923e:	46a2      	mov	sl, r4
 8029240:	f104 0404 	add.w	r4, r4, #4
 8029244:	dd24      	ble.n	8029290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8029246:	f898 3000 	ldrb.w	r3, [r8]
 802924a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802924e:	9804      	ldr	r0, [sp, #16]
 8029250:	091b      	lsrs	r3, r3, #4
 8029252:	f1ab 0b02 	sub.w	fp, fp, #2
 8029256:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802925a:	9b03      	ldr	r3, [sp, #12]
 802925c:	9300      	str	r3, [sp, #0]
 802925e:	463b      	mov	r3, r7
 8029260:	f7ff ff3a 	bl	80290d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029264:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029268:	f818 3b01 	ldrb.w	r3, [r8], #1
 802926c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8029270:	9804      	ldr	r0, [sp, #16]
 8029272:	f003 030f 	and.w	r3, r3, #15
 8029276:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802927a:	9b03      	ldr	r3, [sp, #12]
 802927c:	9300      	str	r3, [sp, #0]
 802927e:	463b      	mov	r3, r7
 8029280:	f7ff ff2a 	bl	80290d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8029284:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029288:	e7d7      	b.n	802923a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802928a:	46a8      	mov	r8, r5
 802928c:	46cb      	mov	fp, r9
 802928e:	e7d4      	b.n	802923a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8029290:	d10e      	bne.n	80292b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8029292:	f898 3000 	ldrb.w	r3, [r8]
 8029296:	f8ba 2000 	ldrh.w	r2, [sl]
 802929a:	9804      	ldr	r0, [sp, #16]
 802929c:	091b      	lsrs	r3, r3, #4
 802929e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80292a2:	9b03      	ldr	r3, [sp, #12]
 80292a4:	9300      	str	r3, [sp, #0]
 80292a6:	463b      	mov	r3, r7
 80292a8:	f7ff ff16 	bl	80290d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80292ac:	f82a 0b02 	strh.w	r0, [sl], #2
 80292b0:	9b08      	ldr	r3, [sp, #32]
 80292b2:	9a05      	ldr	r2, [sp, #20]
 80292b4:	881c      	ldrh	r4, [r3, #0]
 80292b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80292ba:	eba4 0409 	sub.w	r4, r4, r9
 80292be:	4413      	add	r3, r2
 80292c0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80292c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80292c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80292ca:	441d      	add	r5, r3
 80292cc:	e79c      	b.n	8029208 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80292ce:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80292d2:	45a3      	cmp	fp, r4
 80292d4:	d938      	bls.n	8029348 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80292d6:	9b06      	ldr	r3, [sp, #24]
 80292d8:	b1f3      	cbz	r3, 8029318 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80292da:	782b      	ldrb	r3, [r5, #0]
 80292dc:	f003 030f 	and.w	r3, r3, #15
 80292e0:	1c6a      	adds	r2, r5, #1
 80292e2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80292e6:	8023      	strh	r3, [r4, #0]
 80292e8:	f109 30ff 	add.w	r0, r9, #4294967295
 80292ec:	3402      	adds	r4, #2
 80292ee:	2801      	cmp	r0, #1
 80292f0:	4623      	mov	r3, r4
 80292f2:	f104 0404 	add.w	r4, r4, #4
 80292f6:	dd12      	ble.n	802931e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80292f8:	7813      	ldrb	r3, [r2, #0]
 80292fa:	091b      	lsrs	r3, r3, #4
 80292fc:	3802      	subs	r0, #2
 80292fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029302:	f824 3c04 	strh.w	r3, [r4, #-4]
 8029306:	f812 3b01 	ldrb.w	r3, [r2], #1
 802930a:	f003 030f 	and.w	r3, r3, #15
 802930e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8029312:	f824 3c02 	strh.w	r3, [r4, #-2]
 8029316:	e7ea      	b.n	80292ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8029318:	462a      	mov	r2, r5
 802931a:	4648      	mov	r0, r9
 802931c:	e7e7      	b.n	80292ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802931e:	d106      	bne.n	802932e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8029320:	7812      	ldrb	r2, [r2, #0]
 8029322:	0912      	lsrs	r2, r2, #4
 8029324:	3302      	adds	r3, #2
 8029326:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802932a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802932e:	880c      	ldrh	r4, [r1, #0]
 8029330:	9a05      	ldr	r2, [sp, #20]
 8029332:	eba4 0409 	sub.w	r4, r4, r9
 8029336:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802933a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802933e:	4413      	add	r3, r2
 8029340:	fb93 f3f8 	sdiv	r3, r3, r8
 8029344:	441d      	add	r5, r3
 8029346:	e7c4      	b.n	80292d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8029348:	4b03      	ldr	r3, [pc, #12]	; (8029358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802934a:	6818      	ldr	r0, [r3, #0]
 802934c:	6803      	ldr	r3, [r0, #0]
 802934e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029350:	4798      	blx	r3
 8029352:	b00f      	add	sp, #60	; 0x3c
 8029354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029358:	2001383c 	.word	0x2001383c
 802935c:	20013836 	.word	0x20013836

08029360 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8029360:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029362:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8029366:	2dff      	cmp	r5, #255	; 0xff
 8029368:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802936c:	d10c      	bne.n	8029388 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802936e:	2bff      	cmp	r3, #255	; 0xff
 8029370:	d10a      	bne.n	8029388 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8029372:	4b25      	ldr	r3, [pc, #148]	; (8029408 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8029374:	0948      	lsrs	r0, r1, #5
 8029376:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802937a:	403b      	ands	r3, r7
 802937c:	4318      	orrs	r0, r3
 802937e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8029382:	4308      	orrs	r0, r1
 8029384:	b280      	uxth	r0, r0
 8029386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029388:	fb15 f503 	smulbb	r5, r5, r3
 802938c:	b2ab      	uxth	r3, r5
 802938e:	1c5d      	adds	r5, r3, #1
 8029390:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8029394:	1214      	asrs	r4, r2, #8
 8029396:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802939a:	fa1f fc85 	uxth.w	ip, r5
 802939e:	10d6      	asrs	r6, r2, #3
 80293a0:	00d0      	lsls	r0, r2, #3
 80293a2:	43ed      	mvns	r5, r5
 80293a4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80293a8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80293ac:	b2eb      	uxtb	r3, r5
 80293ae:	b2c0      	uxtb	r0, r0
 80293b0:	fb12 f20c 	smulbb	r2, r2, ip
 80293b4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80293b8:	fb04 2403 	mla	r4, r4, r3, r2
 80293bc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80293c0:	b2c8      	uxtb	r0, r1
 80293c2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80293c6:	b2fd      	uxtb	r5, r7
 80293c8:	fb10 f00c 	smulbb	r0, r0, ip
 80293cc:	b2a4      	uxth	r4, r4
 80293ce:	fb02 0003 	mla	r0, r2, r3, r0
 80293d2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80293d6:	fb15 f50c 	smulbb	r5, r5, ip
 80293da:	fb06 5503 	mla	r5, r6, r3, r5
 80293de:	b283      	uxth	r3, r0
 80293e0:	1c60      	adds	r0, r4, #1
 80293e2:	b2ad      	uxth	r5, r5
 80293e4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80293e8:	1c58      	adds	r0, r3, #1
 80293ea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80293ee:	1c6b      	adds	r3, r5, #1
 80293f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80293f4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80293f8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80293fc:	096d      	lsrs	r5, r5, #5
 80293fe:	4320      	orrs	r0, r4
 8029400:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029404:	4328      	orrs	r0, r5
 8029406:	e7be      	b.n	8029386 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8029408:	00fff800 	.word	0x00fff800

0802940c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802940c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029410:	461c      	mov	r4, r3
 8029412:	b08d      	sub	sp, #52	; 0x34
 8029414:	460d      	mov	r5, r1
 8029416:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8029418:	6861      	ldr	r1, [r4, #4]
 802941a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802941e:	4680      	mov	r8, r0
 8029420:	6820      	ldr	r0, [r4, #0]
 8029422:	4616      	mov	r6, r2
 8029424:	aa08      	add	r2, sp, #32
 8029426:	c203      	stmia	r2!, {r0, r1}
 8029428:	6818      	ldr	r0, [r3, #0]
 802942a:	6859      	ldr	r1, [r3, #4]
 802942c:	aa0a      	add	r2, sp, #40	; 0x28
 802942e:	c203      	stmia	r2!, {r0, r1}
 8029430:	a808      	add	r0, sp, #32
 8029432:	f7ef f901 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029436:	4621      	mov	r1, r4
 8029438:	a80a      	add	r0, sp, #40	; 0x28
 802943a:	f7ef f941 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802943e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8029442:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8029446:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802944a:	f002 0301 	and.w	r3, r2, #1
 802944e:	9303      	str	r3, [sp, #12]
 8029450:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8029454:	f003 0101 	and.w	r1, r3, #1
 8029458:	9102      	str	r1, [sp, #8]
 802945a:	9802      	ldr	r0, [sp, #8]
 802945c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8029460:	4403      	add	r3, r0
 8029462:	fb01 2303 	mla	r3, r1, r3, r2
 8029466:	f04f 0a02 	mov.w	sl, #2
 802946a:	fb93 f3fa 	sdiv	r3, r3, sl
 802946e:	441d      	add	r5, r3
 8029470:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8029474:	441a      	add	r2, r3
 8029476:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802947a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802947e:	4a3f      	ldr	r2, [pc, #252]	; (802957c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8029480:	9205      	str	r2, [sp, #20]
 8029482:	4419      	add	r1, r3
 8029484:	6810      	ldr	r0, [r2, #0]
 8029486:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802948a:	6803      	ldr	r3, [r0, #0]
 802948c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802948e:	4798      	blx	r3
 8029490:	4b3b      	ldr	r3, [pc, #236]	; (8029580 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8029492:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8029496:	8819      	ldrh	r1, [r3, #0]
 8029498:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802949c:	fb01 c404 	mla	r4, r1, r4, ip
 80294a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80294a4:	434f      	muls	r7, r1
 80294a6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80294aa:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80294ae:	3604      	adds	r6, #4
 80294b0:	9204      	str	r2, [sp, #16]
 80294b2:	9b04      	ldr	r3, [sp, #16]
 80294b4:	429c      	cmp	r4, r3
 80294b6:	d258      	bcs.n	802956a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80294b8:	9b03      	ldr	r3, [sp, #12]
 80294ba:	2b00      	cmp	r3, #0
 80294bc:	d034      	beq.n	8029528 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80294be:	782b      	ldrb	r3, [r5, #0]
 80294c0:	f003 030f 	and.w	r3, r3, #15
 80294c4:	1c6f      	adds	r7, r5, #1
 80294c6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294ca:	0e0b      	lsrs	r3, r1, #24
 80294cc:	d006      	beq.n	80294dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80294ce:	8822      	ldrh	r2, [r4, #0]
 80294d0:	9300      	str	r3, [sp, #0]
 80294d2:	4640      	mov	r0, r8
 80294d4:	464b      	mov	r3, r9
 80294d6:	f7ff ff43 	bl	8029360 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80294da:	8020      	strh	r0, [r4, #0]
 80294dc:	3402      	adds	r4, #2
 80294de:	f10b 3aff 	add.w	sl, fp, #4294967295
 80294e2:	f1ba 0f01 	cmp.w	sl, #1
 80294e6:	dd22      	ble.n	802952e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80294e8:	783b      	ldrb	r3, [r7, #0]
 80294ea:	091b      	lsrs	r3, r3, #4
 80294ec:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80294f0:	0e0b      	lsrs	r3, r1, #24
 80294f2:	d006      	beq.n	8029502 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80294f4:	8822      	ldrh	r2, [r4, #0]
 80294f6:	9300      	str	r3, [sp, #0]
 80294f8:	4640      	mov	r0, r8
 80294fa:	464b      	mov	r3, r9
 80294fc:	f7ff ff30 	bl	8029360 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029500:	8020      	strh	r0, [r4, #0]
 8029502:	f817 3b01 	ldrb.w	r3, [r7], #1
 8029506:	f003 030f 	and.w	r3, r3, #15
 802950a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802950e:	0e0b      	lsrs	r3, r1, #24
 8029510:	d006      	beq.n	8029520 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8029512:	8862      	ldrh	r2, [r4, #2]
 8029514:	9300      	str	r3, [sp, #0]
 8029516:	4640      	mov	r0, r8
 8029518:	464b      	mov	r3, r9
 802951a:	f7ff ff21 	bl	8029360 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802951e:	8060      	strh	r0, [r4, #2]
 8029520:	3404      	adds	r4, #4
 8029522:	f1aa 0a02 	sub.w	sl, sl, #2
 8029526:	e7dc      	b.n	80294e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8029528:	462f      	mov	r7, r5
 802952a:	46da      	mov	sl, fp
 802952c:	e7d9      	b.n	80294e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802952e:	d10d      	bne.n	802954c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8029530:	783b      	ldrb	r3, [r7, #0]
 8029532:	091b      	lsrs	r3, r3, #4
 8029534:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8029538:	0e0b      	lsrs	r3, r1, #24
 802953a:	d006      	beq.n	802954a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802953c:	8822      	ldrh	r2, [r4, #0]
 802953e:	9300      	str	r3, [sp, #0]
 8029540:	4640      	mov	r0, r8
 8029542:	464b      	mov	r3, r9
 8029544:	f7ff ff0c 	bl	8029360 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8029548:	8020      	strh	r0, [r4, #0]
 802954a:	3402      	adds	r4, #2
 802954c:	9b06      	ldr	r3, [sp, #24]
 802954e:	9a02      	ldr	r2, [sp, #8]
 8029550:	881b      	ldrh	r3, [r3, #0]
 8029552:	eba3 030b 	sub.w	r3, r3, fp
 8029556:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802955a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802955e:	4413      	add	r3, r2
 8029560:	9a07      	ldr	r2, [sp, #28]
 8029562:	fb93 f3f2 	sdiv	r3, r3, r2
 8029566:	441d      	add	r5, r3
 8029568:	e7a3      	b.n	80294b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802956a:	9b05      	ldr	r3, [sp, #20]
 802956c:	6818      	ldr	r0, [r3, #0]
 802956e:	6803      	ldr	r3, [r0, #0]
 8029570:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029572:	4798      	blx	r3
 8029574:	b00d      	add	sp, #52	; 0x34
 8029576:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802957a:	bf00      	nop
 802957c:	2001383c 	.word	0x2001383c
 8029580:	20013836 	.word	0x20013836

08029584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8029584:	b570      	push	{r4, r5, r6, lr}
 8029586:	1214      	asrs	r4, r2, #8
 8029588:	788d      	ldrb	r5, [r1, #2]
 802958a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802958e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029592:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8029596:	fb15 f503 	smulbb	r5, r5, r3
 802959a:	fb04 5506 	mla	r5, r4, r6, r5
 802959e:	10d0      	asrs	r0, r2, #3
 80295a0:	784c      	ldrb	r4, [r1, #1]
 80295a2:	7809      	ldrb	r1, [r1, #0]
 80295a4:	00d2      	lsls	r2, r2, #3
 80295a6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80295aa:	b2d2      	uxtb	r2, r2
 80295ac:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80295b0:	fb14 f403 	smulbb	r4, r4, r3
 80295b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80295b8:	fb11 f303 	smulbb	r3, r1, r3
 80295bc:	fb00 4406 	mla	r4, r0, r6, r4
 80295c0:	fb02 3306 	mla	r3, r2, r6, r3
 80295c4:	b2ad      	uxth	r5, r5
 80295c6:	b29b      	uxth	r3, r3
 80295c8:	b2a4      	uxth	r4, r4
 80295ca:	1c68      	adds	r0, r5, #1
 80295cc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80295d0:	1c62      	adds	r2, r4, #1
 80295d2:	1c58      	adds	r0, r3, #1
 80295d4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80295d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80295dc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80295e0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80295e4:	0964      	lsrs	r4, r4, #5
 80295e6:	4328      	orrs	r0, r5
 80295e8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80295ec:	4320      	orrs	r0, r4
 80295ee:	bd70      	pop	{r4, r5, r6, pc}

080295f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80295f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80295f4:	b08f      	sub	sp, #60	; 0x3c
 80295f6:	461c      	mov	r4, r3
 80295f8:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80295fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80295fe:	4682      	mov	sl, r0
 8029600:	460e      	mov	r6, r1
 8029602:	4615      	mov	r5, r2
 8029604:	2f00      	cmp	r7, #0
 8029606:	f000 8142 	beq.w	802988e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802960a:	6820      	ldr	r0, [r4, #0]
 802960c:	6861      	ldr	r1, [r4, #4]
 802960e:	aa0a      	add	r2, sp, #40	; 0x28
 8029610:	c203      	stmia	r2!, {r0, r1}
 8029612:	6818      	ldr	r0, [r3, #0]
 8029614:	6859      	ldr	r1, [r3, #4]
 8029616:	aa0c      	add	r2, sp, #48	; 0x30
 8029618:	c203      	stmia	r2!, {r0, r1}
 802961a:	a80a      	add	r0, sp, #40	; 0x28
 802961c:	f7ef f80c 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029620:	4621      	mov	r1, r4
 8029622:	a80c      	add	r0, sp, #48	; 0x30
 8029624:	f7ef f84c 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029628:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802962c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8029630:	f002 0301 	and.w	r3, r2, #1
 8029634:	9306      	str	r3, [sp, #24]
 8029636:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802963a:	f003 0101 	and.w	r1, r3, #1
 802963e:	9105      	str	r1, [sp, #20]
 8029640:	9805      	ldr	r0, [sp, #20]
 8029642:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8029646:	4403      	add	r3, r0
 8029648:	fb01 2303 	mla	r3, r1, r3, r2
 802964c:	f04f 0802 	mov.w	r8, #2
 8029650:	fb93 f3f8 	sdiv	r3, r3, r8
 8029654:	441e      	add	r6, r3
 8029656:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802965a:	441a      	add	r2, r3
 802965c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8029660:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8029664:	4419      	add	r1, r3
 8029666:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802966a:	9303      	str	r3, [sp, #12]
 802966c:	4b89      	ldr	r3, [pc, #548]	; (8029894 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802966e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8029672:	6818      	ldr	r0, [r3, #0]
 8029674:	6803      	ldr	r3, [r0, #0]
 8029676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8029678:	4798      	blx	r3
 802967a:	4a87      	ldr	r2, [pc, #540]	; (8029898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802967c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8029680:	8813      	ldrh	r3, [r2, #0]
 8029682:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8029686:	2fff      	cmp	r7, #255	; 0xff
 8029688:	fb03 9404 	mla	r4, r3, r4, r9
 802968c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8029690:	f105 0504 	add.w	r5, r5, #4
 8029694:	4694      	mov	ip, r2
 8029696:	fb03 f30b 	mul.w	r3, r3, fp
 802969a:	d071      	beq.n	8029780 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802969c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80296a0:	43f9      	mvns	r1, r7
 80296a2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80296a6:	b2c9      	uxtb	r1, r1
 80296a8:	9104      	str	r1, [sp, #16]
 80296aa:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80296ae:	9b07      	ldr	r3, [sp, #28]
 80296b0:	42a3      	cmp	r3, r4
 80296b2:	f240 80e7 	bls.w	8029884 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80296b6:	9b06      	ldr	r3, [sp, #24]
 80296b8:	2b00      	cmp	r3, #0
 80296ba:	d03d      	beq.n	8029738 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80296bc:	7831      	ldrb	r1, [r6, #0]
 80296be:	9b04      	ldr	r3, [sp, #16]
 80296c0:	8822      	ldrh	r2, [r4, #0]
 80296c2:	9300      	str	r3, [sp, #0]
 80296c4:	f001 010f 	and.w	r1, r1, #15
 80296c8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80296cc:	463b      	mov	r3, r7
 80296ce:	4429      	add	r1, r5
 80296d0:	4650      	mov	r0, sl
 80296d2:	f7ff ff57 	bl	8029584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80296d6:	9b03      	ldr	r3, [sp, #12]
 80296d8:	f824 0b02 	strh.w	r0, [r4], #2
 80296dc:	f106 0801 	add.w	r8, r6, #1
 80296e0:	f103 3bff 	add.w	fp, r3, #4294967295
 80296e4:	f1bb 0f01 	cmp.w	fp, #1
 80296e8:	46a1      	mov	r9, r4
 80296ea:	f104 0404 	add.w	r4, r4, #4
 80296ee:	dd27      	ble.n	8029740 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80296f0:	f898 1000 	ldrb.w	r1, [r8]
 80296f4:	9b04      	ldr	r3, [sp, #16]
 80296f6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80296fa:	9300      	str	r3, [sp, #0]
 80296fc:	0909      	lsrs	r1, r1, #4
 80296fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029702:	463b      	mov	r3, r7
 8029704:	4429      	add	r1, r5
 8029706:	4650      	mov	r0, sl
 8029708:	f7ff ff3c 	bl	8029584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802970c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8029710:	f818 1b01 	ldrb.w	r1, [r8], #1
 8029714:	9b04      	ldr	r3, [sp, #16]
 8029716:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802971a:	9300      	str	r3, [sp, #0]
 802971c:	f001 010f 	and.w	r1, r1, #15
 8029720:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029724:	463b      	mov	r3, r7
 8029726:	4429      	add	r1, r5
 8029728:	4650      	mov	r0, sl
 802972a:	f7ff ff2b 	bl	8029584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802972e:	f1ab 0b02 	sub.w	fp, fp, #2
 8029732:	f824 0c02 	strh.w	r0, [r4, #-2]
 8029736:	e7d5      	b.n	80296e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029738:	46b0      	mov	r8, r6
 802973a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802973e:	e7d1      	b.n	80296e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8029740:	d10f      	bne.n	8029762 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8029742:	f898 1000 	ldrb.w	r1, [r8]
 8029746:	9b04      	ldr	r3, [sp, #16]
 8029748:	f8b9 2000 	ldrh.w	r2, [r9]
 802974c:	9300      	str	r3, [sp, #0]
 802974e:	0909      	lsrs	r1, r1, #4
 8029750:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8029754:	463b      	mov	r3, r7
 8029756:	4429      	add	r1, r5
 8029758:	4650      	mov	r0, sl
 802975a:	f7ff ff13 	bl	8029584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802975e:	f829 0b02 	strh.w	r0, [r9], #2
 8029762:	9b08      	ldr	r3, [sp, #32]
 8029764:	9a05      	ldr	r2, [sp, #20]
 8029766:	881c      	ldrh	r4, [r3, #0]
 8029768:	9b03      	ldr	r3, [sp, #12]
 802976a:	1ae4      	subs	r4, r4, r3
 802976c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8029770:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8029774:	4413      	add	r3, r2
 8029776:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8029778:	fb93 f3f2 	sdiv	r3, r3, r2
 802977c:	441e      	add	r6, r3
 802977e:	e796      	b.n	80296ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8029780:	4f46      	ldr	r7, [pc, #280]	; (802989c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8029782:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8029786:	42a3      	cmp	r3, r4
 8029788:	d97c      	bls.n	8029884 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802978a:	9a06      	ldr	r2, [sp, #24]
 802978c:	2a00      	cmp	r2, #0
 802978e:	d054      	beq.n	802983a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8029790:	7830      	ldrb	r0, [r6, #0]
 8029792:	f000 000f 	and.w	r0, r0, #15
 8029796:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802979a:	eb05 0e00 	add.w	lr, r5, r0
 802979e:	5c28      	ldrb	r0, [r5, r0]
 80297a0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80297a4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80297a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80297ac:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80297b0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80297b4:	ea42 020e 	orr.w	r2, r2, lr
 80297b8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80297bc:	f824 2b02 	strh.w	r2, [r4], #2
 80297c0:	9a03      	ldr	r2, [sp, #12]
 80297c2:	1c71      	adds	r1, r6, #1
 80297c4:	f102 3eff 	add.w	lr, r2, #4294967295
 80297c8:	f1be 0f01 	cmp.w	lr, #1
 80297cc:	4620      	mov	r0, r4
 80297ce:	f104 0404 	add.w	r4, r4, #4
 80297d2:	dd36      	ble.n	8029842 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80297d4:	7808      	ldrb	r0, [r1, #0]
 80297d6:	0900      	lsrs	r0, r0, #4
 80297d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80297dc:	eb05 0a00 	add.w	sl, r5, r0
 80297e0:	f1ae 0e02 	sub.w	lr, lr, #2
 80297e4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80297e8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80297ec:	00d2      	lsls	r2, r2, #3
 80297ee:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80297f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80297f6:	ea49 0202 	orr.w	r2, r9, r2
 80297fa:	f815 9000 	ldrb.w	r9, [r5, r0]
 80297fe:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029802:	f824 2c04 	strh.w	r2, [r4, #-4]
 8029806:	f811 0b01 	ldrb.w	r0, [r1], #1
 802980a:	f000 000f 	and.w	r0, r0, #15
 802980e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8029812:	eb05 0a00 	add.w	sl, r5, r0
 8029816:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802981a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802981e:	00d2      	lsls	r2, r2, #3
 8029820:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8029824:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029828:	ea49 0202 	orr.w	r2, r9, r2
 802982c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8029830:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8029834:	f824 2c02 	strh.w	r2, [r4, #-2]
 8029838:	e7c6      	b.n	80297c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802983a:	4631      	mov	r1, r6
 802983c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8029840:	e7c2      	b.n	80297c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8029842:	d111      	bne.n	8029868 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8029844:	7809      	ldrb	r1, [r1, #0]
 8029846:	0909      	lsrs	r1, r1, #4
 8029848:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802984c:	186c      	adds	r4, r5, r1
 802984e:	5c69      	ldrb	r1, [r5, r1]
 8029850:	78a2      	ldrb	r2, [r4, #2]
 8029852:	7864      	ldrb	r4, [r4, #1]
 8029854:	00e4      	lsls	r4, r4, #3
 8029856:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802985a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802985e:	4322      	orrs	r2, r4
 8029860:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8029864:	f820 2b02 	strh.w	r2, [r0], #2
 8029868:	9a03      	ldr	r2, [sp, #12]
 802986a:	f8bc 4000 	ldrh.w	r4, [ip]
 802986e:	9905      	ldr	r1, [sp, #20]
 8029870:	1aa4      	subs	r4, r4, r2
 8029872:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8029876:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802987a:	440a      	add	r2, r1
 802987c:	fb92 f2f8 	sdiv	r2, r2, r8
 8029880:	4416      	add	r6, r2
 8029882:	e780      	b.n	8029786 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8029884:	4b03      	ldr	r3, [pc, #12]	; (8029894 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8029886:	6818      	ldr	r0, [r3, #0]
 8029888:	6803      	ldr	r3, [r0, #0]
 802988a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802988c:	4798      	blx	r3
 802988e:	b00f      	add	sp, #60	; 0x3c
 8029890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029894:	2001383c 	.word	0x2001383c
 8029898:	20013836 	.word	0x20013836
 802989c:	fffff800 	.word	0xfffff800

080298a0 <CRC_Lock>:
 80298a0:	b530      	push	{r4, r5, lr}
 80298a2:	4a20      	ldr	r2, [pc, #128]	; (8029924 <CRC_Lock+0x84>)
 80298a4:	6813      	ldr	r3, [r2, #0]
 80298a6:	f023 0301 	bic.w	r3, r3, #1
 80298aa:	6013      	str	r3, [r2, #0]
 80298ac:	4b1e      	ldr	r3, [pc, #120]	; (8029928 <CRC_Lock+0x88>)
 80298ae:	681a      	ldr	r2, [r3, #0]
 80298b0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80298b4:	4022      	ands	r2, r4
 80298b6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80298ba:	42aa      	cmp	r2, r5
 80298bc:	d005      	beq.n	80298ca <CRC_Lock+0x2a>
 80298be:	681b      	ldr	r3, [r3, #0]
 80298c0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80298c4:	4023      	ands	r3, r4
 80298c6:	4293      	cmp	r3, r2
 80298c8:	d124      	bne.n	8029914 <CRC_Lock+0x74>
 80298ca:	4b18      	ldr	r3, [pc, #96]	; (802992c <CRC_Lock+0x8c>)
 80298cc:	681b      	ldr	r3, [r3, #0]
 80298ce:	bb0b      	cbnz	r3, 8029914 <CRC_Lock+0x74>
 80298d0:	4b17      	ldr	r3, [pc, #92]	; (8029930 <CRC_Lock+0x90>)
 80298d2:	681a      	ldr	r2, [r3, #0]
 80298d4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298d8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80298dc:	d00d      	beq.n	80298fa <CRC_Lock+0x5a>
 80298de:	681a      	ldr	r2, [r3, #0]
 80298e0:	f240 4483 	movw	r4, #1155	; 0x483
 80298e4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80298e8:	42a2      	cmp	r2, r4
 80298ea:	d006      	beq.n	80298fa <CRC_Lock+0x5a>
 80298ec:	681b      	ldr	r3, [r3, #0]
 80298ee:	f240 4285 	movw	r2, #1157	; 0x485
 80298f2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80298f6:	4293      	cmp	r3, r2
 80298f8:	d10c      	bne.n	8029914 <CRC_Lock+0x74>
 80298fa:	4b0e      	ldr	r3, [pc, #56]	; (8029934 <CRC_Lock+0x94>)
 80298fc:	2201      	movs	r2, #1
 80298fe:	601a      	str	r2, [r3, #0]
 8029900:	681a      	ldr	r2, [r3, #0]
 8029902:	2a00      	cmp	r2, #0
 8029904:	d1fc      	bne.n	8029900 <CRC_Lock+0x60>
 8029906:	4b0c      	ldr	r3, [pc, #48]	; (8029938 <CRC_Lock+0x98>)
 8029908:	6018      	str	r0, [r3, #0]
 802990a:	6818      	ldr	r0, [r3, #0]
 802990c:	1a43      	subs	r3, r0, r1
 802990e:	4258      	negs	r0, r3
 8029910:	4158      	adcs	r0, r3
 8029912:	bd30      	pop	{r4, r5, pc}
 8029914:	4b09      	ldr	r3, [pc, #36]	; (802993c <CRC_Lock+0x9c>)
 8029916:	2201      	movs	r2, #1
 8029918:	601a      	str	r2, [r3, #0]
 802991a:	681a      	ldr	r2, [r3, #0]
 802991c:	2a00      	cmp	r2, #0
 802991e:	d1fc      	bne.n	802991a <CRC_Lock+0x7a>
 8029920:	4b07      	ldr	r3, [pc, #28]	; (8029940 <CRC_Lock+0xa0>)
 8029922:	e7f1      	b.n	8029908 <CRC_Lock+0x68>
 8029924:	e0002000 	.word	0xe0002000
 8029928:	e000ed00 	.word	0xe000ed00
 802992c:	e0042000 	.word	0xe0042000
 8029930:	5c001000 	.word	0x5c001000
 8029934:	58024c08 	.word	0x58024c08
 8029938:	58024c00 	.word	0x58024c00
 802993c:	40023008 	.word	0x40023008
 8029940:	40023000 	.word	0x40023000

08029944 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8029944:	6101      	str	r1, [r0, #16]
 8029946:	4770      	bx	lr

08029948 <_ZN8touchgfx8Gestures4tickEv>:
 8029948:	7b83      	ldrb	r3, [r0, #14]
 802994a:	b14b      	cbz	r3, 8029960 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802994c:	8903      	ldrh	r3, [r0, #8]
 802994e:	3301      	adds	r3, #1
 8029950:	b29b      	uxth	r3, r3
 8029952:	2b07      	cmp	r3, #7
 8029954:	8103      	strh	r3, [r0, #8]
 8029956:	bf81      	itttt	hi
 8029958:	2300      	movhi	r3, #0
 802995a:	8143      	strhhi	r3, [r0, #10]
 802995c:	8183      	strhhi	r3, [r0, #12]
 802995e:	7383      	strbhi	r3, [r0, #14]
 8029960:	4770      	bx	lr
	...

08029964 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8029964:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8029968:	4698      	mov	r8, r3
 802996a:	8883      	ldrh	r3, [r0, #4]
 802996c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029970:	eba8 0303 	sub.w	r3, r8, r3
 8029974:	b21b      	sxth	r3, r3
 8029976:	4604      	mov	r4, r0
 8029978:	2b00      	cmp	r3, #0
 802997a:	4617      	mov	r7, r2
 802997c:	4a18      	ldr	r2, [pc, #96]	; (80299e0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802997e:	9200      	str	r2, [sp, #0]
 8029980:	bfb8      	it	lt
 8029982:	425b      	neglt	r3, r3
 8029984:	8aa2      	ldrh	r2, [r4, #20]
 8029986:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802998a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802998e:	b21b      	sxth	r3, r3
 8029990:	460e      	mov	r6, r1
 8029992:	4293      	cmp	r3, r2
 8029994:	88c1      	ldrh	r1, [r0, #6]
 8029996:	f8ad 1008 	strh.w	r1, [sp, #8]
 802999a:	f04f 0000 	mov.w	r0, #0
 802999e:	f88d 0004 	strb.w	r0, [sp, #4]
 80299a2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80299a6:	dc07      	bgt.n	80299b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80299a8:	1a69      	subs	r1, r5, r1
 80299aa:	b209      	sxth	r1, r1
 80299ac:	2900      	cmp	r1, #0
 80299ae:	bfb8      	it	lt
 80299b0:	4249      	neglt	r1, r1
 80299b2:	b209      	sxth	r1, r1
 80299b4:	428a      	cmp	r2, r1
 80299b6:	da10      	bge.n	80299da <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80299b8:	6920      	ldr	r0, [r4, #16]
 80299ba:	6803      	ldr	r3, [r0, #0]
 80299bc:	4669      	mov	r1, sp
 80299be:	685b      	ldr	r3, [r3, #4]
 80299c0:	4798      	blx	r3
 80299c2:	eba8 0606 	sub.w	r6, r8, r6
 80299c6:	2300      	movs	r3, #0
 80299c8:	1bef      	subs	r7, r5, r7
 80299ca:	2001      	movs	r0, #1
 80299cc:	8123      	strh	r3, [r4, #8]
 80299ce:	8166      	strh	r6, [r4, #10]
 80299d0:	81a7      	strh	r7, [r4, #12]
 80299d2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80299d6:	80e5      	strh	r5, [r4, #6]
 80299d8:	73a0      	strb	r0, [r4, #14]
 80299da:	b004      	add	sp, #16
 80299dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80299e0:	08031eb4 	.word	0x08031eb4

080299e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80299e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80299e6:	461e      	mov	r6, r3
 80299e8:	1e4b      	subs	r3, r1, #1
 80299ea:	2b01      	cmp	r3, #1
 80299ec:	b085      	sub	sp, #20
 80299ee:	4604      	mov	r4, r0
 80299f0:	460d      	mov	r5, r1
 80299f2:	4617      	mov	r7, r2
 80299f4:	d84b      	bhi.n	8029a8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80299f6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80299fa:	1cd3      	adds	r3, r2, #3
 80299fc:	b29b      	uxth	r3, r3
 80299fe:	2b06      	cmp	r3, #6
 8029a00:	d916      	bls.n	8029a30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8029a02:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8029aa4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a06:	f8cd c004 	str.w	ip, [sp, #4]
 8029a0a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a0e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a12:	6900      	ldr	r0, [r0, #16]
 8029a14:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a18:	f04f 0c00 	mov.w	ip, #0
 8029a1c:	f88d c008 	strb.w	ip, [sp, #8]
 8029a20:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a24:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a28:	6803      	ldr	r3, [r0, #0]
 8029a2a:	a901      	add	r1, sp, #4
 8029a2c:	689b      	ldr	r3, [r3, #8]
 8029a2e:	4798      	blx	r3
 8029a30:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8029a34:	1cd3      	adds	r3, r2, #3
 8029a36:	b29b      	uxth	r3, r3
 8029a38:	2b06      	cmp	r3, #6
 8029a3a:	d916      	bls.n	8029a6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a3c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8029aa4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8029a40:	f8cd c004 	str.w	ip, [sp, #4]
 8029a44:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8029a48:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8029a4c:	6920      	ldr	r0, [r4, #16]
 8029a4e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8029a52:	f04f 0c01 	mov.w	ip, #1
 8029a56:	f88d c008 	strb.w	ip, [sp, #8]
 8029a5a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8029a5e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a62:	6803      	ldr	r3, [r0, #0]
 8029a64:	a901      	add	r1, sp, #4
 8029a66:	689b      	ldr	r3, [r3, #8]
 8029a68:	4798      	blx	r3
 8029a6a:	4b0d      	ldr	r3, [pc, #52]	; (8029aa0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8029a6c:	9301      	str	r3, [sp, #4]
 8029a6e:	6920      	ldr	r0, [r4, #16]
 8029a70:	f88d 5008 	strb.w	r5, [sp, #8]
 8029a74:	2300      	movs	r3, #0
 8029a76:	f8ad 700a 	strh.w	r7, [sp, #10]
 8029a7a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8029a7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8029a82:	6803      	ldr	r3, [r0, #0]
 8029a84:	a901      	add	r1, sp, #4
 8029a86:	681b      	ldr	r3, [r3, #0]
 8029a88:	4798      	blx	r3
 8029a8a:	b005      	add	sp, #20
 8029a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029a8e:	2900      	cmp	r1, #0
 8029a90:	d1eb      	bne.n	8029a6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a92:	80a2      	strh	r2, [r4, #4]
 8029a94:	80c6      	strh	r6, [r0, #6]
 8029a96:	60a1      	str	r1, [r4, #8]
 8029a98:	81a1      	strh	r1, [r4, #12]
 8029a9a:	73a1      	strb	r1, [r4, #14]
 8029a9c:	e7e5      	b.n	8029a6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8029a9e:	bf00      	nop
 8029aa0:	08031ea0 	.word	0x08031ea0
 8029aa4:	08031ec8 	.word	0x08031ec8

08029aa8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8029aa8:	10c9      	asrs	r1, r1, #3
 8029aaa:	2900      	cmp	r1, #0
 8029aac:	bfb8      	it	lt
 8029aae:	4249      	neglt	r1, r1
 8029ab0:	2801      	cmp	r0, #1
 8029ab2:	d108      	bne.n	8029ac6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029ab4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8029ab8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8029abc:	4601      	mov	r1, r0
 8029abe:	dd02      	ble.n	8029ac6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8029ac0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8029ac4:	4770      	bx	lr
 8029ac6:	29ff      	cmp	r1, #255	; 0xff
 8029ac8:	bfa8      	it	ge
 8029aca:	21ff      	movge	r1, #255	; 0xff
 8029acc:	4608      	mov	r0, r1
 8029ace:	4770      	bx	lr

08029ad0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8029ad0:	b410      	push	{r4}
 8029ad2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8029ad6:	429c      	cmp	r4, r3
 8029ad8:	d803      	bhi.n	8029ae2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8029ada:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029ade:	f7ed b8b1 	b.w	8016c44 <_ZN8touchgfx7Outline6lineToEii>
 8029ae2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029ae6:	4770      	bx	lr

08029ae8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8029ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029aec:	b08b      	sub	sp, #44	; 0x2c
 8029aee:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8029af2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8029af6:	9308      	str	r3, [sp, #32]
 8029af8:	4606      	mov	r6, r0
 8029afa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8029afe:	9309      	str	r3, [sp, #36]	; 0x24
 8029b00:	468a      	mov	sl, r1
 8029b02:	f7ed fa0c 	bl	8016f1e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8029b06:	68b5      	ldr	r5, [r6, #8]
 8029b08:	4604      	mov	r4, r0
 8029b0a:	2d00      	cmp	r5, #0
 8029b0c:	d044      	beq.n	8029b98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029b0e:	6873      	ldr	r3, [r6, #4]
 8029b10:	42ab      	cmp	r3, r5
 8029b12:	d33d      	bcc.n	8029b90 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8029b14:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8029b18:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8029b1c:	eb02 0b03 	add.w	fp, r2, r3
 8029b20:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8029b24:	fb02 1203 	mla	r2, r2, r3, r1
 8029b28:	9205      	str	r2, [sp, #20]
 8029b2a:	1e6a      	subs	r2, r5, #1
 8029b2c:	9204      	str	r2, [sp, #16]
 8029b2e:	f04f 0800 	mov.w	r8, #0
 8029b32:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8029b36:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029b3a:	454b      	cmp	r3, r9
 8029b3c:	463a      	mov	r2, r7
 8029b3e:	d008      	beq.n	8029b52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8029b40:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8029b44:	eb03 0b09 	add.w	fp, r3, r9
 8029b48:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8029b4c:	fb03 1309 	mla	r3, r3, r9, r1
 8029b50:	9305      	str	r3, [sp, #20]
 8029b52:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8029b56:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8029b5a:	4498      	add	r8, r3
 8029b5c:	9b04      	ldr	r3, [sp, #16]
 8029b5e:	3b01      	subs	r3, #1
 8029b60:	9304      	str	r3, [sp, #16]
 8029b62:	9b04      	ldr	r3, [sp, #16]
 8029b64:	3301      	adds	r3, #1
 8029b66:	d015      	beq.n	8029b94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8029b68:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8029b6c:	42bb      	cmp	r3, r7
 8029b6e:	d117      	bne.n	8029ba0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8029b70:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8029b74:	9b04      	ldr	r3, [sp, #16]
 8029b76:	4548      	cmp	r0, r9
 8029b78:	f103 33ff 	add.w	r3, r3, #4294967295
 8029b7c:	d17f      	bne.n	8029c7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8029b7e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8029b82:	4401      	add	r1, r0
 8029b84:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8029b88:	4480      	add	r8, r0
 8029b8a:	e7e9      	b.n	8029b60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8029b8c:	461f      	mov	r7, r3
 8029b8e:	e044      	b.n	8029c1a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8029b90:	2000      	movs	r0, #0
 8029b92:	e002      	b.n	8029b9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8029b94:	2900      	cmp	r1, #0
 8029b96:	d16f      	bne.n	8029c78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8029b98:	2001      	movs	r0, #1
 8029b9a:	b00b      	add	sp, #44	; 0x2c
 8029b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029ba0:	2900      	cmp	r1, #0
 8029ba2:	d030      	beq.n	8029c06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8029ba4:	2f00      	cmp	r7, #0
 8029ba6:	db29      	blt.n	8029bfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029ba8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029bac:	42bb      	cmp	r3, r7
 8029bae:	dd25      	ble.n	8029bfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bb0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8029bb4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029bb8:	f7ff ff76 	bl	8029aa8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029bbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029bbe:	fb10 f003 	smulbb	r0, r0, r3
 8029bc2:	b280      	uxth	r0, r0
 8029bc4:	1c41      	adds	r1, r0, #1
 8029bc6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029bca:	1209      	asrs	r1, r1, #8
 8029bcc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029bd0:	d014      	beq.n	8029bfc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8029bd2:	9808      	ldr	r0, [sp, #32]
 8029bd4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029bd6:	b2c9      	uxtb	r1, r1
 8029bd8:	b2ba      	uxth	r2, r7
 8029bda:	9102      	str	r1, [sp, #8]
 8029bdc:	2101      	movs	r1, #1
 8029bde:	4413      	add	r3, r2
 8029be0:	9101      	str	r1, [sp, #4]
 8029be2:	4402      	add	r2, r0
 8029be4:	fa0f f18b 	sxth.w	r1, fp
 8029be8:	f8da 0000 	ldr.w	r0, [sl]
 8029bec:	9100      	str	r1, [sp, #0]
 8029bee:	6941      	ldr	r1, [r0, #20]
 8029bf0:	b21b      	sxth	r3, r3
 8029bf2:	460d      	mov	r5, r1
 8029bf4:	b212      	sxth	r2, r2
 8029bf6:	9905      	ldr	r1, [sp, #20]
 8029bf8:	4650      	mov	r0, sl
 8029bfa:	47a8      	blx	r5
 8029bfc:	9b04      	ldr	r3, [sp, #16]
 8029bfe:	3301      	adds	r3, #1
 8029c00:	f107 0201 	add.w	r2, r7, #1
 8029c04:	d0c8      	beq.n	8029b98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c06:	f9b4 7000 	ldrsh.w	r7, [r4]
 8029c0a:	1abb      	subs	r3, r7, r2
 8029c0c:	2b00      	cmp	r3, #0
 8029c0e:	dd31      	ble.n	8029c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c10:	2a00      	cmp	r2, #0
 8029c12:	dabb      	bge.n	8029b8c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8029c14:	2f00      	cmp	r7, #0
 8029c16:	dd2d      	ble.n	8029c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c18:	2200      	movs	r2, #0
 8029c1a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8029c1e:	19d1      	adds	r1, r2, r7
 8029c20:	4299      	cmp	r1, r3
 8029c22:	db02      	blt.n	8029c2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8029c24:	1a9f      	subs	r7, r3, r2
 8029c26:	2f00      	cmp	r7, #0
 8029c28:	dd24      	ble.n	8029c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c2a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8029c2e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8029c32:	f7ff ff39 	bl	8029aa8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8029c36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029c38:	fb10 f003 	smulbb	r0, r0, r3
 8029c3c:	b280      	uxth	r0, r0
 8029c3e:	1c41      	adds	r1, r0, #1
 8029c40:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8029c44:	1209      	asrs	r1, r1, #8
 8029c46:	f011 0fff 	tst.w	r1, #255	; 0xff
 8029c4a:	d013      	beq.n	8029c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c4c:	9808      	ldr	r0, [sp, #32]
 8029c4e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8029c50:	b292      	uxth	r2, r2
 8029c52:	b2c9      	uxtb	r1, r1
 8029c54:	4413      	add	r3, r2
 8029c56:	9102      	str	r1, [sp, #8]
 8029c58:	4402      	add	r2, r0
 8029c5a:	b23f      	sxth	r7, r7
 8029c5c:	f8da 0000 	ldr.w	r0, [sl]
 8029c60:	9701      	str	r7, [sp, #4]
 8029c62:	fa0f f18b 	sxth.w	r1, fp
 8029c66:	9100      	str	r1, [sp, #0]
 8029c68:	6947      	ldr	r7, [r0, #20]
 8029c6a:	9905      	ldr	r1, [sp, #20]
 8029c6c:	b21b      	sxth	r3, r3
 8029c6e:	b212      	sxth	r2, r2
 8029c70:	4650      	mov	r0, sl
 8029c72:	47b8      	blx	r7
 8029c74:	464b      	mov	r3, r9
 8029c76:	e75c      	b.n	8029b32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8029c78:	2f00      	cmp	r7, #0
 8029c7a:	da95      	bge.n	8029ba8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8029c7c:	e78c      	b.n	8029b98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8029c7e:	2900      	cmp	r1, #0
 8029c80:	d0f8      	beq.n	8029c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8029c82:	e78f      	b.n	8029ba4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08029c84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8029c84:	4b4b      	ldr	r3, [pc, #300]	; (8029db4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8029c86:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8029c8a:	2500      	movs	r5, #0
 8029c8c:	f100 0620 	add.w	r6, r0, #32
 8029c90:	4604      	mov	r4, r0
 8029c92:	e9c0 3100 	strd	r3, r1, [r0]
 8029c96:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8029c9a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8029c9e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8029ca2:	f100 0718 	add.w	r7, r0, #24
 8029ca6:	4630      	mov	r0, r6
 8029ca8:	4690      	mov	r8, r2
 8029caa:	f7ec fb03 	bl	80162b4 <_ZN8touchgfx7OutlineC1Ev>
 8029cae:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8029cb2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8029cb6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8029cba:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8029cbe:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8029cc2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8029cc6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8029cca:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8029cce:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8029cd2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8029cd6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8029cda:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8029cde:	9500      	str	r5, [sp, #0]
 8029ce0:	4410      	add	r0, r2
 8029ce2:	b280      	uxth	r0, r0
 8029ce4:	fa0f fa80 	sxth.w	sl, r0
 8029ce8:	45aa      	cmp	sl, r5
 8029cea:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8029cee:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8029cf2:	dd5c      	ble.n	8029dae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029cf4:	4591      	cmp	r9, r2
 8029cf6:	dd5a      	ble.n	8029dae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029cf8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8029cfc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8029d00:	440b      	add	r3, r1
 8029d02:	b29b      	uxth	r3, r3
 8029d04:	b21d      	sxth	r5, r3
 8029d06:	2d00      	cmp	r5, #0
 8029d08:	dd51      	ble.n	8029dae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d0a:	458e      	cmp	lr, r1
 8029d0c:	dd4f      	ble.n	8029dae <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8029d0e:	45d1      	cmp	r9, sl
 8029d10:	bfb8      	it	lt
 8029d12:	fa1f f089 	uxthlt.w	r0, r9
 8029d16:	45ae      	cmp	lr, r5
 8029d18:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8029d1c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8029d20:	bfb8      	it	lt
 8029d22:	fa1f f38e 	uxthlt.w	r3, lr
 8029d26:	1a80      	subs	r0, r0, r2
 8029d28:	1a5b      	subs	r3, r3, r1
 8029d2a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8029d2e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8029d32:	f8ad 2000 	strh.w	r2, [sp]
 8029d36:	f8ad 1002 	strh.w	r1, [sp, #2]
 8029d3a:	466d      	mov	r5, sp
 8029d3c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8029d40:	e887 0003 	stmia.w	r7, {r0, r1}
 8029d44:	f8dc 3000 	ldr.w	r3, [ip]
 8029d48:	4660      	mov	r0, ip
 8029d4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029d4c:	4639      	mov	r1, r7
 8029d4e:	4798      	blx	r3
 8029d50:	6861      	ldr	r1, [r4, #4]
 8029d52:	4628      	mov	r0, r5
 8029d54:	3104      	adds	r1, #4
 8029d56:	f7ee fcb3 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029d5a:	4638      	mov	r0, r7
 8029d5c:	f7ee fc6c 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029d60:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d64:	f8bd 2000 	ldrh.w	r2, [sp]
 8029d68:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8029d6c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8029d70:	4630      	mov	r0, r6
 8029d72:	f7ec fa83 	bl	801627c <_ZN8touchgfx7Outline5resetEv>
 8029d76:	f9bd 3000 	ldrsh.w	r3, [sp]
 8029d7a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8029d7e:	015b      	lsls	r3, r3, #5
 8029d80:	60a3      	str	r3, [r4, #8]
 8029d82:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8029d86:	015b      	lsls	r3, r3, #5
 8029d88:	60e3      	str	r3, [r4, #12]
 8029d8a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8029d8e:	015b      	lsls	r3, r3, #5
 8029d90:	6123      	str	r3, [r4, #16]
 8029d92:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8029d96:	015b      	lsls	r3, r3, #5
 8029d98:	6163      	str	r3, [r4, #20]
 8029d9a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8029d9e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8029da2:	4620      	mov	r0, r4
 8029da4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8029da8:	b002      	add	sp, #8
 8029daa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029dae:	2300      	movs	r3, #0
 8029db0:	9301      	str	r3, [sp, #4]
 8029db2:	e7c2      	b.n	8029d3a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8029db4:	080321ec 	.word	0x080321ec

08029db8 <_ZN8touchgfx6Canvas5closeEv>:
 8029db8:	b538      	push	{r3, r4, r5, lr}
 8029dba:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029dbe:	4604      	mov	r4, r0
 8029dc0:	b193      	cbz	r3, 8029de8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029dc2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8029dc6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8029dca:	4213      	tst	r3, r2
 8029dcc:	d10c      	bne.n	8029de8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8029dce:	f100 0520 	add.w	r5, r0, #32
 8029dd2:	b123      	cbz	r3, 8029dde <_ZN8touchgfx6Canvas5closeEv+0x26>
 8029dd4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8029dd8:	4628      	mov	r0, r5
 8029dda:	f7ff fe79 	bl	8029ad0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029dde:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8029de2:	4628      	mov	r0, r5
 8029de4:	f7ff fe74 	bl	8029ad0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8029de8:	2300      	movs	r3, #0
 8029dea:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8029dee:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8029df2:	4298      	cmp	r0, r3
 8029df4:	bf34      	ite	cc
 8029df6:	2000      	movcc	r0, #0
 8029df8:	2001      	movcs	r0, #1
 8029dfa:	bd38      	pop	{r3, r4, r5, pc}

08029dfc <_ZN8touchgfx6Canvas6renderEh>:
 8029dfc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8029e00:	4604      	mov	r4, r0
 8029e02:	6840      	ldr	r0, [r0, #4]
 8029e04:	6803      	ldr	r3, [r0, #0]
 8029e06:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8029e08:	460d      	mov	r5, r1
 8029e0a:	4798      	blx	r3
 8029e0c:	fb10 f105 	smulbb	r1, r0, r5
 8029e10:	b289      	uxth	r1, r1
 8029e12:	1c4d      	adds	r5, r1, #1
 8029e14:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8029e18:	122d      	asrs	r5, r5, #8
 8029e1a:	f000 809d 	beq.w	8029f58 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e1e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8029e22:	2b00      	cmp	r3, #0
 8029e24:	f000 8098 	beq.w	8029f58 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8029e28:	4620      	mov	r0, r4
 8029e2a:	f7ff ffc5 	bl	8029db8 <_ZN8touchgfx6Canvas5closeEv>
 8029e2e:	4607      	mov	r7, r0
 8029e30:	2800      	cmp	r0, #0
 8029e32:	d048      	beq.n	8029ec6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029e34:	6863      	ldr	r3, [r4, #4]
 8029e36:	4e49      	ldr	r6, [pc, #292]	; (8029f5c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8029e38:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029e3a:	6837      	ldr	r7, [r6, #0]
 8029e3c:	6803      	ldr	r3, [r0, #0]
 8029e3e:	689b      	ldr	r3, [r3, #8]
 8029e40:	4798      	blx	r3
 8029e42:	4601      	mov	r1, r0
 8029e44:	4638      	mov	r0, r7
 8029e46:	f7ea f9bb 	bl	80141c0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8029e4a:	4607      	mov	r7, r0
 8029e4c:	f7db fb44 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8029e50:	6803      	ldr	r3, [r0, #0]
 8029e52:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8029e54:	4798      	blx	r3
 8029e56:	4680      	mov	r8, r0
 8029e58:	f7db fb3e 	bl	80054d8 <_ZN8touchgfx3HAL3lcdEv>
 8029e5c:	6803      	ldr	r3, [r0, #0]
 8029e5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029e60:	4798      	blx	r3
 8029e62:	280b      	cmp	r0, #11
 8029e64:	d85d      	bhi.n	8029f22 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8029e66:	e8df f000 	tbb	[pc, r0]
 8029e6a:	5e53      	.short	0x5e53
 8029e6c:	325c066e 	.word	0x325c066e
 8029e70:	67676742 	.word	0x67676742
 8029e74:	6767      	.short	0x6767
 8029e76:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029e7a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029e7e:	2208      	movs	r2, #8
 8029e80:	fb91 f2f2 	sdiv	r2, r1, r2
 8029e84:	fb08 2303 	mla	r3, r8, r3, r2
 8029e88:	441f      	add	r7, r3
 8029e8a:	424b      	negs	r3, r1
 8029e8c:	f003 0307 	and.w	r3, r3, #7
 8029e90:	f001 0107 	and.w	r1, r1, #7
 8029e94:	bf58      	it	pl
 8029e96:	4259      	negpl	r1, r3
 8029e98:	b2c9      	uxtb	r1, r1
 8029e9a:	b2ed      	uxtb	r5, r5
 8029e9c:	e9cd 1500 	strd	r1, r5, [sp]
 8029ea0:	6860      	ldr	r0, [r4, #4]
 8029ea2:	463a      	mov	r2, r7
 8029ea4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8029ea6:	fa0f f388 	sxth.w	r3, r8
 8029eaa:	f104 0020 	add.w	r0, r4, #32
 8029eae:	f7ff fe1b 	bl	8029ae8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8029eb2:	6863      	ldr	r3, [r4, #4]
 8029eb4:	4607      	mov	r7, r0
 8029eb6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8029eb8:	6803      	ldr	r3, [r0, #0]
 8029eba:	691b      	ldr	r3, [r3, #16]
 8029ebc:	4798      	blx	r3
 8029ebe:	6830      	ldr	r0, [r6, #0]
 8029ec0:	6803      	ldr	r3, [r0, #0]
 8029ec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8029ec4:	4798      	blx	r3
 8029ec6:	4638      	mov	r0, r7
 8029ec8:	b002      	add	sp, #8
 8029eca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029ece:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ed2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029ed6:	2204      	movs	r2, #4
 8029ed8:	fb91 f2f2 	sdiv	r2, r1, r2
 8029edc:	fb08 2303 	mla	r3, r8, r3, r2
 8029ee0:	441f      	add	r7, r3
 8029ee2:	424b      	negs	r3, r1
 8029ee4:	f003 0303 	and.w	r3, r3, #3
 8029ee8:	f001 0103 	and.w	r1, r1, #3
 8029eec:	e7d2      	b.n	8029e94 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8029eee:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8029ef2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029ef6:	2900      	cmp	r1, #0
 8029ef8:	f04f 0202 	mov.w	r2, #2
 8029efc:	fb91 f2f2 	sdiv	r2, r1, r2
 8029f00:	f001 0101 	and.w	r1, r1, #1
 8029f04:	fb08 2303 	mla	r3, r8, r3, r2
 8029f08:	441f      	add	r7, r3
 8029f0a:	bfb8      	it	lt
 8029f0c:	4249      	neglt	r1, r1
 8029f0e:	e7c3      	b.n	8029e98 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8029f10:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f14:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f18:	fb08 f303 	mul.w	r3, r8, r3
 8029f1c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8029f20:	441f      	add	r7, r3
 8029f22:	2100      	movs	r1, #0
 8029f24:	e7b9      	b.n	8029e9a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8029f26:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f2a:	fb08 f203 	mul.w	r2, r8, r3
 8029f2e:	8b23      	ldrh	r3, [r4, #24]
 8029f30:	2103      	movs	r1, #3
 8029f32:	fb13 2301 	smlabb	r3, r3, r1, r2
 8029f36:	e7f3      	b.n	8029f20 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f38:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f3c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f40:	fb08 2303 	mla	r3, r8, r3, r2
 8029f44:	e7ec      	b.n	8029f20 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f46:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8029f4a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8029f4e:	fb08 f303 	mul.w	r3, r8, r3
 8029f52:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8029f56:	e7e3      	b.n	8029f20 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8029f58:	2701      	movs	r7, #1
 8029f5a:	e7b4      	b.n	8029ec6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8029f5c:	2001383c 	.word	0x2001383c

08029f60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8029f60:	b510      	push	{r4, lr}
 8029f62:	4b07      	ldr	r3, [pc, #28]	; (8029f80 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8029f64:	781b      	ldrb	r3, [r3, #0]
 8029f66:	2b01      	cmp	r3, #1
 8029f68:	d108      	bne.n	8029f7c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8029f6a:	6843      	ldr	r3, [r0, #4]
 8029f6c:	6814      	ldr	r4, [r2, #0]
 8029f6e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8029f72:	680b      	ldr	r3, [r1, #0]
 8029f74:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8029f78:	6013      	str	r3, [r2, #0]
 8029f7a:	600c      	str	r4, [r1, #0]
 8029f7c:	bd10      	pop	{r4, pc}
 8029f7e:	bf00      	nop
 8029f80:	20013834 	.word	0x20013834

08029f84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8029f84:	b513      	push	{r0, r1, r4, lr}
 8029f86:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8029f8a:	4604      	mov	r4, r0
 8029f8c:	e9cd 2100 	strd	r2, r1, [sp]
 8029f90:	b9a3      	cbnz	r3, 8029fbc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8029f92:	466a      	mov	r2, sp
 8029f94:	a901      	add	r1, sp, #4
 8029f96:	4620      	mov	r0, r4
 8029f98:	f7ff ffe2 	bl	8029f60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8029f9c:	68a3      	ldr	r3, [r4, #8]
 8029f9e:	9901      	ldr	r1, [sp, #4]
 8029fa0:	9a00      	ldr	r2, [sp, #0]
 8029fa2:	1ac9      	subs	r1, r1, r3
 8029fa4:	68e3      	ldr	r3, [r4, #12]
 8029fa6:	9101      	str	r1, [sp, #4]
 8029fa8:	1ad2      	subs	r2, r2, r3
 8029faa:	2a00      	cmp	r2, #0
 8029fac:	9200      	str	r2, [sp, #0]
 8029fae:	da0b      	bge.n	8029fc8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8029fb0:	2301      	movs	r3, #1
 8029fb2:	2900      	cmp	r1, #0
 8029fb4:	da0e      	bge.n	8029fd4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8029fb6:	f043 0304 	orr.w	r3, r3, #4
 8029fba:	e013      	b.n	8029fe4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8029fbc:	f7ff fefc 	bl	8029db8 <_ZN8touchgfx6Canvas5closeEv>
 8029fc0:	2800      	cmp	r0, #0
 8029fc2:	d1e6      	bne.n	8029f92 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8029fc4:	b002      	add	sp, #8
 8029fc6:	bd10      	pop	{r4, pc}
 8029fc8:	6963      	ldr	r3, [r4, #20]
 8029fca:	429a      	cmp	r2, r3
 8029fcc:	bfac      	ite	ge
 8029fce:	2302      	movge	r3, #2
 8029fd0:	2300      	movlt	r3, #0
 8029fd2:	e7ee      	b.n	8029fb2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8029fd4:	6920      	ldr	r0, [r4, #16]
 8029fd6:	4281      	cmp	r1, r0
 8029fd8:	bfac      	ite	ge
 8029fda:	2008      	movge	r0, #8
 8029fdc:	2000      	movlt	r0, #0
 8029fde:	4318      	orrs	r0, r3
 8029fe0:	b2c3      	uxtb	r3, r0
 8029fe2:	b158      	cbz	r0, 8029ffc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8029fe4:	2200      	movs	r2, #0
 8029fe6:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8029fea:	9901      	ldr	r1, [sp, #4]
 8029fec:	9a00      	ldr	r2, [sp, #0]
 8029fee:	66a1      	str	r1, [r4, #104]	; 0x68
 8029ff0:	66e2      	str	r2, [r4, #108]	; 0x6c
 8029ff2:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8029ff6:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8029ffa:	e7e3      	b.n	8029fc4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8029ffc:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a000:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a004:	4298      	cmp	r0, r3
 802a006:	d803      	bhi.n	802a010 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802a008:	f104 0020 	add.w	r0, r4, #32
 802a00c:	f7ec fe34 	bl	8016c78 <_ZN8touchgfx7Outline6moveToEii>
 802a010:	2301      	movs	r3, #1
 802a012:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a016:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a01a:	2300      	movs	r3, #0
 802a01c:	e7e5      	b.n	8029fea <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a01e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a020:	ab02      	add	r3, sp, #8
 802a022:	4604      	mov	r4, r0
 802a024:	f843 2d08 	str.w	r2, [r3, #-8]!
 802a028:	9101      	str	r1, [sp, #4]
 802a02a:	461a      	mov	r2, r3
 802a02c:	a901      	add	r1, sp, #4
 802a02e:	f7ff ff97 	bl	8029f60 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a032:	68a3      	ldr	r3, [r4, #8]
 802a034:	9901      	ldr	r1, [sp, #4]
 802a036:	9a00      	ldr	r2, [sp, #0]
 802a038:	1ac9      	subs	r1, r1, r3
 802a03a:	68e3      	ldr	r3, [r4, #12]
 802a03c:	9101      	str	r1, [sp, #4]
 802a03e:	1ad2      	subs	r2, r2, r3
 802a040:	2a00      	cmp	r2, #0
 802a042:	9200      	str	r2, [sp, #0]
 802a044:	db1c      	blt.n	802a080 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802a046:	6963      	ldr	r3, [r4, #20]
 802a048:	429a      	cmp	r2, r3
 802a04a:	bfac      	ite	ge
 802a04c:	2002      	movge	r0, #2
 802a04e:	2000      	movlt	r0, #0
 802a050:	2900      	cmp	r1, #0
 802a052:	db17      	blt.n	802a084 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802a054:	6923      	ldr	r3, [r4, #16]
 802a056:	4299      	cmp	r1, r3
 802a058:	bfac      	ite	ge
 802a05a:	2308      	movge	r3, #8
 802a05c:	2300      	movlt	r3, #0
 802a05e:	4303      	orrs	r3, r0
 802a060:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802a064:	b2dd      	uxtb	r5, r3
 802a066:	b978      	cbnz	r0, 802a088 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802a068:	f104 0020 	add.w	r0, r4, #32
 802a06c:	f7ff fd30 	bl	8029ad0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a070:	9b01      	ldr	r3, [sp, #4]
 802a072:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a074:	9b00      	ldr	r3, [sp, #0]
 802a076:	6623      	str	r3, [r4, #96]	; 0x60
 802a078:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802a07c:	b002      	add	sp, #8
 802a07e:	bd70      	pop	{r4, r5, r6, pc}
 802a080:	2001      	movs	r0, #1
 802a082:	e7e5      	b.n	802a050 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802a084:	2304      	movs	r3, #4
 802a086:	e7ea      	b.n	802a05e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802a088:	b113      	cbz	r3, 802a090 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802a08a:	ea10 0305 	ands.w	r3, r0, r5
 802a08e:	d11c      	bne.n	802a0ca <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802a090:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802a094:	f104 0620 	add.w	r6, r4, #32
 802a098:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802a09c:	b98b      	cbnz	r3, 802a0c2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802a09e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802a0a2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802a0a6:	4298      	cmp	r0, r3
 802a0a8:	d802      	bhi.n	802a0b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802a0aa:	4630      	mov	r0, r6
 802a0ac:	f7ec fde4 	bl	8016c78 <_ZN8touchgfx7Outline6moveToEii>
 802a0b0:	2301      	movs	r3, #1
 802a0b2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802a0b6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802a0ba:	e9dd 2100 	ldrd	r2, r1, [sp]
 802a0be:	4630      	mov	r0, r6
 802a0c0:	e7d4      	b.n	802a06c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802a0c2:	4630      	mov	r0, r6
 802a0c4:	f7ff fd04 	bl	8029ad0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a0c8:	e7f7      	b.n	802a0ba <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802a0ca:	461d      	mov	r5, r3
 802a0cc:	e7d0      	b.n	802a070 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802a0d0 <_ZN8touchgfx6CanvasD1Ev>:
 802a0d0:	b510      	push	{r4, lr}
 802a0d2:	4b04      	ldr	r3, [pc, #16]	; (802a0e4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802a0d4:	4604      	mov	r4, r0
 802a0d6:	f840 3b20 	str.w	r3, [r0], #32
 802a0da:	f7ec f8c7 	bl	801626c <_ZN8touchgfx7OutlineD1Ev>
 802a0de:	4620      	mov	r0, r4
 802a0e0:	bd10      	pop	{r4, pc}
 802a0e2:	bf00      	nop
 802a0e4:	080321ec 	.word	0x080321ec

0802a0e8 <_ZN8touchgfx6CanvasD0Ev>:
 802a0e8:	b510      	push	{r4, lr}
 802a0ea:	4604      	mov	r4, r0
 802a0ec:	f7ff fff0 	bl	802a0d0 <_ZN8touchgfx6CanvasD1Ev>
 802a0f0:	4620      	mov	r0, r4
 802a0f2:	2170      	movs	r1, #112	; 0x70
 802a0f4:	f002 fd3d 	bl	802cb72 <_ZdlPvj>
 802a0f8:	4620      	mov	r0, r4
 802a0fa:	bd10      	pop	{r4, pc}

0802a0fc <_ZN8touchgfx6CircleD1Ev>:
 802a0fc:	4770      	bx	lr

0802a0fe <_ZN8touchgfx6CircleD0Ev>:
 802a0fe:	b510      	push	{r4, lr}
 802a100:	2148      	movs	r1, #72	; 0x48
 802a102:	4604      	mov	r4, r0
 802a104:	f002 fd35 	bl	802cb72 <_ZdlPvj>
 802a108:	4620      	mov	r0, r4
 802a10a:	bd10      	pop	{r4, pc}

0802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802a10c:	b508      	push	{r3, lr}
 802a10e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802a112:	f7ea fbab 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a116:	bd08      	pop	{r3, pc}

0802a118 <_ZN8touchgfx6CircleC1Ev>:
 802a118:	b510      	push	{r4, lr}
 802a11a:	4604      	mov	r4, r0
 802a11c:	f7ea fa42 	bl	80145a4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 802a120:	4b08      	ldr	r3, [pc, #32]	; (802a144 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802a122:	6023      	str	r3, [r4, #0]
 802a124:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802a128:	2300      	movs	r3, #0
 802a12a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802a12e:	f24b 4205 	movw	r2, #46085	; 0xb405
 802a132:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a136:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a13a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802a13e:	60a3      	str	r3, [r4, #8]
 802a140:	4620      	mov	r0, r4
 802a142:	bd10      	pop	{r4, pc}
 802a144:	08032200 	.word	0x08032200

0802a148 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802a148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a14c:	428a      	cmp	r2, r1
 802a14e:	4680      	mov	r8, r0
 802a150:	4610      	mov	r0, r2
 802a152:	4699      	mov	r9, r3
 802a154:	bfa6      	itte	ge
 802a156:	460a      	movge	r2, r1
 802a158:	4603      	movge	r3, r0
 802a15a:	460b      	movlt	r3, r1
 802a15c:	1a99      	subs	r1, r3, r2
 802a15e:	b085      	sub	sp, #20
 802a160:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 802a164:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802a168:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802a16a:	bfa4      	itt	ge
 802a16c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 802a170:	2200      	movge	r2, #0
 802a172:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802a176:	9300      	str	r3, [sp, #0]
 802a178:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802a17c:	f102 0b01 	add.w	fp, r2, #1
 802a180:	2c00      	cmp	r4, #0
 802a182:	f040 80af 	bne.w	802a2e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 802a186:	4610      	mov	r0, r2
 802a188:	9201      	str	r2, [sp, #4]
 802a18a:	f7ea fb6f 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a18e:	a903      	add	r1, sp, #12
 802a190:	9003      	str	r0, [sp, #12]
 802a192:	4650      	mov	r0, sl
 802a194:	f7ea fa32 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a198:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a19c:	9a01      	ldr	r2, [sp, #4]
 802a19e:	4408      	add	r0, r1
 802a1a0:	f8d9 1000 	ldr.w	r1, [r9]
 802a1a4:	4281      	cmp	r1, r0
 802a1a6:	bfc8      	it	gt
 802a1a8:	f8c9 0000 	strgt.w	r0, [r9]
 802a1ac:	6839      	ldr	r1, [r7, #0]
 802a1ae:	4288      	cmp	r0, r1
 802a1b0:	bfc8      	it	gt
 802a1b2:	6038      	strgt	r0, [r7, #0]
 802a1b4:	4610      	mov	r0, r2
 802a1b6:	f7ff ffa9 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a1ba:	a903      	add	r1, sp, #12
 802a1bc:	9003      	str	r0, [sp, #12]
 802a1be:	4650      	mov	r0, sl
 802a1c0:	f7ea fa1c 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a1c4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a1c8:	1a10      	subs	r0, r2, r0
 802a1ca:	6832      	ldr	r2, [r6, #0]
 802a1cc:	4282      	cmp	r2, r0
 802a1ce:	bfc8      	it	gt
 802a1d0:	6030      	strgt	r0, [r6, #0]
 802a1d2:	682a      	ldr	r2, [r5, #0]
 802a1d4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a1d8:	4290      	cmp	r0, r2
 802a1da:	fb9b f2f1 	sdiv	r2, fp, r1
 802a1de:	fb01 b212 	mls	r2, r1, r2, fp
 802a1e2:	eba1 0202 	sub.w	r2, r1, r2
 802a1e6:	bfc8      	it	gt
 802a1e8:	6028      	strgt	r0, [r5, #0]
 802a1ea:	fb92 f0f1 	sdiv	r0, r2, r1
 802a1ee:	fb01 2210 	mls	r2, r1, r0, r2
 802a1f2:	4493      	add	fp, r2
 802a1f4:	9b00      	ldr	r3, [sp, #0]
 802a1f6:	455b      	cmp	r3, fp
 802a1f8:	db2a      	blt.n	802a250 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802a1fa:	4658      	mov	r0, fp
 802a1fc:	f7ea fb36 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a200:	a903      	add	r1, sp, #12
 802a202:	9003      	str	r0, [sp, #12]
 802a204:	4650      	mov	r0, sl
 802a206:	f7ea f9f9 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a20a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a20e:	4410      	add	r0, r2
 802a210:	f8d9 2000 	ldr.w	r2, [r9]
 802a214:	4282      	cmp	r2, r0
 802a216:	bfc8      	it	gt
 802a218:	f8c9 0000 	strgt.w	r0, [r9]
 802a21c:	683a      	ldr	r2, [r7, #0]
 802a21e:	4290      	cmp	r0, r2
 802a220:	bfc8      	it	gt
 802a222:	6038      	strgt	r0, [r7, #0]
 802a224:	4658      	mov	r0, fp
 802a226:	f7ff ff71 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a22a:	a903      	add	r1, sp, #12
 802a22c:	9003      	str	r0, [sp, #12]
 802a22e:	4650      	mov	r0, sl
 802a230:	f7ea f9e4 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a234:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a238:	1a10      	subs	r0, r2, r0
 802a23a:	6832      	ldr	r2, [r6, #0]
 802a23c:	4282      	cmp	r2, r0
 802a23e:	bfc8      	it	gt
 802a240:	6030      	strgt	r0, [r6, #0]
 802a242:	682a      	ldr	r2, [r5, #0]
 802a244:	4290      	cmp	r0, r2
 802a246:	bfc8      	it	gt
 802a248:	6028      	strgt	r0, [r5, #0]
 802a24a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a24e:	e7d1      	b.n	802a1f4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 802a250:	9b00      	ldr	r3, [sp, #0]
 802a252:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a256:	455b      	cmp	r3, fp
 802a258:	dd27      	ble.n	802a2aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802a25a:	4618      	mov	r0, r3
 802a25c:	f7ea fb06 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a260:	a903      	add	r1, sp, #12
 802a262:	9003      	str	r0, [sp, #12]
 802a264:	4650      	mov	r0, sl
 802a266:	f7ea f9c9 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a26a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a26e:	4410      	add	r0, r2
 802a270:	f8d9 2000 	ldr.w	r2, [r9]
 802a274:	4282      	cmp	r2, r0
 802a276:	bfc8      	it	gt
 802a278:	f8c9 0000 	strgt.w	r0, [r9]
 802a27c:	683a      	ldr	r2, [r7, #0]
 802a27e:	4290      	cmp	r0, r2
 802a280:	bfc8      	it	gt
 802a282:	6038      	strgt	r0, [r7, #0]
 802a284:	9800      	ldr	r0, [sp, #0]
 802a286:	f7ff ff41 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a28a:	a903      	add	r1, sp, #12
 802a28c:	9003      	str	r0, [sp, #12]
 802a28e:	4650      	mov	r0, sl
 802a290:	f7ea f9b4 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a294:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a298:	1a10      	subs	r0, r2, r0
 802a29a:	6832      	ldr	r2, [r6, #0]
 802a29c:	4282      	cmp	r2, r0
 802a29e:	bfc8      	it	gt
 802a2a0:	6030      	strgt	r0, [r6, #0]
 802a2a2:	682a      	ldr	r2, [r5, #0]
 802a2a4:	4290      	cmp	r0, r2
 802a2a6:	bfc8      	it	gt
 802a2a8:	6028      	strgt	r0, [r5, #0]
 802a2aa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a2ae:	f8d9 1000 	ldr.w	r1, [r9]
 802a2b2:	4291      	cmp	r1, r2
 802a2b4:	bfc8      	it	gt
 802a2b6:	f8c9 2000 	strgt.w	r2, [r9]
 802a2ba:	683a      	ldr	r2, [r7, #0]
 802a2bc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802a2c0:	429a      	cmp	r2, r3
 802a2c2:	bfb8      	it	lt
 802a2c4:	603b      	strlt	r3, [r7, #0]
 802a2c6:	6832      	ldr	r2, [r6, #0]
 802a2c8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2cc:	429a      	cmp	r2, r3
 802a2ce:	bfc8      	it	gt
 802a2d0:	6033      	strgt	r3, [r6, #0]
 802a2d2:	682a      	ldr	r2, [r5, #0]
 802a2d4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a2d8:	429a      	cmp	r2, r3
 802a2da:	da00      	bge.n	802a2de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a2dc:	602b      	str	r3, [r5, #0]
 802a2de:	b005      	add	sp, #20
 802a2e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a2e4:	2002      	movs	r0, #2
 802a2e6:	3401      	adds	r4, #1
 802a2e8:	fb94 f4f0 	sdiv	r4, r4, r0
 802a2ec:	4610      	mov	r0, r2
 802a2ee:	9201      	str	r2, [sp, #4]
 802a2f0:	f7ea fabc 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a2f4:	a903      	add	r1, sp, #12
 802a2f6:	9003      	str	r0, [sp, #12]
 802a2f8:	4650      	mov	r0, sl
 802a2fa:	f7ea f97f 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a2fe:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802a302:	9a01      	ldr	r2, [sp, #4]
 802a304:	4408      	add	r0, r1
 802a306:	f8d9 1000 	ldr.w	r1, [r9]
 802a30a:	1b03      	subs	r3, r0, r4
 802a30c:	4299      	cmp	r1, r3
 802a30e:	bfc8      	it	gt
 802a310:	f8c9 3000 	strgt.w	r3, [r9]
 802a314:	6839      	ldr	r1, [r7, #0]
 802a316:	428b      	cmp	r3, r1
 802a318:	bfc8      	it	gt
 802a31a:	603b      	strgt	r3, [r7, #0]
 802a31c:	f8d9 1000 	ldr.w	r1, [r9]
 802a320:	4420      	add	r0, r4
 802a322:	4281      	cmp	r1, r0
 802a324:	bfc8      	it	gt
 802a326:	f8c9 0000 	strgt.w	r0, [r9]
 802a32a:	6839      	ldr	r1, [r7, #0]
 802a32c:	4288      	cmp	r0, r1
 802a32e:	bfc8      	it	gt
 802a330:	6038      	strgt	r0, [r7, #0]
 802a332:	4610      	mov	r0, r2
 802a334:	f7ff feea 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a338:	a903      	add	r1, sp, #12
 802a33a:	9003      	str	r0, [sp, #12]
 802a33c:	4650      	mov	r0, sl
 802a33e:	f7ea f95d 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a342:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a346:	1a10      	subs	r0, r2, r0
 802a348:	6832      	ldr	r2, [r6, #0]
 802a34a:	1b01      	subs	r1, r0, r4
 802a34c:	428a      	cmp	r2, r1
 802a34e:	bfc8      	it	gt
 802a350:	6031      	strgt	r1, [r6, #0]
 802a352:	682a      	ldr	r2, [r5, #0]
 802a354:	4291      	cmp	r1, r2
 802a356:	bfc8      	it	gt
 802a358:	6029      	strgt	r1, [r5, #0]
 802a35a:	6832      	ldr	r2, [r6, #0]
 802a35c:	4420      	add	r0, r4
 802a35e:	4282      	cmp	r2, r0
 802a360:	bfc8      	it	gt
 802a362:	6030      	strgt	r0, [r6, #0]
 802a364:	682a      	ldr	r2, [r5, #0]
 802a366:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802a36a:	4290      	cmp	r0, r2
 802a36c:	fb9b f2f1 	sdiv	r2, fp, r1
 802a370:	fb01 b212 	mls	r2, r1, r2, fp
 802a374:	eba1 0202 	sub.w	r2, r1, r2
 802a378:	bfc8      	it	gt
 802a37a:	6028      	strgt	r0, [r5, #0]
 802a37c:	fb92 f0f1 	sdiv	r0, r2, r1
 802a380:	fb01 2210 	mls	r2, r1, r0, r2
 802a384:	4493      	add	fp, r2
 802a386:	9b00      	ldr	r3, [sp, #0]
 802a388:	455b      	cmp	r3, fp
 802a38a:	db40      	blt.n	802a40e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802a38c:	4658      	mov	r0, fp
 802a38e:	f7ea fa6d 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a392:	a903      	add	r1, sp, #12
 802a394:	9003      	str	r0, [sp, #12]
 802a396:	4650      	mov	r0, sl
 802a398:	f7ea f930 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a39c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a3a0:	4410      	add	r0, r2
 802a3a2:	f8d9 2000 	ldr.w	r2, [r9]
 802a3a6:	1b01      	subs	r1, r0, r4
 802a3a8:	428a      	cmp	r2, r1
 802a3aa:	bfc8      	it	gt
 802a3ac:	f8c9 1000 	strgt.w	r1, [r9]
 802a3b0:	683a      	ldr	r2, [r7, #0]
 802a3b2:	4291      	cmp	r1, r2
 802a3b4:	bfc8      	it	gt
 802a3b6:	6039      	strgt	r1, [r7, #0]
 802a3b8:	f8d9 2000 	ldr.w	r2, [r9]
 802a3bc:	4420      	add	r0, r4
 802a3be:	4282      	cmp	r2, r0
 802a3c0:	bfc8      	it	gt
 802a3c2:	f8c9 0000 	strgt.w	r0, [r9]
 802a3c6:	683a      	ldr	r2, [r7, #0]
 802a3c8:	4290      	cmp	r0, r2
 802a3ca:	bfc8      	it	gt
 802a3cc:	6038      	strgt	r0, [r7, #0]
 802a3ce:	4658      	mov	r0, fp
 802a3d0:	f7ff fe9c 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a3d4:	a903      	add	r1, sp, #12
 802a3d6:	9003      	str	r0, [sp, #12]
 802a3d8:	4650      	mov	r0, sl
 802a3da:	f7ea f90f 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a3de:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802a3e2:	1a10      	subs	r0, r2, r0
 802a3e4:	6832      	ldr	r2, [r6, #0]
 802a3e6:	1b01      	subs	r1, r0, r4
 802a3e8:	428a      	cmp	r2, r1
 802a3ea:	bfc8      	it	gt
 802a3ec:	6031      	strgt	r1, [r6, #0]
 802a3ee:	682a      	ldr	r2, [r5, #0]
 802a3f0:	4291      	cmp	r1, r2
 802a3f2:	bfc8      	it	gt
 802a3f4:	6029      	strgt	r1, [r5, #0]
 802a3f6:	6832      	ldr	r2, [r6, #0]
 802a3f8:	4420      	add	r0, r4
 802a3fa:	4282      	cmp	r2, r0
 802a3fc:	bfc8      	it	gt
 802a3fe:	6030      	strgt	r0, [r6, #0]
 802a400:	682a      	ldr	r2, [r5, #0]
 802a402:	4290      	cmp	r0, r2
 802a404:	bfc8      	it	gt
 802a406:	6028      	strgt	r0, [r5, #0]
 802a408:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802a40c:	e7bb      	b.n	802a386 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802a40e:	9b00      	ldr	r3, [sp, #0]
 802a410:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802a414:	455b      	cmp	r3, fp
 802a416:	f77f af62 	ble.w	802a2de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802a41a:	4618      	mov	r0, r3
 802a41c:	f7ea fa26 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a420:	a903      	add	r1, sp, #12
 802a422:	9003      	str	r0, [sp, #12]
 802a424:	4650      	mov	r0, sl
 802a426:	f7ea f8e9 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a42a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802a42e:	4410      	add	r0, r2
 802a430:	f8d9 2000 	ldr.w	r2, [r9]
 802a434:	1b01      	subs	r1, r0, r4
 802a436:	428a      	cmp	r2, r1
 802a438:	bfc8      	it	gt
 802a43a:	f8c9 1000 	strgt.w	r1, [r9]
 802a43e:	683a      	ldr	r2, [r7, #0]
 802a440:	4291      	cmp	r1, r2
 802a442:	bfc8      	it	gt
 802a444:	6039      	strgt	r1, [r7, #0]
 802a446:	f8d9 2000 	ldr.w	r2, [r9]
 802a44a:	4420      	add	r0, r4
 802a44c:	4282      	cmp	r2, r0
 802a44e:	bfc8      	it	gt
 802a450:	f8c9 0000 	strgt.w	r0, [r9]
 802a454:	683b      	ldr	r3, [r7, #0]
 802a456:	4298      	cmp	r0, r3
 802a458:	bfc8      	it	gt
 802a45a:	6038      	strgt	r0, [r7, #0]
 802a45c:	9800      	ldr	r0, [sp, #0]
 802a45e:	f7ff fe55 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a462:	a903      	add	r1, sp, #12
 802a464:	9003      	str	r0, [sp, #12]
 802a466:	4650      	mov	r0, sl
 802a468:	f7ea f8c8 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a46c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802a470:	6832      	ldr	r2, [r6, #0]
 802a472:	1a18      	subs	r0, r3, r0
 802a474:	1b03      	subs	r3, r0, r4
 802a476:	429a      	cmp	r2, r3
 802a478:	bfc8      	it	gt
 802a47a:	6033      	strgt	r3, [r6, #0]
 802a47c:	682a      	ldr	r2, [r5, #0]
 802a47e:	4293      	cmp	r3, r2
 802a480:	bfc8      	it	gt
 802a482:	602b      	strgt	r3, [r5, #0]
 802a484:	6833      	ldr	r3, [r6, #0]
 802a486:	4404      	add	r4, r0
 802a488:	42a3      	cmp	r3, r4
 802a48a:	bfc8      	it	gt
 802a48c:	6034      	strgt	r4, [r6, #0]
 802a48e:	682b      	ldr	r3, [r5, #0]
 802a490:	429c      	cmp	r4, r3
 802a492:	bfc8      	it	gt
 802a494:	602c      	strgt	r4, [r5, #0]
 802a496:	e722      	b.n	802a2de <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0802a498 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 802a498:	b530      	push	{r4, r5, lr}
 802a49a:	4604      	mov	r4, r0
 802a49c:	4608      	mov	r0, r1
 802a49e:	4611      	mov	r1, r2
 802a4a0:	461a      	mov	r2, r3
 802a4a2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 802a4a6:	b089      	sub	sp, #36	; 0x24
 802a4a8:	015b      	lsls	r3, r3, #5
 802a4aa:	9304      	str	r3, [sp, #16]
 802a4ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802a4b0:	2500      	movs	r5, #0
 802a4b2:	015b      	lsls	r3, r3, #5
 802a4b4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 802a4b8:	ab07      	add	r3, sp, #28
 802a4ba:	9302      	str	r3, [sp, #8]
 802a4bc:	ab06      	add	r3, sp, #24
 802a4be:	9301      	str	r3, [sp, #4]
 802a4c0:	ab05      	add	r3, sp, #20
 802a4c2:	9300      	str	r3, [sp, #0]
 802a4c4:	ab04      	add	r3, sp, #16
 802a4c6:	9505      	str	r5, [sp, #20]
 802a4c8:	f7ff fe3e 	bl	802a148 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802a4cc:	2520      	movs	r5, #32
 802a4ce:	9a04      	ldr	r2, [sp, #16]
 802a4d0:	9805      	ldr	r0, [sp, #20]
 802a4d2:	fb92 f2f5 	sdiv	r2, r2, r5
 802a4d6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a4da:	b292      	uxth	r2, r2
 802a4dc:	3002      	adds	r0, #2
 802a4de:	1a80      	subs	r0, r0, r2
 802a4e0:	9b06      	ldr	r3, [sp, #24]
 802a4e2:	9907      	ldr	r1, [sp, #28]
 802a4e4:	fb93 f3f5 	sdiv	r3, r3, r5
 802a4e8:	fb91 f1f5 	sdiv	r1, r1, r5
 802a4ec:	b29b      	uxth	r3, r3
 802a4ee:	3102      	adds	r1, #2
 802a4f0:	1ac9      	subs	r1, r1, r3
 802a4f2:	3a01      	subs	r2, #1
 802a4f4:	3b01      	subs	r3, #1
 802a4f6:	80a0      	strh	r0, [r4, #4]
 802a4f8:	4620      	mov	r0, r4
 802a4fa:	8022      	strh	r2, [r4, #0]
 802a4fc:	8063      	strh	r3, [r4, #2]
 802a4fe:	80e1      	strh	r1, [r4, #6]
 802a500:	b009      	add	sp, #36	; 0x24
 802a502:	bd30      	pop	{r4, r5, pc}

0802a504 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 802a504:	b510      	push	{r4, lr}
 802a506:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802a50a:	4604      	mov	r4, r0
 802a50c:	f7ff ffc4 	bl	802a498 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a510:	4620      	mov	r0, r4
 802a512:	bd10      	pop	{r4, pc}

0802a514 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 802a514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a516:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802a51a:	4606      	mov	r6, r0
 802a51c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802a520:	6813      	ldr	r3, [r2, #0]
 802a522:	42a5      	cmp	r5, r4
 802a524:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802a528:	da2b      	bge.n	802a582 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802a52a:	42a3      	cmp	r3, r4
 802a52c:	dd14      	ble.n	802a558 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802a52e:	b168      	cbz	r0, 802a54c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a530:	4267      	negs	r7, r4
 802a532:	fb97 f2f0 	sdiv	r2, r7, r0
 802a536:	fb00 7212 	mls	r2, r0, r2, r7
 802a53a:	1a82      	subs	r2, r0, r2
 802a53c:	fb92 f7f0 	sdiv	r7, r2, r0
 802a540:	fb00 2017 	mls	r0, r0, r7, r2
 802a544:	1a24      	subs	r4, r4, r0
 802a546:	42ac      	cmp	r4, r5
 802a548:	bfb8      	it	lt
 802a54a:	462c      	movlt	r4, r5
 802a54c:	4630      	mov	r0, r6
 802a54e:	4622      	mov	r2, r4
 802a550:	f7ff ffa2 	bl	802a498 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802a554:	4630      	mov	r0, r6
 802a556:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a558:	42ab      	cmp	r3, r5
 802a55a:	dd0e      	ble.n	802a57a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a55c:	b168      	cbz	r0, 802a57a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802a55e:	425f      	negs	r7, r3
 802a560:	fb97 f2f0 	sdiv	r2, r7, r0
 802a564:	fb00 7212 	mls	r2, r0, r2, r7
 802a568:	1a82      	subs	r2, r0, r2
 802a56a:	fb92 f7f0 	sdiv	r7, r2, r0
 802a56e:	fb00 2017 	mls	r0, r0, r7, r2
 802a572:	1a1b      	subs	r3, r3, r0
 802a574:	42ab      	cmp	r3, r5
 802a576:	bfb8      	it	lt
 802a578:	462b      	movlt	r3, r5
 802a57a:	4622      	mov	r2, r4
 802a57c:	461c      	mov	r4, r3
 802a57e:	4613      	mov	r3, r2
 802a580:	e7e4      	b.n	802a54c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a582:	42a3      	cmp	r3, r4
 802a584:	da10      	bge.n	802a5a8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 802a586:	b148      	cbz	r0, 802a59c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 802a588:	fb94 f2f0 	sdiv	r2, r4, r0
 802a58c:	fb00 4212 	mls	r2, r0, r2, r4
 802a590:	1a82      	subs	r2, r0, r2
 802a592:	fb92 f7f0 	sdiv	r7, r2, r0
 802a596:	fb00 2017 	mls	r0, r0, r7, r2
 802a59a:	4404      	add	r4, r0
 802a59c:	42a5      	cmp	r5, r4
 802a59e:	bfa8      	it	ge
 802a5a0:	4625      	movge	r5, r4
 802a5a2:	461c      	mov	r4, r3
 802a5a4:	462b      	mov	r3, r5
 802a5a6:	e7d1      	b.n	802a54c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5a8:	42ab      	cmp	r3, r5
 802a5aa:	dacf      	bge.n	802a54c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5ac:	2800      	cmp	r0, #0
 802a5ae:	d0cd      	beq.n	802a54c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 802a5b0:	fb93 f2f0 	sdiv	r2, r3, r0
 802a5b4:	fb00 3212 	mls	r2, r0, r2, r3
 802a5b8:	1a82      	subs	r2, r0, r2
 802a5ba:	fb92 f7f0 	sdiv	r7, r2, r0
 802a5be:	fb00 2017 	mls	r0, r0, r7, r2
 802a5c2:	4403      	add	r3, r0
 802a5c4:	42ab      	cmp	r3, r5
 802a5c6:	bfa8      	it	ge
 802a5c8:	462b      	movge	r3, r5
 802a5ca:	e7bf      	b.n	802a54c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0802a5cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 802a5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a5d0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 802a5d4:	42ae      	cmp	r6, r5
 802a5d6:	bfa2      	ittt	ge
 802a5d8:	4633      	movge	r3, r6
 802a5da:	462e      	movge	r6, r5
 802a5dc:	461d      	movge	r5, r3
 802a5de:	1bab      	subs	r3, r5, r6
 802a5e0:	468b      	mov	fp, r1
 802a5e2:	6c01      	ldr	r1, [r0, #64]	; 0x40
 802a5e4:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802a5e8:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802a5ec:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a5f0:	f04f 0220 	mov.w	r2, #32
 802a5f4:	b0ab      	sub	sp, #172	; 0xac
 802a5f6:	4604      	mov	r4, r0
 802a5f8:	bfa4      	itt	ge
 802a5fa:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802a5fe:	2600      	movge	r6, #0
 802a600:	fb99 f9f2 	sdiv	r9, r9, r2
 802a604:	fb9a faf2 	sdiv	sl, sl, r2
 802a608:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802a60a:	2900      	cmp	r1, #0
 802a60c:	f000 80f5 	beq.w	802a7fa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 802a610:	f9bb 0000 	ldrsh.w	r0, [fp]
 802a614:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802a618:	eba9 0700 	sub.w	r7, r9, r0
 802a61c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 802a620:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 802a624:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802a628:	ebaa 0802 	sub.w	r8, sl, r2
 802a62c:	4407      	add	r7, r0
 802a62e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 802a632:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802a636:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802a63a:	b23f      	sxth	r7, r7
 802a63c:	4490      	add	r8, r2
 802a63e:	eba9 0707 	sub.w	r7, r9, r7
 802a642:	fa0f f888 	sxth.w	r8, r8
 802a646:	ebaa 0808 	sub.w	r8, sl, r8
 802a64a:	2f00      	cmp	r7, #0
 802a64c:	bfb8      	it	lt
 802a64e:	427f      	neglt	r7, r7
 802a650:	f1b8 0f00 	cmp.w	r8, #0
 802a654:	bfb8      	it	lt
 802a656:	f1c8 0800 	rsblt	r8, r8, #0
 802a65a:	45bc      	cmp	ip, r7
 802a65c:	bfcc      	ite	gt
 802a65e:	f10c 0701 	addgt.w	r7, ip, #1
 802a662:	3701      	addle	r7, #1
 802a664:	4540      	cmp	r0, r8
 802a666:	bfc8      	it	gt
 802a668:	f100 0801 	addgt.w	r8, r0, #1
 802a66c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 802a670:	f100 0001 	add.w	r0, r0, #1
 802a674:	ea4f 0060 	mov.w	r0, r0, asr #1
 802a678:	f04f 0202 	mov.w	r2, #2
 802a67c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 802a680:	fb91 f1f2 	sdiv	r1, r1, r2
 802a684:	eba3 0301 	sub.w	r3, r3, r1
 802a688:	bfd8      	it	le
 802a68a:	f108 0801 	addle.w	r8, r8, #1
 802a68e:	9201      	str	r2, [sp, #4]
 802a690:	930d      	str	r3, [sp, #52]	; 0x34
 802a692:	f7ea f8cb 	bl	801482c <_ZN8touchgfx7CWRUtil4sineEi>
 802a696:	a92a      	add	r1, sp, #168	; 0xa8
 802a698:	fb08 f808 	mul.w	r8, r8, r8
 802a69c:	f841 0d70 	str.w	r0, [r1, #-112]!
 802a6a0:	a80d      	add	r0, sp, #52	; 0x34
 802a6a2:	f7e9 ffab 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a6a6:	fb07 8707 	mla	r7, r7, r7, r8
 802a6aa:	f04f 0c20 	mov.w	ip, #32
 802a6ae:	fb90 f0fc 	sdiv	r0, r0, ip
 802a6b2:	4340      	muls	r0, r0
 802a6b4:	4287      	cmp	r7, r0
 802a6b6:	9a01      	ldr	r2, [sp, #4]
 802a6b8:	da04      	bge.n	802a6c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 802a6ba:	2401      	movs	r4, #1
 802a6bc:	4620      	mov	r0, r4
 802a6be:	b02b      	add	sp, #172	; 0xac
 802a6c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a6c4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802a6c6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802a6c8:	fb91 f3f2 	sdiv	r3, r1, r2
 802a6cc:	4403      	add	r3, r0
 802a6ce:	fb93 f3fc 	sdiv	r3, r3, ip
 802a6d2:	f9bb 1000 	ldrsh.w	r1, [fp]
 802a6d6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802a6da:	440a      	add	r2, r1
 802a6dc:	b212      	sxth	r2, r2
 802a6de:	454a      	cmp	r2, r9
 802a6e0:	bfa8      	it	ge
 802a6e2:	464a      	movge	r2, r9
 802a6e4:	428a      	cmp	r2, r1
 802a6e6:	bfac      	ite	ge
 802a6e8:	eba9 0902 	subge.w	r9, r9, r2
 802a6ec:	eba9 0901 	sublt.w	r9, r9, r1
 802a6f0:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 802a6f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802a6f8:	440a      	add	r2, r1
 802a6fa:	b212      	sxth	r2, r2
 802a6fc:	4552      	cmp	r2, sl
 802a6fe:	bfa8      	it	ge
 802a700:	4652      	movge	r2, sl
 802a702:	428a      	cmp	r2, r1
 802a704:	bfac      	ite	ge
 802a706:	ebaa 0a02 	subge.w	sl, sl, r2
 802a70a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802a70e:	3301      	adds	r3, #1
 802a710:	fb0a fa0a 	mul.w	sl, sl, sl
 802a714:	fb09 a909 	mla	r9, r9, r9, sl
 802a718:	435b      	muls	r3, r3
 802a71a:	4599      	cmp	r9, r3
 802a71c:	dccd      	bgt.n	802a6ba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802a71e:	465a      	mov	r2, fp
 802a720:	4621      	mov	r1, r4
 802a722:	a80e      	add	r0, sp, #56	; 0x38
 802a724:	f7ff faae 	bl	8029c84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802a728:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802a72a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a72c:	9209      	str	r2, [sp, #36]	; 0x24
 802a72e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802a732:	930a      	str	r3, [sp, #40]	; 0x28
 802a734:	dd07      	ble.n	802a746 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802a736:	2102      	movs	r1, #2
 802a738:	fb93 f3f1 	sdiv	r3, r3, r1
 802a73c:	4413      	add	r3, r2
 802a73e:	930a      	str	r3, [sp, #40]	; 0x28
 802a740:	fb93 f3f1 	sdiv	r3, r3, r1
 802a744:	9309      	str	r3, [sp, #36]	; 0x24
 802a746:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a74a:	4630      	mov	r0, r6
 802a74c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a750:	930b      	str	r3, [sp, #44]	; 0x2c
 802a752:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802a756:	f7ea f889 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a75a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802a75e:	f04f 0a02 	mov.w	sl, #2
 802a762:	f849 0d74 	str.w	r0, [r9, #-116]!
 802a766:	a80b      	add	r0, sp, #44	; 0x2c
 802a768:	4649      	mov	r1, r9
 802a76a:	f7e9 ff47 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a76e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a770:	fb90 f0fa 	sdiv	r0, r0, sl
 802a774:	eb00 0b03 	add.w	fp, r0, r3
 802a778:	4630      	mov	r0, r6
 802a77a:	f7ff fcc7 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a77e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 802a782:	017f      	lsls	r7, r7, #5
 802a784:	f848 0d78 	str.w	r0, [r8, #-120]!
 802a788:	a80b      	add	r0, sp, #44	; 0x2c
 802a78a:	4641      	mov	r1, r8
 802a78c:	f7e9 ff36 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a790:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a792:	fb90 f0fa 	sdiv	r0, r0, sl
 802a796:	4659      	mov	r1, fp
 802a798:	1a12      	subs	r2, r2, r0
 802a79a:	a80e      	add	r0, sp, #56	; 0x38
 802a79c:	f7ff fbf2 	bl	8029f84 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 802a7a0:	f106 0a20 	add.w	sl, r6, #32
 802a7a4:	bb67      	cbnz	r7, 802a800 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 802a7a6:	46b3      	mov	fp, r6
 802a7a8:	45aa      	cmp	sl, r5
 802a7aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a7ac:	dc33      	bgt.n	802a816 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 802a7ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a7b0:	4650      	mov	r0, sl
 802a7b2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 802a7b6:	920b      	str	r2, [sp, #44]	; 0x2c
 802a7b8:	f7ea f858 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a7bc:	4641      	mov	r1, r8
 802a7be:	900c      	str	r0, [sp, #48]	; 0x30
 802a7c0:	a80b      	add	r0, sp, #44	; 0x2c
 802a7c2:	f7e9 ff1b 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7c6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 802a7c8:	2302      	movs	r3, #2
 802a7ca:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7ce:	eb00 0b02 	add.w	fp, r0, r2
 802a7d2:	4650      	mov	r0, sl
 802a7d4:	f7ff fc9a 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a7d8:	4649      	mov	r1, r9
 802a7da:	900d      	str	r0, [sp, #52]	; 0x34
 802a7dc:	a80b      	add	r0, sp, #44	; 0x2c
 802a7de:	f7e9 ff0d 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a7e2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a7e4:	2302      	movs	r3, #2
 802a7e6:	4659      	mov	r1, fp
 802a7e8:	fb90 f0f3 	sdiv	r0, r0, r3
 802a7ec:	1a12      	subs	r2, r2, r0
 802a7ee:	a80e      	add	r0, sp, #56	; 0x38
 802a7f0:	46d3      	mov	fp, sl
 802a7f2:	f7ff fc14 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a7f6:	44ba      	add	sl, r7
 802a7f8:	e7d6      	b.n	802a7a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802a7fa:	fb93 f3f2 	sdiv	r3, r3, r2
 802a7fe:	e768      	b.n	802a6d2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 802a800:	fb9a f2f7 	sdiv	r2, sl, r7
 802a804:	fb07 a212 	mls	r2, r7, r2, sl
 802a808:	1aba      	subs	r2, r7, r2
 802a80a:	fb92 f1f7 	sdiv	r1, r2, r7
 802a80e:	fb07 2211 	mls	r2, r7, r1, r2
 802a812:	4492      	add	sl, r2
 802a814:	e7c7      	b.n	802a7a6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 802a816:	45ab      	cmp	fp, r5
 802a818:	da23      	bge.n	802a862 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802a81a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a81c:	4628      	mov	r0, r5
 802a81e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 802a822:	920b      	str	r2, [sp, #44]	; 0x2c
 802a824:	f7ea f822 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a828:	4641      	mov	r1, r8
 802a82a:	900c      	str	r0, [sp, #48]	; 0x30
 802a82c:	a80b      	add	r0, sp, #44	; 0x2c
 802a82e:	f7e9 fee5 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a832:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a834:	f04f 0a02 	mov.w	sl, #2
 802a838:	fb90 f0fa 	sdiv	r0, r0, sl
 802a83c:	4403      	add	r3, r0
 802a83e:	4628      	mov	r0, r5
 802a840:	9301      	str	r3, [sp, #4]
 802a842:	f7ff fc63 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a846:	4649      	mov	r1, r9
 802a848:	900d      	str	r0, [sp, #52]	; 0x34
 802a84a:	a80b      	add	r0, sp, #44	; 0x2c
 802a84c:	f7e9 fed6 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a850:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a852:	9b01      	ldr	r3, [sp, #4]
 802a854:	fb90 f0fa 	sdiv	r0, r0, sl
 802a858:	4619      	mov	r1, r3
 802a85a:	1a12      	subs	r2, r2, r0
 802a85c:	a80e      	add	r0, sp, #56	; 0x38
 802a85e:	f7ff fbde 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a862:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802a864:	b99b      	cbnz	r3, 802a88e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 802a866:	1bad      	subs	r5, r5, r6
 802a868:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802a86c:	da04      	bge.n	802a878 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802a86e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 802a872:	a80e      	add	r0, sp, #56	; 0x38
 802a874:	f7ff fbd3 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a878:	21ff      	movs	r1, #255	; 0xff
 802a87a:	a80e      	add	r0, sp, #56	; 0x38
 802a87c:	f7ff fabe 	bl	8029dfc <_ZN8touchgfx6Canvas6renderEh>
 802a880:	4604      	mov	r4, r0
 802a882:	4b8a      	ldr	r3, [pc, #552]	; (802aaac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 802a884:	930e      	str	r3, [sp, #56]	; 0x38
 802a886:	a816      	add	r0, sp, #88	; 0x58
 802a888:	f7eb fcf0 	bl	801626c <_ZN8touchgfx7OutlineD1Ev>
 802a88c:	e716      	b.n	802a6bc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 802a88e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 802a892:	429a      	cmp	r2, r3
 802a894:	f0c0 8107 	bcc.w	802aaa6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 802a898:	1bab      	subs	r3, r5, r6
 802a89a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 802a89e:	9301      	str	r3, [sp, #4]
 802a8a0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802a8a4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 802a8a8:	da43      	bge.n	802a932 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a8aa:	4628      	mov	r0, r5
 802a8ac:	f7e9 ffde 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8b0:	4649      	mov	r1, r9
 802a8b2:	900d      	str	r0, [sp, #52]	; 0x34
 802a8b4:	a809      	add	r0, sp, #36	; 0x24
 802a8b6:	f7e9 fea1 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a8bc:	18c3      	adds	r3, r0, r3
 802a8be:	4628      	mov	r0, r5
 802a8c0:	9303      	str	r3, [sp, #12]
 802a8c2:	f7ff fc23 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a8c6:	4649      	mov	r1, r9
 802a8c8:	900d      	str	r0, [sp, #52]	; 0x34
 802a8ca:	a809      	add	r0, sp, #36	; 0x24
 802a8cc:	f7e9 fe96 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8d0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a8d2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 802a8d6:	1a1b      	subs	r3, r3, r0
 802a8d8:	9302      	str	r3, [sp, #8]
 802a8da:	9204      	str	r2, [sp, #16]
 802a8dc:	eb0a 0305 	add.w	r3, sl, r5
 802a8e0:	9a04      	ldr	r2, [sp, #16]
 802a8e2:	4293      	cmp	r3, r2
 802a8e4:	da25      	bge.n	802a932 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 802a8e6:	4618      	mov	r0, r3
 802a8e8:	9306      	str	r3, [sp, #24]
 802a8ea:	f7e9 ffbf 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a8ee:	4649      	mov	r1, r9
 802a8f0:	900d      	str	r0, [sp, #52]	; 0x34
 802a8f2:	a80a      	add	r0, sp, #40	; 0x28
 802a8f4:	f7e9 fe82 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a8f8:	9b03      	ldr	r3, [sp, #12]
 802a8fa:	2202      	movs	r2, #2
 802a8fc:	fb90 f0f2 	sdiv	r0, r0, r2
 802a900:	18c3      	adds	r3, r0, r3
 802a902:	9305      	str	r3, [sp, #20]
 802a904:	9b06      	ldr	r3, [sp, #24]
 802a906:	9207      	str	r2, [sp, #28]
 802a908:	4618      	mov	r0, r3
 802a90a:	f7ff fbff 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a90e:	a92a      	add	r1, sp, #168	; 0xa8
 802a910:	f841 0d78 	str.w	r0, [r1, #-120]!
 802a914:	a80a      	add	r0, sp, #40	; 0x28
 802a916:	f7e9 fe71 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a91a:	9b02      	ldr	r3, [sp, #8]
 802a91c:	9a07      	ldr	r2, [sp, #28]
 802a91e:	9905      	ldr	r1, [sp, #20]
 802a920:	fb90 f2f2 	sdiv	r2, r0, r2
 802a924:	a80e      	add	r0, sp, #56	; 0x38
 802a926:	1a9a      	subs	r2, r3, r2
 802a928:	f7ff fb79 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a92c:	9b06      	ldr	r3, [sp, #24]
 802a92e:	4453      	add	r3, sl
 802a930:	e7d6      	b.n	802a8e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 802a932:	45ab      	cmp	fp, r5
 802a934:	da25      	bge.n	802a982 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 802a936:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a93a:	4628      	mov	r0, r5
 802a93c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a940:	930b      	str	r3, [sp, #44]	; 0x2c
 802a942:	f7e9 ff93 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a946:	4641      	mov	r1, r8
 802a948:	900c      	str	r0, [sp, #48]	; 0x30
 802a94a:	a80b      	add	r0, sp, #44	; 0x2c
 802a94c:	f7e9 fe56 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a950:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a952:	2202      	movs	r2, #2
 802a954:	fb90 f0f2 	sdiv	r0, r0, r2
 802a958:	eb00 0903 	add.w	r9, r0, r3
 802a95c:	4628      	mov	r0, r5
 802a95e:	9202      	str	r2, [sp, #8]
 802a960:	f7ff fbd4 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a964:	a92a      	add	r1, sp, #168	; 0xa8
 802a966:	f841 0d74 	str.w	r0, [r1, #-116]!
 802a96a:	a80b      	add	r0, sp, #44	; 0x2c
 802a96c:	f7e9 fe46 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a970:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802a972:	9a02      	ldr	r2, [sp, #8]
 802a974:	fb90 f2f2 	sdiv	r2, r0, r2
 802a978:	4649      	mov	r1, r9
 802a97a:	1a9a      	subs	r2, r3, r2
 802a97c:	a80e      	add	r0, sp, #56	; 0x38
 802a97e:	f7ff fb4e 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a982:	46d9      	mov	r9, fp
 802a984:	2502      	movs	r5, #2
 802a986:	45b1      	cmp	r9, r6
 802a988:	db25      	blt.n	802a9d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 802a98a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a98e:	4648      	mov	r0, r9
 802a990:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a994:	930b      	str	r3, [sp, #44]	; 0x2c
 802a996:	f7e9 ff69 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a99a:	4641      	mov	r1, r8
 802a99c:	900c      	str	r0, [sp, #48]	; 0x30
 802a99e:	a80b      	add	r0, sp, #44	; 0x2c
 802a9a0:	f7e9 fe2c 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802a9a6:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9aa:	eb00 0b03 	add.w	fp, r0, r3
 802a9ae:	4648      	mov	r0, r9
 802a9b0:	f7ff fbac 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802a9b4:	a90d      	add	r1, sp, #52	; 0x34
 802a9b6:	900d      	str	r0, [sp, #52]	; 0x34
 802a9b8:	a80b      	add	r0, sp, #44	; 0x2c
 802a9ba:	f7e9 fe1f 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9be:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802a9c0:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9c4:	4659      	mov	r1, fp
 802a9c6:	1a12      	subs	r2, r2, r0
 802a9c8:	a80e      	add	r0, sp, #56	; 0x38
 802a9ca:	46cb      	mov	fp, r9
 802a9cc:	f7ff fb27 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802a9d0:	eba9 0907 	sub.w	r9, r9, r7
 802a9d4:	e7d7      	b.n	802a986 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 802a9d6:	455e      	cmp	r6, fp
 802a9d8:	da22      	bge.n	802aa20 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802a9da:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802a9de:	4630      	mov	r0, r6
 802a9e0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 802a9e4:	930b      	str	r3, [sp, #44]	; 0x2c
 802a9e6:	f7e9 ff41 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802a9ea:	4641      	mov	r1, r8
 802a9ec:	900c      	str	r0, [sp, #48]	; 0x30
 802a9ee:	a80b      	add	r0, sp, #44	; 0x2c
 802a9f0:	f7e9 fe04 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802a9f4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 802a9f6:	2502      	movs	r5, #2
 802a9f8:	fb90 f0f5 	sdiv	r0, r0, r5
 802a9fc:	4407      	add	r7, r0
 802a9fe:	4630      	mov	r0, r6
 802aa00:	f7ff fb84 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa04:	a92a      	add	r1, sp, #168	; 0xa8
 802aa06:	f841 0d74 	str.w	r0, [r1, #-116]!
 802aa0a:	a80b      	add	r0, sp, #44	; 0x2c
 802aa0c:	f7e9 fdf6 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 802aa12:	fb90 f0f5 	sdiv	r0, r0, r5
 802aa16:	4639      	mov	r1, r7
 802aa18:	1a12      	subs	r2, r2, r0
 802aa1a:	a80e      	add	r0, sp, #56	; 0x38
 802aa1c:	f7ff faff 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aa20:	9b01      	ldr	r3, [sp, #4]
 802aa22:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 802aa26:	f6bf af27 	bge.w	802a878 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa2a:	4630      	mov	r0, r6
 802aa2c:	f7e9 ff1e 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa30:	ad2a      	add	r5, sp, #168	; 0xa8
 802aa32:	f04f 0b02 	mov.w	fp, #2
 802aa36:	f845 0d74 	str.w	r0, [r5, #-116]!
 802aa3a:	a809      	add	r0, sp, #36	; 0x24
 802aa3c:	4629      	mov	r1, r5
 802aa3e:	f7e9 fddd 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa42:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 802aa44:	eb00 0903 	add.w	r9, r0, r3
 802aa48:	4630      	mov	r0, r6
 802aa4a:	f7ff fb5f 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa4e:	4629      	mov	r1, r5
 802aa50:	900d      	str	r0, [sp, #52]	; 0x34
 802aa52:	a809      	add	r0, sp, #36	; 0x24
 802aa54:	f7e9 fdd2 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa58:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa5a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802aa5e:	eba3 0800 	sub.w	r8, r3, r0
 802aa62:	4454      	add	r4, sl
 802aa64:	42a6      	cmp	r6, r4
 802aa66:	f77f af07 	ble.w	802a878 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802aa6a:	4620      	mov	r0, r4
 802aa6c:	f7e9 fefe 	bl	801486c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802aa70:	4629      	mov	r1, r5
 802aa72:	900d      	str	r0, [sp, #52]	; 0x34
 802aa74:	a80a      	add	r0, sp, #40	; 0x28
 802aa76:	f7e9 fdc1 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa7a:	fb90 f0fb 	sdiv	r0, r0, fp
 802aa7e:	eb00 0709 	add.w	r7, r0, r9
 802aa82:	4620      	mov	r0, r4
 802aa84:	f7ff fb42 	bl	802a10c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802aa88:	a90c      	add	r1, sp, #48	; 0x30
 802aa8a:	900c      	str	r0, [sp, #48]	; 0x30
 802aa8c:	a80a      	add	r0, sp, #40	; 0x28
 802aa8e:	f7e9 fdb5 	bl	80145fc <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802aa92:	4639      	mov	r1, r7
 802aa94:	fb90 f2fb 	sdiv	r2, r0, fp
 802aa98:	a80e      	add	r0, sp, #56	; 0x38
 802aa9a:	eba8 0202 	sub.w	r2, r8, r2
 802aa9e:	f7ff fabe 	bl	802a01e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802aaa2:	4454      	add	r4, sl
 802aaa4:	e7de      	b.n	802aa64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 802aaa6:	2400      	movs	r4, #0
 802aaa8:	e6eb      	b.n	802a882 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 802aaaa:	bf00      	nop
 802aaac:	080321ec 	.word	0x080321ec

0802aab0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 802aab0:	b570      	push	{r4, r5, r6, lr}
 802aab2:	790b      	ldrb	r3, [r1, #4]
 802aab4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 802aab8:	2b00      	cmp	r3, #0
 802aaba:	bf0c      	ite	eq
 802aabc:	2301      	moveq	r3, #1
 802aabe:	2300      	movne	r3, #0
 802aac0:	4604      	mov	r4, r0
 802aac2:	460e      	mov	r6, r1
 802aac4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 802aac8:	d109      	bne.n	802aade <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 802aaca:	b14d      	cbz	r5, 802aae0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 802aacc:	7933      	ldrb	r3, [r6, #4]
 802aace:	2b01      	cmp	r3, #1
 802aad0:	d10c      	bne.n	802aaec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aad2:	6823      	ldr	r3, [r4, #0]
 802aad4:	4620      	mov	r0, r4
 802aad6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802aad8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802aadc:	4718      	bx	r3
 802aade:	b12d      	cbz	r5, 802aaec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802aae0:	6823      	ldr	r3, [r4, #0]
 802aae2:	4620      	mov	r0, r4
 802aae4:	695b      	ldr	r3, [r3, #20]
 802aae6:	4798      	blx	r3
 802aae8:	2d00      	cmp	r5, #0
 802aaea:	d1ef      	bne.n	802aacc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802aaec:	bd70      	pop	{r4, r5, r6, pc}

0802aaee <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802aaee:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 802aaf2:	4770      	bx	lr

0802aaf4 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 802aaf4:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 802aaf8:	4770      	bx	lr

0802aafa <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802aafa:	6802      	ldr	r2, [r0, #0]
 802aafc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab00:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab02:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab06:	4710      	bx	r2

0802ab08 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 802ab08:	6802      	ldr	r2, [r0, #0]
 802ab0a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab0e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab10:	eef0 0a40 	vmov.f32	s1, s0
 802ab14:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab18:	4710      	bx	r2

0802ab1a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802ab1a:	6802      	ldr	r2, [r0, #0]
 802ab1c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab20:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 802ab22:	eeb0 1a40 	vmov.f32	s2, s0
 802ab26:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab2a:	4710      	bx	r2

0802ab2c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802ab2c:	6802      	ldr	r2, [r0, #0]
 802ab2e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab32:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab34:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab38:	4710      	bx	r2

0802ab3a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802ab3a:	6802      	ldr	r2, [r0, #0]
 802ab3c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802ab40:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab42:	eef0 0a40 	vmov.f32	s1, s0
 802ab46:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab4a:	4710      	bx	r2

0802ab4c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802ab4c:	6802      	ldr	r2, [r0, #0]
 802ab4e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802ab52:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802ab54:	eeb0 1a40 	vmov.f32	s2, s0
 802ab58:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab5c:	4710      	bx	r2

0802ab5e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802ab5e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802ab62:	4770      	bx	lr

0802ab64 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802ab64:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802ab68:	4770      	bx	lr

0802ab6a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802ab6a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802ab6e:	4770      	bx	lr

0802ab70 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 802ab70:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802ab74:	4770      	bx	lr

0802ab76 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802ab76:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802ab7a:	4770      	bx	lr

0802ab7c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802ab7c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 802ab80:	4770      	bx	lr

0802ab82 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 802ab82:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802ab86:	4770      	bx	lr

0802ab88 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802ab88:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802ab8c:	4770      	bx	lr

0802ab8e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802ab8e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802ab92:	4770      	bx	lr

0802ab94 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802ab94:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802ab98:	4770      	bx	lr

0802ab9a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802ab9a:	ee07 2a90 	vmov	s15, r2
 802ab9e:	6803      	ldr	r3, [r0, #0]
 802aba0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802aba4:	ee07 1a90 	vmov	s15, r1
 802aba8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802abac:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802abb0:	4718      	bx	r3

0802abb2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802abb2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802abb6:	4770      	bx	lr

0802abb8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802abb8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802abbc:	4770      	bx	lr

0802abbe <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802abbe:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802abc2:	4770      	bx	lr

0802abc4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802abc4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802abc8:	4770      	bx	lr

0802abca <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802abca:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802abce:	4770      	bx	lr

0802abd0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802abd0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 802abd4:	4770      	bx	lr

0802abd6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 802abd6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802abda:	4770      	bx	lr

0802abdc <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802abdc:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802abe0:	4770      	bx	lr

0802abe2 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802abe2:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 802abe6:	4770      	bx	lr

0802abe8 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 802abe8:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802abec:	4770      	bx	lr

0802abee <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802abee:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802abf2:	4770      	bx	lr

0802abf4 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 802abf4:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 802abf8:	4770      	bx	lr

0802abfa <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802abfa:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802abfe:	4770      	bx	lr

0802ac00 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802ac00:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 802ac04:	4770      	bx	lr

0802ac06 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 802ac06:	b510      	push	{r4, lr}
 802ac08:	ed2d 8b04 	vpush	{d8-d9}
 802ac0c:	6803      	ldr	r3, [r0, #0]
 802ac0e:	4604      	mov	r4, r0
 802ac10:	699b      	ldr	r3, [r3, #24]
 802ac12:	eeb0 8a40 	vmov.f32	s16, s0
 802ac16:	eef0 8a60 	vmov.f32	s17, s1
 802ac1a:	eeb0 9a41 	vmov.f32	s18, s2
 802ac1e:	4798      	blx	r3
 802ac20:	6823      	ldr	r3, [r4, #0]
 802ac22:	4620      	mov	r0, r4
 802ac24:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 802ac26:	eeb0 1a49 	vmov.f32	s2, s18
 802ac2a:	eef0 0a68 	vmov.f32	s1, s17
 802ac2e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac32:	4798      	blx	r3
 802ac34:	ecbd 8b04 	vpop	{d8-d9}
 802ac38:	6823      	ldr	r3, [r4, #0]
 802ac3a:	4620      	mov	r0, r4
 802ac3c:	699b      	ldr	r3, [r3, #24]
 802ac3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac42:	4718      	bx	r3

0802ac44 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802ac44:	b510      	push	{r4, lr}
 802ac46:	ed2d 8b02 	vpush	{d8}
 802ac4a:	6803      	ldr	r3, [r0, #0]
 802ac4c:	4604      	mov	r4, r0
 802ac4e:	699b      	ldr	r3, [r3, #24]
 802ac50:	eeb0 8a40 	vmov.f32	s16, s0
 802ac54:	4798      	blx	r3
 802ac56:	6823      	ldr	r3, [r4, #0]
 802ac58:	4620      	mov	r0, r4
 802ac5a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 802ac5e:	eeb0 0a48 	vmov.f32	s0, s16
 802ac62:	4798      	blx	r3
 802ac64:	ecbd 8b02 	vpop	{d8}
 802ac68:	6823      	ldr	r3, [r4, #0]
 802ac6a:	4620      	mov	r0, r4
 802ac6c:	699b      	ldr	r3, [r3, #24]
 802ac6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802ac72:	4718      	bx	r3

0802ac74 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802ac74:	2200      	movs	r2, #0
 802ac76:	8002      	strh	r2, [r0, #0]
 802ac78:	8042      	strh	r2, [r0, #2]
 802ac7a:	8082      	strh	r2, [r0, #4]
 802ac7c:	80c2      	strh	r2, [r0, #6]
 802ac7e:	4770      	bx	lr

0802ac80 <_ZN8touchgfx13TextureMapperD1Ev>:
 802ac80:	4770      	bx	lr

0802ac82 <_ZN8touchgfx13TextureMapperD0Ev>:
 802ac82:	b510      	push	{r4, lr}
 802ac84:	2190      	movs	r1, #144	; 0x90
 802ac86:	4604      	mov	r4, r0
 802ac88:	f001 ff73 	bl	802cb72 <_ZdlPvj>
 802ac8c:	4620      	mov	r0, r4
 802ac8e:	bd10      	pop	{r4, pc}

0802ac90 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802ac90:	b538      	push	{r3, r4, r5, lr}
 802ac92:	2500      	movs	r5, #0
 802ac94:	e9c0 5505 	strd	r5, r5, [r0, #20]
 802ac98:	2301      	movs	r3, #1
 802ac9a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802ac9e:	4b1f      	ldr	r3, [pc, #124]	; (802ad1c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802aca0:	8085      	strh	r5, [r0, #4]
 802aca2:	80c5      	strh	r5, [r0, #6]
 802aca4:	8105      	strh	r5, [r0, #8]
 802aca6:	8145      	strh	r5, [r0, #10]
 802aca8:	8185      	strh	r5, [r0, #12]
 802acaa:	81c5      	strh	r5, [r0, #14]
 802acac:	8205      	strh	r5, [r0, #16]
 802acae:	8245      	strh	r5, [r0, #18]
 802acb0:	61c5      	str	r5, [r0, #28]
 802acb2:	8405      	strh	r5, [r0, #32]
 802acb4:	8445      	strh	r5, [r0, #34]	; 0x22
 802acb6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802acba:	6003      	str	r3, [r0, #0]
 802acbc:	880b      	ldrh	r3, [r1, #0]
 802acbe:	84c3      	strh	r3, [r0, #38]	; 0x26
 802acc0:	23ff      	movs	r3, #255	; 0xff
 802acc2:	4604      	mov	r4, r0
 802acc4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 802acc8:	f7eb f96b 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802accc:	4b14      	ldr	r3, [pc, #80]	; (802ad20 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802acce:	6023      	str	r3, [r4, #0]
 802acd0:	2300      	movs	r3, #0
 802acd2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 802acd6:	4913      	ldr	r1, [pc, #76]	; (802ad24 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 802acd8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802acda:	6323      	str	r3, [r4, #48]	; 0x30
 802acdc:	6363      	str	r3, [r4, #52]	; 0x34
 802acde:	63a3      	str	r3, [r4, #56]	; 0x38
 802ace0:	63e3      	str	r3, [r4, #60]	; 0x3c
 802ace2:	6463      	str	r3, [r4, #68]	; 0x44
 802ace4:	64a3      	str	r3, [r4, #72]	; 0x48
 802ace6:	6523      	str	r3, [r4, #80]	; 0x50
 802ace8:	6563      	str	r3, [r4, #84]	; 0x54
 802acea:	65e3      	str	r3, [r4, #92]	; 0x5c
 802acec:	6623      	str	r3, [r4, #96]	; 0x60
 802acee:	66a3      	str	r3, [r4, #104]	; 0x68
 802acf0:	66e3      	str	r3, [r4, #108]	; 0x6c
 802acf2:	6763      	str	r3, [r4, #116]	; 0x74
 802acf4:	67a3      	str	r3, [r4, #120]	; 0x78
 802acf6:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802acfa:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802acfe:	230c      	movs	r3, #12
 802ad00:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 802ad04:	6422      	str	r2, [r4, #64]	; 0x40
 802ad06:	64e1      	str	r1, [r4, #76]	; 0x4c
 802ad08:	65a1      	str	r1, [r4, #88]	; 0x58
 802ad0a:	6662      	str	r2, [r4, #100]	; 0x64
 802ad0c:	6722      	str	r2, [r4, #112]	; 0x70
 802ad0e:	67e2      	str	r2, [r4, #124]	; 0x7c
 802ad10:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 802ad14:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 802ad18:	4620      	mov	r0, r4
 802ad1a:	bd38      	pop	{r3, r4, r5, pc}
 802ad1c:	08031c94 	.word	0x08031c94
 802ad20:	08032278 	.word	0x08032278
 802ad24:	447a0000 	.word	0x447a0000

0802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 802ad28:	b570      	push	{r4, r5, r6, lr}
 802ad2a:	ed2d 8b04 	vpush	{d8-d9}
 802ad2e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802ad32:	add0      	add	r5, sp, #832	; 0x340
 802ad34:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802ad36:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802ad3a:	4604      	mov	r4, r0
 802ad3c:	4628      	mov	r0, r5
 802ad3e:	f7f1 fa7f 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802ad42:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802ad44:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 802ad48:	4606      	mov	r6, r0
 802ad4a:	4628      	mov	r0, r5
 802ad4c:	f7f1 faac 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802ad50:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802ad54:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 802ad58:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802ad5a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802ad5e:	9312      	str	r3, [sp, #72]	; 0x48
 802ad60:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802ad64:	1c72      	adds	r2, r6, #1
 802ad66:	3001      	adds	r0, #1
 802ad68:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802ad6c:	ee07 2a90 	vmov	s15, r2
 802ad70:	ee06 0a90 	vmov	s13, r0
 802ad74:	ee36 6a47 	vsub.f32	s12, s12, s14
 802ad78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ad7c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 802ad80:	ee77 7a86 	vadd.f32	s15, s15, s12
 802ad84:	ee76 6aa5 	vadd.f32	s13, s13, s11
 802ad88:	9316      	str	r3, [sp, #88]	; 0x58
 802ad8a:	931a      	str	r3, [sp, #104]	; 0x68
 802ad8c:	931e      	str	r3, [sp, #120]	; 0x78
 802ad8e:	2300      	movs	r3, #0
 802ad90:	9320      	str	r3, [sp, #128]	; 0x80
 802ad92:	9321      	str	r3, [sp, #132]	; 0x84
 802ad94:	9322      	str	r3, [sp, #136]	; 0x88
 802ad96:	9324      	str	r3, [sp, #144]	; 0x90
 802ad98:	9325      	str	r3, [sp, #148]	; 0x94
 802ad9a:	9326      	str	r3, [sp, #152]	; 0x98
 802ad9c:	9328      	str	r3, [sp, #160]	; 0xa0
 802ad9e:	9329      	str	r3, [sp, #164]	; 0xa4
 802ada0:	932a      	str	r3, [sp, #168]	; 0xa8
 802ada2:	932c      	str	r3, [sp, #176]	; 0xb0
 802ada4:	932d      	str	r3, [sp, #180]	; 0xb4
 802ada6:	932e      	str	r3, [sp, #184]	; 0xb8
 802ada8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802adac:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802adb0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802adb4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802adb8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802adbc:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802adc0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802adc4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 802adc8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802adcc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802add0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802add4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 802add8:	a830      	add	r0, sp, #192	; 0xc0
 802adda:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802adde:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802ade2:	f000 fc43 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ade6:	eeb1 0a49 	vneg.f32	s0, s18
 802adea:	a830      	add	r0, sp, #192	; 0xc0
 802adec:	f000 fd12 	bl	802b814 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802adf0:	eeb1 0a68 	vneg.f32	s0, s17
 802adf4:	f000 fd1c 	bl	802b830 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802adf8:	eeb1 0a48 	vneg.f32	s0, s16
 802adfc:	f000 fd27 	bl	802b84e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae00:	a840      	add	r0, sp, #256	; 0x100
 802ae02:	f000 fc33 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae06:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802ae0a:	a840      	add	r0, sp, #256	; 0x100
 802ae0c:	f000 fc86 	bl	802b71c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802ae10:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 802ae14:	f000 fcac 	bl	802b770 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802ae18:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802ae1c:	f000 fcd1 	bl	802b7c2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802ae20:	a850      	add	r0, sp, #320	; 0x140
 802ae22:	f000 fc23 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae26:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae2a:	a850      	add	r0, sp, #320	; 0x140
 802ae2c:	f000 fd1e 	bl	802b86c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 802ae30:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae34:	f000 fd26 	bl	802b884 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802ae38:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802ae3c:	f000 fd2f 	bl	802b89e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 802ae40:	a860      	add	r0, sp, #384	; 0x180
 802ae42:	f000 fc13 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae46:	eeb0 0a49 	vmov.f32	s0, s18
 802ae4a:	a860      	add	r0, sp, #384	; 0x180
 802ae4c:	f000 fce2 	bl	802b814 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae50:	eeb0 0a68 	vmov.f32	s0, s17
 802ae54:	f000 fcec 	bl	802b830 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802ae58:	eeb0 0a48 	vmov.f32	s0, s16
 802ae5c:	f000 fcf7 	bl	802b84e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802ae60:	aa50      	add	r2, sp, #320	; 0x140
 802ae62:	a960      	add	r1, sp, #384	; 0x180
 802ae64:	a8b0      	add	r0, sp, #704	; 0x2c0
 802ae66:	f000 fc1b 	bl	802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae6a:	4628      	mov	r0, r5
 802ae6c:	aa40      	add	r2, sp, #256	; 0x100
 802ae6e:	a9b0      	add	r1, sp, #704	; 0x2c0
 802ae70:	f000 fc16 	bl	802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae74:	4629      	mov	r1, r5
 802ae76:	aa30      	add	r2, sp, #192	; 0xc0
 802ae78:	a870      	add	r0, sp, #448	; 0x1c0
 802ae7a:	f000 fc11 	bl	802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802ae7e:	a880      	add	r0, sp, #512	; 0x200
 802ae80:	f000 fbf4 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802ae84:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802ae88:	a880      	add	r0, sp, #512	; 0x200
 802ae8a:	eeb1 0a40 	vneg.f32	s0, s0
 802ae8e:	f000 fcc1 	bl	802b814 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802ae92:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802ae96:	a880      	add	r0, sp, #512	; 0x200
 802ae98:	eeb1 0a40 	vneg.f32	s0, s0
 802ae9c:	f000 fcc8 	bl	802b830 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aea0:	a890      	add	r0, sp, #576	; 0x240
 802aea2:	f000 fbe3 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aea6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802aeaa:	a890      	add	r0, sp, #576	; 0x240
 802aeac:	f000 fc26 	bl	802b6fc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802aeb0:	a8a0      	add	r0, sp, #640	; 0x280
 802aeb2:	f000 fbdb 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802aeb6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802aeba:	a8a0      	add	r0, sp, #640	; 0x280
 802aebc:	f000 fcaa 	bl	802b814 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802aec0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802aec4:	f000 fcb4 	bl	802b830 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802aec8:	aa90      	add	r2, sp, #576	; 0x240
 802aeca:	a9a0      	add	r1, sp, #640	; 0x280
 802aecc:	a8b0      	add	r0, sp, #704	; 0x2c0
 802aece:	f000 fbe7 	bl	802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aed2:	4628      	mov	r0, r5
 802aed4:	aa80      	add	r2, sp, #512	; 0x200
 802aed6:	a9b0      	add	r1, sp, #704	; 0x2c0
 802aed8:	f000 fbe2 	bl	802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aedc:	4629      	mov	r1, r5
 802aede:	aa70      	add	r2, sp, #448	; 0x1c0
 802aee0:	4668      	mov	r0, sp
 802aee2:	466d      	mov	r5, sp
 802aee4:	f000 fbdc 	bl	802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802aee8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aeea:	ae70      	add	r6, sp, #448	; 0x1c0
 802aeec:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aeee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aef0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aef2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802aef4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802aef6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802aefa:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802aefe:	2500      	movs	r5, #0
 802af00:	0129      	lsls	r1, r5, #4
 802af02:	ab20      	add	r3, sp, #128	; 0x80
 802af04:	185e      	adds	r6, r3, r1
 802af06:	ab10      	add	r3, sp, #64	; 0x40
 802af08:	4419      	add	r1, r3
 802af0a:	a870      	add	r0, sp, #448	; 0x1c0
 802af0c:	f000 fb7e 	bl	802b60c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802af10:	3501      	adds	r5, #1
 802af12:	2d04      	cmp	r5, #4
 802af14:	ed86 0a00 	vstr	s0, [r6]
 802af18:	edc6 0a01 	vstr	s1, [r6, #4]
 802af1c:	ed86 1a02 	vstr	s2, [r6, #8]
 802af20:	edc6 1a03 	vstr	s3, [r6, #12]
 802af24:	d1ec      	bne.n	802af00 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802af26:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802af2a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802af2e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802af32:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af36:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802af3a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af3e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802af42:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802af46:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af4a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af4e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802af52:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802af56:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802af5a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af5e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802af62:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af66:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802af6a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802af6e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af72:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af76:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802af7a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802af7e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802af82:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af86:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802af8a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af8e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802af92:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802af96:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802af9a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802af9e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802afa2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802afa6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802afaa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802afae:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802afb2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802afb6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802afba:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802afbe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802afc2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802afc6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802afca:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802afce:	ecbd 8b04 	vpop	{d8-d9}
 802afd2:	bd70      	pop	{r4, r5, r6, pc}

0802afd4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 802afd4:	b510      	push	{r4, lr}
 802afd6:	4604      	mov	r4, r0
 802afd8:	f7ea ffe3 	bl	8015fa2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802afdc:	4620      	mov	r0, r4
 802afde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802afe2:	f7ff bea1 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802afe6 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802afe6:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802afea:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802afee:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802aff2:	f7ff be99 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802aff6 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802aff6:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802affa:	f7ff be95 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802affe <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802affe:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802b002:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802b006:	f7ff be8f 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b00a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802b00a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b00e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b012:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b016:	bfd8      	it	le
 802b018:	eeb0 0a67 	vmovle.f32	s0, s15
 802b01c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802b020:	f7ff be82 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b024 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 802b024:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802b028:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802b02c:	f7ff be7c 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b030 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 802b030:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b034:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b038:	f7ff be76 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b03c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802b03c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802b040:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802b044:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802b048:	f7ff be6e 	b.w	802ad28 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802b04c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802b04c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b050:	ed2d 8b04 	vpush	{d8-d9}
 802b054:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802b058:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802b05c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 802b060:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802b064:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b06c:	bf54      	ite	pl
 802b06e:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b072:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b076:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b07a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b07e:	bfd8      	it	le
 802b080:	eeb0 0a49 	vmovle.f32	s0, s18
 802b084:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b08c:	bfd8      	it	le
 802b08e:	eeb0 0a68 	vmovle.f32	s0, s17
 802b092:	460c      	mov	r4, r1
 802b094:	4607      	mov	r7, r0
 802b096:	f001 ff5f 	bl	802cf58 <floorf>
 802b09a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b09e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0a2:	bf58      	it	pl
 802b0a4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b0a8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b0ac:	bf56      	itet	pl
 802b0ae:	ee10 3a10 	vmovpl	r3, s0
 802b0b2:	2600      	movmi	r6, #0
 802b0b4:	b21e      	sxthpl	r6, r3
 802b0b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0ba:	bfd8      	it	le
 802b0bc:	eeb0 8a69 	vmovle.f32	s16, s19
 802b0c0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b0c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0c8:	bf58      	it	pl
 802b0ca:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b0ce:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0d6:	bf54      	ite	pl
 802b0d8:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b0dc:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b0e0:	f001 fef8 	bl	802ced4 <ceilf>
 802b0e4:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802b0e8:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802b0ec:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802b0f0:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 802b0f4:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802b0f8:	ee07 8a90 	vmov	s15, r8
 802b0fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b100:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b108:	bfd8      	it	le
 802b10a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b10e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b112:	bfdc      	itt	le
 802b114:	ee10 3a10 	vmovle	r3, s0
 802b118:	fa0f f883 	sxthle.w	r8, r3
 802b11c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b120:	bf54      	ite	pl
 802b122:	eeb0 0a69 	vmovpl.f32	s0, s19
 802b126:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b12a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802b12e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b132:	bfd8      	it	le
 802b134:	eeb0 0a49 	vmovle.f32	s0, s18
 802b138:	eef4 8ac0 	vcmpe.f32	s17, s0
 802b13c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b140:	bfd8      	it	le
 802b142:	eeb0 0a68 	vmovle.f32	s0, s17
 802b146:	f001 ff07 	bl	802cf58 <floorf>
 802b14a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b14e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b152:	bf58      	it	pl
 802b154:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802b158:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802b15c:	bf56      	itet	pl
 802b15e:	ee10 3a10 	vmovpl	r3, s0
 802b162:	2500      	movmi	r5, #0
 802b164:	b21d      	sxthpl	r5, r3
 802b166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b16a:	bfd8      	it	le
 802b16c:	eeb0 8a69 	vmovle.f32	s16, s19
 802b170:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802b174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b178:	bf58      	it	pl
 802b17a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802b17e:	eef4 8ac8 	vcmpe.f32	s17, s16
 802b182:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b186:	bf54      	ite	pl
 802b188:	eeb0 0a68 	vmovpl.f32	s0, s17
 802b18c:	eeb0 0a48 	vmovmi.f32	s0, s16
 802b190:	f001 fea0 	bl	802ced4 <ceilf>
 802b194:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 802b198:	803e      	strh	r6, [r7, #0]
 802b19a:	ee07 3a90 	vmov	s15, r3
 802b19e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1a2:	807d      	strh	r5, [r7, #2]
 802b1a4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802b1a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1ac:	bfd8      	it	le
 802b1ae:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802b1b2:	eba8 0606 	sub.w	r6, r8, r6
 802b1b6:	bfdc      	itt	le
 802b1b8:	ee10 3a10 	vmovle	r3, s0
 802b1bc:	b21b      	sxthle	r3, r3
 802b1be:	1b5d      	subs	r5, r3, r5
 802b1c0:	80be      	strh	r6, [r7, #4]
 802b1c2:	80fd      	strh	r5, [r7, #6]
 802b1c4:	ecbd 8b04 	vpop	{d8-d9}
 802b1c8:	4638      	mov	r0, r7
 802b1ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802b1ce <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802b1ce:	b513      	push	{r0, r1, r4, lr}
 802b1d0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b1d4:	4604      	mov	r4, r0
 802b1d6:	b143      	cbz	r3, 802b1ea <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 802b1d8:	4601      	mov	r1, r0
 802b1da:	4668      	mov	r0, sp
 802b1dc:	f7ff ff36 	bl	802b04c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802b1e0:	6823      	ldr	r3, [r4, #0]
 802b1e2:	4669      	mov	r1, sp
 802b1e4:	691b      	ldr	r3, [r3, #16]
 802b1e6:	4620      	mov	r0, r4
 802b1e8:	4798      	blx	r3
 802b1ea:	b002      	add	sp, #8
 802b1ec:	bd10      	pop	{r4, pc}

0802b1ee <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802b1ee:	4603      	mov	r3, r0
 802b1f0:	3026      	adds	r0, #38	; 0x26
 802b1f2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802b1f6:	b90b      	cbnz	r3, 802b1fc <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802b1f8:	f7ee bdfa 	b.w	8019df0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802b1fc:	f7ee be08 	b.w	8019e10 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802b200 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802b200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b204:	ed2d 8b04 	vpush	{d8-d9}
 802b208:	4604      	mov	r4, r0
 802b20a:	469b      	mov	fp, r3
 802b20c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802b210:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802b214:	f9b1 6000 	ldrsh.w	r6, [r1]
 802b218:	8888      	ldrh	r0, [r1, #4]
 802b21a:	b0b3      	sub	sp, #204	; 0xcc
 802b21c:	4430      	add	r0, r6
 802b21e:	b280      	uxth	r0, r0
 802b220:	9206      	str	r2, [sp, #24]
 802b222:	fa0f fe80 	sxth.w	lr, r0
 802b226:	2200      	movs	r2, #0
 802b228:	4596      	cmp	lr, r2
 802b22a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802b22e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802b232:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802b236:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802b238:	9211      	str	r2, [sp, #68]	; 0x44
 802b23a:	f340 8129 	ble.w	802b490 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b23e:	45b4      	cmp	ip, r6
 802b240:	f340 8126 	ble.w	802b490 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b244:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802b248:	88ca      	ldrh	r2, [r1, #6]
 802b24a:	442a      	add	r2, r5
 802b24c:	b292      	uxth	r2, r2
 802b24e:	b211      	sxth	r1, r2
 802b250:	2900      	cmp	r1, #0
 802b252:	f340 811d 	ble.w	802b490 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b256:	42ab      	cmp	r3, r5
 802b258:	f340 811a 	ble.w	802b490 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802b25c:	45f4      	cmp	ip, lr
 802b25e:	bfb8      	it	lt
 802b260:	fa1f f08c 	uxthlt.w	r0, ip
 802b264:	428b      	cmp	r3, r1
 802b266:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802b26a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b26e:	bfb8      	it	lt
 802b270:	b29a      	uxthlt	r2, r3
 802b272:	1b80      	subs	r0, r0, r6
 802b274:	1b52      	subs	r2, r2, r5
 802b276:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802b27a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802b27e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802b282:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802b286:	ab11      	add	r3, sp, #68	; 0x44
 802b288:	e893 0003 	ldmia.w	r3, {r0, r1}
 802b28c:	6822      	ldr	r2, [r4, #0]
 802b28e:	9307      	str	r3, [sp, #28]
 802b290:	ad13      	add	r5, sp, #76	; 0x4c
 802b292:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802b294:	e885 0003 	stmia.w	r5, {r0, r1}
 802b298:	4629      	mov	r1, r5
 802b29a:	4620      	mov	r0, r4
 802b29c:	4790      	blx	r2
 802b29e:	4621      	mov	r1, r4
 802b2a0:	a815      	add	r0, sp, #84	; 0x54
 802b2a2:	f7ee fd01 	bl	8019ca8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802b2a6:	a815      	add	r0, sp, #84	; 0x54
 802b2a8:	f7ed f9c6 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2ac:	9b07      	ldr	r3, [sp, #28]
 802b2ae:	1d26      	adds	r6, r4, #4
 802b2b0:	4618      	mov	r0, r3
 802b2b2:	4631      	mov	r1, r6
 802b2b4:	f7ed fa04 	bl	80186c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802b2b8:	4628      	mov	r0, r5
 802b2ba:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802b2be:	f7ed f9bb 	bl	8018638 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802b2c2:	4628      	mov	r0, r5
 802b2c4:	f7f1 f8a8 	bl	801c418 <_ZNK8touchgfx6Bitmap7getDataEv>
 802b2c8:	9007      	str	r0, [sp, #28]
 802b2ca:	2800      	cmp	r0, #0
 802b2cc:	f000 80db 	beq.w	802b486 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802b2d0:	f8db 2000 	ldr.w	r2, [fp]
 802b2d4:	9209      	str	r2, [sp, #36]	; 0x24
 802b2d6:	f8db 2004 	ldr.w	r2, [fp, #4]
 802b2da:	920a      	str	r2, [sp, #40]	; 0x28
 802b2dc:	f8db 2008 	ldr.w	r2, [fp, #8]
 802b2e0:	920b      	str	r2, [sp, #44]	; 0x2c
 802b2e2:	f8db 200c 	ldr.w	r2, [fp, #12]
 802b2e6:	920c      	str	r2, [sp, #48]	; 0x30
 802b2e8:	f8da 2000 	ldr.w	r2, [sl]
 802b2ec:	920d      	str	r2, [sp, #52]	; 0x34
 802b2ee:	f8da 2004 	ldr.w	r2, [sl, #4]
 802b2f2:	920e      	str	r2, [sp, #56]	; 0x38
 802b2f4:	f8da 2008 	ldr.w	r2, [sl, #8]
 802b2f8:	920f      	str	r2, [sp, #60]	; 0x3c
 802b2fa:	f8da 200c 	ldr.w	r2, [sl, #12]
 802b2fe:	9210      	str	r2, [sp, #64]	; 0x40
 802b300:	a90d      	add	r1, sp, #52	; 0x34
 802b302:	4632      	mov	r2, r6
 802b304:	a809      	add	r0, sp, #36	; 0x24
 802b306:	f7ed f9bf 	bl	8018688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b30a:	4632      	mov	r2, r6
 802b30c:	a90e      	add	r1, sp, #56	; 0x38
 802b30e:	a80a      	add	r0, sp, #40	; 0x28
 802b310:	f7ed f9ba 	bl	8018688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b314:	4632      	mov	r2, r6
 802b316:	a90f      	add	r1, sp, #60	; 0x3c
 802b318:	a80b      	add	r0, sp, #44	; 0x2c
 802b31a:	f7ed f9b5 	bl	8018688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b31e:	4632      	mov	r2, r6
 802b320:	a910      	add	r1, sp, #64	; 0x40
 802b322:	a80c      	add	r0, sp, #48	; 0x30
 802b324:	f7ed f9b0 	bl	8018688 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802b328:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802b32c:	edd7 4a00 	vldr	s9, [r7]
 802b330:	edd7 5a01 	vldr	s11, [r7, #4]
 802b334:	ed98 4a00 	vldr	s8, [r8]
 802b338:	ed98 5a01 	vldr	s10, [r8, #4]
 802b33c:	ed99 9a00 	vldr	s18, [r9]
 802b340:	ed99 8a01 	vldr	s16, [r9, #4]
 802b344:	edd9 8a02 	vldr	s17, [r9, #8]
 802b348:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802b34c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 802b350:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 802b354:	eef0 6a67 	vmov.f32	s13, s15
 802b358:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802b35c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 802b360:	eeb0 7a67 	vmov.f32	s14, s15
 802b364:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802b368:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802b36c:	eeb0 6a67 	vmov.f32	s12, s15
 802b370:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b374:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802b378:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802b37c:	ee16 6a10 	vmov	r6, s12
 802b380:	eeb0 6a67 	vmov.f32	s12, s15
 802b384:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b388:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802b38c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802b390:	f8d8 b008 	ldr.w	fp, [r8, #8]
 802b394:	68ff      	ldr	r7, [r7, #12]
 802b396:	9624      	str	r6, [sp, #144]	; 0x90
 802b398:	ee16 0a10 	vmov	r0, s12
 802b39c:	eeb0 6a67 	vmov.f32	s12, s15
 802b3a0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3a4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 802b3a8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802b3ac:	ee16 1a10 	vmov	r1, s12
 802b3b0:	eeb0 6a67 	vmov.f32	s12, s15
 802b3b4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3b8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802b3bc:	ee16 2a10 	vmov	r2, s12
 802b3c0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 802b3c4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 802b3c8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802b3cc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802b3d0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 802b3d4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 802b3d8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802b3dc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802b3e0:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 802b3e4:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802b3e8:	922d      	str	r2, [sp, #180]	; 0xb4
 802b3ea:	4a2b      	ldr	r2, [pc, #172]	; (802b498 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802b3ec:	9b06      	ldr	r3, [sp, #24]
 802b3ee:	8812      	ldrh	r2, [r2, #0]
 802b3f0:	9317      	str	r3, [sp, #92]	; 0x5c
 802b3f2:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802b3f6:	9b07      	ldr	r3, [sp, #28]
 802b3f8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802b3fc:	4628      	mov	r0, r5
 802b3fe:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802b402:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802b406:	9218      	str	r2, [sp, #96]	; 0x60
 802b408:	9319      	str	r3, [sp, #100]	; 0x64
 802b40a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802b40e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802b412:	9731      	str	r7, [sp, #196]	; 0xc4
 802b414:	f7f1 f830 	bl	801c478 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802b418:	901a      	str	r0, [sp, #104]	; 0x68
 802b41a:	4628      	mov	r0, r5
 802b41c:	f7f0 ff10 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b420:	901b      	str	r0, [sp, #108]	; 0x6c
 802b422:	4628      	mov	r0, r5
 802b424:	f7f0 ff40 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b428:	901c      	str	r0, [sp, #112]	; 0x70
 802b42a:	4628      	mov	r0, r5
 802b42c:	f7f0 ff08 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b430:	eeb4 9a48 	vcmp.f32	s18, s16
 802b434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b438:	901d      	str	r0, [sp, #116]	; 0x74
 802b43a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802b43e:	d107      	bne.n	802b450 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 802b440:	eeb4 8a68 	vcmp.f32	s16, s17
 802b444:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b448:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802b44c:	bf08      	it	eq
 802b44e:	461e      	moveq	r6, r3
 802b450:	4b12      	ldr	r3, [pc, #72]	; (802b49c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 802b452:	681b      	ldr	r3, [r3, #0]
 802b454:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802b458:	b10a      	cbz	r2, 802b45e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802b45a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802b45c:	b905      	cbnz	r5, 802b460 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802b45e:	689d      	ldr	r5, [r3, #8]
 802b460:	682b      	ldr	r3, [r5, #0]
 802b462:	4620      	mov	r0, r4
 802b464:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802b466:	f7ff fec2 	bl	802b1ee <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802b46a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802b46e:	9604      	str	r6, [sp, #16]
 802b470:	e9cd 0302 	strd	r0, r3, [sp, #8]
 802b474:	ab13      	add	r3, sp, #76	; 0x4c
 802b476:	9301      	str	r3, [sp, #4]
 802b478:	ab15      	add	r3, sp, #84	; 0x54
 802b47a:	9300      	str	r3, [sp, #0]
 802b47c:	aa1e      	add	r2, sp, #120	; 0x78
 802b47e:	ab19      	add	r3, sp, #100	; 0x64
 802b480:	a917      	add	r1, sp, #92	; 0x5c
 802b482:	4628      	mov	r0, r5
 802b484:	47b8      	blx	r7
 802b486:	b033      	add	sp, #204	; 0xcc
 802b488:	ecbd 8b04 	vpop	{d8-d9}
 802b48c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b490:	2300      	movs	r3, #0
 802b492:	9312      	str	r3, [sp, #72]	; 0x48
 802b494:	e6f7      	b.n	802b286 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 802b496:	bf00      	nop
 802b498:	20013836 	.word	0x20013836
 802b49c:	2001383c 	.word	0x2001383c

0802b4a0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802b4a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b4a4:	ed2d 8b02 	vpush	{d8}
 802b4a8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802b4ac:	b098      	sub	sp, #96	; 0x60
 802b4ae:	4604      	mov	r4, r0
 802b4b0:	4688      	mov	r8, r1
 802b4b2:	2b00      	cmp	r3, #0
 802b4b4:	d077      	beq.n	802b5a6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 802b4b6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802b4ba:	4628      	mov	r0, r5
 802b4bc:	f7f0 fec0 	bl	801c240 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802b4c0:	ee07 0a90 	vmov	s15, r0
 802b4c4:	4628      	mov	r0, r5
 802b4c6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802b4ca:	f7f0 feed 	bl	801c2a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802b4ce:	4b4e      	ldr	r3, [pc, #312]	; (802b608 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802b4d0:	781b      	ldrb	r3, [r3, #0]
 802b4d2:	ee07 0a90 	vmov	s15, r0
 802b4d6:	2b01      	cmp	r3, #1
 802b4d8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b4dc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802b4e0:	d066      	beq.n	802b5b0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802b4e2:	eeb0 6a47 	vmov.f32	s12, s14
 802b4e6:	ee17 3a10 	vmov	r3, s14
 802b4ea:	eeb0 4a48 	vmov.f32	s8, s16
 802b4ee:	eeb0 7a48 	vmov.f32	s14, s16
 802b4f2:	eef0 4a67 	vmov.f32	s9, s15
 802b4f6:	eeb0 8a67 	vmov.f32	s16, s15
 802b4fa:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802b4fe:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802b502:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802b506:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802b50a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802b50e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802b512:	6f25      	ldr	r5, [r4, #112]	; 0x70
 802b514:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802b516:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802b518:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802b51c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802b520:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802b524:	ee73 1a65 	vsub.f32	s3, s6, s11
 802b528:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802b52c:	ee32 1a45 	vsub.f32	s2, s4, s10
 802b530:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 802b534:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802b538:	eee1 6a21 	vfma.f32	s13, s2, s3
 802b53c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 802b540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b544:	dd3d      	ble.n	802b5c2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802b546:	ed8d 5a04 	vstr	s10, [sp, #16]
 802b54a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802b54e:	edcd 2a06 	vstr	s5, [sp, #24]
 802b552:	f8cd c01c 	str.w	ip, [sp, #28]
 802b556:	edcd 5a08 	vstr	s11, [sp, #32]
 802b55a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802b55e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 802b562:	970b      	str	r7, [sp, #44]	; 0x2c
 802b564:	960c      	str	r6, [sp, #48]	; 0x30
 802b566:	950d      	str	r5, [sp, #52]	; 0x34
 802b568:	920e      	str	r2, [sp, #56]	; 0x38
 802b56a:	900f      	str	r0, [sp, #60]	; 0x3c
 802b56c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 802b570:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 802b574:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802b578:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802b57c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 802b580:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 802b584:	9316      	str	r3, [sp, #88]	; 0x58
 802b586:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 802b58a:	ab14      	add	r3, sp, #80	; 0x50
 802b58c:	9303      	str	r3, [sp, #12]
 802b58e:	ab10      	add	r3, sp, #64	; 0x40
 802b590:	9302      	str	r3, [sp, #8]
 802b592:	ab0c      	add	r3, sp, #48	; 0x30
 802b594:	9301      	str	r3, [sp, #4]
 802b596:	ab08      	add	r3, sp, #32
 802b598:	9300      	str	r3, [sp, #0]
 802b59a:	2200      	movs	r2, #0
 802b59c:	ab04      	add	r3, sp, #16
 802b59e:	4641      	mov	r1, r8
 802b5a0:	4620      	mov	r0, r4
 802b5a2:	f7ff fe2d 	bl	802b200 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 802b5a6:	b018      	add	sp, #96	; 0x60
 802b5a8:	ecbd 8b02 	vpop	{d8}
 802b5ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b5b0:	eeb0 6a48 	vmov.f32	s12, s16
 802b5b4:	eef0 4a47 	vmov.f32	s9, s14
 802b5b8:	ee17 3a90 	vmov	r3, s15
 802b5bc:	eeb0 4a67 	vmov.f32	s8, s15
 802b5c0:	e79b      	b.n	802b4fa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 802b5c2:	ed8d 5a05 	vstr	s10, [sp, #20]
 802b5c6:	ed8d 2a04 	vstr	s4, [sp, #16]
 802b5ca:	f8cd c018 	str.w	ip, [sp, #24]
 802b5ce:	edcd 2a07 	vstr	s5, [sp, #28]
 802b5d2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 802b5d6:	ed8d 3a08 	vstr	s6, [sp, #32]
 802b5da:	970a      	str	r7, [sp, #40]	; 0x28
 802b5dc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 802b5e0:	960d      	str	r6, [sp, #52]	; 0x34
 802b5e2:	950c      	str	r5, [sp, #48]	; 0x30
 802b5e4:	900e      	str	r0, [sp, #56]	; 0x38
 802b5e6:	920f      	str	r2, [sp, #60]	; 0x3c
 802b5e8:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802b5ec:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 802b5f0:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 802b5f4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802b5f8:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802b5fc:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 802b600:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 802b604:	9317      	str	r3, [sp, #92]	; 0x5c
 802b606:	e7c0      	b.n	802b58a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802b608:	20013834 	.word	0x20013834

0802b60c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802b60c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b60e:	b08d      	sub	sp, #52	; 0x34
 802b610:	2300      	movs	r3, #0
 802b612:	9304      	str	r3, [sp, #16]
 802b614:	9305      	str	r3, [sp, #20]
 802b616:	9306      	str	r3, [sp, #24]
 802b618:	aa04      	add	r2, sp, #16
 802b61a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802b61e:	9307      	str	r3, [sp, #28]
 802b620:	f100 0640 	add.w	r6, r0, #64	; 0x40
 802b624:	4613      	mov	r3, r2
 802b626:	f101 0710 	add.w	r7, r1, #16
 802b62a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b668 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802b62e:	460c      	mov	r4, r1
 802b630:	4605      	mov	r5, r0
 802b632:	ecb4 7a01 	vldmia	r4!, {s14}
 802b636:	ecf5 6a01 	vldmia	r5!, {s13}
 802b63a:	42bc      	cmp	r4, r7
 802b63c:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b640:	d1f7      	bne.n	802b632 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 802b642:	3010      	adds	r0, #16
 802b644:	42b0      	cmp	r0, r6
 802b646:	ece2 7a01 	vstmia	r2!, {s15}
 802b64a:	d1ee      	bne.n	802b62a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802b64c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802b64e:	ac0c      	add	r4, sp, #48	; 0x30
 802b650:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 802b654:	ed9d 0a08 	vldr	s0, [sp, #32]
 802b658:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802b65c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 802b660:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 802b664:	b00d      	add	sp, #52	; 0x34
 802b666:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b668:	00000000 	.word	0x00000000

0802b66c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802b66c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 802b69c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 802b670:	2300      	movs	r3, #0
 802b672:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b676:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802b67a:	2200      	movs	r2, #0
 802b67c:	4293      	cmp	r3, r2
 802b67e:	f102 0201 	add.w	r2, r2, #1
 802b682:	bf14      	ite	ne
 802b684:	eef0 6a47 	vmovne.f32	s13, s14
 802b688:	eef0 6a67 	vmoveq.f32	s13, s15
 802b68c:	2a04      	cmp	r2, #4
 802b68e:	ece1 6a01 	vstmia	r1!, {s13}
 802b692:	d1f3      	bne.n	802b67c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 802b694:	3301      	adds	r3, #1
 802b696:	2b04      	cmp	r3, #4
 802b698:	d1ed      	bne.n	802b676 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 802b69a:	4770      	bx	lr
 802b69c:	00000000 	.word	0x00000000

0802b6a0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 802b6a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b6a4:	460c      	mov	r4, r1
 802b6a6:	4605      	mov	r5, r0
 802b6a8:	4690      	mov	r8, r2
 802b6aa:	f7ff ffdf 	bl	802b66c <_ZN8touchgfx9Matrix4x4C1Ev>
 802b6ae:	4628      	mov	r0, r5
 802b6b0:	4621      	mov	r1, r4
 802b6b2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 802b6b6:	2300      	movs	r3, #0
 802b6b8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802b6f8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 802b6bc:	eb08 0603 	add.w	r6, r8, r3
 802b6c0:	460f      	mov	r7, r1
 802b6c2:	2400      	movs	r4, #0
 802b6c4:	4632      	mov	r2, r6
 802b6c6:	ecf7 6a01 	vldmia	r7!, {s13}
 802b6ca:	ed92 7a00 	vldr	s14, [r2]
 802b6ce:	3401      	adds	r4, #1
 802b6d0:	2c04      	cmp	r4, #4
 802b6d2:	f106 0610 	add.w	r6, r6, #16
 802b6d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b6da:	d1f3      	bne.n	802b6c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802b6dc:	18c2      	adds	r2, r0, r3
 802b6de:	3304      	adds	r3, #4
 802b6e0:	2b10      	cmp	r3, #16
 802b6e2:	edc2 7a00 	vstr	s15, [r2]
 802b6e6:	d1e7      	bne.n	802b6b8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802b6e8:	3110      	adds	r1, #16
 802b6ea:	4561      	cmp	r1, ip
 802b6ec:	f100 0010 	add.w	r0, r0, #16
 802b6f0:	d1e1      	bne.n	802b6b6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 802b6f2:	4628      	mov	r0, r5
 802b6f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b6f8:	00000000 	.word	0x00000000

0802b6fc <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802b6fc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802b700:	ee87 0a80 	vdiv.f32	s0, s15, s0
 802b704:	f100 0320 	add.w	r3, r0, #32
 802b708:	3030      	adds	r0, #48	; 0x30
 802b70a:	ecf3 7a01 	vldmia	r3!, {s15}
 802b70e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b712:	4283      	cmp	r3, r0
 802b714:	edc3 7a03 	vstr	s15, [r3, #12]
 802b718:	d1f7      	bne.n	802b70a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802b71a:	4770      	bx	lr

0802b71c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802b71c:	b510      	push	{r4, lr}
 802b71e:	ed2d 8b02 	vpush	{d8}
 802b722:	4604      	mov	r4, r0
 802b724:	eef0 8a40 	vmov.f32	s17, s0
 802b728:	f001 fb8a 	bl	802ce40 <sinf>
 802b72c:	eeb0 8a40 	vmov.f32	s16, s0
 802b730:	eeb0 0a68 	vmov.f32	s0, s17
 802b734:	f001 fb38 	bl	802cda8 <cosf>
 802b738:	f104 0310 	add.w	r3, r4, #16
 802b73c:	f104 0220 	add.w	r2, r4, #32
 802b740:	eeb1 6a48 	vneg.f32	s12, s16
 802b744:	edd3 7a04 	vldr	s15, [r3, #16]
 802b748:	edd3 6a00 	vldr	s13, [r3]
 802b74c:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b750:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b754:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b758:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b75c:	eca3 7a01 	vstmia	r3!, {s14}
 802b760:	429a      	cmp	r2, r3
 802b762:	edc3 7a03 	vstr	s15, [r3, #12]
 802b766:	d1ed      	bne.n	802b744 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802b768:	ecbd 8b02 	vpop	{d8}
 802b76c:	4620      	mov	r0, r4
 802b76e:	bd10      	pop	{r4, pc}

0802b770 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 802b770:	b510      	push	{r4, lr}
 802b772:	ed2d 8b02 	vpush	{d8}
 802b776:	4604      	mov	r4, r0
 802b778:	eef0 8a40 	vmov.f32	s17, s0
 802b77c:	f001 fb60 	bl	802ce40 <sinf>
 802b780:	eeb0 8a40 	vmov.f32	s16, s0
 802b784:	eeb0 0a68 	vmov.f32	s0, s17
 802b788:	f001 fb0e 	bl	802cda8 <cosf>
 802b78c:	4623      	mov	r3, r4
 802b78e:	f104 0210 	add.w	r2, r4, #16
 802b792:	eeb1 6a48 	vneg.f32	s12, s16
 802b796:	edd3 7a08 	vldr	s15, [r3, #32]
 802b79a:	edd3 6a00 	vldr	s13, [r3]
 802b79e:	ee27 7a88 	vmul.f32	s14, s15, s16
 802b7a2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b7a6:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b7aa:	eee6 7a26 	vfma.f32	s15, s12, s13
 802b7ae:	eca3 7a01 	vstmia	r3!, {s14}
 802b7b2:	429a      	cmp	r2, r3
 802b7b4:	edc3 7a07 	vstr	s15, [r3, #28]
 802b7b8:	d1ed      	bne.n	802b796 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 802b7ba:	ecbd 8b02 	vpop	{d8}
 802b7be:	4620      	mov	r0, r4
 802b7c0:	bd10      	pop	{r4, pc}

0802b7c2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 802b7c2:	b510      	push	{r4, lr}
 802b7c4:	ed2d 8b02 	vpush	{d8}
 802b7c8:	4604      	mov	r4, r0
 802b7ca:	eef0 8a40 	vmov.f32	s17, s0
 802b7ce:	f001 fb37 	bl	802ce40 <sinf>
 802b7d2:	eeb0 8a40 	vmov.f32	s16, s0
 802b7d6:	eeb0 0a68 	vmov.f32	s0, s17
 802b7da:	f001 fae5 	bl	802cda8 <cosf>
 802b7de:	4623      	mov	r3, r4
 802b7e0:	f104 0210 	add.w	r2, r4, #16
 802b7e4:	eeb1 6a48 	vneg.f32	s12, s16
 802b7e8:	edd3 7a04 	vldr	s15, [r3, #16]
 802b7ec:	edd3 6a00 	vldr	s13, [r3]
 802b7f0:	ee26 7a27 	vmul.f32	s14, s12, s15
 802b7f4:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b7f8:	eea6 7a80 	vfma.f32	s14, s13, s0
 802b7fc:	eee6 7a88 	vfma.f32	s15, s13, s16
 802b800:	eca3 7a01 	vstmia	r3!, {s14}
 802b804:	429a      	cmp	r2, r3
 802b806:	edc3 7a03 	vstr	s15, [r3, #12]
 802b80a:	d1ed      	bne.n	802b7e8 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802b80c:	ecbd 8b02 	vpop	{d8}
 802b810:	4620      	mov	r0, r4
 802b812:	bd10      	pop	{r4, pc}

0802b814 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 802b814:	4603      	mov	r3, r0
 802b816:	f100 0210 	add.w	r2, r0, #16
 802b81a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802b81e:	edd3 7a00 	vldr	s15, [r3]
 802b822:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b826:	ece3 7a01 	vstmia	r3!, {s15}
 802b82a:	4293      	cmp	r3, r2
 802b82c:	d1f5      	bne.n	802b81a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802b82e:	4770      	bx	lr

0802b830 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 802b830:	f100 0310 	add.w	r3, r0, #16
 802b834:	f100 0220 	add.w	r2, r0, #32
 802b838:	ed93 7a08 	vldr	s14, [r3, #32]
 802b83c:	edd3 7a00 	vldr	s15, [r3]
 802b840:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b844:	ece3 7a01 	vstmia	r3!, {s15}
 802b848:	4293      	cmp	r3, r2
 802b84a:	d1f5      	bne.n	802b838 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802b84c:	4770      	bx	lr

0802b84e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802b84e:	f100 0320 	add.w	r3, r0, #32
 802b852:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b856:	ed93 7a04 	vldr	s14, [r3, #16]
 802b85a:	edd3 7a00 	vldr	s15, [r3]
 802b85e:	eee7 7a00 	vfma.f32	s15, s14, s0
 802b862:	ece3 7a01 	vstmia	r3!, {s15}
 802b866:	4293      	cmp	r3, r2
 802b868:	d1f5      	bne.n	802b856 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802b86a:	4770      	bx	lr

0802b86c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802b86c:	4603      	mov	r3, r0
 802b86e:	f100 0210 	add.w	r2, r0, #16
 802b872:	edd3 7a00 	vldr	s15, [r3]
 802b876:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b87a:	ece3 7a01 	vstmia	r3!, {s15}
 802b87e:	4293      	cmp	r3, r2
 802b880:	d1f7      	bne.n	802b872 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 802b882:	4770      	bx	lr

0802b884 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 802b884:	f100 0310 	add.w	r3, r0, #16
 802b888:	f100 0220 	add.w	r2, r0, #32
 802b88c:	edd3 7a00 	vldr	s15, [r3]
 802b890:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b894:	ece3 7a01 	vstmia	r3!, {s15}
 802b898:	4293      	cmp	r3, r2
 802b89a:	d1f7      	bne.n	802b88c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 802b89c:	4770      	bx	lr

0802b89e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 802b89e:	f100 0320 	add.w	r3, r0, #32
 802b8a2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 802b8a6:	edd3 7a00 	vldr	s15, [r3]
 802b8aa:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8ae:	ece3 7a01 	vstmia	r3!, {s15}
 802b8b2:	4293      	cmp	r3, r2
 802b8b4:	d1f7      	bne.n	802b8a6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 802b8b6:	4770      	bx	lr

0802b8b8 <arm_mean_f32>:
 802b8b8:	b430      	push	{r4, r5}
 802b8ba:	088d      	lsrs	r5, r1, #2
 802b8bc:	eddf 7a17 	vldr	s15, [pc, #92]	; 802b91c <arm_mean_f32+0x64>
 802b8c0:	d018      	beq.n	802b8f4 <arm_mean_f32+0x3c>
 802b8c2:	f100 0310 	add.w	r3, r0, #16
 802b8c6:	462c      	mov	r4, r5
 802b8c8:	ed13 7a04 	vldr	s14, [r3, #-16]
 802b8cc:	ed53 5a03 	vldr	s11, [r3, #-12]
 802b8d0:	ed13 6a02 	vldr	s12, [r3, #-8]
 802b8d4:	ed53 6a01 	vldr	s13, [r3, #-4]
 802b8d8:	ee37 7a87 	vadd.f32	s14, s15, s14
 802b8dc:	3c01      	subs	r4, #1
 802b8de:	ee77 7a25 	vadd.f32	s15, s14, s11
 802b8e2:	f103 0310 	add.w	r3, r3, #16
 802b8e6:	ee77 7a86 	vadd.f32	s15, s15, s12
 802b8ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b8ee:	d1eb      	bne.n	802b8c8 <arm_mean_f32+0x10>
 802b8f0:	eb00 1005 	add.w	r0, r0, r5, lsl #4
 802b8f4:	f011 0303 	ands.w	r3, r1, #3
 802b8f8:	d005      	beq.n	802b906 <arm_mean_f32+0x4e>
 802b8fa:	ecb0 7a01 	vldmia	r0!, {s14}
 802b8fe:	3b01      	subs	r3, #1
 802b900:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b904:	d1f9      	bne.n	802b8fa <arm_mean_f32+0x42>
 802b906:	ee07 1a10 	vmov	s14, r1
 802b90a:	eeb8 7a47 	vcvt.f32.u32	s14, s14
 802b90e:	bc30      	pop	{r4, r5}
 802b910:	eec7 7a87 	vdiv.f32	s15, s15, s14
 802b914:	edc2 7a00 	vstr	s15, [r2]
 802b918:	4770      	bx	lr
 802b91a:	bf00      	nop
 802b91c:	00000000 	.word	0x00000000

0802b920 <arm_max_f32>:
 802b920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b924:	1e4f      	subs	r7, r1, #1
 802b926:	ea5f 0897 	movs.w	r8, r7, lsr #2
 802b92a:	f100 0e04 	add.w	lr, r0, #4
 802b92e:	edd0 7a00 	vldr	s15, [r0]
 802b932:	d058      	beq.n	802b9e6 <arm_max_f32+0xc6>
 802b934:	3014      	adds	r0, #20
 802b936:	46c4      	mov	ip, r8
 802b938:	2604      	movs	r6, #4
 802b93a:	2400      	movs	r4, #0
 802b93c:	ed10 6a04 	vldr	s12, [r0, #-16]
 802b940:	ed50 6a03 	vldr	s13, [r0, #-12]
 802b944:	ed10 7a02 	vldr	s14, [r0, #-8]
 802b948:	ed50 5a01 	vldr	s11, [r0, #-4]
 802b94c:	eeb4 6ae7 	vcmpe.f32	s12, s15
 802b950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b954:	bfc8      	it	gt
 802b956:	eef0 7a46 	vmovgt.f32	s15, s12
 802b95a:	f1a6 0503 	sub.w	r5, r6, #3
 802b95e:	eef4 7ae6 	vcmpe.f32	s15, s13
 802b962:	bfc8      	it	gt
 802b964:	462c      	movgt	r4, r5
 802b966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b96a:	bf48      	it	mi
 802b96c:	eef0 7a66 	vmovmi.f32	s15, s13
 802b970:	f1a6 0502 	sub.w	r5, r6, #2
 802b974:	eef4 7ac7 	vcmpe.f32	s15, s14
 802b978:	bf48      	it	mi
 802b97a:	462c      	movmi	r4, r5
 802b97c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b980:	bf48      	it	mi
 802b982:	eef0 7a47 	vmovmi.f32	s15, s14
 802b986:	f106 35ff 	add.w	r5, r6, #4294967295
 802b98a:	eef4 7ae5 	vcmpe.f32	s15, s11
 802b98e:	bf48      	it	mi
 802b990:	462c      	movmi	r4, r5
 802b992:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b996:	bf48      	it	mi
 802b998:	4634      	movmi	r4, r6
 802b99a:	bf48      	it	mi
 802b99c:	eef0 7a65 	vmovmi.f32	s15, s11
 802b9a0:	f1bc 0c01 	subs.w	ip, ip, #1
 802b9a4:	f106 0604 	add.w	r6, r6, #4
 802b9a8:	f100 0010 	add.w	r0, r0, #16
 802b9ac:	d1c6      	bne.n	802b93c <arm_max_f32+0x1c>
 802b9ae:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802b9b2:	f017 0003 	ands.w	r0, r7, #3
 802b9b6:	d018      	beq.n	802b9ea <arm_max_f32+0xca>
 802b9b8:	1a08      	subs	r0, r1, r0
 802b9ba:	ecbe 7a01 	vldmia	lr!, {s14}
 802b9be:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802b9c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9c6:	bfc8      	it	gt
 802b9c8:	4604      	movgt	r4, r0
 802b9ca:	f100 0001 	add.w	r0, r0, #1
 802b9ce:	bfd8      	it	le
 802b9d0:	eeb0 7a67 	vmovle.f32	s14, s15
 802b9d4:	4288      	cmp	r0, r1
 802b9d6:	eef0 7a47 	vmov.f32	s15, s14
 802b9da:	d1ee      	bne.n	802b9ba <arm_max_f32+0x9a>
 802b9dc:	ed82 7a00 	vstr	s14, [r2]
 802b9e0:	601c      	str	r4, [r3, #0]
 802b9e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802b9e6:	4644      	mov	r4, r8
 802b9e8:	e7e3      	b.n	802b9b2 <arm_max_f32+0x92>
 802b9ea:	eeb0 7a67 	vmov.f32	s14, s15
 802b9ee:	e7f5      	b.n	802b9dc <arm_max_f32+0xbc>

0802b9f0 <arm_rfft_fast_init_f32>:
 802b9f0:	084b      	lsrs	r3, r1, #1
 802b9f2:	2b80      	cmp	r3, #128	; 0x80
 802b9f4:	b410      	push	{r4}
 802b9f6:	8201      	strh	r1, [r0, #16]
 802b9f8:	8003      	strh	r3, [r0, #0]
 802b9fa:	d047      	beq.n	802ba8c <arm_rfft_fast_init_f32+0x9c>
 802b9fc:	d917      	bls.n	802ba2e <arm_rfft_fast_init_f32+0x3e>
 802b9fe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ba02:	d03d      	beq.n	802ba80 <arm_rfft_fast_init_f32+0x90>
 802ba04:	d929      	bls.n	802ba5a <arm_rfft_fast_init_f32+0x6a>
 802ba06:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 802ba0a:	d020      	beq.n	802ba4e <arm_rfft_fast_init_f32+0x5e>
 802ba0c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 802ba10:	d113      	bne.n	802ba3a <arm_rfft_fast_init_f32+0x4a>
 802ba12:	4921      	ldr	r1, [pc, #132]	; (802ba98 <arm_rfft_fast_init_f32+0xa8>)
 802ba14:	4a21      	ldr	r2, [pc, #132]	; (802ba9c <arm_rfft_fast_init_f32+0xac>)
 802ba16:	4b22      	ldr	r3, [pc, #136]	; (802baa0 <arm_rfft_fast_init_f32+0xb0>)
 802ba18:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 802ba1c:	8184      	strh	r4, [r0, #12]
 802ba1e:	6081      	str	r1, [r0, #8]
 802ba20:	6042      	str	r2, [r0, #4]
 802ba22:	6143      	str	r3, [r0, #20]
 802ba24:	2000      	movs	r0, #0
 802ba26:	b240      	sxtb	r0, r0
 802ba28:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba2c:	4770      	bx	lr
 802ba2e:	2b20      	cmp	r3, #32
 802ba30:	d01c      	beq.n	802ba6c <arm_rfft_fast_init_f32+0x7c>
 802ba32:	2b40      	cmp	r3, #64	; 0x40
 802ba34:	d006      	beq.n	802ba44 <arm_rfft_fast_init_f32+0x54>
 802ba36:	2b10      	cmp	r3, #16
 802ba38:	d01d      	beq.n	802ba76 <arm_rfft_fast_init_f32+0x86>
 802ba3a:	20ff      	movs	r0, #255	; 0xff
 802ba3c:	b240      	sxtb	r0, r0
 802ba3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802ba42:	4770      	bx	lr
 802ba44:	2438      	movs	r4, #56	; 0x38
 802ba46:	4917      	ldr	r1, [pc, #92]	; (802baa4 <arm_rfft_fast_init_f32+0xb4>)
 802ba48:	4a17      	ldr	r2, [pc, #92]	; (802baa8 <arm_rfft_fast_init_f32+0xb8>)
 802ba4a:	4b18      	ldr	r3, [pc, #96]	; (802baac <arm_rfft_fast_init_f32+0xbc>)
 802ba4c:	e7e6      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba4e:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802ba52:	4917      	ldr	r1, [pc, #92]	; (802bab0 <arm_rfft_fast_init_f32+0xc0>)
 802ba54:	4a17      	ldr	r2, [pc, #92]	; (802bab4 <arm_rfft_fast_init_f32+0xc4>)
 802ba56:	4b18      	ldr	r3, [pc, #96]	; (802bab8 <arm_rfft_fast_init_f32+0xc8>)
 802ba58:	e7e0      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba5a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 802ba5e:	d1ec      	bne.n	802ba3a <arm_rfft_fast_init_f32+0x4a>
 802ba60:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802ba64:	4915      	ldr	r1, [pc, #84]	; (802babc <arm_rfft_fast_init_f32+0xcc>)
 802ba66:	4a16      	ldr	r2, [pc, #88]	; (802bac0 <arm_rfft_fast_init_f32+0xd0>)
 802ba68:	4b16      	ldr	r3, [pc, #88]	; (802bac4 <arm_rfft_fast_init_f32+0xd4>)
 802ba6a:	e7d7      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba6c:	2430      	movs	r4, #48	; 0x30
 802ba6e:	4916      	ldr	r1, [pc, #88]	; (802bac8 <arm_rfft_fast_init_f32+0xd8>)
 802ba70:	4a16      	ldr	r2, [pc, #88]	; (802bacc <arm_rfft_fast_init_f32+0xdc>)
 802ba72:	4b17      	ldr	r3, [pc, #92]	; (802bad0 <arm_rfft_fast_init_f32+0xe0>)
 802ba74:	e7d2      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba76:	2414      	movs	r4, #20
 802ba78:	4916      	ldr	r1, [pc, #88]	; (802bad4 <arm_rfft_fast_init_f32+0xe4>)
 802ba7a:	4a17      	ldr	r2, [pc, #92]	; (802bad8 <arm_rfft_fast_init_f32+0xe8>)
 802ba7c:	4b17      	ldr	r3, [pc, #92]	; (802badc <arm_rfft_fast_init_f32+0xec>)
 802ba7e:	e7cd      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba80:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802ba84:	4916      	ldr	r1, [pc, #88]	; (802bae0 <arm_rfft_fast_init_f32+0xf0>)
 802ba86:	4a17      	ldr	r2, [pc, #92]	; (802bae4 <arm_rfft_fast_init_f32+0xf4>)
 802ba88:	4b17      	ldr	r3, [pc, #92]	; (802bae8 <arm_rfft_fast_init_f32+0xf8>)
 802ba8a:	e7c7      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba8c:	24d0      	movs	r4, #208	; 0xd0
 802ba8e:	4917      	ldr	r1, [pc, #92]	; (802baec <arm_rfft_fast_init_f32+0xfc>)
 802ba90:	4a17      	ldr	r2, [pc, #92]	; (802baf0 <arm_rfft_fast_init_f32+0x100>)
 802ba92:	4b18      	ldr	r3, [pc, #96]	; (802baf4 <arm_rfft_fast_init_f32+0x104>)
 802ba94:	e7c2      	b.n	802ba1c <arm_rfft_fast_init_f32+0x2c>
 802ba96:	bf00      	nop
 802ba98:	0804118c 	.word	0x0804118c
 802ba9c:	08032384 	.word	0x08032384
 802baa0:	080384f4 	.word	0x080384f4
 802baa4:	08036484 	.word	0x08036484
 802baa8:	08042f4c 	.word	0x08042f4c
 802baac:	0804543c 	.word	0x0804543c
 802bab0:	0803ee74 	.word	0x0803ee74
 802bab4:	0803cd74 	.word	0x0803cd74
 802bab8:	080364f4 	.word	0x080364f4
 802babc:	080450cc 	.word	0x080450cc
 802bac0:	0803c4f4 	.word	0x0803c4f4
 802bac4:	0804314c 	.word	0x0804314c
 802bac8:	0803fd2c 	.word	0x0803fd2c
 802bacc:	0803ed74 	.word	0x0803ed74
 802bad0:	08036384 	.word	0x08036384
 802bad4:	0803fc84 	.word	0x0803fc84
 802bad8:	0803ccf4 	.word	0x0803ccf4
 802badc:	0803fcac 	.word	0x0803fcac
 802bae0:	0804394c 	.word	0x0804394c
 802bae4:	0804018c 	.word	0x0804018c
 802bae8:	08043ccc 	.word	0x08043ccc
 802baec:	0804563c 	.word	0x0804563c
 802baf0:	0803fd8c 	.word	0x0803fd8c
 802baf4:	08044ccc 	.word	0x08044ccc

0802baf8 <arm_rfft_fast_f32>:
 802baf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bafc:	8a06      	ldrh	r6, [r0, #16]
 802bafe:	0876      	lsrs	r6, r6, #1
 802bb00:	4607      	mov	r7, r0
 802bb02:	4615      	mov	r5, r2
 802bb04:	8006      	strh	r6, [r0, #0]
 802bb06:	460c      	mov	r4, r1
 802bb08:	2b00      	cmp	r3, #0
 802bb0a:	d15c      	bne.n	802bbc6 <arm_rfft_fast_f32+0xce>
 802bb0c:	461a      	mov	r2, r3
 802bb0e:	2301      	movs	r3, #1
 802bb10:	f000 fbe6 	bl	802c2e0 <arm_cfft_f32>
 802bb14:	edd4 7a00 	vldr	s15, [r4]
 802bb18:	ed94 7a01 	vldr	s14, [r4, #4]
 802bb1c:	883e      	ldrh	r6, [r7, #0]
 802bb1e:	6978      	ldr	r0, [r7, #20]
 802bb20:	ee37 7a07 	vadd.f32	s14, s14, s14
 802bb24:	ee77 7aa7 	vadd.f32	s15, s15, s15
 802bb28:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bb2c:	ee77 6a87 	vadd.f32	s13, s15, s14
 802bb30:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bb34:	3e01      	subs	r6, #1
 802bb36:	ee26 7aa3 	vmul.f32	s14, s13, s7
 802bb3a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bb3e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802bb42:	ed85 7a00 	vstr	s14, [r5]
 802bb46:	edc5 7a01 	vstr	s15, [r5, #4]
 802bb4a:	3010      	adds	r0, #16
 802bb4c:	f105 0210 	add.w	r2, r5, #16
 802bb50:	3b08      	subs	r3, #8
 802bb52:	f104 0110 	add.w	r1, r4, #16
 802bb56:	ed51 4a02 	vldr	s9, [r1, #-8]
 802bb5a:	ed93 5a02 	vldr	s10, [r3, #8]
 802bb5e:	ed11 7a01 	vldr	s14, [r1, #-4]
 802bb62:	ed10 6a02 	vldr	s12, [r0, #-8]
 802bb66:	edd3 5a03 	vldr	s11, [r3, #12]
 802bb6a:	ed50 6a01 	vldr	s13, [r0, #-4]
 802bb6e:	ee75 7a64 	vsub.f32	s15, s10, s9
 802bb72:	ee35 4a87 	vadd.f32	s8, s11, s14
 802bb76:	ee35 5a24 	vadd.f32	s10, s10, s9
 802bb7a:	ee77 5a65 	vsub.f32	s11, s14, s11
 802bb7e:	ee66 4a27 	vmul.f32	s9, s12, s15
 802bb82:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802bb86:	ee34 5a85 	vadd.f32	s10, s9, s10
 802bb8a:	ee26 6a04 	vmul.f32	s12, s12, s8
 802bb8e:	ee66 6a84 	vmul.f32	s13, s13, s8
 802bb92:	ee77 7a25 	vadd.f32	s15, s14, s11
 802bb96:	ee76 6a85 	vadd.f32	s13, s13, s10
 802bb9a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bb9e:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802bba2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bba6:	3e01      	subs	r6, #1
 802bba8:	ed42 6a02 	vstr	s13, [r2, #-8]
 802bbac:	ed42 7a01 	vstr	s15, [r2, #-4]
 802bbb0:	f1a3 0308 	sub.w	r3, r3, #8
 802bbb4:	f101 0108 	add.w	r1, r1, #8
 802bbb8:	f100 0008 	add.w	r0, r0, #8
 802bbbc:	f102 0208 	add.w	r2, r2, #8
 802bbc0:	d1c9      	bne.n	802bb56 <arm_rfft_fast_f32+0x5e>
 802bbc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802bbc6:	edd1 7a00 	vldr	s15, [r1]
 802bbca:	edd1 6a01 	vldr	s13, [r1, #4]
 802bbce:	6941      	ldr	r1, [r0, #20]
 802bbd0:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bbd4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802bbd8:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802bbdc:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bbe0:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bbe4:	3e01      	subs	r6, #1
 802bbe6:	ed82 7a00 	vstr	s14, [r2]
 802bbea:	edc2 7a01 	vstr	s15, [r2, #4]
 802bbee:	00f0      	lsls	r0, r6, #3
 802bbf0:	b3ee      	cbz	r6, 802bc6e <arm_rfft_fast_f32+0x176>
 802bbf2:	3808      	subs	r0, #8
 802bbf4:	f101 0e10 	add.w	lr, r1, #16
 802bbf8:	4420      	add	r0, r4
 802bbfa:	f104 0110 	add.w	r1, r4, #16
 802bbfe:	f102 0c10 	add.w	ip, r2, #16
 802bc02:	ed90 7a02 	vldr	s14, [r0, #8]
 802bc06:	ed51 6a02 	vldr	s13, [r1, #-8]
 802bc0a:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802bc0e:	ed90 4a03 	vldr	s8, [r0, #12]
 802bc12:	ed11 5a01 	vldr	s10, [r1, #-4]
 802bc16:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802bc1a:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802bc1e:	ee74 4a05 	vadd.f32	s9, s8, s10
 802bc22:	ee26 3a27 	vmul.f32	s6, s12, s15
 802bc26:	ee77 6a26 	vadd.f32	s13, s14, s13
 802bc2a:	ee35 5a44 	vsub.f32	s10, s10, s8
 802bc2e:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802bc32:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bc36:	ee77 7a05 	vadd.f32	s15, s14, s10
 802bc3a:	ee26 6a24 	vmul.f32	s12, s12, s9
 802bc3e:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802bc42:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802bc46:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802bc4a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802bc4e:	ee27 7a23 	vmul.f32	s14, s14, s7
 802bc52:	3e01      	subs	r6, #1
 802bc54:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802bc58:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802bc5c:	f1a0 0008 	sub.w	r0, r0, #8
 802bc60:	f101 0108 	add.w	r1, r1, #8
 802bc64:	f10e 0e08 	add.w	lr, lr, #8
 802bc68:	f10c 0c08 	add.w	ip, ip, #8
 802bc6c:	d1c9      	bne.n	802bc02 <arm_rfft_fast_f32+0x10a>
 802bc6e:	4638      	mov	r0, r7
 802bc70:	4629      	mov	r1, r5
 802bc72:	461a      	mov	r2, r3
 802bc74:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bc78:	2301      	movs	r3, #1
 802bc7a:	f000 bb31 	b.w	802c2e0 <arm_cfft_f32>
 802bc7e:	bf00      	nop

0802bc80 <arm_cfft_radix8by2_f32>:
 802bc80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bc84:	ed2d 8b08 	vpush	{d8-d11}
 802bc88:	f8b0 e000 	ldrh.w	lr, [r0]
 802bc8c:	6842      	ldr	r2, [r0, #4]
 802bc8e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802bc92:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802bc96:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802bc9a:	4607      	mov	r7, r0
 802bc9c:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802bca0:	f000 80af 	beq.w	802be02 <arm_cfft_radix8by2_f32+0x182>
 802bca4:	3310      	adds	r3, #16
 802bca6:	18ce      	adds	r6, r1, r3
 802bca8:	3210      	adds	r2, #16
 802bcaa:	4443      	add	r3, r8
 802bcac:	f101 0510 	add.w	r5, r1, #16
 802bcb0:	f108 0410 	add.w	r4, r8, #16
 802bcb4:	ed54 1a04 	vldr	s3, [r4, #-16]
 802bcb8:	ed13 4a04 	vldr	s8, [r3, #-16]
 802bcbc:	ed53 3a03 	vldr	s7, [r3, #-12]
 802bcc0:	ed53 5a02 	vldr	s11, [r3, #-8]
 802bcc4:	ed13 5a01 	vldr	s10, [r3, #-4]
 802bcc8:	ed54 6a03 	vldr	s13, [r4, #-12]
 802bccc:	ed14 0a02 	vldr	s0, [r4, #-8]
 802bcd0:	ed16 2a04 	vldr	s4, [r6, #-16]
 802bcd4:	ed56 2a03 	vldr	s5, [r6, #-12]
 802bcd8:	ed15 6a03 	vldr	s12, [r5, #-12]
 802bcdc:	ed15 7a01 	vldr	s14, [r5, #-4]
 802bce0:	ed15 3a04 	vldr	s6, [r5, #-16]
 802bce4:	ed54 7a01 	vldr	s15, [r4, #-4]
 802bce8:	ed56 0a02 	vldr	s1, [r6, #-8]
 802bcec:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bcf0:	ed55 4a02 	vldr	s9, [r5, #-8]
 802bcf4:	ee73 ba21 	vadd.f32	s23, s6, s3
 802bcf8:	ee36 ba26 	vadd.f32	s22, s12, s13
 802bcfc:	ee37 aa27 	vadd.f32	s20, s14, s15
 802bd00:	ee72 9a04 	vadd.f32	s19, s4, s8
 802bd04:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802bd08:	ee31 8a05 	vadd.f32	s16, s2, s10
 802bd0c:	ee74 aa80 	vadd.f32	s21, s9, s0
 802bd10:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802bd14:	ed45 ba04 	vstr	s23, [r5, #-16]
 802bd18:	ed05 ba03 	vstr	s22, [r5, #-12]
 802bd1c:	ed45 aa02 	vstr	s21, [r5, #-8]
 802bd20:	ed05 aa01 	vstr	s20, [r5, #-4]
 802bd24:	ed06 8a01 	vstr	s16, [r6, #-4]
 802bd28:	ed46 9a04 	vstr	s19, [r6, #-16]
 802bd2c:	ed06 9a03 	vstr	s18, [r6, #-12]
 802bd30:	ed46 8a02 	vstr	s17, [r6, #-8]
 802bd34:	ee76 6a66 	vsub.f32	s13, s12, s13
 802bd38:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802bd3c:	ed12 6a03 	vldr	s12, [r2, #-12]
 802bd40:	ed52 2a04 	vldr	s5, [r2, #-16]
 802bd44:	ee33 3a61 	vsub.f32	s6, s6, s3
 802bd48:	ee34 4a42 	vsub.f32	s8, s8, s4
 802bd4c:	ee26 8a86 	vmul.f32	s16, s13, s12
 802bd50:	ee24 2a06 	vmul.f32	s4, s8, s12
 802bd54:	ee63 1a22 	vmul.f32	s3, s6, s5
 802bd58:	ee24 4a22 	vmul.f32	s8, s8, s5
 802bd5c:	ee23 3a06 	vmul.f32	s6, s6, s12
 802bd60:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802bd64:	ee23 6a86 	vmul.f32	s12, s7, s12
 802bd68:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802bd6c:	ee36 6a04 	vadd.f32	s12, s12, s8
 802bd70:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802bd74:	ee72 3a63 	vsub.f32	s7, s4, s7
 802bd78:	ee71 2a88 	vadd.f32	s5, s3, s16
 802bd7c:	ed44 6a03 	vstr	s13, [r4, #-12]
 802bd80:	ed44 2a04 	vstr	s5, [r4, #-16]
 802bd84:	ed43 3a04 	vstr	s7, [r3, #-16]
 802bd88:	ed03 6a03 	vstr	s12, [r3, #-12]
 802bd8c:	ee77 7a67 	vsub.f32	s15, s14, s15
 802bd90:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802bd94:	ed12 7a01 	vldr	s14, [r2, #-4]
 802bd98:	ed52 5a02 	vldr	s11, [r2, #-8]
 802bd9c:	ee35 6a41 	vsub.f32	s12, s10, s2
 802bda0:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802bda4:	ee67 3a87 	vmul.f32	s7, s15, s14
 802bda8:	ee26 5a87 	vmul.f32	s10, s13, s14
 802bdac:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802bdb0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802bdb4:	ee64 4a87 	vmul.f32	s9, s9, s14
 802bdb8:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802bdbc:	ee26 7a07 	vmul.f32	s14, s12, s14
 802bdc0:	ee26 6a25 	vmul.f32	s12, s12, s11
 802bdc4:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802bdc8:	ee74 5a23 	vadd.f32	s11, s8, s7
 802bdcc:	ee35 6a46 	vsub.f32	s12, s10, s12
 802bdd0:	ee37 7a26 	vadd.f32	s14, s14, s13
 802bdd4:	f1be 0e01 	subs.w	lr, lr, #1
 802bdd8:	ed44 5a02 	vstr	s11, [r4, #-8]
 802bddc:	f105 0510 	add.w	r5, r5, #16
 802bde0:	ed44 7a01 	vstr	s15, [r4, #-4]
 802bde4:	f106 0610 	add.w	r6, r6, #16
 802bde8:	ed03 6a02 	vstr	s12, [r3, #-8]
 802bdec:	ed03 7a01 	vstr	s14, [r3, #-4]
 802bdf0:	f102 0210 	add.w	r2, r2, #16
 802bdf4:	f104 0410 	add.w	r4, r4, #16
 802bdf8:	f103 0310 	add.w	r3, r3, #16
 802bdfc:	f47f af5a 	bne.w	802bcb4 <arm_cfft_radix8by2_f32+0x34>
 802be00:	687a      	ldr	r2, [r7, #4]
 802be02:	fa1f f48c 	uxth.w	r4, ip
 802be06:	4608      	mov	r0, r1
 802be08:	2302      	movs	r3, #2
 802be0a:	4621      	mov	r1, r4
 802be0c:	f000 fbca 	bl	802c5a4 <arm_radix8_butterfly_f32>
 802be10:	ecbd 8b08 	vpop	{d8-d11}
 802be14:	4640      	mov	r0, r8
 802be16:	4621      	mov	r1, r4
 802be18:	687a      	ldr	r2, [r7, #4]
 802be1a:	2302      	movs	r3, #2
 802be1c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be20:	f000 bbc0 	b.w	802c5a4 <arm_radix8_butterfly_f32>

0802be24 <arm_cfft_radix8by4_f32>:
 802be24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802be28:	ed2d 8b0a 	vpush	{d8-d12}
 802be2c:	8802      	ldrh	r2, [r0, #0]
 802be2e:	ed91 6a00 	vldr	s12, [r1]
 802be32:	b08f      	sub	sp, #60	; 0x3c
 802be34:	460f      	mov	r7, r1
 802be36:	0852      	lsrs	r2, r2, #1
 802be38:	0093      	lsls	r3, r2, #2
 802be3a:	900c      	str	r0, [sp, #48]	; 0x30
 802be3c:	9103      	str	r1, [sp, #12]
 802be3e:	6841      	ldr	r1, [r0, #4]
 802be40:	ed97 7a01 	vldr	s14, [r7, #4]
 802be44:	4638      	mov	r0, r7
 802be46:	4418      	add	r0, r3
 802be48:	4606      	mov	r6, r0
 802be4a:	9009      	str	r0, [sp, #36]	; 0x24
 802be4c:	4418      	add	r0, r3
 802be4e:	edd0 6a00 	vldr	s13, [r0]
 802be52:	edd6 3a00 	vldr	s7, [r6]
 802be56:	edd6 2a01 	vldr	s5, [r6, #4]
 802be5a:	edd0 7a01 	vldr	s15, [r0, #4]
 802be5e:	900a      	str	r0, [sp, #40]	; 0x28
 802be60:	ee76 5a26 	vadd.f32	s11, s12, s13
 802be64:	4604      	mov	r4, r0
 802be66:	4625      	mov	r5, r4
 802be68:	441c      	add	r4, r3
 802be6a:	ed94 4a00 	vldr	s8, [r4]
 802be6e:	ed94 5a01 	vldr	s10, [r4, #4]
 802be72:	9401      	str	r4, [sp, #4]
 802be74:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802be78:	4630      	mov	r0, r6
 802be7a:	ee74 4a24 	vadd.f32	s9, s8, s9
 802be7e:	463e      	mov	r6, r7
 802be80:	ee14 ea90 	vmov	lr, s9
 802be84:	ee76 6a66 	vsub.f32	s13, s12, s13
 802be88:	f846 eb08 	str.w	lr, [r6], #8
 802be8c:	ee37 6a27 	vadd.f32	s12, s14, s15
 802be90:	edd0 4a01 	vldr	s9, [r0, #4]
 802be94:	9604      	str	r6, [sp, #16]
 802be96:	ee77 7a67 	vsub.f32	s15, s14, s15
 802be9a:	9e01      	ldr	r6, [sp, #4]
 802be9c:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802bea0:	ed96 2a01 	vldr	s4, [r6, #4]
 802bea4:	ee36 7a24 	vadd.f32	s14, s12, s9
 802bea8:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802beac:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802beb0:	ee36 6a62 	vsub.f32	s12, s12, s5
 802beb4:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802beb8:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802bebc:	ee73 3a45 	vsub.f32	s7, s6, s10
 802bec0:	4604      	mov	r4, r0
 802bec2:	ee36 6a45 	vsub.f32	s12, s12, s10
 802bec6:	ee75 6a26 	vadd.f32	s13, s10, s13
 802beca:	46a3      	mov	fp, r4
 802becc:	ee37 7a02 	vadd.f32	s14, s14, s4
 802bed0:	ee34 5a84 	vadd.f32	s10, s9, s8
 802bed4:	ee13 8a90 	vmov	r8, s7
 802bed8:	46a4      	mov	ip, r4
 802beda:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802bede:	ed87 7a01 	vstr	s14, [r7, #4]
 802bee2:	f84b 8b08 	str.w	r8, [fp], #8
 802bee6:	f1ac 0704 	sub.w	r7, ip, #4
 802beea:	ed8c 5a01 	vstr	s10, [ip, #4]
 802beee:	f101 0c08 	add.w	ip, r1, #8
 802bef2:	462c      	mov	r4, r5
 802bef4:	f8cd c014 	str.w	ip, [sp, #20]
 802bef8:	ee15 ca90 	vmov	ip, s11
 802befc:	f844 cb08 	str.w	ip, [r4], #8
 802bf00:	9407      	str	r4, [sp, #28]
 802bf02:	f101 0410 	add.w	r4, r1, #16
 802bf06:	ed85 6a01 	vstr	s12, [r5, #4]
 802bf0a:	0852      	lsrs	r2, r2, #1
 802bf0c:	9402      	str	r4, [sp, #8]
 802bf0e:	462c      	mov	r4, r5
 802bf10:	f101 0518 	add.w	r5, r1, #24
 802bf14:	920b      	str	r2, [sp, #44]	; 0x2c
 802bf16:	46b2      	mov	sl, r6
 802bf18:	9506      	str	r5, [sp, #24]
 802bf1a:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802bf1e:	3a02      	subs	r2, #2
 802bf20:	ee16 5a90 	vmov	r5, s13
 802bf24:	46b6      	mov	lr, r6
 802bf26:	4630      	mov	r0, r6
 802bf28:	0852      	lsrs	r2, r2, #1
 802bf2a:	f84a 5b08 	str.w	r5, [sl], #8
 802bf2e:	f1a0 0604 	sub.w	r6, r0, #4
 802bf32:	edce 7a01 	vstr	s15, [lr, #4]
 802bf36:	9208      	str	r2, [sp, #32]
 802bf38:	f000 8130 	beq.w	802c19c <arm_cfft_radix8by4_f32+0x378>
 802bf3c:	4691      	mov	r9, r2
 802bf3e:	9a03      	ldr	r2, [sp, #12]
 802bf40:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802bf44:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802bf48:	3b08      	subs	r3, #8
 802bf4a:	f102 0510 	add.w	r5, r2, #16
 802bf4e:	f101 0c20 	add.w	ip, r1, #32
 802bf52:	f1a4 020c 	sub.w	r2, r4, #12
 802bf56:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802bf5a:	4433      	add	r3, r6
 802bf5c:	3410      	adds	r4, #16
 802bf5e:	4650      	mov	r0, sl
 802bf60:	4659      	mov	r1, fp
 802bf62:	ed55 3a02 	vldr	s7, [r5, #-8]
 802bf66:	ed14 5a02 	vldr	s10, [r4, #-8]
 802bf6a:	ed91 7a00 	vldr	s14, [r1]
 802bf6e:	edd0 7a00 	vldr	s15, [r0]
 802bf72:	ed15 4a01 	vldr	s8, [r5, #-4]
 802bf76:	ed54 5a01 	vldr	s11, [r4, #-4]
 802bf7a:	edd0 6a01 	vldr	s13, [r0, #4]
 802bf7e:	ed91 6a01 	vldr	s12, [r1, #4]
 802bf82:	ee33 8a85 	vadd.f32	s16, s7, s10
 802bf86:	ee34 0a25 	vadd.f32	s0, s8, s11
 802bf8a:	ee78 4a07 	vadd.f32	s9, s16, s14
 802bf8e:	ee74 5a65 	vsub.f32	s11, s8, s11
 802bf92:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802bf96:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802bf9a:	ed45 4a02 	vstr	s9, [r5, #-8]
 802bf9e:	edd1 4a01 	vldr	s9, [r1, #4]
 802bfa2:	ed90 4a01 	vldr	s8, [r0, #4]
 802bfa6:	ee70 4a24 	vadd.f32	s9, s0, s9
 802bfaa:	ee76 aa05 	vadd.f32	s21, s12, s10
 802bfae:	ee74 4a84 	vadd.f32	s9, s9, s8
 802bfb2:	ee35 aac7 	vsub.f32	s20, s11, s14
 802bfb6:	ed45 4a01 	vstr	s9, [r5, #-4]
 802bfba:	edd6 1a00 	vldr	s3, [r6]
 802bfbe:	edd7 0a00 	vldr	s1, [r7]
 802bfc2:	ed92 4a02 	vldr	s8, [r2, #8]
 802bfc6:	edd3 3a02 	vldr	s7, [r3, #8]
 802bfca:	ed93 2a01 	vldr	s4, [r3, #4]
 802bfce:	ed16 1a01 	vldr	s2, [r6, #-4]
 802bfd2:	edd2 2a01 	vldr	s5, [r2, #4]
 802bfd6:	ed57 9a01 	vldr	s19, [r7, #-4]
 802bfda:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802bfde:	ee39 3a81 	vadd.f32	s6, s19, s2
 802bfe2:	ee74 8a84 	vadd.f32	s17, s9, s8
 802bfe6:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802bfea:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802bfee:	ee7a aae6 	vsub.f32	s21, s21, s13
 802bff2:	ee18 aa90 	vmov	sl, s17
 802bff6:	f847 a908 	str.w	sl, [r7], #-8
 802bffa:	edd2 8a01 	vldr	s17, [r2, #4]
 802bffe:	ed93 9a01 	vldr	s18, [r3, #4]
 802c002:	ee73 8a28 	vadd.f32	s17, s6, s17
 802c006:	ee3a aa27 	vadd.f32	s20, s20, s15
 802c00a:	ee78 8a89 	vadd.f32	s17, s17, s18
 802c00e:	ee74 0a63 	vsub.f32	s1, s8, s7
 802c012:	edc7 8a01 	vstr	s17, [r7, #4]
 802c016:	ed18 ba02 	vldr	s22, [r8, #-8]
 802c01a:	ed58 8a01 	vldr	s17, [r8, #-4]
 802c01e:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802c022:	ee6a ba28 	vmul.f32	s23, s20, s17
 802c026:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802c02a:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802c02e:	ee30 9a81 	vadd.f32	s18, s1, s2
 802c032:	ee79 9a82 	vadd.f32	s19, s19, s4
 802c036:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802c03a:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802c03e:	ee69 baa8 	vmul.f32	s23, s19, s17
 802c042:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802c046:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802c04a:	ee69 8a28 	vmul.f32	s17, s18, s17
 802c04e:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802c052:	ee1c aa10 	vmov	sl, s24
 802c056:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802c05a:	f841 ab08 	str.w	sl, [r1], #8
 802c05e:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802c062:	ee3b bacb 	vsub.f32	s22, s23, s22
 802c066:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802c06a:	ee33 3a62 	vsub.f32	s6, s6, s5
 802c06e:	ed01 aa01 	vstr	s20, [r1, #-4]
 802c072:	edc2 8a01 	vstr	s17, [r2, #4]
 802c076:	ed82 ba02 	vstr	s22, [r2, #8]
 802c07a:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802c07e:	ee74 3a63 	vsub.f32	s7, s8, s7
 802c082:	ee38 8a47 	vsub.f32	s16, s16, s14
 802c086:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802c08a:	ee30 0a46 	vsub.f32	s0, s0, s12
 802c08e:	ee33 3a42 	vsub.f32	s6, s6, s4
 802c092:	ee38 8a67 	vsub.f32	s16, s16, s15
 802c096:	ee30 0a66 	vsub.f32	s0, s0, s13
 802c09a:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802c09e:	ee63 8a04 	vmul.f32	s17, s6, s8
 802c0a2:	ee28 aa24 	vmul.f32	s20, s16, s9
 802c0a6:	ee60 9a04 	vmul.f32	s19, s0, s8
 802c0aa:	ee28 8a04 	vmul.f32	s16, s16, s8
 802c0ae:	ee20 0a24 	vmul.f32	s0, s0, s9
 802c0b2:	ee63 3a84 	vmul.f32	s7, s7, s8
 802c0b6:	ee39 4a68 	vsub.f32	s8, s18, s17
 802c0ba:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802c0be:	ee14 aa10 	vmov	sl, s8
 802c0c2:	ee30 0a48 	vsub.f32	s0, s0, s16
 802c0c6:	ee63 4a24 	vmul.f32	s9, s6, s9
 802c0ca:	ed44 9a02 	vstr	s19, [r4, #-8]
 802c0ce:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802c0d2:	ed04 0a01 	vstr	s0, [r4, #-4]
 802c0d6:	f846 a908 	str.w	sl, [r6], #-8
 802c0da:	ee35 6a46 	vsub.f32	s12, s10, s12
 802c0de:	ee35 7a87 	vadd.f32	s14, s11, s14
 802c0e2:	edc6 3a01 	vstr	s7, [r6, #4]
 802c0e6:	ee76 6a86 	vadd.f32	s13, s13, s12
 802c0ea:	ee77 7a67 	vsub.f32	s15, s14, s15
 802c0ee:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802c0f2:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802c0f6:	ee67 5a86 	vmul.f32	s11, s15, s12
 802c0fa:	ee26 5a87 	vmul.f32	s10, s13, s14
 802c0fe:	ee72 2a62 	vsub.f32	s5, s4, s5
 802c102:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c106:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802c10a:	ee75 5a25 	vadd.f32	s11, s10, s11
 802c10e:	ee62 0a86 	vmul.f32	s1, s5, s12
 802c112:	ee66 6a86 	vmul.f32	s13, s13, s12
 802c116:	ee67 7a87 	vmul.f32	s15, s15, s14
 802c11a:	ee21 6a06 	vmul.f32	s12, s2, s12
 802c11e:	ee62 2a87 	vmul.f32	s5, s5, s14
 802c122:	ee21 1a07 	vmul.f32	s2, s2, s14
 802c126:	ee15 aa90 	vmov	sl, s11
 802c12a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802c12e:	f840 ab08 	str.w	sl, [r0], #8
 802c132:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802c136:	ee76 2a22 	vadd.f32	s5, s12, s5
 802c13a:	f1b9 0901 	subs.w	r9, r9, #1
 802c13e:	ed40 7a01 	vstr	s15, [r0, #-4]
 802c142:	f105 0508 	add.w	r5, r5, #8
 802c146:	ed83 1a02 	vstr	s2, [r3, #8]
 802c14a:	edc3 2a01 	vstr	s5, [r3, #4]
 802c14e:	f108 0808 	add.w	r8, r8, #8
 802c152:	f1a2 0208 	sub.w	r2, r2, #8
 802c156:	f10c 0c10 	add.w	ip, ip, #16
 802c15a:	f104 0408 	add.w	r4, r4, #8
 802c15e:	f10e 0e18 	add.w	lr, lr, #24
 802c162:	f1a3 0308 	sub.w	r3, r3, #8
 802c166:	f47f aefc 	bne.w	802bf62 <arm_cfft_radix8by4_f32+0x13e>
 802c16a:	9908      	ldr	r1, [sp, #32]
 802c16c:	9802      	ldr	r0, [sp, #8]
 802c16e:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802c172:	00cb      	lsls	r3, r1, #3
 802c174:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802c178:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802c17c:	9102      	str	r1, [sp, #8]
 802c17e:	9904      	ldr	r1, [sp, #16]
 802c180:	4419      	add	r1, r3
 802c182:	9104      	str	r1, [sp, #16]
 802c184:	9905      	ldr	r1, [sp, #20]
 802c186:	4419      	add	r1, r3
 802c188:	9105      	str	r1, [sp, #20]
 802c18a:	9907      	ldr	r1, [sp, #28]
 802c18c:	449b      	add	fp, r3
 802c18e:	4419      	add	r1, r3
 802c190:	449a      	add	sl, r3
 802c192:	9b06      	ldr	r3, [sp, #24]
 802c194:	9107      	str	r1, [sp, #28]
 802c196:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802c19a:	9306      	str	r3, [sp, #24]
 802c19c:	9a04      	ldr	r2, [sp, #16]
 802c19e:	9807      	ldr	r0, [sp, #28]
 802c1a0:	edd2 3a00 	vldr	s7, [r2]
 802c1a4:	ed90 4a00 	vldr	s8, [r0]
 802c1a8:	eddb 7a00 	vldr	s15, [fp]
 802c1ac:	ed9a 3a00 	vldr	s6, [sl]
 802c1b0:	edd2 4a01 	vldr	s9, [r2, #4]
 802c1b4:	ed90 7a01 	vldr	s14, [r0, #4]
 802c1b8:	ed9b 2a01 	vldr	s4, [fp, #4]
 802c1bc:	edda 5a01 	vldr	s11, [sl, #4]
 802c1c0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802c1c4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802c1c6:	ee73 6a84 	vadd.f32	s13, s7, s8
 802c1ca:	ee34 6a87 	vadd.f32	s12, s9, s14
 802c1ce:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802c1d2:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802c1d6:	ee33 5a05 	vadd.f32	s10, s6, s10
 802c1da:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802c1de:	ed82 5a00 	vstr	s10, [r2]
 802c1e2:	ed9b 5a01 	vldr	s10, [fp, #4]
 802c1e6:	edda 4a01 	vldr	s9, [sl, #4]
 802c1ea:	ee36 5a05 	vadd.f32	s10, s12, s10
 802c1ee:	ee72 3a04 	vadd.f32	s7, s4, s8
 802c1f2:	ee35 5a24 	vadd.f32	s10, s10, s9
 802c1f6:	ee77 4a67 	vsub.f32	s9, s14, s15
 802c1fa:	ed82 5a01 	vstr	s10, [r2, #4]
 802c1fe:	9a05      	ldr	r2, [sp, #20]
 802c200:	ee34 5a83 	vadd.f32	s10, s9, s6
 802c204:	edd2 1a00 	vldr	s3, [r2]
 802c208:	edd2 2a01 	vldr	s5, [r2, #4]
 802c20c:	9a02      	ldr	r2, [sp, #8]
 802c20e:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802c212:	ee36 6a42 	vsub.f32	s12, s12, s4
 802c216:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802c21a:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802c21e:	ee65 2a22 	vmul.f32	s5, s10, s5
 802c222:	ee25 5a21 	vmul.f32	s10, s10, s3
 802c226:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802c22a:	ee35 5a63 	vsub.f32	s10, s10, s7
 802c22e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802c232:	edcb 2a00 	vstr	s5, [fp]
 802c236:	ed8b 5a01 	vstr	s10, [fp, #4]
 802c23a:	edd2 3a01 	vldr	s7, [r2, #4]
 802c23e:	ed92 5a00 	vldr	s10, [r2]
 802c242:	9a06      	ldr	r2, [sp, #24]
 802c244:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802c248:	ee36 6a65 	vsub.f32	s12, s12, s11
 802c24c:	ee66 4a85 	vmul.f32	s9, s13, s10
 802c250:	ee26 5a05 	vmul.f32	s10, s12, s10
 802c254:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802c258:	ee26 6a23 	vmul.f32	s12, s12, s7
 802c25c:	ee75 6a66 	vsub.f32	s13, s10, s13
 802c260:	ee34 6a86 	vadd.f32	s12, s9, s12
 802c264:	ee34 4a42 	vsub.f32	s8, s8, s4
 802c268:	ee37 7a27 	vadd.f32	s14, s14, s15
 802c26c:	edc0 6a01 	vstr	s13, [r0, #4]
 802c270:	ed80 6a00 	vstr	s12, [r0]
 802c274:	ed92 6a01 	vldr	s12, [r2, #4]
 802c278:	9803      	ldr	r0, [sp, #12]
 802c27a:	ee77 7a43 	vsub.f32	s15, s14, s6
 802c27e:	ee75 5a84 	vadd.f32	s11, s11, s8
 802c282:	ed92 7a00 	vldr	s14, [r2]
 802c286:	ee65 6a87 	vmul.f32	s13, s11, s14
 802c28a:	ee27 7a87 	vmul.f32	s14, s15, s14
 802c28e:	ee65 5a86 	vmul.f32	s11, s11, s12
 802c292:	ee67 7a86 	vmul.f32	s15, s15, s12
 802c296:	ee77 5a65 	vsub.f32	s11, s14, s11
 802c29a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802c29e:	edca 5a01 	vstr	s11, [sl, #4]
 802c2a2:	edca 7a00 	vstr	s15, [sl]
 802c2a6:	6872      	ldr	r2, [r6, #4]
 802c2a8:	4621      	mov	r1, r4
 802c2aa:	2304      	movs	r3, #4
 802c2ac:	f000 f97a 	bl	802c5a4 <arm_radix8_butterfly_f32>
 802c2b0:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c2b2:	6872      	ldr	r2, [r6, #4]
 802c2b4:	4621      	mov	r1, r4
 802c2b6:	2304      	movs	r3, #4
 802c2b8:	f000 f974 	bl	802c5a4 <arm_radix8_butterfly_f32>
 802c2bc:	980a      	ldr	r0, [sp, #40]	; 0x28
 802c2be:	6872      	ldr	r2, [r6, #4]
 802c2c0:	4621      	mov	r1, r4
 802c2c2:	2304      	movs	r3, #4
 802c2c4:	f000 f96e 	bl	802c5a4 <arm_radix8_butterfly_f32>
 802c2c8:	9801      	ldr	r0, [sp, #4]
 802c2ca:	6872      	ldr	r2, [r6, #4]
 802c2cc:	4621      	mov	r1, r4
 802c2ce:	2304      	movs	r3, #4
 802c2d0:	b00f      	add	sp, #60	; 0x3c
 802c2d2:	ecbd 8b0a 	vpop	{d8-d12}
 802c2d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c2da:	f000 b963 	b.w	802c5a4 <arm_radix8_butterfly_f32>
 802c2de:	bf00      	nop

0802c2e0 <arm_cfft_f32>:
 802c2e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c2e4:	2a01      	cmp	r2, #1
 802c2e6:	4606      	mov	r6, r0
 802c2e8:	4617      	mov	r7, r2
 802c2ea:	460c      	mov	r4, r1
 802c2ec:	4698      	mov	r8, r3
 802c2ee:	8805      	ldrh	r5, [r0, #0]
 802c2f0:	d054      	beq.n	802c39c <arm_cfft_f32+0xbc>
 802c2f2:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c2f6:	d04c      	beq.n	802c392 <arm_cfft_f32+0xb2>
 802c2f8:	d916      	bls.n	802c328 <arm_cfft_f32+0x48>
 802c2fa:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802c2fe:	d01a      	beq.n	802c336 <arm_cfft_f32+0x56>
 802c300:	d95c      	bls.n	802c3bc <arm_cfft_f32+0xdc>
 802c302:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802c306:	d044      	beq.n	802c392 <arm_cfft_f32+0xb2>
 802c308:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802c30c:	d105      	bne.n	802c31a <arm_cfft_f32+0x3a>
 802c30e:	4620      	mov	r0, r4
 802c310:	4629      	mov	r1, r5
 802c312:	6872      	ldr	r2, [r6, #4]
 802c314:	2301      	movs	r3, #1
 802c316:	f000 f945 	bl	802c5a4 <arm_radix8_butterfly_f32>
 802c31a:	f1b8 0f00 	cmp.w	r8, #0
 802c31e:	d111      	bne.n	802c344 <arm_cfft_f32+0x64>
 802c320:	2f01      	cmp	r7, #1
 802c322:	d016      	beq.n	802c352 <arm_cfft_f32+0x72>
 802c324:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c328:	2d20      	cmp	r5, #32
 802c32a:	d032      	beq.n	802c392 <arm_cfft_f32+0xb2>
 802c32c:	d94a      	bls.n	802c3c4 <arm_cfft_f32+0xe4>
 802c32e:	2d40      	cmp	r5, #64	; 0x40
 802c330:	d0ed      	beq.n	802c30e <arm_cfft_f32+0x2e>
 802c332:	2d80      	cmp	r5, #128	; 0x80
 802c334:	d1f1      	bne.n	802c31a <arm_cfft_f32+0x3a>
 802c336:	4630      	mov	r0, r6
 802c338:	4621      	mov	r1, r4
 802c33a:	f7ff fca1 	bl	802bc80 <arm_cfft_radix8by2_f32>
 802c33e:	f1b8 0f00 	cmp.w	r8, #0
 802c342:	d0ed      	beq.n	802c320 <arm_cfft_f32+0x40>
 802c344:	4620      	mov	r0, r4
 802c346:	89b1      	ldrh	r1, [r6, #12]
 802c348:	68b2      	ldr	r2, [r6, #8]
 802c34a:	f7d3 ff51 	bl	80001f0 <arm_bitreversal_32>
 802c34e:	2f01      	cmp	r7, #1
 802c350:	d1e8      	bne.n	802c324 <arm_cfft_f32+0x44>
 802c352:	ee07 5a90 	vmov	s15, r5
 802c356:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802c35a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802c35e:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802c362:	2d00      	cmp	r5, #0
 802c364:	d0de      	beq.n	802c324 <arm_cfft_f32+0x44>
 802c366:	f104 0108 	add.w	r1, r4, #8
 802c36a:	2300      	movs	r3, #0
 802c36c:	3301      	adds	r3, #1
 802c36e:	429d      	cmp	r5, r3
 802c370:	f101 0108 	add.w	r1, r1, #8
 802c374:	ed11 7a04 	vldr	s14, [r1, #-16]
 802c378:	ed51 7a03 	vldr	s15, [r1, #-12]
 802c37c:	ee27 7a26 	vmul.f32	s14, s14, s13
 802c380:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802c384:	ed01 7a04 	vstr	s14, [r1, #-16]
 802c388:	ed41 7a03 	vstr	s15, [r1, #-12]
 802c38c:	d1ee      	bne.n	802c36c <arm_cfft_f32+0x8c>
 802c38e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c392:	4630      	mov	r0, r6
 802c394:	4621      	mov	r1, r4
 802c396:	f7ff fd45 	bl	802be24 <arm_cfft_radix8by4_f32>
 802c39a:	e7be      	b.n	802c31a <arm_cfft_f32+0x3a>
 802c39c:	b1ad      	cbz	r5, 802c3ca <arm_cfft_f32+0xea>
 802c39e:	f101 030c 	add.w	r3, r1, #12
 802c3a2:	2200      	movs	r2, #0
 802c3a4:	ed53 7a02 	vldr	s15, [r3, #-8]
 802c3a8:	3201      	adds	r2, #1
 802c3aa:	eef1 7a67 	vneg.f32	s15, s15
 802c3ae:	4295      	cmp	r5, r2
 802c3b0:	ed43 7a02 	vstr	s15, [r3, #-8]
 802c3b4:	f103 0308 	add.w	r3, r3, #8
 802c3b8:	d1f4      	bne.n	802c3a4 <arm_cfft_f32+0xc4>
 802c3ba:	e79a      	b.n	802c2f2 <arm_cfft_f32+0x12>
 802c3bc:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802c3c0:	d0a5      	beq.n	802c30e <arm_cfft_f32+0x2e>
 802c3c2:	e7aa      	b.n	802c31a <arm_cfft_f32+0x3a>
 802c3c4:	2d10      	cmp	r5, #16
 802c3c6:	d0b6      	beq.n	802c336 <arm_cfft_f32+0x56>
 802c3c8:	e7a7      	b.n	802c31a <arm_cfft_f32+0x3a>
 802c3ca:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802c3ce:	d894      	bhi.n	802c2fa <arm_cfft_f32+0x1a>
 802c3d0:	e7aa      	b.n	802c328 <arm_cfft_f32+0x48>
 802c3d2:	bf00      	nop

0802c3d4 <arm_cmplx_mag_f32>:
 802c3d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c3d8:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802c3dc:	b084      	sub	sp, #16
 802c3de:	d07f      	beq.n	802c4e0 <arm_cmplx_mag_f32+0x10c>
 802c3e0:	2700      	movs	r7, #0
 802c3e2:	f100 0420 	add.w	r4, r0, #32
 802c3e6:	f101 0510 	add.w	r5, r1, #16
 802c3ea:	4646      	mov	r6, r8
 802c3ec:	e05a      	b.n	802c4a4 <arm_cmplx_mag_f32+0xd0>
 802c3ee:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c3f2:	eeb4 0a40 	vcmp.f32	s0, s0
 802c3f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c3fa:	f040 80a4 	bne.w	802c546 <arm_cmplx_mag_f32+0x172>
 802c3fe:	ed05 0a04 	vstr	s0, [r5, #-16]
 802c402:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802c406:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802c40a:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c40e:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c412:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c416:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c41a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c41e:	f2c0 808f 	blt.w	802c540 <arm_cmplx_mag_f32+0x16c>
 802c422:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c426:	eeb4 0a40 	vcmp.f32	s0, s0
 802c42a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c42e:	f040 80af 	bne.w	802c590 <arm_cmplx_mag_f32+0x1bc>
 802c432:	ed05 0a03 	vstr	s0, [r5, #-12]
 802c436:	ed54 7a04 	vldr	s15, [r4, #-16]
 802c43a:	ed14 0a03 	vldr	s0, [r4, #-12]
 802c43e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c442:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c446:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c44a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c44e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c452:	db72      	blt.n	802c53a <arm_cmplx_mag_f32+0x166>
 802c454:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c458:	eeb4 0a40 	vcmp.f32	s0, s0
 802c45c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c460:	f040 808c 	bne.w	802c57c <arm_cmplx_mag_f32+0x1a8>
 802c464:	ed05 0a02 	vstr	s0, [r5, #-8]
 802c468:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c46c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c470:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c474:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c478:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c47c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c480:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c484:	db20      	blt.n	802c4c8 <arm_cmplx_mag_f32+0xf4>
 802c486:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c48a:	eeb4 0a40 	vcmp.f32	s0, s0
 802c48e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c492:	d169      	bne.n	802c568 <arm_cmplx_mag_f32+0x194>
 802c494:	3e01      	subs	r6, #1
 802c496:	ed05 0a01 	vstr	s0, [r5, #-4]
 802c49a:	f104 0420 	add.w	r4, r4, #32
 802c49e:	f105 0510 	add.w	r5, r5, #16
 802c4a2:	d019      	beq.n	802c4d8 <arm_cmplx_mag_f32+0x104>
 802c4a4:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802c4a8:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802c4ac:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c4b0:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c4b4:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c4b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c4bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4c0:	da95      	bge.n	802c3ee <arm_cmplx_mag_f32+0x1a>
 802c4c2:	f845 7c10 	str.w	r7, [r5, #-16]
 802c4c6:	e79c      	b.n	802c402 <arm_cmplx_mag_f32+0x2e>
 802c4c8:	3e01      	subs	r6, #1
 802c4ca:	f845 7c04 	str.w	r7, [r5, #-4]
 802c4ce:	f104 0420 	add.w	r4, r4, #32
 802c4d2:	f105 0510 	add.w	r5, r5, #16
 802c4d6:	d1e5      	bne.n	802c4a4 <arm_cmplx_mag_f32+0xd0>
 802c4d8:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802c4dc:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802c4e0:	f012 0503 	ands.w	r5, r2, #3
 802c4e4:	d026      	beq.n	802c534 <arm_cmplx_mag_f32+0x160>
 802c4e6:	2600      	movs	r6, #0
 802c4e8:	f100 0408 	add.w	r4, r0, #8
 802c4ec:	e00c      	b.n	802c508 <arm_cmplx_mag_f32+0x134>
 802c4ee:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802c4f2:	eeb4 0a40 	vcmp.f32	s0, s0
 802c4f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c4fa:	d12e      	bne.n	802c55a <arm_cmplx_mag_f32+0x186>
 802c4fc:	3d01      	subs	r5, #1
 802c4fe:	ed01 0a01 	vstr	s0, [r1, #-4]
 802c502:	f104 0408 	add.w	r4, r4, #8
 802c506:	d015      	beq.n	802c534 <arm_cmplx_mag_f32+0x160>
 802c508:	ed54 7a02 	vldr	s15, [r4, #-8]
 802c50c:	ed14 0a01 	vldr	s0, [r4, #-4]
 802c510:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802c514:	ee20 0a00 	vmul.f32	s0, s0, s0
 802c518:	3104      	adds	r1, #4
 802c51a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802c51e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802c522:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802c526:	dae2      	bge.n	802c4ee <arm_cmplx_mag_f32+0x11a>
 802c528:	3d01      	subs	r5, #1
 802c52a:	f841 6c04 	str.w	r6, [r1, #-4]
 802c52e:	f104 0408 	add.w	r4, r4, #8
 802c532:	d1e9      	bne.n	802c508 <arm_cmplx_mag_f32+0x134>
 802c534:	b004      	add	sp, #16
 802c536:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c53a:	f845 7c08 	str.w	r7, [r5, #-8]
 802c53e:	e793      	b.n	802c468 <arm_cmplx_mag_f32+0x94>
 802c540:	f845 7c0c 	str.w	r7, [r5, #-12]
 802c544:	e777      	b.n	802c436 <arm_cmplx_mag_f32+0x62>
 802c546:	eeb0 0a67 	vmov.f32	s0, s15
 802c54a:	9203      	str	r2, [sp, #12]
 802c54c:	9102      	str	r1, [sp, #8]
 802c54e:	9001      	str	r0, [sp, #4]
 802c550:	f000 fb38 	bl	802cbc4 <sqrtf>
 802c554:	a801      	add	r0, sp, #4
 802c556:	c807      	ldmia	r0, {r0, r1, r2}
 802c558:	e751      	b.n	802c3fe <arm_cmplx_mag_f32+0x2a>
 802c55a:	eeb0 0a67 	vmov.f32	s0, s15
 802c55e:	9101      	str	r1, [sp, #4]
 802c560:	f000 fb30 	bl	802cbc4 <sqrtf>
 802c564:	9901      	ldr	r1, [sp, #4]
 802c566:	e7c9      	b.n	802c4fc <arm_cmplx_mag_f32+0x128>
 802c568:	eeb0 0a67 	vmov.f32	s0, s15
 802c56c:	9203      	str	r2, [sp, #12]
 802c56e:	9102      	str	r1, [sp, #8]
 802c570:	9001      	str	r0, [sp, #4]
 802c572:	f000 fb27 	bl	802cbc4 <sqrtf>
 802c576:	a801      	add	r0, sp, #4
 802c578:	c807      	ldmia	r0, {r0, r1, r2}
 802c57a:	e78b      	b.n	802c494 <arm_cmplx_mag_f32+0xc0>
 802c57c:	eeb0 0a67 	vmov.f32	s0, s15
 802c580:	9203      	str	r2, [sp, #12]
 802c582:	9102      	str	r1, [sp, #8]
 802c584:	9001      	str	r0, [sp, #4]
 802c586:	f000 fb1d 	bl	802cbc4 <sqrtf>
 802c58a:	a801      	add	r0, sp, #4
 802c58c:	c807      	ldmia	r0, {r0, r1, r2}
 802c58e:	e769      	b.n	802c464 <arm_cmplx_mag_f32+0x90>
 802c590:	eeb0 0a67 	vmov.f32	s0, s15
 802c594:	9203      	str	r2, [sp, #12]
 802c596:	9102      	str	r1, [sp, #8]
 802c598:	9001      	str	r0, [sp, #4]
 802c59a:	f000 fb13 	bl	802cbc4 <sqrtf>
 802c59e:	a801      	add	r0, sp, #4
 802c5a0:	c807      	ldmia	r0, {r0, r1, r2}
 802c5a2:	e746      	b.n	802c432 <arm_cmplx_mag_f32+0x5e>

0802c5a4 <arm_radix8_butterfly_f32>:
 802c5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c5a8:	ed2d 8b10 	vpush	{d8-d15}
 802c5ac:	b09d      	sub	sp, #116	; 0x74
 802c5ae:	461c      	mov	r4, r3
 802c5b0:	ed9f bac8 	vldr	s22, [pc, #800]	; 802c8d4 <arm_radix8_butterfly_f32+0x330>
 802c5b4:	921a      	str	r2, [sp, #104]	; 0x68
 802c5b6:	1d03      	adds	r3, r0, #4
 802c5b8:	4682      	mov	sl, r0
 802c5ba:	4689      	mov	r9, r1
 802c5bc:	468b      	mov	fp, r1
 802c5be:	931b      	str	r3, [sp, #108]	; 0x6c
 802c5c0:	9400      	str	r4, [sp, #0]
 802c5c2:	469e      	mov	lr, r3
 802c5c4:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802c5c8:	005a      	lsls	r2, r3, #1
 802c5ca:	18d6      	adds	r6, r2, r3
 802c5cc:	18f5      	adds	r5, r6, r3
 802c5ce:	9203      	str	r2, [sp, #12]
 802c5d0:	195a      	adds	r2, r3, r5
 802c5d2:	18d0      	adds	r0, r2, r3
 802c5d4:	00df      	lsls	r7, r3, #3
 802c5d6:	1819      	adds	r1, r3, r0
 802c5d8:	463c      	mov	r4, r7
 802c5da:	9701      	str	r7, [sp, #4]
 802c5dc:	4457      	add	r7, sl
 802c5de:	930c      	str	r3, [sp, #48]	; 0x30
 802c5e0:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802c5e4:	011b      	lsls	r3, r3, #4
 802c5e6:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802c5ea:	eb07 0c04 	add.w	ip, r7, r4
 802c5ee:	9c00      	ldr	r4, [sp, #0]
 802c5f0:	9302      	str	r3, [sp, #8]
 802c5f2:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802c5f6:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802c5fa:	3204      	adds	r2, #4
 802c5fc:	3104      	adds	r1, #4
 802c5fe:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802c602:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802c606:	f04f 0800 	mov.w	r8, #0
 802c60a:	eddc 7a00 	vldr	s15, [ip]
 802c60e:	edd7 6a00 	vldr	s13, [r7]
 802c612:	edd6 3a00 	vldr	s7, [r6]
 802c616:	ed5e aa01 	vldr	s21, [lr, #-4]
 802c61a:	edd5 4a00 	vldr	s9, [r5]
 802c61e:	ed90 2a00 	vldr	s4, [r0]
 802c622:	ed12 7a01 	vldr	s14, [r2, #-4]
 802c626:	ed51 0a01 	vldr	s1, [r1, #-4]
 802c62a:	ee77 8a82 	vadd.f32	s17, s15, s4
 802c62e:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802c632:	ee76 1a87 	vadd.f32	s3, s13, s14
 802c636:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802c63a:	ee31 6a84 	vadd.f32	s12, s3, s8
 802c63e:	ee33 5a28 	vadd.f32	s10, s6, s17
 802c642:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802c646:	ee75 6a06 	vadd.f32	s13, s10, s12
 802c64a:	ee35 5a46 	vsub.f32	s10, s10, s12
 802c64e:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802c652:	ed85 5a00 	vstr	s10, [r5]
 802c656:	ed96 1a01 	vldr	s2, [r6, #4]
 802c65a:	edd7 5a01 	vldr	s11, [r7, #4]
 802c65e:	ed92 aa00 	vldr	s20, [r2]
 802c662:	ed91 6a00 	vldr	s12, [r1]
 802c666:	ed9e 9a00 	vldr	s18, [lr]
 802c66a:	ed95 5a01 	vldr	s10, [r5, #4]
 802c66e:	eddc 6a01 	vldr	s13, [ip, #4]
 802c672:	edd0 9a01 	vldr	s19, [r0, #4]
 802c676:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802c67a:	ee71 2a46 	vsub.f32	s5, s2, s12
 802c67e:	ee75 3aca 	vsub.f32	s7, s11, s20
 802c682:	ee37 0a60 	vsub.f32	s0, s14, s1
 802c686:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802c68a:	ee37 7a20 	vadd.f32	s14, s14, s1
 802c68e:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802c692:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802c696:	ee79 3a05 	vadd.f32	s7, s18, s10
 802c69a:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802c69e:	ee39 5a45 	vsub.f32	s10, s18, s10
 802c6a2:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802c6a6:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802c6aa:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802c6ae:	ee31 6a06 	vadd.f32	s12, s2, s12
 802c6b2:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802c6b6:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802c6ba:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802c6be:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802c6c2:	ee33 3a68 	vsub.f32	s6, s6, s17
 802c6c6:	ee36 0a88 	vadd.f32	s0, s13, s16
 802c6ca:	ee75 8a86 	vadd.f32	s17, s11, s12
 802c6ce:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802c6d2:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802c6d6:	ee75 6a62 	vsub.f32	s13, s10, s5
 802c6da:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802c6de:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802c6e2:	ee33 1a89 	vadd.f32	s2, s7, s18
 802c6e6:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802c6ea:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802c6ee:	ee75 4a22 	vadd.f32	s9, s10, s5
 802c6f2:	ee32 5a27 	vadd.f32	s10, s4, s15
 802c6f6:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c6fa:	ee33 8a06 	vadd.f32	s16, s6, s12
 802c6fe:	ee75 2a87 	vadd.f32	s5, s11, s14
 802c702:	ee31 9a28 	vadd.f32	s18, s2, s17
 802c706:	ee33 6a46 	vsub.f32	s12, s6, s12
 802c70a:	ee74 0a61 	vsub.f32	s1, s8, s3
 802c70e:	ee33 2a80 	vadd.f32	s4, s7, s0
 802c712:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802c716:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802c71a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802c71e:	ee31 1a68 	vsub.f32	s2, s2, s17
 802c722:	ee34 4a21 	vadd.f32	s8, s8, s3
 802c726:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802c72a:	ee74 4a85 	vadd.f32	s9, s9, s10
 802c72e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802c732:	44d8      	add	r8, fp
 802c734:	45c1      	cmp	r9, r8
 802c736:	ed8e 9a00 	vstr	s18, [lr]
 802c73a:	ed85 1a01 	vstr	s2, [r5, #4]
 802c73e:	449e      	add	lr, r3
 802c740:	ed8c 8a00 	vstr	s16, [ip]
 802c744:	441d      	add	r5, r3
 802c746:	ed80 6a00 	vstr	s12, [r0]
 802c74a:	edcc 0a01 	vstr	s1, [ip, #4]
 802c74e:	ed80 4a01 	vstr	s8, [r0, #4]
 802c752:	449c      	add	ip, r3
 802c754:	ed87 2a00 	vstr	s4, [r7]
 802c758:	4418      	add	r0, r3
 802c75a:	ed41 3a01 	vstr	s7, [r1, #-4]
 802c75e:	ed42 2a01 	vstr	s5, [r2, #-4]
 802c762:	ed86 7a00 	vstr	s14, [r6]
 802c766:	ed87 3a01 	vstr	s6, [r7, #4]
 802c76a:	edc1 4a00 	vstr	s9, [r1]
 802c76e:	441f      	add	r7, r3
 802c770:	edc2 5a00 	vstr	s11, [r2]
 802c774:	4419      	add	r1, r3
 802c776:	edc6 6a01 	vstr	s13, [r6, #4]
 802c77a:	441a      	add	r2, r3
 802c77c:	441e      	add	r6, r3
 802c77e:	f63f af44 	bhi.w	802c60a <arm_radix8_butterfly_f32+0x66>
 802c782:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c784:	2907      	cmp	r1, #7
 802c786:	4620      	mov	r0, r4
 802c788:	f240 81e9 	bls.w	802cb5e <arm_radix8_butterfly_f32+0x5ba>
 802c78c:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802c790:	193e      	adds	r6, r7, r4
 802c792:	1935      	adds	r5, r6, r4
 802c794:	9c03      	ldr	r4, [sp, #12]
 802c796:	9000      	str	r0, [sp, #0]
 802c798:	4622      	mov	r2, r4
 802c79a:	3201      	adds	r2, #1
 802c79c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802c7a0:	9900      	ldr	r1, [sp, #0]
 802c7a2:	1828      	adds	r0, r5, r0
 802c7a4:	eb00 0e01 	add.w	lr, r0, r1
 802c7a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c7aa:	440a      	add	r2, r1
 802c7ac:	eb04 0c01 	add.w	ip, r4, r1
 802c7b0:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802c7b4:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802c7b8:	9a00      	ldr	r2, [sp, #0]
 802c7ba:	940f      	str	r4, [sp, #60]	; 0x3c
 802c7bc:	00ed      	lsls	r5, r5, #3
 802c7be:	9511      	str	r5, [sp, #68]	; 0x44
 802c7c0:	00d5      	lsls	r5, r2, #3
 802c7c2:	950d      	str	r5, [sp, #52]	; 0x34
 802c7c4:	9d01      	ldr	r5, [sp, #4]
 802c7c6:	3508      	adds	r5, #8
 802c7c8:	9516      	str	r5, [sp, #88]	; 0x58
 802c7ca:	9d02      	ldr	r5, [sp, #8]
 802c7cc:	3508      	adds	r5, #8
 802c7ce:	0114      	lsls	r4, r2, #4
 802c7d0:	9517      	str	r5, [sp, #92]	; 0x5c
 802c7d2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c7d4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802c7d6:	940e      	str	r4, [sp, #56]	; 0x38
 802c7d8:	00c0      	lsls	r0, r0, #3
 802c7da:	9010      	str	r0, [sp, #64]	; 0x40
 802c7dc:	18aa      	adds	r2, r5, r2
 802c7de:	9207      	str	r2, [sp, #28]
 802c7e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802c7e2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802c7e4:	18aa      	adds	r2, r5, r2
 802c7e6:	9208      	str	r2, [sp, #32]
 802c7e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802c7ea:	18aa      	adds	r2, r5, r2
 802c7ec:	9209      	str	r2, [sp, #36]	; 0x24
 802c7ee:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802c7f2:	f10e 0204 	add.w	r2, lr, #4
 802c7f6:	920a      	str	r2, [sp, #40]	; 0x28
 802c7f8:	00c9      	lsls	r1, r1, #3
 802c7fa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802c7fc:	310c      	adds	r1, #12
 802c7fe:	00f6      	lsls	r6, r6, #3
 802c800:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802c804:	9114      	str	r1, [sp, #80]	; 0x50
 802c806:	18a9      	adds	r1, r5, r2
 802c808:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802c80a:	9612      	str	r6, [sp, #72]	; 0x48
 802c80c:	00ff      	lsls	r7, r7, #3
 802c80e:	19ae      	adds	r6, r5, r6
 802c810:	3008      	adds	r0, #8
 802c812:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802c816:	9606      	str	r6, [sp, #24]
 802c818:	9019      	str	r0, [sp, #100]	; 0x64
 802c81a:	18aa      	adds	r2, r5, r2
 802c81c:	0164      	lsls	r4, r4, #5
 802c81e:	19ee      	adds	r6, r5, r7
 802c820:	f10c 000c 	add.w	r0, ip, #12
 802c824:	9713      	str	r7, [sp, #76]	; 0x4c
 802c826:	9604      	str	r6, [sp, #16]
 802c828:	9015      	str	r0, [sp, #84]	; 0x54
 802c82a:	9103      	str	r1, [sp, #12]
 802c82c:	9205      	str	r2, [sp, #20]
 802c82e:	f104 0208 	add.w	r2, r4, #8
 802c832:	9218      	str	r2, [sp, #96]	; 0x60
 802c834:	f04f 0801 	mov.w	r8, #1
 802c838:	2200      	movs	r2, #0
 802c83a:	f102 0108 	add.w	r1, r2, #8
 802c83e:	460f      	mov	r7, r1
 802c840:	910b      	str	r1, [sp, #44]	; 0x2c
 802c842:	9918      	ldr	r1, [sp, #96]	; 0x60
 802c844:	188e      	adds	r6, r1, r2
 802c846:	9916      	ldr	r1, [sp, #88]	; 0x58
 802c848:	188d      	adds	r5, r1, r2
 802c84a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802c84c:	188c      	adds	r4, r1, r2
 802c84e:	9919      	ldr	r1, [sp, #100]	; 0x64
 802c850:	1888      	adds	r0, r1, r2
 802c852:	9914      	ldr	r1, [sp, #80]	; 0x50
 802c854:	eb01 0c02 	add.w	ip, r1, r2
 802c858:	9915      	ldr	r1, [sp, #84]	; 0x54
 802c85a:	440a      	add	r2, r1
 802c85c:	9903      	ldr	r1, [sp, #12]
 802c85e:	edd1 fa00 	vldr	s31, [r1]
 802c862:	9905      	ldr	r1, [sp, #20]
 802c864:	ed91 fa00 	vldr	s30, [r1]
 802c868:	9904      	ldr	r1, [sp, #16]
 802c86a:	edd1 ea00 	vldr	s29, [r1]
 802c86e:	9906      	ldr	r1, [sp, #24]
 802c870:	ed91 ea00 	vldr	s28, [r1]
 802c874:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c876:	edd1 da00 	vldr	s27, [r1]
 802c87a:	9908      	ldr	r1, [sp, #32]
 802c87c:	ed91 da00 	vldr	s26, [r1]
 802c880:	9907      	ldr	r1, [sp, #28]
 802c882:	edd1 ca00 	vldr	s25, [r1]
 802c886:	9903      	ldr	r1, [sp, #12]
 802c888:	ed91 ca01 	vldr	s24, [r1, #4]
 802c88c:	9905      	ldr	r1, [sp, #20]
 802c88e:	edd1 ba01 	vldr	s23, [r1, #4]
 802c892:	9904      	ldr	r1, [sp, #16]
 802c894:	edd1 aa01 	vldr	s21, [r1, #4]
 802c898:	9906      	ldr	r1, [sp, #24]
 802c89a:	ed91 aa01 	vldr	s20, [r1, #4]
 802c89e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c8a0:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8a4:	9908      	ldr	r1, [sp, #32]
 802c8a6:	edcd 7a00 	vstr	s15, [sp]
 802c8aa:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8ae:	9907      	ldr	r1, [sp, #28]
 802c8b0:	edcd 7a01 	vstr	s15, [sp, #4]
 802c8b4:	edd1 7a01 	vldr	s15, [r1, #4]
 802c8b8:	eb0a 0e07 	add.w	lr, sl, r7
 802c8bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802c8be:	edcd 7a02 	vstr	s15, [sp, #8]
 802c8c2:	eb0c 010a 	add.w	r1, ip, sl
 802c8c6:	4456      	add	r6, sl
 802c8c8:	4455      	add	r5, sl
 802c8ca:	4454      	add	r4, sl
 802c8cc:	4450      	add	r0, sl
 802c8ce:	4452      	add	r2, sl
 802c8d0:	46c4      	mov	ip, r8
 802c8d2:	e001      	b.n	802c8d8 <arm_radix8_butterfly_f32+0x334>
 802c8d4:	3f3504f3 	.word	0x3f3504f3
 802c8d8:	ed96 5a00 	vldr	s10, [r6]
 802c8dc:	ed52 9a01 	vldr	s19, [r2, #-4]
 802c8e0:	ed11 6a01 	vldr	s12, [r1, #-4]
 802c8e4:	edd0 7a00 	vldr	s15, [r0]
 802c8e8:	ed17 7a01 	vldr	s14, [r7, #-4]
 802c8ec:	edde 3a00 	vldr	s7, [lr]
 802c8f0:	ed94 3a00 	vldr	s6, [r4]
 802c8f4:	ed95 2a00 	vldr	s4, [r5]
 802c8f8:	ed9e 0a01 	vldr	s0, [lr, #4]
 802c8fc:	ee33 8a85 	vadd.f32	s16, s7, s10
 802c900:	ee32 1a06 	vadd.f32	s2, s4, s12
 802c904:	ee33 4a29 	vadd.f32	s8, s6, s19
 802c908:	ee77 4a87 	vadd.f32	s9, s15, s14
 802c90c:	ee78 1a04 	vadd.f32	s3, s16, s8
 802c910:	ee71 6a24 	vadd.f32	s13, s2, s9
 802c914:	ee32 2a46 	vsub.f32	s4, s4, s12
 802c918:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802c91c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802c920:	ed8e 6a00 	vstr	s12, [lr]
 802c924:	edd0 8a01 	vldr	s17, [r0, #4]
 802c928:	ed95 9a01 	vldr	s18, [r5, #4]
 802c92c:	edd1 2a00 	vldr	s5, [r1]
 802c930:	ed97 7a00 	vldr	s14, [r7]
 802c934:	edd4 0a01 	vldr	s1, [r4, #4]
 802c938:	ed96 6a01 	vldr	s12, [r6, #4]
 802c93c:	edd2 5a00 	vldr	s11, [r2]
 802c940:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802c944:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c948:	ee39 5a62 	vsub.f32	s10, s18, s5
 802c94c:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802c950:	ee38 4a44 	vsub.f32	s8, s16, s8
 802c954:	ee38 7a87 	vadd.f32	s14, s17, s14
 802c958:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802c95c:	ee79 2a22 	vadd.f32	s5, s18, s5
 802c960:	ee75 8a69 	vsub.f32	s17, s10, s19
 802c964:	ee32 9a27 	vadd.f32	s18, s4, s15
 802c968:	ee35 5a29 	vadd.f32	s10, s10, s19
 802c96c:	ee72 7a67 	vsub.f32	s15, s4, s15
 802c970:	ee30 2a06 	vadd.f32	s4, s0, s12
 802c974:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802c978:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802c97c:	ee32 9a08 	vadd.f32	s18, s4, s16
 802c980:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802c984:	ee32 2a48 	vsub.f32	s4, s4, s16
 802c988:	ee71 4a64 	vsub.f32	s9, s2, s9
 802c98c:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802c990:	ee32 1a87 	vadd.f32	s2, s5, s14
 802c994:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802c998:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802c99c:	ee30 6a46 	vsub.f32	s12, s0, s12
 802c9a0:	ee73 0a29 	vadd.f32	s1, s6, s19
 802c9a4:	ee36 0a28 	vadd.f32	s0, s12, s17
 802c9a8:	ee33 3a69 	vsub.f32	s6, s6, s19
 802c9ac:	ee32 7a64 	vsub.f32	s14, s4, s9
 802c9b0:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802c9b4:	ee36 6a68 	vsub.f32	s12, s12, s17
 802c9b8:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802c9bc:	ee75 8a85 	vadd.f32	s17, s11, s10
 802c9c0:	ee74 3a22 	vadd.f32	s7, s8, s5
 802c9c4:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802c9c8:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802c9cc:	ee79 1a41 	vsub.f32	s3, s18, s2
 802c9d0:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802c9d4:	ee76 5a43 	vsub.f32	s11, s12, s6
 802c9d8:	ee74 2a62 	vsub.f32	s5, s8, s5
 802c9dc:	ee72 4a24 	vadd.f32	s9, s4, s9
 802c9e0:	ee30 4a60 	vsub.f32	s8, s0, s1
 802c9e4:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802c9e8:	ee30 0a20 	vadd.f32	s0, s0, s1
 802c9ec:	ee77 9a85 	vadd.f32	s19, s15, s10
 802c9f0:	ee36 6a03 	vadd.f32	s12, s12, s6
 802c9f4:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802c9f8:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802c9fc:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802ca00:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802ca04:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802ca08:	ee39 1a01 	vadd.f32	s2, s18, s2
 802ca0c:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802ca10:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802ca14:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802ca18:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802ca1c:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802ca20:	ee35 3a03 	vadd.f32	s6, s10, s6
 802ca24:	ee72 6a66 	vsub.f32	s13, s4, s13
 802ca28:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802ca2c:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802ca30:	ed9d 4a02 	vldr	s8, [sp, #8]
 802ca34:	ed8e 1a01 	vstr	s2, [lr, #4]
 802ca38:	ee77 3a63 	vsub.f32	s7, s14, s7
 802ca3c:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802ca40:	ed9d 7a01 	vldr	s14, [sp, #4]
 802ca44:	ed86 3a00 	vstr	s6, [r6]
 802ca48:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ca4c:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ca50:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ca54:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802ca58:	ee67 2a22 	vmul.f32	s5, s14, s5
 802ca5c:	ee64 1a00 	vmul.f32	s3, s8, s0
 802ca60:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ca64:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ca68:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ca6c:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ca70:	ed9d 4a00 	vldr	s8, [sp]
 802ca74:	edc6 6a01 	vstr	s13, [r6, #4]
 802ca78:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ca7c:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802ca80:	ee64 9a29 	vmul.f32	s19, s8, s19
 802ca84:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ca88:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ca8c:	ee74 4a84 	vadd.f32	s9, s9, s8
 802ca90:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802ca94:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802ca98:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802ca9c:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802caa0:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802caa4:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802caa8:	ee75 1a21 	vadd.f32	s3, s10, s3
 802caac:	ee30 0a68 	vsub.f32	s0, s0, s17
 802cab0:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802cab4:	ee70 0a84 	vadd.f32	s1, s1, s8
 802cab8:	ee36 6a67 	vsub.f32	s12, s12, s15
 802cabc:	44dc      	add	ip, fp
 802cabe:	45e1      	cmp	r9, ip
 802cac0:	ed84 9a00 	vstr	s18, [r4]
 802cac4:	edc4 3a01 	vstr	s7, [r4, #4]
 802cac8:	449e      	add	lr, r3
 802caca:	ed02 7a01 	vstr	s14, [r2, #-4]
 802cace:	edc2 2a00 	vstr	s5, [r2]
 802cad2:	441e      	add	r6, r3
 802cad4:	ed85 2a00 	vstr	s4, [r5]
 802cad8:	ed85 8a01 	vstr	s16, [r5, #4]
 802cadc:	441c      	add	r4, r3
 802cade:	ed47 1a01 	vstr	s3, [r7, #-4]
 802cae2:	ed87 0a00 	vstr	s0, [r7]
 802cae6:	441a      	add	r2, r3
 802cae8:	ed41 4a01 	vstr	s9, [r1, #-4]
 802caec:	edc1 9a00 	vstr	s19, [r1]
 802caf0:	441d      	add	r5, r3
 802caf2:	edc0 0a00 	vstr	s1, [r0]
 802caf6:	441f      	add	r7, r3
 802caf8:	ed80 6a01 	vstr	s12, [r0, #4]
 802cafc:	4419      	add	r1, r3
 802cafe:	4418      	add	r0, r3
 802cb00:	f63f aeea 	bhi.w	802c8d8 <arm_radix8_butterfly_f32+0x334>
 802cb04:	9a03      	ldr	r2, [sp, #12]
 802cb06:	990d      	ldr	r1, [sp, #52]	; 0x34
 802cb08:	440a      	add	r2, r1
 802cb0a:	9203      	str	r2, [sp, #12]
 802cb0c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802cb0e:	9a05      	ldr	r2, [sp, #20]
 802cb10:	440a      	add	r2, r1
 802cb12:	9205      	str	r2, [sp, #20]
 802cb14:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802cb16:	9a04      	ldr	r2, [sp, #16]
 802cb18:	440a      	add	r2, r1
 802cb1a:	9204      	str	r2, [sp, #16]
 802cb1c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802cb1e:	9a06      	ldr	r2, [sp, #24]
 802cb20:	440a      	add	r2, r1
 802cb22:	9206      	str	r2, [sp, #24]
 802cb24:	9911      	ldr	r1, [sp, #68]	; 0x44
 802cb26:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802cb28:	440a      	add	r2, r1
 802cb2a:	9209      	str	r2, [sp, #36]	; 0x24
 802cb2c:	9910      	ldr	r1, [sp, #64]	; 0x40
 802cb2e:	9a08      	ldr	r2, [sp, #32]
 802cb30:	440a      	add	r2, r1
 802cb32:	9208      	str	r2, [sp, #32]
 802cb34:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802cb36:	9a07      	ldr	r2, [sp, #28]
 802cb38:	440a      	add	r2, r1
 802cb3a:	9207      	str	r2, [sp, #28]
 802cb3c:	990c      	ldr	r1, [sp, #48]	; 0x30
 802cb3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802cb40:	f108 0801 	add.w	r8, r8, #1
 802cb44:	3208      	adds	r2, #8
 802cb46:	4588      	cmp	r8, r1
 802cb48:	920a      	str	r2, [sp, #40]	; 0x28
 802cb4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802cb4c:	f47f ae75 	bne.w	802c83a <arm_radix8_butterfly_f32+0x296>
 802cb50:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802cb54:	9300      	str	r3, [sp, #0]
 802cb56:	46c3      	mov	fp, r8
 802cb58:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802cb5c:	e532      	b.n	802c5c4 <arm_radix8_butterfly_f32+0x20>
 802cb5e:	b01d      	add	sp, #116	; 0x74
 802cb60:	ecbd 8b10 	vpop	{d8-d15}
 802cb64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802cb68 <__aeabi_atexit>:
 802cb68:	460b      	mov	r3, r1
 802cb6a:	4601      	mov	r1, r0
 802cb6c:	4618      	mov	r0, r3
 802cb6e:	f000 bfc7 	b.w	802db00 <__cxa_atexit>

0802cb72 <_ZdlPvj>:
 802cb72:	f000 b812 	b.w	802cb9a <_ZdlPv>

0802cb76 <__cxa_guard_acquire>:
 802cb76:	6803      	ldr	r3, [r0, #0]
 802cb78:	07db      	lsls	r3, r3, #31
 802cb7a:	d406      	bmi.n	802cb8a <__cxa_guard_acquire+0x14>
 802cb7c:	7843      	ldrb	r3, [r0, #1]
 802cb7e:	b103      	cbz	r3, 802cb82 <__cxa_guard_acquire+0xc>
 802cb80:	deff      	udf	#255	; 0xff
 802cb82:	2301      	movs	r3, #1
 802cb84:	7043      	strb	r3, [r0, #1]
 802cb86:	4618      	mov	r0, r3
 802cb88:	4770      	bx	lr
 802cb8a:	2000      	movs	r0, #0
 802cb8c:	4770      	bx	lr

0802cb8e <__cxa_guard_release>:
 802cb8e:	2301      	movs	r3, #1
 802cb90:	6003      	str	r3, [r0, #0]
 802cb92:	4770      	bx	lr

0802cb94 <__cxa_pure_virtual>:
 802cb94:	b508      	push	{r3, lr}
 802cb96:	f000 f80f 	bl	802cbb8 <_ZSt9terminatev>

0802cb9a <_ZdlPv>:
 802cb9a:	f000 befd 	b.w	802d998 <free>

0802cb9e <_ZN10__cxxabiv111__terminateEPFvvE>:
 802cb9e:	b508      	push	{r3, lr}
 802cba0:	4780      	blx	r0
 802cba2:	f000 fec5 	bl	802d930 <abort>
	...

0802cba8 <_ZSt13get_terminatev>:
 802cba8:	4b02      	ldr	r3, [pc, #8]	; (802cbb4 <_ZSt13get_terminatev+0xc>)
 802cbaa:	6818      	ldr	r0, [r3, #0]
 802cbac:	f3bf 8f5b 	dmb	ish
 802cbb0:	4770      	bx	lr
 802cbb2:	bf00      	nop
 802cbb4:	20000108 	.word	0x20000108

0802cbb8 <_ZSt9terminatev>:
 802cbb8:	b508      	push	{r3, lr}
 802cbba:	f7ff fff5 	bl	802cba8 <_ZSt13get_terminatev>
 802cbbe:	f7ff ffee 	bl	802cb9e <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802cbc4 <sqrtf>:
 802cbc4:	b508      	push	{r3, lr}
 802cbc6:	ed2d 8b02 	vpush	{d8}
 802cbca:	eeb0 8a40 	vmov.f32	s16, s0
 802cbce:	f000 f97d 	bl	802cecc <__ieee754_sqrtf>
 802cbd2:	eeb4 8a48 	vcmp.f32	s16, s16
 802cbd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cbda:	d60c      	bvs.n	802cbf6 <sqrtf+0x32>
 802cbdc:	eddf 8a07 	vldr	s17, [pc, #28]	; 802cbfc <sqrtf+0x38>
 802cbe0:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802cbe4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cbe8:	d505      	bpl.n	802cbf6 <sqrtf+0x32>
 802cbea:	f001 f9a7 	bl	802df3c <__errno>
 802cbee:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802cbf2:	2321      	movs	r3, #33	; 0x21
 802cbf4:	6003      	str	r3, [r0, #0]
 802cbf6:	ecbd 8b02 	vpop	{d8}
 802cbfa:	bd08      	pop	{r3, pc}
 802cbfc:	00000000 	.word	0x00000000

0802cc00 <atanf>:
 802cc00:	b538      	push	{r3, r4, r5, lr}
 802cc02:	ee10 5a10 	vmov	r5, s0
 802cc06:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 802cc0a:	f1b4 4fa1 	cmp.w	r4, #1350565888	; 0x50800000
 802cc0e:	eef0 7a40 	vmov.f32	s15, s0
 802cc12:	db10      	blt.n	802cc36 <atanf+0x36>
 802cc14:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 802cc18:	dd04      	ble.n	802cc24 <atanf+0x24>
 802cc1a:	ee70 7a00 	vadd.f32	s15, s0, s0
 802cc1e:	eeb0 0a67 	vmov.f32	s0, s15
 802cc22:	bd38      	pop	{r3, r4, r5, pc}
 802cc24:	eddf 7a4d 	vldr	s15, [pc, #308]	; 802cd5c <atanf+0x15c>
 802cc28:	ed9f 7a4d 	vldr	s14, [pc, #308]	; 802cd60 <atanf+0x160>
 802cc2c:	2d00      	cmp	r5, #0
 802cc2e:	bfd8      	it	le
 802cc30:	eef0 7a47 	vmovle.f32	s15, s14
 802cc34:	e7f3      	b.n	802cc1e <atanf+0x1e>
 802cc36:	4b4b      	ldr	r3, [pc, #300]	; (802cd64 <atanf+0x164>)
 802cc38:	429c      	cmp	r4, r3
 802cc3a:	dc10      	bgt.n	802cc5e <atanf+0x5e>
 802cc3c:	f1b4 5f44 	cmp.w	r4, #822083584	; 0x31000000
 802cc40:	da0a      	bge.n	802cc58 <atanf+0x58>
 802cc42:	ed9f 7a49 	vldr	s14, [pc, #292]	; 802cd68 <atanf+0x168>
 802cc46:	ee30 7a07 	vadd.f32	s14, s0, s14
 802cc4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cc4e:	eeb4 7ae6 	vcmpe.f32	s14, s13
 802cc52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cc56:	dce2      	bgt.n	802cc1e <atanf+0x1e>
 802cc58:	f04f 33ff 	mov.w	r3, #4294967295
 802cc5c:	e013      	b.n	802cc86 <atanf+0x86>
 802cc5e:	f000 f8e7 	bl	802ce30 <fabsf>
 802cc62:	4b42      	ldr	r3, [pc, #264]	; (802cd6c <atanf+0x16c>)
 802cc64:	429c      	cmp	r4, r3
 802cc66:	dc4f      	bgt.n	802cd08 <atanf+0x108>
 802cc68:	f5a3 03d0 	sub.w	r3, r3, #6815744	; 0x680000
 802cc6c:	429c      	cmp	r4, r3
 802cc6e:	dc41      	bgt.n	802ccf4 <atanf+0xf4>
 802cc70:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
 802cc74:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cc78:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cc7c:	2300      	movs	r3, #0
 802cc7e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cc82:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cc86:	1c5a      	adds	r2, r3, #1
 802cc88:	ee27 6aa7 	vmul.f32	s12, s15, s15
 802cc8c:	ed9f 7a38 	vldr	s14, [pc, #224]	; 802cd70 <atanf+0x170>
 802cc90:	eddf 5a38 	vldr	s11, [pc, #224]	; 802cd74 <atanf+0x174>
 802cc94:	ed9f 5a38 	vldr	s10, [pc, #224]	; 802cd78 <atanf+0x178>
 802cc98:	ee66 6a06 	vmul.f32	s13, s12, s12
 802cc9c:	eee6 5a87 	vfma.f32	s11, s13, s14
 802cca0:	ed9f 7a36 	vldr	s14, [pc, #216]	; 802cd7c <atanf+0x17c>
 802cca4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802cca8:	eddf 5a35 	vldr	s11, [pc, #212]	; 802cd80 <atanf+0x180>
 802ccac:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ccb0:	ed9f 7a34 	vldr	s14, [pc, #208]	; 802cd84 <atanf+0x184>
 802ccb4:	eea5 7aa6 	vfma.f32	s14, s11, s13
 802ccb8:	eddf 5a33 	vldr	s11, [pc, #204]	; 802cd88 <atanf+0x188>
 802ccbc:	eee7 5a26 	vfma.f32	s11, s14, s13
 802ccc0:	ed9f 7a32 	vldr	s14, [pc, #200]	; 802cd8c <atanf+0x18c>
 802ccc4:	eea6 5a87 	vfma.f32	s10, s13, s14
 802ccc8:	ed9f 7a31 	vldr	s14, [pc, #196]	; 802cd90 <atanf+0x190>
 802cccc:	eea5 7a26 	vfma.f32	s14, s10, s13
 802ccd0:	ed9f 5a30 	vldr	s10, [pc, #192]	; 802cd94 <atanf+0x194>
 802ccd4:	eea7 5a26 	vfma.f32	s10, s14, s13
 802ccd8:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 802cd98 <atanf+0x198>
 802ccdc:	eea5 7a26 	vfma.f32	s14, s10, s13
 802cce0:	ee27 7a26 	vmul.f32	s14, s14, s13
 802cce4:	eea5 7a86 	vfma.f32	s14, s11, s12
 802cce8:	ee27 7a87 	vmul.f32	s14, s15, s14
 802ccec:	d121      	bne.n	802cd32 <atanf+0x132>
 802ccee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ccf2:	e794      	b.n	802cc1e <atanf+0x1e>
 802ccf4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802ccf8:	ee30 7a67 	vsub.f32	s14, s0, s15
 802ccfc:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cd00:	2301      	movs	r3, #1
 802cd02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cd06:	e7be      	b.n	802cc86 <atanf+0x86>
 802cd08:	4b24      	ldr	r3, [pc, #144]	; (802cd9c <atanf+0x19c>)
 802cd0a:	429c      	cmp	r4, r3
 802cd0c:	dc0b      	bgt.n	802cd26 <atanf+0x126>
 802cd0e:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 802cd12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cd16:	eea0 7a27 	vfma.f32	s14, s0, s15
 802cd1a:	2302      	movs	r3, #2
 802cd1c:	ee70 6a67 	vsub.f32	s13, s0, s15
 802cd20:	eec6 7a87 	vdiv.f32	s15, s13, s14
 802cd24:	e7af      	b.n	802cc86 <atanf+0x86>
 802cd26:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
 802cd2a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cd2e:	2303      	movs	r3, #3
 802cd30:	e7a9      	b.n	802cc86 <atanf+0x86>
 802cd32:	4a1b      	ldr	r2, [pc, #108]	; (802cda0 <atanf+0x1a0>)
 802cd34:	491b      	ldr	r1, [pc, #108]	; (802cda4 <atanf+0x1a4>)
 802cd36:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802cd3a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 802cd3e:	edd3 6a00 	vldr	s13, [r3]
 802cd42:	ee37 7a66 	vsub.f32	s14, s14, s13
 802cd46:	2d00      	cmp	r5, #0
 802cd48:	ee37 7a67 	vsub.f32	s14, s14, s15
 802cd4c:	edd2 7a00 	vldr	s15, [r2]
 802cd50:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802cd54:	bfb8      	it	lt
 802cd56:	eef1 7a67 	vneglt.f32	s15, s15
 802cd5a:	e760      	b.n	802cc1e <atanf+0x1e>
 802cd5c:	3fc90fdb 	.word	0x3fc90fdb
 802cd60:	bfc90fdb 	.word	0xbfc90fdb
 802cd64:	3edfffff 	.word	0x3edfffff
 802cd68:	7149f2ca 	.word	0x7149f2ca
 802cd6c:	3f97ffff 	.word	0x3f97ffff
 802cd70:	3c8569d7 	.word	0x3c8569d7
 802cd74:	3d4bda59 	.word	0x3d4bda59
 802cd78:	bd6ef16b 	.word	0xbd6ef16b
 802cd7c:	3d886b35 	.word	0x3d886b35
 802cd80:	3dba2e6e 	.word	0x3dba2e6e
 802cd84:	3e124925 	.word	0x3e124925
 802cd88:	3eaaaaab 	.word	0x3eaaaaab
 802cd8c:	bd15a221 	.word	0xbd15a221
 802cd90:	bd9d8795 	.word	0xbd9d8795
 802cd94:	bde38e38 	.word	0xbde38e38
 802cd98:	be4ccccd 	.word	0xbe4ccccd
 802cd9c:	401bffff 	.word	0x401bffff
 802cda0:	080457dc 	.word	0x080457dc
 802cda4:	080457ec 	.word	0x080457ec

0802cda8 <cosf>:
 802cda8:	ee10 3a10 	vmov	r3, s0
 802cdac:	b507      	push	{r0, r1, r2, lr}
 802cdae:	4a1e      	ldr	r2, [pc, #120]	; (802ce28 <cosf+0x80>)
 802cdb0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cdb4:	4293      	cmp	r3, r2
 802cdb6:	dc06      	bgt.n	802cdc6 <cosf+0x1e>
 802cdb8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802ce2c <cosf+0x84>
 802cdbc:	b003      	add	sp, #12
 802cdbe:	f85d eb04 	ldr.w	lr, [sp], #4
 802cdc2:	f000 b90b 	b.w	802cfdc <__kernel_cosf>
 802cdc6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802cdca:	db04      	blt.n	802cdd6 <cosf+0x2e>
 802cdcc:	ee30 0a40 	vsub.f32	s0, s0, s0
 802cdd0:	b003      	add	sp, #12
 802cdd2:	f85d fb04 	ldr.w	pc, [sp], #4
 802cdd6:	4668      	mov	r0, sp
 802cdd8:	f000 f9a6 	bl	802d128 <__ieee754_rem_pio2f>
 802cddc:	f000 0003 	and.w	r0, r0, #3
 802cde0:	2801      	cmp	r0, #1
 802cde2:	d009      	beq.n	802cdf8 <cosf+0x50>
 802cde4:	2802      	cmp	r0, #2
 802cde6:	d010      	beq.n	802ce0a <cosf+0x62>
 802cde8:	b9b0      	cbnz	r0, 802ce18 <cosf+0x70>
 802cdea:	eddd 0a01 	vldr	s1, [sp, #4]
 802cdee:	ed9d 0a00 	vldr	s0, [sp]
 802cdf2:	f000 f8f3 	bl	802cfdc <__kernel_cosf>
 802cdf6:	e7eb      	b.n	802cdd0 <cosf+0x28>
 802cdf8:	eddd 0a01 	vldr	s1, [sp, #4]
 802cdfc:	ed9d 0a00 	vldr	s0, [sp]
 802ce00:	f000 f94a 	bl	802d098 <__kernel_sinf>
 802ce04:	eeb1 0a40 	vneg.f32	s0, s0
 802ce08:	e7e2      	b.n	802cdd0 <cosf+0x28>
 802ce0a:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce0e:	ed9d 0a00 	vldr	s0, [sp]
 802ce12:	f000 f8e3 	bl	802cfdc <__kernel_cosf>
 802ce16:	e7f5      	b.n	802ce04 <cosf+0x5c>
 802ce18:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce1c:	ed9d 0a00 	vldr	s0, [sp]
 802ce20:	2001      	movs	r0, #1
 802ce22:	f000 f939 	bl	802d098 <__kernel_sinf>
 802ce26:	e7d3      	b.n	802cdd0 <cosf+0x28>
 802ce28:	3f490fd8 	.word	0x3f490fd8
 802ce2c:	00000000 	.word	0x00000000

0802ce30 <fabsf>:
 802ce30:	ee10 3a10 	vmov	r3, s0
 802ce34:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce38:	ee00 3a10 	vmov	s0, r3
 802ce3c:	4770      	bx	lr
	...

0802ce40 <sinf>:
 802ce40:	ee10 3a10 	vmov	r3, s0
 802ce44:	b507      	push	{r0, r1, r2, lr}
 802ce46:	4a1f      	ldr	r2, [pc, #124]	; (802cec4 <sinf+0x84>)
 802ce48:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802ce4c:	4293      	cmp	r3, r2
 802ce4e:	dc07      	bgt.n	802ce60 <sinf+0x20>
 802ce50:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802cec8 <sinf+0x88>
 802ce54:	2000      	movs	r0, #0
 802ce56:	b003      	add	sp, #12
 802ce58:	f85d eb04 	ldr.w	lr, [sp], #4
 802ce5c:	f000 b91c 	b.w	802d098 <__kernel_sinf>
 802ce60:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802ce64:	db04      	blt.n	802ce70 <sinf+0x30>
 802ce66:	ee30 0a40 	vsub.f32	s0, s0, s0
 802ce6a:	b003      	add	sp, #12
 802ce6c:	f85d fb04 	ldr.w	pc, [sp], #4
 802ce70:	4668      	mov	r0, sp
 802ce72:	f000 f959 	bl	802d128 <__ieee754_rem_pio2f>
 802ce76:	f000 0003 	and.w	r0, r0, #3
 802ce7a:	2801      	cmp	r0, #1
 802ce7c:	d00a      	beq.n	802ce94 <sinf+0x54>
 802ce7e:	2802      	cmp	r0, #2
 802ce80:	d00f      	beq.n	802cea2 <sinf+0x62>
 802ce82:	b9c0      	cbnz	r0, 802ceb6 <sinf+0x76>
 802ce84:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce88:	ed9d 0a00 	vldr	s0, [sp]
 802ce8c:	2001      	movs	r0, #1
 802ce8e:	f000 f903 	bl	802d098 <__kernel_sinf>
 802ce92:	e7ea      	b.n	802ce6a <sinf+0x2a>
 802ce94:	eddd 0a01 	vldr	s1, [sp, #4]
 802ce98:	ed9d 0a00 	vldr	s0, [sp]
 802ce9c:	f000 f89e 	bl	802cfdc <__kernel_cosf>
 802cea0:	e7e3      	b.n	802ce6a <sinf+0x2a>
 802cea2:	eddd 0a01 	vldr	s1, [sp, #4]
 802cea6:	ed9d 0a00 	vldr	s0, [sp]
 802ceaa:	2001      	movs	r0, #1
 802ceac:	f000 f8f4 	bl	802d098 <__kernel_sinf>
 802ceb0:	eeb1 0a40 	vneg.f32	s0, s0
 802ceb4:	e7d9      	b.n	802ce6a <sinf+0x2a>
 802ceb6:	eddd 0a01 	vldr	s1, [sp, #4]
 802ceba:	ed9d 0a00 	vldr	s0, [sp]
 802cebe:	f000 f88d 	bl	802cfdc <__kernel_cosf>
 802cec2:	e7f5      	b.n	802ceb0 <sinf+0x70>
 802cec4:	3f490fd8 	.word	0x3f490fd8
 802cec8:	00000000 	.word	0x00000000

0802cecc <__ieee754_sqrtf>:
 802cecc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802ced0:	4770      	bx	lr
	...

0802ced4 <ceilf>:
 802ced4:	ee10 3a10 	vmov	r3, s0
 802ced8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cedc:	3a7f      	subs	r2, #127	; 0x7f
 802cede:	2a16      	cmp	r2, #22
 802cee0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cee4:	dc2a      	bgt.n	802cf3c <ceilf+0x68>
 802cee6:	2a00      	cmp	r2, #0
 802cee8:	da11      	bge.n	802cf0e <ceilf+0x3a>
 802ceea:	eddf 7a19 	vldr	s15, [pc, #100]	; 802cf50 <ceilf+0x7c>
 802ceee:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cef2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cef6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cefa:	dd05      	ble.n	802cf08 <ceilf+0x34>
 802cefc:	2b00      	cmp	r3, #0
 802cefe:	db23      	blt.n	802cf48 <ceilf+0x74>
 802cf00:	2900      	cmp	r1, #0
 802cf02:	bf18      	it	ne
 802cf04:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802cf08:	ee00 3a10 	vmov	s0, r3
 802cf0c:	4770      	bx	lr
 802cf0e:	4911      	ldr	r1, [pc, #68]	; (802cf54 <ceilf+0x80>)
 802cf10:	4111      	asrs	r1, r2
 802cf12:	420b      	tst	r3, r1
 802cf14:	d0fa      	beq.n	802cf0c <ceilf+0x38>
 802cf16:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802cf50 <ceilf+0x7c>
 802cf1a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf1e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf26:	ddef      	ble.n	802cf08 <ceilf+0x34>
 802cf28:	2b00      	cmp	r3, #0
 802cf2a:	bfc2      	ittt	gt
 802cf2c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802cf30:	fa40 f202 	asrgt.w	r2, r0, r2
 802cf34:	189b      	addgt	r3, r3, r2
 802cf36:	ea23 0301 	bic.w	r3, r3, r1
 802cf3a:	e7e5      	b.n	802cf08 <ceilf+0x34>
 802cf3c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cf40:	d3e4      	bcc.n	802cf0c <ceilf+0x38>
 802cf42:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cf46:	4770      	bx	lr
 802cf48:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802cf4c:	e7dc      	b.n	802cf08 <ceilf+0x34>
 802cf4e:	bf00      	nop
 802cf50:	7149f2ca 	.word	0x7149f2ca
 802cf54:	007fffff 	.word	0x007fffff

0802cf58 <floorf>:
 802cf58:	ee10 3a10 	vmov	r3, s0
 802cf5c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802cf60:	3a7f      	subs	r2, #127	; 0x7f
 802cf62:	2a16      	cmp	r2, #22
 802cf64:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802cf68:	dc2a      	bgt.n	802cfc0 <floorf+0x68>
 802cf6a:	2a00      	cmp	r2, #0
 802cf6c:	da11      	bge.n	802cf92 <floorf+0x3a>
 802cf6e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802cfd0 <floorf+0x78>
 802cf72:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cf76:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cf7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cf7e:	dd05      	ble.n	802cf8c <floorf+0x34>
 802cf80:	2b00      	cmp	r3, #0
 802cf82:	da23      	bge.n	802cfcc <floorf+0x74>
 802cf84:	4a13      	ldr	r2, [pc, #76]	; (802cfd4 <floorf+0x7c>)
 802cf86:	2900      	cmp	r1, #0
 802cf88:	bf18      	it	ne
 802cf8a:	4613      	movne	r3, r2
 802cf8c:	ee00 3a10 	vmov	s0, r3
 802cf90:	4770      	bx	lr
 802cf92:	4911      	ldr	r1, [pc, #68]	; (802cfd8 <floorf+0x80>)
 802cf94:	4111      	asrs	r1, r2
 802cf96:	420b      	tst	r3, r1
 802cf98:	d0fa      	beq.n	802cf90 <floorf+0x38>
 802cf9a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802cfd0 <floorf+0x78>
 802cf9e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802cfa2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802cfa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802cfaa:	ddef      	ble.n	802cf8c <floorf+0x34>
 802cfac:	2b00      	cmp	r3, #0
 802cfae:	bfbe      	ittt	lt
 802cfb0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802cfb4:	fa40 f202 	asrlt.w	r2, r0, r2
 802cfb8:	189b      	addlt	r3, r3, r2
 802cfba:	ea23 0301 	bic.w	r3, r3, r1
 802cfbe:	e7e5      	b.n	802cf8c <floorf+0x34>
 802cfc0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802cfc4:	d3e4      	bcc.n	802cf90 <floorf+0x38>
 802cfc6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802cfca:	4770      	bx	lr
 802cfcc:	2300      	movs	r3, #0
 802cfce:	e7dd      	b.n	802cf8c <floorf+0x34>
 802cfd0:	7149f2ca 	.word	0x7149f2ca
 802cfd4:	bf800000 	.word	0xbf800000
 802cfd8:	007fffff 	.word	0x007fffff

0802cfdc <__kernel_cosf>:
 802cfdc:	ee10 3a10 	vmov	r3, s0
 802cfe0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802cfe4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802cfe8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802cfec:	da05      	bge.n	802cffa <__kernel_cosf+0x1e>
 802cfee:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802cff2:	ee17 2a90 	vmov	r2, s15
 802cff6:	2a00      	cmp	r2, #0
 802cff8:	d03b      	beq.n	802d072 <__kernel_cosf+0x96>
 802cffa:	ee20 7a00 	vmul.f32	s14, s0, s0
 802cffe:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d078 <__kernel_cosf+0x9c>
 802d002:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802d07c <__kernel_cosf+0xa0>
 802d006:	4a1e      	ldr	r2, [pc, #120]	; (802d080 <__kernel_cosf+0xa4>)
 802d008:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d00c:	4293      	cmp	r3, r2
 802d00e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802d084 <__kernel_cosf+0xa8>
 802d012:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d016:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802d088 <__kernel_cosf+0xac>
 802d01a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d01e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802d08c <__kernel_cosf+0xb0>
 802d022:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d026:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802d090 <__kernel_cosf+0xb4>
 802d02a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d02e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802d032:	ee26 6a07 	vmul.f32	s12, s12, s14
 802d036:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d03a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802d03e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d042:	dc04      	bgt.n	802d04e <__kernel_cosf+0x72>
 802d044:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d048:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802d04c:	4770      	bx	lr
 802d04e:	4a11      	ldr	r2, [pc, #68]	; (802d094 <__kernel_cosf+0xb8>)
 802d050:	4293      	cmp	r3, r2
 802d052:	bfda      	itte	le
 802d054:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802d058:	ee07 3a10 	vmovle	s14, r3
 802d05c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802d060:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d064:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802d068:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802d06c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d070:	4770      	bx	lr
 802d072:	eeb0 0a66 	vmov.f32	s0, s13
 802d076:	4770      	bx	lr
 802d078:	ad47d74e 	.word	0xad47d74e
 802d07c:	310f74f6 	.word	0x310f74f6
 802d080:	3e999999 	.word	0x3e999999
 802d084:	b493f27c 	.word	0xb493f27c
 802d088:	37d00d01 	.word	0x37d00d01
 802d08c:	bab60b61 	.word	0xbab60b61
 802d090:	3d2aaaab 	.word	0x3d2aaaab
 802d094:	3f480000 	.word	0x3f480000

0802d098 <__kernel_sinf>:
 802d098:	ee10 3a10 	vmov	r3, s0
 802d09c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802d0a0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802d0a4:	da04      	bge.n	802d0b0 <__kernel_sinf+0x18>
 802d0a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802d0aa:	ee17 3a90 	vmov	r3, s15
 802d0ae:	b35b      	cbz	r3, 802d108 <__kernel_sinf+0x70>
 802d0b0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802d0b4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802d10c <__kernel_sinf+0x74>
 802d0b8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802d110 <__kernel_sinf+0x78>
 802d0bc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d0c0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802d114 <__kernel_sinf+0x7c>
 802d0c4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d0c8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802d118 <__kernel_sinf+0x80>
 802d0cc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802d0d0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802d11c <__kernel_sinf+0x84>
 802d0d4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802d0d8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802d0dc:	b930      	cbnz	r0, 802d0ec <__kernel_sinf+0x54>
 802d0de:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802d120 <__kernel_sinf+0x88>
 802d0e2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802d0e6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802d0ea:	4770      	bx	lr
 802d0ec:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802d0f0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802d0f4:	eee0 7a86 	vfma.f32	s15, s1, s12
 802d0f8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802d0fc:	eddf 7a09 	vldr	s15, [pc, #36]	; 802d124 <__kernel_sinf+0x8c>
 802d100:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802d104:	ee30 0a60 	vsub.f32	s0, s0, s1
 802d108:	4770      	bx	lr
 802d10a:	bf00      	nop
 802d10c:	2f2ec9d3 	.word	0x2f2ec9d3
 802d110:	b2d72f34 	.word	0xb2d72f34
 802d114:	3638ef1b 	.word	0x3638ef1b
 802d118:	b9500d01 	.word	0xb9500d01
 802d11c:	3c088889 	.word	0x3c088889
 802d120:	be2aaaab 	.word	0xbe2aaaab
 802d124:	3e2aaaab 	.word	0x3e2aaaab

0802d128 <__ieee754_rem_pio2f>:
 802d128:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d12a:	ee10 6a10 	vmov	r6, s0
 802d12e:	4b86      	ldr	r3, [pc, #536]	; (802d348 <__ieee754_rem_pio2f+0x220>)
 802d130:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802d134:	429d      	cmp	r5, r3
 802d136:	b087      	sub	sp, #28
 802d138:	4604      	mov	r4, r0
 802d13a:	dc05      	bgt.n	802d148 <__ieee754_rem_pio2f+0x20>
 802d13c:	2300      	movs	r3, #0
 802d13e:	ed80 0a00 	vstr	s0, [r0]
 802d142:	6043      	str	r3, [r0, #4]
 802d144:	2000      	movs	r0, #0
 802d146:	e020      	b.n	802d18a <__ieee754_rem_pio2f+0x62>
 802d148:	4b80      	ldr	r3, [pc, #512]	; (802d34c <__ieee754_rem_pio2f+0x224>)
 802d14a:	429d      	cmp	r5, r3
 802d14c:	dc38      	bgt.n	802d1c0 <__ieee754_rem_pio2f+0x98>
 802d14e:	2e00      	cmp	r6, #0
 802d150:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802d350 <__ieee754_rem_pio2f+0x228>
 802d154:	4b7f      	ldr	r3, [pc, #508]	; (802d354 <__ieee754_rem_pio2f+0x22c>)
 802d156:	f025 050f 	bic.w	r5, r5, #15
 802d15a:	dd18      	ble.n	802d18e <__ieee754_rem_pio2f+0x66>
 802d15c:	429d      	cmp	r5, r3
 802d15e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802d162:	bf09      	itett	eq
 802d164:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802d358 <__ieee754_rem_pio2f+0x230>
 802d168:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802d35c <__ieee754_rem_pio2f+0x234>
 802d16c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802d170:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802d360 <__ieee754_rem_pio2f+0x238>
 802d174:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802d178:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d17c:	edc0 6a00 	vstr	s13, [r0]
 802d180:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d184:	edc0 7a01 	vstr	s15, [r0, #4]
 802d188:	2001      	movs	r0, #1
 802d18a:	b007      	add	sp, #28
 802d18c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d18e:	429d      	cmp	r5, r3
 802d190:	ee70 7a07 	vadd.f32	s15, s0, s14
 802d194:	bf09      	itett	eq
 802d196:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802d358 <__ieee754_rem_pio2f+0x230>
 802d19a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802d35c <__ieee754_rem_pio2f+0x234>
 802d19e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802d1a2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802d360 <__ieee754_rem_pio2f+0x238>
 802d1a6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802d1aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802d1ae:	edc0 6a00 	vstr	s13, [r0]
 802d1b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d1b6:	edc0 7a01 	vstr	s15, [r0, #4]
 802d1ba:	f04f 30ff 	mov.w	r0, #4294967295
 802d1be:	e7e4      	b.n	802d18a <__ieee754_rem_pio2f+0x62>
 802d1c0:	4b68      	ldr	r3, [pc, #416]	; (802d364 <__ieee754_rem_pio2f+0x23c>)
 802d1c2:	429d      	cmp	r5, r3
 802d1c4:	dc71      	bgt.n	802d2aa <__ieee754_rem_pio2f+0x182>
 802d1c6:	f7ff fe33 	bl	802ce30 <fabsf>
 802d1ca:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802d368 <__ieee754_rem_pio2f+0x240>
 802d1ce:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d1d2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802d1d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d1da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802d1de:	ee17 0a90 	vmov	r0, s15
 802d1e2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d350 <__ieee754_rem_pio2f+0x228>
 802d1e6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802d1ea:	281f      	cmp	r0, #31
 802d1ec:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802d35c <__ieee754_rem_pio2f+0x234>
 802d1f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802d1f4:	eeb1 6a47 	vneg.f32	s12, s14
 802d1f8:	ee70 6a67 	vsub.f32	s13, s0, s15
 802d1fc:	ee16 2a90 	vmov	r2, s13
 802d200:	dc1c      	bgt.n	802d23c <__ieee754_rem_pio2f+0x114>
 802d202:	495a      	ldr	r1, [pc, #360]	; (802d36c <__ieee754_rem_pio2f+0x244>)
 802d204:	1e47      	subs	r7, r0, #1
 802d206:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802d20a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802d20e:	428b      	cmp	r3, r1
 802d210:	d014      	beq.n	802d23c <__ieee754_rem_pio2f+0x114>
 802d212:	6022      	str	r2, [r4, #0]
 802d214:	ed94 7a00 	vldr	s14, [r4]
 802d218:	ee30 0a47 	vsub.f32	s0, s0, s14
 802d21c:	2e00      	cmp	r6, #0
 802d21e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802d222:	ed84 0a01 	vstr	s0, [r4, #4]
 802d226:	dab0      	bge.n	802d18a <__ieee754_rem_pio2f+0x62>
 802d228:	eeb1 7a47 	vneg.f32	s14, s14
 802d22c:	eeb1 0a40 	vneg.f32	s0, s0
 802d230:	ed84 7a00 	vstr	s14, [r4]
 802d234:	ed84 0a01 	vstr	s0, [r4, #4]
 802d238:	4240      	negs	r0, r0
 802d23a:	e7a6      	b.n	802d18a <__ieee754_rem_pio2f+0x62>
 802d23c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d240:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802d244:	2908      	cmp	r1, #8
 802d246:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802d24a:	dde2      	ble.n	802d212 <__ieee754_rem_pio2f+0xea>
 802d24c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802d358 <__ieee754_rem_pio2f+0x230>
 802d250:	eef0 6a40 	vmov.f32	s13, s0
 802d254:	eee6 6a25 	vfma.f32	s13, s12, s11
 802d258:	ee70 7a66 	vsub.f32	s15, s0, s13
 802d25c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d260:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802d360 <__ieee754_rem_pio2f+0x238>
 802d264:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802d268:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802d26c:	ee15 2a90 	vmov	r2, s11
 802d270:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802d274:	1a5b      	subs	r3, r3, r1
 802d276:	2b19      	cmp	r3, #25
 802d278:	dc04      	bgt.n	802d284 <__ieee754_rem_pio2f+0x15c>
 802d27a:	edc4 5a00 	vstr	s11, [r4]
 802d27e:	eeb0 0a66 	vmov.f32	s0, s13
 802d282:	e7c7      	b.n	802d214 <__ieee754_rem_pio2f+0xec>
 802d284:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802d370 <__ieee754_rem_pio2f+0x248>
 802d288:	eeb0 0a66 	vmov.f32	s0, s13
 802d28c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802d290:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802d294:	eddf 6a37 	vldr	s13, [pc, #220]	; 802d374 <__ieee754_rem_pio2f+0x24c>
 802d298:	eee6 7a25 	vfma.f32	s15, s12, s11
 802d29c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802d2a0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802d2a4:	ed84 7a00 	vstr	s14, [r4]
 802d2a8:	e7b4      	b.n	802d214 <__ieee754_rem_pio2f+0xec>
 802d2aa:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802d2ae:	db06      	blt.n	802d2be <__ieee754_rem_pio2f+0x196>
 802d2b0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802d2b4:	edc0 7a01 	vstr	s15, [r0, #4]
 802d2b8:	edc0 7a00 	vstr	s15, [r0]
 802d2bc:	e742      	b.n	802d144 <__ieee754_rem_pio2f+0x1c>
 802d2be:	15ea      	asrs	r2, r5, #23
 802d2c0:	3a86      	subs	r2, #134	; 0x86
 802d2c2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802d2c6:	ee07 3a90 	vmov	s15, r3
 802d2ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d2ce:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802d378 <__ieee754_rem_pio2f+0x250>
 802d2d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d2d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d2da:	ed8d 7a03 	vstr	s14, [sp, #12]
 802d2de:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d2e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802d2e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802d2ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d2ee:	ed8d 7a04 	vstr	s14, [sp, #16]
 802d2f2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802d2f6:	eef5 7a40 	vcmp.f32	s15, #0.0
 802d2fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d2fe:	edcd 7a05 	vstr	s15, [sp, #20]
 802d302:	d11e      	bne.n	802d342 <__ieee754_rem_pio2f+0x21a>
 802d304:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802d308:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d30c:	bf14      	ite	ne
 802d30e:	2302      	movne	r3, #2
 802d310:	2301      	moveq	r3, #1
 802d312:	491a      	ldr	r1, [pc, #104]	; (802d37c <__ieee754_rem_pio2f+0x254>)
 802d314:	9101      	str	r1, [sp, #4]
 802d316:	2102      	movs	r1, #2
 802d318:	9100      	str	r1, [sp, #0]
 802d31a:	a803      	add	r0, sp, #12
 802d31c:	4621      	mov	r1, r4
 802d31e:	f000 f895 	bl	802d44c <__kernel_rem_pio2f>
 802d322:	2e00      	cmp	r6, #0
 802d324:	f6bf af31 	bge.w	802d18a <__ieee754_rem_pio2f+0x62>
 802d328:	edd4 7a00 	vldr	s15, [r4]
 802d32c:	eef1 7a67 	vneg.f32	s15, s15
 802d330:	edc4 7a00 	vstr	s15, [r4]
 802d334:	edd4 7a01 	vldr	s15, [r4, #4]
 802d338:	eef1 7a67 	vneg.f32	s15, s15
 802d33c:	edc4 7a01 	vstr	s15, [r4, #4]
 802d340:	e77a      	b.n	802d238 <__ieee754_rem_pio2f+0x110>
 802d342:	2303      	movs	r3, #3
 802d344:	e7e5      	b.n	802d312 <__ieee754_rem_pio2f+0x1ea>
 802d346:	bf00      	nop
 802d348:	3f490fd8 	.word	0x3f490fd8
 802d34c:	4016cbe3 	.word	0x4016cbe3
 802d350:	3fc90f80 	.word	0x3fc90f80
 802d354:	3fc90fd0 	.word	0x3fc90fd0
 802d358:	37354400 	.word	0x37354400
 802d35c:	37354443 	.word	0x37354443
 802d360:	2e85a308 	.word	0x2e85a308
 802d364:	43490f80 	.word	0x43490f80
 802d368:	3f22f984 	.word	0x3f22f984
 802d36c:	080457fc 	.word	0x080457fc
 802d370:	2e85a300 	.word	0x2e85a300
 802d374:	248d3132 	.word	0x248d3132
 802d378:	43800000 	.word	0x43800000
 802d37c:	0804587c 	.word	0x0804587c

0802d380 <scalbnf>:
 802d380:	ee10 3a10 	vmov	r3, s0
 802d384:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802d388:	d02b      	beq.n	802d3e2 <scalbnf+0x62>
 802d38a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802d38e:	d302      	bcc.n	802d396 <scalbnf+0x16>
 802d390:	ee30 0a00 	vadd.f32	s0, s0, s0
 802d394:	4770      	bx	lr
 802d396:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802d39a:	d123      	bne.n	802d3e4 <scalbnf+0x64>
 802d39c:	4b24      	ldr	r3, [pc, #144]	; (802d430 <scalbnf+0xb0>)
 802d39e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802d434 <scalbnf+0xb4>
 802d3a2:	4298      	cmp	r0, r3
 802d3a4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802d3a8:	db17      	blt.n	802d3da <scalbnf+0x5a>
 802d3aa:	ee10 3a10 	vmov	r3, s0
 802d3ae:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802d3b2:	3a19      	subs	r2, #25
 802d3b4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802d3b8:	4288      	cmp	r0, r1
 802d3ba:	dd15      	ble.n	802d3e8 <scalbnf+0x68>
 802d3bc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802d438 <scalbnf+0xb8>
 802d3c0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802d43c <scalbnf+0xbc>
 802d3c4:	ee10 3a10 	vmov	r3, s0
 802d3c8:	eeb0 7a67 	vmov.f32	s14, s15
 802d3cc:	2b00      	cmp	r3, #0
 802d3ce:	bfb8      	it	lt
 802d3d0:	eef0 7a66 	vmovlt.f32	s15, s13
 802d3d4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802d3d8:	4770      	bx	lr
 802d3da:	eddf 7a19 	vldr	s15, [pc, #100]	; 802d440 <scalbnf+0xc0>
 802d3de:	ee27 0a80 	vmul.f32	s0, s15, s0
 802d3e2:	4770      	bx	lr
 802d3e4:	0dd2      	lsrs	r2, r2, #23
 802d3e6:	e7e5      	b.n	802d3b4 <scalbnf+0x34>
 802d3e8:	4410      	add	r0, r2
 802d3ea:	28fe      	cmp	r0, #254	; 0xfe
 802d3ec:	dce6      	bgt.n	802d3bc <scalbnf+0x3c>
 802d3ee:	2800      	cmp	r0, #0
 802d3f0:	dd06      	ble.n	802d400 <scalbnf+0x80>
 802d3f2:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d3f6:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d3fa:	ee00 3a10 	vmov	s0, r3
 802d3fe:	4770      	bx	lr
 802d400:	f110 0f16 	cmn.w	r0, #22
 802d404:	da09      	bge.n	802d41a <scalbnf+0x9a>
 802d406:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d440 <scalbnf+0xc0>
 802d40a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802d444 <scalbnf+0xc4>
 802d40e:	ee10 3a10 	vmov	r3, s0
 802d412:	eeb0 7a67 	vmov.f32	s14, s15
 802d416:	2b00      	cmp	r3, #0
 802d418:	e7d9      	b.n	802d3ce <scalbnf+0x4e>
 802d41a:	3019      	adds	r0, #25
 802d41c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802d420:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802d424:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802d448 <scalbnf+0xc8>
 802d428:	ee07 3a90 	vmov	s15, r3
 802d42c:	e7d7      	b.n	802d3de <scalbnf+0x5e>
 802d42e:	bf00      	nop
 802d430:	ffff3cb0 	.word	0xffff3cb0
 802d434:	4c000000 	.word	0x4c000000
 802d438:	7149f2ca 	.word	0x7149f2ca
 802d43c:	f149f2ca 	.word	0xf149f2ca
 802d440:	0da24260 	.word	0x0da24260
 802d444:	8da24260 	.word	0x8da24260
 802d448:	33000000 	.word	0x33000000

0802d44c <__kernel_rem_pio2f>:
 802d44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d450:	ed2d 8b04 	vpush	{d8-d9}
 802d454:	b0d9      	sub	sp, #356	; 0x164
 802d456:	4688      	mov	r8, r1
 802d458:	9002      	str	r0, [sp, #8]
 802d45a:	49b8      	ldr	r1, [pc, #736]	; (802d73c <__kernel_rem_pio2f+0x2f0>)
 802d45c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802d45e:	9301      	str	r3, [sp, #4]
 802d460:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802d464:	9901      	ldr	r1, [sp, #4]
 802d466:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802d468:	f101 3bff 	add.w	fp, r1, #4294967295
 802d46c:	1d11      	adds	r1, r2, #4
 802d46e:	db25      	blt.n	802d4bc <__kernel_rem_pio2f+0x70>
 802d470:	1ed0      	subs	r0, r2, #3
 802d472:	bf48      	it	mi
 802d474:	1d10      	addmi	r0, r2, #4
 802d476:	10c0      	asrs	r0, r0, #3
 802d478:	1c45      	adds	r5, r0, #1
 802d47a:	00e9      	lsls	r1, r5, #3
 802d47c:	eba0 070b 	sub.w	r7, r0, fp
 802d480:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d484:	9103      	str	r1, [sp, #12]
 802d486:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802d48a:	eb0a 0c0b 	add.w	ip, sl, fp
 802d48e:	ae1c      	add	r6, sp, #112	; 0x70
 802d490:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802d494:	2400      	movs	r4, #0
 802d496:	4564      	cmp	r4, ip
 802d498:	dd12      	ble.n	802d4c0 <__kernel_rem_pio2f+0x74>
 802d49a:	9901      	ldr	r1, [sp, #4]
 802d49c:	ac1c      	add	r4, sp, #112	; 0x70
 802d49e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802d4a2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802d4a6:	f04f 0c00 	mov.w	ip, #0
 802d4aa:	45d4      	cmp	ip, sl
 802d4ac:	dc27      	bgt.n	802d4fe <__kernel_rem_pio2f+0xb2>
 802d4ae:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d4b2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d4b6:	4627      	mov	r7, r4
 802d4b8:	2600      	movs	r6, #0
 802d4ba:	e016      	b.n	802d4ea <__kernel_rem_pio2f+0x9e>
 802d4bc:	2000      	movs	r0, #0
 802d4be:	e7db      	b.n	802d478 <__kernel_rem_pio2f+0x2c>
 802d4c0:	42e7      	cmn	r7, r4
 802d4c2:	bf5d      	ittte	pl
 802d4c4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802d4c8:	ee07 1a90 	vmovpl	s15, r1
 802d4cc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802d4d0:	eef0 7a47 	vmovmi.f32	s15, s14
 802d4d4:	ece6 7a01 	vstmia	r6!, {s15}
 802d4d8:	3401      	adds	r4, #1
 802d4da:	e7dc      	b.n	802d496 <__kernel_rem_pio2f+0x4a>
 802d4dc:	ecfe 6a01 	vldmia	lr!, {s13}
 802d4e0:	ed97 7a00 	vldr	s14, [r7]
 802d4e4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d4e8:	3601      	adds	r6, #1
 802d4ea:	455e      	cmp	r6, fp
 802d4ec:	f1a7 0704 	sub.w	r7, r7, #4
 802d4f0:	ddf4      	ble.n	802d4dc <__kernel_rem_pio2f+0x90>
 802d4f2:	ece9 7a01 	vstmia	r9!, {s15}
 802d4f6:	f10c 0c01 	add.w	ip, ip, #1
 802d4fa:	3404      	adds	r4, #4
 802d4fc:	e7d5      	b.n	802d4aa <__kernel_rem_pio2f+0x5e>
 802d4fe:	a908      	add	r1, sp, #32
 802d500:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802d504:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802d508:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802d748 <__kernel_rem_pio2f+0x2fc>
 802d50c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802d744 <__kernel_rem_pio2f+0x2f8>
 802d510:	9105      	str	r1, [sp, #20]
 802d512:	9304      	str	r3, [sp, #16]
 802d514:	4656      	mov	r6, sl
 802d516:	00b3      	lsls	r3, r6, #2
 802d518:	9306      	str	r3, [sp, #24]
 802d51a:	ab58      	add	r3, sp, #352	; 0x160
 802d51c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d520:	ac08      	add	r4, sp, #32
 802d522:	ab44      	add	r3, sp, #272	; 0x110
 802d524:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802d528:	46a4      	mov	ip, r4
 802d52a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802d52e:	4637      	mov	r7, r6
 802d530:	2f00      	cmp	r7, #0
 802d532:	f1a0 0004 	sub.w	r0, r0, #4
 802d536:	dc4a      	bgt.n	802d5ce <__kernel_rem_pio2f+0x182>
 802d538:	4628      	mov	r0, r5
 802d53a:	9207      	str	r2, [sp, #28]
 802d53c:	f7ff ff20 	bl	802d380 <scalbnf>
 802d540:	eeb0 8a40 	vmov.f32	s16, s0
 802d544:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802d548:	ee28 0a00 	vmul.f32	s0, s16, s0
 802d54c:	f7ff fd04 	bl	802cf58 <floorf>
 802d550:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802d554:	eea0 8a67 	vfms.f32	s16, s0, s15
 802d558:	2d00      	cmp	r5, #0
 802d55a:	9a07      	ldr	r2, [sp, #28]
 802d55c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802d560:	ee17 9a90 	vmov	r9, s15
 802d564:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d568:	ee38 8a67 	vsub.f32	s16, s16, s15
 802d56c:	dd41      	ble.n	802d5f2 <__kernel_rem_pio2f+0x1a6>
 802d56e:	f106 3cff 	add.w	ip, r6, #4294967295
 802d572:	ab08      	add	r3, sp, #32
 802d574:	f1c5 0e08 	rsb	lr, r5, #8
 802d578:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802d57c:	fa47 f00e 	asr.w	r0, r7, lr
 802d580:	4481      	add	r9, r0
 802d582:	fa00 f00e 	lsl.w	r0, r0, lr
 802d586:	1a3f      	subs	r7, r7, r0
 802d588:	f1c5 0007 	rsb	r0, r5, #7
 802d58c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802d590:	4107      	asrs	r7, r0
 802d592:	2f00      	cmp	r7, #0
 802d594:	dd3c      	ble.n	802d610 <__kernel_rem_pio2f+0x1c4>
 802d596:	f04f 0e00 	mov.w	lr, #0
 802d59a:	f109 0901 	add.w	r9, r9, #1
 802d59e:	4671      	mov	r1, lr
 802d5a0:	4576      	cmp	r6, lr
 802d5a2:	dc67      	bgt.n	802d674 <__kernel_rem_pio2f+0x228>
 802d5a4:	2d00      	cmp	r5, #0
 802d5a6:	dd03      	ble.n	802d5b0 <__kernel_rem_pio2f+0x164>
 802d5a8:	2d01      	cmp	r5, #1
 802d5aa:	d074      	beq.n	802d696 <__kernel_rem_pio2f+0x24a>
 802d5ac:	2d02      	cmp	r5, #2
 802d5ae:	d07b      	beq.n	802d6a8 <__kernel_rem_pio2f+0x25c>
 802d5b0:	2f02      	cmp	r7, #2
 802d5b2:	d12d      	bne.n	802d610 <__kernel_rem_pio2f+0x1c4>
 802d5b4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d5b8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802d5bc:	b341      	cbz	r1, 802d610 <__kernel_rem_pio2f+0x1c4>
 802d5be:	4628      	mov	r0, r5
 802d5c0:	9207      	str	r2, [sp, #28]
 802d5c2:	f7ff fedd 	bl	802d380 <scalbnf>
 802d5c6:	9a07      	ldr	r2, [sp, #28]
 802d5c8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802d5cc:	e020      	b.n	802d610 <__kernel_rem_pio2f+0x1c4>
 802d5ce:	ee60 7a28 	vmul.f32	s15, s0, s17
 802d5d2:	3f01      	subs	r7, #1
 802d5d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d5d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d5dc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802d5e0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d5e4:	ecac 0a01 	vstmia	ip!, {s0}
 802d5e8:	ed90 0a00 	vldr	s0, [r0]
 802d5ec:	ee37 0a80 	vadd.f32	s0, s15, s0
 802d5f0:	e79e      	b.n	802d530 <__kernel_rem_pio2f+0xe4>
 802d5f2:	d105      	bne.n	802d600 <__kernel_rem_pio2f+0x1b4>
 802d5f4:	1e70      	subs	r0, r6, #1
 802d5f6:	ab08      	add	r3, sp, #32
 802d5f8:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802d5fc:	11ff      	asrs	r7, r7, #7
 802d5fe:	e7c8      	b.n	802d592 <__kernel_rem_pio2f+0x146>
 802d600:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802d604:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802d608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d60c:	da30      	bge.n	802d670 <__kernel_rem_pio2f+0x224>
 802d60e:	2700      	movs	r7, #0
 802d610:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802d614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d618:	f040 809a 	bne.w	802d750 <__kernel_rem_pio2f+0x304>
 802d61c:	1e74      	subs	r4, r6, #1
 802d61e:	46a4      	mov	ip, r4
 802d620:	2100      	movs	r1, #0
 802d622:	45d4      	cmp	ip, sl
 802d624:	da47      	bge.n	802d6b6 <__kernel_rem_pio2f+0x26a>
 802d626:	2900      	cmp	r1, #0
 802d628:	d063      	beq.n	802d6f2 <__kernel_rem_pio2f+0x2a6>
 802d62a:	ab08      	add	r3, sp, #32
 802d62c:	3d08      	subs	r5, #8
 802d62e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802d632:	2b00      	cmp	r3, #0
 802d634:	d07f      	beq.n	802d736 <__kernel_rem_pio2f+0x2ea>
 802d636:	4628      	mov	r0, r5
 802d638:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802d63c:	f7ff fea0 	bl	802d380 <scalbnf>
 802d640:	1c63      	adds	r3, r4, #1
 802d642:	aa44      	add	r2, sp, #272	; 0x110
 802d644:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802d748 <__kernel_rem_pio2f+0x2fc>
 802d648:	0099      	lsls	r1, r3, #2
 802d64a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802d64e:	4623      	mov	r3, r4
 802d650:	2b00      	cmp	r3, #0
 802d652:	f280 80ad 	bge.w	802d7b0 <__kernel_rem_pio2f+0x364>
 802d656:	4623      	mov	r3, r4
 802d658:	2b00      	cmp	r3, #0
 802d65a:	f2c0 80cb 	blt.w	802d7f4 <__kernel_rem_pio2f+0x3a8>
 802d65e:	aa44      	add	r2, sp, #272	; 0x110
 802d660:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802d664:	4e36      	ldr	r6, [pc, #216]	; (802d740 <__kernel_rem_pio2f+0x2f4>)
 802d666:	eddf 7a39 	vldr	s15, [pc, #228]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d66a:	2000      	movs	r0, #0
 802d66c:	1ae2      	subs	r2, r4, r3
 802d66e:	e0b6      	b.n	802d7de <__kernel_rem_pio2f+0x392>
 802d670:	2702      	movs	r7, #2
 802d672:	e790      	b.n	802d596 <__kernel_rem_pio2f+0x14a>
 802d674:	6820      	ldr	r0, [r4, #0]
 802d676:	b949      	cbnz	r1, 802d68c <__kernel_rem_pio2f+0x240>
 802d678:	b118      	cbz	r0, 802d682 <__kernel_rem_pio2f+0x236>
 802d67a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802d67e:	6020      	str	r0, [r4, #0]
 802d680:	2001      	movs	r0, #1
 802d682:	f10e 0e01 	add.w	lr, lr, #1
 802d686:	3404      	adds	r4, #4
 802d688:	4601      	mov	r1, r0
 802d68a:	e789      	b.n	802d5a0 <__kernel_rem_pio2f+0x154>
 802d68c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802d690:	6020      	str	r0, [r4, #0]
 802d692:	4608      	mov	r0, r1
 802d694:	e7f5      	b.n	802d682 <__kernel_rem_pio2f+0x236>
 802d696:	1e74      	subs	r4, r6, #1
 802d698:	ab08      	add	r3, sp, #32
 802d69a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d69e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802d6a2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802d6a6:	e783      	b.n	802d5b0 <__kernel_rem_pio2f+0x164>
 802d6a8:	1e74      	subs	r4, r6, #1
 802d6aa:	ab08      	add	r3, sp, #32
 802d6ac:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802d6b0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802d6b4:	e7f5      	b.n	802d6a2 <__kernel_rem_pio2f+0x256>
 802d6b6:	ab08      	add	r3, sp, #32
 802d6b8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802d6bc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802d6c0:	4301      	orrs	r1, r0
 802d6c2:	e7ae      	b.n	802d622 <__kernel_rem_pio2f+0x1d6>
 802d6c4:	3001      	adds	r0, #1
 802d6c6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802d6ca:	2f00      	cmp	r7, #0
 802d6cc:	d0fa      	beq.n	802d6c4 <__kernel_rem_pio2f+0x278>
 802d6ce:	9b06      	ldr	r3, [sp, #24]
 802d6d0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802d6d4:	eb0d 0403 	add.w	r4, sp, r3
 802d6d8:	9b01      	ldr	r3, [sp, #4]
 802d6da:	18f7      	adds	r7, r6, r3
 802d6dc:	ab1c      	add	r3, sp, #112	; 0x70
 802d6de:	f106 0c01 	add.w	ip, r6, #1
 802d6e2:	3c4c      	subs	r4, #76	; 0x4c
 802d6e4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802d6e8:	4430      	add	r0, r6
 802d6ea:	4560      	cmp	r0, ip
 802d6ec:	da04      	bge.n	802d6f8 <__kernel_rem_pio2f+0x2ac>
 802d6ee:	4606      	mov	r6, r0
 802d6f0:	e711      	b.n	802d516 <__kernel_rem_pio2f+0xca>
 802d6f2:	9c05      	ldr	r4, [sp, #20]
 802d6f4:	2001      	movs	r0, #1
 802d6f6:	e7e6      	b.n	802d6c6 <__kernel_rem_pio2f+0x27a>
 802d6f8:	9b04      	ldr	r3, [sp, #16]
 802d6fa:	f8dd e008 	ldr.w	lr, [sp, #8]
 802d6fe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802d702:	9306      	str	r3, [sp, #24]
 802d704:	ee07 3a90 	vmov	s15, r3
 802d708:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d70c:	2600      	movs	r6, #0
 802d70e:	ece7 7a01 	vstmia	r7!, {s15}
 802d712:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d716:	46b9      	mov	r9, r7
 802d718:	455e      	cmp	r6, fp
 802d71a:	dd04      	ble.n	802d726 <__kernel_rem_pio2f+0x2da>
 802d71c:	ece4 7a01 	vstmia	r4!, {s15}
 802d720:	f10c 0c01 	add.w	ip, ip, #1
 802d724:	e7e1      	b.n	802d6ea <__kernel_rem_pio2f+0x29e>
 802d726:	ecfe 6a01 	vldmia	lr!, {s13}
 802d72a:	ed39 7a01 	vldmdb	r9!, {s14}
 802d72e:	3601      	adds	r6, #1
 802d730:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d734:	e7f0      	b.n	802d718 <__kernel_rem_pio2f+0x2cc>
 802d736:	3c01      	subs	r4, #1
 802d738:	e777      	b.n	802d62a <__kernel_rem_pio2f+0x1de>
 802d73a:	bf00      	nop
 802d73c:	08045bc0 	.word	0x08045bc0
 802d740:	08045b94 	.word	0x08045b94
 802d744:	43800000 	.word	0x43800000
 802d748:	3b800000 	.word	0x3b800000
 802d74c:	00000000 	.word	0x00000000
 802d750:	9b03      	ldr	r3, [sp, #12]
 802d752:	eeb0 0a48 	vmov.f32	s0, s16
 802d756:	1a98      	subs	r0, r3, r2
 802d758:	f7ff fe12 	bl	802d380 <scalbnf>
 802d75c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802d744 <__kernel_rem_pio2f+0x2f8>
 802d760:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802d764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802d768:	db19      	blt.n	802d79e <__kernel_rem_pio2f+0x352>
 802d76a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802d748 <__kernel_rem_pio2f+0x2fc>
 802d76e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802d772:	aa08      	add	r2, sp, #32
 802d774:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d778:	1c74      	adds	r4, r6, #1
 802d77a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d77e:	3508      	adds	r5, #8
 802d780:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802d784:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802d788:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d78c:	ee10 3a10 	vmov	r3, s0
 802d790:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d794:	ee17 3a90 	vmov	r3, s15
 802d798:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802d79c:	e74b      	b.n	802d636 <__kernel_rem_pio2f+0x1ea>
 802d79e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802d7a2:	aa08      	add	r2, sp, #32
 802d7a4:	ee10 3a10 	vmov	r3, s0
 802d7a8:	4634      	mov	r4, r6
 802d7aa:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802d7ae:	e742      	b.n	802d636 <__kernel_rem_pio2f+0x1ea>
 802d7b0:	a808      	add	r0, sp, #32
 802d7b2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802d7b6:	9001      	str	r0, [sp, #4]
 802d7b8:	ee07 0a90 	vmov	s15, r0
 802d7bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802d7c0:	3b01      	subs	r3, #1
 802d7c2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802d7c6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802d7ca:	ed62 7a01 	vstmdb	r2!, {s15}
 802d7ce:	e73f      	b.n	802d650 <__kernel_rem_pio2f+0x204>
 802d7d0:	ecf6 6a01 	vldmia	r6!, {s13}
 802d7d4:	ecb5 7a01 	vldmia	r5!, {s14}
 802d7d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802d7dc:	3001      	adds	r0, #1
 802d7de:	4550      	cmp	r0, sl
 802d7e0:	dc01      	bgt.n	802d7e6 <__kernel_rem_pio2f+0x39a>
 802d7e2:	4290      	cmp	r0, r2
 802d7e4:	ddf4      	ble.n	802d7d0 <__kernel_rem_pio2f+0x384>
 802d7e6:	a858      	add	r0, sp, #352	; 0x160
 802d7e8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802d7ec:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802d7f0:	3b01      	subs	r3, #1
 802d7f2:	e731      	b.n	802d658 <__kernel_rem_pio2f+0x20c>
 802d7f4:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d7f6:	2b02      	cmp	r3, #2
 802d7f8:	dc09      	bgt.n	802d80e <__kernel_rem_pio2f+0x3c2>
 802d7fa:	2b00      	cmp	r3, #0
 802d7fc:	dc2b      	bgt.n	802d856 <__kernel_rem_pio2f+0x40a>
 802d7fe:	d044      	beq.n	802d88a <__kernel_rem_pio2f+0x43e>
 802d800:	f009 0007 	and.w	r0, r9, #7
 802d804:	b059      	add	sp, #356	; 0x164
 802d806:	ecbd 8b04 	vpop	{d8-d9}
 802d80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d80e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802d810:	2b03      	cmp	r3, #3
 802d812:	d1f5      	bne.n	802d800 <__kernel_rem_pio2f+0x3b4>
 802d814:	aa30      	add	r2, sp, #192	; 0xc0
 802d816:	1f0b      	subs	r3, r1, #4
 802d818:	4413      	add	r3, r2
 802d81a:	461a      	mov	r2, r3
 802d81c:	4620      	mov	r0, r4
 802d81e:	2800      	cmp	r0, #0
 802d820:	f1a2 0204 	sub.w	r2, r2, #4
 802d824:	dc52      	bgt.n	802d8cc <__kernel_rem_pio2f+0x480>
 802d826:	4622      	mov	r2, r4
 802d828:	2a01      	cmp	r2, #1
 802d82a:	f1a3 0304 	sub.w	r3, r3, #4
 802d82e:	dc5d      	bgt.n	802d8ec <__kernel_rem_pio2f+0x4a0>
 802d830:	ab30      	add	r3, sp, #192	; 0xc0
 802d832:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d836:	440b      	add	r3, r1
 802d838:	2c01      	cmp	r4, #1
 802d83a:	dc67      	bgt.n	802d90c <__kernel_rem_pio2f+0x4c0>
 802d83c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802d840:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802d844:	2f00      	cmp	r7, #0
 802d846:	d167      	bne.n	802d918 <__kernel_rem_pio2f+0x4cc>
 802d848:	edc8 6a00 	vstr	s13, [r8]
 802d84c:	ed88 7a01 	vstr	s14, [r8, #4]
 802d850:	edc8 7a02 	vstr	s15, [r8, #8]
 802d854:	e7d4      	b.n	802d800 <__kernel_rem_pio2f+0x3b4>
 802d856:	ab30      	add	r3, sp, #192	; 0xc0
 802d858:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d85c:	440b      	add	r3, r1
 802d85e:	4622      	mov	r2, r4
 802d860:	2a00      	cmp	r2, #0
 802d862:	da24      	bge.n	802d8ae <__kernel_rem_pio2f+0x462>
 802d864:	b34f      	cbz	r7, 802d8ba <__kernel_rem_pio2f+0x46e>
 802d866:	eef1 7a47 	vneg.f32	s15, s14
 802d86a:	edc8 7a00 	vstr	s15, [r8]
 802d86e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802d872:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d876:	aa31      	add	r2, sp, #196	; 0xc4
 802d878:	2301      	movs	r3, #1
 802d87a:	429c      	cmp	r4, r3
 802d87c:	da20      	bge.n	802d8c0 <__kernel_rem_pio2f+0x474>
 802d87e:	b10f      	cbz	r7, 802d884 <__kernel_rem_pio2f+0x438>
 802d880:	eef1 7a67 	vneg.f32	s15, s15
 802d884:	edc8 7a01 	vstr	s15, [r8, #4]
 802d888:	e7ba      	b.n	802d800 <__kernel_rem_pio2f+0x3b4>
 802d88a:	ab30      	add	r3, sp, #192	; 0xc0
 802d88c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802d74c <__kernel_rem_pio2f+0x300>
 802d890:	440b      	add	r3, r1
 802d892:	2c00      	cmp	r4, #0
 802d894:	da05      	bge.n	802d8a2 <__kernel_rem_pio2f+0x456>
 802d896:	b10f      	cbz	r7, 802d89c <__kernel_rem_pio2f+0x450>
 802d898:	eef1 7a67 	vneg.f32	s15, s15
 802d89c:	edc8 7a00 	vstr	s15, [r8]
 802d8a0:	e7ae      	b.n	802d800 <__kernel_rem_pio2f+0x3b4>
 802d8a2:	ed33 7a01 	vldmdb	r3!, {s14}
 802d8a6:	3c01      	subs	r4, #1
 802d8a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d8ac:	e7f1      	b.n	802d892 <__kernel_rem_pio2f+0x446>
 802d8ae:	ed73 7a01 	vldmdb	r3!, {s15}
 802d8b2:	3a01      	subs	r2, #1
 802d8b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802d8b8:	e7d2      	b.n	802d860 <__kernel_rem_pio2f+0x414>
 802d8ba:	eef0 7a47 	vmov.f32	s15, s14
 802d8be:	e7d4      	b.n	802d86a <__kernel_rem_pio2f+0x41e>
 802d8c0:	ecb2 7a01 	vldmia	r2!, {s14}
 802d8c4:	3301      	adds	r3, #1
 802d8c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d8ca:	e7d6      	b.n	802d87a <__kernel_rem_pio2f+0x42e>
 802d8cc:	edd2 7a00 	vldr	s15, [r2]
 802d8d0:	edd2 6a01 	vldr	s13, [r2, #4]
 802d8d4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d8d8:	3801      	subs	r0, #1
 802d8da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d8de:	ed82 7a00 	vstr	s14, [r2]
 802d8e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d8e6:	edc2 7a01 	vstr	s15, [r2, #4]
 802d8ea:	e798      	b.n	802d81e <__kernel_rem_pio2f+0x3d2>
 802d8ec:	edd3 7a00 	vldr	s15, [r3]
 802d8f0:	edd3 6a01 	vldr	s13, [r3, #4]
 802d8f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802d8f8:	3a01      	subs	r2, #1
 802d8fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802d8fe:	ed83 7a00 	vstr	s14, [r3]
 802d902:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802d906:	edc3 7a01 	vstr	s15, [r3, #4]
 802d90a:	e78d      	b.n	802d828 <__kernel_rem_pio2f+0x3dc>
 802d90c:	ed33 7a01 	vldmdb	r3!, {s14}
 802d910:	3c01      	subs	r4, #1
 802d912:	ee77 7a87 	vadd.f32	s15, s15, s14
 802d916:	e78f      	b.n	802d838 <__kernel_rem_pio2f+0x3ec>
 802d918:	eef1 6a66 	vneg.f32	s13, s13
 802d91c:	eeb1 7a47 	vneg.f32	s14, s14
 802d920:	edc8 6a00 	vstr	s13, [r8]
 802d924:	ed88 7a01 	vstr	s14, [r8, #4]
 802d928:	eef1 7a67 	vneg.f32	s15, s15
 802d92c:	e790      	b.n	802d850 <__kernel_rem_pio2f+0x404>
 802d92e:	bf00      	nop

0802d930 <abort>:
 802d930:	b508      	push	{r3, lr}
 802d932:	2006      	movs	r0, #6
 802d934:	f000 fa3a 	bl	802ddac <raise>
 802d938:	2001      	movs	r0, #1
 802d93a:	f7d4 ffad 	bl	8002898 <_exit>
	...

0802d940 <__assert_func>:
 802d940:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802d942:	4614      	mov	r4, r2
 802d944:	461a      	mov	r2, r3
 802d946:	4b09      	ldr	r3, [pc, #36]	; (802d96c <__assert_func+0x2c>)
 802d948:	681b      	ldr	r3, [r3, #0]
 802d94a:	4605      	mov	r5, r0
 802d94c:	68d8      	ldr	r0, [r3, #12]
 802d94e:	b14c      	cbz	r4, 802d964 <__assert_func+0x24>
 802d950:	4b07      	ldr	r3, [pc, #28]	; (802d970 <__assert_func+0x30>)
 802d952:	9100      	str	r1, [sp, #0]
 802d954:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802d958:	4906      	ldr	r1, [pc, #24]	; (802d974 <__assert_func+0x34>)
 802d95a:	462b      	mov	r3, r5
 802d95c:	f000 f982 	bl	802dc64 <fiprintf>
 802d960:	f7ff ffe6 	bl	802d930 <abort>
 802d964:	4b04      	ldr	r3, [pc, #16]	; (802d978 <__assert_func+0x38>)
 802d966:	461c      	mov	r4, r3
 802d968:	e7f3      	b.n	802d952 <__assert_func+0x12>
 802d96a:	bf00      	nop
 802d96c:	20000164 	.word	0x20000164
 802d970:	08045bcc 	.word	0x08045bcc
 802d974:	08045bd9 	.word	0x08045bd9
 802d978:	08045c07 	.word	0x08045c07

0802d97c <atexit>:
 802d97c:	2300      	movs	r3, #0
 802d97e:	4601      	mov	r1, r0
 802d980:	461a      	mov	r2, r3
 802d982:	4618      	mov	r0, r3
 802d984:	f000 bb16 	b.w	802dfb4 <__register_exitproc>

0802d988 <malloc>:
 802d988:	4b02      	ldr	r3, [pc, #8]	; (802d994 <malloc+0xc>)
 802d98a:	4601      	mov	r1, r0
 802d98c:	6818      	ldr	r0, [r3, #0]
 802d98e:	f000 b82b 	b.w	802d9e8 <_malloc_r>
 802d992:	bf00      	nop
 802d994:	20000164 	.word	0x20000164

0802d998 <free>:
 802d998:	4b02      	ldr	r3, [pc, #8]	; (802d9a4 <free+0xc>)
 802d99a:	4601      	mov	r1, r0
 802d99c:	6818      	ldr	r0, [r3, #0]
 802d99e:	f000 bb67 	b.w	802e070 <_free_r>
 802d9a2:	bf00      	nop
 802d9a4:	20000164 	.word	0x20000164

0802d9a8 <sbrk_aligned>:
 802d9a8:	b570      	push	{r4, r5, r6, lr}
 802d9aa:	4e0e      	ldr	r6, [pc, #56]	; (802d9e4 <sbrk_aligned+0x3c>)
 802d9ac:	460c      	mov	r4, r1
 802d9ae:	6831      	ldr	r1, [r6, #0]
 802d9b0:	4605      	mov	r5, r0
 802d9b2:	b911      	cbnz	r1, 802d9ba <sbrk_aligned+0x12>
 802d9b4:	f000 faa0 	bl	802def8 <_sbrk_r>
 802d9b8:	6030      	str	r0, [r6, #0]
 802d9ba:	4621      	mov	r1, r4
 802d9bc:	4628      	mov	r0, r5
 802d9be:	f000 fa9b 	bl	802def8 <_sbrk_r>
 802d9c2:	1c43      	adds	r3, r0, #1
 802d9c4:	d00a      	beq.n	802d9dc <sbrk_aligned+0x34>
 802d9c6:	1cc4      	adds	r4, r0, #3
 802d9c8:	f024 0403 	bic.w	r4, r4, #3
 802d9cc:	42a0      	cmp	r0, r4
 802d9ce:	d007      	beq.n	802d9e0 <sbrk_aligned+0x38>
 802d9d0:	1a21      	subs	r1, r4, r0
 802d9d2:	4628      	mov	r0, r5
 802d9d4:	f000 fa90 	bl	802def8 <_sbrk_r>
 802d9d8:	3001      	adds	r0, #1
 802d9da:	d101      	bne.n	802d9e0 <sbrk_aligned+0x38>
 802d9dc:	f04f 34ff 	mov.w	r4, #4294967295
 802d9e0:	4620      	mov	r0, r4
 802d9e2:	bd70      	pop	{r4, r5, r6, pc}
 802d9e4:	20014194 	.word	0x20014194

0802d9e8 <_malloc_r>:
 802d9e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802d9ec:	1ccd      	adds	r5, r1, #3
 802d9ee:	f025 0503 	bic.w	r5, r5, #3
 802d9f2:	3508      	adds	r5, #8
 802d9f4:	2d0c      	cmp	r5, #12
 802d9f6:	bf38      	it	cc
 802d9f8:	250c      	movcc	r5, #12
 802d9fa:	2d00      	cmp	r5, #0
 802d9fc:	4607      	mov	r7, r0
 802d9fe:	db01      	blt.n	802da04 <_malloc_r+0x1c>
 802da00:	42a9      	cmp	r1, r5
 802da02:	d905      	bls.n	802da10 <_malloc_r+0x28>
 802da04:	230c      	movs	r3, #12
 802da06:	603b      	str	r3, [r7, #0]
 802da08:	2600      	movs	r6, #0
 802da0a:	4630      	mov	r0, r6
 802da0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802da10:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802dae4 <_malloc_r+0xfc>
 802da14:	f000 f868 	bl	802dae8 <__malloc_lock>
 802da18:	f8d8 3000 	ldr.w	r3, [r8]
 802da1c:	461c      	mov	r4, r3
 802da1e:	bb5c      	cbnz	r4, 802da78 <_malloc_r+0x90>
 802da20:	4629      	mov	r1, r5
 802da22:	4638      	mov	r0, r7
 802da24:	f7ff ffc0 	bl	802d9a8 <sbrk_aligned>
 802da28:	1c43      	adds	r3, r0, #1
 802da2a:	4604      	mov	r4, r0
 802da2c:	d155      	bne.n	802dada <_malloc_r+0xf2>
 802da2e:	f8d8 4000 	ldr.w	r4, [r8]
 802da32:	4626      	mov	r6, r4
 802da34:	2e00      	cmp	r6, #0
 802da36:	d145      	bne.n	802dac4 <_malloc_r+0xdc>
 802da38:	2c00      	cmp	r4, #0
 802da3a:	d048      	beq.n	802dace <_malloc_r+0xe6>
 802da3c:	6823      	ldr	r3, [r4, #0]
 802da3e:	4631      	mov	r1, r6
 802da40:	4638      	mov	r0, r7
 802da42:	eb04 0903 	add.w	r9, r4, r3
 802da46:	f000 fa57 	bl	802def8 <_sbrk_r>
 802da4a:	4581      	cmp	r9, r0
 802da4c:	d13f      	bne.n	802dace <_malloc_r+0xe6>
 802da4e:	6821      	ldr	r1, [r4, #0]
 802da50:	1a6d      	subs	r5, r5, r1
 802da52:	4629      	mov	r1, r5
 802da54:	4638      	mov	r0, r7
 802da56:	f7ff ffa7 	bl	802d9a8 <sbrk_aligned>
 802da5a:	3001      	adds	r0, #1
 802da5c:	d037      	beq.n	802dace <_malloc_r+0xe6>
 802da5e:	6823      	ldr	r3, [r4, #0]
 802da60:	442b      	add	r3, r5
 802da62:	6023      	str	r3, [r4, #0]
 802da64:	f8d8 3000 	ldr.w	r3, [r8]
 802da68:	2b00      	cmp	r3, #0
 802da6a:	d038      	beq.n	802dade <_malloc_r+0xf6>
 802da6c:	685a      	ldr	r2, [r3, #4]
 802da6e:	42a2      	cmp	r2, r4
 802da70:	d12b      	bne.n	802daca <_malloc_r+0xe2>
 802da72:	2200      	movs	r2, #0
 802da74:	605a      	str	r2, [r3, #4]
 802da76:	e00f      	b.n	802da98 <_malloc_r+0xb0>
 802da78:	6822      	ldr	r2, [r4, #0]
 802da7a:	1b52      	subs	r2, r2, r5
 802da7c:	d41f      	bmi.n	802dabe <_malloc_r+0xd6>
 802da7e:	2a0b      	cmp	r2, #11
 802da80:	d917      	bls.n	802dab2 <_malloc_r+0xca>
 802da82:	1961      	adds	r1, r4, r5
 802da84:	42a3      	cmp	r3, r4
 802da86:	6025      	str	r5, [r4, #0]
 802da88:	bf18      	it	ne
 802da8a:	6059      	strne	r1, [r3, #4]
 802da8c:	6863      	ldr	r3, [r4, #4]
 802da8e:	bf08      	it	eq
 802da90:	f8c8 1000 	streq.w	r1, [r8]
 802da94:	5162      	str	r2, [r4, r5]
 802da96:	604b      	str	r3, [r1, #4]
 802da98:	4638      	mov	r0, r7
 802da9a:	f104 060b 	add.w	r6, r4, #11
 802da9e:	f000 f829 	bl	802daf4 <__malloc_unlock>
 802daa2:	f026 0607 	bic.w	r6, r6, #7
 802daa6:	1d23      	adds	r3, r4, #4
 802daa8:	1af2      	subs	r2, r6, r3
 802daaa:	d0ae      	beq.n	802da0a <_malloc_r+0x22>
 802daac:	1b9b      	subs	r3, r3, r6
 802daae:	50a3      	str	r3, [r4, r2]
 802dab0:	e7ab      	b.n	802da0a <_malloc_r+0x22>
 802dab2:	42a3      	cmp	r3, r4
 802dab4:	6862      	ldr	r2, [r4, #4]
 802dab6:	d1dd      	bne.n	802da74 <_malloc_r+0x8c>
 802dab8:	f8c8 2000 	str.w	r2, [r8]
 802dabc:	e7ec      	b.n	802da98 <_malloc_r+0xb0>
 802dabe:	4623      	mov	r3, r4
 802dac0:	6864      	ldr	r4, [r4, #4]
 802dac2:	e7ac      	b.n	802da1e <_malloc_r+0x36>
 802dac4:	4634      	mov	r4, r6
 802dac6:	6876      	ldr	r6, [r6, #4]
 802dac8:	e7b4      	b.n	802da34 <_malloc_r+0x4c>
 802daca:	4613      	mov	r3, r2
 802dacc:	e7cc      	b.n	802da68 <_malloc_r+0x80>
 802dace:	230c      	movs	r3, #12
 802dad0:	603b      	str	r3, [r7, #0]
 802dad2:	4638      	mov	r0, r7
 802dad4:	f000 f80e 	bl	802daf4 <__malloc_unlock>
 802dad8:	e797      	b.n	802da0a <_malloc_r+0x22>
 802dada:	6025      	str	r5, [r4, #0]
 802dadc:	e7dc      	b.n	802da98 <_malloc_r+0xb0>
 802dade:	605b      	str	r3, [r3, #4]
 802dae0:	deff      	udf	#255	; 0xff
 802dae2:	bf00      	nop
 802dae4:	20014190 	.word	0x20014190

0802dae8 <__malloc_lock>:
 802dae8:	4801      	ldr	r0, [pc, #4]	; (802daf0 <__malloc_lock+0x8>)
 802daea:	f000 ba52 	b.w	802df92 <__retarget_lock_acquire_recursive>
 802daee:	bf00      	nop
 802daf0:	200142d9 	.word	0x200142d9

0802daf4 <__malloc_unlock>:
 802daf4:	4801      	ldr	r0, [pc, #4]	; (802dafc <__malloc_unlock+0x8>)
 802daf6:	f000 ba4d 	b.w	802df94 <__retarget_lock_release_recursive>
 802dafa:	bf00      	nop
 802dafc:	200142d9 	.word	0x200142d9

0802db00 <__cxa_atexit>:
 802db00:	b510      	push	{r4, lr}
 802db02:	4c05      	ldr	r4, [pc, #20]	; (802db18 <__cxa_atexit+0x18>)
 802db04:	4613      	mov	r3, r2
 802db06:	b12c      	cbz	r4, 802db14 <__cxa_atexit+0x14>
 802db08:	460a      	mov	r2, r1
 802db0a:	4601      	mov	r1, r0
 802db0c:	2002      	movs	r0, #2
 802db0e:	f000 fa51 	bl	802dfb4 <__register_exitproc>
 802db12:	bd10      	pop	{r4, pc}
 802db14:	4620      	mov	r0, r4
 802db16:	e7fc      	b.n	802db12 <__cxa_atexit+0x12>
 802db18:	0802dfb5 	.word	0x0802dfb5

0802db1c <std>:
 802db1c:	2300      	movs	r3, #0
 802db1e:	b510      	push	{r4, lr}
 802db20:	4604      	mov	r4, r0
 802db22:	e9c0 3300 	strd	r3, r3, [r0]
 802db26:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802db2a:	6083      	str	r3, [r0, #8]
 802db2c:	8181      	strh	r1, [r0, #12]
 802db2e:	6643      	str	r3, [r0, #100]	; 0x64
 802db30:	81c2      	strh	r2, [r0, #14]
 802db32:	6183      	str	r3, [r0, #24]
 802db34:	4619      	mov	r1, r3
 802db36:	2208      	movs	r2, #8
 802db38:	305c      	adds	r0, #92	; 0x5c
 802db3a:	f000 f906 	bl	802dd4a <memset>
 802db3e:	4b0d      	ldr	r3, [pc, #52]	; (802db74 <std+0x58>)
 802db40:	6263      	str	r3, [r4, #36]	; 0x24
 802db42:	4b0d      	ldr	r3, [pc, #52]	; (802db78 <std+0x5c>)
 802db44:	62a3      	str	r3, [r4, #40]	; 0x28
 802db46:	4b0d      	ldr	r3, [pc, #52]	; (802db7c <std+0x60>)
 802db48:	62e3      	str	r3, [r4, #44]	; 0x2c
 802db4a:	4b0d      	ldr	r3, [pc, #52]	; (802db80 <std+0x64>)
 802db4c:	6323      	str	r3, [r4, #48]	; 0x30
 802db4e:	4b0d      	ldr	r3, [pc, #52]	; (802db84 <std+0x68>)
 802db50:	6224      	str	r4, [r4, #32]
 802db52:	429c      	cmp	r4, r3
 802db54:	d006      	beq.n	802db64 <std+0x48>
 802db56:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802db5a:	4294      	cmp	r4, r2
 802db5c:	d002      	beq.n	802db64 <std+0x48>
 802db5e:	33d0      	adds	r3, #208	; 0xd0
 802db60:	429c      	cmp	r4, r3
 802db62:	d105      	bne.n	802db70 <std+0x54>
 802db64:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802db68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802db6c:	f000 ba10 	b.w	802df90 <__retarget_lock_init_recursive>
 802db70:	bd10      	pop	{r4, pc}
 802db72:	bf00      	nop
 802db74:	0802dcc5 	.word	0x0802dcc5
 802db78:	0802dce7 	.word	0x0802dce7
 802db7c:	0802dd1f 	.word	0x0802dd1f
 802db80:	0802dd43 	.word	0x0802dd43
 802db84:	20014198 	.word	0x20014198

0802db88 <stdio_exit_handler>:
 802db88:	4a02      	ldr	r2, [pc, #8]	; (802db94 <stdio_exit_handler+0xc>)
 802db8a:	4903      	ldr	r1, [pc, #12]	; (802db98 <stdio_exit_handler+0x10>)
 802db8c:	4803      	ldr	r0, [pc, #12]	; (802db9c <stdio_exit_handler+0x14>)
 802db8e:	f000 b87b 	b.w	802dc88 <_fwalk_sglue>
 802db92:	bf00      	nop
 802db94:	2000010c 	.word	0x2000010c
 802db98:	0802e7bd 	.word	0x0802e7bd
 802db9c:	20000118 	.word	0x20000118

0802dba0 <cleanup_stdio>:
 802dba0:	6841      	ldr	r1, [r0, #4]
 802dba2:	4b0c      	ldr	r3, [pc, #48]	; (802dbd4 <cleanup_stdio+0x34>)
 802dba4:	4299      	cmp	r1, r3
 802dba6:	b510      	push	{r4, lr}
 802dba8:	4604      	mov	r4, r0
 802dbaa:	d001      	beq.n	802dbb0 <cleanup_stdio+0x10>
 802dbac:	f000 fe06 	bl	802e7bc <_fflush_r>
 802dbb0:	68a1      	ldr	r1, [r4, #8]
 802dbb2:	4b09      	ldr	r3, [pc, #36]	; (802dbd8 <cleanup_stdio+0x38>)
 802dbb4:	4299      	cmp	r1, r3
 802dbb6:	d002      	beq.n	802dbbe <cleanup_stdio+0x1e>
 802dbb8:	4620      	mov	r0, r4
 802dbba:	f000 fdff 	bl	802e7bc <_fflush_r>
 802dbbe:	68e1      	ldr	r1, [r4, #12]
 802dbc0:	4b06      	ldr	r3, [pc, #24]	; (802dbdc <cleanup_stdio+0x3c>)
 802dbc2:	4299      	cmp	r1, r3
 802dbc4:	d004      	beq.n	802dbd0 <cleanup_stdio+0x30>
 802dbc6:	4620      	mov	r0, r4
 802dbc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dbcc:	f000 bdf6 	b.w	802e7bc <_fflush_r>
 802dbd0:	bd10      	pop	{r4, pc}
 802dbd2:	bf00      	nop
 802dbd4:	20014198 	.word	0x20014198
 802dbd8:	20014200 	.word	0x20014200
 802dbdc:	20014268 	.word	0x20014268

0802dbe0 <global_stdio_init.part.0>:
 802dbe0:	b510      	push	{r4, lr}
 802dbe2:	4b0b      	ldr	r3, [pc, #44]	; (802dc10 <global_stdio_init.part.0+0x30>)
 802dbe4:	4c0b      	ldr	r4, [pc, #44]	; (802dc14 <global_stdio_init.part.0+0x34>)
 802dbe6:	4a0c      	ldr	r2, [pc, #48]	; (802dc18 <global_stdio_init.part.0+0x38>)
 802dbe8:	601a      	str	r2, [r3, #0]
 802dbea:	4620      	mov	r0, r4
 802dbec:	2200      	movs	r2, #0
 802dbee:	2104      	movs	r1, #4
 802dbf0:	f7ff ff94 	bl	802db1c <std>
 802dbf4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802dbf8:	2201      	movs	r2, #1
 802dbfa:	2109      	movs	r1, #9
 802dbfc:	f7ff ff8e 	bl	802db1c <std>
 802dc00:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802dc04:	2202      	movs	r2, #2
 802dc06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc0a:	2112      	movs	r1, #18
 802dc0c:	f7ff bf86 	b.w	802db1c <std>
 802dc10:	200142d0 	.word	0x200142d0
 802dc14:	20014198 	.word	0x20014198
 802dc18:	0802db89 	.word	0x0802db89

0802dc1c <__sfp_lock_acquire>:
 802dc1c:	4801      	ldr	r0, [pc, #4]	; (802dc24 <__sfp_lock_acquire+0x8>)
 802dc1e:	f000 b9b8 	b.w	802df92 <__retarget_lock_acquire_recursive>
 802dc22:	bf00      	nop
 802dc24:	200142da 	.word	0x200142da

0802dc28 <__sfp_lock_release>:
 802dc28:	4801      	ldr	r0, [pc, #4]	; (802dc30 <__sfp_lock_release+0x8>)
 802dc2a:	f000 b9b3 	b.w	802df94 <__retarget_lock_release_recursive>
 802dc2e:	bf00      	nop
 802dc30:	200142da 	.word	0x200142da

0802dc34 <__sinit>:
 802dc34:	b510      	push	{r4, lr}
 802dc36:	4604      	mov	r4, r0
 802dc38:	f7ff fff0 	bl	802dc1c <__sfp_lock_acquire>
 802dc3c:	6a23      	ldr	r3, [r4, #32]
 802dc3e:	b11b      	cbz	r3, 802dc48 <__sinit+0x14>
 802dc40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802dc44:	f7ff bff0 	b.w	802dc28 <__sfp_lock_release>
 802dc48:	4b04      	ldr	r3, [pc, #16]	; (802dc5c <__sinit+0x28>)
 802dc4a:	6223      	str	r3, [r4, #32]
 802dc4c:	4b04      	ldr	r3, [pc, #16]	; (802dc60 <__sinit+0x2c>)
 802dc4e:	681b      	ldr	r3, [r3, #0]
 802dc50:	2b00      	cmp	r3, #0
 802dc52:	d1f5      	bne.n	802dc40 <__sinit+0xc>
 802dc54:	f7ff ffc4 	bl	802dbe0 <global_stdio_init.part.0>
 802dc58:	e7f2      	b.n	802dc40 <__sinit+0xc>
 802dc5a:	bf00      	nop
 802dc5c:	0802dba1 	.word	0x0802dba1
 802dc60:	200142d0 	.word	0x200142d0

0802dc64 <fiprintf>:
 802dc64:	b40e      	push	{r1, r2, r3}
 802dc66:	b503      	push	{r0, r1, lr}
 802dc68:	4601      	mov	r1, r0
 802dc6a:	ab03      	add	r3, sp, #12
 802dc6c:	4805      	ldr	r0, [pc, #20]	; (802dc84 <fiprintf+0x20>)
 802dc6e:	f853 2b04 	ldr.w	r2, [r3], #4
 802dc72:	6800      	ldr	r0, [r0, #0]
 802dc74:	9301      	str	r3, [sp, #4]
 802dc76:	f000 fa71 	bl	802e15c <_vfiprintf_r>
 802dc7a:	b002      	add	sp, #8
 802dc7c:	f85d eb04 	ldr.w	lr, [sp], #4
 802dc80:	b003      	add	sp, #12
 802dc82:	4770      	bx	lr
 802dc84:	20000164 	.word	0x20000164

0802dc88 <_fwalk_sglue>:
 802dc88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dc8c:	4607      	mov	r7, r0
 802dc8e:	4688      	mov	r8, r1
 802dc90:	4614      	mov	r4, r2
 802dc92:	2600      	movs	r6, #0
 802dc94:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802dc98:	f1b9 0901 	subs.w	r9, r9, #1
 802dc9c:	d505      	bpl.n	802dcaa <_fwalk_sglue+0x22>
 802dc9e:	6824      	ldr	r4, [r4, #0]
 802dca0:	2c00      	cmp	r4, #0
 802dca2:	d1f7      	bne.n	802dc94 <_fwalk_sglue+0xc>
 802dca4:	4630      	mov	r0, r6
 802dca6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dcaa:	89ab      	ldrh	r3, [r5, #12]
 802dcac:	2b01      	cmp	r3, #1
 802dcae:	d907      	bls.n	802dcc0 <_fwalk_sglue+0x38>
 802dcb0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802dcb4:	3301      	adds	r3, #1
 802dcb6:	d003      	beq.n	802dcc0 <_fwalk_sglue+0x38>
 802dcb8:	4629      	mov	r1, r5
 802dcba:	4638      	mov	r0, r7
 802dcbc:	47c0      	blx	r8
 802dcbe:	4306      	orrs	r6, r0
 802dcc0:	3568      	adds	r5, #104	; 0x68
 802dcc2:	e7e9      	b.n	802dc98 <_fwalk_sglue+0x10>

0802dcc4 <__sread>:
 802dcc4:	b510      	push	{r4, lr}
 802dcc6:	460c      	mov	r4, r1
 802dcc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dccc:	f000 f8ee 	bl	802deac <_read_r>
 802dcd0:	2800      	cmp	r0, #0
 802dcd2:	bfab      	itete	ge
 802dcd4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802dcd6:	89a3      	ldrhlt	r3, [r4, #12]
 802dcd8:	181b      	addge	r3, r3, r0
 802dcda:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802dcde:	bfac      	ite	ge
 802dce0:	6563      	strge	r3, [r4, #84]	; 0x54
 802dce2:	81a3      	strhlt	r3, [r4, #12]
 802dce4:	bd10      	pop	{r4, pc}

0802dce6 <__swrite>:
 802dce6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802dcea:	461f      	mov	r7, r3
 802dcec:	898b      	ldrh	r3, [r1, #12]
 802dcee:	05db      	lsls	r3, r3, #23
 802dcf0:	4605      	mov	r5, r0
 802dcf2:	460c      	mov	r4, r1
 802dcf4:	4616      	mov	r6, r2
 802dcf6:	d505      	bpl.n	802dd04 <__swrite+0x1e>
 802dcf8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dcfc:	2302      	movs	r3, #2
 802dcfe:	2200      	movs	r2, #0
 802dd00:	f000 f8c2 	bl	802de88 <_lseek_r>
 802dd04:	89a3      	ldrh	r3, [r4, #12]
 802dd06:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802dd0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802dd0e:	81a3      	strh	r3, [r4, #12]
 802dd10:	4632      	mov	r2, r6
 802dd12:	463b      	mov	r3, r7
 802dd14:	4628      	mov	r0, r5
 802dd16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802dd1a:	f000 b8fd 	b.w	802df18 <_write_r>

0802dd1e <__sseek>:
 802dd1e:	b510      	push	{r4, lr}
 802dd20:	460c      	mov	r4, r1
 802dd22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd26:	f000 f8af 	bl	802de88 <_lseek_r>
 802dd2a:	1c43      	adds	r3, r0, #1
 802dd2c:	89a3      	ldrh	r3, [r4, #12]
 802dd2e:	bf15      	itete	ne
 802dd30:	6560      	strne	r0, [r4, #84]	; 0x54
 802dd32:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802dd36:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802dd3a:	81a3      	strheq	r3, [r4, #12]
 802dd3c:	bf18      	it	ne
 802dd3e:	81a3      	strhne	r3, [r4, #12]
 802dd40:	bd10      	pop	{r4, pc}

0802dd42 <__sclose>:
 802dd42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802dd46:	f000 b839 	b.w	802ddbc <_close_r>

0802dd4a <memset>:
 802dd4a:	4402      	add	r2, r0
 802dd4c:	4603      	mov	r3, r0
 802dd4e:	4293      	cmp	r3, r2
 802dd50:	d100      	bne.n	802dd54 <memset+0xa>
 802dd52:	4770      	bx	lr
 802dd54:	f803 1b01 	strb.w	r1, [r3], #1
 802dd58:	e7f9      	b.n	802dd4e <memset+0x4>

0802dd5a <_raise_r>:
 802dd5a:	291f      	cmp	r1, #31
 802dd5c:	b538      	push	{r3, r4, r5, lr}
 802dd5e:	4604      	mov	r4, r0
 802dd60:	460d      	mov	r5, r1
 802dd62:	d904      	bls.n	802dd6e <_raise_r+0x14>
 802dd64:	2316      	movs	r3, #22
 802dd66:	6003      	str	r3, [r0, #0]
 802dd68:	f04f 30ff 	mov.w	r0, #4294967295
 802dd6c:	bd38      	pop	{r3, r4, r5, pc}
 802dd6e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802dd70:	b112      	cbz	r2, 802dd78 <_raise_r+0x1e>
 802dd72:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802dd76:	b94b      	cbnz	r3, 802dd8c <_raise_r+0x32>
 802dd78:	4620      	mov	r0, r4
 802dd7a:	f000 f8bb 	bl	802def4 <_getpid_r>
 802dd7e:	462a      	mov	r2, r5
 802dd80:	4601      	mov	r1, r0
 802dd82:	4620      	mov	r0, r4
 802dd84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802dd88:	f000 b8a2 	b.w	802ded0 <_kill_r>
 802dd8c:	2b01      	cmp	r3, #1
 802dd8e:	d00a      	beq.n	802dda6 <_raise_r+0x4c>
 802dd90:	1c59      	adds	r1, r3, #1
 802dd92:	d103      	bne.n	802dd9c <_raise_r+0x42>
 802dd94:	2316      	movs	r3, #22
 802dd96:	6003      	str	r3, [r0, #0]
 802dd98:	2001      	movs	r0, #1
 802dd9a:	e7e7      	b.n	802dd6c <_raise_r+0x12>
 802dd9c:	2400      	movs	r4, #0
 802dd9e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802dda2:	4628      	mov	r0, r5
 802dda4:	4798      	blx	r3
 802dda6:	2000      	movs	r0, #0
 802dda8:	e7e0      	b.n	802dd6c <_raise_r+0x12>
	...

0802ddac <raise>:
 802ddac:	4b02      	ldr	r3, [pc, #8]	; (802ddb8 <raise+0xc>)
 802ddae:	4601      	mov	r1, r0
 802ddb0:	6818      	ldr	r0, [r3, #0]
 802ddb2:	f7ff bfd2 	b.w	802dd5a <_raise_r>
 802ddb6:	bf00      	nop
 802ddb8:	20000164 	.word	0x20000164

0802ddbc <_close_r>:
 802ddbc:	b538      	push	{r3, r4, r5, lr}
 802ddbe:	4d06      	ldr	r5, [pc, #24]	; (802ddd8 <_close_r+0x1c>)
 802ddc0:	2300      	movs	r3, #0
 802ddc2:	4604      	mov	r4, r0
 802ddc4:	4608      	mov	r0, r1
 802ddc6:	602b      	str	r3, [r5, #0]
 802ddc8:	f7d4 fd88 	bl	80028dc <_close>
 802ddcc:	1c43      	adds	r3, r0, #1
 802ddce:	d102      	bne.n	802ddd6 <_close_r+0x1a>
 802ddd0:	682b      	ldr	r3, [r5, #0]
 802ddd2:	b103      	cbz	r3, 802ddd6 <_close_r+0x1a>
 802ddd4:	6023      	str	r3, [r4, #0]
 802ddd6:	bd38      	pop	{r3, r4, r5, pc}
 802ddd8:	200142d4 	.word	0x200142d4

0802dddc <_reclaim_reent>:
 802dddc:	4b29      	ldr	r3, [pc, #164]	; (802de84 <_reclaim_reent+0xa8>)
 802ddde:	681b      	ldr	r3, [r3, #0]
 802dde0:	4283      	cmp	r3, r0
 802dde2:	b570      	push	{r4, r5, r6, lr}
 802dde4:	4604      	mov	r4, r0
 802dde6:	d04b      	beq.n	802de80 <_reclaim_reent+0xa4>
 802dde8:	69c3      	ldr	r3, [r0, #28]
 802ddea:	b143      	cbz	r3, 802ddfe <_reclaim_reent+0x22>
 802ddec:	68db      	ldr	r3, [r3, #12]
 802ddee:	2b00      	cmp	r3, #0
 802ddf0:	d144      	bne.n	802de7c <_reclaim_reent+0xa0>
 802ddf2:	69e3      	ldr	r3, [r4, #28]
 802ddf4:	6819      	ldr	r1, [r3, #0]
 802ddf6:	b111      	cbz	r1, 802ddfe <_reclaim_reent+0x22>
 802ddf8:	4620      	mov	r0, r4
 802ddfa:	f000 f939 	bl	802e070 <_free_r>
 802ddfe:	6961      	ldr	r1, [r4, #20]
 802de00:	b111      	cbz	r1, 802de08 <_reclaim_reent+0x2c>
 802de02:	4620      	mov	r0, r4
 802de04:	f000 f934 	bl	802e070 <_free_r>
 802de08:	69e1      	ldr	r1, [r4, #28]
 802de0a:	b111      	cbz	r1, 802de12 <_reclaim_reent+0x36>
 802de0c:	4620      	mov	r0, r4
 802de0e:	f000 f92f 	bl	802e070 <_free_r>
 802de12:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802de14:	b111      	cbz	r1, 802de1c <_reclaim_reent+0x40>
 802de16:	4620      	mov	r0, r4
 802de18:	f000 f92a 	bl	802e070 <_free_r>
 802de1c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802de1e:	b111      	cbz	r1, 802de26 <_reclaim_reent+0x4a>
 802de20:	4620      	mov	r0, r4
 802de22:	f000 f925 	bl	802e070 <_free_r>
 802de26:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802de28:	b111      	cbz	r1, 802de30 <_reclaim_reent+0x54>
 802de2a:	4620      	mov	r0, r4
 802de2c:	f000 f920 	bl	802e070 <_free_r>
 802de30:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802de32:	b111      	cbz	r1, 802de3a <_reclaim_reent+0x5e>
 802de34:	4620      	mov	r0, r4
 802de36:	f000 f91b 	bl	802e070 <_free_r>
 802de3a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802de3c:	b111      	cbz	r1, 802de44 <_reclaim_reent+0x68>
 802de3e:	4620      	mov	r0, r4
 802de40:	f000 f916 	bl	802e070 <_free_r>
 802de44:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802de46:	b111      	cbz	r1, 802de4e <_reclaim_reent+0x72>
 802de48:	4620      	mov	r0, r4
 802de4a:	f000 f911 	bl	802e070 <_free_r>
 802de4e:	6a23      	ldr	r3, [r4, #32]
 802de50:	b1b3      	cbz	r3, 802de80 <_reclaim_reent+0xa4>
 802de52:	4620      	mov	r0, r4
 802de54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802de58:	4718      	bx	r3
 802de5a:	5949      	ldr	r1, [r1, r5]
 802de5c:	b941      	cbnz	r1, 802de70 <_reclaim_reent+0x94>
 802de5e:	3504      	adds	r5, #4
 802de60:	69e3      	ldr	r3, [r4, #28]
 802de62:	2d80      	cmp	r5, #128	; 0x80
 802de64:	68d9      	ldr	r1, [r3, #12]
 802de66:	d1f8      	bne.n	802de5a <_reclaim_reent+0x7e>
 802de68:	4620      	mov	r0, r4
 802de6a:	f000 f901 	bl	802e070 <_free_r>
 802de6e:	e7c0      	b.n	802ddf2 <_reclaim_reent+0x16>
 802de70:	680e      	ldr	r6, [r1, #0]
 802de72:	4620      	mov	r0, r4
 802de74:	f000 f8fc 	bl	802e070 <_free_r>
 802de78:	4631      	mov	r1, r6
 802de7a:	e7ef      	b.n	802de5c <_reclaim_reent+0x80>
 802de7c:	2500      	movs	r5, #0
 802de7e:	e7ef      	b.n	802de60 <_reclaim_reent+0x84>
 802de80:	bd70      	pop	{r4, r5, r6, pc}
 802de82:	bf00      	nop
 802de84:	20000164 	.word	0x20000164

0802de88 <_lseek_r>:
 802de88:	b538      	push	{r3, r4, r5, lr}
 802de8a:	4d07      	ldr	r5, [pc, #28]	; (802dea8 <_lseek_r+0x20>)
 802de8c:	4604      	mov	r4, r0
 802de8e:	4608      	mov	r0, r1
 802de90:	4611      	mov	r1, r2
 802de92:	2200      	movs	r2, #0
 802de94:	602a      	str	r2, [r5, #0]
 802de96:	461a      	mov	r2, r3
 802de98:	f7d4 fd2c 	bl	80028f4 <_lseek>
 802de9c:	1c43      	adds	r3, r0, #1
 802de9e:	d102      	bne.n	802dea6 <_lseek_r+0x1e>
 802dea0:	682b      	ldr	r3, [r5, #0]
 802dea2:	b103      	cbz	r3, 802dea6 <_lseek_r+0x1e>
 802dea4:	6023      	str	r3, [r4, #0]
 802dea6:	bd38      	pop	{r3, r4, r5, pc}
 802dea8:	200142d4 	.word	0x200142d4

0802deac <_read_r>:
 802deac:	b538      	push	{r3, r4, r5, lr}
 802deae:	4d07      	ldr	r5, [pc, #28]	; (802decc <_read_r+0x20>)
 802deb0:	4604      	mov	r4, r0
 802deb2:	4608      	mov	r0, r1
 802deb4:	4611      	mov	r1, r2
 802deb6:	2200      	movs	r2, #0
 802deb8:	602a      	str	r2, [r5, #0]
 802deba:	461a      	mov	r2, r3
 802debc:	f7d4 fcf2 	bl	80028a4 <_read>
 802dec0:	1c43      	adds	r3, r0, #1
 802dec2:	d102      	bne.n	802deca <_read_r+0x1e>
 802dec4:	682b      	ldr	r3, [r5, #0]
 802dec6:	b103      	cbz	r3, 802deca <_read_r+0x1e>
 802dec8:	6023      	str	r3, [r4, #0]
 802deca:	bd38      	pop	{r3, r4, r5, pc}
 802decc:	200142d4 	.word	0x200142d4

0802ded0 <_kill_r>:
 802ded0:	b538      	push	{r3, r4, r5, lr}
 802ded2:	4d07      	ldr	r5, [pc, #28]	; (802def0 <_kill_r+0x20>)
 802ded4:	2300      	movs	r3, #0
 802ded6:	4604      	mov	r4, r0
 802ded8:	4608      	mov	r0, r1
 802deda:	4611      	mov	r1, r2
 802dedc:	602b      	str	r3, [r5, #0]
 802dede:	f7d4 fcd3 	bl	8002888 <_kill>
 802dee2:	1c43      	adds	r3, r0, #1
 802dee4:	d102      	bne.n	802deec <_kill_r+0x1c>
 802dee6:	682b      	ldr	r3, [r5, #0]
 802dee8:	b103      	cbz	r3, 802deec <_kill_r+0x1c>
 802deea:	6023      	str	r3, [r4, #0]
 802deec:	bd38      	pop	{r3, r4, r5, pc}
 802deee:	bf00      	nop
 802def0:	200142d4 	.word	0x200142d4

0802def4 <_getpid_r>:
 802def4:	f7d4 bcc6 	b.w	8002884 <_getpid>

0802def8 <_sbrk_r>:
 802def8:	b538      	push	{r3, r4, r5, lr}
 802defa:	4d06      	ldr	r5, [pc, #24]	; (802df14 <_sbrk_r+0x1c>)
 802defc:	2300      	movs	r3, #0
 802defe:	4604      	mov	r4, r0
 802df00:	4608      	mov	r0, r1
 802df02:	602b      	str	r3, [r5, #0]
 802df04:	f7d4 fcf8 	bl	80028f8 <_sbrk>
 802df08:	1c43      	adds	r3, r0, #1
 802df0a:	d102      	bne.n	802df12 <_sbrk_r+0x1a>
 802df0c:	682b      	ldr	r3, [r5, #0]
 802df0e:	b103      	cbz	r3, 802df12 <_sbrk_r+0x1a>
 802df10:	6023      	str	r3, [r4, #0]
 802df12:	bd38      	pop	{r3, r4, r5, pc}
 802df14:	200142d4 	.word	0x200142d4

0802df18 <_write_r>:
 802df18:	b538      	push	{r3, r4, r5, lr}
 802df1a:	4d07      	ldr	r5, [pc, #28]	; (802df38 <_write_r+0x20>)
 802df1c:	4604      	mov	r4, r0
 802df1e:	4608      	mov	r0, r1
 802df20:	4611      	mov	r1, r2
 802df22:	2200      	movs	r2, #0
 802df24:	602a      	str	r2, [r5, #0]
 802df26:	461a      	mov	r2, r3
 802df28:	f7d4 fcca 	bl	80028c0 <_write>
 802df2c:	1c43      	adds	r3, r0, #1
 802df2e:	d102      	bne.n	802df36 <_write_r+0x1e>
 802df30:	682b      	ldr	r3, [r5, #0]
 802df32:	b103      	cbz	r3, 802df36 <_write_r+0x1e>
 802df34:	6023      	str	r3, [r4, #0]
 802df36:	bd38      	pop	{r3, r4, r5, pc}
 802df38:	200142d4 	.word	0x200142d4

0802df3c <__errno>:
 802df3c:	4b01      	ldr	r3, [pc, #4]	; (802df44 <__errno+0x8>)
 802df3e:	6818      	ldr	r0, [r3, #0]
 802df40:	4770      	bx	lr
 802df42:	bf00      	nop
 802df44:	20000164 	.word	0x20000164

0802df48 <__libc_init_array>:
 802df48:	b570      	push	{r4, r5, r6, lr}
 802df4a:	4d0d      	ldr	r5, [pc, #52]	; (802df80 <__libc_init_array+0x38>)
 802df4c:	4c0d      	ldr	r4, [pc, #52]	; (802df84 <__libc_init_array+0x3c>)
 802df4e:	1b64      	subs	r4, r4, r5
 802df50:	10a4      	asrs	r4, r4, #2
 802df52:	2600      	movs	r6, #0
 802df54:	42a6      	cmp	r6, r4
 802df56:	d109      	bne.n	802df6c <__libc_init_array+0x24>
 802df58:	4d0b      	ldr	r5, [pc, #44]	; (802df88 <__libc_init_array+0x40>)
 802df5a:	4c0c      	ldr	r4, [pc, #48]	; (802df8c <__libc_init_array+0x44>)
 802df5c:	f000 fd70 	bl	802ea40 <_init>
 802df60:	1b64      	subs	r4, r4, r5
 802df62:	10a4      	asrs	r4, r4, #2
 802df64:	2600      	movs	r6, #0
 802df66:	42a6      	cmp	r6, r4
 802df68:	d105      	bne.n	802df76 <__libc_init_array+0x2e>
 802df6a:	bd70      	pop	{r4, r5, r6, pc}
 802df6c:	f855 3b04 	ldr.w	r3, [r5], #4
 802df70:	4798      	blx	r3
 802df72:	3601      	adds	r6, #1
 802df74:	e7ee      	b.n	802df54 <__libc_init_array+0xc>
 802df76:	f855 3b04 	ldr.w	r3, [r5], #4
 802df7a:	4798      	blx	r3
 802df7c:	3601      	adds	r6, #1
 802df7e:	e7f2      	b.n	802df66 <__libc_init_array+0x1e>
 802df80:	080cf3b0 	.word	0x080cf3b0
 802df84:	080cf3b0 	.word	0x080cf3b0
 802df88:	080cf3b0 	.word	0x080cf3b0
 802df8c:	080cf3c4 	.word	0x080cf3c4

0802df90 <__retarget_lock_init_recursive>:
 802df90:	4770      	bx	lr

0802df92 <__retarget_lock_acquire_recursive>:
 802df92:	4770      	bx	lr

0802df94 <__retarget_lock_release_recursive>:
 802df94:	4770      	bx	lr

0802df96 <memcpy>:
 802df96:	440a      	add	r2, r1
 802df98:	4291      	cmp	r1, r2
 802df9a:	f100 33ff 	add.w	r3, r0, #4294967295
 802df9e:	d100      	bne.n	802dfa2 <memcpy+0xc>
 802dfa0:	4770      	bx	lr
 802dfa2:	b510      	push	{r4, lr}
 802dfa4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802dfa8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802dfac:	4291      	cmp	r1, r2
 802dfae:	d1f9      	bne.n	802dfa4 <memcpy+0xe>
 802dfb0:	bd10      	pop	{r4, pc}
	...

0802dfb4 <__register_exitproc>:
 802dfb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dfb8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802e06c <__register_exitproc+0xb8>
 802dfbc:	4606      	mov	r6, r0
 802dfbe:	f8d8 0000 	ldr.w	r0, [r8]
 802dfc2:	461f      	mov	r7, r3
 802dfc4:	460d      	mov	r5, r1
 802dfc6:	4691      	mov	r9, r2
 802dfc8:	f7ff ffe3 	bl	802df92 <__retarget_lock_acquire_recursive>
 802dfcc:	4b23      	ldr	r3, [pc, #140]	; (802e05c <__register_exitproc+0xa8>)
 802dfce:	681c      	ldr	r4, [r3, #0]
 802dfd0:	b934      	cbnz	r4, 802dfe0 <__register_exitproc+0x2c>
 802dfd2:	4c23      	ldr	r4, [pc, #140]	; (802e060 <__register_exitproc+0xac>)
 802dfd4:	601c      	str	r4, [r3, #0]
 802dfd6:	4b23      	ldr	r3, [pc, #140]	; (802e064 <__register_exitproc+0xb0>)
 802dfd8:	b113      	cbz	r3, 802dfe0 <__register_exitproc+0x2c>
 802dfda:	681b      	ldr	r3, [r3, #0]
 802dfdc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802dfe0:	6863      	ldr	r3, [r4, #4]
 802dfe2:	2b1f      	cmp	r3, #31
 802dfe4:	dd07      	ble.n	802dff6 <__register_exitproc+0x42>
 802dfe6:	f8d8 0000 	ldr.w	r0, [r8]
 802dfea:	f7ff ffd3 	bl	802df94 <__retarget_lock_release_recursive>
 802dfee:	f04f 30ff 	mov.w	r0, #4294967295
 802dff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dff6:	b32e      	cbz	r6, 802e044 <__register_exitproc+0x90>
 802dff8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802dffc:	b968      	cbnz	r0, 802e01a <__register_exitproc+0x66>
 802dffe:	4b1a      	ldr	r3, [pc, #104]	; (802e068 <__register_exitproc+0xb4>)
 802e000:	2b00      	cmp	r3, #0
 802e002:	d0f0      	beq.n	802dfe6 <__register_exitproc+0x32>
 802e004:	f44f 7084 	mov.w	r0, #264	; 0x108
 802e008:	f7ff fcbe 	bl	802d988 <malloc>
 802e00c:	2800      	cmp	r0, #0
 802e00e:	d0ea      	beq.n	802dfe6 <__register_exitproc+0x32>
 802e010:	2300      	movs	r3, #0
 802e012:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802e016:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802e01a:	6863      	ldr	r3, [r4, #4]
 802e01c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802e020:	2201      	movs	r2, #1
 802e022:	409a      	lsls	r2, r3
 802e024:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802e028:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802e02c:	4313      	orrs	r3, r2
 802e02e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802e032:	2e02      	cmp	r6, #2
 802e034:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802e038:	bf02      	ittt	eq
 802e03a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802e03e:	4313      	orreq	r3, r2
 802e040:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802e044:	6863      	ldr	r3, [r4, #4]
 802e046:	f8d8 0000 	ldr.w	r0, [r8]
 802e04a:	1c5a      	adds	r2, r3, #1
 802e04c:	3302      	adds	r3, #2
 802e04e:	6062      	str	r2, [r4, #4]
 802e050:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802e054:	f7ff ff9e 	bl	802df94 <__retarget_lock_release_recursive>
 802e058:	2000      	movs	r0, #0
 802e05a:	e7ca      	b.n	802dff2 <__register_exitproc+0x3e>
 802e05c:	20014368 	.word	0x20014368
 802e060:	200142dc 	.word	0x200142dc
 802e064:	08045c08 	.word	0x08045c08
 802e068:	0802d989 	.word	0x0802d989
 802e06c:	20000168 	.word	0x20000168

0802e070 <_free_r>:
 802e070:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802e072:	2900      	cmp	r1, #0
 802e074:	d044      	beq.n	802e100 <_free_r+0x90>
 802e076:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e07a:	9001      	str	r0, [sp, #4]
 802e07c:	2b00      	cmp	r3, #0
 802e07e:	f1a1 0404 	sub.w	r4, r1, #4
 802e082:	bfb8      	it	lt
 802e084:	18e4      	addlt	r4, r4, r3
 802e086:	f7ff fd2f 	bl	802dae8 <__malloc_lock>
 802e08a:	4a1e      	ldr	r2, [pc, #120]	; (802e104 <_free_r+0x94>)
 802e08c:	9801      	ldr	r0, [sp, #4]
 802e08e:	6813      	ldr	r3, [r2, #0]
 802e090:	b933      	cbnz	r3, 802e0a0 <_free_r+0x30>
 802e092:	6063      	str	r3, [r4, #4]
 802e094:	6014      	str	r4, [r2, #0]
 802e096:	b003      	add	sp, #12
 802e098:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e09c:	f7ff bd2a 	b.w	802daf4 <__malloc_unlock>
 802e0a0:	42a3      	cmp	r3, r4
 802e0a2:	d908      	bls.n	802e0b6 <_free_r+0x46>
 802e0a4:	6825      	ldr	r5, [r4, #0]
 802e0a6:	1961      	adds	r1, r4, r5
 802e0a8:	428b      	cmp	r3, r1
 802e0aa:	bf01      	itttt	eq
 802e0ac:	6819      	ldreq	r1, [r3, #0]
 802e0ae:	685b      	ldreq	r3, [r3, #4]
 802e0b0:	1949      	addeq	r1, r1, r5
 802e0b2:	6021      	streq	r1, [r4, #0]
 802e0b4:	e7ed      	b.n	802e092 <_free_r+0x22>
 802e0b6:	461a      	mov	r2, r3
 802e0b8:	685b      	ldr	r3, [r3, #4]
 802e0ba:	b10b      	cbz	r3, 802e0c0 <_free_r+0x50>
 802e0bc:	42a3      	cmp	r3, r4
 802e0be:	d9fa      	bls.n	802e0b6 <_free_r+0x46>
 802e0c0:	6811      	ldr	r1, [r2, #0]
 802e0c2:	1855      	adds	r5, r2, r1
 802e0c4:	42a5      	cmp	r5, r4
 802e0c6:	d10b      	bne.n	802e0e0 <_free_r+0x70>
 802e0c8:	6824      	ldr	r4, [r4, #0]
 802e0ca:	4421      	add	r1, r4
 802e0cc:	1854      	adds	r4, r2, r1
 802e0ce:	42a3      	cmp	r3, r4
 802e0d0:	6011      	str	r1, [r2, #0]
 802e0d2:	d1e0      	bne.n	802e096 <_free_r+0x26>
 802e0d4:	681c      	ldr	r4, [r3, #0]
 802e0d6:	685b      	ldr	r3, [r3, #4]
 802e0d8:	6053      	str	r3, [r2, #4]
 802e0da:	440c      	add	r4, r1
 802e0dc:	6014      	str	r4, [r2, #0]
 802e0de:	e7da      	b.n	802e096 <_free_r+0x26>
 802e0e0:	d902      	bls.n	802e0e8 <_free_r+0x78>
 802e0e2:	230c      	movs	r3, #12
 802e0e4:	6003      	str	r3, [r0, #0]
 802e0e6:	e7d6      	b.n	802e096 <_free_r+0x26>
 802e0e8:	6825      	ldr	r5, [r4, #0]
 802e0ea:	1961      	adds	r1, r4, r5
 802e0ec:	428b      	cmp	r3, r1
 802e0ee:	bf04      	itt	eq
 802e0f0:	6819      	ldreq	r1, [r3, #0]
 802e0f2:	685b      	ldreq	r3, [r3, #4]
 802e0f4:	6063      	str	r3, [r4, #4]
 802e0f6:	bf04      	itt	eq
 802e0f8:	1949      	addeq	r1, r1, r5
 802e0fa:	6021      	streq	r1, [r4, #0]
 802e0fc:	6054      	str	r4, [r2, #4]
 802e0fe:	e7ca      	b.n	802e096 <_free_r+0x26>
 802e100:	b003      	add	sp, #12
 802e102:	bd30      	pop	{r4, r5, pc}
 802e104:	20014190 	.word	0x20014190

0802e108 <__sfputc_r>:
 802e108:	6893      	ldr	r3, [r2, #8]
 802e10a:	3b01      	subs	r3, #1
 802e10c:	2b00      	cmp	r3, #0
 802e10e:	b410      	push	{r4}
 802e110:	6093      	str	r3, [r2, #8]
 802e112:	da08      	bge.n	802e126 <__sfputc_r+0x1e>
 802e114:	6994      	ldr	r4, [r2, #24]
 802e116:	42a3      	cmp	r3, r4
 802e118:	db01      	blt.n	802e11e <__sfputc_r+0x16>
 802e11a:	290a      	cmp	r1, #10
 802e11c:	d103      	bne.n	802e126 <__sfputc_r+0x1e>
 802e11e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e122:	f000 bb73 	b.w	802e80c <__swbuf_r>
 802e126:	6813      	ldr	r3, [r2, #0]
 802e128:	1c58      	adds	r0, r3, #1
 802e12a:	6010      	str	r0, [r2, #0]
 802e12c:	7019      	strb	r1, [r3, #0]
 802e12e:	4608      	mov	r0, r1
 802e130:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e134:	4770      	bx	lr

0802e136 <__sfputs_r>:
 802e136:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e138:	4606      	mov	r6, r0
 802e13a:	460f      	mov	r7, r1
 802e13c:	4614      	mov	r4, r2
 802e13e:	18d5      	adds	r5, r2, r3
 802e140:	42ac      	cmp	r4, r5
 802e142:	d101      	bne.n	802e148 <__sfputs_r+0x12>
 802e144:	2000      	movs	r0, #0
 802e146:	e007      	b.n	802e158 <__sfputs_r+0x22>
 802e148:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e14c:	463a      	mov	r2, r7
 802e14e:	4630      	mov	r0, r6
 802e150:	f7ff ffda 	bl	802e108 <__sfputc_r>
 802e154:	1c43      	adds	r3, r0, #1
 802e156:	d1f3      	bne.n	802e140 <__sfputs_r+0xa>
 802e158:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e15c <_vfiprintf_r>:
 802e15c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e160:	460d      	mov	r5, r1
 802e162:	b09d      	sub	sp, #116	; 0x74
 802e164:	4614      	mov	r4, r2
 802e166:	4698      	mov	r8, r3
 802e168:	4606      	mov	r6, r0
 802e16a:	b118      	cbz	r0, 802e174 <_vfiprintf_r+0x18>
 802e16c:	6a03      	ldr	r3, [r0, #32]
 802e16e:	b90b      	cbnz	r3, 802e174 <_vfiprintf_r+0x18>
 802e170:	f7ff fd60 	bl	802dc34 <__sinit>
 802e174:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e176:	07d9      	lsls	r1, r3, #31
 802e178:	d405      	bmi.n	802e186 <_vfiprintf_r+0x2a>
 802e17a:	89ab      	ldrh	r3, [r5, #12]
 802e17c:	059a      	lsls	r2, r3, #22
 802e17e:	d402      	bmi.n	802e186 <_vfiprintf_r+0x2a>
 802e180:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e182:	f7ff ff06 	bl	802df92 <__retarget_lock_acquire_recursive>
 802e186:	89ab      	ldrh	r3, [r5, #12]
 802e188:	071b      	lsls	r3, r3, #28
 802e18a:	d501      	bpl.n	802e190 <_vfiprintf_r+0x34>
 802e18c:	692b      	ldr	r3, [r5, #16]
 802e18e:	b99b      	cbnz	r3, 802e1b8 <_vfiprintf_r+0x5c>
 802e190:	4629      	mov	r1, r5
 802e192:	4630      	mov	r0, r6
 802e194:	f000 fb78 	bl	802e888 <__swsetup_r>
 802e198:	b170      	cbz	r0, 802e1b8 <_vfiprintf_r+0x5c>
 802e19a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e19c:	07dc      	lsls	r4, r3, #31
 802e19e:	d504      	bpl.n	802e1aa <_vfiprintf_r+0x4e>
 802e1a0:	f04f 30ff 	mov.w	r0, #4294967295
 802e1a4:	b01d      	add	sp, #116	; 0x74
 802e1a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e1aa:	89ab      	ldrh	r3, [r5, #12]
 802e1ac:	0598      	lsls	r0, r3, #22
 802e1ae:	d4f7      	bmi.n	802e1a0 <_vfiprintf_r+0x44>
 802e1b0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e1b2:	f7ff feef 	bl	802df94 <__retarget_lock_release_recursive>
 802e1b6:	e7f3      	b.n	802e1a0 <_vfiprintf_r+0x44>
 802e1b8:	2300      	movs	r3, #0
 802e1ba:	9309      	str	r3, [sp, #36]	; 0x24
 802e1bc:	2320      	movs	r3, #32
 802e1be:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e1c2:	f8cd 800c 	str.w	r8, [sp, #12]
 802e1c6:	2330      	movs	r3, #48	; 0x30
 802e1c8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802e37c <_vfiprintf_r+0x220>
 802e1cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e1d0:	f04f 0901 	mov.w	r9, #1
 802e1d4:	4623      	mov	r3, r4
 802e1d6:	469a      	mov	sl, r3
 802e1d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e1dc:	b10a      	cbz	r2, 802e1e2 <_vfiprintf_r+0x86>
 802e1de:	2a25      	cmp	r2, #37	; 0x25
 802e1e0:	d1f9      	bne.n	802e1d6 <_vfiprintf_r+0x7a>
 802e1e2:	ebba 0b04 	subs.w	fp, sl, r4
 802e1e6:	d00b      	beq.n	802e200 <_vfiprintf_r+0xa4>
 802e1e8:	465b      	mov	r3, fp
 802e1ea:	4622      	mov	r2, r4
 802e1ec:	4629      	mov	r1, r5
 802e1ee:	4630      	mov	r0, r6
 802e1f0:	f7ff ffa1 	bl	802e136 <__sfputs_r>
 802e1f4:	3001      	adds	r0, #1
 802e1f6:	f000 80a9 	beq.w	802e34c <_vfiprintf_r+0x1f0>
 802e1fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e1fc:	445a      	add	r2, fp
 802e1fe:	9209      	str	r2, [sp, #36]	; 0x24
 802e200:	f89a 3000 	ldrb.w	r3, [sl]
 802e204:	2b00      	cmp	r3, #0
 802e206:	f000 80a1 	beq.w	802e34c <_vfiprintf_r+0x1f0>
 802e20a:	2300      	movs	r3, #0
 802e20c:	f04f 32ff 	mov.w	r2, #4294967295
 802e210:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e214:	f10a 0a01 	add.w	sl, sl, #1
 802e218:	9304      	str	r3, [sp, #16]
 802e21a:	9307      	str	r3, [sp, #28]
 802e21c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e220:	931a      	str	r3, [sp, #104]	; 0x68
 802e222:	4654      	mov	r4, sl
 802e224:	2205      	movs	r2, #5
 802e226:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e22a:	4854      	ldr	r0, [pc, #336]	; (802e37c <_vfiprintf_r+0x220>)
 802e22c:	f7d2 f840 	bl	80002b0 <memchr>
 802e230:	9a04      	ldr	r2, [sp, #16]
 802e232:	b9d8      	cbnz	r0, 802e26c <_vfiprintf_r+0x110>
 802e234:	06d1      	lsls	r1, r2, #27
 802e236:	bf44      	itt	mi
 802e238:	2320      	movmi	r3, #32
 802e23a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e23e:	0713      	lsls	r3, r2, #28
 802e240:	bf44      	itt	mi
 802e242:	232b      	movmi	r3, #43	; 0x2b
 802e244:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e248:	f89a 3000 	ldrb.w	r3, [sl]
 802e24c:	2b2a      	cmp	r3, #42	; 0x2a
 802e24e:	d015      	beq.n	802e27c <_vfiprintf_r+0x120>
 802e250:	9a07      	ldr	r2, [sp, #28]
 802e252:	4654      	mov	r4, sl
 802e254:	2000      	movs	r0, #0
 802e256:	f04f 0c0a 	mov.w	ip, #10
 802e25a:	4621      	mov	r1, r4
 802e25c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e260:	3b30      	subs	r3, #48	; 0x30
 802e262:	2b09      	cmp	r3, #9
 802e264:	d94d      	bls.n	802e302 <_vfiprintf_r+0x1a6>
 802e266:	b1b0      	cbz	r0, 802e296 <_vfiprintf_r+0x13a>
 802e268:	9207      	str	r2, [sp, #28]
 802e26a:	e014      	b.n	802e296 <_vfiprintf_r+0x13a>
 802e26c:	eba0 0308 	sub.w	r3, r0, r8
 802e270:	fa09 f303 	lsl.w	r3, r9, r3
 802e274:	4313      	orrs	r3, r2
 802e276:	9304      	str	r3, [sp, #16]
 802e278:	46a2      	mov	sl, r4
 802e27a:	e7d2      	b.n	802e222 <_vfiprintf_r+0xc6>
 802e27c:	9b03      	ldr	r3, [sp, #12]
 802e27e:	1d19      	adds	r1, r3, #4
 802e280:	681b      	ldr	r3, [r3, #0]
 802e282:	9103      	str	r1, [sp, #12]
 802e284:	2b00      	cmp	r3, #0
 802e286:	bfbb      	ittet	lt
 802e288:	425b      	neglt	r3, r3
 802e28a:	f042 0202 	orrlt.w	r2, r2, #2
 802e28e:	9307      	strge	r3, [sp, #28]
 802e290:	9307      	strlt	r3, [sp, #28]
 802e292:	bfb8      	it	lt
 802e294:	9204      	strlt	r2, [sp, #16]
 802e296:	7823      	ldrb	r3, [r4, #0]
 802e298:	2b2e      	cmp	r3, #46	; 0x2e
 802e29a:	d10c      	bne.n	802e2b6 <_vfiprintf_r+0x15a>
 802e29c:	7863      	ldrb	r3, [r4, #1]
 802e29e:	2b2a      	cmp	r3, #42	; 0x2a
 802e2a0:	d134      	bne.n	802e30c <_vfiprintf_r+0x1b0>
 802e2a2:	9b03      	ldr	r3, [sp, #12]
 802e2a4:	1d1a      	adds	r2, r3, #4
 802e2a6:	681b      	ldr	r3, [r3, #0]
 802e2a8:	9203      	str	r2, [sp, #12]
 802e2aa:	2b00      	cmp	r3, #0
 802e2ac:	bfb8      	it	lt
 802e2ae:	f04f 33ff 	movlt.w	r3, #4294967295
 802e2b2:	3402      	adds	r4, #2
 802e2b4:	9305      	str	r3, [sp, #20]
 802e2b6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802e38c <_vfiprintf_r+0x230>
 802e2ba:	7821      	ldrb	r1, [r4, #0]
 802e2bc:	2203      	movs	r2, #3
 802e2be:	4650      	mov	r0, sl
 802e2c0:	f7d1 fff6 	bl	80002b0 <memchr>
 802e2c4:	b138      	cbz	r0, 802e2d6 <_vfiprintf_r+0x17a>
 802e2c6:	9b04      	ldr	r3, [sp, #16]
 802e2c8:	eba0 000a 	sub.w	r0, r0, sl
 802e2cc:	2240      	movs	r2, #64	; 0x40
 802e2ce:	4082      	lsls	r2, r0
 802e2d0:	4313      	orrs	r3, r2
 802e2d2:	3401      	adds	r4, #1
 802e2d4:	9304      	str	r3, [sp, #16]
 802e2d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e2da:	4829      	ldr	r0, [pc, #164]	; (802e380 <_vfiprintf_r+0x224>)
 802e2dc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e2e0:	2206      	movs	r2, #6
 802e2e2:	f7d1 ffe5 	bl	80002b0 <memchr>
 802e2e6:	2800      	cmp	r0, #0
 802e2e8:	d03f      	beq.n	802e36a <_vfiprintf_r+0x20e>
 802e2ea:	4b26      	ldr	r3, [pc, #152]	; (802e384 <_vfiprintf_r+0x228>)
 802e2ec:	bb1b      	cbnz	r3, 802e336 <_vfiprintf_r+0x1da>
 802e2ee:	9b03      	ldr	r3, [sp, #12]
 802e2f0:	3307      	adds	r3, #7
 802e2f2:	f023 0307 	bic.w	r3, r3, #7
 802e2f6:	3308      	adds	r3, #8
 802e2f8:	9303      	str	r3, [sp, #12]
 802e2fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e2fc:	443b      	add	r3, r7
 802e2fe:	9309      	str	r3, [sp, #36]	; 0x24
 802e300:	e768      	b.n	802e1d4 <_vfiprintf_r+0x78>
 802e302:	fb0c 3202 	mla	r2, ip, r2, r3
 802e306:	460c      	mov	r4, r1
 802e308:	2001      	movs	r0, #1
 802e30a:	e7a6      	b.n	802e25a <_vfiprintf_r+0xfe>
 802e30c:	2300      	movs	r3, #0
 802e30e:	3401      	adds	r4, #1
 802e310:	9305      	str	r3, [sp, #20]
 802e312:	4619      	mov	r1, r3
 802e314:	f04f 0c0a 	mov.w	ip, #10
 802e318:	4620      	mov	r0, r4
 802e31a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e31e:	3a30      	subs	r2, #48	; 0x30
 802e320:	2a09      	cmp	r2, #9
 802e322:	d903      	bls.n	802e32c <_vfiprintf_r+0x1d0>
 802e324:	2b00      	cmp	r3, #0
 802e326:	d0c6      	beq.n	802e2b6 <_vfiprintf_r+0x15a>
 802e328:	9105      	str	r1, [sp, #20]
 802e32a:	e7c4      	b.n	802e2b6 <_vfiprintf_r+0x15a>
 802e32c:	fb0c 2101 	mla	r1, ip, r1, r2
 802e330:	4604      	mov	r4, r0
 802e332:	2301      	movs	r3, #1
 802e334:	e7f0      	b.n	802e318 <_vfiprintf_r+0x1bc>
 802e336:	ab03      	add	r3, sp, #12
 802e338:	9300      	str	r3, [sp, #0]
 802e33a:	462a      	mov	r2, r5
 802e33c:	4b12      	ldr	r3, [pc, #72]	; (802e388 <_vfiprintf_r+0x22c>)
 802e33e:	a904      	add	r1, sp, #16
 802e340:	4630      	mov	r0, r6
 802e342:	f3af 8000 	nop.w
 802e346:	4607      	mov	r7, r0
 802e348:	1c78      	adds	r0, r7, #1
 802e34a:	d1d6      	bne.n	802e2fa <_vfiprintf_r+0x19e>
 802e34c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e34e:	07d9      	lsls	r1, r3, #31
 802e350:	d405      	bmi.n	802e35e <_vfiprintf_r+0x202>
 802e352:	89ab      	ldrh	r3, [r5, #12]
 802e354:	059a      	lsls	r2, r3, #22
 802e356:	d402      	bmi.n	802e35e <_vfiprintf_r+0x202>
 802e358:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e35a:	f7ff fe1b 	bl	802df94 <__retarget_lock_release_recursive>
 802e35e:	89ab      	ldrh	r3, [r5, #12]
 802e360:	065b      	lsls	r3, r3, #25
 802e362:	f53f af1d 	bmi.w	802e1a0 <_vfiprintf_r+0x44>
 802e366:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e368:	e71c      	b.n	802e1a4 <_vfiprintf_r+0x48>
 802e36a:	ab03      	add	r3, sp, #12
 802e36c:	9300      	str	r3, [sp, #0]
 802e36e:	462a      	mov	r2, r5
 802e370:	4b05      	ldr	r3, [pc, #20]	; (802e388 <_vfiprintf_r+0x22c>)
 802e372:	a904      	add	r1, sp, #16
 802e374:	4630      	mov	r0, r6
 802e376:	f000 f879 	bl	802e46c <_printf_i>
 802e37a:	e7e4      	b.n	802e346 <_vfiprintf_r+0x1ea>
 802e37c:	08045c0c 	.word	0x08045c0c
 802e380:	08045c16 	.word	0x08045c16
 802e384:	00000000 	.word	0x00000000
 802e388:	0802e137 	.word	0x0802e137
 802e38c:	08045c12 	.word	0x08045c12

0802e390 <_printf_common>:
 802e390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e394:	4616      	mov	r6, r2
 802e396:	4699      	mov	r9, r3
 802e398:	688a      	ldr	r2, [r1, #8]
 802e39a:	690b      	ldr	r3, [r1, #16]
 802e39c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e3a0:	4293      	cmp	r3, r2
 802e3a2:	bfb8      	it	lt
 802e3a4:	4613      	movlt	r3, r2
 802e3a6:	6033      	str	r3, [r6, #0]
 802e3a8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e3ac:	4607      	mov	r7, r0
 802e3ae:	460c      	mov	r4, r1
 802e3b0:	b10a      	cbz	r2, 802e3b6 <_printf_common+0x26>
 802e3b2:	3301      	adds	r3, #1
 802e3b4:	6033      	str	r3, [r6, #0]
 802e3b6:	6823      	ldr	r3, [r4, #0]
 802e3b8:	0699      	lsls	r1, r3, #26
 802e3ba:	bf42      	ittt	mi
 802e3bc:	6833      	ldrmi	r3, [r6, #0]
 802e3be:	3302      	addmi	r3, #2
 802e3c0:	6033      	strmi	r3, [r6, #0]
 802e3c2:	6825      	ldr	r5, [r4, #0]
 802e3c4:	f015 0506 	ands.w	r5, r5, #6
 802e3c8:	d106      	bne.n	802e3d8 <_printf_common+0x48>
 802e3ca:	f104 0a19 	add.w	sl, r4, #25
 802e3ce:	68e3      	ldr	r3, [r4, #12]
 802e3d0:	6832      	ldr	r2, [r6, #0]
 802e3d2:	1a9b      	subs	r3, r3, r2
 802e3d4:	42ab      	cmp	r3, r5
 802e3d6:	dc26      	bgt.n	802e426 <_printf_common+0x96>
 802e3d8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e3dc:	1e13      	subs	r3, r2, #0
 802e3de:	6822      	ldr	r2, [r4, #0]
 802e3e0:	bf18      	it	ne
 802e3e2:	2301      	movne	r3, #1
 802e3e4:	0692      	lsls	r2, r2, #26
 802e3e6:	d42b      	bmi.n	802e440 <_printf_common+0xb0>
 802e3e8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e3ec:	4649      	mov	r1, r9
 802e3ee:	4638      	mov	r0, r7
 802e3f0:	47c0      	blx	r8
 802e3f2:	3001      	adds	r0, #1
 802e3f4:	d01e      	beq.n	802e434 <_printf_common+0xa4>
 802e3f6:	6823      	ldr	r3, [r4, #0]
 802e3f8:	6922      	ldr	r2, [r4, #16]
 802e3fa:	f003 0306 	and.w	r3, r3, #6
 802e3fe:	2b04      	cmp	r3, #4
 802e400:	bf02      	ittt	eq
 802e402:	68e5      	ldreq	r5, [r4, #12]
 802e404:	6833      	ldreq	r3, [r6, #0]
 802e406:	1aed      	subeq	r5, r5, r3
 802e408:	68a3      	ldr	r3, [r4, #8]
 802e40a:	bf0c      	ite	eq
 802e40c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e410:	2500      	movne	r5, #0
 802e412:	4293      	cmp	r3, r2
 802e414:	bfc4      	itt	gt
 802e416:	1a9b      	subgt	r3, r3, r2
 802e418:	18ed      	addgt	r5, r5, r3
 802e41a:	2600      	movs	r6, #0
 802e41c:	341a      	adds	r4, #26
 802e41e:	42b5      	cmp	r5, r6
 802e420:	d11a      	bne.n	802e458 <_printf_common+0xc8>
 802e422:	2000      	movs	r0, #0
 802e424:	e008      	b.n	802e438 <_printf_common+0xa8>
 802e426:	2301      	movs	r3, #1
 802e428:	4652      	mov	r2, sl
 802e42a:	4649      	mov	r1, r9
 802e42c:	4638      	mov	r0, r7
 802e42e:	47c0      	blx	r8
 802e430:	3001      	adds	r0, #1
 802e432:	d103      	bne.n	802e43c <_printf_common+0xac>
 802e434:	f04f 30ff 	mov.w	r0, #4294967295
 802e438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e43c:	3501      	adds	r5, #1
 802e43e:	e7c6      	b.n	802e3ce <_printf_common+0x3e>
 802e440:	18e1      	adds	r1, r4, r3
 802e442:	1c5a      	adds	r2, r3, #1
 802e444:	2030      	movs	r0, #48	; 0x30
 802e446:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e44a:	4422      	add	r2, r4
 802e44c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e450:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e454:	3302      	adds	r3, #2
 802e456:	e7c7      	b.n	802e3e8 <_printf_common+0x58>
 802e458:	2301      	movs	r3, #1
 802e45a:	4622      	mov	r2, r4
 802e45c:	4649      	mov	r1, r9
 802e45e:	4638      	mov	r0, r7
 802e460:	47c0      	blx	r8
 802e462:	3001      	adds	r0, #1
 802e464:	d0e6      	beq.n	802e434 <_printf_common+0xa4>
 802e466:	3601      	adds	r6, #1
 802e468:	e7d9      	b.n	802e41e <_printf_common+0x8e>
	...

0802e46c <_printf_i>:
 802e46c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e470:	7e0f      	ldrb	r7, [r1, #24]
 802e472:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e474:	2f78      	cmp	r7, #120	; 0x78
 802e476:	4691      	mov	r9, r2
 802e478:	4680      	mov	r8, r0
 802e47a:	460c      	mov	r4, r1
 802e47c:	469a      	mov	sl, r3
 802e47e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e482:	d807      	bhi.n	802e494 <_printf_i+0x28>
 802e484:	2f62      	cmp	r7, #98	; 0x62
 802e486:	d80a      	bhi.n	802e49e <_printf_i+0x32>
 802e488:	2f00      	cmp	r7, #0
 802e48a:	f000 80d4 	beq.w	802e636 <_printf_i+0x1ca>
 802e48e:	2f58      	cmp	r7, #88	; 0x58
 802e490:	f000 80c0 	beq.w	802e614 <_printf_i+0x1a8>
 802e494:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e498:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e49c:	e03a      	b.n	802e514 <_printf_i+0xa8>
 802e49e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e4a2:	2b15      	cmp	r3, #21
 802e4a4:	d8f6      	bhi.n	802e494 <_printf_i+0x28>
 802e4a6:	a101      	add	r1, pc, #4	; (adr r1, 802e4ac <_printf_i+0x40>)
 802e4a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e4ac:	0802e505 	.word	0x0802e505
 802e4b0:	0802e519 	.word	0x0802e519
 802e4b4:	0802e495 	.word	0x0802e495
 802e4b8:	0802e495 	.word	0x0802e495
 802e4bc:	0802e495 	.word	0x0802e495
 802e4c0:	0802e495 	.word	0x0802e495
 802e4c4:	0802e519 	.word	0x0802e519
 802e4c8:	0802e495 	.word	0x0802e495
 802e4cc:	0802e495 	.word	0x0802e495
 802e4d0:	0802e495 	.word	0x0802e495
 802e4d4:	0802e495 	.word	0x0802e495
 802e4d8:	0802e61d 	.word	0x0802e61d
 802e4dc:	0802e545 	.word	0x0802e545
 802e4e0:	0802e5d7 	.word	0x0802e5d7
 802e4e4:	0802e495 	.word	0x0802e495
 802e4e8:	0802e495 	.word	0x0802e495
 802e4ec:	0802e63f 	.word	0x0802e63f
 802e4f0:	0802e495 	.word	0x0802e495
 802e4f4:	0802e545 	.word	0x0802e545
 802e4f8:	0802e495 	.word	0x0802e495
 802e4fc:	0802e495 	.word	0x0802e495
 802e500:	0802e5df 	.word	0x0802e5df
 802e504:	682b      	ldr	r3, [r5, #0]
 802e506:	1d1a      	adds	r2, r3, #4
 802e508:	681b      	ldr	r3, [r3, #0]
 802e50a:	602a      	str	r2, [r5, #0]
 802e50c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e510:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e514:	2301      	movs	r3, #1
 802e516:	e09f      	b.n	802e658 <_printf_i+0x1ec>
 802e518:	6820      	ldr	r0, [r4, #0]
 802e51a:	682b      	ldr	r3, [r5, #0]
 802e51c:	0607      	lsls	r7, r0, #24
 802e51e:	f103 0104 	add.w	r1, r3, #4
 802e522:	6029      	str	r1, [r5, #0]
 802e524:	d501      	bpl.n	802e52a <_printf_i+0xbe>
 802e526:	681e      	ldr	r6, [r3, #0]
 802e528:	e003      	b.n	802e532 <_printf_i+0xc6>
 802e52a:	0646      	lsls	r6, r0, #25
 802e52c:	d5fb      	bpl.n	802e526 <_printf_i+0xba>
 802e52e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802e532:	2e00      	cmp	r6, #0
 802e534:	da03      	bge.n	802e53e <_printf_i+0xd2>
 802e536:	232d      	movs	r3, #45	; 0x2d
 802e538:	4276      	negs	r6, r6
 802e53a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e53e:	485a      	ldr	r0, [pc, #360]	; (802e6a8 <_printf_i+0x23c>)
 802e540:	230a      	movs	r3, #10
 802e542:	e012      	b.n	802e56a <_printf_i+0xfe>
 802e544:	682b      	ldr	r3, [r5, #0]
 802e546:	6820      	ldr	r0, [r4, #0]
 802e548:	1d19      	adds	r1, r3, #4
 802e54a:	6029      	str	r1, [r5, #0]
 802e54c:	0605      	lsls	r5, r0, #24
 802e54e:	d501      	bpl.n	802e554 <_printf_i+0xe8>
 802e550:	681e      	ldr	r6, [r3, #0]
 802e552:	e002      	b.n	802e55a <_printf_i+0xee>
 802e554:	0641      	lsls	r1, r0, #25
 802e556:	d5fb      	bpl.n	802e550 <_printf_i+0xe4>
 802e558:	881e      	ldrh	r6, [r3, #0]
 802e55a:	4853      	ldr	r0, [pc, #332]	; (802e6a8 <_printf_i+0x23c>)
 802e55c:	2f6f      	cmp	r7, #111	; 0x6f
 802e55e:	bf0c      	ite	eq
 802e560:	2308      	moveq	r3, #8
 802e562:	230a      	movne	r3, #10
 802e564:	2100      	movs	r1, #0
 802e566:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e56a:	6865      	ldr	r5, [r4, #4]
 802e56c:	60a5      	str	r5, [r4, #8]
 802e56e:	2d00      	cmp	r5, #0
 802e570:	bfa2      	ittt	ge
 802e572:	6821      	ldrge	r1, [r4, #0]
 802e574:	f021 0104 	bicge.w	r1, r1, #4
 802e578:	6021      	strge	r1, [r4, #0]
 802e57a:	b90e      	cbnz	r6, 802e580 <_printf_i+0x114>
 802e57c:	2d00      	cmp	r5, #0
 802e57e:	d04b      	beq.n	802e618 <_printf_i+0x1ac>
 802e580:	4615      	mov	r5, r2
 802e582:	fbb6 f1f3 	udiv	r1, r6, r3
 802e586:	fb03 6711 	mls	r7, r3, r1, r6
 802e58a:	5dc7      	ldrb	r7, [r0, r7]
 802e58c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e590:	4637      	mov	r7, r6
 802e592:	42bb      	cmp	r3, r7
 802e594:	460e      	mov	r6, r1
 802e596:	d9f4      	bls.n	802e582 <_printf_i+0x116>
 802e598:	2b08      	cmp	r3, #8
 802e59a:	d10b      	bne.n	802e5b4 <_printf_i+0x148>
 802e59c:	6823      	ldr	r3, [r4, #0]
 802e59e:	07de      	lsls	r6, r3, #31
 802e5a0:	d508      	bpl.n	802e5b4 <_printf_i+0x148>
 802e5a2:	6923      	ldr	r3, [r4, #16]
 802e5a4:	6861      	ldr	r1, [r4, #4]
 802e5a6:	4299      	cmp	r1, r3
 802e5a8:	bfde      	ittt	le
 802e5aa:	2330      	movle	r3, #48	; 0x30
 802e5ac:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e5b0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e5b4:	1b52      	subs	r2, r2, r5
 802e5b6:	6122      	str	r2, [r4, #16]
 802e5b8:	f8cd a000 	str.w	sl, [sp]
 802e5bc:	464b      	mov	r3, r9
 802e5be:	aa03      	add	r2, sp, #12
 802e5c0:	4621      	mov	r1, r4
 802e5c2:	4640      	mov	r0, r8
 802e5c4:	f7ff fee4 	bl	802e390 <_printf_common>
 802e5c8:	3001      	adds	r0, #1
 802e5ca:	d14a      	bne.n	802e662 <_printf_i+0x1f6>
 802e5cc:	f04f 30ff 	mov.w	r0, #4294967295
 802e5d0:	b004      	add	sp, #16
 802e5d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e5d6:	6823      	ldr	r3, [r4, #0]
 802e5d8:	f043 0320 	orr.w	r3, r3, #32
 802e5dc:	6023      	str	r3, [r4, #0]
 802e5de:	4833      	ldr	r0, [pc, #204]	; (802e6ac <_printf_i+0x240>)
 802e5e0:	2778      	movs	r7, #120	; 0x78
 802e5e2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802e5e6:	6823      	ldr	r3, [r4, #0]
 802e5e8:	6829      	ldr	r1, [r5, #0]
 802e5ea:	061f      	lsls	r7, r3, #24
 802e5ec:	f851 6b04 	ldr.w	r6, [r1], #4
 802e5f0:	d402      	bmi.n	802e5f8 <_printf_i+0x18c>
 802e5f2:	065f      	lsls	r7, r3, #25
 802e5f4:	bf48      	it	mi
 802e5f6:	b2b6      	uxthmi	r6, r6
 802e5f8:	07df      	lsls	r7, r3, #31
 802e5fa:	bf48      	it	mi
 802e5fc:	f043 0320 	orrmi.w	r3, r3, #32
 802e600:	6029      	str	r1, [r5, #0]
 802e602:	bf48      	it	mi
 802e604:	6023      	strmi	r3, [r4, #0]
 802e606:	b91e      	cbnz	r6, 802e610 <_printf_i+0x1a4>
 802e608:	6823      	ldr	r3, [r4, #0]
 802e60a:	f023 0320 	bic.w	r3, r3, #32
 802e60e:	6023      	str	r3, [r4, #0]
 802e610:	2310      	movs	r3, #16
 802e612:	e7a7      	b.n	802e564 <_printf_i+0xf8>
 802e614:	4824      	ldr	r0, [pc, #144]	; (802e6a8 <_printf_i+0x23c>)
 802e616:	e7e4      	b.n	802e5e2 <_printf_i+0x176>
 802e618:	4615      	mov	r5, r2
 802e61a:	e7bd      	b.n	802e598 <_printf_i+0x12c>
 802e61c:	682b      	ldr	r3, [r5, #0]
 802e61e:	6826      	ldr	r6, [r4, #0]
 802e620:	6961      	ldr	r1, [r4, #20]
 802e622:	1d18      	adds	r0, r3, #4
 802e624:	6028      	str	r0, [r5, #0]
 802e626:	0635      	lsls	r5, r6, #24
 802e628:	681b      	ldr	r3, [r3, #0]
 802e62a:	d501      	bpl.n	802e630 <_printf_i+0x1c4>
 802e62c:	6019      	str	r1, [r3, #0]
 802e62e:	e002      	b.n	802e636 <_printf_i+0x1ca>
 802e630:	0670      	lsls	r0, r6, #25
 802e632:	d5fb      	bpl.n	802e62c <_printf_i+0x1c0>
 802e634:	8019      	strh	r1, [r3, #0]
 802e636:	2300      	movs	r3, #0
 802e638:	6123      	str	r3, [r4, #16]
 802e63a:	4615      	mov	r5, r2
 802e63c:	e7bc      	b.n	802e5b8 <_printf_i+0x14c>
 802e63e:	682b      	ldr	r3, [r5, #0]
 802e640:	1d1a      	adds	r2, r3, #4
 802e642:	602a      	str	r2, [r5, #0]
 802e644:	681d      	ldr	r5, [r3, #0]
 802e646:	6862      	ldr	r2, [r4, #4]
 802e648:	2100      	movs	r1, #0
 802e64a:	4628      	mov	r0, r5
 802e64c:	f7d1 fe30 	bl	80002b0 <memchr>
 802e650:	b108      	cbz	r0, 802e656 <_printf_i+0x1ea>
 802e652:	1b40      	subs	r0, r0, r5
 802e654:	6060      	str	r0, [r4, #4]
 802e656:	6863      	ldr	r3, [r4, #4]
 802e658:	6123      	str	r3, [r4, #16]
 802e65a:	2300      	movs	r3, #0
 802e65c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e660:	e7aa      	b.n	802e5b8 <_printf_i+0x14c>
 802e662:	6923      	ldr	r3, [r4, #16]
 802e664:	462a      	mov	r2, r5
 802e666:	4649      	mov	r1, r9
 802e668:	4640      	mov	r0, r8
 802e66a:	47d0      	blx	sl
 802e66c:	3001      	adds	r0, #1
 802e66e:	d0ad      	beq.n	802e5cc <_printf_i+0x160>
 802e670:	6823      	ldr	r3, [r4, #0]
 802e672:	079b      	lsls	r3, r3, #30
 802e674:	d413      	bmi.n	802e69e <_printf_i+0x232>
 802e676:	68e0      	ldr	r0, [r4, #12]
 802e678:	9b03      	ldr	r3, [sp, #12]
 802e67a:	4298      	cmp	r0, r3
 802e67c:	bfb8      	it	lt
 802e67e:	4618      	movlt	r0, r3
 802e680:	e7a6      	b.n	802e5d0 <_printf_i+0x164>
 802e682:	2301      	movs	r3, #1
 802e684:	4632      	mov	r2, r6
 802e686:	4649      	mov	r1, r9
 802e688:	4640      	mov	r0, r8
 802e68a:	47d0      	blx	sl
 802e68c:	3001      	adds	r0, #1
 802e68e:	d09d      	beq.n	802e5cc <_printf_i+0x160>
 802e690:	3501      	adds	r5, #1
 802e692:	68e3      	ldr	r3, [r4, #12]
 802e694:	9903      	ldr	r1, [sp, #12]
 802e696:	1a5b      	subs	r3, r3, r1
 802e698:	42ab      	cmp	r3, r5
 802e69a:	dcf2      	bgt.n	802e682 <_printf_i+0x216>
 802e69c:	e7eb      	b.n	802e676 <_printf_i+0x20a>
 802e69e:	2500      	movs	r5, #0
 802e6a0:	f104 0619 	add.w	r6, r4, #25
 802e6a4:	e7f5      	b.n	802e692 <_printf_i+0x226>
 802e6a6:	bf00      	nop
 802e6a8:	08045c1d 	.word	0x08045c1d
 802e6ac:	08045c2e 	.word	0x08045c2e

0802e6b0 <__sflush_r>:
 802e6b0:	898a      	ldrh	r2, [r1, #12]
 802e6b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e6b6:	4605      	mov	r5, r0
 802e6b8:	0710      	lsls	r0, r2, #28
 802e6ba:	460c      	mov	r4, r1
 802e6bc:	d458      	bmi.n	802e770 <__sflush_r+0xc0>
 802e6be:	684b      	ldr	r3, [r1, #4]
 802e6c0:	2b00      	cmp	r3, #0
 802e6c2:	dc05      	bgt.n	802e6d0 <__sflush_r+0x20>
 802e6c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802e6c6:	2b00      	cmp	r3, #0
 802e6c8:	dc02      	bgt.n	802e6d0 <__sflush_r+0x20>
 802e6ca:	2000      	movs	r0, #0
 802e6cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e6d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e6d2:	2e00      	cmp	r6, #0
 802e6d4:	d0f9      	beq.n	802e6ca <__sflush_r+0x1a>
 802e6d6:	2300      	movs	r3, #0
 802e6d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802e6dc:	682f      	ldr	r7, [r5, #0]
 802e6de:	6a21      	ldr	r1, [r4, #32]
 802e6e0:	602b      	str	r3, [r5, #0]
 802e6e2:	d032      	beq.n	802e74a <__sflush_r+0x9a>
 802e6e4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802e6e6:	89a3      	ldrh	r3, [r4, #12]
 802e6e8:	075a      	lsls	r2, r3, #29
 802e6ea:	d505      	bpl.n	802e6f8 <__sflush_r+0x48>
 802e6ec:	6863      	ldr	r3, [r4, #4]
 802e6ee:	1ac0      	subs	r0, r0, r3
 802e6f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802e6f2:	b10b      	cbz	r3, 802e6f8 <__sflush_r+0x48>
 802e6f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802e6f6:	1ac0      	subs	r0, r0, r3
 802e6f8:	2300      	movs	r3, #0
 802e6fa:	4602      	mov	r2, r0
 802e6fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802e6fe:	6a21      	ldr	r1, [r4, #32]
 802e700:	4628      	mov	r0, r5
 802e702:	47b0      	blx	r6
 802e704:	1c43      	adds	r3, r0, #1
 802e706:	89a3      	ldrh	r3, [r4, #12]
 802e708:	d106      	bne.n	802e718 <__sflush_r+0x68>
 802e70a:	6829      	ldr	r1, [r5, #0]
 802e70c:	291d      	cmp	r1, #29
 802e70e:	d82b      	bhi.n	802e768 <__sflush_r+0xb8>
 802e710:	4a29      	ldr	r2, [pc, #164]	; (802e7b8 <__sflush_r+0x108>)
 802e712:	410a      	asrs	r2, r1
 802e714:	07d6      	lsls	r6, r2, #31
 802e716:	d427      	bmi.n	802e768 <__sflush_r+0xb8>
 802e718:	2200      	movs	r2, #0
 802e71a:	6062      	str	r2, [r4, #4]
 802e71c:	04d9      	lsls	r1, r3, #19
 802e71e:	6922      	ldr	r2, [r4, #16]
 802e720:	6022      	str	r2, [r4, #0]
 802e722:	d504      	bpl.n	802e72e <__sflush_r+0x7e>
 802e724:	1c42      	adds	r2, r0, #1
 802e726:	d101      	bne.n	802e72c <__sflush_r+0x7c>
 802e728:	682b      	ldr	r3, [r5, #0]
 802e72a:	b903      	cbnz	r3, 802e72e <__sflush_r+0x7e>
 802e72c:	6560      	str	r0, [r4, #84]	; 0x54
 802e72e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e730:	602f      	str	r7, [r5, #0]
 802e732:	2900      	cmp	r1, #0
 802e734:	d0c9      	beq.n	802e6ca <__sflush_r+0x1a>
 802e736:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e73a:	4299      	cmp	r1, r3
 802e73c:	d002      	beq.n	802e744 <__sflush_r+0x94>
 802e73e:	4628      	mov	r0, r5
 802e740:	f7ff fc96 	bl	802e070 <_free_r>
 802e744:	2000      	movs	r0, #0
 802e746:	6360      	str	r0, [r4, #52]	; 0x34
 802e748:	e7c0      	b.n	802e6cc <__sflush_r+0x1c>
 802e74a:	2301      	movs	r3, #1
 802e74c:	4628      	mov	r0, r5
 802e74e:	47b0      	blx	r6
 802e750:	1c41      	adds	r1, r0, #1
 802e752:	d1c8      	bne.n	802e6e6 <__sflush_r+0x36>
 802e754:	682b      	ldr	r3, [r5, #0]
 802e756:	2b00      	cmp	r3, #0
 802e758:	d0c5      	beq.n	802e6e6 <__sflush_r+0x36>
 802e75a:	2b1d      	cmp	r3, #29
 802e75c:	d001      	beq.n	802e762 <__sflush_r+0xb2>
 802e75e:	2b16      	cmp	r3, #22
 802e760:	d101      	bne.n	802e766 <__sflush_r+0xb6>
 802e762:	602f      	str	r7, [r5, #0]
 802e764:	e7b1      	b.n	802e6ca <__sflush_r+0x1a>
 802e766:	89a3      	ldrh	r3, [r4, #12]
 802e768:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e76c:	81a3      	strh	r3, [r4, #12]
 802e76e:	e7ad      	b.n	802e6cc <__sflush_r+0x1c>
 802e770:	690f      	ldr	r7, [r1, #16]
 802e772:	2f00      	cmp	r7, #0
 802e774:	d0a9      	beq.n	802e6ca <__sflush_r+0x1a>
 802e776:	0793      	lsls	r3, r2, #30
 802e778:	680e      	ldr	r6, [r1, #0]
 802e77a:	bf08      	it	eq
 802e77c:	694b      	ldreq	r3, [r1, #20]
 802e77e:	600f      	str	r7, [r1, #0]
 802e780:	bf18      	it	ne
 802e782:	2300      	movne	r3, #0
 802e784:	eba6 0807 	sub.w	r8, r6, r7
 802e788:	608b      	str	r3, [r1, #8]
 802e78a:	f1b8 0f00 	cmp.w	r8, #0
 802e78e:	dd9c      	ble.n	802e6ca <__sflush_r+0x1a>
 802e790:	6a21      	ldr	r1, [r4, #32]
 802e792:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802e794:	4643      	mov	r3, r8
 802e796:	463a      	mov	r2, r7
 802e798:	4628      	mov	r0, r5
 802e79a:	47b0      	blx	r6
 802e79c:	2800      	cmp	r0, #0
 802e79e:	dc06      	bgt.n	802e7ae <__sflush_r+0xfe>
 802e7a0:	89a3      	ldrh	r3, [r4, #12]
 802e7a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802e7a6:	81a3      	strh	r3, [r4, #12]
 802e7a8:	f04f 30ff 	mov.w	r0, #4294967295
 802e7ac:	e78e      	b.n	802e6cc <__sflush_r+0x1c>
 802e7ae:	4407      	add	r7, r0
 802e7b0:	eba8 0800 	sub.w	r8, r8, r0
 802e7b4:	e7e9      	b.n	802e78a <__sflush_r+0xda>
 802e7b6:	bf00      	nop
 802e7b8:	dfbffffe 	.word	0xdfbffffe

0802e7bc <_fflush_r>:
 802e7bc:	b538      	push	{r3, r4, r5, lr}
 802e7be:	690b      	ldr	r3, [r1, #16]
 802e7c0:	4605      	mov	r5, r0
 802e7c2:	460c      	mov	r4, r1
 802e7c4:	b913      	cbnz	r3, 802e7cc <_fflush_r+0x10>
 802e7c6:	2500      	movs	r5, #0
 802e7c8:	4628      	mov	r0, r5
 802e7ca:	bd38      	pop	{r3, r4, r5, pc}
 802e7cc:	b118      	cbz	r0, 802e7d6 <_fflush_r+0x1a>
 802e7ce:	6a03      	ldr	r3, [r0, #32]
 802e7d0:	b90b      	cbnz	r3, 802e7d6 <_fflush_r+0x1a>
 802e7d2:	f7ff fa2f 	bl	802dc34 <__sinit>
 802e7d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e7da:	2b00      	cmp	r3, #0
 802e7dc:	d0f3      	beq.n	802e7c6 <_fflush_r+0xa>
 802e7de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802e7e0:	07d0      	lsls	r0, r2, #31
 802e7e2:	d404      	bmi.n	802e7ee <_fflush_r+0x32>
 802e7e4:	0599      	lsls	r1, r3, #22
 802e7e6:	d402      	bmi.n	802e7ee <_fflush_r+0x32>
 802e7e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e7ea:	f7ff fbd2 	bl	802df92 <__retarget_lock_acquire_recursive>
 802e7ee:	4628      	mov	r0, r5
 802e7f0:	4621      	mov	r1, r4
 802e7f2:	f7ff ff5d 	bl	802e6b0 <__sflush_r>
 802e7f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802e7f8:	07da      	lsls	r2, r3, #31
 802e7fa:	4605      	mov	r5, r0
 802e7fc:	d4e4      	bmi.n	802e7c8 <_fflush_r+0xc>
 802e7fe:	89a3      	ldrh	r3, [r4, #12]
 802e800:	059b      	lsls	r3, r3, #22
 802e802:	d4e1      	bmi.n	802e7c8 <_fflush_r+0xc>
 802e804:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802e806:	f7ff fbc5 	bl	802df94 <__retarget_lock_release_recursive>
 802e80a:	e7dd      	b.n	802e7c8 <_fflush_r+0xc>

0802e80c <__swbuf_r>:
 802e80c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e80e:	460e      	mov	r6, r1
 802e810:	4614      	mov	r4, r2
 802e812:	4605      	mov	r5, r0
 802e814:	b118      	cbz	r0, 802e81e <__swbuf_r+0x12>
 802e816:	6a03      	ldr	r3, [r0, #32]
 802e818:	b90b      	cbnz	r3, 802e81e <__swbuf_r+0x12>
 802e81a:	f7ff fa0b 	bl	802dc34 <__sinit>
 802e81e:	69a3      	ldr	r3, [r4, #24]
 802e820:	60a3      	str	r3, [r4, #8]
 802e822:	89a3      	ldrh	r3, [r4, #12]
 802e824:	071a      	lsls	r2, r3, #28
 802e826:	d525      	bpl.n	802e874 <__swbuf_r+0x68>
 802e828:	6923      	ldr	r3, [r4, #16]
 802e82a:	b31b      	cbz	r3, 802e874 <__swbuf_r+0x68>
 802e82c:	6823      	ldr	r3, [r4, #0]
 802e82e:	6922      	ldr	r2, [r4, #16]
 802e830:	1a98      	subs	r0, r3, r2
 802e832:	6963      	ldr	r3, [r4, #20]
 802e834:	b2f6      	uxtb	r6, r6
 802e836:	4283      	cmp	r3, r0
 802e838:	4637      	mov	r7, r6
 802e83a:	dc04      	bgt.n	802e846 <__swbuf_r+0x3a>
 802e83c:	4621      	mov	r1, r4
 802e83e:	4628      	mov	r0, r5
 802e840:	f7ff ffbc 	bl	802e7bc <_fflush_r>
 802e844:	b9e0      	cbnz	r0, 802e880 <__swbuf_r+0x74>
 802e846:	68a3      	ldr	r3, [r4, #8]
 802e848:	3b01      	subs	r3, #1
 802e84a:	60a3      	str	r3, [r4, #8]
 802e84c:	6823      	ldr	r3, [r4, #0]
 802e84e:	1c5a      	adds	r2, r3, #1
 802e850:	6022      	str	r2, [r4, #0]
 802e852:	701e      	strb	r6, [r3, #0]
 802e854:	6962      	ldr	r2, [r4, #20]
 802e856:	1c43      	adds	r3, r0, #1
 802e858:	429a      	cmp	r2, r3
 802e85a:	d004      	beq.n	802e866 <__swbuf_r+0x5a>
 802e85c:	89a3      	ldrh	r3, [r4, #12]
 802e85e:	07db      	lsls	r3, r3, #31
 802e860:	d506      	bpl.n	802e870 <__swbuf_r+0x64>
 802e862:	2e0a      	cmp	r6, #10
 802e864:	d104      	bne.n	802e870 <__swbuf_r+0x64>
 802e866:	4621      	mov	r1, r4
 802e868:	4628      	mov	r0, r5
 802e86a:	f7ff ffa7 	bl	802e7bc <_fflush_r>
 802e86e:	b938      	cbnz	r0, 802e880 <__swbuf_r+0x74>
 802e870:	4638      	mov	r0, r7
 802e872:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802e874:	4621      	mov	r1, r4
 802e876:	4628      	mov	r0, r5
 802e878:	f000 f806 	bl	802e888 <__swsetup_r>
 802e87c:	2800      	cmp	r0, #0
 802e87e:	d0d5      	beq.n	802e82c <__swbuf_r+0x20>
 802e880:	f04f 37ff 	mov.w	r7, #4294967295
 802e884:	e7f4      	b.n	802e870 <__swbuf_r+0x64>
	...

0802e888 <__swsetup_r>:
 802e888:	b538      	push	{r3, r4, r5, lr}
 802e88a:	4b2a      	ldr	r3, [pc, #168]	; (802e934 <__swsetup_r+0xac>)
 802e88c:	4605      	mov	r5, r0
 802e88e:	6818      	ldr	r0, [r3, #0]
 802e890:	460c      	mov	r4, r1
 802e892:	b118      	cbz	r0, 802e89c <__swsetup_r+0x14>
 802e894:	6a03      	ldr	r3, [r0, #32]
 802e896:	b90b      	cbnz	r3, 802e89c <__swsetup_r+0x14>
 802e898:	f7ff f9cc 	bl	802dc34 <__sinit>
 802e89c:	89a3      	ldrh	r3, [r4, #12]
 802e89e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e8a2:	0718      	lsls	r0, r3, #28
 802e8a4:	d422      	bmi.n	802e8ec <__swsetup_r+0x64>
 802e8a6:	06d9      	lsls	r1, r3, #27
 802e8a8:	d407      	bmi.n	802e8ba <__swsetup_r+0x32>
 802e8aa:	2309      	movs	r3, #9
 802e8ac:	602b      	str	r3, [r5, #0]
 802e8ae:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802e8b2:	81a3      	strh	r3, [r4, #12]
 802e8b4:	f04f 30ff 	mov.w	r0, #4294967295
 802e8b8:	e034      	b.n	802e924 <__swsetup_r+0x9c>
 802e8ba:	0758      	lsls	r0, r3, #29
 802e8bc:	d512      	bpl.n	802e8e4 <__swsetup_r+0x5c>
 802e8be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e8c0:	b141      	cbz	r1, 802e8d4 <__swsetup_r+0x4c>
 802e8c2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802e8c6:	4299      	cmp	r1, r3
 802e8c8:	d002      	beq.n	802e8d0 <__swsetup_r+0x48>
 802e8ca:	4628      	mov	r0, r5
 802e8cc:	f7ff fbd0 	bl	802e070 <_free_r>
 802e8d0:	2300      	movs	r3, #0
 802e8d2:	6363      	str	r3, [r4, #52]	; 0x34
 802e8d4:	89a3      	ldrh	r3, [r4, #12]
 802e8d6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802e8da:	81a3      	strh	r3, [r4, #12]
 802e8dc:	2300      	movs	r3, #0
 802e8de:	6063      	str	r3, [r4, #4]
 802e8e0:	6923      	ldr	r3, [r4, #16]
 802e8e2:	6023      	str	r3, [r4, #0]
 802e8e4:	89a3      	ldrh	r3, [r4, #12]
 802e8e6:	f043 0308 	orr.w	r3, r3, #8
 802e8ea:	81a3      	strh	r3, [r4, #12]
 802e8ec:	6923      	ldr	r3, [r4, #16]
 802e8ee:	b94b      	cbnz	r3, 802e904 <__swsetup_r+0x7c>
 802e8f0:	89a3      	ldrh	r3, [r4, #12]
 802e8f2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802e8f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802e8fa:	d003      	beq.n	802e904 <__swsetup_r+0x7c>
 802e8fc:	4621      	mov	r1, r4
 802e8fe:	4628      	mov	r0, r5
 802e900:	f000 f840 	bl	802e984 <__smakebuf_r>
 802e904:	89a0      	ldrh	r0, [r4, #12]
 802e906:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802e90a:	f010 0301 	ands.w	r3, r0, #1
 802e90e:	d00a      	beq.n	802e926 <__swsetup_r+0x9e>
 802e910:	2300      	movs	r3, #0
 802e912:	60a3      	str	r3, [r4, #8]
 802e914:	6963      	ldr	r3, [r4, #20]
 802e916:	425b      	negs	r3, r3
 802e918:	61a3      	str	r3, [r4, #24]
 802e91a:	6923      	ldr	r3, [r4, #16]
 802e91c:	b943      	cbnz	r3, 802e930 <__swsetup_r+0xa8>
 802e91e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802e922:	d1c4      	bne.n	802e8ae <__swsetup_r+0x26>
 802e924:	bd38      	pop	{r3, r4, r5, pc}
 802e926:	0781      	lsls	r1, r0, #30
 802e928:	bf58      	it	pl
 802e92a:	6963      	ldrpl	r3, [r4, #20]
 802e92c:	60a3      	str	r3, [r4, #8]
 802e92e:	e7f4      	b.n	802e91a <__swsetup_r+0x92>
 802e930:	2000      	movs	r0, #0
 802e932:	e7f7      	b.n	802e924 <__swsetup_r+0x9c>
 802e934:	20000164 	.word	0x20000164

0802e938 <__swhatbuf_r>:
 802e938:	b570      	push	{r4, r5, r6, lr}
 802e93a:	460c      	mov	r4, r1
 802e93c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e940:	2900      	cmp	r1, #0
 802e942:	b096      	sub	sp, #88	; 0x58
 802e944:	4615      	mov	r5, r2
 802e946:	461e      	mov	r6, r3
 802e948:	da0d      	bge.n	802e966 <__swhatbuf_r+0x2e>
 802e94a:	89a3      	ldrh	r3, [r4, #12]
 802e94c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802e950:	f04f 0100 	mov.w	r1, #0
 802e954:	bf0c      	ite	eq
 802e956:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802e95a:	2340      	movne	r3, #64	; 0x40
 802e95c:	2000      	movs	r0, #0
 802e95e:	6031      	str	r1, [r6, #0]
 802e960:	602b      	str	r3, [r5, #0]
 802e962:	b016      	add	sp, #88	; 0x58
 802e964:	bd70      	pop	{r4, r5, r6, pc}
 802e966:	466a      	mov	r2, sp
 802e968:	f000 f848 	bl	802e9fc <_fstat_r>
 802e96c:	2800      	cmp	r0, #0
 802e96e:	dbec      	blt.n	802e94a <__swhatbuf_r+0x12>
 802e970:	9901      	ldr	r1, [sp, #4]
 802e972:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802e976:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802e97a:	4259      	negs	r1, r3
 802e97c:	4159      	adcs	r1, r3
 802e97e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802e982:	e7eb      	b.n	802e95c <__swhatbuf_r+0x24>

0802e984 <__smakebuf_r>:
 802e984:	898b      	ldrh	r3, [r1, #12]
 802e986:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802e988:	079d      	lsls	r5, r3, #30
 802e98a:	4606      	mov	r6, r0
 802e98c:	460c      	mov	r4, r1
 802e98e:	d507      	bpl.n	802e9a0 <__smakebuf_r+0x1c>
 802e990:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802e994:	6023      	str	r3, [r4, #0]
 802e996:	6123      	str	r3, [r4, #16]
 802e998:	2301      	movs	r3, #1
 802e99a:	6163      	str	r3, [r4, #20]
 802e99c:	b002      	add	sp, #8
 802e99e:	bd70      	pop	{r4, r5, r6, pc}
 802e9a0:	ab01      	add	r3, sp, #4
 802e9a2:	466a      	mov	r2, sp
 802e9a4:	f7ff ffc8 	bl	802e938 <__swhatbuf_r>
 802e9a8:	9900      	ldr	r1, [sp, #0]
 802e9aa:	4605      	mov	r5, r0
 802e9ac:	4630      	mov	r0, r6
 802e9ae:	f7ff f81b 	bl	802d9e8 <_malloc_r>
 802e9b2:	b948      	cbnz	r0, 802e9c8 <__smakebuf_r+0x44>
 802e9b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802e9b8:	059a      	lsls	r2, r3, #22
 802e9ba:	d4ef      	bmi.n	802e99c <__smakebuf_r+0x18>
 802e9bc:	f023 0303 	bic.w	r3, r3, #3
 802e9c0:	f043 0302 	orr.w	r3, r3, #2
 802e9c4:	81a3      	strh	r3, [r4, #12]
 802e9c6:	e7e3      	b.n	802e990 <__smakebuf_r+0xc>
 802e9c8:	89a3      	ldrh	r3, [r4, #12]
 802e9ca:	6020      	str	r0, [r4, #0]
 802e9cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802e9d0:	81a3      	strh	r3, [r4, #12]
 802e9d2:	9b00      	ldr	r3, [sp, #0]
 802e9d4:	6163      	str	r3, [r4, #20]
 802e9d6:	9b01      	ldr	r3, [sp, #4]
 802e9d8:	6120      	str	r0, [r4, #16]
 802e9da:	b15b      	cbz	r3, 802e9f4 <__smakebuf_r+0x70>
 802e9dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802e9e0:	4630      	mov	r0, r6
 802e9e2:	f000 f81d 	bl	802ea20 <_isatty_r>
 802e9e6:	b128      	cbz	r0, 802e9f4 <__smakebuf_r+0x70>
 802e9e8:	89a3      	ldrh	r3, [r4, #12]
 802e9ea:	f023 0303 	bic.w	r3, r3, #3
 802e9ee:	f043 0301 	orr.w	r3, r3, #1
 802e9f2:	81a3      	strh	r3, [r4, #12]
 802e9f4:	89a3      	ldrh	r3, [r4, #12]
 802e9f6:	431d      	orrs	r5, r3
 802e9f8:	81a5      	strh	r5, [r4, #12]
 802e9fa:	e7cf      	b.n	802e99c <__smakebuf_r+0x18>

0802e9fc <_fstat_r>:
 802e9fc:	b538      	push	{r3, r4, r5, lr}
 802e9fe:	4d07      	ldr	r5, [pc, #28]	; (802ea1c <_fstat_r+0x20>)
 802ea00:	2300      	movs	r3, #0
 802ea02:	4604      	mov	r4, r0
 802ea04:	4608      	mov	r0, r1
 802ea06:	4611      	mov	r1, r2
 802ea08:	602b      	str	r3, [r5, #0]
 802ea0a:	f7d3 ff6b 	bl	80028e4 <_fstat>
 802ea0e:	1c43      	adds	r3, r0, #1
 802ea10:	d102      	bne.n	802ea18 <_fstat_r+0x1c>
 802ea12:	682b      	ldr	r3, [r5, #0]
 802ea14:	b103      	cbz	r3, 802ea18 <_fstat_r+0x1c>
 802ea16:	6023      	str	r3, [r4, #0]
 802ea18:	bd38      	pop	{r3, r4, r5, pc}
 802ea1a:	bf00      	nop
 802ea1c:	200142d4 	.word	0x200142d4

0802ea20 <_isatty_r>:
 802ea20:	b538      	push	{r3, r4, r5, lr}
 802ea22:	4d06      	ldr	r5, [pc, #24]	; (802ea3c <_isatty_r+0x1c>)
 802ea24:	2300      	movs	r3, #0
 802ea26:	4604      	mov	r4, r0
 802ea28:	4608      	mov	r0, r1
 802ea2a:	602b      	str	r3, [r5, #0]
 802ea2c:	f7d3 ff60 	bl	80028f0 <_isatty>
 802ea30:	1c43      	adds	r3, r0, #1
 802ea32:	d102      	bne.n	802ea3a <_isatty_r+0x1a>
 802ea34:	682b      	ldr	r3, [r5, #0]
 802ea36:	b103      	cbz	r3, 802ea3a <_isatty_r+0x1a>
 802ea38:	6023      	str	r3, [r4, #0]
 802ea3a:	bd38      	pop	{r3, r4, r5, pc}
 802ea3c:	200142d4 	.word	0x200142d4

0802ea40 <_init>:
 802ea40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea42:	bf00      	nop
 802ea44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ea46:	bc08      	pop	{r3}
 802ea48:	469e      	mov	lr, r3
 802ea4a:	4770      	bx	lr

0802ea4c <_fini>:
 802ea4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea4e:	bf00      	nop
 802ea50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ea52:	bc08      	pop	{r3}
 802ea54:	469e      	mov	lr, r3
 802ea56:	4770      	bx	lr

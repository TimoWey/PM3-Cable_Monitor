
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002cb38  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802cce8  0802cce8  0003cce8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043e8c  08043e8c  00053e8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047b84  08047b84  00057b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000680  08047dd0  08047dd0  00057dd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  08048450  08048450  00058450  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cd540  080cd540  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080cd540  080cd540  000dd540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cd548  080cd548  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cd548  080cd548  000dd548  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cd55c  080cd55c  000dd55c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080cd560  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000170  080cd6cc  000e0170  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014474  080cd6cc  000e4474  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091af1  00000000  00000000  000e02ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00171dbf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002256e8  00000000  00000000  00171e52  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c41e  00000000  00000000  0039753a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004328  00000000  00000000  003c3958  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f4ac  00000000  00000000  003c7c80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d36  00000000  00000000  004e712c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003114d  00000000  00000000  004eee62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8cc  00000000  00000000  0051ffaf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c770  00000000  00000000  0055a87c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00566fec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056a364  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000170 	.word	0x20000170
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802ccd0 	.word	0x0802ccd0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000174 	.word	0x20000174
 80001ec:	0802ccd0 	.word	0x0802ccd0

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f9b3 	bl	80099e0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fdad 	bl	802c1d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa75 	bl	8000b6c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cd560 	.word	0x080cd560
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 8000694:	20000170 	.word	0x20000170
  ldr  r3, = _ebss
 8000698:	20014474 	.word	0x20014474

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 fab9 	bl	8009d5c <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 fb23 	bl	8009e58 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f9f2 	bl	8009c18 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 faae 	bl	8009d98 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 faa0 	bl	8009d84 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	2000018c 	.word	0x2000018c

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fed9 	bl	8001630 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fec5 	bl	800162c <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f029 fa98 	bl	8029e28 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f029 fb14 	bl	8029f30 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 ff7d 	bl	802a80c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe8f 	bl	8001634 <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f029 fa0d 	bl	8029d58 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe75 	bl	8001634 <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00d fa1a 	bl	800ddac <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c19      	ldr	r4, [pc, #100]	; (80009e4 <StartTimeoutTask+0x68>)
 8000980:	f8df 8074 	ldr.w	r8, [pc, #116]	; 80009f8 <StartTimeoutTask+0x7c>
 8000984:	4e18      	ldr	r6, [pc, #96]	; (80009e8 <StartTimeoutTask+0x6c>)
 8000986:	4d19      	ldr	r5, [pc, #100]	; (80009ec <StartTimeoutTask+0x70>)
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000988:	4f19      	ldr	r7, [pc, #100]	; (80009f0 <StartTimeoutTask+0x74>)
	  sleep_timeout_value--;
 800098a:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098c:	4915      	ldr	r1, [pc, #84]	; (80009e4 <StartTimeoutTask+0x68>)
 800098e:	2300      	movs	r3, #0
 8000990:	461a      	mov	r2, r3
	  sleep_timeout_value--;
 8000992:	f100 3cff 	add.w	ip, r0, #4294967295
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000996:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800099a:	f8c4 c000 	str.w	ip, [r4]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800099e:	f00d fb01 	bl	800dfa4 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80009a2:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80009a4:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a6:	4638      	mov	r0, r7
 80009a8:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009aa:	b912      	cbnz	r2, 80009b2 <StartTimeoutTask+0x36>
		  sleep_timeout_value = 60;
 80009ac:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009ae:	f009 fc27 	bl	800a200 <HAL_GPIO_WritePin>
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009b2:	4810      	ldr	r0, [pc, #64]	; (80009f4 <StartTimeoutTask+0x78>)
 80009b4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b8:	f009 fc26 	bl	800a208 <HAL_GPIO_TogglePin>

	  //pwm test
	  static uint8_t prescaler = 140;
	  HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80009bc:	2100      	movs	r1, #0
 80009be:	4630      	mov	r0, r6
 80009c0:	f00c fd1c 	bl	800d3fc <HAL_TIM_PWM_Stop>
	  htim14.Init.Prescaler = prescaler-1;
 80009c4:	782b      	ldrb	r3, [r5, #0]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80009c6:	2100      	movs	r1, #0
	  htim14.Init.Prescaler = prescaler-1;
 80009c8:	3b01      	subs	r3, #1
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80009ca:	4630      	mov	r0, r6
	  htim14.Init.Prescaler = prescaler-1;
 80009cc:	6073      	str	r3, [r6, #4]
	  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80009ce:	f00c fca5 	bl	800d31c <HAL_TIM_PWM_Start>
	  prescaler = prescaler + 10;
 80009d2:	782b      	ldrb	r3, [r5, #0]
	  if(prescaler > 420)
	  {
		  prescaler = 140;
	  }

	  osDelay(1000);
 80009d4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
	  prescaler = prescaler + 10;
 80009d8:	330a      	adds	r3, #10
 80009da:	702b      	strb	r3, [r5, #0]
	  osDelay(1000);
 80009dc:	f00d f9e6 	bl	800ddac <osDelay>
  {
 80009e0:	e7d3      	b.n	800098a <StartTimeoutTask+0xe>
 80009e2:	bf00      	nop
 80009e4:	20000010 	.word	0x20000010
 80009e8:	20000374 	.word	0x20000374
 80009ec:	2000000c 	.word	0x2000000c
 80009f0:	40021000 	.word	0x40021000
 80009f4:	40021800 	.word	0x40021800
 80009f8:	200001d8 	.word	0x200001d8

080009fc <updateGUI_test>:
	return sleep_timeout_value;
 80009fc:	4b01      	ldr	r3, [pc, #4]	; (8000a04 <updateGUI_test+0x8>)
}
 80009fe:	6818      	ldr	r0, [r3, #0]
 8000a00:	4770      	bx	lr
 8000a02:	bf00      	nop
 8000a04:	20000010 	.word	0x20000010

08000a08 <gyro_disable>:
{
 8000a08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a0a:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8000a0c:	4e1f      	ldr	r6, [pc, #124]	; (8000a8c <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8000a0e:	4d20      	ldr	r5, [pc, #128]	; (8000a90 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a10:	4c20      	ldr	r4, [pc, #128]	; (8000a94 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8000a12:	2700      	movs	r7, #0
 8000a14:	9700      	str	r7, [sp, #0]
 8000a16:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a18:	f043 0304 	orr.w	r3, r3, #4
 8000a1c:	6333      	str	r3, [r6, #48]	; 0x30
 8000a1e:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a20:	f003 0304 	and.w	r3, r3, #4
 8000a24:	9300      	str	r3, [sp, #0]
 8000a26:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8000a28:	682b      	ldr	r3, [r5, #0]
 8000a2a:	f023 030c 	bic.w	r3, r3, #12
 8000a2e:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a30:	682b      	ldr	r3, [r5, #0]
 8000a32:	f043 0304 	orr.w	r3, r3, #4
 8000a36:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a38:	69ab      	ldr	r3, [r5, #24]
 8000a3a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a3e:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a40:	200a      	movs	r0, #10
 8000a42:	f009 f807 	bl	8009a54 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a46:	682b      	ldr	r3, [r5, #0]
 8000a48:	f043 030c 	orr.w	r3, r3, #12
 8000a4c:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a4e:	9701      	str	r7, [sp, #4]
 8000a50:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a52:	f043 0320 	orr.w	r3, r3, #32
 8000a56:	6333      	str	r3, [r6, #48]	; 0x30
 8000a58:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a5a:	f003 0320 	and.w	r3, r3, #32
 8000a5e:	9301      	str	r3, [sp, #4]
 8000a60:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a62:	68a3      	ldr	r3, [r4, #8]
 8000a64:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a68:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a6c:	f023 030f 	bic.w	r3, r3, #15
 8000a70:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a72:	68e3      	ldr	r3, [r4, #12]
 8000a74:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a78:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a7a:	200a      	movs	r0, #10
 8000a7c:	f008 ffea 	bl	8009a54 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a80:	6823      	ldr	r3, [r4, #0]
 8000a82:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a86:	6023      	str	r3, [r4, #0]
}
 8000a88:	b003      	add	sp, #12
 8000a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a8c:	40023800 	.word	0x40023800
 8000a90:	40020800 	.word	0x40020800
 8000a94:	40021400 	.word	0x40021400

08000a98 <setCalibrationFlashValues>:
{
 8000a98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a9c:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a9e:	009b      	lsls	r3, r3, #2
 8000aa0:	3307      	adds	r3, #7
 8000aa2:	466d      	mov	r5, sp
 8000aa4:	08db      	lsrs	r3, r3, #3
 8000aa6:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000aaa:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000aac:	469d      	mov	sp, r3
 8000aae:	466d      	mov	r5, sp
{
 8000ab0:	4616      	mov	r6, r2
 8000ab2:	4681      	mov	r9, r0
 8000ab4:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000ab6:	4622      	mov	r2, r4
 8000ab8:	4629      	mov	r1, r5
 8000aba:	f7ff fec9 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000abe:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000ac2:	4622      	mov	r2, r4
 8000ac4:	4629      	mov	r1, r5
 8000ac6:	4648      	mov	r0, r9
 8000ac8:	f7ff fe88 	bl	80007dc <Flash_Write_Data>
}
 8000acc:	46bd      	mov	sp, r7
 8000ace:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ad2:	bf00      	nop

08000ad4 <SystemClock_Config>:
{
 8000ad4:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ad6:	2400      	movs	r4, #0
{
 8000ad8:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ada:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ade:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ae2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000ae6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000aea:	4a1e      	ldr	r2, [pc, #120]	; (8000b64 <SystemClock_Config+0x90>)
 8000aec:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000aee:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000af0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000af2:	4b1d      	ldr	r3, [pc, #116]	; (8000b68 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000af4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000af8:	6411      	str	r1, [r2, #64]	; 0x40
 8000afa:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000afc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000b00:	9201      	str	r2, [sp, #4]
 8000b02:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b04:	9402      	str	r4, [sp, #8]
 8000b06:	681a      	ldr	r2, [r3, #0]
 8000b08:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000b0c:	601a      	str	r2, [r3, #0]
 8000b0e:	681b      	ldr	r3, [r3, #0]
 8000b10:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000b14:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000b16:	2201      	movs	r2, #1
 8000b18:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000b1c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000b20:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000b22:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000b24:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b26:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b2a:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b2e:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b32:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b34:	2202      	movs	r2, #2
 8000b36:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b38:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b3a:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b3e:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b40:	f00b f99c 	bl	800be7c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b44:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b46:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b4a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b4e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b52:	a803      	add	r0, sp, #12
 8000b54:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b56:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b5a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b5c:	f00b fba6 	bl	800c2ac <HAL_RCC_ClockConfig>
}
 8000b60:	b015      	add	sp, #84	; 0x54
 8000b62:	bd30      	pop	{r4, r5, pc}
 8000b64:	40023800 	.word	0x40023800
 8000b68:	40007000 	.word	0x40007000

08000b6c <main>:
{
 8000b6c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b70:	2400      	movs	r4, #0
{
 8000b72:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b74:	f008 ff42 	bl	80099fc <HAL_Init>
  SystemClock_Config();
 8000b78:	f7ff ffac 	bl	8000ad4 <SystemClock_Config>
  gyro_disable();
 8000b7c:	f7ff ff44 	bl	8000a08 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b80:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b84:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b88:	4bc3      	ldr	r3, [pc, #780]	; (8000e98 <main+0x32c>)
 8000b8a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b8c:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b90:	48c2      	ldr	r0, [pc, #776]	; (8000e9c <main+0x330>)
  hi2c3.Instance = I2C3;
 8000b92:	f8df a33c 	ldr.w	sl, [pc, #828]	; 8000ed0 <main+0x364>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b96:	f041 0110 	orr.w	r1, r1, #16
 8000b9a:	6319      	str	r1, [r3, #48]	; 0x30
 8000b9c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b9e:	f001 0110 	and.w	r1, r1, #16
 8000ba2:	9100      	str	r1, [sp, #0]
 8000ba4:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000ba6:	9401      	str	r4, [sp, #4]
 8000ba8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000baa:	f041 0120 	orr.w	r1, r1, #32
 8000bae:	6319      	str	r1, [r3, #48]	; 0x30
 8000bb0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb2:	f001 0120 	and.w	r1, r1, #32
 8000bb6:	9101      	str	r1, [sp, #4]
 8000bb8:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000bba:	9402      	str	r4, [sp, #8]
 8000bbc:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bbe:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000bc2:	6319      	str	r1, [r3, #48]	; 0x30
 8000bc4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc6:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000bca:	9102      	str	r1, [sp, #8]
 8000bcc:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000bce:	9403      	str	r4, [sp, #12]
 8000bd0:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd2:	f041 0104 	orr.w	r1, r1, #4
 8000bd6:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bda:	f001 0104 	and.w	r1, r1, #4
 8000bde:	9103      	str	r1, [sp, #12]
 8000be0:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000be2:	9404      	str	r4, [sp, #16]
 8000be4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be6:	f041 0101 	orr.w	r1, r1, #1
 8000bea:	6319      	str	r1, [r3, #48]	; 0x30
 8000bec:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bee:	f001 0101 	and.w	r1, r1, #1
 8000bf2:	9104      	str	r1, [sp, #16]
 8000bf4:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bf6:	9405      	str	r4, [sp, #20]
 8000bf8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bfa:	f041 0102 	orr.w	r1, r1, #2
 8000bfe:	6319      	str	r1, [r3, #48]	; 0x30
 8000c00:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000c02:	f001 0102 	and.w	r1, r1, #2
 8000c06:	9105      	str	r1, [sp, #20]
 8000c08:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000c0a:	9406      	str	r4, [sp, #24]
 8000c0c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000c0e:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000c12:	6319      	str	r1, [r3, #48]	; 0x30
 8000c14:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000c16:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000c1a:	9106      	str	r1, [sp, #24]
 8000c1c:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c1e:	9407      	str	r4, [sp, #28]
 8000c20:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000c22:	f041 0108 	orr.w	r1, r1, #8
 8000c26:	6319      	str	r1, [r3, #48]	; 0x30
 8000c28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c2a:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c2e:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c30:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c32:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c34:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c36:	f009 fae3 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c3a:	4898      	ldr	r0, [pc, #608]	; (8000e9c <main+0x330>)
 8000c3c:	2120      	movs	r1, #32
 8000c3e:	2201      	movs	r2, #1
 8000c40:	f009 fade 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c44:	4896      	ldr	r0, [pc, #600]	; (8000ea0 <main+0x334>)
 8000c46:	4622      	mov	r2, r4
 8000c48:	2114      	movs	r1, #20
 8000c4a:	f009 fad9 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c4e:	4895      	ldr	r0, [pc, #596]	; (8000ea4 <main+0x338>)
 8000c50:	4622      	mov	r2, r4
 8000c52:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c56:	f009 fad3 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c5a:	4893      	ldr	r0, [pc, #588]	; (8000ea8 <main+0x33c>)
 8000c5c:	4622      	mov	r2, r4
 8000c5e:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c62:	f009 facd 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c66:	4891      	ldr	r0, [pc, #580]	; (8000eac <main+0x340>)
 8000c68:	4622      	mov	r2, r4
 8000c6a:	2104      	movs	r1, #4
 8000c6c:	f009 fac8 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c70:	2201      	movs	r2, #1
 8000c72:	488e      	ldr	r0, [pc, #568]	; (8000eac <main+0x340>)
 8000c74:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c78:	f009 fac2 	bl	800a200 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c7c:	f04f 0801 	mov.w	r8, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c80:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c84:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c86:	4885      	ldr	r0, [pc, #532]	; (8000e9c <main+0x330>)
 8000c88:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c8a:	2608      	movs	r6, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c8c:	e9cd 380f 	strd	r3, r8, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c90:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c94:	f009 f970 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c98:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c9c:	487f      	ldr	r0, [pc, #508]	; (8000e9c <main+0x330>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c9e:	960f      	str	r6, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000ca0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000ca2:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca4:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000ca6:	f009 f967 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000caa:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000cac:	487b      	ldr	r0, [pc, #492]	; (8000e9c <main+0x330>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000cae:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000cb0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cb2:	2502      	movs	r5, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000cb4:	2704      	movs	r7, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cb6:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cba:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000cbc:	f009 f95c 	bl	8009f78 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cc0:	4877      	ldr	r0, [pc, #476]	; (8000ea0 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cc2:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cc4:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cc6:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cca:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000cce:	970f      	str	r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cd0:	f009 f952 	bl	8009f78 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd4:	4872      	ldr	r0, [pc, #456]	; (8000ea0 <main+0x334>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cd6:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cda:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cde:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ce2:	f009 f949 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ce6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cea:	486e      	ldr	r0, [pc, #440]	; (8000ea4 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cec:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cee:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf0:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cf6:	f009 f93f 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cfa:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfe:	486a      	ldr	r0, [pc, #424]	; (8000ea8 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000d00:	9512      	str	r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d02:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d04:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000d08:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000d0a:	f009 f935 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d0e:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d12:	4866      	ldr	r0, [pc, #408]	; (8000eac <main+0x340>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d14:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d16:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d18:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d1c:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d1e:	f009 f92b 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d22:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d26:	4862      	ldr	r0, [pc, #392]	; (8000eb0 <main+0x344>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d28:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d2a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d2c:	230f      	movs	r3, #15
 8000d2e:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d30:	e9cd 5410 	strd	r5, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d34:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d36:	f009 f91f 	bl	8009f78 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d3a:	2105      	movs	r1, #5
 8000d3c:	4622      	mov	r2, r4
 8000d3e:	2009      	movs	r0, #9
 8000d40:	f008 feac 	bl	8009a9c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d44:	2009      	movs	r0, #9
 8000d46:	f008 fee7 	bl	8009b18 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d4a:	485a      	ldr	r0, [pc, #360]	; (8000eb4 <main+0x348>)
 8000d4c:	4a5a      	ldr	r2, [pc, #360]	; (8000eb8 <main+0x34c>)
 8000d4e:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d50:	f008 fef0 	bl	8009b34 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d54:	4959      	ldr	r1, [pc, #356]	; (8000ebc <main+0x350>)
 8000d56:	4a5a      	ldr	r2, [pc, #360]	; (8000ec0 <main+0x354>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d58:	4650      	mov	r0, sl
  hi2c3.Init.ClockSpeed = 100000;
 8000d5a:	e9ca 1200 	strd	r1, r2, [sl]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d5e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d62:	f8ca 2010 	str.w	r2, [sl, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d66:	e9ca 4402 	strd	r4, r4, [sl, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d6a:	e9ca 4405 	strd	r4, r4, [sl, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d6e:	e9ca 4407 	strd	r4, r4, [sl, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d72:	f009 fcab 	bl	800a6cc <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d76:	4649      	mov	r1, r9
 8000d78:	4650      	mov	r0, sl
 8000d7a:	f00a fe73 	bl	800ba64 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d7e:	4621      	mov	r1, r4
 8000d80:	4650      	mov	r0, sl
 8000d82:	f00a fe8f 	bl	800baa4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d86:	f8df c14c 	ldr.w	ip, [pc, #332]	; 8000ed4 <main+0x368>
  hspi5.Instance = SPI5;
 8000d8a:	484e      	ldr	r0, [pc, #312]	; (8000ec4 <main+0x358>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d8c:	f8df a148 	ldr.w	sl, [pc, #328]	; 8000ed8 <main+0x36c>
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d90:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d92:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000d96:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d9a:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8000d9e:	2218      	movs	r2, #24
 8000da0:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000da4:	220a      	movs	r2, #10
 8000da6:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000da8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000dac:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000db0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000db4:	f00b fd68 	bl	800c888 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000db8:	2207      	movs	r2, #7
 8000dba:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000dbc:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dbe:	4a42      	ldr	r2, [pc, #264]	; (8000ec8 <main+0x35c>)
 8000dc0:	f8ca 2000 	str.w	r2, [sl]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000dc4:	2040      	movs	r0, #64	; 0x40
 8000dc6:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000dca:	e9ca 0205 	strd	r0, r2, [sl, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000dce:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000dd2:	f8ca 2020 	str.w	r2, [sl, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dd6:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dd8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000ddc:	4650      	mov	r0, sl
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dde:	e9ca 8401 	strd	r8, r4, [sl, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000de2:	e9ca 7903 	strd	r7, r9, [sl, #12]
  SdramTiming.RPDelay = 2;
 8000de6:	e9cd b513 	strd	fp, r5, [sp, #76]	; 0x4c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dea:	f8ca 2028 	str.w	r2, [sl, #40]	; 0x28
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dee:	f8ca 401c 	str.w	r4, [sl, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000df2:	f8ca 4024 	str.w	r4, [sl, #36]	; 0x24
  SdramTiming.LoadToActiveDelay = 2;
 8000df6:	950f      	str	r5, [sp, #60]	; 0x3c
  SdramTiming.SelfRefreshTime = 4;
 8000df8:	9711      	str	r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8000dfa:	9515      	str	r5, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dfc:	f00b fc52 	bl	800c6a4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e00:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e04:	a90b      	add	r1, sp, #44	; 0x2c
 8000e06:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e08:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e0c:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000e10:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e12:	f00b fc69 	bl	800c6e8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000e16:	4640      	mov	r0, r8
 8000e18:	f008 fe1c 	bl	8009a54 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e1c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e20:	a90b      	add	r1, sp, #44	; 0x2c
 8000e22:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e24:	e9cd 560b 	strd	r5, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e28:	e9cd 840d 	strd	r8, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e2c:	f00b fc5c 	bl	800c6e8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e30:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e34:	a90b      	add	r1, sp, #44	; 0x2c
 8000e36:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e38:	e9cd b60b 	strd	fp, r6, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e3c:	e9cd 740d 	strd	r7, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e40:	f00b fc52 	bl	800c6e8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e44:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000e48:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e4a:	9908      	ldr	r1, [sp, #32]
 8000e4c:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e4e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e52:	a90b      	add	r1, sp, #44	; 0x2c
 8000e54:	4650      	mov	r0, sl
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e56:	e9cd 760b 	strd	r7, r6, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e5a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e5e:	f00b fc43 	bl	800c6e8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e62:	4650      	mov	r0, sl
 8000e64:	f240 516a 	movw	r1, #1386	; 0x56a
 8000e68:	f00b fc5c 	bl	800c724 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8000e6c:	f8df a06c 	ldr.w	sl, [pc, #108]	; 8000edc <main+0x370>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e70:	2234      	movs	r2, #52	; 0x34
 8000e72:	4621      	mov	r1, r4
 8000e74:	a80f      	add	r0, sp, #60	; 0x3c
 8000e76:	f02b f8b0 	bl	802bfda <memset>
  hltdc.Instance = LTDC;
 8000e7a:	4a14      	ldr	r2, [pc, #80]	; (8000ecc <main+0x360>)
 8000e7c:	f8ca 2000 	str.w	r2, [sl]
  hltdc.Init.HorizontalSync = 9;
 8000e80:	2209      	movs	r2, #9
 8000e82:	f8ca 2014 	str.w	r2, [sl, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000e86:	221d      	movs	r2, #29
 8000e88:	f8ca 201c 	str.w	r2, [sl, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e8c:	f240 130d 	movw	r3, #269	; 0x10d
 8000e90:	f240 1243 	movw	r2, #323	; 0x143
 8000e94:	e024      	b.n	8000ee0 <main+0x374>
 8000e96:	bf00      	nop
 8000e98:	40023800 	.word	0x40023800
 8000e9c:	40021000 	.word	0x40021000
 8000ea0:	40020800 	.word	0x40020800
 8000ea4:	40020400 	.word	0x40020400
 8000ea8:	40020c00 	.word	0x40020c00
 8000eac:	40021800 	.word	0x40021800
 8000eb0:	40020000 	.word	0x40020000
 8000eb4:	200001e4 	.word	0x200001e4
 8000eb8:	40023000 	.word	0x40023000
 8000ebc:	40005c00 	.word	0x40005c00
 8000ec0:	000186a0 	.word	0x000186a0
 8000ec4:	2000031c 	.word	0x2000031c
 8000ec8:	a0000140 	.word	0xa0000140
 8000ecc:	40016800 	.word	0x40016800
 8000ed0:	200001ec 	.word	0x200001ec
 8000ed4:	40015000 	.word	0x40015000
 8000ed8:	200002e8 	.word	0x200002e8
 8000edc:	20000240 	.word	0x20000240
 8000ee0:	e9ca 3209 	strd	r3, r2, [sl, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000ee4:	f240 1117 	movw	r1, #279	; 0x117
 8000ee8:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8000eec:	f8aa 4034 	strh.w	r4, [sl, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ef0:	4650      	mov	r0, sl
  hltdc.Init.TotalHeigh = 327;
 8000ef2:	e9ca 120b 	strd	r1, r2, [sl, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000ef6:	f8ca 8018 	str.w	r8, [sl, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8000efa:	f8ca b020 	str.w	fp, [sl, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000efe:	e9ca 4401 	strd	r4, r4, [sl, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000f02:	e9ca 4403 	strd	r4, r4, [sl, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000f06:	f88a 4036 	strb.w	r4, [sl, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000f0a:	f00a fdef 	bl	800baec <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8000f0e:	23f0      	movs	r3, #240	; 0xf0
 8000f10:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000f12:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000f14:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000f18:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000f1a:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000f1c:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f1e:	f44f 6e80 	mov.w	lr, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f22:	4622      	mov	r2, r4
 8000f24:	a90f      	add	r1, sp, #60	; 0x3c
 8000f26:	4650      	mov	r0, sl
  pLayerCfg.Alpha = 255;
 8000f28:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f2a:	2305      	movs	r3, #5
 8000f2c:	e9cd e316 	strd	lr, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8000f30:	f8df 826c 	ldr.w	r8, [pc, #620]	; 80011a0 <main+0x634>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000f34:	9513      	str	r5, [sp, #76]	; 0x4c
  pLayerCfg.WindowX0 = 0;
 8000f36:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8000f38:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 8000f3a:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000f3c:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000f3e:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f42:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f46:	f00a fea7 	bl	800bc98 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f4a:	4b82      	ldr	r3, [pc, #520]	; (8001154 <main+0x5e8>)
 8000f4c:	f8c8 3000 	str.w	r3, [r8]
  LcdDrv->Init();
 8000f50:	681b      	ldr	r3, [r3, #0]
  htim2.Instance = TIM2;
 8000f52:	f8df a250 	ldr.w	sl, [pc, #592]	; 80011a4 <main+0x638>
  LcdDrv->Init();
 8000f56:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000f58:	f8d8 3000 	ldr.w	r3, [r8]
  htim3.Instance = TIM3;
 8000f5c:	f8df 8248 	ldr.w	r8, [pc, #584]	; 80011a8 <main+0x63c>
  LcdDrv->DisplayOff();
 8000f60:	68db      	ldr	r3, [r3, #12]
 8000f62:	4798      	blx	r3
  htim3.Instance = TIM3;
 8000f64:	4b7c      	ldr	r3, [pc, #496]	; (8001158 <main+0x5ec>)
 8000f66:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f6a:	4640      	mov	r0, r8
  htim3.Init.Period = 65535;
 8000f6c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f70:	f8c8 300c 	str.w	r3, [r8, #12]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f74:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f78:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f7c:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f80:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f84:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f88:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f8c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f90:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f94:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f96:	f00c f867 	bl	800d068 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f9a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f9e:	a90b      	add	r1, sp, #44	; 0x2c
 8000fa0:	4640      	mov	r0, r8
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fa2:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fa4:	f00c fb8a 	bl	800d6bc <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fa8:	a90f      	add	r1, sp, #60	; 0x3c
 8000faa:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fac:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb0:	f00c fc34 	bl	800d81c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fb4:	a909      	add	r1, sp, #36	; 0x24
 8000fb6:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fb8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbc:	f00c fd6c 	bl	800da98 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Period = 100-1;
 8000fc0:	2363      	movs	r3, #99	; 0x63
  htim2.Instance = TIM2;
 8000fc2:	f04f 4b80 	mov.w	fp, #1073741824	; 0x40000000
  htim2.Init.Prescaler = 168-1;
 8000fc6:	21a7      	movs	r1, #167	; 0xa7
  htim2.Init.Period = 100-1;
 8000fc8:	f8ca 300c 	str.w	r3, [sl, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fcc:	4650      	mov	r0, sl
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fce:	2380      	movs	r3, #128	; 0x80
  htim2.Instance = TIM2;
 8000fd0:	f8ca b000 	str.w	fp, [sl]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd4:	f8ca 3018 	str.w	r3, [sl, #24]
  htim2.Init.Prescaler = 168-1;
 8000fd8:	f8ca 1004 	str.w	r1, [sl, #4]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fdc:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fe0:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe4:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fe8:	f8ca 4008 	str.w	r4, [sl, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fec:	f8ca 4010 	str.w	r4, [sl, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000ff0:	f00c f83a 	bl	800d068 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff8:	a90f      	add	r1, sp, #60	; 0x3c
 8000ffa:	4650      	mov	r0, sl
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ffc:	930f      	str	r3, [sp, #60]	; 0x3c
  TIM2->CCR1 = 50;
 8000ffe:	f04f 0832 	mov.w	r8, #50	; 0x32
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001002:	f00c fb5b 	bl	800d6bc <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001006:	a90b      	add	r1, sp, #44	; 0x2c
 8001008:	4650      	mov	r0, sl
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800100a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800100e:	f00c fd43 	bl	800da98 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 50;
 8001012:	f8cb 8034 	str.w	r8, [fp, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8001016:	4621      	mov	r1, r4
 8001018:	4650      	mov	r0, sl
 800101a:	f00c f97f 	bl	800d31c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 800101e:	4639      	mov	r1, r7
  TIM2->CCR2 = 50;
 8001020:	f8cb 8038 	str.w	r8, [fp, #56]	; 0x38
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001024:	4650      	mov	r0, sl
 8001026:	f00c f979 	bl	800d31c <HAL_TIM_PWM_Start>
  htim14.Instance = TIM14;
 800102a:	4f4c      	ldr	r7, [pc, #304]	; (800115c <main+0x5f0>)
  TIM2->CCR3 = 50;
 800102c:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_3);
 8001030:	4631      	mov	r1, r6
 8001032:	4650      	mov	r0, sl
 8001034:	f00c f972 	bl	800d31c <HAL_TIM_PWM_Start>
  htim14.Init.Prescaler = 210-1;
 8001038:	4949      	ldr	r1, [pc, #292]	; (8001160 <main+0x5f4>)
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 800103a:	60bc      	str	r4, [r7, #8]
  htim14.Init.Period = 100-1;
 800103c:	2363      	movs	r3, #99	; 0x63
  htim14.Init.Prescaler = 210-1;
 800103e:	22d1      	movs	r2, #209	; 0xd1
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001040:	e9c7 3403 	strd	r3, r4, [r7, #12]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001044:	4638      	mov	r0, r7
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001046:	2380      	movs	r3, #128	; 0x80
 8001048:	61bb      	str	r3, [r7, #24]
  htim14.Init.Prescaler = 210-1;
 800104a:	e9c7 1200 	strd	r1, r2, [r7]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800104e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001052:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001056:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 800105a:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800105c:	f00c f804 	bl	800d068 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8001060:	4638      	mov	r0, r7
 8001062:	f00c f8cd 	bl	800d200 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001066:	f04f 0b60 	mov.w	fp, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800106a:	4622      	mov	r2, r4
 800106c:	a90f      	add	r1, sp, #60	; 0x3c
 800106e:	4638      	mov	r0, r7
  htim9.Instance = TIM9;
 8001070:	4e3c      	ldr	r6, [pc, #240]	; (8001164 <main+0x5f8>)
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001072:	9413      	str	r4, [sp, #76]	; 0x4c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001074:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001078:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800107c:	f00c fa0e 	bl	800d49c <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 8001080:	4638      	mov	r0, r7
 8001082:	f000 fcfd 	bl	8001a80 <HAL_TIM_MspPostInit>
  htim9.Init.Period = 100-1;
 8001086:	2363      	movs	r3, #99	; 0x63
  htim9.Init.Prescaler = 84-1;
 8001088:	4f37      	ldr	r7, [pc, #220]	; (8001168 <main+0x5fc>)
  htim9.Init.Period = 100-1;
 800108a:	60f3      	str	r3, [r6, #12]
  htim9.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800108c:	2380      	movs	r3, #128	; 0x80
 800108e:	61b3      	str	r3, [r6, #24]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 8001090:	4630      	mov	r0, r6
  htim9.Init.Prescaler = 84-1;
 8001092:	2353      	movs	r3, #83	; 0x53
 8001094:	e9c6 7300 	strd	r7, r3, [r6]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001098:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800109c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_OC_InitTypeDef sConfigOC = {0};
 80010a0:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 80010a4:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 80010a8:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 80010ac:	9415      	str	r4, [sp, #84]	; 0x54
  htim9.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010ae:	60b4      	str	r4, [r6, #8]
  htim9.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80010b0:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim9) != HAL_OK)
 80010b2:	f00b ffd9 	bl	800d068 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80010b6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 80010ba:	a90b      	add	r1, sp, #44	; 0x2c
 80010bc:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80010be:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim9, &sClockSourceConfig) != HAL_OK)
 80010c0:	f00c fafc 	bl	800d6bc <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_PWM_Init(&htim9) != HAL_OK)
 80010c4:	4630      	mov	r0, r6
 80010c6:	f00c f89b 	bl	800d200 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80010ca:	4622      	mov	r2, r4
 80010cc:	a90f      	add	r1, sp, #60	; 0x3c
 80010ce:	4630      	mov	r0, r6
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80010d0:	e9cd 8410 	strd	r8, r4, [sp, #64]	; 0x40
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80010d4:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80010d8:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim9, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80010da:	f00c f9df 	bl	800d49c <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 80010de:	4621      	mov	r1, r4
  TIM9->CCR1 = 50;
 80010e0:	f8c7 8034 	str.w	r8, [r7, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim9, TIM_CHANNEL_1);
 80010e4:	4630      	mov	r0, r6
 80010e6:	f00c f919 	bl	800d31c <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim9);
 80010ea:	4630      	mov	r0, r6
 80010ec:	f000 fcc8 	bl	8001a80 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 80010f0:	f000 fe5c 	bl	8001dac <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80010f4:	f000 fe58 	bl	8001da8 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 80010f8:	f7ff fc86 	bl	8000a08 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 80010fc:	f000 f958 	bl	80013b0 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001100:	f000 f98a 	bl	8001418 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001104:	4919      	ldr	r1, [pc, #100]	; (800116c <main+0x600>)
 8001106:	481a      	ldr	r0, [pc, #104]	; (8001170 <main+0x604>)
 8001108:	220c      	movs	r2, #12
 800110a:	f7ff fba1 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 800110e:	f00c fdd5 	bl	800dcbc <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001112:	4629      	mov	r1, r5
 8001114:	4a17      	ldr	r2, [pc, #92]	; (8001174 <main+0x608>)
 8001116:	4648      	mov	r0, r9
 8001118:	f00c ff0a 	bl	800df30 <osMessageQueueNew>
 800111c:	4b16      	ldr	r3, [pc, #88]	; (8001178 <main+0x60c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800111e:	4a17      	ldr	r2, [pc, #92]	; (800117c <main+0x610>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001120:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001122:	4621      	mov	r1, r4
 8001124:	4816      	ldr	r0, [pc, #88]	; (8001180 <main+0x614>)
 8001126:	f00c fdf5 	bl	800dd14 <osThreadNew>
 800112a:	4b16      	ldr	r3, [pc, #88]	; (8001184 <main+0x618>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800112c:	4a16      	ldr	r2, [pc, #88]	; (8001188 <main+0x61c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800112e:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001130:	4621      	mov	r1, r4
 8001132:	4816      	ldr	r0, [pc, #88]	; (800118c <main+0x620>)
 8001134:	f00c fdee 	bl	800dd14 <osThreadNew>
 8001138:	4b15      	ldr	r3, [pc, #84]	; (8001190 <main+0x624>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800113a:	4a16      	ldr	r2, [pc, #88]	; (8001194 <main+0x628>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800113c:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800113e:	4621      	mov	r1, r4
 8001140:	4815      	ldr	r0, [pc, #84]	; (8001198 <main+0x62c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001142:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001144:	f00c fde6 	bl	800dd14 <osThreadNew>
 8001148:	4b14      	ldr	r3, [pc, #80]	; (800119c <main+0x630>)
 800114a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800114c:	f00c fdc8 	bl	800dce0 <osKernelStart>
  while (1)
 8001150:	e7fe      	b.n	8001150 <main+0x5e4>
 8001152:	bf00      	nop
 8001154:	2000001c 	.word	0x2000001c
 8001158:	40000400 	.word	0x40000400
 800115c:	20000374 	.word	0x20000374
 8001160:	40002000 	.word	0x40002000
 8001164:	2000044c 	.word	0x2000044c
 8001168:	40014000 	.word	0x40014000
 800116c:	200001a0 	.word	0x200001a0
 8001170:	081e0000 	.word	0x081e0000
 8001174:	0802cd80 	.word	0x0802cd80
 8001178:	200001d8 	.word	0x200001d8
 800117c:	0802cdbc 	.word	0x0802cdbc
 8001180:	08000971 	.word	0x08000971
 8001184:	200001e0 	.word	0x200001e0
 8001188:	0802cd5c 	.word	0x0802cd5c
 800118c:	08001dbd 	.word	0x08001dbd
 8001190:	200001d0 	.word	0x200001d0
 8001194:	0802cd98 	.word	0x0802cd98
 8001198:	0800097d 	.word	0x0800097d
 800119c:	200001dc 	.word	0x200001dc
 80011a0:	200001d4 	.word	0x200001d4
 80011a4:	200003bc 	.word	0x200003bc
 80011a8:	20000404 	.word	0x20000404

080011ac <IOE_Init>:
 80011ac:	4770      	bx	lr
 80011ae:	bf00      	nop

080011b0 <IOE_ITConfig>:
 80011b0:	4770      	bx	lr
 80011b2:	bf00      	nop

080011b4 <IOE_Write>:
{
 80011b4:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80011b6:	4c09      	ldr	r4, [pc, #36]	; (80011dc <IOE_Write+0x28>)
{
 80011b8:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80011ba:	6824      	ldr	r4, [r4, #0]
 80011bc:	9402      	str	r4, [sp, #8]
{
 80011be:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80011c0:	2301      	movs	r3, #1
 80011c2:	f88d 4017 	strb.w	r4, [sp, #23]
 80011c6:	f10d 0417 	add.w	r4, sp, #23
 80011ca:	460a      	mov	r2, r1
 80011cc:	9301      	str	r3, [sp, #4]
 80011ce:	4601      	mov	r1, r0
 80011d0:	9400      	str	r4, [sp, #0]
 80011d2:	4803      	ldr	r0, [pc, #12]	; (80011e0 <IOE_Write+0x2c>)
 80011d4:	f009 fb42 	bl	800a85c <HAL_I2C_Mem_Write>
}
 80011d8:	b006      	add	sp, #24
 80011da:	bd10      	pop	{r4, pc}
 80011dc:	20000004 	.word	0x20000004
 80011e0:	200001ec 	.word	0x200001ec

080011e4 <IOE_Read>:
{
 80011e4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80011e6:	4b0b      	ldr	r3, [pc, #44]	; (8001214 <IOE_Read+0x30>)
{
 80011e8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80011ea:	681b      	ldr	r3, [r3, #0]
 80011ec:	9302      	str	r3, [sp, #8]
{
 80011ee:	4684      	mov	ip, r0
 80011f0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80011f2:	2301      	movs	r3, #1
 80011f4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80011f8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80011fa:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80011fe:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001202:	4661      	mov	r1, ip
 8001204:	4804      	ldr	r0, [pc, #16]	; (8001218 <IOE_Read+0x34>)
 8001206:	f009 fc1b 	bl	800aa40 <HAL_I2C_Mem_Read>
}
 800120a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800120e:	b007      	add	sp, #28
 8001210:	f85d fb04 	ldr.w	pc, [sp], #4
 8001214:	20000004 	.word	0x20000004
 8001218:	200001ec 	.word	0x200001ec

0800121c <IOE_ReadMultiple>:
{
 800121c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800121e:	4c09      	ldr	r4, [pc, #36]	; (8001244 <IOE_ReadMultiple+0x28>)
{
 8001220:	b084      	sub	sp, #16
 8001222:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001224:	6820      	ldr	r0, [r4, #0]
 8001226:	9002      	str	r0, [sp, #8]
 8001228:	e9cd 2300 	strd	r2, r3, [sp]
 800122c:	4806      	ldr	r0, [pc, #24]	; (8001248 <IOE_ReadMultiple+0x2c>)
 800122e:	460a      	mov	r2, r1
 8001230:	2301      	movs	r3, #1
 8001232:	4661      	mov	r1, ip
 8001234:	f009 fc04 	bl	800aa40 <HAL_I2C_Mem_Read>
}
 8001238:	3800      	subs	r0, #0
 800123a:	bf18      	it	ne
 800123c:	2001      	movne	r0, #1
 800123e:	b004      	add	sp, #16
 8001240:	bd10      	pop	{r4, pc}
 8001242:	bf00      	nop
 8001244:	20000004 	.word	0x20000004
 8001248:	200001ec 	.word	0x200001ec

0800124c <IOE_Delay>:
 800124c:	f008 bc02 	b.w	8009a54 <HAL_Delay>

08001250 <LCD_IO_Init>:
{
 8001250:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001252:	4806      	ldr	r0, [pc, #24]	; (800126c <LCD_IO_Init+0x1c>)
 8001254:	2200      	movs	r2, #0
 8001256:	2104      	movs	r1, #4
 8001258:	f008 ffd2 	bl	800a200 <HAL_GPIO_WritePin>
}
 800125c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001260:	4802      	ldr	r0, [pc, #8]	; (800126c <LCD_IO_Init+0x1c>)
 8001262:	2201      	movs	r2, #1
 8001264:	2104      	movs	r1, #4
 8001266:	f008 bfcb 	b.w	800a200 <HAL_GPIO_WritePin>
 800126a:	bf00      	nop
 800126c:	40020800 	.word	0x40020800

08001270 <LCD_IO_WriteData>:
{
 8001270:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001272:	4d10      	ldr	r5, [pc, #64]	; (80012b4 <LCD_IO_WriteData+0x44>)
{
 8001274:	b083      	sub	sp, #12
 8001276:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001278:	2201      	movs	r2, #1
 800127a:	480f      	ldr	r0, [pc, #60]	; (80012b8 <LCD_IO_WriteData+0x48>)
 800127c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001280:	f008 ffbe 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001284:	4628      	mov	r0, r5
 8001286:	2200      	movs	r2, #0
 8001288:	2104      	movs	r1, #4
 800128a:	f008 ffb9 	bl	800a200 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800128e:	4b0b      	ldr	r3, [pc, #44]	; (80012bc <LCD_IO_WriteData+0x4c>)
 8001290:	480b      	ldr	r0, [pc, #44]	; (80012c0 <LCD_IO_WriteData+0x50>)
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001298:	f10d 0106 	add.w	r1, sp, #6
 800129c:	2201      	movs	r2, #1
 800129e:	f00b fb55 	bl	800c94c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80012a2:	2201      	movs	r2, #1
 80012a4:	2104      	movs	r1, #4
 80012a6:	4628      	mov	r0, r5
}
 80012a8:	b003      	add	sp, #12
 80012aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80012ae:	f008 bfa7 	b.w	800a200 <HAL_GPIO_WritePin>
 80012b2:	bf00      	nop
 80012b4:	40020800 	.word	0x40020800
 80012b8:	40020c00 	.word	0x40020c00
 80012bc:	20000008 	.word	0x20000008
 80012c0:	2000031c 	.word	0x2000031c

080012c4 <LCD_IO_WriteReg>:
{
 80012c4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012c6:	4d10      	ldr	r5, [pc, #64]	; (8001308 <LCD_IO_WriteReg+0x44>)
{
 80012c8:	b083      	sub	sp, #12
 80012ca:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80012cc:	2200      	movs	r2, #0
 80012ce:	480f      	ldr	r0, [pc, #60]	; (800130c <LCD_IO_WriteReg+0x48>)
 80012d0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012d4:	f008 ff94 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80012d8:	4628      	mov	r0, r5
 80012da:	2200      	movs	r2, #0
 80012dc:	2104      	movs	r1, #4
 80012de:	f008 ff8f 	bl	800a200 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012e2:	4b0b      	ldr	r3, [pc, #44]	; (8001310 <LCD_IO_WriteReg+0x4c>)
 80012e4:	480b      	ldr	r0, [pc, #44]	; (8001314 <LCD_IO_WriteReg+0x50>)
 80012e6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80012e8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012ec:	f10d 0106 	add.w	r1, sp, #6
 80012f0:	2201      	movs	r2, #1
 80012f2:	f00b fb2b 	bl	800c94c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80012f6:	2201      	movs	r2, #1
 80012f8:	2104      	movs	r1, #4
 80012fa:	4628      	mov	r0, r5
}
 80012fc:	b003      	add	sp, #12
 80012fe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001302:	f008 bf7d 	b.w	800a200 <HAL_GPIO_WritePin>
 8001306:	bf00      	nop
 8001308:	40020800 	.word	0x40020800
 800130c:	40020c00 	.word	0x40020c00
 8001310:	20000008 	.word	0x20000008
 8001314:	2000031c 	.word	0x2000031c

08001318 <LCD_IO_ReadData>:
{
 8001318:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800131c:	4e19      	ldr	r6, [pc, #100]	; (8001384 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800131e:	4f1a      	ldr	r7, [pc, #104]	; (8001388 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001320:	f8df 9068 	ldr.w	r9, [pc, #104]	; 800138c <LCD_IO_ReadData+0x74>
 8001324:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001390 <LCD_IO_ReadData+0x78>
{
 8001328:	b083      	sub	sp, #12
 800132a:	460c      	mov	r4, r1
 800132c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800132e:	2200      	movs	r2, #0
 8001330:	4630      	mov	r0, r6
 8001332:	2104      	movs	r1, #4
 8001334:	f008 ff64 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001338:	4638      	mov	r0, r7
 800133a:	2200      	movs	r2, #0
 800133c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001340:	f008 ff5e 	bl	800a200 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001344:	f8d9 3000 	ldr.w	r3, [r9]
 8001348:	f8ad 5004 	strh.w	r5, [sp, #4]
 800134c:	a901      	add	r1, sp, #4
 800134e:	2201      	movs	r2, #1
 8001350:	4640      	mov	r0, r8
 8001352:	f00b fafb 	bl	800c94c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001356:	f8d9 3000 	ldr.w	r3, [r9]
 800135a:	4622      	mov	r2, r4
 800135c:	a901      	add	r1, sp, #4
 800135e:	4640      	mov	r0, r8
 8001360:	f00b fd9c 	bl	800ce9c <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001364:	4638      	mov	r0, r7
 8001366:	2201      	movs	r2, #1
 8001368:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 800136c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800136e:	f008 ff47 	bl	800a200 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001372:	4630      	mov	r0, r6
 8001374:	2201      	movs	r2, #1
 8001376:	2104      	movs	r1, #4
 8001378:	f008 ff42 	bl	800a200 <HAL_GPIO_WritePin>
}
 800137c:	4620      	mov	r0, r4
 800137e:	b003      	add	sp, #12
 8001380:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001384:	40020800 	.word	0x40020800
 8001388:	40020c00 	.word	0x40020c00
 800138c:	20000008 	.word	0x20000008
 8001390:	2000031c 	.word	0x2000031c

08001394 <LCD_Delay>:
  HAL_Delay(Delay);
 8001394:	f008 bb5e 	b.w	8009a54 <HAL_Delay>

08001398 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001398:	4b03      	ldr	r3, [pc, #12]	; (80013a8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 800139a:	6802      	ldr	r2, [r0, #0]
 800139c:	429a      	cmp	r2, r3
 800139e:	d000      	beq.n	80013a2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80013a0:	4770      	bx	lr
    HAL_IncTick();
 80013a2:	f008 bb45 	b.w	8009a30 <HAL_IncTick>
 80013a6:	bf00      	nop
 80013a8:	40001000 	.word	0x40001000

080013ac <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80013ac:	4770      	bx	lr
 80013ae:	bf00      	nop

080013b0 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80013b0:	b410      	push	{r4}
 80013b2:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80013b4:	4b15      	ldr	r3, [pc, #84]	; (800140c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80013b6:	4916      	ldr	r1, [pc, #88]	; (8001410 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80013b8:	2400      	movs	r4, #0
 80013ba:	9400      	str	r4, [sp, #0]
 80013bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013be:	f042 0220 	orr.w	r2, r2, #32
 80013c2:	631a      	str	r2, [r3, #48]	; 0x30
 80013c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013c6:	f002 0220 	and.w	r2, r2, #32
 80013ca:	9200      	str	r2, [sp, #0]
 80013cc:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80013ce:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80013d0:	4a10      	ldr	r2, [pc, #64]	; (8001414 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80013d2:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80013d6:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80013d8:	6808      	ldr	r0, [r1, #0]
 80013da:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80013de:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80013e0:	9401      	str	r4, [sp, #4]
 80013e2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80013e4:	f041 0104 	orr.w	r1, r1, #4
 80013e8:	6319      	str	r1, [r3, #48]	; 0x30
 80013ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013ec:	f003 0304 	and.w	r3, r3, #4
 80013f0:	9301      	str	r3, [sp, #4]
 80013f2:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80013f4:	6813      	ldr	r3, [r2, #0]
 80013f6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80013fa:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 80013fc:	6813      	ldr	r3, [r2, #0]
 80013fe:	f043 030c 	orr.w	r3, r3, #12
 8001402:	6013      	str	r3, [r2, #0]
}
 8001404:	b003      	add	sp, #12
 8001406:	f85d 4b04 	ldr.w	r4, [sp], #4
 800140a:	4770      	bx	lr
 800140c:	40023800 	.word	0x40023800
 8001410:	40021400 	.word	0x40021400
 8001414:	40020800 	.word	0x40020800

08001418 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001418:	b410      	push	{r4}
 800141a:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800141c:	4a0e      	ldr	r2, [pc, #56]	; (8001458 <MEAS_timer_init+0x40>)
 800141e:	2000      	movs	r0, #0
 8001420:	9001      	str	r0, [sp, #4]
 8001422:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001424:	f041 0101 	orr.w	r1, r1, #1
 8001428:	6411      	str	r1, [r2, #64]	; 0x40
 800142a:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800142c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001430:	f002 0201 	and.w	r2, r2, #1
 8001434:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001436:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800143a:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 800143c:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800143e:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001440:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001442:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001444:	4905      	ldr	r1, [pc, #20]	; (800145c <MEAS_timer_init+0x44>)
 8001446:	f042 0220 	orr.w	r2, r2, #32
 800144a:	605a      	str	r2, [r3, #4]
 800144c:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001450:	b003      	add	sp, #12
 8001452:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001456:	4770      	bx	lr
 8001458:	40023800 	.word	0x40023800
 800145c:	e000e100 	.word	0xe000e100

08001460 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001460:	b410      	push	{r4}
 8001462:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001464:	4a36      	ldr	r2, [pc, #216]	; (8001540 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001466:	4b37      	ldr	r3, [pc, #220]	; (8001544 <MEAS_ADC3_scan_init+0xe4>)
 8001468:	4c37      	ldr	r4, [pc, #220]	; (8001548 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800146a:	2100      	movs	r1, #0
 800146c:	9100      	str	r1, [sp, #0]
 800146e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001470:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 8001474:	6450      	str	r0, [r2, #68]	; 0x44
 8001476:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001478:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 800147c:	9000      	str	r0, [sp, #0]
 800147e:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001480:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8001482:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001486:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001488:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800148a:	f040 0004 	orr.w	r0, r0, #4
 800148e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001490:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001492:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001496:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001498:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800149a:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 800149e:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80014a0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80014a2:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80014a6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80014a8:	6858      	ldr	r0, [r3, #4]
 80014aa:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80014ae:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80014b0:	6898      	ldr	r0, [r3, #8]
 80014b2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80014b6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80014b8:	6898      	ldr	r0, [r3, #8]
 80014ba:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80014be:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80014c0:	6898      	ldr	r0, [r3, #8]
 80014c2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80014c6:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80014c8:	9101      	str	r1, [sp, #4]
 80014ca:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80014cc:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80014d0:	6310      	str	r0, [r2, #48]	; 0x30
 80014d2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80014d4:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80014d8:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80014da:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80014de:	9a01      	ldr	r2, [sp, #4]
 80014e0:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80014e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014e6:	f022 0201 	bic.w	r2, r2, #1
 80014ea:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 80014ec:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014ee:	07d2      	lsls	r2, r2, #31
 80014f0:	d4fc      	bmi.n	80014ec <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80014f2:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 80014f4:	4815      	ldr	r0, [pc, #84]	; (800154c <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 80014f6:	4916      	ldr	r1, [pc, #88]	; (8001550 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 80014f8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80014fc:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 80014fe:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001500:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001504:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001506:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001508:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800150c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 800150e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001510:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001514:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001516:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001518:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800151c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 800151e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001520:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001524:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001526:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001528:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800152c:	f042 0210 	orr.w	r2, r2, #16
 8001530:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001532:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001534:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001536:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001538:	b003      	add	sp, #12
 800153a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800153e:	4770      	bx	lr
 8001540:	40023800 	.word	0x40023800
 8001544:	40012200 	.word	0x40012200
 8001548:	e000e100 	.word	0xe000e100
 800154c:	4001224c 	.word	0x4001224c
 8001550:	20000494 	.word	0x20000494

08001554 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001554:	4b1b      	ldr	r3, [pc, #108]	; (80015c4 <DMA2_Stream1_IRQHandler+0x70>)
 8001556:	681a      	ldr	r2, [r3, #0]
 8001558:	0511      	lsls	r1, r2, #20
 800155a:	d400      	bmi.n	800155e <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 800155c:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800155e:	4a1a      	ldr	r2, [pc, #104]	; (80015c8 <DMA2_Stream1_IRQHandler+0x74>)
 8001560:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001564:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001568:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800156c:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001570:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001574:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001576:	f022 0201 	bic.w	r2, r2, #1
 800157a:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800157c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800157e:	07d2      	lsls	r2, r2, #31
 8001580:	d4fc      	bmi.n	800157c <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001582:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001584:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001588:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800158c:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800158e:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001590:	490e      	ldr	r1, [pc, #56]	; (80015cc <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001592:	f023 0301 	bic.w	r3, r3, #1
 8001596:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001598:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800159a:	4b0d      	ldr	r3, [pc, #52]	; (80015d0 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 800159c:	f020 0001 	bic.w	r0, r0, #1
 80015a0:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80015a2:	6888      	ldr	r0, [r1, #8]
 80015a4:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80015a8:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80015aa:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80015ac:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80015b0:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80015b2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80015b4:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80015b8:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80015ba:	6813      	ldr	r3, [r2, #0]
 80015bc:	f023 0301 	bic.w	r3, r3, #1
 80015c0:	6013      	str	r3, [r2, #0]
}
 80015c2:	4770      	bx	lr
 80015c4:	40026400 	.word	0x40026400
 80015c8:	e000e100 	.word	0xe000e100
 80015cc:	40012200 	.word	0x40012200
 80015d0:	40023800 	.word	0x40023800

080015d4 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80015d4:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80015d6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015da:	2100      	movs	r1, #0
 80015dc:	480f      	ldr	r0, [pc, #60]	; (800161c <MEAS_start_measure+0x48>)
 80015de:	f02a fcfc 	bl	802bfda <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80015e2:	f7ff ff3d 	bl	8001460 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80015e6:	4a0e      	ldr	r2, [pc, #56]	; (8001620 <MEAS_start_measure+0x4c>)
 80015e8:	490e      	ldr	r1, [pc, #56]	; (8001624 <MEAS_start_measure+0x50>)
 80015ea:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80015ec:	480e      	ldr	r0, [pc, #56]	; (8001628 <MEAS_start_measure+0x54>)
 80015ee:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80015f2:	f043 0301 	orr.w	r3, r3, #1
 80015f6:	6293      	str	r3, [r2, #40]	; 0x28
 80015f8:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015fc:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 80015fe:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001600:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001604:	f043 0301 	orr.w	r3, r3, #1
 8001608:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800160a:	680b      	ldr	r3, [r1, #0]
 800160c:	f043 0301 	orr.w	r3, r3, #1
 8001610:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001612:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001614:	07db      	lsls	r3, r3, #31
 8001616:	d4fc      	bmi.n	8001612 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001618:	4800      	ldr	r0, [pc, #0]	; (800161c <MEAS_start_measure+0x48>)
 800161a:	bd10      	pop	{r4, pc}
 800161c:	20000494 	.word	0x20000494
 8001620:	40026400 	.word	0x40026400
 8001624:	e000e100 	.word	0xe000e100
 8001628:	40012200 	.word	0x40012200

0800162c <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 800162c:	2004      	movs	r0, #4
 800162e:	4770      	bx	lr

08001630 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001630:	2040      	movs	r0, #64	; 0x40
 8001632:	4770      	bx	lr

08001634 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001634:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001638:	4770      	bx	lr
 800163a:	bf00      	nop

0800163c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800163c:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800163e:	4b0e      	ldr	r3, [pc, #56]	; (8001678 <HAL_MspInit+0x3c>)
 8001640:	2200      	movs	r2, #0
 8001642:	9200      	str	r2, [sp, #0]
 8001644:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001646:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800164a:	6459      	str	r1, [r3, #68]	; 0x44
 800164c:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800164e:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001652:	9000      	str	r0, [sp, #0]
 8001654:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001656:	9201      	str	r2, [sp, #4]
 8001658:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800165a:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800165e:	6418      	str	r0, [r3, #64]	; 0x40
 8001660:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001662:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001666:	9301      	str	r3, [sp, #4]
 8001668:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800166a:	210f      	movs	r1, #15
 800166c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001670:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001672:	f008 ba13 	b.w	8009a9c <HAL_NVIC_SetPriority>
 8001676:	bf00      	nop
 8001678:	40023800 	.word	0x40023800

0800167c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 800167c:	4b0b      	ldr	r3, [pc, #44]	; (80016ac <HAL_CRC_MspInit+0x30>)
 800167e:	6802      	ldr	r2, [r0, #0]
 8001680:	429a      	cmp	r2, r3
 8001682:	d000      	beq.n	8001686 <HAL_CRC_MspInit+0xa>
 8001684:	4770      	bx	lr
{
 8001686:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001688:	2200      	movs	r2, #0
 800168a:	9201      	str	r2, [sp, #4]
 800168c:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001690:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001694:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001698:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800169c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800169e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80016a2:	9301      	str	r3, [sp, #4]
 80016a4:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80016a6:	b002      	add	sp, #8
 80016a8:	4770      	bx	lr
 80016aa:	bf00      	nop
 80016ac:	40023000 	.word	0x40023000

080016b0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80016b0:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80016b4:	4b2e      	ldr	r3, [pc, #184]	; (8001770 <HAL_I2C_MspInit+0xc0>)
 80016b6:	6802      	ldr	r2, [r0, #0]
{
 80016b8:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016ba:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80016bc:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016be:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80016c2:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80016c6:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80016c8:	d002      	beq.n	80016d0 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80016ca:	b00a      	add	sp, #40	; 0x28
 80016cc:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80016d0:	4d28      	ldr	r5, [pc, #160]	; (8001774 <HAL_I2C_MspInit+0xc4>)
 80016d2:	9401      	str	r4, [sp, #4]
 80016d4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016d6:	4828      	ldr	r0, [pc, #160]	; (8001778 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80016d8:	f043 0304 	orr.w	r3, r3, #4
 80016dc:	632b      	str	r3, [r5, #48]	; 0x30
 80016de:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80016e0:	f003 0304 	and.w	r3, r3, #4
 80016e4:	9301      	str	r3, [sp, #4]
 80016e6:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016e8:	9402      	str	r4, [sp, #8]
 80016ea:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80016ec:	f043 0301 	orr.w	r3, r3, #1
 80016f0:	632b      	str	r3, [r5, #48]	; 0x30
 80016f2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80016f4:	f003 0301 	and.w	r3, r3, #1
 80016f8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80016fa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80016fe:	f04f 0801 	mov.w	r8, #1
 8001702:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001706:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001708:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800170a:	2312      	movs	r3, #18
 800170c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001710:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001714:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001716:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001718:	f008 fc2e 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800171c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800171e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001722:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001724:	4815      	ldr	r0, [pc, #84]	; (800177c <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001726:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001728:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800172c:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001730:	f008 fc22 	bl	8009f78 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001734:	9403      	str	r4, [sp, #12]
 8001736:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001738:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800173c:	642b      	str	r3, [r5, #64]	; 0x40
 800173e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001740:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001744:	4622      	mov	r2, r4
 8001746:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001748:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800174a:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 800174c:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800174e:	f008 f9a5 	bl	8009a9c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001752:	2048      	movs	r0, #72	; 0x48
 8001754:	f008 f9e0 	bl	8009b18 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001758:	6a2b      	ldr	r3, [r5, #32]
 800175a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800175e:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001760:	6a2b      	ldr	r3, [r5, #32]
 8001762:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001766:	622b      	str	r3, [r5, #32]
}
 8001768:	b00a      	add	sp, #40	; 0x28
 800176a:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 800176e:	bf00      	nop
 8001770:	40005c00 	.word	0x40005c00
 8001774:	40023800 	.word	0x40023800
 8001778:	40020800 	.word	0x40020800
 800177c:	40020000 	.word	0x40020000

08001780 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001780:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001784:	4604      	mov	r4, r0
 8001786:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001788:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800178a:	2230      	movs	r2, #48	; 0x30
 800178c:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800178e:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001792:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001796:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001798:	f02a fc1f 	bl	802bfda <memset>
  if(hltdc->Instance==LTDC)
 800179c:	4b67      	ldr	r3, [pc, #412]	; (800193c <HAL_LTDC_MspInit+0x1bc>)
 800179e:	6822      	ldr	r2, [r4, #0]
 80017a0:	429a      	cmp	r2, r3
 80017a2:	d002      	beq.n	80017aa <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80017a4:	b01a      	add	sp, #104	; 0x68
 80017a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80017aa:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80017ac:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80017ae:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80017b0:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80017b2:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80017b4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80017b8:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80017ba:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80017bc:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80017be:	f00a fe45 	bl	800c44c <HAL_RCCEx_PeriphCLKConfig>
 80017c2:	2800      	cmp	r0, #0
 80017c4:	f040 80b7 	bne.w	8001936 <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80017c8:	4b5d      	ldr	r3, [pc, #372]	; (8001940 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017ca:	485e      	ldr	r0, [pc, #376]	; (8001944 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80017cc:	2400      	movs	r4, #0
 80017ce:	9401      	str	r4, [sp, #4]
 80017d0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80017d2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80017d6:	645a      	str	r2, [r3, #68]	; 0x44
 80017d8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80017da:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80017de:	9201      	str	r2, [sp, #4]
 80017e0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80017e2:	9402      	str	r4, [sp, #8]
 80017e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017e6:	f042 0220 	orr.w	r2, r2, #32
 80017ea:	631a      	str	r2, [r3, #48]	; 0x30
 80017ec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017ee:	f002 0220 	and.w	r2, r2, #32
 80017f2:	9202      	str	r2, [sp, #8]
 80017f4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80017f6:	9403      	str	r4, [sp, #12]
 80017f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017fa:	f042 0201 	orr.w	r2, r2, #1
 80017fe:	631a      	str	r2, [r3, #48]	; 0x30
 8001800:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001802:	f002 0201 	and.w	r2, r2, #1
 8001806:	9203      	str	r2, [sp, #12]
 8001808:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800180a:	9404      	str	r4, [sp, #16]
 800180c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800180e:	f042 0202 	orr.w	r2, r2, #2
 8001812:	631a      	str	r2, [r3, #48]	; 0x30
 8001814:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001816:	f002 0202 	and.w	r2, r2, #2
 800181a:	9204      	str	r2, [sp, #16]
 800181c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 800181e:	9405      	str	r4, [sp, #20]
 8001820:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001822:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001826:	631a      	str	r2, [r3, #48]	; 0x30
 8001828:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800182a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800182e:	9205      	str	r2, [sp, #20]
 8001830:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001832:	9406      	str	r4, [sp, #24]
 8001834:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001836:	f042 0204 	orr.w	r2, r2, #4
 800183a:	631a      	str	r2, [r3, #48]	; 0x30
 800183c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800183e:	f002 0204 	and.w	r2, r2, #4
 8001842:	9206      	str	r2, [sp, #24]
 8001844:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001846:	9407      	str	r4, [sp, #28]
 8001848:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800184a:	f042 0208 	orr.w	r2, r2, #8
 800184e:	631a      	str	r2, [r3, #48]	; 0x30
 8001850:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001852:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001856:	2600      	movs	r6, #0
 8001858:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800185a:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800185c:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800185e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001860:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001864:	2302      	movs	r3, #2
 8001866:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800186a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800186e:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001870:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001872:	f008 fb81 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001876:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001878:	f641 0258 	movw	r2, #6232	; 0x1858
 800187c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800187e:	4832      	ldr	r0, [pc, #200]	; (8001948 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001880:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001882:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001886:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800188a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800188e:	f008 fb73 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001892:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001894:	2203      	movs	r2, #3
 8001896:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001898:	482c      	ldr	r0, [pc, #176]	; (800194c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800189a:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800189e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80018a2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018a6:	f008 fb67 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018aa:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80018ac:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80018b0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018b2:	4826      	ldr	r0, [pc, #152]	; (800194c <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80018b4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80018b6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80018ba:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80018be:	f008 fb5b 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018c2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80018c4:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80018c8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018ca:	4821      	ldr	r0, [pc, #132]	; (8001950 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80018cc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80018ce:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80018d2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80018d6:	f008 fb4f 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018da:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80018dc:	22c0      	movs	r2, #192	; 0xc0
 80018de:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018e0:	481c      	ldr	r0, [pc, #112]	; (8001954 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80018e2:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80018e4:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80018e8:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018ec:	f008 fb44 	bl	8009f78 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018f0:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80018f2:	2208      	movs	r2, #8
 80018f4:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80018f6:	4818      	ldr	r0, [pc, #96]	; (8001958 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80018f8:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80018fa:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80018fe:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001902:	f008 fb39 	bl	8009f78 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001906:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001908:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800190a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800190e:	4810      	ldr	r0, [pc, #64]	; (8001950 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001910:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001914:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001918:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800191c:	f008 fb2c 	bl	8009f78 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001920:	4622      	mov	r2, r4
 8001922:	2105      	movs	r1, #5
 8001924:	2058      	movs	r0, #88	; 0x58
 8001926:	f008 f8b9 	bl	8009a9c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800192a:	2058      	movs	r0, #88	; 0x58
 800192c:	f008 f8f4 	bl	8009b18 <HAL_NVIC_EnableIRQ>
}
 8001930:	b01a      	add	sp, #104	; 0x68
 8001932:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 8001936:	f7ff fd39 	bl	80013ac <Error_Handler>
 800193a:	e745      	b.n	80017c8 <HAL_LTDC_MspInit+0x48>
 800193c:	40016800 	.word	0x40016800
 8001940:	40023800 	.word	0x40023800
 8001944:	40021400 	.word	0x40021400
 8001948:	40020000 	.word	0x40020000
 800194c:	40020400 	.word	0x40020400
 8001950:	40021800 	.word	0x40021800
 8001954:	40020800 	.word	0x40020800
 8001958:	40020c00 	.word	0x40020c00
 800195c:	00000000 	.word	0x00000000

08001960 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001960:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 8001962:	4a1b      	ldr	r2, [pc, #108]	; (80019d0 <HAL_SPI_MspInit+0x70>)
 8001964:	6801      	ldr	r1, [r0, #0]
{
 8001966:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001968:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 800196a:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800196c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001970:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001974:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 8001976:	d001      	beq.n	800197c <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001978:	b008      	add	sp, #32
 800197a:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 800197c:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001980:	9300      	str	r3, [sp, #0]
 8001982:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001984:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8001988:	6450      	str	r0, [r2, #68]	; 0x44
 800198a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800198c:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8001990:	9000      	str	r0, [sp, #0]
 8001992:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001994:	9301      	str	r3, [sp, #4]
 8001996:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001998:	480e      	ldr	r0, [pc, #56]	; (80019d4 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800199a:	f043 0320 	orr.w	r3, r3, #32
 800199e:	6313      	str	r3, [r2, #48]	; 0x30
 80019a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80019a2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80019c8 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80019a6:	f003 0320 	and.w	r3, r3, #32
 80019aa:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019ac:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80019ae:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019b0:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80019b2:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80019b6:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80019ba:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019bc:	f008 fadc 	bl	8009f78 <HAL_GPIO_Init>
}
 80019c0:	b008      	add	sp, #32
 80019c2:	bd10      	pop	{r4, pc}
 80019c4:	f3af 8000 	nop.w
 80019c8:	00000380 	.word	0x00000380
 80019cc:	00000002 	.word	0x00000002
 80019d0:	40015000 	.word	0x40015000
 80019d4:	40021400 	.word	0x40021400

080019d8 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 80019d8:	6803      	ldr	r3, [r0, #0]
 80019da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 80019de:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM2)
 80019e0:	d018      	beq.n	8001a14 <HAL_TIM_Base_MspInit+0x3c>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 80019e2:	4a22      	ldr	r2, [pc, #136]	; (8001a6c <HAL_TIM_Base_MspInit+0x94>)
 80019e4:	4293      	cmp	r3, r2
 80019e6:	d007      	beq.n	80019f8 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM9)
 80019e8:	4a21      	ldr	r2, [pc, #132]	; (8001a70 <HAL_TIM_Base_MspInit+0x98>)
 80019ea:	4293      	cmp	r3, r2
 80019ec:	d021      	beq.n	8001a32 <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM9_CLK_ENABLE();
  /* USER CODE BEGIN TIM9_MspInit 1 */

  /* USER CODE END TIM9_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 80019ee:	4a21      	ldr	r2, [pc, #132]	; (8001a74 <HAL_TIM_Base_MspInit+0x9c>)
 80019f0:	4293      	cmp	r3, r2
 80019f2:	d02c      	beq.n	8001a4e <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 80019f4:	b004      	add	sp, #16
 80019f6:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 80019f8:	4b1f      	ldr	r3, [pc, #124]	; (8001a78 <HAL_TIM_Base_MspInit+0xa0>)
 80019fa:	2200      	movs	r2, #0
 80019fc:	9201      	str	r2, [sp, #4]
 80019fe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a00:	f042 0202 	orr.w	r2, r2, #2
 8001a04:	641a      	str	r2, [r3, #64]	; 0x40
 8001a06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a08:	f003 0302 	and.w	r3, r3, #2
 8001a0c:	9301      	str	r3, [sp, #4]
 8001a0e:	9b01      	ldr	r3, [sp, #4]
}
 8001a10:	b004      	add	sp, #16
 8001a12:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001a14:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8001a18:	2200      	movs	r2, #0
 8001a1a:	9200      	str	r2, [sp, #0]
 8001a1c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a1e:	f042 0201 	orr.w	r2, r2, #1
 8001a22:	641a      	str	r2, [r3, #64]	; 0x40
 8001a24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a26:	f003 0301 	and.w	r3, r3, #1
 8001a2a:	9300      	str	r3, [sp, #0]
 8001a2c:	9b00      	ldr	r3, [sp, #0]
}
 8001a2e:	b004      	add	sp, #16
 8001a30:	4770      	bx	lr
    __HAL_RCC_TIM9_CLK_ENABLE();
 8001a32:	4b11      	ldr	r3, [pc, #68]	; (8001a78 <HAL_TIM_Base_MspInit+0xa0>)
 8001a34:	2200      	movs	r2, #0
 8001a36:	9202      	str	r2, [sp, #8]
 8001a38:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a3a:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001a3e:	645a      	str	r2, [r3, #68]	; 0x44
 8001a40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001a42:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001a46:	9302      	str	r3, [sp, #8]
 8001a48:	9b02      	ldr	r3, [sp, #8]
}
 8001a4a:	b004      	add	sp, #16
 8001a4c:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 8001a4e:	4b0a      	ldr	r3, [pc, #40]	; (8001a78 <HAL_TIM_Base_MspInit+0xa0>)
 8001a50:	2200      	movs	r2, #0
 8001a52:	9203      	str	r2, [sp, #12]
 8001a54:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a56:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a5a:	641a      	str	r2, [r3, #64]	; 0x40
 8001a5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a5e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a62:	9303      	str	r3, [sp, #12]
 8001a64:	9b03      	ldr	r3, [sp, #12]
}
 8001a66:	b004      	add	sp, #16
 8001a68:	4770      	bx	lr
 8001a6a:	bf00      	nop
 8001a6c:	40000400 	.word	0x40000400
 8001a70:	40014000 	.word	0x40014000
 8001a74:	40002000 	.word	0x40002000
 8001a78:	40023800 	.word	0x40023800
 8001a7c:	00000000 	.word	0x00000000

08001a80 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001a80:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM9)
 8001a82:	6802      	ldr	r2, [r0, #0]
 8001a84:	4924      	ldr	r1, [pc, #144]	; (8001b18 <HAL_TIM_MspPostInit+0x98>)
{
 8001a86:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a88:	2300      	movs	r3, #0
  if(htim->Instance==TIM9)
 8001a8a:	428a      	cmp	r2, r1
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a8c:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001a90:	e9cd 3304 	strd	r3, r3, [sp, #16]
 8001a94:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM9)
 8001a96:	d005      	beq.n	8001aa4 <HAL_TIM_MspPostInit+0x24>

  /* USER CODE BEGIN TIM9_MspPostInit 1 */

  /* USER CODE END TIM9_MspPostInit 1 */
  }
  else if(htim->Instance==TIM14)
 8001a98:	4920      	ldr	r1, [pc, #128]	; (8001b1c <HAL_TIM_MspPostInit+0x9c>)
 8001a9a:	428a      	cmp	r2, r1
 8001a9c:	d01a      	beq.n	8001ad4 <HAL_TIM_MspPostInit+0x54>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8001a9e:	b009      	add	sp, #36	; 0x24
 8001aa0:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001aa4:	4a1e      	ldr	r2, [pc, #120]	; (8001b20 <HAL_TIM_MspPostInit+0xa0>)
 8001aa6:	9300      	str	r3, [sp, #0]
 8001aa8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aaa:	481e      	ldr	r0, [pc, #120]	; (8001b24 <HAL_TIM_MspPostInit+0xa4>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001aac:	f043 0301 	orr.w	r3, r3, #1
 8001ab0:	6313      	str	r3, [r2, #48]	; 0x30
 8001ab2:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001ab4:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8001b08 <HAL_TIM_MspPostInit+0x88>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ab8:	f003 0301 	and.w	r3, r3, #1
 8001abc:	9300      	str	r3, [sp, #0]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001abe:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8001ac0:	2303      	movs	r3, #3
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001ac2:	ed8d 7b02 	vstr	d7, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ac6:	9a00      	ldr	r2, [sp, #0]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 8001ac8:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aca:	f008 fa55 	bl	8009f78 <HAL_GPIO_Init>
}
 8001ace:	b009      	add	sp, #36	; 0x24
 8001ad0:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ad4:	4a12      	ldr	r2, [pc, #72]	; (8001b20 <HAL_TIM_MspPostInit+0xa0>)
 8001ad6:	9301      	str	r3, [sp, #4]
 8001ad8:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001ada:	f043 0301 	orr.w	r3, r3, #1
 8001ade:	6313      	str	r3, [r2, #48]	; 0x30
 8001ae0:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8001ae2:	ed9f 7b0b 	vldr	d7, [pc, #44]	; 8001b10 <HAL_TIM_MspPostInit+0x90>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ae6:	f003 0301 	and.w	r3, r3, #1
 8001aea:	9301      	str	r3, [sp, #4]
 8001aec:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001aee:	480d      	ldr	r0, [pc, #52]	; (8001b24 <HAL_TIM_MspPostInit+0xa4>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001af0:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001af2:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001af4:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8001af6:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001afa:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001afc:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001afe:	f008 fa3b 	bl	8009f78 <HAL_GPIO_Init>
}
 8001b02:	b009      	add	sp, #36	; 0x24
 8001b04:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b08:	00000004 	.word	0x00000004
 8001b0c:	00000002 	.word	0x00000002
 8001b10:	00000080 	.word	0x00000080
 8001b14:	00000002 	.word	0x00000002
 8001b18:	40014000 	.word	0x40014000
 8001b1c:	40002000 	.word	0x40002000
 8001b20:	40023800 	.word	0x40023800
 8001b24:	40020000 	.word	0x40020000

08001b28 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001b28:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001b2a:	4b2b      	ldr	r3, [pc, #172]	; (8001bd8 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001b2c:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001b2e:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001b30:	2200      	movs	r2, #0
 8001b32:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001b34:	2c00      	cmp	r4, #0
 8001b36:	d14c      	bne.n	8001bd2 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001b38:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b3a:	4a28      	ldr	r2, [pc, #160]	; (8001bdc <HAL_SDRAM_MspInit+0xb4>)
 8001b3c:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001b3e:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b40:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b42:	4827      	ldr	r0, [pc, #156]	; (8001be0 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b44:	433b      	orrs	r3, r7
 8001b46:	6393      	str	r3, [r2, #56]	; 0x38
 8001b48:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001b4a:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b4c:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b4e:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001b50:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b54:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b56:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001b58:	2302      	movs	r3, #2
 8001b5a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b5e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001b62:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b64:	f008 fa08 	bl	8009f78 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b68:	481e      	ldr	r0, [pc, #120]	; (8001be4 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001b6a:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b6c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b6e:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b70:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b74:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b78:	f008 f9fe 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001b7c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b80:	4819      	ldr	r0, [pc, #100]	; (8001be8 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001b82:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b84:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b86:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001b8a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b8e:	f008 f9f3 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001b92:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b96:	4815      	ldr	r0, [pc, #84]	; (8001bec <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001b98:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001b9a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b9c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ba0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ba4:	f008 f9e8 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ba8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bac:	4810      	ldr	r0, [pc, #64]	; (8001bf0 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001bae:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bb0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bb2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bb6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bba:	f008 f9dd 	bl	8009f78 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001bbe:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc0:	480c      	ldr	r0, [pc, #48]	; (8001bf4 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bc2:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bc4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bc6:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bca:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001bcc:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bce:	f008 f9d3 	bl	8009f78 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001bd2:	b009      	add	sp, #36	; 0x24
 8001bd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bd6:	bf00      	nop
 8001bd8:	20000894 	.word	0x20000894
 8001bdc:	40023800 	.word	0x40023800
 8001be0:	40021400 	.word	0x40021400
 8001be4:	40020800 	.word	0x40020800
 8001be8:	40021800 	.word	0x40021800
 8001bec:	40021000 	.word	0x40021000
 8001bf0:	40020c00 	.word	0x40020c00
 8001bf4:	40020400 	.word	0x40020400

08001bf8 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001bf8:	b570      	push	{r4, r5, r6, lr}
 8001bfa:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001bfc:	4b23      	ldr	r3, [pc, #140]	; (8001c8c <HAL_InitTick+0x94>)
 8001bfe:	2200      	movs	r2, #0
 8001c00:	9202      	str	r2, [sp, #8]
 8001c02:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001c04:	f042 0210 	orr.w	r2, r2, #16
 8001c08:	641a      	str	r2, [r3, #64]	; 0x40
 8001c0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c0c:	f003 0310 	and.w	r3, r3, #16
 8001c10:	9302      	str	r3, [sp, #8]
{
 8001c12:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001c14:	a901      	add	r1, sp, #4
 8001c16:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001c18:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001c1a:	f00a fbf5 	bl	800c408 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001c1e:	9b06      	ldr	r3, [sp, #24]
 8001c20:	b9d3      	cbnz	r3, 8001c58 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001c22:	f00a fbe1 	bl	800c3e8 <HAL_RCC_GetPCLK1Freq>
 8001c26:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001c28:	4a19      	ldr	r2, [pc, #100]	; (8001c90 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001c2a:	4c1a      	ldr	r4, [pc, #104]	; (8001c94 <HAL_InitTick+0x9c>)
 8001c2c:	491a      	ldr	r1, [pc, #104]	; (8001c98 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001c2e:	fba2 2303 	umull	r2, r3, r2, r3
 8001c32:	0c9b      	lsrs	r3, r3, #18
 8001c34:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001c36:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001c38:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001c3c:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001c3e:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001c42:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c44:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001c46:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001c48:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001c4a:	f00b fa0d 	bl	800d068 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001c4e:	4606      	mov	r6, r0
 8001c50:	b130      	cbz	r0, 8001c60 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001c52:	4630      	mov	r0, r6
 8001c54:	b008      	add	sp, #32
 8001c56:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001c58:	f00a fbc6 	bl	800c3e8 <HAL_RCC_GetPCLK1Freq>
 8001c5c:	0043      	lsls	r3, r0, #1
 8001c5e:	e7e3      	b.n	8001c28 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001c60:	4620      	mov	r0, r4
 8001c62:	f00b fa8f 	bl	800d184 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001c66:	4606      	mov	r6, r0
 8001c68:	2800      	cmp	r0, #0
 8001c6a:	d1f2      	bne.n	8001c52 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001c6c:	2036      	movs	r0, #54	; 0x36
 8001c6e:	f007 ff53 	bl	8009b18 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001c72:	2d0f      	cmp	r5, #15
 8001c74:	d901      	bls.n	8001c7a <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001c76:	2601      	movs	r6, #1
 8001c78:	e7eb      	b.n	8001c52 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001c7a:	4632      	mov	r2, r6
 8001c7c:	4629      	mov	r1, r5
 8001c7e:	2036      	movs	r0, #54	; 0x36
 8001c80:	f007 ff0c 	bl	8009a9c <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001c84:	4b05      	ldr	r3, [pc, #20]	; (8001c9c <HAL_InitTick+0xa4>)
 8001c86:	601d      	str	r5, [r3, #0]
 8001c88:	e7e3      	b.n	8001c52 <HAL_InitTick+0x5a>
 8001c8a:	bf00      	nop
 8001c8c:	40023800 	.word	0x40023800
 8001c90:	431bde83 	.word	0x431bde83
 8001c94:	20000898 	.word	0x20000898
 8001c98:	40001000 	.word	0x40001000
 8001c9c:	20000084 	.word	0x20000084

08001ca0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ca0:	4770      	bx	lr
 8001ca2:	bf00      	nop

08001ca4 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ca4:	e7fe      	b.n	8001ca4 <HardFault_Handler>
 8001ca6:	bf00      	nop

08001ca8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ca8:	e7fe      	b.n	8001ca8 <MemManage_Handler>
 8001caa:	bf00      	nop

08001cac <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001cac:	e7fe      	b.n	8001cac <BusFault_Handler>
 8001cae:	bf00      	nop

08001cb0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001cb0:	e7fe      	b.n	8001cb0 <UsageFault_Handler>
 8001cb2:	bf00      	nop

08001cb4 <DebugMon_Handler>:
 8001cb4:	4770      	bx	lr
 8001cb6:	bf00      	nop

08001cb8 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001cb8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001cba:	20c8      	movs	r0, #200	; 0xc8
 8001cbc:	f007 feca 	bl	8009a54 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001cc0:	4804      	ldr	r0, [pc, #16]	; (8001cd4 <EXTI3_IRQHandler+0x1c>)
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	2120      	movs	r1, #32
 8001cc6:	f008 fa9b 	bl	800a200 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001cca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001cce:	2008      	movs	r0, #8
 8001cd0:	f008 baa6 	b.w	800a220 <HAL_GPIO_EXTI_IRQHandler>
 8001cd4:	40021000 	.word	0x40021000

08001cd8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001cd8:	4801      	ldr	r0, [pc, #4]	; (8001ce0 <TIM6_DAC_IRQHandler+0x8>)
 8001cda:	f00b be33 	b.w	800d944 <HAL_TIM_IRQHandler>
 8001cde:	bf00      	nop
 8001ce0:	20000898 	.word	0x20000898

08001ce4 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001ce4:	4801      	ldr	r0, [pc, #4]	; (8001cec <I2C3_EV_IRQHandler+0x8>)
 8001ce6:	f009 b9fb 	b.w	800b0e0 <HAL_I2C_EV_IRQHandler>
 8001cea:	bf00      	nop
 8001cec:	200001ec 	.word	0x200001ec

08001cf0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001cf0:	4801      	ldr	r0, [pc, #4]	; (8001cf8 <LTDC_IRQHandler+0x8>)
 8001cf2:	f009 bf6f 	b.w	800bbd4 <HAL_LTDC_IRQHandler>
 8001cf6:	bf00      	nop
 8001cf8:	20000240 	.word	0x20000240

08001cfc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001cfc:	2001      	movs	r0, #1
 8001cfe:	4770      	bx	lr

08001d00 <_kill>:

int _kill(int pid, int sig)
{
 8001d00:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001d02:	f02a fa63 	bl	802c1cc <__errno>
 8001d06:	2316      	movs	r3, #22
 8001d08:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001d0a:	f04f 30ff 	mov.w	r0, #4294967295
 8001d0e:	bd08      	pop	{r3, pc}

08001d10 <_exit>:

void _exit (int status)
{
 8001d10:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001d12:	f02a fa5b 	bl	802c1cc <__errno>
 8001d16:	2316      	movs	r3, #22
 8001d18:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001d1a:	e7fe      	b.n	8001d1a <_exit+0xa>

08001d1c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001d1c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d1e:	1e16      	subs	r6, r2, #0
 8001d20:	dd07      	ble.n	8001d32 <_read+0x16>
 8001d22:	460c      	mov	r4, r1
 8001d24:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001d26:	f3af 8000 	nop.w
 8001d2a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d2e:	42a5      	cmp	r5, r4
 8001d30:	d1f9      	bne.n	8001d26 <_read+0xa>
	}

return len;
}
 8001d32:	4630      	mov	r0, r6
 8001d34:	bd70      	pop	{r4, r5, r6, pc}
 8001d36:	bf00      	nop

08001d38 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001d38:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d3a:	1e16      	subs	r6, r2, #0
 8001d3c:	dd07      	ble.n	8001d4e <_write+0x16>
 8001d3e:	460c      	mov	r4, r1
 8001d40:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001d42:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001d46:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001d4a:	42ac      	cmp	r4, r5
 8001d4c:	d1f9      	bne.n	8001d42 <_write+0xa>
	}
	return len;
}
 8001d4e:	4630      	mov	r0, r6
 8001d50:	bd70      	pop	{r4, r5, r6, pc}
 8001d52:	bf00      	nop

08001d54 <_close>:

int _close(int file)
{
	return -1;
}
 8001d54:	f04f 30ff 	mov.w	r0, #4294967295
 8001d58:	4770      	bx	lr
 8001d5a:	bf00      	nop

08001d5c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001d5c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001d60:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001d62:	2000      	movs	r0, #0
 8001d64:	4770      	bx	lr
 8001d66:	bf00      	nop

08001d68 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001d68:	2001      	movs	r0, #1
 8001d6a:	4770      	bx	lr

08001d6c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	4770      	bx	lr

08001d70 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001d70:	4a0b      	ldr	r2, [pc, #44]	; (8001da0 <_sbrk+0x30>)
{
 8001d72:	b508      	push	{r3, lr}
 8001d74:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001d76:	6810      	ldr	r0, [r2, #0]
 8001d78:	b128      	cbz	r0, 8001d86 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001d7a:	4403      	add	r3, r0
 8001d7c:	4669      	mov	r1, sp
 8001d7e:	428b      	cmp	r3, r1
 8001d80:	d807      	bhi.n	8001d92 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001d82:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001d84:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001d86:	4807      	ldr	r0, [pc, #28]	; (8001da4 <_sbrk+0x34>)
 8001d88:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001d8a:	4403      	add	r3, r0
 8001d8c:	4669      	mov	r1, sp
 8001d8e:	428b      	cmp	r3, r1
 8001d90:	d9f7      	bls.n	8001d82 <_sbrk+0x12>
		errno = ENOMEM;
 8001d92:	f02a fa1b 	bl	802c1cc <__errno>
 8001d96:	230c      	movs	r3, #12
 8001d98:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001d9a:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001d9e:	bd08      	pop	{r3, pc}
 8001da0:	200008e0 	.word	0x200008e0
 8001da4:	20014478 	.word	0x20014478

08001da8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001da8:	4770      	bx	lr
 8001daa:	bf00      	nop

08001dac <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001dac:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001dae:	f000 fbab 	bl	8002508 <touchgfx_components_init>
  touchgfx_init();
}
 8001db2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001db6:	f000 bb33 	b.w	8002420 <touchgfx_init>
 8001dba:	bf00      	nop

08001dbc <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001dbc:	f000 bba6 	b.w	800250c <touchgfx_taskEntry>

08001dc0 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001dc0:	4770      	bx	lr

08001dc2 <_ZN20STM32TouchControllerD0Ev>:
 8001dc2:	b510      	push	{r4, lr}
 8001dc4:	2104      	movs	r1, #4
 8001dc6:	4604      	mov	r4, r0
 8001dc8:	f029 f8ef 	bl	802afaa <_ZdlPvj>
 8001dcc:	4620      	mov	r0, r4
 8001dce:	bd10      	pop	{r4, pc}

08001dd0 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001dd0:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001dd2:	4b0c      	ldr	r3, [pc, #48]	; (8001e04 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001dd4:	4c0c      	ldr	r4, [pc, #48]	; (8001e08 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001dd6:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001dd8:	4b0c      	ldr	r3, [pc, #48]	; (8001e0c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001dda:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001ddc:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001dde:	6863      	ldr	r3, [r4, #4]
 8001de0:	4798      	blx	r3
 8001de2:	f640 0311 	movw	r3, #2065	; 0x811
 8001de6:	4298      	cmp	r0, r3
 8001de8:	d10a      	bne.n	8001e00 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001dea:	4d09      	ldr	r5, [pc, #36]	; (8001e10 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001dec:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001dee:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001df0:	2082      	movs	r0, #130	; 0x82
 8001df2:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001df4:	682b      	ldr	r3, [r5, #0]
 8001df6:	2082      	movs	r0, #130	; 0x82
 8001df8:	68db      	ldr	r3, [r3, #12]
 8001dfa:	4798      	blx	r3
 8001dfc:	2000      	movs	r0, #0
    }

    return ret;
}
 8001dfe:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001e00:	2001      	movs	r0, #1
 8001e02:	e7fc      	b.n	8001dfe <_Z11BSP_TS_Inittt+0x2e>
 8001e04:	200008e4 	.word	0x200008e4
 8001e08:	20000054 	.word	0x20000054
 8001e0c:	200008e6 	.word	0x200008e6
 8001e10:	200008e8 	.word	0x200008e8

08001e14 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001e14:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001e18:	20f0      	movs	r0, #240	; 0xf0
 8001e1a:	f7ff bfd9 	b.w	8001dd0 <_Z11BSP_TS_Inittt>
	...

08001e20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001e20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001e22:	4d33      	ldr	r5, [pc, #204]	; (8001ef0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001e24:	682b      	ldr	r3, [r5, #0]
{
 8001e26:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001e28:	691b      	ldr	r3, [r3, #16]
 8001e2a:	2082      	movs	r0, #130	; 0x82
 8001e2c:	4798      	blx	r3
 8001e2e:	b280      	uxth	r0, r0
 8001e30:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001e32:	2800      	cmp	r0, #0
 8001e34:	d04a      	beq.n	8001ecc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001e36:	682b      	ldr	r3, [r5, #0]
 8001e38:	f10d 0206 	add.w	r2, sp, #6
 8001e3c:	695b      	ldr	r3, [r3, #20]
 8001e3e:	a901      	add	r1, sp, #4
 8001e40:	2082      	movs	r0, #130	; 0x82
 8001e42:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001e44:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001e48:	f640 6274 	movw	r2, #3700	; 0xe74
 8001e4c:	4293      	cmp	r3, r2
 8001e4e:	d93f      	bls.n	8001ed0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001e50:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001e54:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001e58:	1ad2      	subs	r2, r2, r3
 8001e5a:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001e5c:	2a0a      	cmp	r2, #10
 8001e5e:	d93d      	bls.n	8001edc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001e60:	230b      	movs	r3, #11
 8001e62:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001e66:	4b23      	ldr	r3, [pc, #140]	; (8001ef4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001e68:	881b      	ldrh	r3, [r3, #0]
 8001e6a:	429a      	cmp	r2, r3
 8001e6c:	d901      	bls.n	8001e72 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001e6e:	3b01      	subs	r3, #1
 8001e70:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001e72:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001e76:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001e7a:	428b      	cmp	r3, r1
 8001e7c:	d830      	bhi.n	8001ee0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001e7e:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001e82:	330e      	adds	r3, #14
 8001e84:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001e86:	210f      	movs	r1, #15
 8001e88:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001e8c:	491a      	ldr	r1, [pc, #104]	; (8001ef8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001e8e:	8809      	ldrh	r1, [r1, #0]
 8001e90:	428b      	cmp	r3, r1
 8001e92:	d901      	bls.n	8001e98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001e94:	3901      	subs	r1, #1
 8001e96:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001e98:	4e18      	ldr	r6, [pc, #96]	; (8001efc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001e9a:	4d19      	ldr	r5, [pc, #100]	; (8001f00 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001e9c:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001e9e:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001ea0:	4283      	cmp	r3, r0
 8001ea2:	b281      	uxth	r1, r0
 8001ea4:	bf8c      	ite	hi
 8001ea6:	1a59      	subhi	r1, r3, r1
 8001ea8:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001eaa:	b2b8      	uxth	r0, r7
 8001eac:	42ba      	cmp	r2, r7
 8001eae:	bf8c      	ite	hi
 8001eb0:	1a10      	subhi	r0, r2, r0
 8001eb2:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001eb4:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001eb6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001eb8:	4401      	add	r1, r0
 8001eba:	2905      	cmp	r1, #5
        {
            _x = x;
 8001ebc:	bfc8      	it	gt
 8001ebe:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001ec0:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001ec2:	bfc8      	it	gt
 8001ec4:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001ec6:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001ec8:	682b      	ldr	r3, [r5, #0]
 8001eca:	80a3      	strh	r3, [r4, #4]
    }
}
 8001ecc:	b003      	add	sp, #12
 8001ece:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001ed0:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001ed2:	bf9c      	itt	ls
 8001ed4:	23b4      	movls	r3, #180	; 0xb4
 8001ed6:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001eda:	e7bb      	b.n	8001e54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001edc:	2200      	movs	r2, #0
 8001ede:	e7c8      	b.n	8001e72 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001ee0:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001ee4:	3308      	adds	r3, #8
 8001ee6:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001ee8:	2b0e      	cmp	r3, #14
 8001eea:	d8cc      	bhi.n	8001e86 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001eec:	2300      	movs	r3, #0
 8001eee:	e7d3      	b.n	8001e98 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001ef0:	200008e8 	.word	0x200008e8
 8001ef4:	200008e6 	.word	0x200008e6
 8001ef8:	200008e4 	.word	0x200008e4
 8001efc:	200008ec 	.word	0x200008ec
 8001f00:	200008f0 	.word	0x200008f0

08001f04 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001f04:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001f06:	4668      	mov	r0, sp
{
 8001f08:	460d      	mov	r5, r1
 8001f0a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001f0c:	f7ff ff88 	bl	8001e20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001f10:	f8bd 0000 	ldrh.w	r0, [sp]
 8001f14:	b148      	cbz	r0, 8001f2a <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001f16:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001f1a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001f1c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001f20:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001f22:	4b03      	ldr	r3, [pc, #12]	; (8001f30 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001f24:	223c      	movs	r2, #60	; 0x3c
 8001f26:	601a      	str	r2, [r3, #0]
        return true;
 8001f28:	2001      	movs	r0, #1
}
 8001f2a:	b003      	add	sp, #12
 8001f2c:	bd30      	pop	{r4, r5, pc}
 8001f2e:	bf00      	nop
 8001f30:	20000010 	.word	0x20000010

08001f34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001f34:	b110      	cbz	r0, 8001f3c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001f36:	2802      	cmp	r0, #2
 8001f38:	d009      	beq.n	8001f4e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001f3a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001f3c:	4b07      	ldr	r3, [pc, #28]	; (8001f5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001f3e:	681a      	ldr	r2, [r3, #0]
 8001f40:	fab2 f282 	clz	r2, r2
 8001f44:	0952      	lsrs	r2, r2, #5
 8001f46:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001f48:	4805      	ldr	r0, [pc, #20]	; (8001f60 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001f4a:	f008 b959 	b.w	800a200 <HAL_GPIO_WritePin>
 8001f4e:	4b03      	ldr	r3, [pc, #12]	; (8001f5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001f50:	689a      	ldr	r2, [r3, #8]
 8001f52:	fab2 f282 	clz	r2, r2
 8001f56:	0952      	lsrs	r2, r2, #5
 8001f58:	2110      	movs	r1, #16
 8001f5a:	e7f5      	b.n	8001f48 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001f5c:	200008f4 	.word	0x200008f4
 8001f60:	40021000 	.word	0x40021000

08001f64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001f64:	b110      	cbz	r0, 8001f6c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001f66:	2802      	cmp	r0, #2
 8001f68:	d009      	beq.n	8001f7e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001f6a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001f6c:	4b07      	ldr	r3, [pc, #28]	; (8001f8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001f6e:	681a      	ldr	r2, [r3, #0]
 8001f70:	3a00      	subs	r2, #0
 8001f72:	bf18      	it	ne
 8001f74:	2201      	movne	r2, #1
 8001f76:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001f78:	4805      	ldr	r0, [pc, #20]	; (8001f90 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001f7a:	f008 b941 	b.w	800a200 <HAL_GPIO_WritePin>
 8001f7e:	4b03      	ldr	r3, [pc, #12]	; (8001f8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001f80:	689a      	ldr	r2, [r3, #8]
 8001f82:	3a00      	subs	r2, #0
 8001f84:	bf18      	it	ne
 8001f86:	2201      	movne	r2, #1
 8001f88:	2110      	movs	r1, #16
 8001f8a:	e7f5      	b.n	8001f78 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001f8c:	200008f4 	.word	0x200008f4
 8001f90:	40021000 	.word	0x40021000

08001f94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001f94:	b110      	cbz	r0, 8001f9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001f96:	2802      	cmp	r0, #2
 8001f98:	d004      	beq.n	8001fa4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001f9a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001f9c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001f9e:	4802      	ldr	r0, [pc, #8]	; (8001fa8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001fa0:	f008 b932 	b.w	800a208 <HAL_GPIO_TogglePin>
 8001fa4:	2110      	movs	r1, #16
 8001fa6:	e7fa      	b.n	8001f9e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001fa8:	40021000 	.word	0x40021000

08001fac <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001fac:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001fae:	b130      	cbz	r0, 8001fbe <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001fb0:	2802      	cmp	r0, #2
 8001fb2:	d009      	beq.n	8001fc8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001fb4:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001fb6:	1e43      	subs	r3, r0, #1
 8001fb8:	4258      	negs	r0, r3
 8001fba:	4158      	adcs	r0, r3
 8001fbc:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001fbe:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001fc0:	4802      	ldr	r0, [pc, #8]	; (8001fcc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001fc2:	f008 f917 	bl	800a1f4 <HAL_GPIO_ReadPin>
        break;
 8001fc6:	e7f6      	b.n	8001fb6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001fc8:	2110      	movs	r1, #16
 8001fca:	e7f9      	b.n	8001fc0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001fcc:	40021000 	.word	0x40021000

08001fd0 <_ZN8touchgfx4GPIO4initEv>:
{
 8001fd0:	b570      	push	{r4, r5, r6, lr}
 8001fd2:	4d08      	ldr	r5, [pc, #32]	; (8001ff4 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001fd4:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001fd6:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001fd8:	b2e0      	uxtb	r0, r4
 8001fda:	f7ff ffe7 	bl	8001fac <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001fde:	b118      	cbz	r0, 8001fe8 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001fe0:	682b      	ldr	r3, [r5, #0]
 8001fe2:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001fe4:	bf18      	it	ne
 8001fe6:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001fe8:	3401      	adds	r4, #1
 8001fea:	2c05      	cmp	r4, #5
 8001fec:	f105 0504 	add.w	r5, r5, #4
 8001ff0:	d1f2      	bne.n	8001fd8 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001ff2:	bd70      	pop	{r4, r5, r6, pc}
 8001ff4:	200008f4 	.word	0x200008f4

08001ff8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001ff8:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001ffa:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001ffe:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8002002:	4770      	bx	lr

08002004 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8002004:	2000      	movs	r0, #0
 8002006:	4770      	bx	lr

08002008 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8002008:	4b03      	ldr	r3, [pc, #12]	; (8002018 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800200a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800200c:	3900      	subs	r1, #0
 800200e:	bf18      	it	ne
 8002010:	2101      	movne	r1, #1
 8002012:	7019      	strb	r1, [r3, #0]
    }
 8002014:	4770      	bx	lr
 8002016:	bf00      	nop
 8002018:	2001383b 	.word	0x2001383b

0800201c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800201c:	2000      	movs	r0, #0
 800201e:	4770      	bx	lr

08002020 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8002020:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8002022:	b10b      	cbz	r3, 8002028 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8002024:	4608      	mov	r0, r1
 8002026:	4718      	bx	r3
        }
    }
 8002028:	4770      	bx	lr

0800202a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800202a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800202e:	4770      	bx	lr

08002030 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8002030:	6840      	ldr	r0, [r0, #4]
 8002032:	6803      	ldr	r3, [r0, #0]
 8002034:	699b      	ldr	r3, [r3, #24]
 8002036:	4718      	bx	r3

08002038 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8002038:	4770      	bx	lr

0800203a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800203a:	4770      	bx	lr

0800203c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800203c:	4770      	bx	lr
	...

08002040 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8002040:	b510      	push	{r4, lr}
 8002042:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8002044:	f000 fb4e 	bl	80026e4 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8002048:	6823      	ldr	r3, [r4, #0]
 800204a:	4903      	ldr	r1, [pc, #12]	; (8002058 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 800204c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002050:	4620      	mov	r0, r4
}
 8002052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8002056:	4718      	bx	r3
 8002058:	d0000000 	.word	0xd0000000

0800205c <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 800205c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800205e:	6803      	ldr	r3, [r0, #0]
{
 8002060:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8002062:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8002066:	4798      	blx	r3
    enableInterrupts();
 8002068:	6823      	ldr	r3, [r4, #0]
 800206a:	4620      	mov	r0, r4
 800206c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800206e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8002070:	f000 f8ec 	bl	800224c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8002074:	6823      	ldr	r3, [r4, #0]
 8002076:	4620      	mov	r0, r4
 8002078:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800207a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800207c:	2029      	movs	r0, #41	; 0x29
 800207e:	f7ff f921 	bl	80012c4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8002082:	f000 f8e3 	bl	800224c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8002086:	6823      	ldr	r3, [r4, #0]
 8002088:	4620      	mov	r0, r4
 800208a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800208c:	4798      	blx	r3
    for (;;)
 800208e:	e7f8      	b.n	8002082 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08002090 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8002090:	b510      	push	{r4, lr}
 8002092:	4604      	mov	r4, r0
        swapFrameBuffers();
 8002094:	f010 fa9a 	bl	80125cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8002098:	6823      	ldr	r3, [r4, #0]
 800209a:	4620      	mov	r0, r4
 800209c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80020a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80020a4:	4718      	bx	r3

080020a6 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80020a6:	f000 bb0f 	b.w	80026c8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080020aa <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80020aa:	f000 bb13 	b.w	80026d4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080020ae <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80020ae:	f000 bb37 	b.w	8002720 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080020b2 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80020b2:	f000 badf 	b.w	8002674 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080020b6 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80020b6:	f000 bae5 	b.w	8002684 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080020ba <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80020ba:	f000 bb3d 	b.w	8002738 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080020be <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80020be:	f000 bae9 	b.w	8002694 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080020c2 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80020c2:	f00f bcee 	b.w	8011aa2 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080020c6 <_ZN11TouchGFXHALD0Ev>:
 80020c6:	b510      	push	{r4, lr}
 80020c8:	217c      	movs	r1, #124	; 0x7c
 80020ca:	4604      	mov	r4, r0
 80020cc:	f028 ff6d 	bl	802afaa <_ZdlPvj>
 80020d0:	4620      	mov	r0, r4
 80020d2:	bd10      	pop	{r4, pc}

080020d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80020d4:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80020d8:	b11b      	cbz	r3, 80020e2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80020da:	6840      	ldr	r0, [r0, #4]
 80020dc:	6803      	ldr	r3, [r0, #0]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	4718      	bx	r3
    }
 80020e2:	4618      	mov	r0, r3
 80020e4:	4770      	bx	lr
	...

080020e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80020e8:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80020ea:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80020ee:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80020f2:	4b0c      	ldr	r3, [pc, #48]	; (8002124 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80020f4:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80020f6:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80020f8:	d009      	beq.n	800210e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80020fa:	b93a      	cbnz	r2, 800210c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80020fc:	4a0a      	ldr	r2, [pc, #40]	; (8002128 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80020fe:	490b      	ldr	r1, [pc, #44]	; (800212c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002100:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002102:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002104:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002106:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002108:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800210a:	701a      	strb	r2, [r3, #0]
    }
 800210c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800210e:	2a00      	cmp	r2, #0
 8002110:	d0fc      	beq.n	800210c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002112:	4a05      	ldr	r2, [pc, #20]	; (8002128 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002114:	4905      	ldr	r1, [pc, #20]	; (800212c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002116:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002118:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800211a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800211c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800211e:	2200      	movs	r2, #0
 8002120:	e7f3      	b.n	800210a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002122:	bf00      	nop
 8002124:	20013834 	.word	0x20013834
 8002128:	20013830 	.word	0x20013830
 800212c:	20013832 	.word	0x20013832

08002130 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002130:	b570      	push	{r4, r5, r6, lr}
 8002132:	460d      	mov	r5, r1
 8002134:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002136:	b935      	cbnz	r5, 8002146 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002138:	4b09      	ldr	r3, [pc, #36]	; (8002160 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800213a:	4a0a      	ldr	r2, [pc, #40]	; (8002164 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 800213c:	480a      	ldr	r0, [pc, #40]	; (8002168 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800213e:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002142:	f029 fd45 	bl	802bbd0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002146:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800214a:	4b08      	ldr	r3, [pc, #32]	; (800216c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800214c:	3a00      	subs	r2, #0
 800214e:	bf18      	it	ne
 8002150:	2201      	movne	r2, #1
 8002152:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002154:	6803      	ldr	r3, [r0, #0]
    }
 8002156:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800215a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800215e:	4718      	bx	r3
 8002160:	0802cdf8 	.word	0x0802cdf8
 8002164:	0802ce30 	.word	0x0802ce30
 8002168:	0802ce7e 	.word	0x0802ce7e
 800216c:	2001383a 	.word	0x2001383a

08002170 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002170:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002172:	4b09      	ldr	r3, [pc, #36]	; (8002198 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002174:	881b      	ldrh	r3, [r3, #0]
 8002176:	428b      	cmp	r3, r1
 8002178:	d803      	bhi.n	8002182 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800217a:	4b08      	ldr	r3, [pc, #32]	; (800219c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800217c:	881b      	ldrh	r3, [r3, #0]
 800217e:	4293      	cmp	r3, r2
 8002180:	d905      	bls.n	800218e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8002182:	4b07      	ldr	r3, [pc, #28]	; (80021a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8002184:	4a07      	ldr	r2, [pc, #28]	; (80021a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8002186:	4808      	ldr	r0, [pc, #32]	; (80021a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8002188:	219e      	movs	r1, #158	; 0x9e
 800218a:	f029 fd21 	bl	802bbd0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800218e:	4b07      	ldr	r3, [pc, #28]	; (80021ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8002190:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8002192:	4b07      	ldr	r3, [pc, #28]	; (80021b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8002194:	801a      	strh	r2, [r3, #0]
    }
 8002196:	bd08      	pop	{r3, pc}
 8002198:	20013830 	.word	0x20013830
 800219c:	20013832 	.word	0x20013832
 80021a0:	0802cec3 	.word	0x0802cec3
 80021a4:	0802cf26 	.word	0x0802cf26
 80021a8:	0802ce7e 	.word	0x0802ce7e
 80021ac:	20013836 	.word	0x20013836
 80021b0:	20013838 	.word	0x20013838

080021b4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80021b4:	2101      	movs	r1, #1
{
 80021b6:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80021b8:	2200      	movs	r2, #0
 80021ba:	4608      	mov	r0, r1
 80021bc:	f00b fe04 	bl	800ddc8 <osSemaphoreNew>
 80021c0:	4b0a      	ldr	r3, [pc, #40]	; (80021ec <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80021c2:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80021c4:	b928      	cbnz	r0, 80021d2 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80021c6:	4b0a      	ldr	r3, [pc, #40]	; (80021f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80021c8:	4a0a      	ldr	r2, [pc, #40]	; (80021f4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80021ca:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80021cc:	480a      	ldr	r0, [pc, #40]	; (80021f8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80021ce:	f029 fcff 	bl	802bbd0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80021d2:	2200      	movs	r2, #0
 80021d4:	2104      	movs	r1, #4
 80021d6:	2001      	movs	r0, #1
 80021d8:	f00b feaa 	bl	800df30 <osMessageQueueNew>
 80021dc:	4b07      	ldr	r3, [pc, #28]	; (80021fc <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80021de:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80021e0:	b918      	cbnz	r0, 80021ea <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80021e2:	4b07      	ldr	r3, [pc, #28]	; (8002200 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80021e4:	4a03      	ldr	r2, [pc, #12]	; (80021f4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80021e6:	212c      	movs	r1, #44	; 0x2c
 80021e8:	e7f0      	b.n	80021cc <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80021ea:	bd08      	pop	{r3, pc}
 80021ec:	20000908 	.word	0x20000908
 80021f0:	0802d044 	.word	0x0802d044
 80021f4:	0802d08d 	.word	0x0802d08d
 80021f8:	0802d0bc 	.word	0x0802d0bc
 80021fc:	20000904 	.word	0x20000904
 8002200:	0802d136 	.word	0x0802d136

08002204 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002204:	4b02      	ldr	r3, [pc, #8]	; (8002210 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002206:	f04f 31ff 	mov.w	r1, #4294967295
 800220a:	6818      	ldr	r0, [r3, #0]
 800220c:	f00b be30 	b.w	800de70 <osSemaphoreAcquire>
 8002210:	20000908 	.word	0x20000908

08002214 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002214:	4b01      	ldr	r3, [pc, #4]	; (800221c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002216:	6818      	ldr	r0, [r3, #0]
 8002218:	f00b be5e 	b.w	800ded8 <osSemaphoreRelease>
 800221c:	20000908 	.word	0x20000908

08002220 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002220:	4b02      	ldr	r3, [pc, #8]	; (800222c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002222:	2100      	movs	r1, #0
 8002224:	6818      	ldr	r0, [r3, #0]
 8002226:	f00b be23 	b.w	800de70 <osSemaphoreAcquire>
 800222a:	bf00      	nop
 800222c:	20000908 	.word	0x20000908

08002230 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002230:	f7ff bff0 	b.w	8002214 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002234 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002234:	4803      	ldr	r0, [pc, #12]	; (8002244 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002236:	4904      	ldr	r1, [pc, #16]	; (8002248 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002238:	6800      	ldr	r0, [r0, #0]
 800223a:	2300      	movs	r3, #0
 800223c:	461a      	mov	r2, r3
 800223e:	f00b beb1 	b.w	800dfa4 <osMessageQueuePut>
 8002242:	bf00      	nop
 8002244:	20000904 	.word	0x20000904
 8002248:	20000014 	.word	0x20000014

0800224c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800224c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800224e:	4c08      	ldr	r4, [pc, #32]	; (8002270 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002250:	2300      	movs	r3, #0
 8002252:	461a      	mov	r2, r3
 8002254:	a901      	add	r1, sp, #4
 8002256:	6820      	ldr	r0, [r4, #0]
 8002258:	f00b feda 	bl	800e010 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800225c:	6820      	ldr	r0, [r4, #0]
 800225e:	f04f 33ff 	mov.w	r3, #4294967295
 8002262:	2200      	movs	r2, #0
 8002264:	a901      	add	r1, sp, #4
 8002266:	f00b fed3 	bl	800e010 <osMessageQueueGet>
}
 800226a:	b002      	add	sp, #8
 800226c:	bd10      	pop	{r4, pc}
 800226e:	bf00      	nop
 8002270:	20000904 	.word	0x20000904

08002274 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002274:	4770      	bx	lr

08002276 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002276:	2000      	movs	r0, #0
 8002278:	4770      	bx	lr

0800227a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 800227a:	4770      	bx	lr

0800227c <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 800227c:	4770      	bx	lr

0800227e <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 800227e:	2000      	movs	r0, #0
 8002280:	4770      	bx	lr

08002282 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8002282:	4770      	bx	lr

08002284 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8002284:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8002286:	4a03      	ldr	r2, [pc, #12]	; (8002294 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8002288:	4b03      	ldr	r3, [pc, #12]	; (8002298 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 800228a:	4804      	ldr	r0, [pc, #16]	; (800229c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800228c:	2122      	movs	r1, #34	; 0x22
 800228e:	f029 fc9f 	bl	802bbd0 <__assert_func>
 8002292:	bf00      	nop
 8002294:	0802d19b 	.word	0x0802d19b
 8002298:	0802d178 	.word	0x0802d178
 800229c:	0802d1d9 	.word	0x0802d1d9

080022a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80022a0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80022a2:	4a03      	ldr	r2, [pc, #12]	; (80022b0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80022a4:	4b03      	ldr	r3, [pc, #12]	; (80022b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80022a6:	4804      	ldr	r0, [pc, #16]	; (80022b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80022a8:	2127      	movs	r1, #39	; 0x27
 80022aa:	f029 fc91 	bl	802bbd0 <__assert_func>
 80022ae:	bf00      	nop
 80022b0:	0802d251 	.word	0x0802d251
 80022b4:	0802d178 	.word	0x0802d178
 80022b8:	0802d1d9 	.word	0x0802d1d9

080022bc <_ZN8STM32DMAD0Ev>:
 80022bc:	b510      	push	{r4, lr}
 80022be:	2144      	movs	r1, #68	; 0x44
 80022c0:	4604      	mov	r4, r0
 80022c2:	f028 fe72 	bl	802afaa <_ZdlPvj>
 80022c6:	4620      	mov	r0, r4
 80022c8:	bd10      	pop	{r4, pc}
	...

080022cc <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80022cc:	b538      	push	{r3, r4, r5, lr}
 80022ce:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 80022d0:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80022d2:	2500      	movs	r5, #0
 80022d4:	4b06      	ldr	r3, [pc, #24]	; (80022f0 <_ZN8STM32DMAC1Ev+0x24>)
 80022d6:	7225      	strb	r5, [r4, #8]
 80022d8:	300c      	adds	r0, #12
 80022da:	6060      	str	r0, [r4, #4]
 80022dc:	7265      	strb	r5, [r4, #9]
 80022de:	2201      	movs	r2, #1
 80022e0:	f841 3b20 	str.w	r3, [r1], #32
 80022e4:	f010 faca 	bl	801287c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80022e8:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 80022ea:	4620      	mov	r0, r4
 80022ec:	bd38      	pop	{r3, r4, r5, pc}
 80022ee:	bf00      	nop
 80022f0:	0802d298 	.word	0x0802d298

080022f4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80022f4:	2001      	movs	r0, #1
 80022f6:	4770      	bx	lr

080022f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80022f8:	2038      	movs	r0, #56	; 0x38
 80022fa:	4770      	bx	lr

080022fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80022fc:	2338      	movs	r3, #56	; 0x38
 80022fe:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002302:	3008      	adds	r0, #8
 8002304:	4770      	bx	lr

08002306 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002306:	2338      	movs	r3, #56	; 0x38
 8002308:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800230c:	3008      	adds	r0, #8
 800230e:	4770      	bx	lr

08002310 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002310:	2001      	movs	r0, #1
 8002312:	4770      	bx	lr

08002314 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002314:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002318:	4770      	bx	lr

0800231a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800231a:	f641 5304 	movw	r3, #7428	; 0x1d04
 800231e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002322:	3008      	adds	r0, #8
 8002324:	4770      	bx	lr

08002326 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002326:	f641 5304 	movw	r3, #7428	; 0x1d04
 800232a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800232e:	3008      	adds	r0, #8
 8002330:	4770      	bx	lr

08002332 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002332:	2001      	movs	r0, #1
 8002334:	4770      	bx	lr

08002336 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002336:	2010      	movs	r0, #16
 8002338:	4770      	bx	lr

0800233a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800233a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800233e:	3008      	adds	r0, #8
 8002340:	4770      	bx	lr

08002342 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002342:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002346:	3008      	adds	r0, #8
 8002348:	4770      	bx	lr

0800234a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800234a:	4608      	mov	r0, r1
 800234c:	f002 bb8c 	b.w	8004a68 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002350 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002350:	b510      	push	{r4, lr}
 8002352:	4b03      	ldr	r3, [pc, #12]	; (8002360 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002354:	6003      	str	r3, [r0, #0]
 8002356:	4604      	mov	r4, r0
 8002358:	f00e fab9 	bl	80108ce <_ZN8touchgfx17AbstractPartitionD1Ev>
 800235c:	4620      	mov	r0, r4
 800235e:	bd10      	pop	{r4, pc}
 8002360:	0802d350 	.word	0x0802d350

08002364 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002364:	b510      	push	{r4, lr}
 8002366:	4604      	mov	r4, r0
 8002368:	f7ff fff2 	bl	8002350 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800236c:	4620      	mov	r0, r4
 800236e:	2140      	movs	r1, #64	; 0x40
 8002370:	f028 fe1b 	bl	802afaa <_ZdlPvj>
 8002374:	4620      	mov	r0, r4
 8002376:	bd10      	pop	{r4, pc}

08002378 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002378:	b510      	push	{r4, lr}
 800237a:	4b03      	ldr	r3, [pc, #12]	; (8002388 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800237c:	6003      	str	r3, [r0, #0]
 800237e:	4604      	mov	r4, r0
 8002380:	f00e faa5 	bl	80108ce <_ZN8touchgfx17AbstractPartitionD1Ev>
 8002384:	4620      	mov	r0, r4
 8002386:	bd10      	pop	{r4, pc}
 8002388:	0802d31c 	.word	0x0802d31c

0800238c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800238c:	b510      	push	{r4, lr}
 800238e:	4604      	mov	r4, r0
 8002390:	f7ff fff2 	bl	8002378 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002394:	4620      	mov	r0, r4
 8002396:	f641 510c 	movw	r1, #7436	; 0x1d0c
 800239a:	f028 fe06 	bl	802afaa <_ZdlPvj>
 800239e:	4620      	mov	r0, r4
 80023a0:	bd10      	pop	{r4, pc}
	...

080023a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80023a4:	b510      	push	{r4, lr}
 80023a6:	4b03      	ldr	r3, [pc, #12]	; (80023b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80023a8:	6003      	str	r3, [r0, #0]
 80023aa:	4604      	mov	r4, r0
 80023ac:	f00e fa8f 	bl	80108ce <_ZN8touchgfx17AbstractPartitionD1Ev>
 80023b0:	4620      	mov	r0, r4
 80023b2:	bd10      	pop	{r4, pc}
 80023b4:	0802d2e8 	.word	0x0802d2e8

080023b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80023b8:	b510      	push	{r4, lr}
 80023ba:	4604      	mov	r4, r0
 80023bc:	f7ff fff2 	bl	80023a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80023c0:	4620      	mov	r0, r4
 80023c2:	2118      	movs	r1, #24
 80023c4:	f028 fdf1 	bl	802afaa <_ZdlPvj>
 80023c8:	4620      	mov	r0, r4
 80023ca:	bd10      	pop	{r4, pc}

080023cc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80023cc:	b510      	push	{r4, lr}
 80023ce:	4b09      	ldr	r3, [pc, #36]	; (80023f4 <_ZN12FrontendHeapD1Ev+0x28>)
 80023d0:	6003      	str	r3, [r0, #0]
 80023d2:	4604      	mov	r4, r0
 80023d4:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 80023d8:	3018      	adds	r0, #24
 80023da:	f7ff ffb9 	bl	8002350 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80023de:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80023e2:	f7ff ffc9 	bl	8002378 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80023e6:	f104 0014 	add.w	r0, r4, #20
 80023ea:	f7ff ffdb 	bl	80023a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80023ee:	4620      	mov	r0, r4
 80023f0:	bd10      	pop	{r4, pc}
 80023f2:	bf00      	nop
 80023f4:	0802d384 	.word	0x0802d384

080023f8 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80023f8:	b508      	push	{r3, lr}
 80023fa:	4802      	ldr	r0, [pc, #8]	; (8002404 <__tcf_0+0xc>)
 80023fc:	f7ff ffe6 	bl	80023cc <_ZN12FrontendHeapD1Ev>
 8002400:	bd08      	pop	{r3, pc}
 8002402:	bf00      	nop
 8002404:	20000910 	.word	0x20000910

08002408 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002408:	b510      	push	{r4, lr}
 800240a:	4604      	mov	r4, r0
 800240c:	f7ff ffde 	bl	80023cc <_ZN12FrontendHeapD1Ev>
 8002410:	4620      	mov	r0, r4
 8002412:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002416:	f028 fdc8 	bl	802afaa <_ZdlPvj>
 800241a:	4620      	mov	r0, r4
 800241c:	bd10      	pop	{r4, pc}
	...

08002420 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002420:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002424:	f000 fa5c 	bl	80028e0 <_ZN14BitmapDatabase11getInstanceEv>
 8002428:	4605      	mov	r5, r0
 800242a:	f000 fa5d 	bl	80028e8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800242e:	2400      	movs	r4, #0
 8002430:	4601      	mov	r1, r0
 8002432:	4623      	mov	r3, r4
 8002434:	4628      	mov	r0, r5
 8002436:	4622      	mov	r2, r4
 8002438:	9400      	str	r4, [sp, #0]
 800243a:	f018 f93d 	bl	801a6b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800243e:	4b26      	ldr	r3, [pc, #152]	; (80024d8 <touchgfx_init+0xb8>)
 8002440:	4a26      	ldr	r2, [pc, #152]	; (80024dc <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002442:	4d27      	ldr	r5, [pc, #156]	; (80024e0 <touchgfx_init+0xc0>)
 8002444:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002446:	4620      	mov	r0, r4
 8002448:	f006 fb14 	bl	8008a74 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800244c:	4825      	ldr	r0, [pc, #148]	; (80024e4 <touchgfx_init+0xc4>)
 800244e:	f018 f89b 	bl	801a588 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002452:	682b      	ldr	r3, [r5, #0]
 8002454:	f3bf 8f5b 	dmb	ish
 8002458:	07db      	lsls	r3, r3, #31
 800245a:	d436      	bmi.n	80024ca <touchgfx_init+0xaa>
 800245c:	4628      	mov	r0, r5
 800245e:	f028 fda6 	bl	802afae <__cxa_guard_acquire>
 8002462:	b390      	cbz	r0, 80024ca <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002464:	4c20      	ldr	r4, [pc, #128]	; (80024e8 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002466:	4b21      	ldr	r3, [pc, #132]	; (80024ec <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002468:	4f21      	ldr	r7, [pc, #132]	; (80024f0 <touchgfx_init+0xd0>)
 800246a:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 800246c:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002470:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002474:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8002478:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800247a:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800247e:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8002480:	6126      	str	r6, [r4, #16]
 8002482:	f00e fa25 	bl	80108d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002486:	4b1b      	ldr	r3, [pc, #108]	; (80024f4 <touchgfx_init+0xd4>)
 8002488:	6163      	str	r3, [r4, #20]
 800248a:	4640      	mov	r0, r8
 800248c:	f00e fa20 	bl	80108d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8002490:	4b19      	ldr	r3, [pc, #100]	; (80024f8 <touchgfx_init+0xd8>)
 8002492:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002494:	4638      	mov	r0, r7
 8002496:	f00e fa1b 	bl	80108d0 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800249a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800249e:	4a17      	ldr	r2, [pc, #92]	; (80024fc <touchgfx_init+0xdc>)
 80024a0:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 80024a4:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 80024a8:	f006 ff5a 	bl	8009360 <_ZN5ModelC1Ev>
 80024ac:	4622      	mov	r2, r4
 80024ae:	f1a6 0108 	sub.w	r1, r6, #8
 80024b2:	4630      	mov	r0, r6
 80024b4:	f006 fc64 	bl	8008d80 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80024b8:	4630      	mov	r0, r6
 80024ba:	f002 fad5 	bl	8004a68 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80024be:	4810      	ldr	r0, [pc, #64]	; (8002500 <touchgfx_init+0xe0>)
 80024c0:	f029 fba4 	bl	802bc0c <atexit>
 80024c4:	4628      	mov	r0, r5
 80024c6:	f028 fd7e 	bl	802afc6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80024ca:	480e      	ldr	r0, [pc, #56]	; (8002504 <touchgfx_init+0xe4>)
}
 80024cc:	b002      	add	sp, #8
 80024ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80024d2:	f7ff bdb5 	b.w	8002040 <_ZN11TouchGFXHAL10initializeEv>
 80024d6:	bf00      	nop
 80024d8:	200138a0 	.word	0x200138a0
 80024dc:	200028b0 	.word	0x200028b0
 80024e0:	2000090c 	.word	0x2000090c
 80024e4:	20000018 	.word	0x20000018
 80024e8:	20000910 	.word	0x20000910
 80024ec:	0802d384 	.word	0x0802d384
 80024f0:	20002648 	.word	0x20002648
 80024f4:	0802d2e8 	.word	0x0802d2e8
 80024f8:	0802d31c 	.word	0x0802d31c
 80024fc:	0802d350 	.word	0x0802d350
 8002500:	080023f9 	.word	0x080023f9
 8002504:	20002834 	.word	0x20002834

08002508 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002508:	4770      	bx	lr
	...

0800250c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800250c:	4801      	ldr	r0, [pc, #4]	; (8002514 <touchgfx_taskEntry+0x8>)
 800250e:	f7ff bda5 	b.w	800205c <_ZN11TouchGFXHAL9taskEntryEv>
 8002512:	bf00      	nop
 8002514:	20002834 	.word	0x20002834

08002518 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002518:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800251a:	4e22      	ldr	r6, [pc, #136]	; (80025a4 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800251c:	4c22      	ldr	r4, [pc, #136]	; (80025a8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800251e:	4d23      	ldr	r5, [pc, #140]	; (80025ac <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002520:	4b23      	ldr	r3, [pc, #140]	; (80025b0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002522:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002524:	4630      	mov	r0, r6
 8002526:	f7ff fed1 	bl	80022cc <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800252a:	4628      	mov	r0, r5
 800252c:	f01c fb90 	bl	801ec50 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002530:	4b20      	ldr	r3, [pc, #128]	; (80025b4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002532:	4821      	ldr	r0, [pc, #132]	; (80025b8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002534:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002536:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002538:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 800253c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002540:	491e      	ldr	r1, [pc, #120]	; (80025bc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002542:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002544:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002548:	491d      	ldr	r1, [pc, #116]	; (80025c0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800254a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 800254c:	491d      	ldr	r1, [pc, #116]	; (80025c4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800254e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002552:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002554:	21f0      	movs	r1, #240	; 0xf0
 8002556:	8001      	strh	r1, [r0, #0]
 8002558:	481b      	ldr	r0, [pc, #108]	; (80025c8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800255a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800255c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800255e:	481b      	ldr	r0, [pc, #108]	; (80025cc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002560:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002564:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002568:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800256c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002570:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002574:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002578:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 800257c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8002580:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8002584:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8002588:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 800258a:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800258e:	8001      	strh	r1, [r0, #0]
 8002590:	480f      	ldr	r0, [pc, #60]	; (80025d0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8002592:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8002594:	490f      	ldr	r1, [pc, #60]	; (80025d4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8002596:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8002598:	2201      	movs	r2, #1
 800259a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800259e:	4a0e      	ldr	r2, [pc, #56]	; (80025d8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80025a0:	601a      	str	r2, [r3, #0]
}
 80025a2:	bd70      	pop	{r4, r5, r6, pc}
 80025a4:	200027f0 	.word	0x200027f0
 80025a8:	200027ec 	.word	0x200027ec
 80025ac:	200028b4 	.word	0x200028b4
 80025b0:	0802cde8 	.word	0x0802cde8
 80025b4:	20002834 	.word	0x20002834
 80025b8:	20013830 	.word	0x20013830
 80025bc:	01000001 	.word	0x01000001
 80025c0:	01010000 	.word	0x01010000
 80025c4:	2001383c 	.word	0x2001383c
 80025c8:	20013836 	.word	0x20013836
 80025cc:	20013832 	.word	0x20013832
 80025d0:	20013838 	.word	0x20013838
 80025d4:	20013834 	.word	0x20013834
 80025d8:	0802cf74 	.word	0x0802cf74

080025dc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80025dc:	2000      	movs	r0, #0
 80025de:	4770      	bx	lr

080025e0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80025e0:	8081      	strh	r1, [r0, #4]
    }
 80025e2:	4770      	bx	lr

080025e4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80025e4:	80c1      	strh	r1, [r0, #6]
    }
 80025e6:	4770      	bx	lr

080025e8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80025e8:	8101      	strh	r1, [r0, #8]
    }
 80025ea:	4770      	bx	lr

080025ec <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80025ec:	8141      	strh	r1, [r0, #10]
    }
 80025ee:	4770      	bx	lr

080025f0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80025f0:	4770      	bx	lr

080025f2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80025f2:	4770      	bx	lr

080025f4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80025f4:	4770      	bx	lr

080025f6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80025f6:	4770      	bx	lr

080025f8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80025f8:	4770      	bx	lr

080025fa <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80025fa:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80025fc:	88c4      	ldrh	r4, [r0, #6]
 80025fe:	6803      	ldr	r3, [r0, #0]
 8002600:	1b12      	subs	r2, r2, r4
 8002602:	8884      	ldrh	r4, [r0, #4]
 8002604:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002606:	1b09      	subs	r1, r1, r4
 8002608:	b212      	sxth	r2, r2
    }
 800260a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800260e:	b209      	sxth	r1, r1
 8002610:	4718      	bx	r3

08002612 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002612:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002616:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002618:	f04f 33ff 	mov.w	r3, #4294967295
 800261c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800261e:	6813      	ldr	r3, [r2, #0]
 8002620:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002622:	6010      	str	r0, [r2, #0]
    }
 8002624:	4770      	bx	lr

08002626 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002626:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800262a:	b11a      	cbz	r2, 8002634 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800262c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002630:	b102      	cbz	r2, 8002634 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002632:	6018      	str	r0, [r3, #0]
        }
    }
 8002634:	4770      	bx	lr

08002636 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002636:	2000      	movs	r0, #0
 8002638:	4770      	bx	lr

0800263a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800263a:	888b      	ldrh	r3, [r1, #4]
 800263c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800263e:	2001      	movs	r0, #1
 8002640:	4770      	bx	lr

08002642 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002642:	4770      	bx	lr

08002644 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002644:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002648:	4770      	bx	lr

0800264a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800264a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800264e:	4770      	bx	lr

08002650 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002650:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002652:	2200      	movs	r2, #0
        return rect.width;
 8002654:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002658:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800265c:	8002      	strh	r2, [r0, #0]
 800265e:	8042      	strh	r2, [r0, #2]
 8002660:	8084      	strh	r4, [r0, #4]
 8002662:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002664:	bd10      	pop	{r4, pc}

08002666 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002666:	2200      	movs	r2, #0
 8002668:	8002      	strh	r2, [r0, #0]
 800266a:	8042      	strh	r2, [r0, #2]
 800266c:	8082      	strh	r2, [r0, #4]
 800266e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002670:	4770      	bx	lr
	...

08002674 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002674:	4b02      	ldr	r3, [pc, #8]	; (8002680 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002676:	2290      	movs	r2, #144	; 0x90
 8002678:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800267c:	4770      	bx	lr
 800267e:	bf00      	nop
 8002680:	e000e100 	.word	0xe000e100

08002684 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002684:	4b02      	ldr	r3, [pc, #8]	; (8002690 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8002686:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800268a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 800268c:	4770      	bx	lr
 800268e:	bf00      	nop
 8002690:	e000e100 	.word	0xe000e100

08002694 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8002694:	4a09      	ldr	r2, [pc, #36]	; (80026bc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8002696:	490a      	ldr	r1, [pc, #40]	; (80026c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8002698:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800269a:	480a      	ldr	r0, [pc, #40]	; (80026c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800269c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80026a0:	3b01      	subs	r3, #1
 80026a2:	b29b      	uxth	r3, r3
 80026a4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80026a6:	6911      	ldr	r1, [r2, #16]
 80026a8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80026ac:	3901      	subs	r1, #1
 80026ae:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80026b0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80026b2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80026b4:	f043 0301 	orr.w	r3, r3, #1
 80026b8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80026ba:	4770      	bx	lr
 80026bc:	40016800 	.word	0x40016800
 80026c0:	2000293a 	.word	0x2000293a
 80026c4:	20002938 	.word	0x20002938

080026c8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80026c8:	4b01      	ldr	r3, [pc, #4]	; (80026d0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80026ca:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80026ce:	4770      	bx	lr
 80026d0:	40016800 	.word	0x40016800

080026d4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80026d4:	4b02      	ldr	r3, [pc, #8]	; (80026e0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80026d6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80026d8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80026dc:	625a      	str	r2, [r3, #36]	; 0x24
}
 80026de:	4770      	bx	lr
 80026e0:	40016800 	.word	0x40016800

080026e4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80026e4:	b570      	push	{r4, r5, r6, lr}
 80026e6:	4604      	mov	r4, r0
    HAL::initialize();
 80026e8:	f00f fa31 	bl	8011b4e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80026ec:	6823      	ldr	r3, [r4, #0]
 80026ee:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80026f0:	f014 fba6 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 80026f4:	4601      	mov	r1, r0
 80026f6:	4620      	mov	r0, r4
 80026f8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80026fa:	6823      	ldr	r3, [r4, #0]
 80026fc:	4a05      	ldr	r2, [pc, #20]	; (8002714 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80026fe:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002702:	4620      	mov	r0, r4
 8002704:	46ac      	mov	ip, r5
 8002706:	2300      	movs	r3, #0
}
 8002708:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800270c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002710:	4760      	bx	ip
 8002712:	bf00      	nop
 8002714:	d004b000 	.word	0xd004b000

08002718 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002718:	f00f ba00 	b.w	8011b1c <_ZN8touchgfx3HAL10beginFrameEv>

0800271c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800271c:	f00f ba0a 	b.w	8011b34 <_ZN8touchgfx3HAL8endFrameEv>

08002720 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002720:	f00f b9c5 	b.w	8011aae <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002724 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002724:	f00f bb27 	b.w	8011d76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002728 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002728:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800272c:	b112      	cbz	r2, 8002734 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800272e:	6803      	ldr	r3, [r0, #0]
 8002730:	695b      	ldr	r3, [r3, #20]
 8002732:	4718      	bx	r3
    }
 8002734:	4770      	bx	lr
	...

08002738 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002738:	4b04      	ldr	r3, [pc, #16]	; (800274c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800273a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800273e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002742:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002746:	f3bf 8f6f 	isb	sy
}
 800274a:	4770      	bx	lr
 800274c:	e000e100 	.word	0xe000e100

08002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002750:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002752:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002754:	4e12      	ldr	r6, [pc, #72]	; (80027a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002756:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002758:	4b12      	ldr	r3, [pc, #72]	; (80027a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800275a:	6003      	str	r3, [r0, #0]
 800275c:	6833      	ldr	r3, [r6, #0]
 800275e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002762:	4605      	mov	r5, r0
 8002764:	b10a      	cbz	r2, 800276a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002766:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002768:	b900      	cbnz	r0, 800276c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800276a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800276c:	6803      	ldr	r3, [r0, #0]
 800276e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002770:	4798      	blx	r3
        return auxiliaryLCD;
 8002772:	6833      	ldr	r3, [r6, #0]
 8002774:	fab0 f480 	clz	r4, r0
 8002778:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800277a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800277c:	b130      	cbz	r0, 800278c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800277e:	6803      	ldr	r3, [r0, #0]
 8002780:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002782:	4798      	blx	r3
 8002784:	2800      	cmp	r0, #0
 8002786:	bf08      	it	eq
 8002788:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800278c:	b92c      	cbnz	r4, 800279a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 800278e:	4b06      	ldr	r3, [pc, #24]	; (80027a8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8002790:	4a06      	ldr	r2, [pc, #24]	; (80027ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8002792:	4807      	ldr	r0, [pc, #28]	; (80027b0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8002794:	212c      	movs	r1, #44	; 0x2c
 8002796:	f029 fa1b 	bl	802bbd0 <__assert_func>
    }
 800279a:	4628      	mov	r0, r5
 800279c:	bd70      	pop	{r4, r5, r6, pc}
 800279e:	bf00      	nop
 80027a0:	2001383c 	.word	0x2001383c
 80027a4:	0802d494 	.word	0x0802d494
 80027a8:	0802d390 	.word	0x0802d390
 80027ac:	0802d3ee 	.word	0x0802d3ee
 80027b0:	0802d427 	.word	0x0802d427

080027b4 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80027b4:	4770      	bx	lr
	...

080027b8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80027b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80027bc:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80027be:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80027c2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80027c6:	d105      	bne.n	80027d4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80027c8:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80027cc:	4281      	cmp	r1, r0
 80027ce:	d8fb      	bhi.n	80027c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80027d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80027d4:	4f17      	ldr	r7, [pc, #92]	; (8002834 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80027d6:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80027da:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80027de:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80027e2:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80027e6:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80027e8:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80027ea:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80027ec:	b2db      	uxtb	r3, r3
 80027ee:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80027f0:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80027f4:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80027f8:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80027fc:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002800:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002804:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002808:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800280c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002810:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002812:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002816:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800281a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800281e:	fbbe fef5 	udiv	lr, lr, r5
 8002822:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002826:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800282a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800282e:	4281      	cmp	r1, r0
 8002830:	d8de      	bhi.n	80027f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002832:	e7cd      	b.n	80027d0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002834:	fffff800 	.word	0xfffff800

08002838 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002838:	b510      	push	{r4, lr}
        return instance;
 800283a:	4c14      	ldr	r4, [pc, #80]	; (800288c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800283c:	6823      	ldr	r3, [r4, #0]
 800283e:	b323      	cbz	r3, 800288a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002840:	4b13      	ldr	r3, [pc, #76]	; (8002890 <HAL_LTDC_LineEventCallback+0x58>)
 8002842:	4a14      	ldr	r2, [pc, #80]	; (8002894 <HAL_LTDC_LineEventCallback+0x5c>)
 8002844:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002846:	8811      	ldrh	r1, [r2, #0]
 8002848:	428b      	cmp	r3, r1
 800284a:	d113      	bne.n	8002874 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800284c:	4b12      	ldr	r3, [pc, #72]	; (8002898 <HAL_LTDC_LineEventCallback+0x60>)
 800284e:	8819      	ldrh	r1, [r3, #0]
 8002850:	f009 faf2 	bl	800be38 <HAL_LTDC_ProgramLineEvent>
 8002854:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002856:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800285a:	3301      	adds	r3, #1
 800285c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002860:	f7ff fce8 	bl	8002234 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002864:	6820      	ldr	r0, [r4, #0]
 8002866:	f00f feb1 	bl	80125cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800286a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800286e:	2000      	movs	r0, #0
 8002870:	f7ff bb60 	b.w	8001f34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002874:	f009 fae0 	bl	800be38 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002878:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800287a:	6803      	ldr	r3, [r0, #0]
 800287c:	6a1b      	ldr	r3, [r3, #32]
 800287e:	4798      	blx	r3
    }
 8002880:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8002884:	2000      	movs	r0, #0
 8002886:	f7ff bb6d 	b.w	8001f64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800288a:	bd10      	pop	{r4, pc}
 800288c:	2001383c 	.word	0x2001383c
 8002890:	40016800 	.word	0x40016800
 8002894:	2000293a 	.word	0x2000293a
 8002898:	20002938 	.word	0x20002938

0800289c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800289c:	4770      	bx	lr

0800289e <_ZN23ApplicationFontProviderD0Ev>:
 800289e:	b510      	push	{r4, lr}
 80028a0:	2104      	movs	r1, #4
 80028a2:	4604      	mov	r4, r0
 80028a4:	f028 fb81 	bl	802afaa <_ZdlPvj>
 80028a8:	4620      	mov	r0, r4
 80028aa:	bd10      	pop	{r4, pc}

080028ac <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80028ac:	b508      	push	{r3, lr}
    switch (typography)
 80028ae:	2903      	cmp	r1, #3
 80028b0:	d813      	bhi.n	80028da <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80028b2:	e8df f001 	tbb	[pc, r1]
 80028b6:	0602      	.short	0x0602
 80028b8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80028ba:	f006 f927 	bl	8008b0c <_ZN17TypedTextDatabase8getFontsEv>
 80028be:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80028c0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80028c2:	f006 f923 	bl	8008b0c <_ZN17TypedTextDatabase8getFontsEv>
 80028c6:	6840      	ldr	r0, [r0, #4]
 80028c8:	e7fa      	b.n	80028c0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80028ca:	f006 f91f 	bl	8008b0c <_ZN17TypedTextDatabase8getFontsEv>
 80028ce:	6880      	ldr	r0, [r0, #8]
 80028d0:	e7f6      	b.n	80028c0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80028d2:	f006 f91b 	bl	8008b0c <_ZN17TypedTextDatabase8getFontsEv>
 80028d6:	68c0      	ldr	r0, [r0, #12]
 80028d8:	e7f2      	b.n	80028c0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80028da:	2000      	movs	r0, #0
 80028dc:	e7f0      	b.n	80028c0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080028e0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80028e0:	4800      	ldr	r0, [pc, #0]	; (80028e4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80028e2:	4770      	bx	lr
 80028e4:	0802d4c0 	.word	0x0802d4c0

080028e8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80028e8:	200c      	movs	r0, #12
 80028ea:	4770      	bx	lr

080028ec <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80028ec:	b513      	push	{r0, r1, r4, lr}
 80028ee:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80028f0:	b151      	cbz	r1, 8002908 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80028f2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80028f4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80028f6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80028fa:	aa01      	add	r2, sp, #4
 80028fc:	689c      	ldr	r4, [r3, #8]
 80028fe:	f10d 0303 	add.w	r3, sp, #3
 8002902:	47a0      	blx	r4
        return glyph;
    }
 8002904:	b002      	add	sp, #8
 8002906:	bd10      	pop	{r4, pc}
            return 0;
 8002908:	4608      	mov	r0, r1
 800290a:	e7fb      	b.n	8002904 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800290c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800290c:	89c0      	ldrh	r0, [r0, #14]
 800290e:	4770      	bx	lr

08002910 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002910:	8a00      	ldrh	r0, [r0, #16]
 8002912:	4770      	bx	lr

08002914 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002914:	88c0      	ldrh	r0, [r0, #6]
 8002916:	4770      	bx	lr

08002918 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002918:	8880      	ldrh	r0, [r0, #4]
 800291a:	4770      	bx	lr

0800291c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800291c:	7a80      	ldrb	r0, [r0, #10]
    }
 800291e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002922:	4770      	bx	lr

08002924 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002924:	7a80      	ldrb	r0, [r0, #10]
    }
 8002926:	09c0      	lsrs	r0, r0, #7
 8002928:	4770      	bx	lr

0800292a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800292a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800292c:	4770      	bx	lr

0800292e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800292e:	4770      	bx	lr

08002930 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002930:	4770      	bx	lr

08002932 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002932:	4770      	bx	lr

08002934 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002934:	4770      	bx	lr

08002936 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002936:	4770      	bx	lr

08002938 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002938:	4770      	bx	lr

0800293a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800293a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800293c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800293e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002940:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002942:	466d      	mov	r5, sp
 8002944:	4601      	mov	r1, r0
 8002946:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800294a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800294c:	4628      	mov	r0, r5
 800294e:	4798      	blx	r3
 8002950:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002954:	343c      	adds	r4, #60	; 0x3c
 8002956:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800295a:	b005      	add	sp, #20
 800295c:	bd30      	pop	{r4, r5, pc}

0800295e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800295e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002960:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002962:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002964:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002966:	466d      	mov	r5, sp
 8002968:	4601      	mov	r1, r0
 800296a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800296e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002970:	4628      	mov	r0, r5
 8002972:	4798      	blx	r3
 8002974:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002978:	343c      	adds	r4, #60	; 0x3c
 800297a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800297e:	b005      	add	sp, #20
 8002980:	bd30      	pop	{r4, r5, pc}

08002982 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002982:	2200      	movs	r2, #0
 8002984:	8002      	strh	r2, [r0, #0]
 8002986:	8042      	strh	r2, [r0, #2]
 8002988:	8082      	strh	r2, [r0, #4]
 800298a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800298c:	4770      	bx	lr

0800298e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800298e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002992:	4770      	bx	lr

08002994 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002994:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002996:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002998:	4604      	mov	r4, r0
        setX(x);
 800299a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800299c:	4615      	mov	r5, r2
        setX(x);
 800299e:	4798      	blx	r3
        setBaselineY(baselineY);
 80029a0:	6823      	ldr	r3, [r4, #0]
 80029a2:	4629      	mov	r1, r5
 80029a4:	4620      	mov	r0, r4
 80029a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029ac:	4718      	bx	r3

080029ae <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029ae:	2000      	movs	r0, #0
 80029b0:	4770      	bx	lr

080029b2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029b2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029b4:	4770      	bx	lr

080029b6 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80029b6:	4770      	bx	lr

080029b8 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80029b8:	6803      	ldr	r3, [r0, #0]
 80029ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80029bc:	4718      	bx	r3

080029be <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80029be:	6803      	ldr	r3, [r0, #0]
 80029c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029c2:	4718      	bx	r3

080029c4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029c4:	4770      	bx	lr

080029c6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029c6:	4770      	bx	lr

080029c8 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80029c8:	4770      	bx	lr

080029ca <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80029ca:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80029cc:	68c2      	ldr	r2, [r0, #12]
 80029ce:	6844      	ldr	r4, [r0, #4]
 80029d0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029d2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029d4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029d8:	07d2      	lsls	r2, r2, #31
 80029da:	bf48      	it	mi
 80029dc:	5962      	ldrmi	r2, [r4, r5]
 80029de:	689b      	ldr	r3, [r3, #8]
    }
 80029e0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029e2:	bf48      	it	mi
 80029e4:	58d3      	ldrmi	r3, [r2, r3]
 80029e6:	4718      	bx	r3

080029e8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80029e8:	6843      	ldr	r3, [r0, #4]
 80029ea:	b12b      	cbz	r3, 80029f8 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80029ec:	6883      	ldr	r3, [r0, #8]
 80029ee:	b92b      	cbnz	r3, 80029fc <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80029f0:	68c0      	ldr	r0, [r0, #12]
 80029f2:	f000 0001 	and.w	r0, r0, #1
 80029f6:	4770      	bx	lr
 80029f8:	4618      	mov	r0, r3
 80029fa:	4770      	bx	lr
 80029fc:	2001      	movs	r0, #1
    }
 80029fe:	4770      	bx	lr

08002a00 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002a00:	b510      	push	{r4, lr}
    }
 8002a02:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002a04:	4604      	mov	r4, r0
    }
 8002a06:	f028 fad0 	bl	802afaa <_ZdlPvj>
 8002a0a:	4620      	mov	r0, r4
 8002a0c:	bd10      	pop	{r4, pc}

08002a0e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a0e:	b510      	push	{r4, lr}
 8002a10:	214c      	movs	r1, #76	; 0x4c
 8002a12:	4604      	mov	r4, r0
 8002a14:	f028 fac9 	bl	802afaa <_ZdlPvj>
 8002a18:	4620      	mov	r0, r4
 8002a1a:	bd10      	pop	{r4, pc}

08002a1c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002a1c:	b510      	push	{r4, lr}
 8002a1e:	2110      	movs	r1, #16
 8002a20:	4604      	mov	r4, r0
 8002a22:	f028 fac2 	bl	802afaa <_ZdlPvj>
 8002a26:	4620      	mov	r0, r4
 8002a28:	bd10      	pop	{r4, pc}

08002a2a <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8002a2a:	b510      	push	{r4, lr}
 8002a2c:	218c      	movs	r1, #140	; 0x8c
 8002a2e:	4604      	mov	r4, r0
 8002a30:	f028 fabb 	bl	802afaa <_ZdlPvj>
 8002a34:	4620      	mov	r0, r4
 8002a36:	bd10      	pop	{r4, pc}

08002a38 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002a38:	b538      	push	{r3, r4, r5, lr}
 8002a3a:	4605      	mov	r5, r0
 8002a3c:	4b05      	ldr	r3, [pc, #20]	; (8002a54 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 8002a3e:	f845 3be0 	str.w	r3, [r5], #224
 8002a42:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002a44:	f012 fcfa 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002a48:	4628      	mov	r0, r5
 8002a4a:	f00e fbaf 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8002a4e:	4620      	mov	r0, r4
 8002a50:	bd38      	pop	{r3, r4, r5, pc}
 8002a52:	bf00      	nop
 8002a54:	0802d8a8 	.word	0x0802d8a8

08002a58 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002a58:	b510      	push	{r4, lr}
 8002a5a:	4604      	mov	r4, r0
}
 8002a5c:	f7ff ffec 	bl	8002a38 <_ZN23Calibration_PadViewBaseD1Ev>
 8002a60:	4620      	mov	r0, r4
 8002a62:	f641 5104 	movw	r1, #7428	; 0x1d04
 8002a66:	f028 faa0 	bl	802afaa <_ZdlPvj>
 8002a6a:	4620      	mov	r0, r4
 8002a6c:	bd10      	pop	{r4, pc}

08002a6e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002a6e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002a70:	f7ff fe5a 	bl	8002728 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002a74:	bd08      	pop	{r3, pc}
	...

08002a78 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002a78:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002a7a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002a7c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a7e:	4b12      	ldr	r3, [pc, #72]	; (8002ac8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002a80:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002a82:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002a84:	b28d      	uxth	r5, r1
 8002a86:	b92b      	cbnz	r3, 8002a94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002a88:	4b10      	ldr	r3, [pc, #64]	; (8002acc <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002a8a:	4a11      	ldr	r2, [pc, #68]	; (8002ad0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002a8c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a8e:	4811      	ldr	r0, [pc, #68]	; (8002ad4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002a90:	f029 f89e 	bl	802bbd0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002a94:	4910      	ldr	r1, [pc, #64]	; (8002ad8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002a96:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002a98:	8809      	ldrh	r1, [r1, #0]
 8002a9a:	4291      	cmp	r1, r2
 8002a9c:	d803      	bhi.n	8002aa6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002a9e:	4b0f      	ldr	r3, [pc, #60]	; (8002adc <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002aa0:	4a0b      	ldr	r2, [pc, #44]	; (8002ad0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002aa2:	216d      	movs	r1, #109	; 0x6d
 8002aa4:	e7f3      	b.n	8002a8e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002aa6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002aaa:	4b0d      	ldr	r3, [pc, #52]	; (8002ae0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002ab2:	6803      	ldr	r3, [r0, #0]
 8002ab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ab6:	4798      	blx	r3
 8002ab8:	1a28      	subs	r0, r5, r0
 8002aba:	b201      	sxth	r1, r0
 8002abc:	4633      	mov	r3, r6
 8002abe:	4620      	mov	r0, r4
    }
 8002ac0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002ac4:	4718      	bx	r3
 8002ac6:	bf00      	nop
 8002ac8:	20013894 	.word	0x20013894
 8002acc:	0802d5b0 	.word	0x0802d5b0
 8002ad0:	0802d5f2 	.word	0x0802d5f2
 8002ad4:	0802d62d 	.word	0x0802d62d
 8002ad8:	20013898 	.word	0x20013898
 8002adc:	0802d674 	.word	0x0802d674
 8002ae0:	2001389c 	.word	0x2001389c

08002ae4 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002ae4:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002ae6:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ae8:	4604      	mov	r4, r0
        setX(x);
 8002aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002aec:	4615      	mov	r5, r2
        setX(x);
 8002aee:	4798      	blx	r3
        setY(y);
 8002af0:	6823      	ldr	r3, [r4, #0]
 8002af2:	4629      	mov	r1, r5
 8002af4:	4620      	mov	r0, r4
 8002af6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002af8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002afc:	4718      	bx	r3

08002afe <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002afe:	b570      	push	{r4, r5, r6, lr}
 8002b00:	4604      	mov	r4, r0
 8002b02:	461d      	mov	r5, r3
 8002b04:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002b08:	f7ff ffec 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002b0c:	6823      	ldr	r3, [r4, #0]
 8002b0e:	4629      	mov	r1, r5
 8002b10:	4620      	mov	r0, r4
 8002b12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b14:	4798      	blx	r3
        setHeight(height);
 8002b16:	6823      	ldr	r3, [r4, #0]
 8002b18:	4631      	mov	r1, r6
 8002b1a:	4620      	mov	r0, r4
 8002b1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002b1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002b22:	4718      	bx	r3

08002b24 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002b24:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002b28:	2200      	movs	r2, #0
 8002b2a:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002b2c:	4905      	ldr	r1, [pc, #20]	; (8002b44 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8002b2e:	6001      	str	r1, [r0, #0]
 8002b30:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002b34:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002b38:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002b3c:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002b40:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002b42:	4770      	bx	lr
 8002b44:	0802f7cc 	.word	0x0802f7cc

08002b48 <_ZN8touchgfx6WidgetC1Ev>:
 8002b48:	2200      	movs	r2, #0
 8002b4a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002b4e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002b52:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002b56:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002b5a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002b5e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002b60:	4a01      	ldr	r2, [pc, #4]	; (8002b68 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002b62:	6002      	str	r2, [r0, #0]
 8002b64:	4770      	bx	lr
 8002b66:	bf00      	nop
 8002b68:	0802d6f8 	.word	0x0802d6f8

08002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002b6c:	4b1a      	ldr	r3, [pc, #104]	; (8002bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002b6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002b70:	881b      	ldrh	r3, [r3, #0]
 8002b72:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002b74:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002b76:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002b78:	d92b      	bls.n	8002bd2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b7a:	4b18      	ldr	r3, [pc, #96]	; (8002bdc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	b92b      	cbnz	r3, 8002b8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002b80:	4b17      	ldr	r3, [pc, #92]	; (8002be0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002b82:	4a18      	ldr	r2, [pc, #96]	; (8002be4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002b84:	4818      	ldr	r0, [pc, #96]	; (8002be8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002b86:	216c      	movs	r1, #108	; 0x6c
 8002b88:	f029 f822 	bl	802bbd0 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002b8c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002b90:	4b16      	ldr	r3, [pc, #88]	; (8002bec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002b98:	4b15      	ldr	r3, [pc, #84]	; (8002bf0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002b9a:	6818      	ldr	r0, [r3, #0]
 8002b9c:	f005 ffa6 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ba0:	682b      	ldr	r3, [r5, #0]
 8002ba2:	9001      	str	r0, [sp, #4]
 8002ba4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ba6:	4628      	mov	r0, r5
 8002ba8:	4798      	blx	r3
 8002baa:	682b      	ldr	r3, [r5, #0]
 8002bac:	9901      	ldr	r1, [sp, #4]
 8002bae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002bb0:	4604      	mov	r4, r0
 8002bb2:	4628      	mov	r0, r5
 8002bb4:	4798      	blx	r3
 8002bb6:	682b      	ldr	r3, [r5, #0]
 8002bb8:	9901      	ldr	r1, [sp, #4]
 8002bba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002bbc:	fb14 f400 	smulbb	r4, r4, r0
 8002bc0:	4628      	mov	r0, r5
 8002bc2:	4798      	blx	r3
 8002bc4:	b2a4      	uxth	r4, r4
 8002bc6:	1823      	adds	r3, r4, r0
 8002bc8:	b21b      	sxth	r3, r3
 8002bca:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002bce:	b002      	add	sp, #8
 8002bd0:	bd70      	pop	{r4, r5, r6, pc}
 8002bd2:	2300      	movs	r3, #0
 8002bd4:	e7f9      	b.n	8002bca <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002bd6:	bf00      	nop
 8002bd8:	20013898 	.word	0x20013898
 8002bdc:	20013894 	.word	0x20013894
 8002be0:	0802d5b0 	.word	0x0802d5b0
 8002be4:	0802d5f2 	.word	0x0802d5f2
 8002be8:	0802d62d 	.word	0x0802d62d
 8002bec:	2001389c 	.word	0x2001389c
 8002bf0:	200138a0 	.word	0x200138a0

08002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002bf4:	2200      	movs	r2, #0
 8002bf6:	f04f 31ff 	mov.w	r1, #4294967295
 8002bfa:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002bfe:	6082      	str	r2, [r0, #8]
        {
        }
 8002c00:	4770      	bx	lr

08002c02 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002c02:	b510      	push	{r4, lr}
 8002c04:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002c06:	f7ff fff5 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002c0a:	4620      	mov	r0, r4
 8002c0c:	bd10      	pop	{r4, pc}
	...

08002c10 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002c10:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002c12:	2100      	movs	r1, #0
    TextArea()
 8002c14:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002c16:	2226      	movs	r2, #38	; 0x26
 8002c18:	f029 f9df 	bl	802bfda <memset>
 8002c1c:	4620      	mov	r0, r4
 8002c1e:	f7ff ff93 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8002c22:	4b09      	ldr	r3, [pc, #36]	; (8002c48 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002c24:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002c26:	4b09      	ldr	r3, [pc, #36]	; (8002c4c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002c28:	62a3      	str	r3, [r4, #40]	; 0x28
 8002c2a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002c2e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002c30:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002c34:	2300      	movs	r3, #0
 8002c36:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002c3a:	8723      	strh	r3, [r4, #56]	; 0x38
 8002c3c:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002c40:	f7ff ffd8 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002c44:	4620      	mov	r0, r4
 8002c46:	bd10      	pop	{r4, pc}
 8002c48:	0802fc24 	.word	0x0802fc24
 8002c4c:	0802d760 	.word	0x0802d760

08002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002c50:	b510      	push	{r4, lr}
 8002c52:	4604      	mov	r4, r0
        : TextArea()
 8002c54:	f7ff ffdc 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002c58:	4b02      	ldr	r3, [pc, #8]	; (8002c64 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002c5a:	6023      	str	r3, [r4, #0]
 8002c5c:	2300      	movs	r3, #0
 8002c5e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002c60:	4620      	mov	r0, r4
 8002c62:	bd10      	pop	{r4, pc}
 8002c64:	0802d800 	.word	0x0802d800

08002c68 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002c68:	b510      	push	{r4, lr}
 8002c6a:	4604      	mov	r4, r0
 8002c6c:	460b      	mov	r3, r1
 8002c6e:	490d      	ldr	r1, [pc, #52]	; (8002ca4 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002c70:	f844 1b04 	str.w	r1, [r4], #4
 8002c74:	4602      	mov	r2, r0
 8002c76:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002c7a:	e884 0003 	stmia.w	r4, {r0, r1}
 8002c7e:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002c82:	f102 040c 	add.w	r4, r2, #12
 8002c86:	e884 0003 	stmia.w	r4, {r0, r1}
 8002c8a:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002c8e:	695c      	ldr	r4, [r3, #20]
 8002c90:	61d1      	str	r1, [r2, #28]
 8002c92:	6a19      	ldr	r1, [r3, #32]
 8002c94:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002c96:	6211      	str	r1, [r2, #32]
 8002c98:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002c9c:	8493      	strh	r3, [r2, #36]	; 0x24
 8002c9e:	4610      	mov	r0, r2
 8002ca0:	bd10      	pop	{r4, pc}
 8002ca2:	bf00      	nop
 8002ca4:	08030044 	.word	0x08030044

08002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002ca8:	b538      	push	{r3, r4, r5, lr}
 8002caa:	460d      	mov	r5, r1
 8002cac:	4604      	mov	r4, r0
class Container : public Drawable
 8002cae:	f7ff ffdb 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002cb2:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002cb4:	62a3      	str	r3, [r4, #40]	; 0x28
 8002cb6:	4b2b      	ldr	r3, [pc, #172]	; (8002d64 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002cb8:	6023      	str	r3, [r4, #0]
 8002cba:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002cbc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002cbe:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002cc0:	6323      	str	r3, [r4, #48]	; 0x30
 8002cc2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002cc4:	6363      	str	r3, [r4, #52]	; 0x34
 8002cc6:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002cca:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002cce:	f7ff ffcb 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002cd2:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002cd4:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002cd6:	4b24      	ldr	r3, [pc, #144]	; (8002d68 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002cd8:	63a3      	str	r3, [r4, #56]	; 0x38
 8002cda:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002cde:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002ce2:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002ce6:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002cea:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002cee:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002cf2:	f7ff ffb9 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002cf6:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002cfa:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002cfe:	4b1b      	ldr	r3, [pc, #108]	; (8002d6c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002d00:	66a3      	str	r3, [r4, #104]	; 0x68
 8002d02:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002d06:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002d0a:	f7ff ffad 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002d0e:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002d12:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002d16:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002d1a:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002d1e:	4b14      	ldr	r3, [pc, #80]	; (8002d70 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002d20:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002d24:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002d28:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002d2c:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002d30:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002d34:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002d38:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002d3c:	f7ff ff94 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002d40:	4b0c      	ldr	r3, [pc, #48]	; (8002d74 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002d42:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002d46:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002d4a:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002d4e:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002d52:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002d56:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002d5a:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002d5e:	4620      	mov	r0, r4
 8002d60:	bd38      	pop	{r3, r4, r5, pc}
 8002d62:	bf00      	nop
 8002d64:	0802f85c 	.word	0x0802f85c
 8002d68:	0802f920 	.word	0x0802f920
 8002d6c:	0802d770 	.word	0x0802d770
 8002d70:	0802fd1c 	.word	0x0802fd1c
 8002d74:	0802ff00 	.word	0x0802ff00

08002d78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002d78:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8002d7a:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002d7e:	4299      	cmp	r1, r3
{
 8002d80:	b0c1      	sub	sp, #260	; 0x104
 8002d82:	4604      	mov	r4, r0
 8002d84:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002d86:	d103      	bne.n	8002d90 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d88:	f014 f85a 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002d8c:	f001 fe7c 	bl	8004a88 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002d90:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8002d94:	429d      	cmp	r5, r3
 8002d96:	d128      	bne.n	8002dea <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d98:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d9c:	4639      	mov	r1, r7
 8002d9e:	a803      	add	r0, sp, #12
 8002da0:	f7ff ff82 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002da4:	f7fe fc16 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002da8:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002daa:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dac:	2001      	movs	r0, #1
 8002dae:	f7fd fd5b 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002db2:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002db6:	48d8      	ldr	r0, [pc, #864]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002db8:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002dbc:	ee17 6a90 	vmov	r6, s15
 8002dc0:	ee17 1a90 	vmov	r1, s15
 8002dc4:	230c      	movs	r3, #12
 8002dc6:	2200      	movs	r2, #0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dc8:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002dcc:	f7fd fe64 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002dd0:	4ad2      	ldr	r2, [pc, #840]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002dd2:	4633      	mov	r3, r6
 8002dd4:	210a      	movs	r1, #10
 8002dd6:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8002dda:	f017 f9df 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002dde:	4638      	mov	r0, r7
 8002de0:	f015 f916 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002de4:	a803      	add	r0, sp, #12
 8002de6:	f00e f9e1 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002dea:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002dee:	429d      	cmp	r5, r3
 8002df0:	d128      	bne.n	8002e44 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xcc>
        SwipeContainer swipeContainer = swipeContainer1;
 8002df2:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002df6:	4639      	mov	r1, r7
 8002df8:	a803      	add	r0, sp, #12
 8002dfa:	f7ff ff55 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002dfe:	f7fe fbe9 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e02:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e04:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e06:	2001      	movs	r0, #1
 8002e08:	f7fd fd2e 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002e0c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e10:	48c1      	ldr	r0, [pc, #772]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e12:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002e16:	ee17 6a90 	vmov	r6, s15
 8002e1a:	ee17 1a90 	vmov	r1, s15
 8002e1e:	230c      	movs	r3, #12
 8002e20:	2201      	movs	r2, #1
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e22:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002e26:	f7fd fe37 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e2a:	4abc      	ldr	r2, [pc, #752]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e2c:	4633      	mov	r3, r6
 8002e2e:	210a      	movs	r1, #10
 8002e30:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8002e34:	f017 f9b2 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e38:	4638      	mov	r0, r7
 8002e3a:	f015 f8e9 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e3e:	a803      	add	r0, sp, #12
 8002e40:	f00e f9b4 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002e44:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8002e48:	429d      	cmp	r5, r3
 8002e4a:	d128      	bne.n	8002e9e <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x126>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e4c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e50:	4639      	mov	r1, r7
 8002e52:	a803      	add	r0, sp, #12
 8002e54:	f7ff ff28 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e58:	f7fe fbbc 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e5c:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e5e:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e60:	2001      	movs	r0, #1
 8002e62:	f7fd fd01 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002e66:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e6a:	48ab      	ldr	r0, [pc, #684]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e6c:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002e70:	ee17 6a90 	vmov	r6, s15
 8002e74:	ee17 1a90 	vmov	r1, s15
 8002e78:	230c      	movs	r3, #12
 8002e7a:	2202      	movs	r2, #2
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e7c:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002e80:	f7fd fe0a 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e84:	4aa5      	ldr	r2, [pc, #660]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e86:	4633      	mov	r3, r6
 8002e88:	210a      	movs	r1, #10
 8002e8a:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8002e8e:	f017 f985 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e92:	4638      	mov	r0, r7
 8002e94:	f015 f8bc 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e98:	a803      	add	r0, sp, #12
 8002e9a:	f00e f987 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8002e9e:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8002ea2:	429d      	cmp	r5, r3
 8002ea4:	d128      	bne.n	8002ef8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ea6:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002eaa:	4639      	mov	r1, r7
 8002eac:	a803      	add	r0, sp, #12
 8002eae:	f7ff fefb 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002eb2:	f7fe fb8f 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002eb6:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002eb8:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002eba:	2001      	movs	r0, #1
 8002ebc:	f7fd fcd4 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002ec0:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002ec4:	4894      	ldr	r0, [pc, #592]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ec6:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002eca:	ee17 6a90 	vmov	r6, s15
 8002ece:	ee17 1a90 	vmov	r1, s15
 8002ed2:	230c      	movs	r3, #12
 8002ed4:	2203      	movs	r2, #3
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ed6:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002eda:	f7fd fddd 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002ede:	4a8f      	ldr	r2, [pc, #572]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002ee0:	4633      	mov	r3, r6
 8002ee2:	210a      	movs	r1, #10
 8002ee4:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8002ee8:	f017 f958 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002eec:	4638      	mov	r0, r7
 8002eee:	f015 f88f 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002ef2:	a803      	add	r0, sp, #12
 8002ef4:	f00e f95a 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8002ef8:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8002efc:	429d      	cmp	r5, r3
 8002efe:	d128      	bne.n	8002f52 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f00:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f04:	4639      	mov	r1, r7
 8002f06:	a803      	add	r0, sp, #12
 8002f08:	f7ff fece 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f0c:	f7fe fb62 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f10:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f12:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f14:	2001      	movs	r0, #1
 8002f16:	f7fd fca7 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002f1a:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f1e:	487e      	ldr	r0, [pc, #504]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f20:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002f24:	ee17 6a90 	vmov	r6, s15
 8002f28:	ee17 1a90 	vmov	r1, s15
 8002f2c:	230c      	movs	r3, #12
 8002f2e:	2204      	movs	r2, #4
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f30:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002f34:	f7fd fdb0 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f38:	4a78      	ldr	r2, [pc, #480]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f3a:	4633      	mov	r3, r6
 8002f3c:	210a      	movs	r1, #10
 8002f3e:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8002f42:	f017 f92b 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f46:	4638      	mov	r0, r7
 8002f48:	f015 f862 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f4c:	a803      	add	r0, sp, #12
 8002f4e:	f00e f92d 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8002f52:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8002f56:	429d      	cmp	r5, r3
 8002f58:	d128      	bne.n	8002fac <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f5a:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f5e:	4639      	mov	r1, r7
 8002f60:	a803      	add	r0, sp, #12
 8002f62:	f7ff fea1 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f66:	f7fe fb35 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f6a:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f6c:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f6e:	2001      	movs	r0, #1
 8002f70:	f7fd fc7a 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002f74:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f78:	4867      	ldr	r0, [pc, #412]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f7a:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002f7e:	ee17 6a90 	vmov	r6, s15
 8002f82:	ee17 1a90 	vmov	r1, s15
 8002f86:	230c      	movs	r3, #12
 8002f88:	2205      	movs	r2, #5
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f8a:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002f8e:	f7fd fd83 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f92:	4a62      	ldr	r2, [pc, #392]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f94:	4633      	mov	r3, r6
 8002f96:	210a      	movs	r1, #10
 8002f98:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8002f9c:	f017 f8fe 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002fa0:	4638      	mov	r0, r7
 8002fa2:	f015 f835 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002fa6:	a803      	add	r0, sp, #12
 8002fa8:	f00e f900 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8002fac:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8002fb0:	429d      	cmp	r5, r3
 8002fb2:	d128      	bne.n	8003006 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28e>
        SwipeContainer swipeContainer = swipeContainer1;
 8002fb4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002fb8:	4639      	mov	r1, r7
 8002fba:	a803      	add	r0, sp, #12
 8002fbc:	f7ff fe74 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002fc0:	f7fe fb08 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fc4:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002fc6:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fc8:	2001      	movs	r0, #1
 8002fca:	f7fd fc4d 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002fce:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002fd2:	4851      	ldr	r0, [pc, #324]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fd4:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002fd8:	ee17 6a90 	vmov	r6, s15
 8002fdc:	ee17 1a90 	vmov	r1, s15
 8002fe0:	230c      	movs	r3, #12
 8002fe2:	2206      	movs	r2, #6
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fe4:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002fe8:	f7fd fd56 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002fec:	4a4b      	ldr	r2, [pc, #300]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002fee:	4633      	mov	r3, r6
 8002ff0:	210a      	movs	r1, #10
 8002ff2:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8002ff6:	f017 f8d1 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002ffa:	4638      	mov	r0, r7
 8002ffc:	f015 f808 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003000:	a803      	add	r0, sp, #12
 8003002:	f00e f8d3 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8003006:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 800300a:	429d      	cmp	r5, r3
 800300c:	d128      	bne.n	8003060 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e8>
        SwipeContainer swipeContainer = swipeContainer1;
 800300e:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8003012:	4639      	mov	r1, r7
 8003014:	a803      	add	r0, sp, #12
 8003016:	f7ff fe47 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800301a:	f7fe fadb 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800301e:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8003020:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003022:	2001      	movs	r0, #1
 8003024:	f7fd fc20 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8003028:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 800302c:	483a      	ldr	r0, [pc, #232]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800302e:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8003032:	ee17 6a90 	vmov	r6, s15
 8003036:	ee17 1a90 	vmov	r1, s15
 800303a:	230c      	movs	r3, #12
 800303c:	2207      	movs	r2, #7
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800303e:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8003042:	f7fd fd29 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003046:	4a35      	ldr	r2, [pc, #212]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8003048:	4633      	mov	r3, r6
 800304a:	210a      	movs	r1, #10
 800304c:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8003050:	f017 f8a4 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003054:	4638      	mov	r0, r7
 8003056:	f014 ffdb 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800305a:	a803      	add	r0, sp, #12
 800305c:	f00e f8a6 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8003060:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8003064:	429d      	cmp	r5, r3
 8003066:	d128      	bne.n	80030ba <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x342>
        SwipeContainer swipeContainer = swipeContainer1;
 8003068:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 800306c:	4639      	mov	r1, r7
 800306e:	a803      	add	r0, sp, #12
 8003070:	f7ff fe1a 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003074:	f7fe faae 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003078:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 800307a:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800307c:	2001      	movs	r0, #1
 800307e:	f7fd fbf3 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8003082:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8003086:	4824      	ldr	r0, [pc, #144]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003088:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 800308c:	ee17 6a90 	vmov	r6, s15
 8003090:	ee17 1a90 	vmov	r1, s15
 8003094:	230c      	movs	r3, #12
 8003096:	2208      	movs	r2, #8
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003098:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 800309c:	f7fd fcfc 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 80030a0:	4a1e      	ldr	r2, [pc, #120]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 80030a2:	4633      	mov	r3, r6
 80030a4:	210a      	movs	r1, #10
 80030a6:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 80030aa:	f017 f877 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80030ae:	4638      	mov	r0, r7
 80030b0:	f014 ffae 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80030b4:	a803      	add	r0, sp, #12
 80030b6:	f00e f879 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 80030ba:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 80030be:	429d      	cmp	r5, r3
 80030c0:	d12e      	bne.n	8003120 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
        SwipeContainer swipeContainer = swipeContainer1;
 80030c2:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 80030c6:	4639      	mov	r1, r7
 80030c8:	a803      	add	r0, sp, #12
 80030ca:	f7ff fded 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80030ce:	f7fe fa81 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030d2:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 80030d4:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030d6:	2001      	movs	r0, #1
 80030d8:	f7fd fbc6 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 80030dc:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 80030e0:	480d      	ldr	r0, [pc, #52]	; (8003118 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030e2:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 80030e6:	ee17 6a90 	vmov	r6, s15
 80030ea:	ee17 1a90 	vmov	r1, s15
 80030ee:	230c      	movs	r3, #12
 80030f0:	2209      	movs	r2, #9
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030f2:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 80030f6:	f7fd fccf 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 80030fa:	4a08      	ldr	r2, [pc, #32]	; (800311c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 80030fc:	4633      	mov	r3, r6
 80030fe:	210a      	movs	r1, #10
 8003100:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003104:	f017 f84a 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003108:	4638      	mov	r0, r7
 800310a:	f014 ff81 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800310e:	a803      	add	r0, sp, #12
 8003110:	f00e f84c 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
 8003114:	e004      	b.n	8003120 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
 8003116:	bf00      	nop
 8003118:	081e0000 	.word	0x081e0000
 800311c:	0802d6b2 	.word	0x0802d6b2
    if (&src == &buttonWithIcon_RH2)
 8003120:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003124:	429d      	cmp	r5, r3
 8003126:	d128      	bne.n	800317a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x402>
        SwipeContainer swipeContainer = swipeContainer1;
 8003128:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 800312c:	4639      	mov	r1, r7
 800312e:	a803      	add	r0, sp, #12
 8003130:	f7ff fdba 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003134:	f7fe fa4e 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003138:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 800313a:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800313c:	2001      	movs	r0, #1
 800313e:	f7fd fb93 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003142:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8003146:	4824      	ldr	r0, [pc, #144]	; (80031d8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003148:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800314c:	ee17 6a90 	vmov	r6, s15
 8003150:	ee17 1a90 	vmov	r1, s15
 8003154:	230c      	movs	r3, #12
 8003156:	220a      	movs	r2, #10
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003158:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800315c:	f7fd fc9c 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003160:	4a1e      	ldr	r2, [pc, #120]	; (80031dc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 8003162:	4633      	mov	r3, r6
 8003164:	210a      	movs	r1, #10
 8003166:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800316a:	f017 f817 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 800316e:	4638      	mov	r0, r7
 8003170:	f014 ff4e 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003174:	a803      	add	r0, sp, #12
 8003176:	f00e f819 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 800317a:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 800317e:	429d      	cmp	r5, r3
 8003180:	d128      	bne.n	80031d4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x45c>
        SwipeContainer swipeContainer = swipeContainer1;
 8003182:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003186:	4631      	mov	r1, r6
 8003188:	a803      	add	r0, sp, #12
 800318a:	f7ff fd8d 	bl	8002ca8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 800318e:	f7fe fa21 	bl	80015d4 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003192:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8003194:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003196:	2001      	movs	r0, #1
 8003198:	f7fd fb66 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 800319c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 80031a0:	480d      	ldr	r0, [pc, #52]	; (80031d8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80031a2:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80031a6:	ee17 5a90 	vmov	r5, s15
 80031aa:	ee17 1a90 	vmov	r1, s15
 80031ae:	230c      	movs	r3, #12
 80031b0:	220b      	movs	r2, #11
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80031b2:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80031b6:	f7fd fc6f 	bl	8000a98 <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 80031ba:	4a08      	ldr	r2, [pc, #32]	; (80031dc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 80031bc:	462b      	mov	r3, r5
 80031be:	210a      	movs	r1, #10
 80031c0:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 80031c4:	f016 ffea 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80031c8:	4630      	mov	r0, r6
 80031ca:	f014 ff21 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80031ce:	a803      	add	r0, sp, #12
 80031d0:	f00d ffec 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80031d4:	b041      	add	sp, #260	; 0x104
 80031d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031d8:	081e0000 	.word	0x081e0000
 80031dc:	0802d6b2 	.word	0x0802d6b2

080031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80031e0:	0152      	lsls	r2, r2, #5
 80031e2:	0149      	lsls	r1, r1, #5
 80031e4:	f00f bf36 	b.w	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

080031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80031e8:	0152      	lsls	r2, r2, #5
 80031ea:	0149      	lsls	r1, r1, #5
 80031ec:	f00f bf3d 	b.w	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

080031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 80031f0:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80031f2:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 80031f4:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 80031f8:	ea4f 1241 	mov.w	r2, r1, lsl #5
 80031fc:	d004      	beq.n	8003208 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 80031fe:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003202:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003204:	f00f be30 	b.w	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003208:	f85d 4b04 	ldr.w	r4, [sp], #4
 800320c:	4770      	bx	lr
	...

08003210 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003214:	ed2d 8b10 	vpush	{d8-d15}
 8003218:	4604      	mov	r4, r0
 800321a:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 800321c:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800321e:	2500      	movs	r5, #0
 8003220:	f015 fa8e 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 8003224:	4be5      	ldr	r3, [pc, #916]	; (80035bc <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003226:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003228:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800322c:	2226      	movs	r2, #38	; 0x26
 800322e:	4629      	mov	r1, r5
 8003230:	4648      	mov	r0, r9
 8003232:	f028 fed2 	bl	802bfda <memset>
 8003236:	4648      	mov	r0, r9
 8003238:	f7ff fc86 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 800323c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003240:	26ff      	movs	r6, #255	; 0xff
 8003242:	4bdf      	ldr	r3, [pc, #892]	; (80035c0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003244:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003246:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003248:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800324c:	4629      	mov	r1, r5
 800324e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003252:	4640      	mov	r0, r8
        : color(col)
 8003254:	66a5      	str	r5, [r4, #104]	; 0x68
 8003256:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 800325a:	f028 febe 	bl	802bfda <memset>
 800325e:	4640      	mov	r0, r8
 8003260:	f7ff fc72 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8003264:	4bd7      	ldr	r3, [pc, #860]	; (80035c4 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003266:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003268:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 800326c:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003270:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003274:	ae29      	add	r6, sp, #164	; 0xa4
 8003276:	4631      	mov	r1, r6
 8003278:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800327c:	4640      	mov	r0, r8
 800327e:	f011 f8e0 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003282:	4658      	mov	r0, fp
 8003284:	f011 fa14 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003288:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800328c:	4618      	mov	r0, r3
 800328e:	ee08 3a10 	vmov	s16, r3
 8003292:	f00e f8b9 	bl	8011408 <_ZN8touchgfx14SwipeContainerC1Ev>
 8003296:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 800329a:	4618      	mov	r0, r3
 800329c:	ee08 3a90 	vmov	s17, r3
 80032a0:	f7ff fc40 	bl	8002b24 <_ZN8touchgfx9ContainerC1Ev>
 80032a4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80032a8:	4618      	mov	r0, r3
 80032aa:	9311      	str	r3, [sp, #68]	; 0x44
 80032ac:	f011 f8a2 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032b0:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80032b4:	f504 771e 	add.w	r7, r4, #632	; 0x278
 80032b8:	4618      	mov	r0, r3
 80032ba:	9312      	str	r3, [sp, #72]	; 0x48
 80032bc:	f011 f89a 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032c0:	4638      	mov	r0, r7
 80032c2:	f011 f897 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032c6:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 80032ca:	4618      	mov	r0, r3
 80032cc:	ee0d 3a90 	vmov	s27, r3
 80032d0:	f7ff fcbe 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032d4:	f504 7340 	add.w	r3, r4, #768	; 0x300
 80032d8:	4618      	mov	r0, r3
 80032da:	ee0e 3a10 	vmov	s28, r3
 80032de:	f7ff fcb7 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032e2:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 80032e6:	4618      	mov	r0, r3
 80032e8:	ee0e 3a90 	vmov	s29, r3
 80032ec:	f7ff fcb0 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032f0:	f504 7366 	add.w	r3, r4, #920	; 0x398
 80032f4:	4618      	mov	r0, r3
 80032f6:	ee0a 3a90 	vmov	s21, r3
 80032fa:	f00f fd95 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 80032fe:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003302:	4618      	mov	r0, r3
 8003304:	931c      	str	r3, [sp, #112]	; 0x70
 8003306:	f7ff fa23 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800330a:	4baf      	ldr	r3, [pc, #700]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800330c:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003310:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003314:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003318:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 800331c:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800331e:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003322:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003326:	9107      	str	r1, [sp, #28]
 8003328:	f7ff fc72 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800332c:	4650      	mov	r0, sl
 800332e:	f7ff fbf9 	bl	8002b24 <_ZN8touchgfx9ContainerC1Ev>
 8003332:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003336:	4608      	mov	r0, r1
 8003338:	9113      	str	r1, [sp, #76]	; 0x4c
 800333a:	f011 f85b 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800333e:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003342:	4608      	mov	r0, r1
 8003344:	9114      	str	r1, [sp, #80]	; 0x50
 8003346:	f011 f855 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800334a:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 800334e:	4608      	mov	r0, r1
 8003350:	9115      	str	r1, [sp, #84]	; 0x54
 8003352:	f011 f84f 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003356:	f204 5144 	addw	r1, r4, #1348	; 0x544
 800335a:	4608      	mov	r0, r1
 800335c:	9108      	str	r1, [sp, #32]
 800335e:	f7ff fc77 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003362:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003366:	4608      	mov	r0, r1
 8003368:	9109      	str	r1, [sp, #36]	; 0x24
 800336a:	f7ff fc71 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800336e:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003372:	4608      	mov	r0, r1
 8003374:	910a      	str	r1, [sp, #40]	; 0x28
 8003376:	f7ff fc6b 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800337a:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 800337e:	4608      	mov	r0, r1
 8003380:	ee0b 1a10 	vmov	s22, r1
 8003384:	f00f fd50 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 8003388:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 800338c:	4608      	mov	r0, r1
 800338e:	911d      	str	r1, [sp, #116]	; 0x74
 8003390:	f7ff f9de 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003394:	4b8c      	ldr	r3, [pc, #560]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003396:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 800339a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800339e:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 80033a2:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 80033a6:	4608      	mov	r0, r1
 80033a8:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 80033ac:	ee0f 1a10 	vmov	s30, r1
 80033b0:	f7ff fc2e 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80033b4:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 80033b8:	4608      	mov	r0, r1
 80033ba:	ee09 1a10 	vmov	s18, r1
 80033be:	f7ff fbb1 	bl	8002b24 <_ZN8touchgfx9ContainerC1Ev>
 80033c2:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 80033c6:	4608      	mov	r0, r1
 80033c8:	9116      	str	r1, [sp, #88]	; 0x58
 80033ca:	f011 f813 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033ce:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 80033d2:	4608      	mov	r0, r1
 80033d4:	9117      	str	r1, [sp, #92]	; 0x5c
 80033d6:	f011 f80d 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033da:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 80033de:	4608      	mov	r0, r1
 80033e0:	9118      	str	r1, [sp, #96]	; 0x60
 80033e2:	f011 f807 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80033e6:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 80033ea:	4608      	mov	r0, r1
 80033ec:	910b      	str	r1, [sp, #44]	; 0x2c
 80033ee:	f7ff fc2f 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033f2:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 80033f6:	4608      	mov	r0, r1
 80033f8:	910c      	str	r1, [sp, #48]	; 0x30
 80033fa:	f7ff fc29 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033fe:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003402:	4608      	mov	r0, r1
 8003404:	910d      	str	r1, [sp, #52]	; 0x34
 8003406:	f7ff fc23 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800340a:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 800340e:	4608      	mov	r0, r1
 8003410:	ee0b 1a90 	vmov	s23, r1
 8003414:	f00f fd08 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 8003418:	f604 1128 	addw	r1, r4, #2344	; 0x928
 800341c:	4608      	mov	r0, r1
 800341e:	911e      	str	r1, [sp, #120]	; 0x78
 8003420:	f7ff f996 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003424:	4b68      	ldr	r3, [pc, #416]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003426:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 800342a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800342e:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003432:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003436:	4608      	mov	r0, r1
 8003438:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 800343c:	ee0f 1a90 	vmov	s31, r1
 8003440:	f7ff fbe6 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8003444:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003448:	4608      	mov	r0, r1
 800344a:	ee09 1a90 	vmov	s19, r1
 800344e:	f7ff fb69 	bl	8002b24 <_ZN8touchgfx9ContainerC1Ev>
 8003452:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003456:	4608      	mov	r0, r1
 8003458:	9119      	str	r1, [sp, #100]	; 0x64
 800345a:	f010 ffcb 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800345e:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003462:	4608      	mov	r0, r1
 8003464:	911a      	str	r1, [sp, #104]	; 0x68
 8003466:	f010 ffc5 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800346a:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 800346e:	4608      	mov	r0, r1
 8003470:	911b      	str	r1, [sp, #108]	; 0x6c
 8003472:	f010 ffbf 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003476:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 800347a:	4608      	mov	r0, r1
 800347c:	910e      	str	r1, [sp, #56]	; 0x38
 800347e:	f7ff fbe7 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003482:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 8003486:	4608      	mov	r0, r1
 8003488:	910f      	str	r1, [sp, #60]	; 0x3c
 800348a:	f7ff fbe1 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800348e:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 8003492:	4608      	mov	r0, r1
 8003494:	9110      	str	r1, [sp, #64]	; 0x40
 8003496:	f7ff fbdb 	bl	8002c50 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800349a:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 800349e:	4608      	mov	r0, r1
 80034a0:	ee0c 1a10 	vmov	s24, r1
 80034a4:	f00f fcc0 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 80034a8:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 80034ac:	4608      	mov	r0, r1
 80034ae:	911f      	str	r1, [sp, #124]	; 0x7c
 80034b0:	f7ff f94e 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80034b4:	4b44      	ldr	r3, [pc, #272]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80034b6:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 80034ba:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80034be:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 80034c2:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 80034c6:	4608      	mov	r0, r1
 80034c8:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 80034cc:	9103      	str	r1, [sp, #12]
 80034ce:	f7ff fb9f 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80034d2:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 80034d6:	4608      	mov	r0, r1
 80034d8:	ee0c 1a90 	vmov	s25, r1
 80034dc:	f00f fca4 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 80034e0:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 80034e4:	4608      	mov	r0, r1
 80034e6:	9120      	str	r1, [sp, #128]	; 0x80
 80034e8:	f7ff f932 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80034ec:	4b36      	ldr	r3, [pc, #216]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80034ee:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 80034f2:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80034f6:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 80034fa:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 80034fe:	4608      	mov	r0, r1
 8003500:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003504:	9104      	str	r1, [sp, #16]
 8003506:	f7ff fb83 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800350a:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 800350e:	4608      	mov	r0, r1
 8003510:	ee0d 1a10 	vmov	s26, r1
 8003514:	f00f fc88 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 8003518:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 800351c:	4608      	mov	r0, r1
 800351e:	9121      	str	r1, [sp, #132]	; 0x84
 8003520:	f7ff f916 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003524:	4b28      	ldr	r3, [pc, #160]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003526:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 800352a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800352e:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8003532:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003536:	4618      	mov	r0, r3
 8003538:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 800353c:	9305      	str	r3, [sp, #20]
 800353e:	f7ff fb67 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8003542:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 8003546:	4618      	mov	r0, r3
 8003548:	9306      	str	r3, [sp, #24]
 800354a:	f7ff fb61 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800354e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003552:	4a1e      	ldr	r2, [pc, #120]	; (80035cc <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8003554:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8003558:	4a1d      	ldr	r2, [pc, #116]	; (80035d0 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 800355a:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 800355e:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 8003562:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003566:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800356a:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 800356e:	f011 ff5b 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003572:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003576:	462a      	mov	r2, r5
 8003578:	4648      	mov	r0, r9
 800357a:	9300      	str	r3, [sp, #0]
 800357c:	4629      	mov	r1, r5
 800357e:	23f0      	movs	r3, #240	; 0xf0
 8003580:	f7ff fabd 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003584:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003588:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800358a:	1d23      	adds	r3, r4, #4
 800358c:	4618      	mov	r0, r3
 800358e:	4649      	mov	r1, r9
 8003590:	ee0a 3a10 	vmov	s20, r3
 8003594:	f00d fb7c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003598:	462a      	mov	r2, r5
 800359a:	4640      	mov	r0, r8
 800359c:	4629      	mov	r1, r5
 800359e:	f7ff faa1 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80035a2:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80035a6:	4640      	mov	r0, r8
 80035a8:	4631      	mov	r1, r6
 80035aa:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80035ae:	f010 ff48 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80035b2:	4641      	mov	r1, r8
 80035b4:	ee1a 0a10 	vmov	r0, s20
 80035b8:	e00c      	b.n	80035d4 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80035ba:	bf00      	nop
 80035bc:	0802d8a8 	.word	0x0802d8a8
 80035c0:	0802fcb4 	.word	0x0802fcb4
 80035c4:	0802ff00 	.word	0x0802ff00
 80035c8:	0802f9e8 	.word	0x0802f9e8
 80035cc:	0802d890 	.word	0x0802d890
 80035d0:	08002d79 	.word	0x08002d79
 80035d4:	f00d fb5c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80035d8:	4658      	mov	r0, fp
 80035da:	f240 1201 	movw	r2, #257	; 0x101
 80035de:	2121      	movs	r1, #33	; 0x21
 80035e0:	f7ff fa80 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80035e4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80035e6:	4632      	mov	r2, r6
 80035e8:	a928      	add	r1, sp, #160	; 0xa0
 80035ea:	4658      	mov	r0, fp
 80035ec:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 80035f0:	2302      	movs	r3, #2
 80035f2:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80035f6:	f010 fd2e 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80035fa:	231f      	movs	r3, #31
        updateTextPosition();
 80035fc:	4658      	mov	r0, fp
 80035fe:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003602:	f7ff fab3 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003606:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800360a:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800360e:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8003612:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003614:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003618:	4659      	mov	r1, fp
 800361a:	ee1a 0a10 	vmov	r0, s20
 800361e:	9302      	str	r3, [sp, #8]
 8003620:	f00d fb36 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8003624:	ee18 0a10 	vmov	r0, s16
 8003628:	2255      	movs	r2, #85	; 0x55
 800362a:	4629      	mov	r1, r5
 800362c:	f7ff fa5a 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8003630:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8003632:	ee18 0a10 	vmov	r0, s16
 8003636:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800363a:	4632      	mov	r2, r6
 800363c:	2307      	movs	r3, #7
 800363e:	a928      	add	r1, sp, #160	; 0xa0
 8003640:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003644:	f00d ff7e 	bl	8011544 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003648:	228c      	movs	r2, #140	; 0x8c
 800364a:	ee18 0a10 	vmov	r0, s16
 800364e:	2150      	movs	r1, #80	; 0x50
 8003650:	f00d fe26 	bl	80112a0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8003654:	ee18 0a10 	vmov	r0, s16
 8003658:	2132      	movs	r1, #50	; 0x32
 800365a:	f00d fda4 	bl	80111a6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 800365e:	ee18 0a10 	vmov	r0, s16
 8003662:	2132      	movs	r1, #50	; 0x32
 8003664:	f00d fe1a 	bl	801129c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003668:	4b47      	ldr	r3, [pc, #284]	; (8003788 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
    buttonWithIcon_LP3.setXY(194, 97);
 800366a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800366c:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8003670:	2261      	movs	r2, #97	; 0x61
 8003672:	21c2      	movs	r1, #194	; 0xc2
 8003674:	f7ff fa36 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8003678:	f04f 0809 	mov.w	r8, #9
 800367c:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003680:	aa27      	add	r2, sp, #156	; 0x9c
 8003682:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003684:	9600      	str	r6, [sp, #0]
 8003686:	ab28      	add	r3, sp, #160	; 0xa0
 8003688:	a926      	add	r1, sp, #152	; 0x98
 800368a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800368e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003692:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003696:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800369a:	f010 fe16 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800369e:	9b02      	ldr	r3, [sp, #8]
 80036a0:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80036a4:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80036a6:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80036aa:	ee18 0a90 	vmov	r0, s17
 80036ae:	f00d faef 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80036b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80036b4:	223d      	movs	r2, #61	; 0x3d
 80036b6:	21c2      	movs	r1, #194	; 0xc2
 80036b8:	f7ff fa14 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80036bc:	aa27      	add	r2, sp, #156	; 0x9c
 80036be:	9812      	ldr	r0, [sp, #72]	; 0x48
 80036c0:	9600      	str	r6, [sp, #0]
 80036c2:	ab28      	add	r3, sp, #160	; 0xa0
 80036c4:	a926      	add	r1, sp, #152	; 0x98
 80036c6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80036ca:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80036ce:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80036d2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80036d6:	f010 fdf8 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80036da:	9b02      	ldr	r3, [sp, #8]
 80036dc:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 80036e0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80036e2:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 80036e6:	ee18 0a90 	vmov	r0, s17
 80036ea:	f00d fad1 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 80036ee:	4638      	mov	r0, r7
 80036f0:	2219      	movs	r2, #25
 80036f2:	21c2      	movs	r1, #194	; 0xc2
 80036f4:	f7ff f9f6 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80036f8:	aa27      	add	r2, sp, #156	; 0x9c
 80036fa:	4638      	mov	r0, r7
 80036fc:	ab28      	add	r3, sp, #160	; 0xa0
 80036fe:	a926      	add	r1, sp, #152	; 0x98
 8003700:	9600      	str	r6, [sp, #0]
 8003702:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003706:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800370a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800370e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003712:	f010 fdda 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003716:	9b02      	ldr	r3, [sp, #8]
 8003718:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 800371c:	4639      	mov	r1, r7
 800371e:	ee18 0a90 	vmov	r0, s17
 8003722:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003726:	f00d fab3 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800372a:	2268      	movs	r2, #104	; 0x68
 800372c:	ee1d 0a90 	vmov	r0, s27
 8003730:	210a      	movs	r1, #10
 8003732:	f7ff f9d7 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003736:	f04f 33ff 	mov.w	r3, #4294967295
 800373a:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 800373e:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8003742:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 8003746:	af22      	add	r7, sp, #136	; 0x88
 8003748:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800374c:	ee1d 1a90 	vmov	r1, s27
 8003750:	4638      	mov	r0, r7
 8003752:	4798      	blx	r3
 8003754:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003758:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 800375c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003760:	4b0a      	ldr	r3, [pc, #40]	; (800378c <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8003762:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8003764:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 8003768:	b92b      	cbnz	r3, 8003776 <_ZN23Calibration_PadViewBaseC1Ev+0x566>
 800376a:	4b09      	ldr	r3, [pc, #36]	; (8003790 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 800376c:	4a09      	ldr	r2, [pc, #36]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 800376e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003770:	4809      	ldr	r0, [pc, #36]	; (8003798 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 8003772:	f028 fa2d 	bl	802bbd0 <__assert_func>
 8003776:	4b09      	ldr	r3, [pc, #36]	; (800379c <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8003778:	881b      	ldrh	r3, [r3, #0]
 800377a:	2b09      	cmp	r3, #9
 800377c:	d812      	bhi.n	80037a4 <_ZN23Calibration_PadViewBaseC1Ev+0x594>
 800377e:	4b08      	ldr	r3, [pc, #32]	; (80037a0 <_ZN23Calibration_PadViewBaseC1Ev+0x590>)
 8003780:	4a04      	ldr	r2, [pc, #16]	; (8003794 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 8003782:	2161      	movs	r1, #97	; 0x61
 8003784:	e7f4      	b.n	8003770 <_ZN23Calibration_PadViewBaseC1Ev+0x560>
 8003786:	bf00      	nop
 8003788:	00ac00f0 	.word	0x00ac00f0
 800378c:	20013894 	.word	0x20013894
 8003790:	0802d5b0 	.word	0x0802d5b0
 8003794:	0802d6b5 	.word	0x0802d6b5
 8003798:	0802d62d 	.word	0x0802d62d
 800379c:	20013898 	.word	0x20013898
 80037a0:	0802d674 	.word	0x0802d674
        return texts->getText(typedTextId);
 80037a4:	4bd8      	ldr	r3, [pc, #864]	; (8003b08 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80037a6:	4641      	mov	r1, r8
 80037a8:	6818      	ldr	r0, [r3, #0]
 80037aa:	f005 f99f 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80037ae:	4ad7      	ldr	r2, [pc, #860]	; (8003b0c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80037b0:	4603      	mov	r3, r0
 80037b2:	210a      	movs	r1, #10
 80037b4:	4648      	mov	r0, r9
 80037b6:	f016 fcf1 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80037ba:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80037be:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80037c2:	f010 f86d 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80037c6:	f04f 090a 	mov.w	r9, #10
 80037ca:	4ad1      	ldr	r2, [pc, #836]	; (8003b10 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80037cc:	9229      	str	r2, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80037ce:	ee1d 0a90 	vmov	r0, s27
 80037d2:	4631      	mov	r1, r6
 80037d4:	f8ad 90a8 	strh.w	r9, [sp, #168]	; 0xa8
 80037d8:	f010 f882 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80037dc:	ee1d 1a90 	vmov	r1, s27
 80037e0:	ee18 0a90 	vmov	r0, s17
 80037e4:	f00d fa54 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 80037e8:	2244      	movs	r2, #68	; 0x44
 80037ea:	ee1e 0a10 	vmov	r0, s28
 80037ee:	2116      	movs	r1, #22
 80037f0:	f7ff f978 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80037f4:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 80037f8:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 80037fc:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003800:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003804:	f8c4 1330 	str.w	r1, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003808:	4638      	mov	r0, r7
 800380a:	ee1e 1a10 	vmov	r1, s28
 800380e:	4798      	blx	r3
 8003810:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003814:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003818:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800381c:	f604 6108 	addw	r1, r4, #3592	; 0xe08
 8003820:	9111      	str	r1, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003822:	49bc      	ldr	r1, [pc, #752]	; (8003b14 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8003824:	680b      	ldr	r3, [r1, #0]
 8003826:	2b00      	cmp	r3, #0
 8003828:	d09f      	beq.n	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800382a:	49bb      	ldr	r1, [pc, #748]	; (8003b18 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800382c:	880b      	ldrh	r3, [r1, #0]
 800382e:	2b0b      	cmp	r3, #11
 8003830:	d9a5      	bls.n	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003832:	4bb5      	ldr	r3, [pc, #724]	; (8003b08 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003834:	210b      	movs	r1, #11
 8003836:	6818      	ldr	r0, [r3, #0]
 8003838:	f005 f958 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 800383c:	4ab3      	ldr	r2, [pc, #716]	; (8003b0c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 800383e:	4603      	mov	r3, r0
 8003840:	4649      	mov	r1, r9
 8003842:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003844:	f016 fcaa 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003848:	9811      	ldr	r0, [sp, #68]	; 0x44
 800384a:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
    textAreaCal_LP2.resizeToCurrentText();
 800384e:	ee1e 0a10 	vmov	r0, s28
 8003852:	f010 f825 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003856:	230c      	movs	r3, #12
 8003858:	4aad      	ldr	r2, [pc, #692]	; (8003b10 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800385a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800385e:	ee1e 0a10 	vmov	r0, s28
 8003862:	4631      	mov	r1, r6
 8003864:	9229      	str	r2, [sp, #164]	; 0xa4
 8003866:	f010 f83b 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 800386a:	ee1e 1a10 	vmov	r1, s28
 800386e:	ee18 0a90 	vmov	r0, s17
 8003872:	f00d fa0d 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8003876:	2220      	movs	r2, #32
 8003878:	ee1e 0a90 	vmov	r0, s29
 800387c:	2116      	movs	r1, #22
 800387e:	f7ff f931 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8003882:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 8003886:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 800388a:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800388e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003892:	f8c4 037c 	str.w	r0, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 8003896:	ee1e 1a90 	vmov	r1, s29
 800389a:	4638      	mov	r0, r7
 800389c:	4798      	blx	r3
 800389e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80038a2:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80038a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80038aa:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80038ae:	9011      	str	r0, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80038b0:	4898      	ldr	r0, [pc, #608]	; (8003b14 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80038b2:	6803      	ldr	r3, [r0, #0]
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	f43f af58 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80038ba:	4997      	ldr	r1, [pc, #604]	; (8003b18 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80038bc:	880b      	ldrh	r3, [r1, #0]
 80038be:	2b0d      	cmp	r3, #13
 80038c0:	f67f af5d 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80038c4:	4b90      	ldr	r3, [pc, #576]	; (8003b08 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80038c6:	210d      	movs	r1, #13
 80038c8:	6818      	ldr	r0, [r3, #0]
 80038ca:	f005 f90f 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80038ce:	4a8f      	ldr	r2, [pc, #572]	; (8003b0c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80038d0:	4603      	mov	r3, r0
 80038d2:	4649      	mov	r1, r9
 80038d4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80038d6:	f016 fc61 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80038da:	9811      	ldr	r0, [sp, #68]	; 0x44
 80038dc:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
    textAreaCal_LP1.resizeToCurrentText();
 80038e0:	ee1e 0a90 	vmov	r0, s29
 80038e4:	f00f ffdc 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80038e8:	4a89      	ldr	r2, [pc, #548]	; (8003b10 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80038ea:	9229      	str	r2, [sp, #164]	; 0xa4
 80038ec:	2314      	movs	r3, #20
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 80038ee:	ee1e 0a90 	vmov	r0, s29
 80038f2:	4631      	mov	r1, r6
 80038f4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80038f8:	f00f fff2 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 80038fc:	ee1e 1a90 	vmov	r1, s29
 8003900:	ee18 0a90 	vmov	r0, s17
 8003904:	f00d f9c4 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8003908:	23f0      	movs	r3, #240	; 0xf0
 800390a:	ee1a 0a90 	vmov	r0, s21
 800390e:	220f      	movs	r2, #15
 8003910:	4629      	mov	r1, r5
 8003912:	f8cd 9000 	str.w	r9, [sp]
 8003916:	f7ff f8f2 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 800391a:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800391e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003920:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8003924:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003926:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 800392a:	4611      	mov	r1, r2
 800392c:	f8c4 03c0 	str.w	r0, [r4, #960]	; 0x3c0
 8003930:	ee1a 0a90 	vmov	r0, s21
 8003934:	f7ff fc54 	bl	80031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8003938:	2205      	movs	r2, #5
 800393a:	ee1a 0a90 	vmov	r0, s21
 800393e:	21eb      	movs	r1, #235	; 0xeb
 8003940:	f7ff fc52 	bl	80031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8003944:	ee1a 0a90 	vmov	r0, s21
 8003948:	4659      	mov	r1, fp
 800394a:	f7ff fc51 	bl	80031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800394e:	ee1a 0a90 	vmov	r0, s21
 8003952:	4659      	mov	r1, fp
 8003954:	f00f fb94 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8003958:	ee1a 1a90 	vmov	r1, s21
 800395c:	ee18 0a90 	vmov	r0, s17
 8003960:	f00d f996 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8003964:	462a      	mov	r2, r5
 8003966:	9807      	ldr	r0, [sp, #28]
 8003968:	2160      	movs	r1, #96	; 0x60
 800396a:	f7ff f8bb 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800396e:	f04f 3eff 	mov.w	lr, #4294967295
        boundingArea = calculateBoundingArea();
 8003972:	4638      	mov	r0, r7
 8003974:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 8003976:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        linespace = space;
 800397a:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800397e:	f00f fd15 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003982:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003986:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 800398a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800398e:	f04f 0e08 	mov.w	lr, #8
 8003992:	4a5f      	ldr	r2, [pc, #380]	; (8003b10 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 8003994:	9807      	ldr	r0, [sp, #28]
 8003996:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 800399a:	4631      	mov	r1, r6
 800399c:	9229      	str	r2, [sp, #164]	; 0xa4
 800399e:	f00f ff9f 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80039a2:	9907      	ldr	r1, [sp, #28]
 80039a4:	ee18 0a90 	vmov	r0, s17
 80039a8:	f00d f972 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80039ac:	ee18 1a90 	vmov	r1, s17
 80039b0:	ee18 0a10 	vmov	r0, s16
 80039b4:	f00d fe4f 	bl	8011656 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80039b8:	4a58      	ldr	r2, [pc, #352]	; (8003b1c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
    buttonWithIcon_RP3.setXY(194, 97);
 80039ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80039bc:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80039c0:	21c2      	movs	r1, #194	; 0xc2
 80039c2:	2261      	movs	r2, #97	; 0x61
 80039c4:	f7ff f88e 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80039c8:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80039cc:	4673      	mov	r3, lr
 80039ce:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80039d2:	4672      	mov	r2, lr
 80039d4:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80039d8:	4671      	mov	r1, lr
 80039da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80039dc:	9600      	str	r6, [sp, #0]
 80039de:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80039e2:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80039e6:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80039ea:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80039ee:	f010 fc6c 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80039f2:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 80039f4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80039f6:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 80039fa:	4650      	mov	r0, sl
 80039fc:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 8003a00:	f00d f946 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8003a04:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003a06:	223d      	movs	r2, #61	; 0x3d
 8003a08:	21c2      	movs	r1, #194	; 0xc2
 8003a0a:	f7ff f86b 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003a0e:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003a12:	4673      	mov	r3, lr
 8003a14:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003a18:	4672      	mov	r2, lr
 8003a1a:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003a1e:	4671      	mov	r1, lr
 8003a20:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003a22:	9600      	str	r6, [sp, #0]
 8003a24:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003a28:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003a2c:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003a30:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003a34:	f010 fc49 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003a38:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8003a3a:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003a3c:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 8003a40:	4650      	mov	r0, sl
 8003a42:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8003a46:	f00d f923 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 8003a4a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003a4c:	2219      	movs	r2, #25
 8003a4e:	21c2      	movs	r1, #194	; 0xc2
 8003a50:	f7ff f848 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003a54:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003a58:	4673      	mov	r3, lr
 8003a5a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003a5e:	4672      	mov	r2, lr
 8003a60:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003a64:	4671      	mov	r1, lr
 8003a66:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003a68:	9600      	str	r6, [sp, #0]
 8003a6a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003a6e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003a72:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003a76:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003a7a:	f010 fc26 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003a7e:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 8003a80:	9915      	ldr	r1, [sp, #84]	; 0x54
 8003a82:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 8003a86:	4650      	mov	r0, sl
 8003a88:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 8003a8c:	f00d f900 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 8003a90:	2268      	movs	r2, #104	; 0x68
 8003a92:	4649      	mov	r1, r9
 8003a94:	9808      	ldr	r0, [sp, #32]
 8003a96:	f7ff f825 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003a9a:	f04f 3eff 	mov.w	lr, #4294967295
 8003a9e:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 8003aa2:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 8003aa6:	4630      	mov	r0, r6
 8003aa8:	f7ff f8a4 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003aac:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003ab0:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 8003ab4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ab8:	4816      	ldr	r0, [pc, #88]	; (8003b14 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8003aba:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 8003abc:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 8003ac0:	2b00      	cmp	r3, #0
 8003ac2:	f43f ae52 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ac6:	4914      	ldr	r1, [pc, #80]	; (8003b18 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8003ac8:	880b      	ldrh	r3, [r1, #0]
 8003aca:	2b12      	cmp	r3, #18
 8003acc:	f67f ae57 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003ad0:	4b0d      	ldr	r3, [pc, #52]	; (8003b08 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003ad2:	2112      	movs	r1, #18
 8003ad4:	6818      	ldr	r0, [r3, #0]
 8003ad6:	f005 f809 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8003ada:	4a0c      	ldr	r2, [pc, #48]	; (8003b0c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 8003adc:	4603      	mov	r3, r0
 8003ade:	4649      	mov	r1, r9
 8003ae0:	4638      	mov	r0, r7
 8003ae2:	f016 fb5b 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8003ae6:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 8003ae8:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8003aec:	f00f fed8 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003af0:	4f07      	ldr	r7, [pc, #28]	; (8003b10 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003af2:	9808      	ldr	r0, [sp, #32]
 8003af4:	9729      	str	r7, [sp, #164]	; 0xa4
 8003af6:	2313      	movs	r3, #19
 8003af8:	4631      	mov	r1, r6
 8003afa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003afe:	f00f feef 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8003b02:	9908      	ldr	r1, [sp, #32]
 8003b04:	4650      	mov	r0, sl
 8003b06:	e00b      	b.n	8003b20 <_ZN23Calibration_PadViewBaseC1Ev+0x910>
 8003b08:	200138a0 	.word	0x200138a0
 8003b0c:	0802d6ed 	.word	0x0802d6ed
 8003b10:	0802d760 	.word	0x0802d760
 8003b14:	20013894 	.word	0x20013894
 8003b18:	20013898 	.word	0x20013898
 8003b1c:	00ac00f0 	.word	0x00ac00f0
 8003b20:	f00d f8b6 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003b24:	2116      	movs	r1, #22
 8003b26:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003b28:	2244      	movs	r2, #68	; 0x44
 8003b2a:	f7fe ffdb 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003b2e:	f04f 32ff 	mov.w	r2, #4294967295
 8003b32:	f8c4 25c0 	str.w	r2, [r4, #1472]	; 0x5c0
        linespace = space;
 8003b36:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8003b3a:	4630      	mov	r0, r6
 8003b3c:	f7ff f85a 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003b40:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003b44:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8003b48:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b4c:	48d9      	ldr	r0, [pc, #868]	; (8003eb4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8003b4e:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8003b50:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	f43f ae08 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b5a:	49d7      	ldr	r1, [pc, #860]	; (8003eb8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003b5c:	880b      	ldrh	r3, [r1, #0]
 8003b5e:	2b10      	cmp	r3, #16
 8003b60:	f67f ae0d 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003b64:	4bd5      	ldr	r3, [pc, #852]	; (8003ebc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b66:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8003eb4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>
        return texts->getText(typedTextId);
 8003b6a:	6818      	ldr	r0, [r3, #0]
 8003b6c:	2110      	movs	r1, #16
 8003b6e:	f004 ffbd 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8003b72:	4ad3      	ldr	r2, [pc, #844]	; (8003ec0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003b74:	4603      	mov	r3, r0
 8003b76:	4649      	mov	r1, r9
 8003b78:	4628      	mov	r0, r5
 8003b7a:	f016 fb0f 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 8003b7e:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003b80:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003b84:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8003b86:	f00f fe8b 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b8a:	2311      	movs	r3, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003b8c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003b8e:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003b92:	4629      	mov	r1, r5
 8003b94:	9729      	str	r7, [sp, #164]	; 0xa4
 8003b96:	f00f fea3 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8003b9a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003b9c:	4650      	mov	r0, sl
 8003b9e:	f00d f877 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003ba2:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8003ba6:	2220      	movs	r2, #32
 8003ba8:	2116      	movs	r1, #22
 8003baa:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003bac:	f7fe ff9a 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8003bb0:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8003bb4:	2600      	movs	r6, #0
 8003bb6:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8003bba:	4628      	mov	r0, r5
 8003bbc:	f7ff f81a 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003bc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003bc4:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8003bc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bcc:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8003bd0:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8003bd4:	2b00      	cmp	r3, #0
 8003bd6:	f43f adc8 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bda:	49b7      	ldr	r1, [pc, #732]	; (8003eb8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003bdc:	880b      	ldrh	r3, [r1, #0]
 8003bde:	2b0f      	cmp	r3, #15
 8003be0:	f67f adcd 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003be4:	4bb5      	ldr	r3, [pc, #724]	; (8003ebc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003be6:	210f      	movs	r1, #15
 8003be8:	6818      	ldr	r0, [r3, #0]
 8003bea:	f004 ff7f 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8003bee:	4ab4      	ldr	r2, [pc, #720]	; (8003ec0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003bf0:	4603      	mov	r3, r0
 8003bf2:	4649      	mov	r1, r9
 8003bf4:	4638      	mov	r0, r7
 8003bf6:	f016 fad1 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003bfa:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003bfc:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8003c00:	f00f fe4e 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003c04:	4faf      	ldr	r7, [pc, #700]	; (8003ec4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003c06:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003c08:	9729      	str	r7, [sp, #164]	; 0xa4
 8003c0a:	f04f 0e14 	mov.w	lr, #20
 8003c0e:	4629      	mov	r1, r5
 8003c10:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003c14:	f00f fe64 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003c18:	4650      	mov	r0, sl
 8003c1a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003c1c:	f00d f838 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8003c20:	23f0      	movs	r3, #240	; 0xf0
 8003c22:	ee1b 0a10 	vmov	r0, s22
 8003c26:	f8cd 9000 	str.w	r9, [sp]
 8003c2a:	220f      	movs	r2, #15
 8003c2c:	4631      	mov	r1, r6
 8003c2e:	f7fe ff66 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8003c32:	f04f 32ff 	mov.w	r2, #4294967295
 8003c36:	f8c4 26a4 	str.w	r2, [r4, #1700]	; 0x6a4
 8003c3a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8003c3c:	f8c4 2650 	str.w	r2, [r4, #1616]	; 0x650
 8003c40:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8003c44:	2205      	movs	r2, #5
 8003c46:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8003c4a:	4611      	mov	r1, r2
 8003c4c:	ee1b 0a10 	vmov	r0, s22
 8003c50:	f7ff fac6 	bl	80031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8003c54:	2205      	movs	r2, #5
 8003c56:	ee1b 0a10 	vmov	r0, s22
 8003c5a:	21eb      	movs	r1, #235	; 0xeb
 8003c5c:	f7ff fac4 	bl	80031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 8003c60:	ee1b 0a10 	vmov	r0, s22
 8003c64:	2101      	movs	r1, #1
 8003c66:	f7ff fac3 	bl	80031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003c6a:	ee1b 0a10 	vmov	r0, s22
 8003c6e:	2101      	movs	r1, #1
 8003c70:	f00f fa06 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8003c74:	4650      	mov	r0, sl
 8003c76:	ee1b 1a10 	vmov	r1, s22
 8003c7a:	f00d f809 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 8003c7e:	ee1f 0a10 	vmov	r0, s30
 8003c82:	4632      	mov	r2, r6
 8003c84:	215c      	movs	r1, #92	; 0x5c
 8003c86:	f7fe ff2d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003c8a:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003c8e:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8003c92:	f8c4 26dc 	str.w	r2, [r4, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 8003c96:	a822      	add	r0, sp, #136	; 0x88
        linespace = space;
 8003c98:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 8003c9c:	f00f fb86 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ca0:	ee1f 2a10 	vmov	r2, s30
 8003ca4:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003ca8:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8003cac:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003cb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003cb4:	230e      	movs	r3, #14
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003cb6:	ee1f 0a10 	vmov	r0, s30
 8003cba:	4629      	mov	r1, r5
 8003cbc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003cc0:	9729      	str	r7, [sp, #164]	; 0xa4
 8003cc2:	f00f fe0d 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8003cc6:	4650      	mov	r0, sl
 8003cc8:	ee1f 1a10 	vmov	r1, s30
 8003ccc:	f00c ffe0 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8003cd0:	4651      	mov	r1, sl
 8003cd2:	ee18 0a10 	vmov	r0, s16
 8003cd6:	f00d fcbe 	bl	8011656 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003cda:	487b      	ldr	r0, [pc, #492]	; (8003ec8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb8>)
 8003cdc:	f8c4 06fc 	str.w	r0, [r4, #1788]	; 0x6fc
    buttonWithIcon_LH3.setXY(194, 97);
 8003ce0:	2261      	movs	r2, #97	; 0x61
 8003ce2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003ce4:	21c2      	movs	r1, #194	; 0xc2
 8003ce6:	f7fe fefd 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003cea:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003cee:	4663      	mov	r3, ip
 8003cf0:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003cf4:	4662      	mov	r2, ip
 8003cf6:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003cfa:	2709      	movs	r7, #9
 8003cfc:	4661      	mov	r1, ip
 8003cfe:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003d00:	9500      	str	r5, [sp, #0]
    line1_RP.setPosition(0, 15, 240, 10);
 8003d02:	46c8      	mov	r8, r9
 8003d04:	f04f 0901 	mov.w	r9, #1
 8003d08:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003d0c:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003d10:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003d14:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003d18:	f010 fad7 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003d1c:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8003d1e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003d20:	f8c4 2748 	str.w	r2, [r4, #1864]	; 0x748
 8003d24:	ee19 0a10 	vmov	r0, s18
 8003d28:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8003d2c:	f00c ffb0 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8003d30:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003d32:	223d      	movs	r2, #61	; 0x3d
 8003d34:	21c2      	movs	r1, #194	; 0xc2
 8003d36:	f7fe fed5 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003d3a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003d3e:	4663      	mov	r3, ip
 8003d40:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003d44:	4662      	mov	r2, ip
 8003d46:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003d4a:	4661      	mov	r1, ip
 8003d4c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003d4e:	9500      	str	r5, [sp, #0]
 8003d50:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003d54:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003d58:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003d5c:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003d60:	f010 fab3 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003d64:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8003d66:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003d68:	f8c4 2784 	str.w	r2, [r4, #1924]	; 0x784
 8003d6c:	ee19 0a10 	vmov	r0, s18
 8003d70:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 8003d74:	f00c ff8c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8003d78:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003d7a:	2219      	movs	r2, #25
 8003d7c:	21c2      	movs	r1, #194	; 0xc2
 8003d7e:	f7fe feb1 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003d82:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003d86:	4663      	mov	r3, ip
 8003d88:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003d8c:	4662      	mov	r2, ip
 8003d8e:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003d92:	4661      	mov	r1, ip
 8003d94:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003d96:	9500      	str	r5, [sp, #0]
 8003d98:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003d9c:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003da0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003da4:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003da8:	f010 fa8f 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003dac:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8003dae:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003db0:	f8c4 27c0 	str.w	r2, [r4, #1984]	; 0x7c0
 8003db4:	ee19 0a10 	vmov	r0, s18
 8003db8:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8003dbc:	f00c ff68 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 8003dc0:	2268      	movs	r2, #104	; 0x68
 8003dc2:	4641      	mov	r1, r8
 8003dc4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003dc6:	f7fe fe8d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003dca:	f04f 3cff 	mov.w	ip, #4294967295
 8003dce:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8003dd2:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8003dd6:	4628      	mov	r0, r5
 8003dd8:	f7fe ff0c 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003ddc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003de0:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8003de4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003de8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8003dec:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	f43f acba 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003df6:	4930      	ldr	r1, [pc, #192]	; (8003eb8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003df8:	880b      	ldrh	r3, [r1, #0]
 8003dfa:	2b07      	cmp	r3, #7
 8003dfc:	f67f acbf 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003e00:	4b2e      	ldr	r3, [pc, #184]	; (8003ebc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003e02:	2107      	movs	r1, #7
 8003e04:	6818      	ldr	r0, [r3, #0]
 8003e06:	f004 fe71 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8003e0a:	4a2d      	ldr	r2, [pc, #180]	; (8003ec0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003e0c:	4603      	mov	r3, r0
 8003e0e:	4641      	mov	r1, r8
 8003e10:	4650      	mov	r0, sl
 8003e12:	f016 f9c3 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8003e16:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003e18:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8003e1c:	f00f fd40 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e20:	4a28      	ldr	r2, [pc, #160]	; (8003ec4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003e22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003e24:	9229      	str	r2, [sp, #164]	; 0xa4
 8003e26:	4629      	mov	r1, r5
 8003e28:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8003e2c:	f00f fd58 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003e30:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003e32:	ee19 0a10 	vmov	r0, s18
 8003e36:	f00c ff2b 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8003e3a:	2244      	movs	r2, #68	; 0x44
 8003e3c:	2116      	movs	r1, #22
 8003e3e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003e40:	f7fe fe50 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003e44:	f04f 3cff 	mov.w	ip, #4294967295
 8003e48:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8003e4c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8003e50:	4628      	mov	r0, r5
 8003e52:	f7fe fecf 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e56:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e5a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8003e5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e62:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8003e66:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	f43f ac7d 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e70:	4911      	ldr	r1, [pc, #68]	; (8003eb8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003e72:	880b      	ldrh	r3, [r1, #0]
 8003e74:	2b06      	cmp	r3, #6
 8003e76:	f67f ac82 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003e7a:	4b10      	ldr	r3, [pc, #64]	; (8003ebc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003e7c:	2106      	movs	r1, #6
 8003e7e:	6818      	ldr	r0, [r3, #0]
 8003e80:	f004 fe34 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8003e84:	4a0e      	ldr	r2, [pc, #56]	; (8003ec0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003e86:	4603      	mov	r3, r0
 8003e88:	4641      	mov	r1, r8
 8003e8a:	4650      	mov	r0, sl
 8003e8c:	f016 f986 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003e90:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8003e92:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003e96:	f00f fd03 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e9a:	230c      	movs	r3, #12
 8003e9c:	4a09      	ldr	r2, [pc, #36]	; (8003ec4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8003e9e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003ea0:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003ea4:	4629      	mov	r1, r5
 8003ea6:	9229      	str	r2, [sp, #164]	; 0xa4
 8003ea8:	f00f fd1a 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8003eac:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003eae:	ee19 0a10 	vmov	r0, s18
 8003eb2:	e00b      	b.n	8003ecc <_ZN23Calibration_PadViewBaseC1Ev+0xcbc>
 8003eb4:	20013894 	.word	0x20013894
 8003eb8:	20013898 	.word	0x20013898
 8003ebc:	200138a0 	.word	0x200138a0
 8003ec0:	0802d6ed 	.word	0x0802d6ed
 8003ec4:	0802d760 	.word	0x0802d760
 8003ec8:	00ac00f0 	.word	0x00ac00f0
 8003ecc:	f00c fee0 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8003ed0:	2220      	movs	r2, #32
 8003ed2:	2116      	movs	r1, #22
 8003ed4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003ed6:	f7fe fe05 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003eda:	f04f 3cff 	mov.w	ip, #4294967295
 8003ede:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8003ee2:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003ee6:	4628      	mov	r0, r5
 8003ee8:	f7fe fe84 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003eec:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ef0:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003ef4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ef8:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8003efc:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	f43f ac32 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f06:	49d9      	ldr	r1, [pc, #868]	; (800426c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003f08:	880b      	ldrh	r3, [r1, #0]
 8003f0a:	2b05      	cmp	r3, #5
 8003f0c:	f67f ac37 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003f10:	4bd7      	ldr	r3, [pc, #860]	; (8004270 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8003f12:	2105      	movs	r1, #5
 8003f14:	6818      	ldr	r0, [r3, #0]
 8003f16:	f004 fde9 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8003f1a:	4ad6      	ldr	r2, [pc, #856]	; (8004274 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8003f1c:	4603      	mov	r3, r0
 8003f1e:	4641      	mov	r1, r8
 8003f20:	4650      	mov	r0, sl
 8003f22:	f016 f93b 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003f26:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003f28:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8003f2c:	f00f fcb8 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003f30:	f04f 0e14 	mov.w	lr, #20
 8003f34:	4ad0      	ldr	r2, [pc, #832]	; (8004278 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003f36:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003f38:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003f3c:	4629      	mov	r1, r5
 8003f3e:	9229      	str	r2, [sp, #164]	; 0xa4
 8003f40:	f00f fcce 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003f44:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003f46:	ee19 0a10 	vmov	r0, s18
 8003f4a:	f00c fea1 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8003f4e:	ee1b 0a90 	vmov	r0, s23
 8003f52:	23f0      	movs	r3, #240	; 0xf0
 8003f54:	220f      	movs	r2, #15
 8003f56:	4631      	mov	r1, r6
 8003f58:	f8cd 8000 	str.w	r8, [sp]
 8003f5c:	f7fe fdcf 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8003f60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003f64:	f04f 3cff 	mov.w	ip, #4294967295
 8003f68:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003f6a:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
    line1_LH.setStart(5, 5);
 8003f6e:	2205      	movs	r2, #5
 8003f70:	f8c4 c934 	str.w	ip, [r4, #2356]	; 0x934
 8003f74:	4611      	mov	r1, r2
 8003f76:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8003f7a:	ee1b 0a90 	vmov	r0, s23
 8003f7e:	f7ff f92f 	bl	80031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8003f82:	2205      	movs	r2, #5
 8003f84:	ee1b 0a90 	vmov	r0, s23
 8003f88:	21eb      	movs	r1, #235	; 0xeb
 8003f8a:	f7ff f92d 	bl	80031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8003f8e:	ee1b 0a90 	vmov	r0, s23
 8003f92:	4649      	mov	r1, r9
 8003f94:	f7ff f92c 	bl	80031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003f98:	ee1b 0a90 	vmov	r0, s23
 8003f9c:	4649      	mov	r1, r9
 8003f9e:	f00f f86f 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8003fa2:	ee1b 1a90 	vmov	r1, s23
 8003fa6:	ee19 0a10 	vmov	r0, s18
 8003faa:	f00c fe71 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8003fae:	4632      	mov	r2, r6
 8003fb0:	ee1f 0a90 	vmov	r0, s31
 8003fb4:	2149      	movs	r1, #73	; 0x49
 8003fb6:	f7fe fd95 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003fba:	f04f 3cff 	mov.w	ip, #4294967295
 8003fbe:	f8c4 c96c 	str.w	ip, [r4, #2412]	; 0x96c
        boundingArea = calculateBoundingArea();
 8003fc2:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003fc6:	4660      	mov	r0, ip
 8003fc8:	ee1f 1a90 	vmov	r1, s31
        linespace = space;
 8003fcc:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8003fd0:	f00f f9ec 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003fd4:	ee1f 0a90 	vmov	r0, s31
 8003fd8:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003fdc:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003fe0:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003fe4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003fe8:	2304      	movs	r3, #4
 8003fea:	4aa3      	ldr	r2, [pc, #652]	; (8004278 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
 8003fec:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8003ff0:	4629      	mov	r1, r5
 8003ff2:	ee1f 0a90 	vmov	r0, s31
 8003ff6:	9229      	str	r2, [sp, #164]	; 0xa4
 8003ff8:	f00f fc72 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8003ffc:	ee1f 1a90 	vmov	r1, s31
 8004000:	ee19 0a10 	vmov	r0, s18
 8004004:	f00c fe44 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8004008:	ee19 1a10 	vmov	r1, s18
 800400c:	ee18 0a10 	vmov	r0, s16
 8004010:	f00d fb21 	bl	8011656 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8004014:	4899      	ldr	r0, [pc, #612]	; (800427c <_ZN23Calibration_PadViewBaseC1Ev+0x106c>)
 8004016:	f8c4 098c 	str.w	r0, [r4, #2444]	; 0x98c
    buttonWithIcon_RH3.setXY(194, 97);
 800401a:	2261      	movs	r2, #97	; 0x61
 800401c:	9819      	ldr	r0, [sp, #100]	; 0x64
 800401e:	21c2      	movs	r1, #194	; 0xc2
 8004020:	f7fe fd60 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004024:	aa28      	add	r2, sp, #160	; 0xa0
 8004026:	a826      	add	r0, sp, #152	; 0x98
 8004028:	4613      	mov	r3, r2
 800402a:	4601      	mov	r1, r0
 800402c:	9500      	str	r5, [sp, #0]
 800402e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8004030:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004034:	aa27      	add	r2, sp, #156	; 0x9c
 8004036:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 800403a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800403e:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004042:	f010 f942 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004046:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8004048:	9919      	ldr	r1, [sp, #100]	; 0x64
 800404a:	f8c4 29d8 	str.w	r2, [r4, #2520]	; 0x9d8
 800404e:	ee19 0a90 	vmov	r0, s19
 8004052:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8004056:	f00c fe1b 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 800405a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800405c:	223d      	movs	r2, #61	; 0x3d
 800405e:	21c2      	movs	r1, #194	; 0xc2
 8004060:	f7fe fd40 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8004064:	aa28      	add	r2, sp, #160	; 0xa0
 8004066:	a826      	add	r0, sp, #152	; 0x98
 8004068:	4613      	mov	r3, r2
 800406a:	4601      	mov	r1, r0
 800406c:	9500      	str	r5, [sp, #0]
 800406e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8004070:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8004074:	aa27      	add	r2, sp, #156	; 0x9c
 8004076:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 800407a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 800407e:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8004082:	f010 f922 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004086:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8004088:	991a      	ldr	r1, [sp, #104]	; 0x68
 800408a:	f8c4 2a14 	str.w	r2, [r4, #2580]	; 0xa14
 800408e:	ee19 0a90 	vmov	r0, s19
 8004092:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8004096:	f00c fdfb 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 800409a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800409c:	2219      	movs	r2, #25
 800409e:	21c2      	movs	r1, #194	; 0xc2
 80040a0:	f7fe fd20 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80040a4:	aa28      	add	r2, sp, #160	; 0xa0
 80040a6:	a826      	add	r0, sp, #152	; 0x98
 80040a8:	4613      	mov	r3, r2
 80040aa:	4601      	mov	r1, r0
 80040ac:	9500      	str	r5, [sp, #0]
 80040ae:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80040b0:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 80040b4:	aa27      	add	r2, sp, #156	; 0x9c
 80040b6:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 80040ba:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 80040be:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 80040c2:	f010 f902 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80040c6:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 80040c8:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80040ca:	f8c4 2a50 	str.w	r2, [r4, #2640]	; 0xa50
 80040ce:	ee19 0a90 	vmov	r0, s19
 80040d2:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 80040d6:	f00c fddb 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 80040da:	4641      	mov	r1, r8
 80040dc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80040de:	2268      	movs	r2, #104	; 0x68
 80040e0:	f7fe fd00 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80040e4:	f04f 32ff 	mov.w	r2, #4294967295
 80040e8:	f8c4 2a94 	str.w	r2, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 80040ec:	4628      	mov	r0, r5
        linespace = space;
 80040ee:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 80040f2:	f7fe fd7f 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80040f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80040fa:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 80040fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004102:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004106:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 800410a:	2b00      	cmp	r3, #0
 800410c:	f43f ab2d 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004110:	4956      	ldr	r1, [pc, #344]	; (800426c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004112:	880b      	ldrh	r3, [r1, #0]
 8004114:	2b03      	cmp	r3, #3
 8004116:	f67f ab32 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800411a:	4b55      	ldr	r3, [pc, #340]	; (8004270 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
        : typedTextId(id)
 800411c:	f8df a158 	ldr.w	sl, [pc, #344]	; 8004278 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>
        return texts->getText(typedTextId);
 8004120:	6818      	ldr	r0, [r3, #0]
 8004122:	2103      	movs	r1, #3
 8004124:	f004 fce2 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8004128:	4a52      	ldr	r2, [pc, #328]	; (8004274 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 800412a:	4603      	mov	r3, r0
 800412c:	4641      	mov	r1, r8
 800412e:	4628      	mov	r0, r5
 8004130:	f016 f834 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004134:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004136:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800413a:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 800413c:	f00f fbb0 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004140:	980e      	ldr	r0, [sp, #56]	; 0x38
        : typedTextId(id)
 8004142:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004146:	4629      	mov	r1, r5
 8004148:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 800414c:	f00f fbc8 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004150:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004152:	ee19 0a90 	vmov	r0, s19
 8004156:	f00c fd9b 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800415a:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 800415e:	2244      	movs	r2, #68	; 0x44
 8004160:	2116      	movs	r1, #22
 8004162:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004164:	f7fe fcbe 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8004168:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 800416c:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004170:	4628      	mov	r0, r5
 8004172:	f7fe fd3f 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004176:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800417a:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 800417e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004182:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8004186:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 800418a:	2b00      	cmp	r3, #0
 800418c:	f43f aaed 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004190:	4936      	ldr	r1, [pc, #216]	; (800426c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004192:	880b      	ldrh	r3, [r1, #0]
 8004194:	2b02      	cmp	r3, #2
 8004196:	f67f aaf2 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800419a:	4b35      	ldr	r3, [pc, #212]	; (8004270 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 800419c:	2102      	movs	r1, #2
 800419e:	6818      	ldr	r0, [r3, #0]
 80041a0:	f004 fca4 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80041a4:	4a33      	ldr	r2, [pc, #204]	; (8004274 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 80041a6:	4603      	mov	r3, r0
 80041a8:	4641      	mov	r1, r8
 80041aa:	4648      	mov	r0, r9
 80041ac:	f015 fff6 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 80041b0:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 80041b2:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 80041b6:	f00f fb73 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80041ba:	f04f 020c 	mov.w	r2, #12
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80041be:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80041c0:	f8ad 20a8 	strh.w	r2, [sp, #168]	; 0xa8
 80041c4:	4629      	mov	r1, r5
 80041c6:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80041ca:	f00f fb89 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 80041ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80041d0:	ee19 0a90 	vmov	r0, s19
 80041d4:	f00c fd5c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 80041d8:	2220      	movs	r2, #32
 80041da:	2116      	movs	r1, #22
 80041dc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80041de:	f7fe fc81 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80041e2:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 80041e6:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 80041ea:	4628      	mov	r0, r5
 80041ec:	f7fe fd02 	bl	8002bf4 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80041f0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80041f4:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 80041f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80041fc:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004200:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004204:	2b00      	cmp	r3, #0
 8004206:	f43f aab0 	beq.w	800376a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800420a:	4918      	ldr	r1, [pc, #96]	; (800426c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 800420c:	880b      	ldrh	r3, [r1, #0]
 800420e:	2b01      	cmp	r3, #1
 8004210:	f67f aab5 	bls.w	800377e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8004214:	4b16      	ldr	r3, [pc, #88]	; (8004270 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004216:	2101      	movs	r1, #1
 8004218:	6818      	ldr	r0, [r3, #0]
 800421a:	f004 fc67 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 800421e:	4a15      	ldr	r2, [pc, #84]	; (8004274 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004220:	4603      	mov	r3, r0
 8004222:	4641      	mov	r1, r8
 8004224:	4648      	mov	r0, r9
 8004226:	f015 ffb9 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 800422a:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 800422c:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004230:	f00f fb36 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004234:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004236:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004238:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800423c:	4629      	mov	r1, r5
 800423e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004242:	f00f fb4d 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004246:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004248:	ee19 0a90 	vmov	r0, s19
 800424c:	f00c fd20 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004250:	ee1c 0a10 	vmov	r0, s24
 8004254:	4631      	mov	r1, r6
 8004256:	f8cd 8000 	str.w	r8, [sp]
 800425a:	23f0      	movs	r3, #240	; 0xf0
 800425c:	220f      	movs	r2, #15
 800425e:	f7fe fc4e 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8004262:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004264:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004268:	2205      	movs	r2, #5
 800426a:	e009      	b.n	8004280 <_ZN23Calibration_PadViewBaseC1Ev+0x1070>
 800426c:	20013898 	.word	0x20013898
 8004270:	200138a0 	.word	0x200138a0
 8004274:	0802d6ed 	.word	0x0802d6ed
 8004278:	0802d760 	.word	0x0802d760
 800427c:	00ac00f0 	.word	0x00ac00f0
 8004280:	ee1c 0a10 	vmov	r0, s24
 8004284:	4611      	mov	r1, r2
 8004286:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 800428a:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 800428e:	f7fe ffa7 	bl	80031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 8004292:	2205      	movs	r2, #5
 8004294:	ee1c 0a10 	vmov	r0, s24
 8004298:	21eb      	movs	r1, #235	; 0xeb
 800429a:	f7fe ffa5 	bl	80031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 800429e:	ee1c 0a10 	vmov	r0, s24
 80042a2:	2101      	movs	r1, #1
 80042a4:	f7fe ffa4 	bl	80031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80042a8:	ee1c 0a10 	vmov	r0, s24
 80042ac:	2101      	movs	r1, #1
 80042ae:	f00e fee7 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 80042b2:	ee1c 1a10 	vmov	r1, s24
 80042b6:	ee19 0a90 	vmov	r0, s19
 80042ba:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 80042be:	f00c fce7 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 80042c2:	4632      	mov	r2, r6
 80042c4:	9803      	ldr	r0, [sp, #12]
 80042c6:	2149      	movs	r1, #73	; 0x49
 80042c8:	f7fe fc0c 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80042cc:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 80042ce:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 80042d2:	4648      	mov	r0, r9
        linespace = space;
 80042d4:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 80042d8:	f00f f868 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042dc:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80042e0:	9b03      	ldr	r3, [sp, #12]
 80042e2:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80042e6:	333c      	adds	r3, #60	; 0x3c
 80042e8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 80042ec:	9803      	ldr	r0, [sp, #12]
 80042ee:	f8ad 60a8 	strh.w	r6, [sp, #168]	; 0xa8
 80042f2:	4629      	mov	r1, r5
 80042f4:	f00f faf4 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 80042f8:	9903      	ldr	r1, [sp, #12]
 80042fa:	ee19 0a90 	vmov	r0, s19
 80042fe:	f00c fcc7 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004302:	ee19 1a90 	vmov	r1, s19
 8004306:	ee18 0a10 	vmov	r0, s16
 800430a:	f00d f9a4 	bl	8011656 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 800430e:	ee18 0a10 	vmov	r0, s16
 8004312:	4631      	mov	r1, r6
 8004314:	f00d f990 	bl	8011638 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004318:	ee18 1a10 	vmov	r1, s16
 800431c:	ee1a 0a10 	vmov	r0, s20
 8004320:	f00c fcb6 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004324:	ee1c 0a90 	vmov	r0, s25
 8004328:	4631      	mov	r1, r6
 800432a:	f8cd 8000 	str.w	r8, [sp]
 800432e:	23f0      	movs	r3, #240	; 0xf0
 8004330:	224b      	movs	r2, #75	; 0x4b
 8004332:	f7fe fbe4 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8004336:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800433a:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 800433e:	2205      	movs	r2, #5
 8004340:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004342:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004346:	ee1c 0a90 	vmov	r0, s25
 800434a:	4611      	mov	r1, r2
 800434c:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004350:	f7fe ff46 	bl	80031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004354:	2205      	movs	r2, #5
 8004356:	ee1c 0a90 	vmov	r0, s25
 800435a:	21eb      	movs	r1, #235	; 0xeb
 800435c:	f7fe ff44 	bl	80031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004360:	ee1c 0a90 	vmov	r0, s25
 8004364:	2101      	movs	r1, #1
 8004366:	f7fe ff43 	bl	80031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800436a:	ee1c 0a90 	vmov	r0, s25
 800436e:	2101      	movs	r1, #1
 8004370:	f00e fe86 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004374:	ee1c 1a90 	vmov	r1, s25
 8004378:	ee1a 0a10 	vmov	r0, s20
 800437c:	f00c fc88 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 8004380:	9804      	ldr	r0, [sp, #16]
 8004382:	223c      	movs	r2, #60	; 0x3c
 8004384:	2146      	movs	r1, #70	; 0x46
 8004386:	f7fe fbad 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800438a:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 800438c:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 8004390:	4648      	mov	r0, r9
        linespace = space;
 8004392:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 8004396:	f00f f809 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800439a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800439e:	9b04      	ldr	r3, [sp, #16]
 80043a0:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80043a4:	333c      	adds	r3, #60	; 0x3c
 80043a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80043aa:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80043ac:	9804      	ldr	r0, [sp, #16]
 80043ae:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80043b2:	4629      	mov	r1, r5
 80043b4:	f00f fa94 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80043b8:	9904      	ldr	r1, [sp, #16]
 80043ba:	ee1a 0a10 	vmov	r0, s20
 80043be:	f00c fc67 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80043c2:	ee1d 0a10 	vmov	r0, s26
 80043c6:	4631      	mov	r1, r6
 80043c8:	f8cd 8000 	str.w	r8, [sp]
 80043cc:	23f0      	movs	r3, #240	; 0xf0
 80043ce:	2232      	movs	r2, #50	; 0x32
 80043d0:	f7fe fb95 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 80043d4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80043d6:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 80043da:	2205      	movs	r2, #5
 80043dc:	ee1d 0a10 	vmov	r0, s26
 80043e0:	4611      	mov	r1, r2
 80043e2:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 80043e6:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 80043ea:	f7fe fef9 	bl	80031e0 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 80043ee:	2205      	movs	r2, #5
 80043f0:	ee1d 0a10 	vmov	r0, s26
 80043f4:	21eb      	movs	r1, #235	; 0xeb
 80043f6:	f7fe fef7 	bl	80031e8 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 80043fa:	ee1d 0a10 	vmov	r0, s26
 80043fe:	2101      	movs	r1, #1
 8004400:	f7fe fef6 	bl	80031f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004404:	ee1d 0a10 	vmov	r0, s26
 8004408:	2101      	movs	r1, #1
 800440a:	f00e fe39 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800440e:	ee1d 1a10 	vmov	r1, s26
 8004412:	ee1a 0a10 	vmov	r0, s20
 8004416:	f00c fc3b 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 800441a:	9805      	ldr	r0, [sp, #20]
 800441c:	2223      	movs	r2, #35	; 0x23
 800441e:	2145      	movs	r1, #69	; 0x45
 8004420:	f7fe fb60 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8004424:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004426:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 800442a:	4648      	mov	r0, r9
        linespace = space;
 800442c:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004430:	f00e ffbc 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004434:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004438:	9b05      	ldr	r3, [sp, #20]
 800443a:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800443e:	333c      	adds	r3, #60	; 0x3c
 8004440:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004444:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004446:	9805      	ldr	r0, [sp, #20]
 8004448:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800444c:	4629      	mov	r1, r5
 800444e:	f00f fa47 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004452:	9905      	ldr	r1, [sp, #20]
 8004454:	ee1a 0a10 	vmov	r0, s20
 8004458:	f00c fc1a 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800445c:	9806      	ldr	r0, [sp, #24]
 800445e:	220c      	movs	r2, #12
 8004460:	2136      	movs	r1, #54	; 0x36
 8004462:	f7fe fb3f 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8004466:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004468:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 800446c:	4648      	mov	r0, r9
        linespace = space;
 800446e:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004472:	f00e ff9b 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004476:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800447a:	9b06      	ldr	r3, [sp, #24]
 800447c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004480:	333c      	adds	r3, #60	; 0x3c
 8004482:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004486:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 8004488:	9806      	ldr	r0, [sp, #24]
 800448a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800448e:	4629      	mov	r1, r5
 8004490:	f00f fa26 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004494:	ee1a 0a10 	vmov	r0, s20
 8004498:	9906      	ldr	r1, [sp, #24]
 800449a:	f00c fbf9 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800449e:	4620      	mov	r0, r4
 80044a0:	b02d      	add	sp, #180	; 0xb4
 80044a2:	ecbd 8b10 	vpop	{d8-d15}
 80044a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044aa:	bf00      	nop

080044ac <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80044ac:	4770      	bx	lr

080044ae <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80044ae:	4770      	bx	lr

080044b0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80044b0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80044b4:	6808      	ldr	r0, [r1, #0]
 80044b6:	6849      	ldr	r1, [r1, #4]
 80044b8:	c303      	stmia	r3!, {r0, r1}
    }
 80044ba:	4770      	bx	lr

080044bc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80044bc:	4770      	bx	lr

080044be <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80044be:	4770      	bx	lr

080044c0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80044c0:	6041      	str	r1, [r0, #4]
    }
 80044c2:	4770      	bx	lr

080044c4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80044c4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80044c6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80044c8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80044cc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80044d0:	8002      	strh	r2, [r0, #0]
 80044d2:	8042      	strh	r2, [r0, #2]
 80044d4:	8084      	strh	r4, [r0, #4]
 80044d6:	80c1      	strh	r1, [r0, #6]
        }
 80044d8:	bd10      	pop	{r4, pc}

080044da <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80044da:	4770      	bx	lr

080044dc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80044dc:	4770      	bx	lr
	...

080044e0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80044e0:	4b06      	ldr	r3, [pc, #24]	; (80044fc <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80044e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044e6:	2300      	movs	r3, #0
 80044e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80044ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 80044f8:	4770      	bx	lr
 80044fa:	bf00      	nop
 80044fc:	0800489d 	.word	0x0800489d

08004500 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004500:	2301      	movs	r3, #1
 8004502:	7203      	strb	r3, [r0, #8]
    }
 8004504:	4770      	bx	lr

08004506 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004506:	4770      	bx	lr

08004508 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004508:	4770      	bx	lr

0800450a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800450a:	4770      	bx	lr

0800450c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800450c:	4770      	bx	lr

0800450e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800450e:	4770      	bx	lr

08004510 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004510:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004512:	6840      	ldr	r0, [r0, #4]
 8004514:	6803      	ldr	r3, [r0, #0]
 8004516:	3110      	adds	r1, #16
 8004518:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800451a:	4718      	bx	r3

0800451c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800451c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800451e:	6840      	ldr	r0, [r0, #4]
 8004520:	6803      	ldr	r3, [r0, #0]
 8004522:	3110      	adds	r1, #16
 8004524:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004526:	4718      	bx	r3

08004528 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004528:	4770      	bx	lr

0800452a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800452a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800452c:	6840      	ldr	r0, [r0, #4]
 800452e:	6803      	ldr	r3, [r0, #0]
 8004530:	3110      	adds	r1, #16
 8004532:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004534:	4718      	bx	r3

08004536 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004536:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004538:	6840      	ldr	r0, [r0, #4]
 800453a:	6803      	ldr	r3, [r0, #0]
 800453c:	3110      	adds	r1, #16
 800453e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004540:	4718      	bx	r3

08004542 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004542:	4770      	bx	lr

08004544 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004544:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004546:	68c2      	ldr	r2, [r0, #12]
 8004548:	6841      	ldr	r1, [r0, #4]
 800454a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800454c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800454e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004552:	07d2      	lsls	r2, r2, #31
 8004554:	bf48      	it	mi
 8004556:	590a      	ldrmi	r2, [r1, r4]
 8004558:	689b      	ldr	r3, [r3, #8]
    }
 800455a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800455e:	bf48      	it	mi
 8004560:	58d3      	ldrmi	r3, [r2, r3]
 8004562:	4718      	bx	r3

08004564 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004564:	6843      	ldr	r3, [r0, #4]
 8004566:	b12b      	cbz	r3, 8004574 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004568:	6883      	ldr	r3, [r0, #8]
 800456a:	b92b      	cbnz	r3, 8004578 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800456c:	68c0      	ldr	r0, [r0, #12]
 800456e:	f000 0001 	and.w	r0, r0, #1
 8004572:	4770      	bx	lr
 8004574:	4618      	mov	r0, r3
 8004576:	4770      	bx	lr
 8004578:	2001      	movs	r0, #1
    }
 800457a:	4770      	bx	lr

0800457c <_ZN8touchgfx12NoTransitionD0Ev>:
 800457c:	b510      	push	{r4, lr}
 800457e:	210c      	movs	r1, #12
 8004580:	4604      	mov	r4, r0
 8004582:	f026 fd12 	bl	802afaa <_ZdlPvj>
 8004586:	4620      	mov	r0, r4
 8004588:	bd10      	pop	{r4, pc}

0800458a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800458a:	b510      	push	{r4, lr}
 800458c:	2110      	movs	r1, #16
 800458e:	4604      	mov	r4, r0
 8004590:	f026 fd0b 	bl	802afaa <_ZdlPvj>
 8004594:	4620      	mov	r0, r4
 8004596:	bd10      	pop	{r4, pc}

08004598 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8004598:	b510      	push	{r4, lr}
 800459a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800459e:	4604      	mov	r4, r0
 80045a0:	f026 fd03 	bl	802afaa <_ZdlPvj>
 80045a4:	4620      	mov	r0, r4
 80045a6:	bd10      	pop	{r4, pc}

080045a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80045a8:	b510      	push	{r4, lr}
 80045aa:	2138      	movs	r1, #56	; 0x38
 80045ac:	4604      	mov	r4, r0
 80045ae:	f026 fcfc 	bl	802afaa <_ZdlPvj>
 80045b2:	4620      	mov	r0, r4
 80045b4:	bd10      	pop	{r4, pc}

080045b6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80045b6:	b510      	push	{r4, lr}
 80045b8:	2128      	movs	r1, #40	; 0x28
 80045ba:	4604      	mov	r4, r0
 80045bc:	f026 fcf5 	bl	802afaa <_ZdlPvj>
 80045c0:	4620      	mov	r0, r4
 80045c2:	bd10      	pop	{r4, pc}

080045c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80045c4:	b510      	push	{r4, lr}
 80045c6:	2138      	movs	r1, #56	; 0x38
 80045c8:	4604      	mov	r4, r0
 80045ca:	f026 fcee 	bl	802afaa <_ZdlPvj>
 80045ce:	4620      	mov	r0, r4
 80045d0:	bd10      	pop	{r4, pc}

080045d2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80045d2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80045d4:	f012 fc34 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 80045d8:	6803      	ldr	r3, [r0, #0]
    }
 80045da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80045de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045e0:	4718      	bx	r3
	...

080045e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80045e4:	b513      	push	{r0, r1, r4, lr}
 80045e6:	4604      	mov	r4, r0
        animationCounter++;
 80045e8:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80045ea:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80045ec:	3001      	adds	r0, #1
 80045ee:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80045f0:	4298      	cmp	r0, r3
        animationCounter++;
 80045f2:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80045f4:	d905      	bls.n	8004602 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 80045f6:	2301      	movs	r3, #1
 80045f8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80045fa:	2300      	movs	r3, #0
 80045fc:	72a3      	strb	r3, [r4, #10]
    }
 80045fe:	b002      	add	sp, #8
 8004600:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004602:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004606:	2100      	movs	r1, #0
 8004608:	f014 fa8a 	bl	8018b20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800460c:	f010 0201 	ands.w	r2, r0, #1
 8004610:	b283      	uxth	r3, r0
 8004612:	d12a      	bne.n	800466a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004614:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004616:	4a19      	ldr	r2, [pc, #100]	; (800467c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004618:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800461c:	89e3      	ldrh	r3, [r4, #14]
 800461e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004620:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004624:	82a0      	strh	r0, [r4, #20]
 8004626:	2000      	movs	r0, #0
 8004628:	1ad2      	subs	r2, r2, r3
 800462a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800462e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004630:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004632:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004634:	4a12      	ldr	r2, [pc, #72]	; (8004680 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004636:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800463a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800463c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004640:	691b      	ldr	r3, [r3, #16]
 8004642:	f8ad 1000 	strh.w	r1, [sp]
 8004646:	f8ad 2006 	strh.w	r2, [sp, #6]
 800464a:	4669      	mov	r1, sp
 800464c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800464e:	7aa3      	ldrb	r3, [r4, #10]
 8004650:	2b01      	cmp	r3, #1
 8004652:	d1d4      	bne.n	80045fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004654:	4b0b      	ldr	r3, [pc, #44]	; (8004684 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004656:	781b      	ldrb	r3, [r3, #0]
 8004658:	2b00      	cmp	r3, #0
 800465a:	d0d0      	beq.n	80045fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800465c:	f012 fbf0 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004660:	b002      	add	sp, #8
 8004662:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004666:	f012 bbf1 	b.w	8016e4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800466a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800466e:	2800      	cmp	r0, #0
 8004670:	bfd8      	it	le
 8004672:	460a      	movle	r2, r1
 8004674:	4413      	add	r3, r2
 8004676:	81e3      	strh	r3, [r4, #14]
 8004678:	e7cd      	b.n	8004616 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800467a:	bf00      	nop
 800467c:	20013830 	.word	0x20013830
 8004680:	20013832 	.word	0x20013832
 8004684:	2001383a 	.word	0x2001383a

08004688 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004688:	b510      	push	{r4, lr}
 800468a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800468c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004690:	b158      	cbz	r0, 80046aa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004692:	6803      	ldr	r3, [r0, #0]
 8004694:	68db      	ldr	r3, [r3, #12]
 8004696:	4798      	blx	r3
 8004698:	b138      	cbz	r0, 80046aa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800469a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800469e:	6803      	ldr	r3, [r0, #0]
 80046a0:	689b      	ldr	r3, [r3, #8]
 80046a2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80046a4:	2300      	movs	r3, #0
 80046a6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80046aa:	bd10      	pop	{r4, pc}

080046ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80046ac:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046b0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80046b4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80046b6:	68a8      	ldr	r0, [r5, #8]
 80046b8:	6803      	ldr	r3, [r0, #0]
 80046ba:	6a1b      	ldr	r3, [r3, #32]
 80046bc:	4798      	blx	r3
 80046be:	2897      	cmp	r0, #151	; 0x97
 80046c0:	d805      	bhi.n	80046ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80046c2:	4b46      	ldr	r3, [pc, #280]	; (80047dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80046c4:	4a46      	ldr	r2, [pc, #280]	; (80047e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80046c6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80046c8:	4846      	ldr	r0, [pc, #280]	; (80047e4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80046ca:	f027 fa81 	bl	802bbd0 <__assert_func>
 80046ce:	6868      	ldr	r0, [r5, #4]
 80046d0:	6803      	ldr	r3, [r0, #0]
 80046d2:	6a1b      	ldr	r3, [r3, #32]
 80046d4:	4798      	blx	r3
 80046d6:	280f      	cmp	r0, #15
 80046d8:	d803      	bhi.n	80046e2 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80046da:	4b43      	ldr	r3, [pc, #268]	; (80047e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80046dc:	4a40      	ldr	r2, [pc, #256]	; (80047e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80046de:	21a4      	movs	r1, #164	; 0xa4
 80046e0:	e7f2      	b.n	80046c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80046e2:	68e8      	ldr	r0, [r5, #12]
 80046e4:	6803      	ldr	r3, [r0, #0]
 80046e6:	6a1b      	ldr	r3, [r3, #32]
 80046e8:	4798      	blx	r3
 80046ea:	280b      	cmp	r0, #11
 80046ec:	d803      	bhi.n	80046f6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 80046ee:	4b3f      	ldr	r3, [pc, #252]	; (80047ec <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 80046f0:	4a3b      	ldr	r2, [pc, #236]	; (80047e0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80046f2:	21a5      	movs	r1, #165	; 0xa5
 80046f4:	e7e8      	b.n	80046c8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80046f6:	f012 fba3 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80046fa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80047f4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80046fe:	3004      	adds	r0, #4
 8004700:	f012 fc04 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004704:	f8d9 0000 	ldr.w	r0, [r9]
 8004708:	b110      	cbz	r0, 8004710 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800470a:	6803      	ldr	r3, [r0, #0]
 800470c:	68db      	ldr	r3, [r3, #12]
 800470e:	4798      	blx	r3
    if (*currentTrans)
 8004710:	f8d9 0000 	ldr.w	r0, [r9]
 8004714:	b110      	cbz	r0, 800471c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004716:	6803      	ldr	r3, [r0, #0]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	4798      	blx	r3
    if (*currentScreen)
 800471c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80047f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004720:	f8d8 0000 	ldr.w	r0, [r8]
 8004724:	b110      	cbz	r0, 800472c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004726:	6803      	ldr	r3, [r0, #0]
 8004728:	695b      	ldr	r3, [r3, #20]
 800472a:	4798      	blx	r3
    if (*currentPresenter)
 800472c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004730:	b110      	cbz	r0, 8004738 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004732:	6803      	ldr	r3, [r0, #0]
 8004734:	685b      	ldr	r3, [r3, #4]
 8004736:	4798      	blx	r3
    if (*currentScreen)
 8004738:	f8d8 0000 	ldr.w	r0, [r8]
 800473c:	b110      	cbz	r0, 8004744 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800473e:	6803      	ldr	r3, [r0, #0]
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	4798      	blx	r3
    if (*currentPresenter)
 8004744:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004748:	b110      	cbz	r0, 8004750 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800474a:	6803      	ldr	r3, [r0, #0]
 800474c:	689b      	ldr	r3, [r3, #8]
 800474e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004750:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004752:	6803      	ldr	r3, [r0, #0]
 8004754:	2100      	movs	r1, #0
 8004756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004758:	4798      	blx	r3
        : screenContainer(0), done(false)
 800475a:	f04f 0b00 	mov.w	fp, #0
 800475e:	4b24      	ldr	r3, [pc, #144]	; (80047f0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004760:	6003      	str	r3, [r0, #0]
 8004762:	4604      	mov	r4, r0
 8004764:	f8c0 b004 	str.w	fp, [r0, #4]
 8004768:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800476c:	68a8      	ldr	r0, [r5, #8]
 800476e:	6803      	ldr	r3, [r0, #0]
 8004770:	4659      	mov	r1, fp
 8004772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004774:	4798      	blx	r3
 8004776:	4606      	mov	r6, r0
 8004778:	f004 fea4 	bl	80094c4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800477c:	6868      	ldr	r0, [r5, #4]
 800477e:	6803      	ldr	r3, [r0, #0]
 8004780:	4659      	mov	r1, fp
 8004782:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004784:	4798      	blx	r3
 8004786:	4631      	mov	r1, r6
 8004788:	4605      	mov	r5, r0
 800478a:	f004 fe77 	bl	800947c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800478e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004792:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004796:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800479a:	b1e5      	cbz	r5, 80047d6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 800479c:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800479e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047a2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80047a4:	f8c5 a008 	str.w	sl, [r5, #8]
 80047a8:	4630      	mov	r0, r6
 80047aa:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80047ac:	63f5      	str	r5, [r6, #60]	; 0x3c
 80047ae:	4798      	blx	r3
    newPresenter->activate();
 80047b0:	682b      	ldr	r3, [r5, #0]
 80047b2:	4628      	mov	r0, r5
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80047b8:	4621      	mov	r1, r4
 80047ba:	4630      	mov	r0, r6
 80047bc:	f014 f96c 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80047c0:	6823      	ldr	r3, [r4, #0]
 80047c2:	4620      	mov	r0, r4
 80047c4:	691b      	ldr	r3, [r3, #16]
 80047c6:	4798      	blx	r3
    newTransition->invalidate();
 80047c8:	6823      	ldr	r3, [r4, #0]
 80047ca:	695b      	ldr	r3, [r3, #20]
 80047cc:	4620      	mov	r0, r4
}
 80047ce:	b001      	add	sp, #4
 80047d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047d4:	4718      	bx	r3
    model->bind(newPresenter);
 80047d6:	462b      	mov	r3, r5
 80047d8:	e7e1      	b.n	800479e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80047da:	bf00      	nop
 80047dc:	0802d8dc 	.word	0x0802d8dc
 80047e0:	0802d96a 	.word	0x0802d96a
 80047e4:	0802da78 	.word	0x0802da78
 80047e8:	0802dabf 	.word	0x0802dabf
 80047ec:	0802db62 	.word	0x0802db62
 80047f0:	0802ec1c 	.word	0x0802ec1c
 80047f4:	20013884 	.word	0x20013884
 80047f8:	20013880 	.word	0x20013880

080047fc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80047fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80047fe:	4604      	mov	r4, r0
        animationCounter++;
 8004800:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004802:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004804:	3001      	adds	r0, #1
 8004806:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004808:	4298      	cmp	r0, r3
        animationCounter++;
 800480a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800480c:	d905      	bls.n	800481a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800480e:	2301      	movs	r3, #1
 8004810:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004812:	2300      	movs	r3, #0
 8004814:	72a3      	strb	r3, [r4, #10]
    }
 8004816:	b003      	add	sp, #12
 8004818:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800481a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800481e:	2100      	movs	r1, #0
 8004820:	f014 f97e 	bl	8018b20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004824:	f010 0201 	ands.w	r2, r0, #1
 8004828:	b283      	uxth	r3, r0
 800482a:	d128      	bne.n	800487e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800482c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800482e:	4b18      	ldr	r3, [pc, #96]	; (8004890 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004830:	4818      	ldr	r0, [pc, #96]	; (8004894 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004832:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004834:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004836:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004838:	f9b0 0000 	ldrsh.w	r0, [r0]
 800483c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004840:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004842:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004844:	442b      	add	r3, r5
 8004846:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004848:	b212      	sxth	r2, r2
 800484a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800484e:	6803      	ldr	r3, [r0, #0]
 8004850:	8322      	strh	r2, [r4, #24]
 8004852:	f8ad 2000 	strh.w	r2, [sp]
 8004856:	2200      	movs	r2, #0
 8004858:	691b      	ldr	r3, [r3, #16]
 800485a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800485e:	4669      	mov	r1, sp
 8004860:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004862:	7aa3      	ldrb	r3, [r4, #10]
 8004864:	2b01      	cmp	r3, #1
 8004866:	d1d6      	bne.n	8004816 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004868:	4b0b      	ldr	r3, [pc, #44]	; (8004898 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800486a:	781b      	ldrb	r3, [r3, #0]
 800486c:	2b00      	cmp	r3, #0
 800486e:	d0d2      	beq.n	8004816 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004870:	f012 fae6 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004874:	b003      	add	sp, #12
 8004876:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800487a:	f012 bae7 	b.w	8016e4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800487e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004882:	2800      	cmp	r0, #0
 8004884:	bfd8      	it	le
 8004886:	460a      	movle	r2, r1
 8004888:	4413      	add	r3, r2
 800488a:	81e3      	strh	r3, [r4, #14]
 800488c:	e7cf      	b.n	800482e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800488e:	bf00      	nop
 8004890:	20013830 	.word	0x20013830
 8004894:	20013832 	.word	0x20013832
 8004898:	2001383a 	.word	0x2001383a

0800489c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 800489c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80048a0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80048a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80048a6:	68a8      	ldr	r0, [r5, #8]
 80048a8:	6803      	ldr	r3, [r0, #0]
 80048aa:	6a1b      	ldr	r3, [r3, #32]
 80048ac:	4798      	blx	r3
 80048ae:	f241 137b 	movw	r3, #4475	; 0x117b
 80048b2:	4298      	cmp	r0, r3
 80048b4:	d805      	bhi.n	80048c2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80048b6:	4b46      	ldr	r3, [pc, #280]	; (80049d0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80048b8:	4a46      	ldr	r2, [pc, #280]	; (80049d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80048ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048bc:	4846      	ldr	r0, [pc, #280]	; (80049d8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80048be:	f027 f987 	bl	802bbd0 <__assert_func>
 80048c2:	6868      	ldr	r0, [r5, #4]
 80048c4:	6803      	ldr	r3, [r0, #0]
 80048c6:	6a1b      	ldr	r3, [r3, #32]
 80048c8:	4798      	blx	r3
 80048ca:	280f      	cmp	r0, #15
 80048cc:	d803      	bhi.n	80048d6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80048ce:	4b43      	ldr	r3, [pc, #268]	; (80049dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80048d0:	4a40      	ldr	r2, [pc, #256]	; (80049d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80048d2:	21a4      	movs	r1, #164	; 0xa4
 80048d4:	e7f2      	b.n	80048bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048d6:	68e8      	ldr	r0, [r5, #12]
 80048d8:	6803      	ldr	r3, [r0, #0]
 80048da:	6a1b      	ldr	r3, [r3, #32]
 80048dc:	4798      	blx	r3
 80048de:	280b      	cmp	r0, #11
 80048e0:	d803      	bhi.n	80048ea <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 80048e2:	4b3f      	ldr	r3, [pc, #252]	; (80049e0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 80048e4:	4a3b      	ldr	r2, [pc, #236]	; (80049d4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80048e6:	21a5      	movs	r1, #165	; 0xa5
 80048e8:	e7e8      	b.n	80048bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048ea:	f012 faa9 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048ee:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80049e8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 80048f2:	3004      	adds	r0, #4
 80048f4:	f012 fb0a 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048f8:	f8d9 0000 	ldr.w	r0, [r9]
 80048fc:	b110      	cbz	r0, 8004904 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	68db      	ldr	r3, [r3, #12]
 8004902:	4798      	blx	r3
    if (*currentTrans)
 8004904:	f8d9 0000 	ldr.w	r0, [r9]
 8004908:	b110      	cbz	r0, 8004910 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800490a:	6803      	ldr	r3, [r0, #0]
 800490c:	681b      	ldr	r3, [r3, #0]
 800490e:	4798      	blx	r3
    if (*currentScreen)
 8004910:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80049ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004914:	f8d8 0000 	ldr.w	r0, [r8]
 8004918:	b110      	cbz	r0, 8004920 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800491a:	6803      	ldr	r3, [r0, #0]
 800491c:	695b      	ldr	r3, [r3, #20]
 800491e:	4798      	blx	r3
    if (*currentPresenter)
 8004920:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004924:	b110      	cbz	r0, 800492c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004926:	6803      	ldr	r3, [r0, #0]
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	4798      	blx	r3
    if (*currentScreen)
 800492c:	f8d8 0000 	ldr.w	r0, [r8]
 8004930:	b110      	cbz	r0, 8004938 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004932:	6803      	ldr	r3, [r0, #0]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	4798      	blx	r3
    if (*currentPresenter)
 8004938:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800493c:	b110      	cbz	r0, 8004944 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800493e:	6803      	ldr	r3, [r0, #0]
 8004940:	689b      	ldr	r3, [r3, #8]
 8004942:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004944:	68e8      	ldr	r0, [r5, #12]
 8004946:	6803      	ldr	r3, [r0, #0]
 8004948:	2100      	movs	r1, #0
 800494a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800494c:	4798      	blx	r3
 800494e:	f04f 0b00 	mov.w	fp, #0
 8004952:	4b24      	ldr	r3, [pc, #144]	; (80049e4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004954:	6003      	str	r3, [r0, #0]
 8004956:	4604      	mov	r4, r0
 8004958:	f8c0 b004 	str.w	fp, [r0, #4]
 800495c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004960:	68a8      	ldr	r0, [r5, #8]
 8004962:	6803      	ldr	r3, [r0, #0]
 8004964:	4659      	mov	r1, fp
 8004966:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004968:	4798      	blx	r3
 800496a:	4606      	mov	r6, r0
 800496c:	f004 fa4e 	bl	8008e0c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004970:	6868      	ldr	r0, [r5, #4]
 8004972:	6803      	ldr	r3, [r0, #0]
 8004974:	4659      	mov	r1, fp
 8004976:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004978:	4798      	blx	r3
 800497a:	4631      	mov	r1, r6
 800497c:	4605      	mov	r5, r0
 800497e:	f004 fa1f 	bl	8008dc0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004982:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004986:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800498a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800498e:	b1e5      	cbz	r5, 80049ca <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8004990:	1d2b      	adds	r3, r5, #4
 8004992:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004996:	6833      	ldr	r3, [r6, #0]
 8004998:	f8c5 a008 	str.w	sl, [r5, #8]
 800499c:	4630      	mov	r0, r6
 800499e:	68db      	ldr	r3, [r3, #12]
 80049a0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80049a2:	4798      	blx	r3
    newPresenter->activate();
 80049a4:	682b      	ldr	r3, [r5, #0]
 80049a6:	4628      	mov	r0, r5
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049ac:	4621      	mov	r1, r4
 80049ae:	4630      	mov	r0, r6
 80049b0:	f014 f872 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049b4:	6823      	ldr	r3, [r4, #0]
 80049b6:	4620      	mov	r0, r4
 80049b8:	691b      	ldr	r3, [r3, #16]
 80049ba:	4798      	blx	r3
    newTransition->invalidate();
 80049bc:	6823      	ldr	r3, [r4, #0]
 80049be:	695b      	ldr	r3, [r3, #20]
 80049c0:	4620      	mov	r0, r4
}
 80049c2:	b001      	add	sp, #4
 80049c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049c8:	4718      	bx	r3
    model->bind(newPresenter);
 80049ca:	462b      	mov	r3, r5
 80049cc:	e7e1      	b.n	8004992 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80049ce:	bf00      	nop
 80049d0:	0802d8dc 	.word	0x0802d8dc
 80049d4:	0802dc05 	.word	0x0802dc05
 80049d8:	0802da78 	.word	0x0802da78
 80049dc:	0802dabf 	.word	0x0802dabf
 80049e0:	0802db62 	.word	0x0802db62
 80049e4:	0802ec1c 	.word	0x0802ec1c
 80049e8:	20013884 	.word	0x20013884
 80049ec:	20013880 	.word	0x20013880

080049f0 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80049f0:	4b04      	ldr	r3, [pc, #16]	; (8004a04 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80049f8:	b10a      	cbz	r2, 80049fe <_ZN8touchgfx3HAL3lcdEv+0xe>
 80049fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80049fc:	b900      	cbnz	r0, 8004a00 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80049fe:	6898      	ldr	r0, [r3, #8]
    }
 8004a00:	4770      	bx	lr
 8004a02:	bf00      	nop
 8004a04:	2001383c 	.word	0x2001383c

08004a08 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a0a:	4604      	mov	r4, r0
 8004a0c:	4617      	mov	r7, r2
 8004a0e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004a10:	f012 fb4a 	bl	80170a8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004a14:	4b10      	ldr	r3, [pc, #64]	; (8004a58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004a16:	601c      	str	r4, [r3, #0]
      model(m)
 8004a18:	4b10      	ldr	r3, [pc, #64]	; (8004a5c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8004a1a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004a1c:	4b10      	ldr	r3, [pc, #64]	; (8004a60 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8004a1e:	2500      	movs	r5, #0
 8004a20:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004a24:	4b0f      	ldr	r3, [pc, #60]	; (8004a64 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004a26:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8004a2a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004a2c:	6803      	ldr	r3, [r0, #0]
 8004a2e:	2101      	movs	r1, #1
 8004a30:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004a32:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004a36:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004a3a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004a3c:	4628      	mov	r0, r5
 8004a3e:	f004 f819 	bl	8008a74 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004a42:	f7ff ffd5 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8004a46:	f01b ff32 	bl	80208ae <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8004a4a:	f7ff ffd1 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8004a4e:	f01b ffa9 	bl	80209a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004a52:	4620      	mov	r0, r4
 8004a54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004a56:	bf00      	nop
 8004a58:	20013890 	.word	0x20013890
 8004a5c:	0802ebc8 	.word	0x0802ebc8
 8004a60:	0802ebb0 	.word	0x0802ebb0
 8004a64:	2001383c 	.word	0x2001383c

08004a68 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004a68:	4b06      	ldr	r3, [pc, #24]	; (8004a84 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8004a6a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a6e:	2300      	movs	r3, #0
 8004a70:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a74:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a78:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a7c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a80:	4770      	bx	lr
 8004a82:	bf00      	nop
 8004a84:	0800489d 	.word	0x0800489d

08004a88 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8004a88:	4b06      	ldr	r3, [pc, #24]	; (8004aa4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8004a8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a8e:	2300      	movs	r3, #0
 8004a90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004aa0:	4770      	bx	lr
 8004aa2:	bf00      	nop
 8004aa4:	08004f0d 	.word	0x08004f0d

08004aa8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8004aa8:	4b06      	ldr	r3, [pc, #24]	; (8004ac4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8004aaa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004aae:	2300      	movs	r3, #0
 8004ab0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ab4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ab8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004abc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ac0:	4770      	bx	lr
 8004ac2:	bf00      	nop
 8004ac4:	08005ab1 	.word	0x08005ab1

08004ac8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8004ac8:	4b06      	ldr	r3, [pc, #24]	; (8004ae4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8004aca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ace:	2300      	movs	r3, #0
 8004ad0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ad4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ad8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004adc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ae0:	4770      	bx	lr
 8004ae2:	bf00      	nop
 8004ae4:	08004dcd 	.word	0x08004dcd

08004ae8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8004ae8:	4b06      	ldr	r3, [pc, #24]	; (8004b04 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8004aea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004aee:	2300      	movs	r3, #0
 8004af0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004af4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004af8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004afc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b00:	4770      	bx	lr
 8004b02:	bf00      	nop
 8004b04:	08005971 	.word	0x08005971

08004b08 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004b08:	4b06      	ldr	r3, [pc, #24]	; (8004b24 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004b0a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b0e:	2300      	movs	r3, #0
 8004b10:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b14:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b18:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b1c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b20:	4770      	bx	lr
 8004b22:	bf00      	nop
 8004b24:	08005831 	.word	0x08005831

08004b28 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004b28:	4b06      	ldr	r3, [pc, #24]	; (8004b44 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004b2a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b2e:	2300      	movs	r3, #0
 8004b30:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b38:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b40:	4770      	bx	lr
 8004b42:	bf00      	nop
 8004b44:	080056f1 	.word	0x080056f1

08004b48 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004b48:	4b06      	ldr	r3, [pc, #24]	; (8004b64 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004b4a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b4e:	2300      	movs	r3, #0
 8004b50:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b54:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b58:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b5c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b60:	4770      	bx	lr
 8004b62:	bf00      	nop
 8004b64:	080055b1 	.word	0x080055b1

08004b68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004b68:	4b06      	ldr	r3, [pc, #24]	; (8004b84 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004b6a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b6e:	2300      	movs	r3, #0
 8004b70:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b74:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b78:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b7c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b80:	4770      	bx	lr
 8004b82:	bf00      	nop
 8004b84:	08004c8d 	.word	0x08004c8d

08004b88 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004b88:	4b06      	ldr	r3, [pc, #24]	; (8004ba4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004b8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b8e:	2300      	movs	r3, #0
 8004b90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ba0:	4770      	bx	lr
 8004ba2:	bf00      	nop
 8004ba4:	08005471 	.word	0x08005471

08004ba8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004ba8:	4b06      	ldr	r3, [pc, #24]	; (8004bc4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004baa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004bae:	2300      	movs	r3, #0
 8004bb0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004bb4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004bb8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004bbc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004bc0:	4770      	bx	lr
 8004bc2:	bf00      	nop
 8004bc4:	08005331 	.word	0x08005331

08004bc8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004bc8:	4b06      	ldr	r3, [pc, #24]	; (8004be4 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004bca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004bce:	2300      	movs	r3, #0
 8004bd0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004bd4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004bd8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004bdc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004be0:	4770      	bx	lr
 8004be2:	bf00      	nop
 8004be4:	080051f1 	.word	0x080051f1

08004be8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004be8:	4b06      	ldr	r3, [pc, #24]	; (8004c04 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004bea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004bee:	2300      	movs	r3, #0
 8004bf0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004bf4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004bf8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004bfc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004c00:	4770      	bx	lr
 8004c02:	bf00      	nop
 8004c04:	080050b1 	.word	0x080050b1

08004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004c08:	4b06      	ldr	r3, [pc, #24]	; (8004c24 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004c0a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004c0e:	2300      	movs	r3, #0
 8004c10:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004c14:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004c18:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004c1c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004c20:	4770      	bx	lr
 8004c22:	bf00      	nop
 8004c24:	080046ad 	.word	0x080046ad

08004c28 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c2c:	4718      	bx	r3
	...

08004c30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004c30:	4b12      	ldr	r3, [pc, #72]	; (8004c7c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004c32:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004c34:	6003      	str	r3, [r0, #0]
 8004c36:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004c3a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004c3c:	4b10      	ldr	r3, [pc, #64]	; (8004c80 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004c3e:	7241      	strb	r1, [r0, #9]
 8004c40:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004c42:	4910      	ldr	r1, [pc, #64]	; (8004c84 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004c44:	4b10      	ldr	r3, [pc, #64]	; (8004c88 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004c46:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004c4a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004c4e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004c50:	2200      	movs	r2, #0
 8004c52:	6042      	str	r2, [r0, #4]
 8004c54:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004c56:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004c58:	81c2      	strh	r2, [r0, #14]
          solid()
 8004c5a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004c5e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004c62:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004c66:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004c6a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004c6c:	9100      	str	r1, [sp, #0]
 8004c6e:	3010      	adds	r0, #16
 8004c70:	4611      	mov	r1, r2
 8004c72:	f7fd ff44 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004c76:	4620      	mov	r0, r4
 8004c78:	b002      	add	sp, #8
 8004c7a:	bd10      	pop	{r4, pc}
 8004c7c:	0802ec64 	.word	0x0802ec64
 8004c80:	0802eb48 	.word	0x0802eb48
 8004c84:	20013832 	.word	0x20013832
 8004c88:	20013830 	.word	0x20013830

08004c8c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004c8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c90:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c94:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c96:	68a0      	ldr	r0, [r4, #8]
 8004c98:	6803      	ldr	r3, [r0, #0]
 8004c9a:	6a1b      	ldr	r3, [r3, #32]
 8004c9c:	4798      	blx	r3
 8004c9e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ca2:	d205      	bcs.n	8004cb0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004ca4:	4b42      	ldr	r3, [pc, #264]	; (8004db0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004ca6:	4a43      	ldr	r2, [pc, #268]	; (8004db4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004ca8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004caa:	4843      	ldr	r0, [pc, #268]	; (8004db8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004cac:	f026 ff90 	bl	802bbd0 <__assert_func>
 8004cb0:	6860      	ldr	r0, [r4, #4]
 8004cb2:	6803      	ldr	r3, [r0, #0]
 8004cb4:	6a1b      	ldr	r3, [r3, #32]
 8004cb6:	4798      	blx	r3
 8004cb8:	280f      	cmp	r0, #15
 8004cba:	d803      	bhi.n	8004cc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004cbc:	4b3f      	ldr	r3, [pc, #252]	; (8004dbc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004cbe:	4a3d      	ldr	r2, [pc, #244]	; (8004db4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004cc0:	21a4      	movs	r1, #164	; 0xa4
 8004cc2:	e7f2      	b.n	8004caa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004cc4:	68e0      	ldr	r0, [r4, #12]
 8004cc6:	6803      	ldr	r3, [r0, #0]
 8004cc8:	6a1b      	ldr	r3, [r3, #32]
 8004cca:	4798      	blx	r3
 8004ccc:	2837      	cmp	r0, #55	; 0x37
 8004cce:	d803      	bhi.n	8004cd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004cd0:	4b3b      	ldr	r3, [pc, #236]	; (8004dc0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004cd2:	4a38      	ldr	r2, [pc, #224]	; (8004db4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004cd4:	21a5      	movs	r1, #165	; 0xa5
 8004cd6:	e7e8      	b.n	8004caa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004cd8:	f012 f8b2 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004cdc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004dc4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004ce0:	3004      	adds	r0, #4
 8004ce2:	f012 f913 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ce6:	f8d9 0000 	ldr.w	r0, [r9]
 8004cea:	b110      	cbz	r0, 8004cf2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004cec:	6803      	ldr	r3, [r0, #0]
 8004cee:	68db      	ldr	r3, [r3, #12]
 8004cf0:	4798      	blx	r3
    if (*currentTrans)
 8004cf2:	f8d9 0000 	ldr.w	r0, [r9]
 8004cf6:	b110      	cbz	r0, 8004cfe <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004cf8:	6803      	ldr	r3, [r0, #0]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	4798      	blx	r3
    if (*currentScreen)
 8004cfe:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004dc8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004d02:	f8d8 0000 	ldr.w	r0, [r8]
 8004d06:	b110      	cbz	r0, 8004d0e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d08:	6803      	ldr	r3, [r0, #0]
 8004d0a:	695b      	ldr	r3, [r3, #20]
 8004d0c:	4798      	blx	r3
    if (*currentPresenter)
 8004d0e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d12:	b110      	cbz	r0, 8004d1a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d14:	6803      	ldr	r3, [r0, #0]
 8004d16:	685b      	ldr	r3, [r3, #4]
 8004d18:	4798      	blx	r3
    if (*currentScreen)
 8004d1a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d1e:	b110      	cbz	r0, 8004d26 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d20:	6803      	ldr	r3, [r0, #0]
 8004d22:	681b      	ldr	r3, [r3, #0]
 8004d24:	4798      	blx	r3
    if (*currentPresenter)
 8004d26:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d2a:	b110      	cbz	r0, 8004d32 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d2c:	6803      	ldr	r3, [r0, #0]
 8004d2e:	689b      	ldr	r3, [r3, #8]
 8004d30:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d32:	68e0      	ldr	r0, [r4, #12]
 8004d34:	2100      	movs	r1, #0
 8004d36:	f7ff ff77 	bl	8004c28 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004d3a:	2114      	movs	r1, #20
 8004d3c:	4605      	mov	r5, r0
 8004d3e:	f7ff ff77 	bl	8004c30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004d42:	68a0      	ldr	r0, [r4, #8]
 8004d44:	6803      	ldr	r3, [r0, #0]
 8004d46:	2100      	movs	r1, #0
 8004d48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d4a:	4798      	blx	r3
 8004d4c:	4606      	mov	r6, r0
 8004d4e:	f004 f91d 	bl	8008f8c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d52:	6860      	ldr	r0, [r4, #4]
 8004d54:	6803      	ldr	r3, [r0, #0]
 8004d56:	2100      	movs	r1, #0
 8004d58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d5a:	4798      	blx	r3
 8004d5c:	4631      	mov	r1, r6
 8004d5e:	4604      	mov	r4, r0
 8004d60:	f004 f8ee 	bl	8008f40 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004d64:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d68:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d6c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d70:	b1dc      	cbz	r4, 8004daa <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004d72:	1d23      	adds	r3, r4, #4
 8004d74:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d78:	6833      	ldr	r3, [r6, #0]
 8004d7a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d7e:	4630      	mov	r0, r6
 8004d80:	68db      	ldr	r3, [r3, #12]
 8004d82:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d84:	4798      	blx	r3
    newPresenter->activate();
 8004d86:	6823      	ldr	r3, [r4, #0]
 8004d88:	4620      	mov	r0, r4
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d8e:	4629      	mov	r1, r5
 8004d90:	4630      	mov	r0, r6
 8004d92:	f013 fe81 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d96:	682b      	ldr	r3, [r5, #0]
 8004d98:	4628      	mov	r0, r5
 8004d9a:	691b      	ldr	r3, [r3, #16]
 8004d9c:	4798      	blx	r3
    newTransition->invalidate();
 8004d9e:	682b      	ldr	r3, [r5, #0]
 8004da0:	4628      	mov	r0, r5
 8004da2:	695b      	ldr	r3, [r3, #20]
}
 8004da4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004da8:	4718      	bx	r3
    model->bind(newPresenter);
 8004daa:	4623      	mov	r3, r4
 8004dac:	e7e2      	b.n	8004d74 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004dae:	bf00      	nop
 8004db0:	0802d8dc 	.word	0x0802d8dc
 8004db4:	0802dd0d 	.word	0x0802dd0d
 8004db8:	0802da78 	.word	0x0802da78
 8004dbc:	0802dabf 	.word	0x0802dabf
 8004dc0:	0802db62 	.word	0x0802db62
 8004dc4:	20013884 	.word	0x20013884
 8004dc8:	20013880 	.word	0x20013880

08004dcc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004dcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004dd0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004dd4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004dd6:	68a0      	ldr	r0, [r4, #8]
 8004dd8:	6803      	ldr	r3, [r0, #0]
 8004dda:	6a1b      	ldr	r3, [r3, #32]
 8004ddc:	4798      	blx	r3
 8004dde:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004de2:	d205      	bcs.n	8004df0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004de4:	4b42      	ldr	r3, [pc, #264]	; (8004ef0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004de6:	4a43      	ldr	r2, [pc, #268]	; (8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004de8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004dea:	4843      	ldr	r0, [pc, #268]	; (8004ef8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004dec:	f026 fef0 	bl	802bbd0 <__assert_func>
 8004df0:	6860      	ldr	r0, [r4, #4]
 8004df2:	6803      	ldr	r3, [r0, #0]
 8004df4:	6a1b      	ldr	r3, [r3, #32]
 8004df6:	4798      	blx	r3
 8004df8:	280f      	cmp	r0, #15
 8004dfa:	d803      	bhi.n	8004e04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004dfc:	4b3f      	ldr	r3, [pc, #252]	; (8004efc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004dfe:	4a3d      	ldr	r2, [pc, #244]	; (8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004e00:	21a4      	movs	r1, #164	; 0xa4
 8004e02:	e7f2      	b.n	8004dea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e04:	68e0      	ldr	r0, [r4, #12]
 8004e06:	6803      	ldr	r3, [r0, #0]
 8004e08:	6a1b      	ldr	r3, [r3, #32]
 8004e0a:	4798      	blx	r3
 8004e0c:	2837      	cmp	r0, #55	; 0x37
 8004e0e:	d803      	bhi.n	8004e18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004e10:	4b3b      	ldr	r3, [pc, #236]	; (8004f00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004e12:	4a38      	ldr	r2, [pc, #224]	; (8004ef4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004e14:	21a5      	movs	r1, #165	; 0xa5
 8004e16:	e7e8      	b.n	8004dea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004e18:	f012 f812 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e1c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004e20:	3004      	adds	r0, #4
 8004e22:	f012 f873 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e26:	f8d9 0000 	ldr.w	r0, [r9]
 8004e2a:	b110      	cbz	r0, 8004e32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004e2c:	6803      	ldr	r3, [r0, #0]
 8004e2e:	68db      	ldr	r3, [r3, #12]
 8004e30:	4798      	blx	r3
    if (*currentTrans)
 8004e32:	f8d9 0000 	ldr.w	r0, [r9]
 8004e36:	b110      	cbz	r0, 8004e3e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	4798      	blx	r3
    if (*currentScreen)
 8004e3e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004f08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004e42:	f8d8 0000 	ldr.w	r0, [r8]
 8004e46:	b110      	cbz	r0, 8004e4e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004e48:	6803      	ldr	r3, [r0, #0]
 8004e4a:	695b      	ldr	r3, [r3, #20]
 8004e4c:	4798      	blx	r3
    if (*currentPresenter)
 8004e4e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e52:	b110      	cbz	r0, 8004e5a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004e54:	6803      	ldr	r3, [r0, #0]
 8004e56:	685b      	ldr	r3, [r3, #4]
 8004e58:	4798      	blx	r3
    if (*currentScreen)
 8004e5a:	f8d8 0000 	ldr.w	r0, [r8]
 8004e5e:	b110      	cbz	r0, 8004e66 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004e60:	6803      	ldr	r3, [r0, #0]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	4798      	blx	r3
    if (*currentPresenter)
 8004e66:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e6a:	b110      	cbz	r0, 8004e72 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004e6c:	6803      	ldr	r3, [r0, #0]
 8004e6e:	689b      	ldr	r3, [r3, #8]
 8004e70:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e72:	68e0      	ldr	r0, [r4, #12]
 8004e74:	2100      	movs	r1, #0
 8004e76:	f7ff fed7 	bl	8004c28 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004e7a:	2114      	movs	r1, #20
 8004e7c:	4605      	mov	r5, r0
 8004e7e:	f7ff fed7 	bl	8004c30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e82:	68a0      	ldr	r0, [r4, #8]
 8004e84:	6803      	ldr	r3, [r0, #0]
 8004e86:	2100      	movs	r1, #0
 8004e88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e8a:	4798      	blx	r3
 8004e8c:	4606      	mov	r6, r0
 8004e8e:	f004 f81d 	bl	8008ecc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e92:	6860      	ldr	r0, [r4, #4]
 8004e94:	6803      	ldr	r3, [r0, #0]
 8004e96:	2100      	movs	r1, #0
 8004e98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e9a:	4798      	blx	r3
 8004e9c:	4631      	mov	r1, r6
 8004e9e:	4604      	mov	r4, r0
 8004ea0:	f003 ffee 	bl	8008e80 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004ea4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ea8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004eac:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004eb0:	b1dc      	cbz	r4, 8004eea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004eb2:	1d23      	adds	r3, r4, #4
 8004eb4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004eb8:	6833      	ldr	r3, [r6, #0]
 8004eba:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ebe:	4630      	mov	r0, r6
 8004ec0:	68db      	ldr	r3, [r3, #12]
 8004ec2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ec4:	4798      	blx	r3
    newPresenter->activate();
 8004ec6:	6823      	ldr	r3, [r4, #0]
 8004ec8:	4620      	mov	r0, r4
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ece:	4629      	mov	r1, r5
 8004ed0:	4630      	mov	r0, r6
 8004ed2:	f013 fde1 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004ed6:	682b      	ldr	r3, [r5, #0]
 8004ed8:	4628      	mov	r0, r5
 8004eda:	691b      	ldr	r3, [r3, #16]
 8004edc:	4798      	blx	r3
    newTransition->invalidate();
 8004ede:	682b      	ldr	r3, [r5, #0]
 8004ee0:	4628      	mov	r0, r5
 8004ee2:	695b      	ldr	r3, [r3, #20]
}
 8004ee4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ee8:	4718      	bx	r3
    model->bind(newPresenter);
 8004eea:	4623      	mov	r3, r4
 8004eec:	e7e2      	b.n	8004eb4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004eee:	bf00      	nop
 8004ef0:	0802d8dc 	.word	0x0802d8dc
 8004ef4:	0802de3d 	.word	0x0802de3d
 8004ef8:	0802da78 	.word	0x0802da78
 8004efc:	0802dabf 	.word	0x0802dabf
 8004f00:	0802db62 	.word	0x0802db62
 8004f04:	20013884 	.word	0x20013884
 8004f08:	20013880 	.word	0x20013880

08004f0c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004f0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f16:	68a0      	ldr	r0, [r4, #8]
 8004f18:	6803      	ldr	r3, [r0, #0]
 8004f1a:	6a1b      	ldr	r3, [r3, #32]
 8004f1c:	4798      	blx	r3
 8004f1e:	f241 137b 	movw	r3, #4475	; 0x117b
 8004f22:	4298      	cmp	r0, r3
 8004f24:	d805      	bhi.n	8004f32 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004f26:	4b42      	ldr	r3, [pc, #264]	; (8005030 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004f28:	4a42      	ldr	r2, [pc, #264]	; (8005034 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f2a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f2c:	4842      	ldr	r0, [pc, #264]	; (8005038 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004f2e:	f026 fe4f 	bl	802bbd0 <__assert_func>
 8004f32:	6860      	ldr	r0, [r4, #4]
 8004f34:	6803      	ldr	r3, [r0, #0]
 8004f36:	6a1b      	ldr	r3, [r3, #32]
 8004f38:	4798      	blx	r3
 8004f3a:	280f      	cmp	r0, #15
 8004f3c:	d803      	bhi.n	8004f46 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004f3e:	4b3f      	ldr	r3, [pc, #252]	; (800503c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004f40:	4a3c      	ldr	r2, [pc, #240]	; (8005034 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f42:	21a4      	movs	r1, #164	; 0xa4
 8004f44:	e7f2      	b.n	8004f2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f46:	68e0      	ldr	r0, [r4, #12]
 8004f48:	6803      	ldr	r3, [r0, #0]
 8004f4a:	6a1b      	ldr	r3, [r3, #32]
 8004f4c:	4798      	blx	r3
 8004f4e:	2837      	cmp	r0, #55	; 0x37
 8004f50:	d803      	bhi.n	8004f5a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004f52:	4b3b      	ldr	r3, [pc, #236]	; (8005040 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004f54:	4a37      	ldr	r2, [pc, #220]	; (8005034 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004f56:	21a5      	movs	r1, #165	; 0xa5
 8004f58:	e7e8      	b.n	8004f2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f5a:	f011 ff71 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f5e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005044 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004f62:	3004      	adds	r0, #4
 8004f64:	f011 ffd2 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f68:	f8d9 0000 	ldr.w	r0, [r9]
 8004f6c:	b110      	cbz	r0, 8004f74 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f6e:	6803      	ldr	r3, [r0, #0]
 8004f70:	68db      	ldr	r3, [r3, #12]
 8004f72:	4798      	blx	r3
    if (*currentTrans)
 8004f74:	f8d9 0000 	ldr.w	r0, [r9]
 8004f78:	b110      	cbz	r0, 8004f80 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f7a:	6803      	ldr	r3, [r0, #0]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	4798      	blx	r3
    if (*currentScreen)
 8004f80:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005048 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004f84:	f8d8 0000 	ldr.w	r0, [r8]
 8004f88:	b110      	cbz	r0, 8004f90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f8a:	6803      	ldr	r3, [r0, #0]
 8004f8c:	695b      	ldr	r3, [r3, #20]
 8004f8e:	4798      	blx	r3
    if (*currentPresenter)
 8004f90:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f94:	b110      	cbz	r0, 8004f9c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f96:	6803      	ldr	r3, [r0, #0]
 8004f98:	685b      	ldr	r3, [r3, #4]
 8004f9a:	4798      	blx	r3
    if (*currentScreen)
 8004f9c:	f8d8 0000 	ldr.w	r0, [r8]
 8004fa0:	b110      	cbz	r0, 8004fa8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004fa2:	6803      	ldr	r3, [r0, #0]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	4798      	blx	r3
    if (*currentPresenter)
 8004fa8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004fac:	b110      	cbz	r0, 8004fb4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004fae:	6803      	ldr	r3, [r0, #0]
 8004fb0:	689b      	ldr	r3, [r3, #8]
 8004fb2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004fb4:	68e0      	ldr	r0, [r4, #12]
 8004fb6:	2100      	movs	r1, #0
 8004fb8:	f7ff fe36 	bl	8004c28 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004fbc:	2114      	movs	r1, #20
 8004fbe:	4605      	mov	r5, r0
 8004fc0:	f7ff fe36 	bl	8004c30 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004fc4:	68a0      	ldr	r0, [r4, #8]
 8004fc6:	6803      	ldr	r3, [r0, #0]
 8004fc8:	2100      	movs	r1, #0
 8004fca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fcc:	4798      	blx	r3
 8004fce:	4606      	mov	r6, r0
 8004fd0:	f003 ff1c 	bl	8008e0c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004fd4:	6860      	ldr	r0, [r4, #4]
 8004fd6:	6803      	ldr	r3, [r0, #0]
 8004fd8:	2100      	movs	r1, #0
 8004fda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fdc:	4798      	blx	r3
 8004fde:	4631      	mov	r1, r6
 8004fe0:	4604      	mov	r4, r0
 8004fe2:	f003 feed 	bl	8008dc0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004fe6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004fea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004fee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ff2:	b1dc      	cbz	r4, 800502c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004ff4:	1d23      	adds	r3, r4, #4
 8004ff6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ffa:	6833      	ldr	r3, [r6, #0]
 8004ffc:	f8c4 a008 	str.w	sl, [r4, #8]
 8005000:	4630      	mov	r0, r6
 8005002:	68db      	ldr	r3, [r3, #12]
 8005004:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005006:	4798      	blx	r3
    newPresenter->activate();
 8005008:	6823      	ldr	r3, [r4, #0]
 800500a:	4620      	mov	r0, r4
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005010:	4629      	mov	r1, r5
 8005012:	4630      	mov	r0, r6
 8005014:	f013 fd40 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005018:	682b      	ldr	r3, [r5, #0]
 800501a:	4628      	mov	r0, r5
 800501c:	691b      	ldr	r3, [r3, #16]
 800501e:	4798      	blx	r3
    newTransition->invalidate();
 8005020:	682b      	ldr	r3, [r5, #0]
 8005022:	4628      	mov	r0, r5
 8005024:	695b      	ldr	r3, [r3, #20]
}
 8005026:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800502a:	4718      	bx	r3
    model->bind(newPresenter);
 800502c:	4623      	mov	r3, r4
 800502e:	e7e2      	b.n	8004ff6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8005030:	0802d8dc 	.word	0x0802d8dc
 8005034:	0802df5b 	.word	0x0802df5b
 8005038:	0802da78 	.word	0x0802da78
 800503c:	0802dabf 	.word	0x0802dabf
 8005040:	0802db62 	.word	0x0802db62
 8005044:	20013884 	.word	0x20013884
 8005048:	20013880 	.word	0x20013880

0800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 800504c:	6803      	ldr	r3, [r0, #0]
 800504e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005050:	4718      	bx	r3
	...

08005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8005054:	4b12      	ldr	r3, [pc, #72]	; (80050a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8005056:	b513      	push	{r0, r1, r4, lr}
          solid()
 8005058:	6003      	str	r3, [r0, #0]
 800505a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800505e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8005060:	4b10      	ldr	r3, [pc, #64]	; (80050a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8005062:	7241      	strb	r1, [r0, #9]
 8005064:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005066:	4910      	ldr	r1, [pc, #64]	; (80050a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8005068:	4b10      	ldr	r3, [pc, #64]	; (80050ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800506a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800506e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005072:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8005074:	2200      	movs	r2, #0
 8005076:	6042      	str	r2, [r0, #4]
 8005078:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800507a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800507c:	81c2      	strh	r2, [r0, #14]
          solid()
 800507e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8005082:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8005086:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800508a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800508e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8005090:	9100      	str	r1, [sp, #0]
 8005092:	3010      	adds	r0, #16
 8005094:	4611      	mov	r1, r2
 8005096:	f7fd fd32 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800509a:	4620      	mov	r0, r4
 800509c:	b002      	add	sp, #8
 800509e:	bd10      	pop	{r4, pc}
 80050a0:	0802ec40 	.word	0x0802ec40
 80050a4:	0802eb48 	.word	0x0802eb48
 80050a8:	20013832 	.word	0x20013832
 80050ac:	20013830 	.word	0x20013830

080050b0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80050b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80050b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80050b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80050ba:	68a0      	ldr	r0, [r4, #8]
 80050bc:	6803      	ldr	r3, [r0, #0]
 80050be:	6a1b      	ldr	r3, [r3, #32]
 80050c0:	4798      	blx	r3
 80050c2:	f241 03af 	movw	r3, #4271	; 0x10af
 80050c6:	4298      	cmp	r0, r3
 80050c8:	d805      	bhi.n	80050d6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80050ca:	4b42      	ldr	r3, [pc, #264]	; (80051d4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80050cc:	4a42      	ldr	r2, [pc, #264]	; (80051d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050ce:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80050d0:	4842      	ldr	r0, [pc, #264]	; (80051dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80050d2:	f026 fd7d 	bl	802bbd0 <__assert_func>
 80050d6:	6860      	ldr	r0, [r4, #4]
 80050d8:	6803      	ldr	r3, [r0, #0]
 80050da:	6a1b      	ldr	r3, [r3, #32]
 80050dc:	4798      	blx	r3
 80050de:	280f      	cmp	r0, #15
 80050e0:	d803      	bhi.n	80050ea <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80050e2:	4b3f      	ldr	r3, [pc, #252]	; (80051e0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80050e4:	4a3c      	ldr	r2, [pc, #240]	; (80051d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050e6:	21a4      	movs	r1, #164	; 0xa4
 80050e8:	e7f2      	b.n	80050d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80050ea:	68e0      	ldr	r0, [r4, #12]
 80050ec:	6803      	ldr	r3, [r0, #0]
 80050ee:	6a1b      	ldr	r3, [r3, #32]
 80050f0:	4798      	blx	r3
 80050f2:	2837      	cmp	r0, #55	; 0x37
 80050f4:	d803      	bhi.n	80050fe <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80050f6:	4b3b      	ldr	r3, [pc, #236]	; (80051e4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80050f8:	4a37      	ldr	r2, [pc, #220]	; (80051d8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80050fa:	21a5      	movs	r1, #165	; 0xa5
 80050fc:	e7e8      	b.n	80050d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80050fe:	f011 fe9f 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005102:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80051e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005106:	3004      	adds	r0, #4
 8005108:	f011 ff00 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800510c:	f8d9 0000 	ldr.w	r0, [r9]
 8005110:	b110      	cbz	r0, 8005118 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005112:	6803      	ldr	r3, [r0, #0]
 8005114:	68db      	ldr	r3, [r3, #12]
 8005116:	4798      	blx	r3
    if (*currentTrans)
 8005118:	f8d9 0000 	ldr.w	r0, [r9]
 800511c:	b110      	cbz	r0, 8005124 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800511e:	6803      	ldr	r3, [r0, #0]
 8005120:	681b      	ldr	r3, [r3, #0]
 8005122:	4798      	blx	r3
    if (*currentScreen)
 8005124:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80051ec <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005128:	f8d8 0000 	ldr.w	r0, [r8]
 800512c:	b110      	cbz	r0, 8005134 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800512e:	6803      	ldr	r3, [r0, #0]
 8005130:	695b      	ldr	r3, [r3, #20]
 8005132:	4798      	blx	r3
    if (*currentPresenter)
 8005134:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005138:	b110      	cbz	r0, 8005140 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800513a:	6803      	ldr	r3, [r0, #0]
 800513c:	685b      	ldr	r3, [r3, #4]
 800513e:	4798      	blx	r3
    if (*currentScreen)
 8005140:	f8d8 0000 	ldr.w	r0, [r8]
 8005144:	b110      	cbz	r0, 800514c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005146:	6803      	ldr	r3, [r0, #0]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	4798      	blx	r3
    if (*currentPresenter)
 800514c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005150:	b110      	cbz	r0, 8005158 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005152:	6803      	ldr	r3, [r0, #0]
 8005154:	689b      	ldr	r3, [r3, #8]
 8005156:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005158:	68e0      	ldr	r0, [r4, #12]
 800515a:	2100      	movs	r1, #0
 800515c:	f7ff ff76 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005160:	2114      	movs	r1, #20
 8005162:	4605      	mov	r5, r0
 8005164:	f7ff ff76 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005168:	68a0      	ldr	r0, [r4, #8]
 800516a:	6803      	ldr	r3, [r0, #0]
 800516c:	2100      	movs	r1, #0
 800516e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005170:	4798      	blx	r3
 8005172:	4606      	mov	r6, r0
 8005174:	f004 f94e 	bl	8009414 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005178:	6860      	ldr	r0, [r4, #4]
 800517a:	6803      	ldr	r3, [r0, #0]
 800517c:	2100      	movs	r1, #0
 800517e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005180:	4798      	blx	r3
 8005182:	4631      	mov	r1, r6
 8005184:	4604      	mov	r4, r0
 8005186:	f004 f91f 	bl	80093c8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800518a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800518e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005192:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005196:	b1dc      	cbz	r4, 80051d0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8005198:	1d23      	adds	r3, r4, #4
 800519a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800519e:	6833      	ldr	r3, [r6, #0]
 80051a0:	f8c4 a008 	str.w	sl, [r4, #8]
 80051a4:	4630      	mov	r0, r6
 80051a6:	68db      	ldr	r3, [r3, #12]
 80051a8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80051aa:	4798      	blx	r3
    newPresenter->activate();
 80051ac:	6823      	ldr	r3, [r4, #0]
 80051ae:	4620      	mov	r0, r4
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80051b4:	4629      	mov	r1, r5
 80051b6:	4630      	mov	r0, r6
 80051b8:	f013 fc6e 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80051bc:	682b      	ldr	r3, [r5, #0]
 80051be:	4628      	mov	r0, r5
 80051c0:	691b      	ldr	r3, [r3, #16]
 80051c2:	4798      	blx	r3
    newTransition->invalidate();
 80051c4:	682b      	ldr	r3, [r5, #0]
 80051c6:	4628      	mov	r0, r5
 80051c8:	695b      	ldr	r3, [r3, #20]
}
 80051ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80051ce:	4718      	bx	r3
    model->bind(newPresenter);
 80051d0:	4623      	mov	r3, r4
 80051d2:	e7e2      	b.n	800519a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80051d4:	0802d8dc 	.word	0x0802d8dc
 80051d8:	0802e075 	.word	0x0802e075
 80051dc:	0802da78 	.word	0x0802da78
 80051e0:	0802dabf 	.word	0x0802dabf
 80051e4:	0802db62 	.word	0x0802db62
 80051e8:	20013884 	.word	0x20013884
 80051ec:	20013880 	.word	0x20013880

080051f0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 80051f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80051f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80051f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80051fa:	68a0      	ldr	r0, [r4, #8]
 80051fc:	6803      	ldr	r3, [r0, #0]
 80051fe:	6a1b      	ldr	r3, [r3, #32]
 8005200:	4798      	blx	r3
 8005202:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005206:	4298      	cmp	r0, r3
 8005208:	d805      	bhi.n	8005216 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800520a:	4b42      	ldr	r3, [pc, #264]	; (8005314 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800520c:	4a42      	ldr	r2, [pc, #264]	; (8005318 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800520e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005210:	4842      	ldr	r0, [pc, #264]	; (800531c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005212:	f026 fcdd 	bl	802bbd0 <__assert_func>
 8005216:	6860      	ldr	r0, [r4, #4]
 8005218:	6803      	ldr	r3, [r0, #0]
 800521a:	6a1b      	ldr	r3, [r3, #32]
 800521c:	4798      	blx	r3
 800521e:	280f      	cmp	r0, #15
 8005220:	d803      	bhi.n	800522a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005222:	4b3f      	ldr	r3, [pc, #252]	; (8005320 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005224:	4a3c      	ldr	r2, [pc, #240]	; (8005318 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005226:	21a4      	movs	r1, #164	; 0xa4
 8005228:	e7f2      	b.n	8005210 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800522a:	68e0      	ldr	r0, [r4, #12]
 800522c:	6803      	ldr	r3, [r0, #0]
 800522e:	6a1b      	ldr	r3, [r3, #32]
 8005230:	4798      	blx	r3
 8005232:	2837      	cmp	r0, #55	; 0x37
 8005234:	d803      	bhi.n	800523e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005236:	4b3b      	ldr	r3, [pc, #236]	; (8005324 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005238:	4a37      	ldr	r2, [pc, #220]	; (8005318 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800523a:	21a5      	movs	r1, #165	; 0xa5
 800523c:	e7e8      	b.n	8005210 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800523e:	f011 fdff 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005242:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005328 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005246:	3004      	adds	r0, #4
 8005248:	f011 fe60 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800524c:	f8d9 0000 	ldr.w	r0, [r9]
 8005250:	b110      	cbz	r0, 8005258 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005252:	6803      	ldr	r3, [r0, #0]
 8005254:	68db      	ldr	r3, [r3, #12]
 8005256:	4798      	blx	r3
    if (*currentTrans)
 8005258:	f8d9 0000 	ldr.w	r0, [r9]
 800525c:	b110      	cbz	r0, 8005264 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800525e:	6803      	ldr	r3, [r0, #0]
 8005260:	681b      	ldr	r3, [r3, #0]
 8005262:	4798      	blx	r3
    if (*currentScreen)
 8005264:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800532c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005268:	f8d8 0000 	ldr.w	r0, [r8]
 800526c:	b110      	cbz	r0, 8005274 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800526e:	6803      	ldr	r3, [r0, #0]
 8005270:	695b      	ldr	r3, [r3, #20]
 8005272:	4798      	blx	r3
    if (*currentPresenter)
 8005274:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005278:	b110      	cbz	r0, 8005280 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800527a:	6803      	ldr	r3, [r0, #0]
 800527c:	685b      	ldr	r3, [r3, #4]
 800527e:	4798      	blx	r3
    if (*currentScreen)
 8005280:	f8d8 0000 	ldr.w	r0, [r8]
 8005284:	b110      	cbz	r0, 800528c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005286:	6803      	ldr	r3, [r0, #0]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	4798      	blx	r3
    if (*currentPresenter)
 800528c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005290:	b110      	cbz	r0, 8005298 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005292:	6803      	ldr	r3, [r0, #0]
 8005294:	689b      	ldr	r3, [r3, #8]
 8005296:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005298:	68e0      	ldr	r0, [r4, #12]
 800529a:	2100      	movs	r1, #0
 800529c:	f7ff fed6 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80052a0:	2114      	movs	r1, #20
 80052a2:	4605      	mov	r5, r0
 80052a4:	f7ff fed6 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80052a8:	68a0      	ldr	r0, [r4, #8]
 80052aa:	6803      	ldr	r3, [r0, #0]
 80052ac:	2100      	movs	r1, #0
 80052ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052b0:	4798      	blx	r3
 80052b2:	4606      	mov	r6, r0
 80052b4:	f003 fc76 	bl	8008ba4 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80052b8:	6860      	ldr	r0, [r4, #4]
 80052ba:	6803      	ldr	r3, [r0, #0]
 80052bc:	2100      	movs	r1, #0
 80052be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052c0:	4798      	blx	r3
 80052c2:	4631      	mov	r1, r6
 80052c4:	4604      	mov	r4, r0
 80052c6:	f003 fc47 	bl	8008b58 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80052ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80052ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80052d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80052d6:	b1dc      	cbz	r4, 8005310 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80052d8:	1d23      	adds	r3, r4, #4
 80052da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80052de:	6833      	ldr	r3, [r6, #0]
 80052e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80052e4:	4630      	mov	r0, r6
 80052e6:	68db      	ldr	r3, [r3, #12]
 80052e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80052ea:	4798      	blx	r3
    newPresenter->activate();
 80052ec:	6823      	ldr	r3, [r4, #0]
 80052ee:	4620      	mov	r0, r4
 80052f0:	681b      	ldr	r3, [r3, #0]
 80052f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80052f4:	4629      	mov	r1, r5
 80052f6:	4630      	mov	r0, r6
 80052f8:	f013 fbce 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80052fc:	682b      	ldr	r3, [r5, #0]
 80052fe:	4628      	mov	r0, r5
 8005300:	691b      	ldr	r3, [r3, #16]
 8005302:	4798      	blx	r3
    newTransition->invalidate();
 8005304:	682b      	ldr	r3, [r5, #0]
 8005306:	4628      	mov	r0, r5
 8005308:	695b      	ldr	r3, [r3, #20]
}
 800530a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800530e:	4718      	bx	r3
    model->bind(newPresenter);
 8005310:	4623      	mov	r3, r4
 8005312:	e7e2      	b.n	80052da <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005314:	0802d8dc 	.word	0x0802d8dc
 8005318:	0802e195 	.word	0x0802e195
 800531c:	0802da78 	.word	0x0802da78
 8005320:	0802dabf 	.word	0x0802dabf
 8005324:	0802db62 	.word	0x0802db62
 8005328:	20013884 	.word	0x20013884
 800532c:	20013880 	.word	0x20013880

08005330 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005334:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005338:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800533a:	68a0      	ldr	r0, [r4, #8]
 800533c:	6803      	ldr	r3, [r0, #0]
 800533e:	6a1b      	ldr	r3, [r3, #32]
 8005340:	4798      	blx	r3
 8005342:	f241 035b 	movw	r3, #4187	; 0x105b
 8005346:	4298      	cmp	r0, r3
 8005348:	d805      	bhi.n	8005356 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800534a:	4b42      	ldr	r3, [pc, #264]	; (8005454 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800534c:	4a42      	ldr	r2, [pc, #264]	; (8005458 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800534e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005350:	4842      	ldr	r0, [pc, #264]	; (800545c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005352:	f026 fc3d 	bl	802bbd0 <__assert_func>
 8005356:	6860      	ldr	r0, [r4, #4]
 8005358:	6803      	ldr	r3, [r0, #0]
 800535a:	6a1b      	ldr	r3, [r3, #32]
 800535c:	4798      	blx	r3
 800535e:	280f      	cmp	r0, #15
 8005360:	d803      	bhi.n	800536a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005362:	4b3f      	ldr	r3, [pc, #252]	; (8005460 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005364:	4a3c      	ldr	r2, [pc, #240]	; (8005458 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005366:	21a4      	movs	r1, #164	; 0xa4
 8005368:	e7f2      	b.n	8005350 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800536a:	68e0      	ldr	r0, [r4, #12]
 800536c:	6803      	ldr	r3, [r0, #0]
 800536e:	6a1b      	ldr	r3, [r3, #32]
 8005370:	4798      	blx	r3
 8005372:	2837      	cmp	r0, #55	; 0x37
 8005374:	d803      	bhi.n	800537e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005376:	4b3b      	ldr	r3, [pc, #236]	; (8005464 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005378:	4a37      	ldr	r2, [pc, #220]	; (8005458 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800537a:	21a5      	movs	r1, #165	; 0xa5
 800537c:	e7e8      	b.n	8005350 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800537e:	f011 fd5f 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005382:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005468 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8005386:	3004      	adds	r0, #4
 8005388:	f011 fdc0 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800538c:	f8d9 0000 	ldr.w	r0, [r9]
 8005390:	b110      	cbz	r0, 8005398 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005392:	6803      	ldr	r3, [r0, #0]
 8005394:	68db      	ldr	r3, [r3, #12]
 8005396:	4798      	blx	r3
    if (*currentTrans)
 8005398:	f8d9 0000 	ldr.w	r0, [r9]
 800539c:	b110      	cbz	r0, 80053a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800539e:	6803      	ldr	r3, [r0, #0]
 80053a0:	681b      	ldr	r3, [r3, #0]
 80053a2:	4798      	blx	r3
    if (*currentScreen)
 80053a4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800546c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80053a8:	f8d8 0000 	ldr.w	r0, [r8]
 80053ac:	b110      	cbz	r0, 80053b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80053ae:	6803      	ldr	r3, [r0, #0]
 80053b0:	695b      	ldr	r3, [r3, #20]
 80053b2:	4798      	blx	r3
    if (*currentPresenter)
 80053b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053b8:	b110      	cbz	r0, 80053c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80053ba:	6803      	ldr	r3, [r0, #0]
 80053bc:	685b      	ldr	r3, [r3, #4]
 80053be:	4798      	blx	r3
    if (*currentScreen)
 80053c0:	f8d8 0000 	ldr.w	r0, [r8]
 80053c4:	b110      	cbz	r0, 80053cc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80053c6:	6803      	ldr	r3, [r0, #0]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	4798      	blx	r3
    if (*currentPresenter)
 80053cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80053d0:	b110      	cbz	r0, 80053d8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80053d2:	6803      	ldr	r3, [r0, #0]
 80053d4:	689b      	ldr	r3, [r3, #8]
 80053d6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80053d8:	68e0      	ldr	r0, [r4, #12]
 80053da:	2100      	movs	r1, #0
 80053dc:	f7ff fe36 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80053e0:	2114      	movs	r1, #20
 80053e2:	4605      	mov	r5, r0
 80053e4:	f7ff fe36 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80053e8:	68a0      	ldr	r0, [r4, #8]
 80053ea:	6803      	ldr	r3, [r0, #0]
 80053ec:	2100      	movs	r1, #0
 80053ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053f0:	4798      	blx	r3
 80053f2:	4606      	mov	r6, r0
 80053f4:	f003 fe66 	bl	80090c4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80053f8:	6860      	ldr	r0, [r4, #4]
 80053fa:	6803      	ldr	r3, [r0, #0]
 80053fc:	2100      	movs	r1, #0
 80053fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005400:	4798      	blx	r3
 8005402:	4631      	mov	r1, r6
 8005404:	4604      	mov	r4, r0
 8005406:	f003 fe37 	bl	8009078 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800540a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800540e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005412:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005416:	b1dc      	cbz	r4, 8005450 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005418:	1d23      	adds	r3, r4, #4
 800541a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800541e:	6833      	ldr	r3, [r6, #0]
 8005420:	f8c4 a008 	str.w	sl, [r4, #8]
 8005424:	4630      	mov	r0, r6
 8005426:	68db      	ldr	r3, [r3, #12]
 8005428:	63f4      	str	r4, [r6, #60]	; 0x3c
 800542a:	4798      	blx	r3
    newPresenter->activate();
 800542c:	6823      	ldr	r3, [r4, #0]
 800542e:	4620      	mov	r0, r4
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005434:	4629      	mov	r1, r5
 8005436:	4630      	mov	r0, r6
 8005438:	f013 fb2e 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800543c:	682b      	ldr	r3, [r5, #0]
 800543e:	4628      	mov	r0, r5
 8005440:	691b      	ldr	r3, [r3, #16]
 8005442:	4798      	blx	r3
    newTransition->invalidate();
 8005444:	682b      	ldr	r3, [r5, #0]
 8005446:	4628      	mov	r0, r5
 8005448:	695b      	ldr	r3, [r3, #20]
}
 800544a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800544e:	4718      	bx	r3
    model->bind(newPresenter);
 8005450:	4623      	mov	r3, r4
 8005452:	e7e2      	b.n	800541a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005454:	0802d8dc 	.word	0x0802d8dc
 8005458:	0802e2bb 	.word	0x0802e2bb
 800545c:	0802da78 	.word	0x0802da78
 8005460:	0802dabf 	.word	0x0802dabf
 8005464:	0802db62 	.word	0x0802db62
 8005468:	20013884 	.word	0x20013884
 800546c:	20013880 	.word	0x20013880

08005470 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005474:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005478:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800547a:	68a0      	ldr	r0, [r4, #8]
 800547c:	6803      	ldr	r3, [r0, #0]
 800547e:	6a1b      	ldr	r3, [r3, #32]
 8005480:	4798      	blx	r3
 8005482:	f241 035b 	movw	r3, #4187	; 0x105b
 8005486:	4298      	cmp	r0, r3
 8005488:	d805      	bhi.n	8005496 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 800548a:	4b42      	ldr	r3, [pc, #264]	; (8005594 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 800548c:	4a42      	ldr	r2, [pc, #264]	; (8005598 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800548e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005490:	4842      	ldr	r0, [pc, #264]	; (800559c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 8005492:	f026 fb9d 	bl	802bbd0 <__assert_func>
 8005496:	6860      	ldr	r0, [r4, #4]
 8005498:	6803      	ldr	r3, [r0, #0]
 800549a:	6a1b      	ldr	r3, [r3, #32]
 800549c:	4798      	blx	r3
 800549e:	280f      	cmp	r0, #15
 80054a0:	d803      	bhi.n	80054aa <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80054a2:	4b3f      	ldr	r3, [pc, #252]	; (80055a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80054a4:	4a3c      	ldr	r2, [pc, #240]	; (8005598 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80054a6:	21a4      	movs	r1, #164	; 0xa4
 80054a8:	e7f2      	b.n	8005490 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80054aa:	68e0      	ldr	r0, [r4, #12]
 80054ac:	6803      	ldr	r3, [r0, #0]
 80054ae:	6a1b      	ldr	r3, [r3, #32]
 80054b0:	4798      	blx	r3
 80054b2:	2837      	cmp	r0, #55	; 0x37
 80054b4:	d803      	bhi.n	80054be <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80054b6:	4b3b      	ldr	r3, [pc, #236]	; (80055a4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80054b8:	4a37      	ldr	r2, [pc, #220]	; (8005598 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80054ba:	21a5      	movs	r1, #165	; 0xa5
 80054bc:	e7e8      	b.n	8005490 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80054be:	f011 fcbf 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80054c2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80055a8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80054c6:	3004      	adds	r0, #4
 80054c8:	f011 fd20 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80054cc:	f8d9 0000 	ldr.w	r0, [r9]
 80054d0:	b110      	cbz	r0, 80054d8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80054d2:	6803      	ldr	r3, [r0, #0]
 80054d4:	68db      	ldr	r3, [r3, #12]
 80054d6:	4798      	blx	r3
    if (*currentTrans)
 80054d8:	f8d9 0000 	ldr.w	r0, [r9]
 80054dc:	b110      	cbz	r0, 80054e4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80054de:	6803      	ldr	r3, [r0, #0]
 80054e0:	681b      	ldr	r3, [r3, #0]
 80054e2:	4798      	blx	r3
    if (*currentScreen)
 80054e4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80055ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 80054e8:	f8d8 0000 	ldr.w	r0, [r8]
 80054ec:	b110      	cbz	r0, 80054f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80054ee:	6803      	ldr	r3, [r0, #0]
 80054f0:	695b      	ldr	r3, [r3, #20]
 80054f2:	4798      	blx	r3
    if (*currentPresenter)
 80054f4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054f8:	b110      	cbz	r0, 8005500 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80054fa:	6803      	ldr	r3, [r0, #0]
 80054fc:	685b      	ldr	r3, [r3, #4]
 80054fe:	4798      	blx	r3
    if (*currentScreen)
 8005500:	f8d8 0000 	ldr.w	r0, [r8]
 8005504:	b110      	cbz	r0, 800550c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005506:	6803      	ldr	r3, [r0, #0]
 8005508:	681b      	ldr	r3, [r3, #0]
 800550a:	4798      	blx	r3
    if (*currentPresenter)
 800550c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005510:	b110      	cbz	r0, 8005518 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005512:	6803      	ldr	r3, [r0, #0]
 8005514:	689b      	ldr	r3, [r3, #8]
 8005516:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005518:	68e0      	ldr	r0, [r4, #12]
 800551a:	2100      	movs	r1, #0
 800551c:	f7ff fd96 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005520:	2114      	movs	r1, #20
 8005522:	4605      	mov	r5, r0
 8005524:	f7ff fd96 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005528:	68a0      	ldr	r0, [r4, #8]
 800552a:	6803      	ldr	r3, [r0, #0]
 800552c:	2100      	movs	r1, #0
 800552e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005530:	4798      	blx	r3
 8005532:	4606      	mov	r6, r0
 8005534:	f003 fd84 	bl	8009040 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005538:	6860      	ldr	r0, [r4, #4]
 800553a:	6803      	ldr	r3, [r0, #0]
 800553c:	2100      	movs	r1, #0
 800553e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005540:	4798      	blx	r3
 8005542:	4631      	mov	r1, r6
 8005544:	4604      	mov	r4, r0
 8005546:	f003 fd55 	bl	8008ff4 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800554a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800554e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005552:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005556:	b1dc      	cbz	r4, 8005590 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005558:	1d23      	adds	r3, r4, #4
 800555a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800555e:	6833      	ldr	r3, [r6, #0]
 8005560:	f8c4 a008 	str.w	sl, [r4, #8]
 8005564:	4630      	mov	r0, r6
 8005566:	68db      	ldr	r3, [r3, #12]
 8005568:	63f4      	str	r4, [r6, #60]	; 0x3c
 800556a:	4798      	blx	r3
    newPresenter->activate();
 800556c:	6823      	ldr	r3, [r4, #0]
 800556e:	4620      	mov	r0, r4
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005574:	4629      	mov	r1, r5
 8005576:	4630      	mov	r0, r6
 8005578:	f013 fa8e 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800557c:	682b      	ldr	r3, [r5, #0]
 800557e:	4628      	mov	r0, r5
 8005580:	691b      	ldr	r3, [r3, #16]
 8005582:	4798      	blx	r3
    newTransition->invalidate();
 8005584:	682b      	ldr	r3, [r5, #0]
 8005586:	4628      	mov	r0, r5
 8005588:	695b      	ldr	r3, [r3, #20]
}
 800558a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800558e:	4718      	bx	r3
    model->bind(newPresenter);
 8005590:	4623      	mov	r3, r4
 8005592:	e7e2      	b.n	800555a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8005594:	0802d8dc 	.word	0x0802d8dc
 8005598:	0802e3ff 	.word	0x0802e3ff
 800559c:	0802da78 	.word	0x0802da78
 80055a0:	0802dabf 	.word	0x0802dabf
 80055a4:	0802db62 	.word	0x0802db62
 80055a8:	20013884 	.word	0x20013884
 80055ac:	20013880 	.word	0x20013880

080055b0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80055b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80055b4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80055b8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80055ba:	68a0      	ldr	r0, [r4, #8]
 80055bc:	6803      	ldr	r3, [r0, #0]
 80055be:	6a1b      	ldr	r3, [r3, #32]
 80055c0:	4798      	blx	r3
 80055c2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80055c6:	d205      	bcs.n	80055d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80055c8:	4b42      	ldr	r3, [pc, #264]	; (80056d4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80055ca:	4a43      	ldr	r2, [pc, #268]	; (80056d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80055cc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80055ce:	4843      	ldr	r0, [pc, #268]	; (80056dc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80055d0:	f026 fafe 	bl	802bbd0 <__assert_func>
 80055d4:	6860      	ldr	r0, [r4, #4]
 80055d6:	6803      	ldr	r3, [r0, #0]
 80055d8:	6a1b      	ldr	r3, [r3, #32]
 80055da:	4798      	blx	r3
 80055dc:	280f      	cmp	r0, #15
 80055de:	d803      	bhi.n	80055e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 80055e0:	4b3f      	ldr	r3, [pc, #252]	; (80056e0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 80055e2:	4a3d      	ldr	r2, [pc, #244]	; (80056d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80055e4:	21a4      	movs	r1, #164	; 0xa4
 80055e6:	e7f2      	b.n	80055ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80055e8:	68e0      	ldr	r0, [r4, #12]
 80055ea:	6803      	ldr	r3, [r0, #0]
 80055ec:	6a1b      	ldr	r3, [r3, #32]
 80055ee:	4798      	blx	r3
 80055f0:	2837      	cmp	r0, #55	; 0x37
 80055f2:	d803      	bhi.n	80055fc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80055f4:	4b3b      	ldr	r3, [pc, #236]	; (80056e4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80055f6:	4a38      	ldr	r2, [pc, #224]	; (80056d8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80055f8:	21a5      	movs	r1, #165	; 0xa5
 80055fa:	e7e8      	b.n	80055ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80055fc:	f011 fc20 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005600:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80056e8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005604:	3004      	adds	r0, #4
 8005606:	f011 fc81 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800560a:	f8d9 0000 	ldr.w	r0, [r9]
 800560e:	b110      	cbz	r0, 8005616 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005610:	6803      	ldr	r3, [r0, #0]
 8005612:	68db      	ldr	r3, [r3, #12]
 8005614:	4798      	blx	r3
    if (*currentTrans)
 8005616:	f8d9 0000 	ldr.w	r0, [r9]
 800561a:	b110      	cbz	r0, 8005622 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	681b      	ldr	r3, [r3, #0]
 8005620:	4798      	blx	r3
    if (*currentScreen)
 8005622:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80056ec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005626:	f8d8 0000 	ldr.w	r0, [r8]
 800562a:	b110      	cbz	r0, 8005632 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800562c:	6803      	ldr	r3, [r0, #0]
 800562e:	695b      	ldr	r3, [r3, #20]
 8005630:	4798      	blx	r3
    if (*currentPresenter)
 8005632:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005636:	b110      	cbz	r0, 800563e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005638:	6803      	ldr	r3, [r0, #0]
 800563a:	685b      	ldr	r3, [r3, #4]
 800563c:	4798      	blx	r3
    if (*currentScreen)
 800563e:	f8d8 0000 	ldr.w	r0, [r8]
 8005642:	b110      	cbz	r0, 800564a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005644:	6803      	ldr	r3, [r0, #0]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	4798      	blx	r3
    if (*currentPresenter)
 800564a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800564e:	b110      	cbz	r0, 8005656 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005650:	6803      	ldr	r3, [r0, #0]
 8005652:	689b      	ldr	r3, [r3, #8]
 8005654:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005656:	68e0      	ldr	r0, [r4, #12]
 8005658:	2100      	movs	r1, #0
 800565a:	f7ff fcf7 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800565e:	2114      	movs	r1, #20
 8005660:	4605      	mov	r5, r0
 8005662:	f7ff fcf7 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005666:	68a0      	ldr	r0, [r4, #8]
 8005668:	6803      	ldr	r3, [r0, #0]
 800566a:	2100      	movs	r1, #0
 800566c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800566e:	4798      	blx	r3
 8005670:	4606      	mov	r6, r0
 8005672:	f003 fc8b 	bl	8008f8c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005676:	6860      	ldr	r0, [r4, #4]
 8005678:	6803      	ldr	r3, [r0, #0]
 800567a:	2100      	movs	r1, #0
 800567c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800567e:	4798      	blx	r3
 8005680:	4631      	mov	r1, r6
 8005682:	4604      	mov	r4, r0
 8005684:	f003 fc5c 	bl	8008f40 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8005688:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800568c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005690:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005694:	b1dc      	cbz	r4, 80056ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8005696:	1d23      	adds	r3, r4, #4
 8005698:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800569c:	6833      	ldr	r3, [r6, #0]
 800569e:	f8c4 a008 	str.w	sl, [r4, #8]
 80056a2:	4630      	mov	r0, r6
 80056a4:	68db      	ldr	r3, [r3, #12]
 80056a6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80056a8:	4798      	blx	r3
    newPresenter->activate();
 80056aa:	6823      	ldr	r3, [r4, #0]
 80056ac:	4620      	mov	r0, r4
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80056b2:	4629      	mov	r1, r5
 80056b4:	4630      	mov	r0, r6
 80056b6:	f013 f9ef 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80056ba:	682b      	ldr	r3, [r5, #0]
 80056bc:	4628      	mov	r0, r5
 80056be:	691b      	ldr	r3, [r3, #16]
 80056c0:	4798      	blx	r3
    newTransition->invalidate();
 80056c2:	682b      	ldr	r3, [r5, #0]
 80056c4:	4628      	mov	r0, r5
 80056c6:	695b      	ldr	r3, [r3, #20]
}
 80056c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80056cc:	4718      	bx	r3
    model->bind(newPresenter);
 80056ce:	4623      	mov	r3, r4
 80056d0:	e7e2      	b.n	8005698 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80056d2:	bf00      	nop
 80056d4:	0802d8dc 	.word	0x0802d8dc
 80056d8:	0802e53f 	.word	0x0802e53f
 80056dc:	0802da78 	.word	0x0802da78
 80056e0:	0802dabf 	.word	0x0802dabf
 80056e4:	0802db62 	.word	0x0802db62
 80056e8:	20013884 	.word	0x20013884
 80056ec:	20013880 	.word	0x20013880

080056f0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 80056f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80056f4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80056f8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80056fa:	68a0      	ldr	r0, [r4, #8]
 80056fc:	6803      	ldr	r3, [r0, #0]
 80056fe:	6a1b      	ldr	r3, [r3, #32]
 8005700:	4798      	blx	r3
 8005702:	f241 035b 	movw	r3, #4187	; 0x105b
 8005706:	4298      	cmp	r0, r3
 8005708:	d805      	bhi.n	8005716 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800570a:	4b42      	ldr	r3, [pc, #264]	; (8005814 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800570c:	4a42      	ldr	r2, [pc, #264]	; (8005818 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800570e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005710:	4842      	ldr	r0, [pc, #264]	; (800581c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005712:	f026 fa5d 	bl	802bbd0 <__assert_func>
 8005716:	6860      	ldr	r0, [r4, #4]
 8005718:	6803      	ldr	r3, [r0, #0]
 800571a:	6a1b      	ldr	r3, [r3, #32]
 800571c:	4798      	blx	r3
 800571e:	280f      	cmp	r0, #15
 8005720:	d803      	bhi.n	800572a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8005722:	4b3f      	ldr	r3, [pc, #252]	; (8005820 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005724:	4a3c      	ldr	r2, [pc, #240]	; (8005818 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005726:	21a4      	movs	r1, #164	; 0xa4
 8005728:	e7f2      	b.n	8005710 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800572a:	68e0      	ldr	r0, [r4, #12]
 800572c:	6803      	ldr	r3, [r0, #0]
 800572e:	6a1b      	ldr	r3, [r3, #32]
 8005730:	4798      	blx	r3
 8005732:	2837      	cmp	r0, #55	; 0x37
 8005734:	d803      	bhi.n	800573e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005736:	4b3b      	ldr	r3, [pc, #236]	; (8005824 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005738:	4a37      	ldr	r2, [pc, #220]	; (8005818 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800573a:	21a5      	movs	r1, #165	; 0xa5
 800573c:	e7e8      	b.n	8005710 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800573e:	f011 fb7f 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005742:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005828 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005746:	3004      	adds	r0, #4
 8005748:	f011 fbe0 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800574c:	f8d9 0000 	ldr.w	r0, [r9]
 8005750:	b110      	cbz	r0, 8005758 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005752:	6803      	ldr	r3, [r0, #0]
 8005754:	68db      	ldr	r3, [r3, #12]
 8005756:	4798      	blx	r3
    if (*currentTrans)
 8005758:	f8d9 0000 	ldr.w	r0, [r9]
 800575c:	b110      	cbz	r0, 8005764 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800575e:	6803      	ldr	r3, [r0, #0]
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	4798      	blx	r3
    if (*currentScreen)
 8005764:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800582c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005768:	f8d8 0000 	ldr.w	r0, [r8]
 800576c:	b110      	cbz	r0, 8005774 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800576e:	6803      	ldr	r3, [r0, #0]
 8005770:	695b      	ldr	r3, [r3, #20]
 8005772:	4798      	blx	r3
    if (*currentPresenter)
 8005774:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005778:	b110      	cbz	r0, 8005780 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800577a:	6803      	ldr	r3, [r0, #0]
 800577c:	685b      	ldr	r3, [r3, #4]
 800577e:	4798      	blx	r3
    if (*currentScreen)
 8005780:	f8d8 0000 	ldr.w	r0, [r8]
 8005784:	b110      	cbz	r0, 800578c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005786:	6803      	ldr	r3, [r0, #0]
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	4798      	blx	r3
    if (*currentPresenter)
 800578c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005790:	b110      	cbz	r0, 8005798 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005792:	6803      	ldr	r3, [r0, #0]
 8005794:	689b      	ldr	r3, [r3, #8]
 8005796:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005798:	68e0      	ldr	r0, [r4, #12]
 800579a:	2100      	movs	r1, #0
 800579c:	f7ff fc56 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80057a0:	2114      	movs	r1, #20
 80057a2:	4605      	mov	r5, r0
 80057a4:	f7ff fc56 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80057a8:	68a0      	ldr	r0, [r4, #8]
 80057aa:	6803      	ldr	r3, [r0, #0]
 80057ac:	2100      	movs	r1, #0
 80057ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057b0:	4798      	blx	r3
 80057b2:	4606      	mov	r6, r0
 80057b4:	f003 fdc8 	bl	8009348 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80057b8:	6860      	ldr	r0, [r4, #4]
 80057ba:	6803      	ldr	r3, [r0, #0]
 80057bc:	2100      	movs	r1, #0
 80057be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057c0:	4798      	blx	r3
 80057c2:	4631      	mov	r1, r6
 80057c4:	4604      	mov	r4, r0
 80057c6:	f003 fd99 	bl	80092fc <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80057ca:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80057ce:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80057d2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80057d6:	b1dc      	cbz	r4, 8005810 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80057d8:	1d23      	adds	r3, r4, #4
 80057da:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80057de:	6833      	ldr	r3, [r6, #0]
 80057e0:	f8c4 a008 	str.w	sl, [r4, #8]
 80057e4:	4630      	mov	r0, r6
 80057e6:	68db      	ldr	r3, [r3, #12]
 80057e8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80057ea:	4798      	blx	r3
    newPresenter->activate();
 80057ec:	6823      	ldr	r3, [r4, #0]
 80057ee:	4620      	mov	r0, r4
 80057f0:	681b      	ldr	r3, [r3, #0]
 80057f2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80057f4:	4629      	mov	r1, r5
 80057f6:	4630      	mov	r0, r6
 80057f8:	f013 f94e 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80057fc:	682b      	ldr	r3, [r5, #0]
 80057fe:	4628      	mov	r0, r5
 8005800:	691b      	ldr	r3, [r3, #16]
 8005802:	4798      	blx	r3
    newTransition->invalidate();
 8005804:	682b      	ldr	r3, [r5, #0]
 8005806:	4628      	mov	r0, r5
 8005808:	695b      	ldr	r3, [r3, #20]
}
 800580a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800580e:	4718      	bx	r3
    model->bind(newPresenter);
 8005810:	4623      	mov	r3, r4
 8005812:	e7e2      	b.n	80057da <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005814:	0802d8dc 	.word	0x0802d8dc
 8005818:	0802e66f 	.word	0x0802e66f
 800581c:	0802da78 	.word	0x0802da78
 8005820:	0802dabf 	.word	0x0802dabf
 8005824:	0802db62 	.word	0x0802db62
 8005828:	20013884 	.word	0x20013884
 800582c:	20013880 	.word	0x20013880

08005830 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005830:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005834:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005838:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800583a:	68a0      	ldr	r0, [r4, #8]
 800583c:	6803      	ldr	r3, [r0, #0]
 800583e:	6a1b      	ldr	r3, [r3, #32]
 8005840:	4798      	blx	r3
 8005842:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005846:	4298      	cmp	r0, r3
 8005848:	d805      	bhi.n	8005856 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800584a:	4b42      	ldr	r3, [pc, #264]	; (8005954 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 800584c:	4a42      	ldr	r2, [pc, #264]	; (8005958 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800584e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005850:	4842      	ldr	r0, [pc, #264]	; (800595c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005852:	f026 f9bd 	bl	802bbd0 <__assert_func>
 8005856:	6860      	ldr	r0, [r4, #4]
 8005858:	6803      	ldr	r3, [r0, #0]
 800585a:	6a1b      	ldr	r3, [r3, #32]
 800585c:	4798      	blx	r3
 800585e:	280f      	cmp	r0, #15
 8005860:	d803      	bhi.n	800586a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005862:	4b3f      	ldr	r3, [pc, #252]	; (8005960 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005864:	4a3c      	ldr	r2, [pc, #240]	; (8005958 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005866:	21a4      	movs	r1, #164	; 0xa4
 8005868:	e7f2      	b.n	8005850 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800586a:	68e0      	ldr	r0, [r4, #12]
 800586c:	6803      	ldr	r3, [r0, #0]
 800586e:	6a1b      	ldr	r3, [r3, #32]
 8005870:	4798      	blx	r3
 8005872:	2837      	cmp	r0, #55	; 0x37
 8005874:	d803      	bhi.n	800587e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005876:	4b3b      	ldr	r3, [pc, #236]	; (8005964 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005878:	4a37      	ldr	r2, [pc, #220]	; (8005958 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800587a:	21a5      	movs	r1, #165	; 0xa5
 800587c:	e7e8      	b.n	8005850 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800587e:	f011 fadf 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005882:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005968 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8005886:	3004      	adds	r0, #4
 8005888:	f011 fb40 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800588c:	f8d9 0000 	ldr.w	r0, [r9]
 8005890:	b110      	cbz	r0, 8005898 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005892:	6803      	ldr	r3, [r0, #0]
 8005894:	68db      	ldr	r3, [r3, #12]
 8005896:	4798      	blx	r3
    if (*currentTrans)
 8005898:	f8d9 0000 	ldr.w	r0, [r9]
 800589c:	b110      	cbz	r0, 80058a4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800589e:	6803      	ldr	r3, [r0, #0]
 80058a0:	681b      	ldr	r3, [r3, #0]
 80058a2:	4798      	blx	r3
    if (*currentScreen)
 80058a4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800596c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80058a8:	f8d8 0000 	ldr.w	r0, [r8]
 80058ac:	b110      	cbz	r0, 80058b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80058ae:	6803      	ldr	r3, [r0, #0]
 80058b0:	695b      	ldr	r3, [r3, #20]
 80058b2:	4798      	blx	r3
    if (*currentPresenter)
 80058b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80058b8:	b110      	cbz	r0, 80058c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80058ba:	6803      	ldr	r3, [r0, #0]
 80058bc:	685b      	ldr	r3, [r3, #4]
 80058be:	4798      	blx	r3
    if (*currentScreen)
 80058c0:	f8d8 0000 	ldr.w	r0, [r8]
 80058c4:	b110      	cbz	r0, 80058cc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80058c6:	6803      	ldr	r3, [r0, #0]
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	4798      	blx	r3
    if (*currentPresenter)
 80058cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80058d0:	b110      	cbz	r0, 80058d8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80058d2:	6803      	ldr	r3, [r0, #0]
 80058d4:	689b      	ldr	r3, [r3, #8]
 80058d6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80058d8:	68e0      	ldr	r0, [r4, #12]
 80058da:	2100      	movs	r1, #0
 80058dc:	f7ff fbb6 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80058e0:	2114      	movs	r1, #20
 80058e2:	4605      	mov	r5, r0
 80058e4:	f7ff fbb6 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80058e8:	68a0      	ldr	r0, [r4, #8]
 80058ea:	6803      	ldr	r3, [r0, #0]
 80058ec:	2100      	movs	r1, #0
 80058ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058f0:	4798      	blx	r3
 80058f2:	4606      	mov	r6, r0
 80058f4:	f003 fc88 	bl	8009208 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80058f8:	6860      	ldr	r0, [r4, #4]
 80058fa:	6803      	ldr	r3, [r0, #0]
 80058fc:	2100      	movs	r1, #0
 80058fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005900:	4798      	blx	r3
 8005902:	4631      	mov	r1, r6
 8005904:	4604      	mov	r4, r0
 8005906:	f003 fc59 	bl	80091bc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800590a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800590e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005912:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005916:	b1dc      	cbz	r4, 8005950 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005918:	1d23      	adds	r3, r4, #4
 800591a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800591e:	6833      	ldr	r3, [r6, #0]
 8005920:	f8c4 a008 	str.w	sl, [r4, #8]
 8005924:	4630      	mov	r0, r6
 8005926:	68db      	ldr	r3, [r3, #12]
 8005928:	63f4      	str	r4, [r6, #60]	; 0x3c
 800592a:	4798      	blx	r3
    newPresenter->activate();
 800592c:	6823      	ldr	r3, [r4, #0]
 800592e:	4620      	mov	r0, r4
 8005930:	681b      	ldr	r3, [r3, #0]
 8005932:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005934:	4629      	mov	r1, r5
 8005936:	4630      	mov	r0, r6
 8005938:	f013 f8ae 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800593c:	682b      	ldr	r3, [r5, #0]
 800593e:	4628      	mov	r0, r5
 8005940:	691b      	ldr	r3, [r3, #16]
 8005942:	4798      	blx	r3
    newTransition->invalidate();
 8005944:	682b      	ldr	r3, [r5, #0]
 8005946:	4628      	mov	r0, r5
 8005948:	695b      	ldr	r3, [r3, #20]
}
 800594a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800594e:	4718      	bx	r3
    model->bind(newPresenter);
 8005950:	4623      	mov	r3, r4
 8005952:	e7e2      	b.n	800591a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005954:	0802d8dc 	.word	0x0802d8dc
 8005958:	0802e7b1 	.word	0x0802e7b1
 800595c:	0802da78 	.word	0x0802da78
 8005960:	0802dabf 	.word	0x0802dabf
 8005964:	0802db62 	.word	0x0802db62
 8005968:	20013884 	.word	0x20013884
 800596c:	20013880 	.word	0x20013880

08005970 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005974:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005978:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800597a:	68a0      	ldr	r0, [r4, #8]
 800597c:	6803      	ldr	r3, [r0, #0]
 800597e:	6a1b      	ldr	r3, [r3, #32]
 8005980:	4798      	blx	r3
 8005982:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005986:	d205      	bcs.n	8005994 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8005988:	4b42      	ldr	r3, [pc, #264]	; (8005a94 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 800598a:	4a43      	ldr	r2, [pc, #268]	; (8005a98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 800598c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800598e:	4843      	ldr	r0, [pc, #268]	; (8005a9c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8005990:	f026 f91e 	bl	802bbd0 <__assert_func>
 8005994:	6860      	ldr	r0, [r4, #4]
 8005996:	6803      	ldr	r3, [r0, #0]
 8005998:	6a1b      	ldr	r3, [r3, #32]
 800599a:	4798      	blx	r3
 800599c:	280f      	cmp	r0, #15
 800599e:	d803      	bhi.n	80059a8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80059a0:	4b3f      	ldr	r3, [pc, #252]	; (8005aa0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80059a2:	4a3d      	ldr	r2, [pc, #244]	; (8005a98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80059a4:	21a4      	movs	r1, #164	; 0xa4
 80059a6:	e7f2      	b.n	800598e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80059a8:	68e0      	ldr	r0, [r4, #12]
 80059aa:	6803      	ldr	r3, [r0, #0]
 80059ac:	6a1b      	ldr	r3, [r3, #32]
 80059ae:	4798      	blx	r3
 80059b0:	2837      	cmp	r0, #55	; 0x37
 80059b2:	d803      	bhi.n	80059bc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80059b4:	4b3b      	ldr	r3, [pc, #236]	; (8005aa4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80059b6:	4a38      	ldr	r2, [pc, #224]	; (8005a98 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80059b8:	21a5      	movs	r1, #165	; 0xa5
 80059ba:	e7e8      	b.n	800598e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80059bc:	f011 fa40 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80059c0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005aa8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80059c4:	3004      	adds	r0, #4
 80059c6:	f011 faa1 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80059ca:	f8d9 0000 	ldr.w	r0, [r9]
 80059ce:	b110      	cbz	r0, 80059d6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80059d0:	6803      	ldr	r3, [r0, #0]
 80059d2:	68db      	ldr	r3, [r3, #12]
 80059d4:	4798      	blx	r3
    if (*currentTrans)
 80059d6:	f8d9 0000 	ldr.w	r0, [r9]
 80059da:	b110      	cbz	r0, 80059e2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80059dc:	6803      	ldr	r3, [r0, #0]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	4798      	blx	r3
    if (*currentScreen)
 80059e2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005aac <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 80059e6:	f8d8 0000 	ldr.w	r0, [r8]
 80059ea:	b110      	cbz	r0, 80059f2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80059ec:	6803      	ldr	r3, [r0, #0]
 80059ee:	695b      	ldr	r3, [r3, #20]
 80059f0:	4798      	blx	r3
    if (*currentPresenter)
 80059f2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059f6:	b110      	cbz	r0, 80059fe <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80059f8:	6803      	ldr	r3, [r0, #0]
 80059fa:	685b      	ldr	r3, [r3, #4]
 80059fc:	4798      	blx	r3
    if (*currentScreen)
 80059fe:	f8d8 0000 	ldr.w	r0, [r8]
 8005a02:	b110      	cbz	r0, 8005a0a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a04:	6803      	ldr	r3, [r0, #0]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	4798      	blx	r3
    if (*currentPresenter)
 8005a0a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a0e:	b110      	cbz	r0, 8005a16 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a10:	6803      	ldr	r3, [r0, #0]
 8005a12:	689b      	ldr	r3, [r3, #8]
 8005a14:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a16:	68e0      	ldr	r0, [r4, #12]
 8005a18:	2100      	movs	r1, #0
 8005a1a:	f7ff fb17 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a1e:	2114      	movs	r1, #20
 8005a20:	4605      	mov	r5, r0
 8005a22:	f7ff fb17 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a26:	68a0      	ldr	r0, [r4, #8]
 8005a28:	6803      	ldr	r3, [r0, #0]
 8005a2a:	2100      	movs	r1, #0
 8005a2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a2e:	4798      	blx	r3
 8005a30:	4606      	mov	r6, r0
 8005a32:	f003 fb8f 	bl	8009154 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a36:	6860      	ldr	r0, [r4, #4]
 8005a38:	6803      	ldr	r3, [r0, #0]
 8005a3a:	2100      	movs	r1, #0
 8005a3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a3e:	4798      	blx	r3
 8005a40:	4631      	mov	r1, r6
 8005a42:	4604      	mov	r4, r0
 8005a44:	f003 fb60 	bl	8009108 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005a48:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005a4c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005a50:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005a54:	b1dc      	cbz	r4, 8005a8e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005a56:	1d23      	adds	r3, r4, #4
 8005a58:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005a5c:	6833      	ldr	r3, [r6, #0]
 8005a5e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005a62:	4630      	mov	r0, r6
 8005a64:	68db      	ldr	r3, [r3, #12]
 8005a66:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005a68:	4798      	blx	r3
    newPresenter->activate();
 8005a6a:	6823      	ldr	r3, [r4, #0]
 8005a6c:	4620      	mov	r0, r4
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005a72:	4629      	mov	r1, r5
 8005a74:	4630      	mov	r0, r6
 8005a76:	f013 f80f 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005a7a:	682b      	ldr	r3, [r5, #0]
 8005a7c:	4628      	mov	r0, r5
 8005a7e:	691b      	ldr	r3, [r3, #16]
 8005a80:	4798      	blx	r3
    newTransition->invalidate();
 8005a82:	682b      	ldr	r3, [r5, #0]
 8005a84:	4628      	mov	r0, r5
 8005a86:	695b      	ldr	r3, [r3, #20]
}
 8005a88:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a8c:	4718      	bx	r3
    model->bind(newPresenter);
 8005a8e:	4623      	mov	r3, r4
 8005a90:	e7e2      	b.n	8005a58 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8005a92:	bf00      	nop
 8005a94:	0802d8dc 	.word	0x0802d8dc
 8005a98:	0802e8f3 	.word	0x0802e8f3
 8005a9c:	0802da78 	.word	0x0802da78
 8005aa0:	0802dabf 	.word	0x0802dabf
 8005aa4:	0802db62 	.word	0x0802db62
 8005aa8:	20013884 	.word	0x20013884
 8005aac:	20013880 	.word	0x20013880

08005ab0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005ab0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005ab4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005ab8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005aba:	68a0      	ldr	r0, [r4, #8]
 8005abc:	6803      	ldr	r3, [r0, #0]
 8005abe:	6a1b      	ldr	r3, [r3, #32]
 8005ac0:	4798      	blx	r3
 8005ac2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005ac6:	d205      	bcs.n	8005ad4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005ac8:	4b42      	ldr	r3, [pc, #264]	; (8005bd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005aca:	4a43      	ldr	r2, [pc, #268]	; (8005bd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005acc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005ace:	4843      	ldr	r0, [pc, #268]	; (8005bdc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005ad0:	f026 f87e 	bl	802bbd0 <__assert_func>
 8005ad4:	6860      	ldr	r0, [r4, #4]
 8005ad6:	6803      	ldr	r3, [r0, #0]
 8005ad8:	6a1b      	ldr	r3, [r3, #32]
 8005ada:	4798      	blx	r3
 8005adc:	280f      	cmp	r0, #15
 8005ade:	d803      	bhi.n	8005ae8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005ae0:	4b3f      	ldr	r3, [pc, #252]	; (8005be0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005ae2:	4a3d      	ldr	r2, [pc, #244]	; (8005bd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005ae4:	21a4      	movs	r1, #164	; 0xa4
 8005ae6:	e7f2      	b.n	8005ace <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005ae8:	68e0      	ldr	r0, [r4, #12]
 8005aea:	6803      	ldr	r3, [r0, #0]
 8005aec:	6a1b      	ldr	r3, [r3, #32]
 8005aee:	4798      	blx	r3
 8005af0:	2837      	cmp	r0, #55	; 0x37
 8005af2:	d803      	bhi.n	8005afc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005af4:	4b3b      	ldr	r3, [pc, #236]	; (8005be4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005af6:	4a38      	ldr	r2, [pc, #224]	; (8005bd8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005af8:	21a5      	movs	r1, #165	; 0xa5
 8005afa:	e7e8      	b.n	8005ace <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005afc:	f011 f9a0 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005b00:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005be8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005b04:	3004      	adds	r0, #4
 8005b06:	f011 fa01 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005b0a:	f8d9 0000 	ldr.w	r0, [r9]
 8005b0e:	b110      	cbz	r0, 8005b16 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005b10:	6803      	ldr	r3, [r0, #0]
 8005b12:	68db      	ldr	r3, [r3, #12]
 8005b14:	4798      	blx	r3
    if (*currentTrans)
 8005b16:	f8d9 0000 	ldr.w	r0, [r9]
 8005b1a:	b110      	cbz	r0, 8005b22 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005b1c:	6803      	ldr	r3, [r0, #0]
 8005b1e:	681b      	ldr	r3, [r3, #0]
 8005b20:	4798      	blx	r3
    if (*currentScreen)
 8005b22:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005bec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005b26:	f8d8 0000 	ldr.w	r0, [r8]
 8005b2a:	b110      	cbz	r0, 8005b32 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005b2c:	6803      	ldr	r3, [r0, #0]
 8005b2e:	695b      	ldr	r3, [r3, #20]
 8005b30:	4798      	blx	r3
    if (*currentPresenter)
 8005b32:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005b36:	b110      	cbz	r0, 8005b3e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005b38:	6803      	ldr	r3, [r0, #0]
 8005b3a:	685b      	ldr	r3, [r3, #4]
 8005b3c:	4798      	blx	r3
    if (*currentScreen)
 8005b3e:	f8d8 0000 	ldr.w	r0, [r8]
 8005b42:	b110      	cbz	r0, 8005b4a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005b44:	6803      	ldr	r3, [r0, #0]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	4798      	blx	r3
    if (*currentPresenter)
 8005b4a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005b4e:	b110      	cbz	r0, 8005b56 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005b50:	6803      	ldr	r3, [r0, #0]
 8005b52:	689b      	ldr	r3, [r3, #8]
 8005b54:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005b56:	68e0      	ldr	r0, [r4, #12]
 8005b58:	2100      	movs	r1, #0
 8005b5a:	f7ff fa77 	bl	800504c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005b5e:	2114      	movs	r1, #20
 8005b60:	4605      	mov	r5, r0
 8005b62:	f7ff fa77 	bl	8005054 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005b66:	68a0      	ldr	r0, [r4, #8]
 8005b68:	6803      	ldr	r3, [r0, #0]
 8005b6a:	2100      	movs	r1, #0
 8005b6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b6e:	4798      	blx	r3
 8005b70:	4606      	mov	r6, r0
 8005b72:	f003 f9ab 	bl	8008ecc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005b76:	6860      	ldr	r0, [r4, #4]
 8005b78:	6803      	ldr	r3, [r0, #0]
 8005b7a:	2100      	movs	r1, #0
 8005b7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b7e:	4798      	blx	r3
 8005b80:	4631      	mov	r1, r6
 8005b82:	4604      	mov	r4, r0
 8005b84:	f003 f97c 	bl	8008e80 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005b88:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005b8c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005b90:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005b94:	b1dc      	cbz	r4, 8005bce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005b96:	1d23      	adds	r3, r4, #4
 8005b98:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005b9c:	6833      	ldr	r3, [r6, #0]
 8005b9e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ba2:	4630      	mov	r0, r6
 8005ba4:	68db      	ldr	r3, [r3, #12]
 8005ba6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ba8:	4798      	blx	r3
    newPresenter->activate();
 8005baa:	6823      	ldr	r3, [r4, #0]
 8005bac:	4620      	mov	r0, r4
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005bb2:	4629      	mov	r1, r5
 8005bb4:	4630      	mov	r0, r6
 8005bb6:	f012 ff6f 	bl	8018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005bba:	682b      	ldr	r3, [r5, #0]
 8005bbc:	4628      	mov	r0, r5
 8005bbe:	691b      	ldr	r3, [r3, #16]
 8005bc0:	4798      	blx	r3
    newTransition->invalidate();
 8005bc2:	682b      	ldr	r3, [r5, #0]
 8005bc4:	4628      	mov	r0, r5
 8005bc6:	695b      	ldr	r3, [r3, #20]
}
 8005bc8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bcc:	4718      	bx	r3
    model->bind(newPresenter);
 8005bce:	4623      	mov	r3, r4
 8005bd0:	e7e2      	b.n	8005b98 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005bd2:	bf00      	nop
 8005bd4:	0802d8dc 	.word	0x0802d8dc
 8005bd8:	0802ea1f 	.word	0x0802ea1f
 8005bdc:	0802da78 	.word	0x0802da78
 8005be0:	0802dabf 	.word	0x0802dabf
 8005be4:	0802db62 	.word	0x0802db62
 8005be8:	20013884 	.word	0x20013884
 8005bec:	20013880 	.word	0x20013880

08005bf0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005bf0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005bf2:	4770      	bx	lr

08005bf4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005bf4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005bf6:	4770      	bx	lr

08005bf8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005bf8:	4770      	bx	lr

08005bfa <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005bfa:	888b      	ldrh	r3, [r1, #4]
 8005bfc:	69c0      	ldr	r0, [r0, #28]
 8005bfe:	680a      	ldr	r2, [r1, #0]
 8005c00:	0adb      	lsrs	r3, r3, #11
 8005c02:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005c06:	4410      	add	r0, r2
 8005c08:	4770      	bx	lr

08005c0a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005c0a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005c0c:	b1c2      	cbz	r2, 8005c40 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005c0e:	7b13      	ldrb	r3, [r2, #12]
 8005c10:	b1b3      	cbz	r3, 8005c40 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005c12:	7b54      	ldrb	r4, [r2, #13]
 8005c14:	7ad2      	ldrb	r2, [r2, #11]
 8005c16:	0224      	lsls	r4, r4, #8
 8005c18:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005c1c:	4314      	orrs	r4, r2
 8005c1e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005c20:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005c22:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005c26:	8813      	ldrh	r3, [r2, #0]
 8005c28:	428b      	cmp	r3, r1
 8005c2a:	d102      	bne.n	8005c32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005c2c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005c30:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005c32:	d805      	bhi.n	8005c40 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005c34:	3801      	subs	r0, #1
 8005c36:	b280      	uxth	r0, r0
 8005c38:	3204      	adds	r2, #4
 8005c3a:	2800      	cmp	r0, #0
 8005c3c:	d1f3      	bne.n	8005c26 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005c3e:	e7f7      	b.n	8005c30 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005c40:	2000      	movs	r0, #0
 8005c42:	e7f5      	b.n	8005c30 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005c44 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005c44:	b510      	push	{r4, lr}
 8005c46:	212c      	movs	r1, #44	; 0x2c
 8005c48:	4604      	mov	r4, r0
 8005c4a:	f025 f9ae 	bl	802afaa <_ZdlPvj>
 8005c4e:	4620      	mov	r0, r4
 8005c50:	bd10      	pop	{r4, pc}
	...

08005c54 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005c54:	b530      	push	{r4, r5, lr}
 8005c56:	b08b      	sub	sp, #44	; 0x2c
 8005c58:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005c5a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005c5e:	9508      	str	r5, [sp, #32]
 8005c60:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005c64:	9507      	str	r5, [sp, #28]
 8005c66:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005c6a:	9506      	str	r5, [sp, #24]
 8005c6c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005c70:	9505      	str	r5, [sp, #20]
 8005c72:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005c76:	9504      	str	r5, [sp, #16]
 8005c78:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005c7c:	9503      	str	r5, [sp, #12]
 8005c7e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005c82:	9502      	str	r5, [sp, #8]
 8005c84:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005c88:	9501      	str	r5, [sp, #4]
 8005c8a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005c8e:	9500      	str	r5, [sp, #0]
 8005c90:	f012 fa6c 	bl	801816c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005c94:	4b06      	ldr	r3, [pc, #24]	; (8005cb0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005c96:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005c98:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005c9a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005c9c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005c9e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005ca0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005ca2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005ca4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005ca6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005ca8:	4620      	mov	r0, r4
 8005caa:	b00b      	add	sp, #44	; 0x2c
 8005cac:	bd30      	pop	{r4, r5, pc}
 8005cae:	bf00      	nop
 8005cb0:	0802ec88 	.word	0x0802ec88

08005cb4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005cb4:	4770      	bx	lr

08005cb6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005cb6:	4770      	bx	lr

08005cb8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005cb8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005cba:	68c2      	ldr	r2, [r0, #12]
 8005cbc:	6844      	ldr	r4, [r0, #4]
 8005cbe:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005cc0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005cc2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005cc6:	07d2      	lsls	r2, r2, #31
 8005cc8:	bf48      	it	mi
 8005cca:	5962      	ldrmi	r2, [r4, r5]
 8005ccc:	689b      	ldr	r3, [r3, #8]
    }
 8005cce:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005cd0:	bf48      	it	mi
 8005cd2:	58d3      	ldrmi	r3, [r2, r3]
 8005cd4:	4718      	bx	r3

08005cd6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005cd6:	6843      	ldr	r3, [r0, #4]
 8005cd8:	b12b      	cbz	r3, 8005ce6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005cda:	6883      	ldr	r3, [r0, #8]
 8005cdc:	b92b      	cbnz	r3, 8005cea <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005cde:	68c0      	ldr	r0, [r0, #12]
 8005ce0:	f000 0001 	and.w	r0, r0, #1
 8005ce4:	4770      	bx	lr
 8005ce6:	4618      	mov	r0, r3
 8005ce8:	4770      	bx	lr
 8005cea:	2001      	movs	r0, #1
    }
 8005cec:	4770      	bx	lr

08005cee <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005cee:	b510      	push	{r4, lr}
 8005cf0:	2110      	movs	r1, #16
 8005cf2:	4604      	mov	r4, r0
 8005cf4:	f025 f959 	bl	802afaa <_ZdlPvj>
 8005cf8:	4620      	mov	r0, r4
 8005cfa:	bd10      	pop	{r4, pc}

08005cfc <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005cfc:	b510      	push	{r4, lr}
 8005cfe:	4b03      	ldr	r3, [pc, #12]	; (8005d0c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005d00:	6003      	str	r3, [r0, #0]
 8005d02:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d04:	f00f fb9a 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d08:	4620      	mov	r0, r4
 8005d0a:	bd10      	pop	{r4, pc}
 8005d0c:	0802ed00 	.word	0x0802ed00

08005d10 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005d10:	b507      	push	{r0, r1, r2, lr}
 8005d12:	4b07      	ldr	r3, [pc, #28]	; (8005d30 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005d14:	6003      	str	r3, [r0, #0]
 8005d16:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d18:	f00f fb90 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d1c:	9801      	ldr	r0, [sp, #4]
 8005d1e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005d22:	f025 f942 	bl	802afaa <_ZdlPvj>
 8005d26:	9801      	ldr	r0, [sp, #4]
 8005d28:	b003      	add	sp, #12
 8005d2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005d2e:	bf00      	nop
 8005d30:	0802ed00 	.word	0x0802ed00

08005d34 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005d34:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005d36:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005d3a:	4299      	cmp	r1, r3
{
 8005d3c:	4604      	mov	r4, r0
 8005d3e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005d40:	d103      	bne.n	8005d4a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005d42:	f011 f87d 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005d46:	f7fe feaf 	bl	8004aa8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005d4a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005d4e:	429d      	cmp	r5, r3
 8005d50:	d103      	bne.n	8005d5a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005d52:	f011 f875 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8005d56:	f7fe ff37 	bl	8004bc8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005d5a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005d5e:	429d      	cmp	r5, r3
 8005d60:	d103      	bne.n	8005d6a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005d62:	f011 f86d 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005d66:	f7fe ff3f 	bl	8004be8 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005d6a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005d6e:	42a5      	cmp	r5, r4
 8005d70:	d10a      	bne.n	8005d88 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005d72:	4806      	ldr	r0, [pc, #24]	; (8005d8c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005d74:	2200      	movs	r2, #0
 8005d76:	2120      	movs	r1, #32
 8005d78:	f004 fa42 	bl	800a200 <HAL_GPIO_WritePin>
 8005d7c:	f011 f860 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005d80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005d84:	f7fe bf40 	b.w	8004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005d88:	bd38      	pop	{r3, r4, r5, pc}
 8005d8a:	bf00      	nop
 8005d8c:	40021000 	.word	0x40021000

08005d90 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d94:	ed2d 8b06 	vpush	{d8-d10}
 8005d98:	4604      	mov	r4, r0
 8005d9a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005d9c:	46a3      	mov	fp, r4
        : presenter(0)
 8005d9e:	2500      	movs	r5, #0
 8005da0:	f012 fcce 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 8005da4:	4b6a      	ldr	r3, [pc, #424]	; (8005f50 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005da6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005da8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005dac:	2226      	movs	r2, #38	; 0x26
 8005dae:	4629      	mov	r1, r5
 8005db0:	4658      	mov	r0, fp
 8005db2:	f026 f912 	bl	802bfda <memset>
 8005db6:	4658      	mov	r0, fp
 8005db8:	f7fc fec6 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8005dbc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005dc0:	26ff      	movs	r6, #255	; 0xff
 8005dc2:	4b64      	ldr	r3, [pc, #400]	; (8005f54 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005dc4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005dc6:	2226      	movs	r2, #38	; 0x26
 8005dc8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005dcc:	4629      	mov	r1, r5
 8005dce:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005dd2:	4650      	mov	r0, sl
        : color(col)
 8005dd4:	66a5      	str	r5, [r4, #104]	; 0x68
 8005dd6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005dda:	f026 f8fe 	bl	802bfda <memset>
 8005dde:	4650      	mov	r0, sl
 8005de0:	f7fc feb2 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8005de4:	4b5c      	ldr	r3, [pc, #368]	; (8005f58 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005de6:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005de8:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005dec:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005df0:	a90c      	add	r1, sp, #48	; 0x30
 8005df2:	4650      	mov	r0, sl
 8005df4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005df8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005dfc:	f00e fb21 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005e00:	4648      	mov	r0, r9
 8005e02:	f7fc ff05 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8005e06:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005e0a:	4b54      	ldr	r3, [pc, #336]	; (8005f5c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005e0c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005e10:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005e14:	4638      	mov	r0, r7
 8005e16:	f00d f807 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 8005e1a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005e1e:	4618      	mov	r0, r3
 8005e20:	9303      	str	r3, [sp, #12]
 8005e22:	f7fc fc95 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005e26:	4b4e      	ldr	r3, [pc, #312]	; (8005f60 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005e28:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005e2c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005e30:	3324      	adds	r3, #36	; 0x24
 8005e32:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005e36:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005e3a:	4640      	mov	r0, r8
 8005e3c:	f7fc fee8 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8005e40:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005e44:	4618      	mov	r0, r3
 8005e46:	ee08 3a10 	vmov	s16, r3
 8005e4a:	f7fc fee1 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8005e4e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005e52:	4618      	mov	r0, r3
 8005e54:	ee08 3a90 	vmov	s17, r3
 8005e58:	f7fc feda 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8005e5c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005e60:	4618      	mov	r0, r3
 8005e62:	ee09 3a10 	vmov	s18, r3
 8005e66:	f00e fc23 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005e6a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005e6e:	4618      	mov	r0, r3
 8005e70:	ee09 3a90 	vmov	s19, r3
 8005e74:	f00e fc1c 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005e78:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005e7c:	4618      	mov	r0, r3
 8005e7e:	ee0a 3a10 	vmov	s20, r3
 8005e82:	f00e fc15 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005e86:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005e8a:	4618      	mov	r0, r3
 8005e8c:	ee0a 3a90 	vmov	s21, r3
 8005e90:	f00e fab0 	bl	80143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005e94:	4a33      	ldr	r2, [pc, #204]	; (8005f64 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005e96:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005e9a:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005e9e:	4a32      	ldr	r2, [pc, #200]	; (8005f68 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005ea0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005ea4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005ea8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005eac:	f00f fabc 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005eb0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005eb4:	462a      	mov	r2, r5
 8005eb6:	4658      	mov	r0, fp
 8005eb8:	9300      	str	r3, [sp, #0]
 8005eba:	4629      	mov	r1, r5
 8005ebc:	23f0      	movs	r3, #240	; 0xf0
 8005ebe:	f7fc fe1e 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ec2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005ec4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005ec8:	66a3      	str	r3, [r4, #104]	; 0x68
 8005eca:	4659      	mov	r1, fp
 8005ecc:	4630      	mov	r0, r6
 8005ece:	f00a fedf 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005ed2:	462a      	mov	r2, r5
 8005ed4:	4650      	mov	r0, sl
 8005ed6:	4629      	mov	r1, r5
 8005ed8:	f7fc fe04 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8005edc:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005ede:	4650      	mov	r0, sl
 8005ee0:	a90c      	add	r1, sp, #48	; 0x30
 8005ee2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005ee6:	f00e faac 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005eea:	4651      	mov	r1, sl
 8005eec:	4630      	mov	r0, r6
 8005eee:	f00a fecf 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005ef2:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005ef6:	2156      	movs	r1, #86	; 0x56
 8005ef8:	4648      	mov	r0, r9
 8005efa:	f7fc fdf3 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8005efe:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005f02:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005f06:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005f0a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005f0e:	4650      	mov	r0, sl
 8005f10:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005f14:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005f18:	4649      	mov	r1, r9
 8005f1a:	4798      	blx	r3
 8005f1c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005f20:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005f24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f28:	4b10      	ldr	r3, [pc, #64]	; (8005f6c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005f2a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005f2c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005f30:	b92b      	cbnz	r3, 8005f3e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005f32:	4b0f      	ldr	r3, [pc, #60]	; (8005f70 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005f34:	4a0f      	ldr	r2, [pc, #60]	; (8005f74 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005f36:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f38:	480f      	ldr	r0, [pc, #60]	; (8005f78 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005f3a:	f025 fe49 	bl	802bbd0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005f3e:	4b0f      	ldr	r3, [pc, #60]	; (8005f7c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f40:	881b      	ldrh	r3, [r3, #0]
 8005f42:	2b38      	cmp	r3, #56	; 0x38
 8005f44:	d81e      	bhi.n	8005f84 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005f46:	4b0e      	ldr	r3, [pc, #56]	; (8005f80 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005f48:	4a0a      	ldr	r2, [pc, #40]	; (8005f74 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005f4a:	2161      	movs	r1, #97	; 0x61
 8005f4c:	e7f4      	b.n	8005f38 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005f4e:	bf00      	nop
 8005f50:	0802ed00 	.word	0x0802ed00
 8005f54:	0802fcb4 	.word	0x0802fcb4
 8005f58:	0802ff00 	.word	0x0802ff00
 8005f5c:	0802d800 	.word	0x0802d800
 8005f60:	0802f9e8 	.word	0x0802f9e8
 8005f64:	0802ece8 	.word	0x0802ece8
 8005f68:	08005d35 	.word	0x08005d35
 8005f6c:	20013894 	.word	0x20013894
 8005f70:	0802d5b0 	.word	0x0802d5b0
 8005f74:	0802d6b5 	.word	0x0802d6b5
 8005f78:	0802d62d 	.word	0x0802d62d
 8005f7c:	20013898 	.word	0x20013898
 8005f80:	0802d674 	.word	0x0802d674
        return texts->getText(typedTextId);
 8005f84:	4ba5      	ldr	r3, [pc, #660]	; (800621c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005f86:	2138      	movs	r1, #56	; 0x38
 8005f88:	6818      	ldr	r0, [r3, #0]
 8005f8a:	f002 fdaf 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8005f8e:	4aa4      	ldr	r2, [pc, #656]	; (8006220 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005f90:	4603      	mov	r3, r0
 8005f92:	2104      	movs	r1, #4
 8005f94:	4650      	mov	r0, sl
 8005f96:	f014 f901 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005f9a:	4648      	mov	r0, r9
        wc1 = value;
 8005f9c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005fa0:	f00d fc7e 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005fa4:	4b9f      	ldr	r3, [pc, #636]	; (8006224 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005fa6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005fa8:	a90c      	add	r1, sp, #48	; 0x30
 8005faa:	2339      	movs	r3, #57	; 0x39
 8005fac:	4648      	mov	r0, r9
 8005fae:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005fb2:	f00d fc95 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fb6:	4649      	mov	r1, r9
 8005fb8:	4630      	mov	r0, r6
 8005fba:	f00a fe69 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005fbe:	230a      	movs	r3, #10
 8005fc0:	9300      	str	r3, [sp, #0]
 8005fc2:	2232      	movs	r2, #50	; 0x32
 8005fc4:	23f0      	movs	r3, #240	; 0xf0
 8005fc6:	4629      	mov	r1, r5
 8005fc8:	4638      	mov	r0, r7
 8005fca:	f7fc fd98 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fce:	9b03      	ldr	r3, [sp, #12]
 8005fd0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005fd4:	22a0      	movs	r2, #160	; 0xa0
 8005fd6:	4611      	mov	r1, r2
 8005fd8:	4638      	mov	r0, r7
 8005fda:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005fde:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005fe2:	f00d f837 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005fe6:	22a0      	movs	r2, #160	; 0xa0
 8005fe8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005fec:	4638      	mov	r0, r7
 8005fee:	f00d f83c 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005ff2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005ff6:	2b20      	cmp	r3, #32
 8005ff8:	d005      	beq.n	8006006 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005ffa:	2320      	movs	r3, #32
 8005ffc:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006000:	4638      	mov	r0, r7
 8006002:	f00c ff31 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006006:	4638      	mov	r0, r7
 8006008:	2101      	movs	r1, #1
 800600a:	f00d f839 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800600e:	4639      	mov	r1, r7
 8006010:	4630      	mov	r0, r6
 8006012:	ad04      	add	r5, sp, #16
        color = newColor;
 8006014:	f04f 37ff 	mov.w	r7, #4294967295
 8006018:	f00a fe3a 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800601c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006020:	2223      	movs	r2, #35	; 0x23
 8006022:	4640      	mov	r0, r8
 8006024:	2145      	movs	r1, #69	; 0x45
 8006026:	f7fc fd5d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800602a:	4641      	mov	r1, r8
 800602c:	4628      	mov	r0, r5
        color = newColor;
 800602e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006032:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006036:	f00d f9b9 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800603a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 800603e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8006042:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006046:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800604a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006224 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 800604e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8006052:	2353      	movs	r3, #83	; 0x53
 8006054:	4649      	mov	r1, r9
 8006056:	4640      	mov	r0, r8
 8006058:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800605c:	f00d fc40 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006060:	4641      	mov	r1, r8
 8006062:	4630      	mov	r0, r6
 8006064:	f00a fe14 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006068:	ee18 0a10 	vmov	r0, s16
 800606c:	220c      	movs	r2, #12
 800606e:	2136      	movs	r1, #54	; 0x36
 8006070:	f7fc fd38 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006074:	ee18 1a10 	vmov	r1, s16
 8006078:	4628      	mov	r0, r5
        color = newColor;
 800607a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800607e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006082:	f00d f993 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006086:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800608a:	ee18 3a10 	vmov	r3, s16
 800608e:	333c      	adds	r3, #60	; 0x3c
 8006090:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006094:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8006096:	ee18 0a10 	vmov	r0, s16
 800609a:	4649      	mov	r1, r9
 800609c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80060a0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80060a4:	f00d fc1c 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060a8:	ee18 1a10 	vmov	r1, s16
 80060ac:	4630      	mov	r0, r6
 80060ae:	f00a fdef 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 80060b2:	ee18 0a90 	vmov	r0, s17
 80060b6:	223c      	movs	r2, #60	; 0x3c
 80060b8:	2158      	movs	r1, #88	; 0x58
 80060ba:	f7fc fd13 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80060be:	ee18 1a90 	vmov	r1, s17
 80060c2:	4628      	mov	r0, r5
        color = newColor;
 80060c4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80060c8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80060cc:	f00d f96e 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80060d4:	ee18 3a90 	vmov	r3, s17
 80060d8:	333c      	adds	r3, #60	; 0x3c
 80060da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060de:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 80060e0:	ee18 0a90 	vmov	r0, s17
 80060e4:	4649      	mov	r1, r9
 80060e6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80060ea:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80060ee:	f00d fbf7 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060f2:	ee18 1a90 	vmov	r1, s17
 80060f6:	4630      	mov	r0, r6
 80060f8:	f00a fdca 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80060fc:	ee19 0a10 	vmov	r0, s18
 8006100:	22f0      	movs	r2, #240	; 0xf0
 8006102:	2121      	movs	r1, #33	; 0x21
 8006104:	f7fc fcee 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006108:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800610c:	464a      	mov	r2, r9
 800610e:	f04f 0802 	mov.w	r8, #2
 8006112:	a90b      	add	r1, sp, #44	; 0x2c
 8006114:	ee19 0a10 	vmov	r0, s18
 8006118:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800611c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006120:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006124:	f00d ff97 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006128:	2355      	movs	r3, #85	; 0x55
 800612a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800612e:	350c      	adds	r5, #12
        updateTextPosition();
 8006130:	ee19 0a10 	vmov	r0, s18
 8006134:	f7fc fd1a 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006138:	ee19 1a10 	vmov	r1, s18
 800613c:	4630      	mov	r0, r6
        colorPressed = col;
 800613e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006142:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006146:	f00a fda3 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800614a:	ee19 0a90 	vmov	r0, s19
 800614e:	22aa      	movs	r2, #170	; 0xaa
 8006150:	2121      	movs	r1, #33	; 0x21
 8006152:	f7fc fcc7 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006156:	464a      	mov	r2, r9
 8006158:	a90b      	add	r1, sp, #44	; 0x2c
 800615a:	ee19 0a90 	vmov	r0, s19
 800615e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006162:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006166:	f00d ff76 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800616a:	2356      	movs	r3, #86	; 0x56
 800616c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006170:	ee19 0a90 	vmov	r0, s19
 8006174:	f7fc fcfa 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006178:	ee19 1a90 	vmov	r1, s19
 800617c:	4630      	mov	r0, r6
        colorPressed = col;
 800617e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006182:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006186:	f00a fd83 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800618a:	ee1a 0a10 	vmov	r0, s20
 800618e:	2264      	movs	r2, #100	; 0x64
 8006190:	2121      	movs	r1, #33	; 0x21
 8006192:	f7fc fca7 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006196:	464a      	mov	r2, r9
 8006198:	a90b      	add	r1, sp, #44	; 0x2c
 800619a:	ee1a 0a10 	vmov	r0, s20
 800619e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80061a2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80061a6:	f00d ff56 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80061aa:	2357      	movs	r3, #87	; 0x57
 80061ac:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80061b0:	ee1a 0a10 	vmov	r0, s20
 80061b4:	f7fc fcda 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061b8:	ee1a 1a10 	vmov	r1, s20
 80061bc:	4630      	mov	r0, r6
        colorPressed = col;
 80061be:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80061c2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80061c6:	f00a fd63 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80061ca:	ee1a 0a90 	vmov	r0, s21
 80061ce:	2205      	movs	r2, #5
 80061d0:	21c6      	movs	r1, #198	; 0xc6
 80061d2:	f7fc fc87 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80061d6:	2301      	movs	r3, #1
 80061d8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80061dc:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80061de:	ee1a 0a90 	vmov	r0, s21
 80061e2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80061e6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80061ea:	aa0a      	add	r2, sp, #40	; 0x28
 80061ec:	ab0b      	add	r3, sp, #44	; 0x2c
 80061ee:	a909      	add	r1, sp, #36	; 0x24
 80061f0:	f8cd 9000 	str.w	r9, [sp]
 80061f4:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80061f8:	f00e f867 	bl	80142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80061fc:	4630      	mov	r0, r6
 80061fe:	ee1a 1a90 	vmov	r1, s21
 8006202:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006206:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800620a:	f00a fd41 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800620e:	4620      	mov	r0, r4
 8006210:	b00f      	add	sp, #60	; 0x3c
 8006212:	ecbd 8b06 	vpop	{d8-d10}
 8006216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800621a:	bf00      	nop
 800621c:	200138a0 	.word	0x200138a0
 8006220:	0802d6ed 	.word	0x0802d6ed
 8006224:	0802d760 	.word	0x0802d760

08006228 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006228:	4770      	bx	lr

0800622a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800622a:	4770      	bx	lr

0800622c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800622c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800622e:	68c2      	ldr	r2, [r0, #12]
 8006230:	6844      	ldr	r4, [r0, #4]
 8006232:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006234:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006236:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800623a:	07d2      	lsls	r2, r2, #31
 800623c:	bf48      	it	mi
 800623e:	5962      	ldrmi	r2, [r4, r5]
 8006240:	689b      	ldr	r3, [r3, #8]
    }
 8006242:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006244:	bf48      	it	mi
 8006246:	58d3      	ldrmi	r3, [r2, r3]
 8006248:	4718      	bx	r3

0800624a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800624a:	6843      	ldr	r3, [r0, #4]
 800624c:	b12b      	cbz	r3, 800625a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800624e:	6883      	ldr	r3, [r0, #8]
 8006250:	b92b      	cbnz	r3, 800625e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006252:	68c0      	ldr	r0, [r0, #12]
 8006254:	f000 0001 	and.w	r0, r0, #1
 8006258:	4770      	bx	lr
 800625a:	4618      	mov	r0, r3
 800625c:	4770      	bx	lr
 800625e:	2001      	movs	r0, #1
    }
 8006260:	4770      	bx	lr

08006262 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006262:	b510      	push	{r4, lr}
 8006264:	2110      	movs	r1, #16
 8006266:	4604      	mov	r4, r0
 8006268:	f024 fe9f 	bl	802afaa <_ZdlPvj>
 800626c:	4620      	mov	r0, r4
 800626e:	bd10      	pop	{r4, pc}

08006270 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006270:	b510      	push	{r4, lr}
 8006272:	4b03      	ldr	r3, [pc, #12]	; (8006280 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006274:	6003      	str	r3, [r0, #0]
 8006276:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006278:	f00f f8e0 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800627c:	4620      	mov	r0, r4
 800627e:	bd10      	pop	{r4, pc}
 8006280:	0802ed4c 	.word	0x0802ed4c

08006284 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006284:	b507      	push	{r0, r1, r2, lr}
 8006286:	4b07      	ldr	r3, [pc, #28]	; (80062a4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8006288:	6003      	str	r3, [r0, #0]
 800628a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800628c:	f00f f8d6 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006290:	9801      	ldr	r0, [sp, #4]
 8006292:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006296:	f024 fe88 	bl	802afaa <_ZdlPvj>
 800629a:	9801      	ldr	r0, [sp, #4]
 800629c:	b003      	add	sp, #12
 800629e:	f85d fb04 	ldr.w	pc, [sp], #4
 80062a2:	bf00      	nop
 80062a4:	0802ed4c 	.word	0x0802ed4c

080062a8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80062a8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80062aa:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80062ae:	4299      	cmp	r1, r3
{
 80062b0:	4604      	mov	r4, r0
 80062b2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80062b4:	d103      	bne.n	80062be <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80062b6:	f010 fdc3 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80062ba:	f7fe fbe5 	bl	8004a88 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80062be:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80062c2:	429d      	cmp	r5, r3
 80062c4:	d103      	bne.n	80062ce <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80062c6:	f010 fdbb 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80062ca:	f7fe fc0d 	bl	8004ae8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80062ce:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80062d2:	42a5      	cmp	r5, r4
 80062d4:	d105      	bne.n	80062e2 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80062d6:	f010 fdb3 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80062da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80062de:	f7fe bc33 	b.w	8004b48 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 80062e2:	bd38      	pop	{r3, r4, r5, pc}

080062e4 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 80062e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062e8:	ed2d 8b06 	vpush	{d8-d10}
 80062ec:	4604      	mov	r4, r0
 80062ee:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80062f0:	46a3      	mov	fp, r4
 80062f2:	2500      	movs	r5, #0
 80062f4:	f012 fa24 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 80062f8:	4b66      	ldr	r3, [pc, #408]	; (8006494 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 80062fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80062fc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006300:	2226      	movs	r2, #38	; 0x26
 8006302:	4629      	mov	r1, r5
 8006304:	4658      	mov	r0, fp
 8006306:	f025 fe68 	bl	802bfda <memset>
 800630a:	4658      	mov	r0, fp
 800630c:	f7fc fc1c 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8006310:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006314:	26ff      	movs	r6, #255	; 0xff
 8006316:	4b60      	ldr	r3, [pc, #384]	; (8006498 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006318:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800631a:	2226      	movs	r2, #38	; 0x26
 800631c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006320:	4629      	mov	r1, r5
 8006322:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006326:	4650      	mov	r0, sl
 8006328:	66a5      	str	r5, [r4, #104]	; 0x68
 800632a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800632e:	f025 fe54 	bl	802bfda <memset>
 8006332:	4650      	mov	r0, sl
 8006334:	f7fc fc08 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8006338:	4b58      	ldr	r3, [pc, #352]	; (800649c <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800633a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800633c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006340:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006344:	a90a      	add	r1, sp, #40	; 0x28
 8006346:	4650      	mov	r0, sl
 8006348:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800634c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006350:	f00e f877 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006354:	4648      	mov	r0, r9
 8006356:	f7fc fc5b 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800635a:	4b51      	ldr	r3, [pc, #324]	; (80064a0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800635c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006360:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006364:	4618      	mov	r0, r3
 8006366:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800636a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800636e:	ee08 3a90 	vmov	s17, r3
 8006372:	f7fc fc4d 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8006376:	4638      	mov	r0, r7
 8006378:	f00c fd56 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 800637c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006380:	4618      	mov	r0, r3
 8006382:	9303      	str	r3, [sp, #12]
 8006384:	f7fc f9e4 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006388:	4b46      	ldr	r3, [pc, #280]	; (80064a4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 800638a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800638e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006392:	3324      	adds	r3, #36	; 0x24
 8006394:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006398:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 800639c:	4640      	mov	r0, r8
 800639e:	f7fc fc37 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80063a2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80063a6:	4618      	mov	r0, r3
 80063a8:	ee08 3a10 	vmov	s16, r3
 80063ac:	f7fc fc30 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80063b0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80063b4:	4618      	mov	r0, r3
 80063b6:	ee09 3a10 	vmov	s18, r3
 80063ba:	f00e f979 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063be:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80063c2:	4618      	mov	r0, r3
 80063c4:	ee09 3a90 	vmov	s19, r3
 80063c8:	f00e f972 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80063cc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80063d0:	4618      	mov	r0, r3
 80063d2:	ee0a 3a10 	vmov	s20, r3
 80063d6:	f00e f96b 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80063da:	4a33      	ldr	r2, [pc, #204]	; (80064a8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80063dc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80063e0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80063e4:	4a31      	ldr	r2, [pc, #196]	; (80064ac <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80063e6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80063ea:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80063ee:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80063f2:	f00f f819 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80063f6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80063fa:	462a      	mov	r2, r5
 80063fc:	4658      	mov	r0, fp
 80063fe:	9300      	str	r3, [sp, #0]
 8006400:	4629      	mov	r1, r5
 8006402:	23f0      	movs	r3, #240	; 0xf0
 8006404:	f7fc fb7b 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8006408:	1d26      	adds	r6, r4, #4
        color = newColor;
 800640a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800640e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006410:	4659      	mov	r1, fp
 8006412:	4630      	mov	r0, r6
 8006414:	f00a fc3c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006418:	462a      	mov	r2, r5
 800641a:	4650      	mov	r0, sl
 800641c:	4629      	mov	r1, r5
 800641e:	f7fc fb61 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006422:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006424:	4650      	mov	r0, sl
 8006426:	a90a      	add	r1, sp, #40	; 0x28
 8006428:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800642c:	f00e f809 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006430:	4651      	mov	r1, sl
 8006432:	4630      	mov	r0, r6
 8006434:	f00a fc2c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006438:	f44f 729a 	mov.w	r2, #308	; 0x134
 800643c:	2156      	movs	r1, #86	; 0x56
 800643e:	4648      	mov	r0, r9
 8006440:	f7fc fb50 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006444:	f04f 33ff 	mov.w	r3, #4294967295
 8006448:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800644c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006450:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006454:	f10d 0b10 	add.w	fp, sp, #16
 8006458:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800645c:	4649      	mov	r1, r9
 800645e:	4658      	mov	r0, fp
 8006460:	4798      	blx	r3
 8006462:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006466:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800646a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800646e:	4b10      	ldr	r3, [pc, #64]	; (80064b0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006470:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006472:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006476:	b92b      	cbnz	r3, 8006484 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006478:	4b0e      	ldr	r3, [pc, #56]	; (80064b4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 800647a:	4a0f      	ldr	r2, [pc, #60]	; (80064b8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 800647c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800647e:	480f      	ldr	r0, [pc, #60]	; (80064bc <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8006480:	f025 fba6 	bl	802bbd0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006484:	4b0e      	ldr	r3, [pc, #56]	; (80064c0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006486:	881b      	ldrh	r3, [r3, #0]
 8006488:	2b29      	cmp	r3, #41	; 0x29
 800648a:	d81d      	bhi.n	80064c8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 800648c:	4b0d      	ldr	r3, [pc, #52]	; (80064c4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 800648e:	4a0a      	ldr	r2, [pc, #40]	; (80064b8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8006490:	2161      	movs	r1, #97	; 0x61
 8006492:	e7f4      	b.n	800647e <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8006494:	0802ed4c 	.word	0x0802ed4c
 8006498:	0802fcb4 	.word	0x0802fcb4
 800649c:	0802ff00 	.word	0x0802ff00
 80064a0:	0802d800 	.word	0x0802d800
 80064a4:	0802f9e8 	.word	0x0802f9e8
 80064a8:	0802ed34 	.word	0x0802ed34
 80064ac:	080062a9 	.word	0x080062a9
 80064b0:	20013894 	.word	0x20013894
 80064b4:	0802d5b0 	.word	0x0802d5b0
 80064b8:	0802d6b5 	.word	0x0802d6b5
 80064bc:	0802d62d 	.word	0x0802d62d
 80064c0:	20013898 	.word	0x20013898
 80064c4:	0802d674 	.word	0x0802d674
        return texts->getText(typedTextId);
 80064c8:	4b95      	ldr	r3, [pc, #596]	; (8006720 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80064ca:	2129      	movs	r1, #41	; 0x29
 80064cc:	6818      	ldr	r0, [r3, #0]
 80064ce:	f002 fb0d 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80064d2:	4a94      	ldr	r2, [pc, #592]	; (8006724 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80064d4:	4603      	mov	r3, r0
 80064d6:	2104      	movs	r1, #4
 80064d8:	4650      	mov	r0, sl
 80064da:	f013 fe5f 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80064de:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80064e2:	4648      	mov	r0, r9
 80064e4:	f00d f9dc 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80064e8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006728 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80064ec:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80064f0:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 80064f2:	a90a      	add	r1, sp, #40	; 0x28
 80064f4:	4648      	mov	r0, r9
 80064f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064fa:	f00d f9f1 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064fe:	4649      	mov	r1, r9
 8006500:	4630      	mov	r0, r6
 8006502:	f00a fbc5 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006506:	223c      	movs	r2, #60	; 0x3c
 8006508:	ee18 0a90 	vmov	r0, s17
 800650c:	213d      	movs	r1, #61	; 0x3d
 800650e:	f7fc fae9 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006512:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006516:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800651a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800651e:	4658      	mov	r0, fp
        linespace = space;
 8006520:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006524:	f00c ff42 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006528:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800652c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006530:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006534:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006536:	ee18 0a90 	vmov	r0, s17
 800653a:	a90a      	add	r1, sp, #40	; 0x28
 800653c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006540:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006544:	f00d f9cc 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006548:	ee18 1a90 	vmov	r1, s17
 800654c:	4630      	mov	r0, r6
 800654e:	f00a fb9f 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006552:	230a      	movs	r3, #10
 8006554:	9300      	str	r3, [sp, #0]
 8006556:	2232      	movs	r2, #50	; 0x32
 8006558:	23f0      	movs	r3, #240	; 0xf0
 800655a:	4629      	mov	r1, r5
 800655c:	4638      	mov	r0, r7
 800655e:	f7fc face 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8006562:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006566:	22a0      	movs	r2, #160	; 0xa0
 8006568:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800656c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006570:	9b03      	ldr	r3, [sp, #12]
 8006572:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006576:	4611      	mov	r1, r2
 8006578:	4638      	mov	r0, r7
 800657a:	f00c fd6b 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800657e:	22a0      	movs	r2, #160	; 0xa0
 8006580:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006584:	4638      	mov	r0, r7
 8006586:	f00c fd70 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800658a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800658e:	2b20      	cmp	r3, #32
 8006590:	d005      	beq.n	800659e <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8006592:	2320      	movs	r3, #32
 8006594:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006598:	4638      	mov	r0, r7
 800659a:	f00c fc65 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800659e:	4638      	mov	r0, r7
 80065a0:	2101      	movs	r1, #1
 80065a2:	f00c fd6d 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065a6:	4639      	mov	r1, r7
 80065a8:	4630      	mov	r0, r6
 80065aa:	f00a fb71 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80065ae:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80065b2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80065b4:	2223      	movs	r2, #35	; 0x23
 80065b6:	4640      	mov	r0, r8
        linespace = space;
 80065b8:	f04f 0a00 	mov.w	sl, #0
 80065bc:	2145      	movs	r1, #69	; 0x45
 80065be:	f7fc fa91 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80065c2:	4641      	mov	r1, r8
 80065c4:	4638      	mov	r0, r7
        color = newColor;
 80065c6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80065ca:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80065ce:	f00c feed 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065d2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80065d6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80065da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80065de:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006728 <_ZN19MeasurementViewBaseC1Ev+0x444>
 80065e2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80065e6:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 80065e8:	a90a      	add	r1, sp, #40	; 0x28
 80065ea:	4640      	mov	r0, r8
 80065ec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80065f0:	f00d f976 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80065f4:	4641      	mov	r1, r8
 80065f6:	4630      	mov	r0, r6
 80065f8:	f00a fb4a 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80065fc:	ee18 0a10 	vmov	r0, s16
 8006600:	220c      	movs	r2, #12
 8006602:	2136      	movs	r1, #54	; 0x36
 8006604:	f7fc fa6e 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006608:	ee18 1a10 	vmov	r1, s16
 800660c:	4638      	mov	r0, r7
        color = newColor;
 800660e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006612:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006616:	f00c fec9 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800661a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800661e:	ee18 3a10 	vmov	r3, s16
 8006622:	333c      	adds	r3, #60	; 0x3c
 8006624:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006628:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800662a:	ee18 0a10 	vmov	r0, s16
 800662e:	a90a      	add	r1, sp, #40	; 0x28
 8006630:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006634:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006638:	f00d f952 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800663c:	ee18 1a10 	vmov	r1, s16
 8006640:	4630      	mov	r0, r6
 8006642:	f00a fb25 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006646:	ee19 0a10 	vmov	r0, s18
 800664a:	22f0      	movs	r2, #240	; 0xf0
 800664c:	2121      	movs	r1, #33	; 0x21
 800664e:	f7fc fa49 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006652:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006656:	aa0a      	add	r2, sp, #40	; 0x28
 8006658:	f04f 0802 	mov.w	r8, #2
 800665c:	a909      	add	r1, sp, #36	; 0x24
 800665e:	ee19 0a10 	vmov	r0, s18
 8006662:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006666:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800666a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800666e:	f00d fcf2 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006672:	2350      	movs	r3, #80	; 0x50
 8006674:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006678:	3710      	adds	r7, #16
        updateTextPosition();
 800667a:	ee19 0a10 	vmov	r0, s18
 800667e:	f7fc fa75 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006682:	ee19 1a10 	vmov	r1, s18
 8006686:	4630      	mov	r0, r6
        colorPressed = col;
 8006688:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 800668c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006690:	f00a fafe 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006694:	ee19 0a90 	vmov	r0, s19
 8006698:	22aa      	movs	r2, #170	; 0xaa
 800669a:	2121      	movs	r1, #33	; 0x21
 800669c:	f7fc fa22 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066a0:	aa0a      	add	r2, sp, #40	; 0x28
 80066a2:	a909      	add	r1, sp, #36	; 0x24
 80066a4:	ee19 0a90 	vmov	r0, s19
 80066a8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80066ac:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80066b0:	f00d fcd1 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80066b4:	234f      	movs	r3, #79	; 0x4f
 80066b6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80066ba:	ee19 0a90 	vmov	r0, s19
 80066be:	f7fc fa55 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80066c2:	ee19 1a90 	vmov	r1, s19
 80066c6:	4630      	mov	r0, r6
        colorPressed = col;
 80066c8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80066cc:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80066d0:	f00a fade 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80066d4:	ee1a 0a10 	vmov	r0, s20
 80066d8:	2264      	movs	r2, #100	; 0x64
 80066da:	2121      	movs	r1, #33	; 0x21
 80066dc:	f7fc fa02 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80066e0:	aa0a      	add	r2, sp, #40	; 0x28
 80066e2:	a909      	add	r1, sp, #36	; 0x24
 80066e4:	ee1a 0a10 	vmov	r0, s20
 80066e8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80066ec:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80066f0:	f00d fcb1 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80066f4:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 80066f6:	ee1a 0a10 	vmov	r0, s20
 80066fa:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80066fe:	f7fc fa35 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006702:	4630      	mov	r0, r6
        colorPressed = col;
 8006704:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006708:	ee1a 1a10 	vmov	r1, s20
 800670c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006710:	f00a fabe 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006714:	4620      	mov	r0, r4
 8006716:	b00d      	add	sp, #52	; 0x34
 8006718:	ecbd 8b06 	vpop	{d8-d10}
 800671c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006720:	200138a0 	.word	0x200138a0
 8006724:	0802d6ed 	.word	0x0802d6ed
 8006728:	0802d760 	.word	0x0802d760

0800672c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800672c:	4770      	bx	lr

0800672e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800672e:	4770      	bx	lr

08006730 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006730:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006732:	68c2      	ldr	r2, [r0, #12]
 8006734:	6844      	ldr	r4, [r0, #4]
 8006736:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006738:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800673a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800673e:	07d2      	lsls	r2, r2, #31
 8006740:	bf48      	it	mi
 8006742:	5962      	ldrmi	r2, [r4, r5]
 8006744:	689b      	ldr	r3, [r3, #8]
    }
 8006746:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006748:	bf48      	it	mi
 800674a:	58d3      	ldrmi	r3, [r2, r3]
 800674c:	4718      	bx	r3

0800674e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800674e:	6843      	ldr	r3, [r0, #4]
 8006750:	b12b      	cbz	r3, 800675e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006752:	6883      	ldr	r3, [r0, #8]
 8006754:	b92b      	cbnz	r3, 8006762 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006756:	68c0      	ldr	r0, [r0, #12]
 8006758:	f000 0001 	and.w	r0, r0, #1
 800675c:	4770      	bx	lr
 800675e:	4618      	mov	r0, r3
 8006760:	4770      	bx	lr
 8006762:	2001      	movs	r0, #1
    }
 8006764:	4770      	bx	lr

08006766 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006766:	b510      	push	{r4, lr}
 8006768:	2110      	movs	r1, #16
 800676a:	4604      	mov	r4, r0
 800676c:	f024 fc1d 	bl	802afaa <_ZdlPvj>
 8006770:	4620      	mov	r0, r4
 8006772:	bd10      	pop	{r4, pc}

08006774 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006774:	b510      	push	{r4, lr}
 8006776:	4b03      	ldr	r3, [pc, #12]	; (8006784 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006778:	6003      	str	r3, [r0, #0]
 800677a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800677c:	f00e fe5e 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006780:	4620      	mov	r0, r4
 8006782:	bd10      	pop	{r4, pc}
 8006784:	0802ed98 	.word	0x0802ed98

08006788 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006788:	b507      	push	{r0, r1, r2, lr}
 800678a:	4b07      	ldr	r3, [pc, #28]	; (80067a8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 800678c:	6003      	str	r3, [r0, #0]
 800678e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006790:	f00e fe54 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006794:	9801      	ldr	r0, [sp, #4]
 8006796:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800679a:	f024 fc06 	bl	802afaa <_ZdlPvj>
 800679e:	9801      	ldr	r0, [sp, #4]
 80067a0:	b003      	add	sp, #12
 80067a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80067a6:	bf00      	nop
 80067a8:	0802ed98 	.word	0x0802ed98

080067ac <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80067ac:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80067ae:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80067b2:	4299      	cmp	r1, r3
{
 80067b4:	4604      	mov	r4, r0
 80067b6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80067b8:	d103      	bne.n	80067c2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80067ba:	f010 fb41 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80067be:	f7fe f983 	bl	8004ac8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80067c2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067c6:	429d      	cmp	r5, r3
 80067c8:	d103      	bne.n	80067d2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80067ca:	f010 fb39 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80067ce:	f7fe f9eb 	bl	8004ba8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 80067d2:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 80067d6:	42a5      	cmp	r5, r4
 80067d8:	d105      	bne.n	80067e6 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80067da:	f010 fb31 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80067de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 80067e2:	f7fe b9d1 	b.w	8004b88 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 80067e6:	bd38      	pop	{r3, r4, r5, pc}

080067e8 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 80067e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80067ec:	ed2d 8b06 	vpush	{d8-d10}
 80067f0:	4604      	mov	r4, r0
 80067f2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 80067f4:	46a3      	mov	fp, r4
 80067f6:	2500      	movs	r5, #0
 80067f8:	f011 ffa2 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 80067fc:	4b66      	ldr	r3, [pc, #408]	; (8006998 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 80067fe:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006800:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006804:	2226      	movs	r2, #38	; 0x26
 8006806:	4629      	mov	r1, r5
 8006808:	4658      	mov	r0, fp
 800680a:	f025 fbe6 	bl	802bfda <memset>
 800680e:	4658      	mov	r0, fp
 8006810:	f7fc f99a 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8006814:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006818:	26ff      	movs	r6, #255	; 0xff
 800681a:	4b60      	ldr	r3, [pc, #384]	; (800699c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 800681c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800681e:	2226      	movs	r2, #38	; 0x26
 8006820:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006824:	4629      	mov	r1, r5
 8006826:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800682a:	4650      	mov	r0, sl
 800682c:	66a5      	str	r5, [r4, #104]	; 0x68
 800682e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006832:	f025 fbd2 	bl	802bfda <memset>
 8006836:	4650      	mov	r0, sl
 8006838:	f7fc f986 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 800683c:	4b58      	ldr	r3, [pc, #352]	; (80069a0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 800683e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006840:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006844:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006848:	a90a      	add	r1, sp, #40	; 0x28
 800684a:	4650      	mov	r0, sl
 800684c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006850:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006854:	f00d fdf5 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006858:	4648      	mov	r0, r9
 800685a:	f7fc f9d9 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800685e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006862:	4b50      	ldr	r3, [pc, #320]	; (80069a4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006864:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006868:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800686c:	4638      	mov	r0, r7
 800686e:	f00c fadb 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 8006872:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006876:	4618      	mov	r0, r3
 8006878:	9303      	str	r3, [sp, #12]
 800687a:	f7fb ff69 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800687e:	4b4a      	ldr	r3, [pc, #296]	; (80069a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8006880:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006884:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8006888:	3324      	adds	r3, #36	; 0x24
 800688a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800688e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8006892:	4640      	mov	r0, r8
 8006894:	f7fc f9bc 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8006898:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 800689c:	4618      	mov	r0, r3
 800689e:	ee08 3a10 	vmov	s16, r3
 80068a2:	f7fc f9b5 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80068a6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80068aa:	4618      	mov	r0, r3
 80068ac:	ee08 3a90 	vmov	s17, r3
 80068b0:	f7fc f9ae 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80068b4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80068b8:	4618      	mov	r0, r3
 80068ba:	ee09 3a10 	vmov	s18, r3
 80068be:	f00d fef7 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068c2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80068c6:	4618      	mov	r0, r3
 80068c8:	ee09 3a90 	vmov	s19, r3
 80068cc:	f00d fef0 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80068d0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80068d4:	4618      	mov	r0, r3
 80068d6:	ee0a 3a10 	vmov	s20, r3
 80068da:	f00d fee9 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80068de:	4a33      	ldr	r2, [pc, #204]	; (80069ac <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 80068e0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80068e4:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80068e8:	4a31      	ldr	r2, [pc, #196]	; (80069b0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80068ea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80068ee:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80068f2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80068f6:	f00e fd97 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80068fa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80068fe:	462a      	mov	r2, r5
 8006900:	4658      	mov	r0, fp
 8006902:	9300      	str	r3, [sp, #0]
 8006904:	4629      	mov	r1, r5
 8006906:	23f0      	movs	r3, #240	; 0xf0
 8006908:	f7fc f8f9 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 800690c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800690e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006912:	66a3      	str	r3, [r4, #104]	; 0x68
 8006914:	4659      	mov	r1, fp
 8006916:	4630      	mov	r0, r6
 8006918:	f00a f9ba 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800691c:	462a      	mov	r2, r5
 800691e:	4650      	mov	r0, sl
 8006920:	4629      	mov	r1, r5
 8006922:	f7fc f8df 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006926:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006928:	4650      	mov	r0, sl
 800692a:	a90a      	add	r1, sp, #40	; 0x28
 800692c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006930:	f00d fd87 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006934:	4651      	mov	r1, sl
 8006936:	4630      	mov	r0, r6
 8006938:	f00a f9aa 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800693c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006940:	2156      	movs	r1, #86	; 0x56
 8006942:	4648      	mov	r0, r9
 8006944:	f7fc f8ce 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006948:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800694c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006950:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006954:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006958:	4650      	mov	r0, sl
 800695a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800695e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006962:	4649      	mov	r1, r9
 8006964:	4798      	blx	r3
 8006966:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800696a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800696e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006972:	4b10      	ldr	r3, [pc, #64]	; (80069b4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006974:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006976:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800697a:	b92b      	cbnz	r3, 8006988 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 800697c:	4b0e      	ldr	r3, [pc, #56]	; (80069b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 800697e:	4a0f      	ldr	r2, [pc, #60]	; (80069bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006980:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006982:	480f      	ldr	r0, [pc, #60]	; (80069c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8006984:	f025 f924 	bl	802bbd0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006988:	4b0e      	ldr	r3, [pc, #56]	; (80069c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800698a:	881b      	ldrh	r3, [r3, #0]
 800698c:	2b24      	cmp	r3, #36	; 0x24
 800698e:	d81d      	bhi.n	80069cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8006990:	4b0d      	ldr	r3, [pc, #52]	; (80069c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8006992:	4a0a      	ldr	r2, [pc, #40]	; (80069bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8006994:	2161      	movs	r1, #97	; 0x61
 8006996:	e7f4      	b.n	8006982 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8006998:	0802ed98 	.word	0x0802ed98
 800699c:	0802fcb4 	.word	0x0802fcb4
 80069a0:	0802ff00 	.word	0x0802ff00
 80069a4:	0802d800 	.word	0x0802d800
 80069a8:	0802f9e8 	.word	0x0802f9e8
 80069ac:	0802ed80 	.word	0x0802ed80
 80069b0:	080067ad 	.word	0x080067ad
 80069b4:	20013894 	.word	0x20013894
 80069b8:	0802d5b0 	.word	0x0802d5b0
 80069bc:	0802d6b5 	.word	0x0802d6b5
 80069c0:	0802d62d 	.word	0x0802d62d
 80069c4:	20013898 	.word	0x20013898
 80069c8:	0802d674 	.word	0x0802d674
        return texts->getText(typedTextId);
 80069cc:	4b93      	ldr	r3, [pc, #588]	; (8006c1c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80069ce:	2124      	movs	r1, #36	; 0x24
 80069d0:	6818      	ldr	r0, [r3, #0]
 80069d2:	f002 f88b 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80069d6:	4a92      	ldr	r2, [pc, #584]	; (8006c20 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80069d8:	4603      	mov	r3, r0
 80069da:	2104      	movs	r1, #4
 80069dc:	4650      	mov	r0, sl
 80069de:	f013 fbdd 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80069e2:	4648      	mov	r0, r9
        wc1 = value;
 80069e4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80069e8:	f00c ff5a 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80069ec:	4b8d      	ldr	r3, [pc, #564]	; (8006c24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 80069ee:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 80069f0:	a90a      	add	r1, sp, #40	; 0x28
 80069f2:	2325      	movs	r3, #37	; 0x25
 80069f4:	4648      	mov	r0, r9
 80069f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069fa:	f00c ff71 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069fe:	4649      	mov	r1, r9
 8006a00:	4630      	mov	r0, r6
 8006a02:	f00a f945 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006a06:	230a      	movs	r3, #10
 8006a08:	9300      	str	r3, [sp, #0]
 8006a0a:	2232      	movs	r2, #50	; 0x32
 8006a0c:	23f0      	movs	r3, #240	; 0xf0
 8006a0e:	4629      	mov	r1, r5
 8006a10:	4638      	mov	r0, r7
 8006a12:	f7fc f874 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a16:	9b03      	ldr	r3, [sp, #12]
 8006a18:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a1c:	22a0      	movs	r2, #160	; 0xa0
 8006a1e:	4611      	mov	r1, r2
 8006a20:	4638      	mov	r0, r7
 8006a22:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a26:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006a2a:	f00c fb13 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a2e:	22a0      	movs	r2, #160	; 0xa0
 8006a30:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006a34:	4638      	mov	r0, r7
 8006a36:	f00c fb18 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006a3a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006a3e:	2b20      	cmp	r3, #32
 8006a40:	d005      	beq.n	8006a4e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006a42:	2320      	movs	r3, #32
 8006a44:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006a48:	4638      	mov	r0, r7
 8006a4a:	f00c fa0d 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006a4e:	4638      	mov	r0, r7
 8006a50:	2101      	movs	r1, #1
 8006a52:	f00c fb15 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006a56:	4639      	mov	r1, r7
 8006a58:	4630      	mov	r0, r6
 8006a5a:	ad04      	add	r5, sp, #16
        color = newColor;
 8006a5c:	f04f 37ff 	mov.w	r7, #4294967295
 8006a60:	f00a f916 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006a64:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006a68:	2223      	movs	r2, #35	; 0x23
 8006a6a:	4640      	mov	r0, r8
 8006a6c:	2145      	movs	r1, #69	; 0x45
 8006a6e:	f7fc f839 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006a72:	4641      	mov	r1, r8
 8006a74:	4628      	mov	r0, r5
        color = newColor;
 8006a76:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8006a7a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8006a7e:	f00c fc95 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a82:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a86:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006a8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a8e:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006c24 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006a92:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a96:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 8006a98:	a90a      	add	r1, sp, #40	; 0x28
 8006a9a:	4640      	mov	r0, r8
 8006a9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006aa0:	f00c ff1e 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aa4:	4641      	mov	r1, r8
 8006aa6:	4630      	mov	r0, r6
 8006aa8:	f00a f8f2 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006aac:	ee18 0a10 	vmov	r0, s16
 8006ab0:	220c      	movs	r2, #12
 8006ab2:	2136      	movs	r1, #54	; 0x36
 8006ab4:	f7fc f816 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006ab8:	ee18 1a10 	vmov	r1, s16
 8006abc:	4628      	mov	r0, r5
        color = newColor;
 8006abe:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006ac2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006ac6:	f00c fc71 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006aca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006ace:	ee18 3a10 	vmov	r3, s16
 8006ad2:	333c      	adds	r3, #60	; 0x3c
 8006ad4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ad8:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006ada:	ee18 0a10 	vmov	r0, s16
 8006ade:	a90a      	add	r1, sp, #40	; 0x28
 8006ae0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ae4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ae8:	f00c fefa 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006aec:	ee18 1a10 	vmov	r1, s16
 8006af0:	4630      	mov	r0, r6
 8006af2:	f00a f8cd 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006af6:	ee18 0a90 	vmov	r0, s17
 8006afa:	223c      	movs	r2, #60	; 0x3c
 8006afc:	2121      	movs	r1, #33	; 0x21
 8006afe:	f7fb fff1 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006b02:	ee18 1a90 	vmov	r1, s17
 8006b06:	4628      	mov	r0, r5
        color = newColor;
 8006b08:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006b0c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006b10:	f00c fc4c 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b14:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006b18:	ee18 3a90 	vmov	r3, s17
 8006b1c:	333c      	adds	r3, #60	; 0x3c
 8006b1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b22:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006b24:	ee18 0a90 	vmov	r0, s17
 8006b28:	a90a      	add	r1, sp, #40	; 0x28
 8006b2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b2e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006b32:	f00c fed5 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b36:	ee18 1a90 	vmov	r1, s17
 8006b3a:	4630      	mov	r0, r6
 8006b3c:	f00a f8a8 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006b40:	ee19 0a10 	vmov	r0, s18
 8006b44:	22f0      	movs	r2, #240	; 0xf0
 8006b46:	2121      	movs	r1, #33	; 0x21
 8006b48:	f7fb ffcc 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006b4c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b50:	aa0a      	add	r2, sp, #40	; 0x28
 8006b52:	f04f 0802 	mov.w	r8, #2
 8006b56:	a909      	add	r1, sp, #36	; 0x24
 8006b58:	ee19 0a10 	vmov	r0, s18
 8006b5c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b60:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006b64:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b68:	f00d fa75 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006b6c:	2342      	movs	r3, #66	; 0x42
 8006b6e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006b72:	3510      	adds	r5, #16
        updateTextPosition();
 8006b74:	ee19 0a10 	vmov	r0, s18
 8006b78:	f7fb fff8 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b7c:	ee19 1a10 	vmov	r1, s18
 8006b80:	4630      	mov	r0, r6
        colorPressed = col;
 8006b82:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006b86:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006b8a:	f00a f881 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006b8e:	ee19 0a90 	vmov	r0, s19
 8006b92:	22aa      	movs	r2, #170	; 0xaa
 8006b94:	2121      	movs	r1, #33	; 0x21
 8006b96:	f7fb ffa5 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006b9a:	aa0a      	add	r2, sp, #40	; 0x28
 8006b9c:	a909      	add	r1, sp, #36	; 0x24
 8006b9e:	ee19 0a90 	vmov	r0, s19
 8006ba2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ba6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006baa:	f00d fa54 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006bae:	2341      	movs	r3, #65	; 0x41
 8006bb0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006bb4:	ee19 0a90 	vmov	r0, s19
 8006bb8:	f7fb ffd8 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bbc:	ee19 1a90 	vmov	r1, s19
 8006bc0:	4630      	mov	r0, r6
        colorPressed = col;
 8006bc2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006bc6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006bca:	f00a f861 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006bce:	ee1a 0a10 	vmov	r0, s20
 8006bd2:	2264      	movs	r2, #100	; 0x64
 8006bd4:	2121      	movs	r1, #33	; 0x21
 8006bd6:	f7fb ff85 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006bda:	aa0a      	add	r2, sp, #40	; 0x28
 8006bdc:	a909      	add	r1, sp, #36	; 0x24
 8006bde:	ee1a 0a10 	vmov	r0, s20
 8006be2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006be6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006bea:	f00d fa34 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006bee:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006bf0:	ee1a 0a10 	vmov	r0, s20
 8006bf4:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006bf8:	f7fb ffb8 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006bfc:	4630      	mov	r0, r6
        colorPressed = col;
 8006bfe:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006c02:	ee1a 1a10 	vmov	r1, s20
 8006c06:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006c0a:	f00a f841 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006c0e:	4620      	mov	r0, r4
 8006c10:	b00d      	add	sp, #52	; 0x34
 8006c12:	ecbd 8b06 	vpop	{d8-d10}
 8006c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006c1a:	bf00      	nop
 8006c1c:	200138a0 	.word	0x200138a0
 8006c20:	0802d6ed 	.word	0x0802d6ed
 8006c24:	0802d760 	.word	0x0802d760

08006c28 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006c28:	4770      	bx	lr

08006c2a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c2a:	4770      	bx	lr

08006c2c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006c2c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c2e:	68c2      	ldr	r2, [r0, #12]
 8006c30:	6844      	ldr	r4, [r0, #4]
 8006c32:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006c34:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006c36:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006c3a:	07d2      	lsls	r2, r2, #31
 8006c3c:	bf48      	it	mi
 8006c3e:	5962      	ldrmi	r2, [r4, r5]
 8006c40:	689b      	ldr	r3, [r3, #8]
    }
 8006c42:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006c44:	bf48      	it	mi
 8006c46:	58d3      	ldrmi	r3, [r2, r3]
 8006c48:	4718      	bx	r3

08006c4a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006c4a:	6843      	ldr	r3, [r0, #4]
 8006c4c:	b12b      	cbz	r3, 8006c5a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006c4e:	6883      	ldr	r3, [r0, #8]
 8006c50:	b92b      	cbnz	r3, 8006c5e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006c52:	68c0      	ldr	r0, [r0, #12]
 8006c54:	f000 0001 	and.w	r0, r0, #1
 8006c58:	4770      	bx	lr
 8006c5a:	4618      	mov	r0, r3
 8006c5c:	4770      	bx	lr
 8006c5e:	2001      	movs	r0, #1
    }
 8006c60:	4770      	bx	lr

08006c62 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006c62:	b510      	push	{r4, lr}
 8006c64:	2110      	movs	r1, #16
 8006c66:	4604      	mov	r4, r0
 8006c68:	f024 f99f 	bl	802afaa <_ZdlPvj>
 8006c6c:	4620      	mov	r0, r4
 8006c6e:	bd10      	pop	{r4, pc}

08006c70 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006c70:	b510      	push	{r4, lr}
 8006c72:	4b03      	ldr	r3, [pc, #12]	; (8006c80 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006c74:	6003      	str	r3, [r0, #0]
 8006c76:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c78:	f00e fbe0 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c7c:	4620      	mov	r0, r4
 8006c7e:	bd10      	pop	{r4, pc}
 8006c80:	0802ede4 	.word	0x0802ede4

08006c84 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006c84:	b507      	push	{r0, r1, r2, lr}
 8006c86:	4b07      	ldr	r3, [pc, #28]	; (8006ca4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006c88:	6003      	str	r3, [r0, #0]
 8006c8a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006c8c:	f00e fbd6 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006c90:	9801      	ldr	r0, [sp, #4]
 8006c92:	f241 015c 	movw	r1, #4188	; 0x105c
 8006c96:	f024 f988 	bl	802afaa <_ZdlPvj>
 8006c9a:	9801      	ldr	r0, [sp, #4]
 8006c9c:	b003      	add	sp, #12
 8006c9e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006ca2:	bf00      	nop
 8006ca4:	0802ede4 	.word	0x0802ede4

08006ca8 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006ca8:	3098      	adds	r0, #152	; 0x98
 8006caa:	4288      	cmp	r0, r1
{
 8006cac:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006cae:	d105      	bne.n	8006cbc <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006cb0:	f010 f8c6 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006cb4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006cb8:	f7fd bf56 	b.w	8004b68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006cbc:	bd08      	pop	{r3, pc}
	...

08006cc0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cc4:	ed2d 8b02 	vpush	{d8}
 8006cc8:	4604      	mov	r4, r0
 8006cca:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006ccc:	46a1      	mov	r9, r4
 8006cce:	2500      	movs	r5, #0
 8006cd0:	f011 fd36 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 8006cd4:	4ba5      	ldr	r3, [pc, #660]	; (8006f6c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006cd6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006cd8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006cdc:	2226      	movs	r2, #38	; 0x26
 8006cde:	4629      	mov	r1, r5
 8006ce0:	4648      	mov	r0, r9
 8006ce2:	f025 f97a 	bl	802bfda <memset>
 8006ce6:	4648      	mov	r0, r9
 8006ce8:	f7fb ff2e 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8006cec:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006cf0:	26ff      	movs	r6, #255	; 0xff
 8006cf2:	4b9f      	ldr	r3, [pc, #636]	; (8006f70 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006cf4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006cf6:	2226      	movs	r2, #38	; 0x26
 8006cf8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006cfc:	4629      	mov	r1, r5
 8006cfe:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006d02:	4640      	mov	r0, r8
 8006d04:	66a5      	str	r5, [r4, #104]	; 0x68
 8006d06:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d0a:	f025 f966 	bl	802bfda <memset>
 8006d0e:	4640      	mov	r0, r8
 8006d10:	f7fb ff1a 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8006d14:	4b97      	ldr	r3, [pc, #604]	; (8006f74 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006d16:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006d18:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006d1c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006d20:	a90a      	add	r1, sp, #40	; 0x28
 8006d22:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006d26:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006d28:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006d2c:	f00d fb89 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d30:	4658      	mov	r0, fp
 8006d32:	f00d fcbd 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d36:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006d3a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006d3e:	4618      	mov	r0, r3
 8006d40:	ee08 3a90 	vmov	s17, r3
 8006d44:	f7fb ff64 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8006d48:	4638      	mov	r0, r7
 8006d4a:	f00c f86d 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 8006d4e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006d52:	4618      	mov	r0, r3
 8006d54:	9303      	str	r3, [sp, #12]
 8006d56:	f7fb fcfb 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006d5a:	4b87      	ldr	r3, [pc, #540]	; (8006f78 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006d5c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006d60:	3324      	adds	r3, #36	; 0x24
 8006d62:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006d66:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006d6a:	4618      	mov	r0, r3
 8006d6c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006d70:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006d74:	ee08 3a10 	vmov	s16, r3
 8006d78:	f7fb ff4a 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8006d7c:	4650      	mov	r0, sl
 8006d7e:	f7fb ff47 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d82:	4a7e      	ldr	r2, [pc, #504]	; (8006f7c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006d84:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d88:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006d8c:	4a7c      	ldr	r2, [pc, #496]	; (8006f80 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d8e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d92:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006d96:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006d9a:	f00e fb45 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d9e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006da2:	462a      	mov	r2, r5
 8006da4:	4648      	mov	r0, r9
 8006da6:	9300      	str	r3, [sp, #0]
 8006da8:	4629      	mov	r1, r5
 8006daa:	23f0      	movs	r3, #240	; 0xf0
 8006dac:	f7fb fea7 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8006db0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006db2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006db6:	66a3      	str	r3, [r4, #104]	; 0x68
 8006db8:	4649      	mov	r1, r9
 8006dba:	4630      	mov	r0, r6
 8006dbc:	f009 ff68 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006dc0:	462a      	mov	r2, r5
 8006dc2:	4640      	mov	r0, r8
 8006dc4:	4629      	mov	r1, r5
 8006dc6:	f7fb fe8d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006dca:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006dcc:	4640      	mov	r0, r8
 8006dce:	a90a      	add	r1, sp, #40	; 0x28
 8006dd0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dd4:	f00d fb35 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006dd8:	4641      	mov	r1, r8
 8006dda:	4630      	mov	r0, r6
 8006ddc:	f009 ff58 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006de0:	4658      	mov	r0, fp
 8006de2:	f240 1201 	movw	r2, #257	; 0x101
 8006de6:	2121      	movs	r1, #33	; 0x21
 8006de8:	f7fb fe7c 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006dec:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006dee:	aa0a      	add	r2, sp, #40	; 0x28
 8006df0:	a909      	add	r1, sp, #36	; 0x24
 8006df2:	4658      	mov	r0, fp
 8006df4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006df8:	2302      	movs	r3, #2
 8006dfa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006dfe:	f00d f92a 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e02:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006e04:	4658      	mov	r0, fp
 8006e06:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006e0a:	f7fb feaf 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006e0e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006e12:	330c      	adds	r3, #12
        color = col;
 8006e14:	f04f 39ff 	mov.w	r9, #4294967295
 8006e18:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006e1c:	4659      	mov	r1, fp
 8006e1e:	4630      	mov	r0, r6
        colorPressed = col;
 8006e20:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006e24:	f009 ff34 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006e28:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006e2c:	223c      	movs	r2, #60	; 0x3c
 8006e2e:	ee18 0a90 	vmov	r0, s17
 8006e32:	2117      	movs	r1, #23
 8006e34:	f7fb fe56 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006e38:	ee18 1a90 	vmov	r1, s17
 8006e3c:	4640      	mov	r0, r8
        color = newColor;
 8006e3e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006e42:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006e46:	f00c fab1 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e4a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e4e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006e52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006e56:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006f84 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006e5a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e5e:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006e60:	ee18 0a90 	vmov	r0, s17
 8006e64:	a90a      	add	r1, sp, #40	; 0x28
 8006e66:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e6a:	f00c fd39 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e6e:	ee18 1a90 	vmov	r1, s17
 8006e72:	4630      	mov	r0, r6
 8006e74:	f009 ff0c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006e78:	230a      	movs	r3, #10
 8006e7a:	9300      	str	r3, [sp, #0]
 8006e7c:	2232      	movs	r2, #50	; 0x32
 8006e7e:	23f0      	movs	r3, #240	; 0xf0
 8006e80:	4629      	mov	r1, r5
 8006e82:	4638      	mov	r0, r7
 8006e84:	f7fb fe3b 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8006e88:	9b03      	ldr	r3, [sp, #12]
 8006e8a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006e8e:	22a0      	movs	r2, #160	; 0xa0
 8006e90:	4611      	mov	r1, r2
 8006e92:	4638      	mov	r0, r7
 8006e94:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006e98:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006e9c:	f00c f8da 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ea0:	22a0      	movs	r2, #160	; 0xa0
 8006ea2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006ea6:	4638      	mov	r0, r7
 8006ea8:	f00c f8df 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006eac:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006eb0:	2b20      	cmp	r3, #32
 8006eb2:	d005      	beq.n	8006ec0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006eb4:	2320      	movs	r3, #32
 8006eb6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006eba:	4638      	mov	r0, r7
 8006ebc:	f00b ffd4 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006ec0:	4638      	mov	r0, r7
 8006ec2:	2101      	movs	r1, #1
 8006ec4:	f00c f8dc 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006ec8:	4639      	mov	r1, r7
 8006eca:	4630      	mov	r0, r6
 8006ecc:	f009 fee0 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006ed0:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006ed4:	ee18 0a10 	vmov	r0, s16
 8006ed8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006eda:	2500      	movs	r5, #0
 8006edc:	2145      	movs	r1, #69	; 0x45
 8006ede:	f7fb fe01 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006ee2:	ee18 1a10 	vmov	r1, s16
 8006ee6:	4640      	mov	r0, r8
        color = newColor;
 8006ee8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006eec:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006ef0:	f00c fa5c 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ef4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006ef8:	ee18 3a10 	vmov	r3, s16
 8006efc:	333c      	adds	r3, #60	; 0x3c
 8006efe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f02:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006f04:	ee18 0a10 	vmov	r0, s16
 8006f08:	a90a      	add	r1, sp, #40	; 0x28
 8006f0a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f0e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006f12:	f00c fce5 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f16:	ee18 1a10 	vmov	r1, s16
 8006f1a:	4630      	mov	r0, r6
 8006f1c:	f009 feb8 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006f20:	220c      	movs	r2, #12
 8006f22:	4650      	mov	r0, sl
 8006f24:	2136      	movs	r1, #54	; 0x36
 8006f26:	f7fb fddd 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8006f2a:	4651      	mov	r1, sl
 8006f2c:	4640      	mov	r0, r8
        color = newColor;
 8006f2e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006f32:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006f36:	f00c fa39 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006f3a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006f3e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006f42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f46:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006f48:	a90a      	add	r1, sp, #40	; 0x28
 8006f4a:	4650      	mov	r0, sl
 8006f4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f50:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006f54:	f00c fcc4 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f58:	4630      	mov	r0, r6
 8006f5a:	4651      	mov	r1, sl
 8006f5c:	f009 fe98 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006f60:	4620      	mov	r0, r4
 8006f62:	b00d      	add	sp, #52	; 0x34
 8006f64:	ecbd 8b02 	vpop	{d8}
 8006f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f6c:	0802ede4 	.word	0x0802ede4
 8006f70:	0802fcb4 	.word	0x0802fcb4
 8006f74:	0802ff00 	.word	0x0802ff00
 8006f78:	0802f9e8 	.word	0x0802f9e8
 8006f7c:	0802edcc 	.word	0x0802edcc
 8006f80:	08006ca9 	.word	0x08006ca9
 8006f84:	0802d760 	.word	0x0802d760

08006f88 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006f88:	4770      	bx	lr

08006f8a <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f8a:	4770      	bx	lr

08006f8c <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f8c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f8e:	68c2      	ldr	r2, [r0, #12]
 8006f90:	6844      	ldr	r4, [r0, #4]
 8006f92:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f94:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f96:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f9a:	07d2      	lsls	r2, r2, #31
 8006f9c:	bf48      	it	mi
 8006f9e:	5962      	ldrmi	r2, [r4, r5]
 8006fa0:	689b      	ldr	r3, [r3, #8]
    }
 8006fa2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006fa4:	bf48      	it	mi
 8006fa6:	58d3      	ldrmi	r3, [r2, r3]
 8006fa8:	4718      	bx	r3

08006faa <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006faa:	6843      	ldr	r3, [r0, #4]
 8006fac:	b12b      	cbz	r3, 8006fba <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006fae:	6883      	ldr	r3, [r0, #8]
 8006fb0:	b92b      	cbnz	r3, 8006fbe <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006fb2:	68c0      	ldr	r0, [r0, #12]
 8006fb4:	f000 0001 	and.w	r0, r0, #1
 8006fb8:	4770      	bx	lr
 8006fba:	4618      	mov	r0, r3
 8006fbc:	4770      	bx	lr
 8006fbe:	2001      	movs	r0, #1
    }
 8006fc0:	4770      	bx	lr

08006fc2 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006fc2:	b510      	push	{r4, lr}
 8006fc4:	2110      	movs	r1, #16
 8006fc6:	4604      	mov	r4, r0
 8006fc8:	f023 ffef 	bl	802afaa <_ZdlPvj>
 8006fcc:	4620      	mov	r0, r4
 8006fce:	bd10      	pop	{r4, pc}

08006fd0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006fd0:	b510      	push	{r4, lr}
 8006fd2:	4b03      	ldr	r3, [pc, #12]	; (8006fe0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006fd4:	6003      	str	r3, [r0, #0]
 8006fd6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006fd8:	f00e fa30 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006fdc:	4620      	mov	r0, r4
 8006fde:	bd10      	pop	{r4, pc}
 8006fe0:	0802ee30 	.word	0x0802ee30

08006fe4 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006fe4:	b507      	push	{r0, r1, r2, lr}
 8006fe6:	4b07      	ldr	r3, [pc, #28]	; (8007004 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006fe8:	6003      	str	r3, [r0, #0]
 8006fea:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006fec:	f00e fa26 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ff0:	9801      	ldr	r0, [sp, #4]
 8006ff2:	f241 015c 	movw	r1, #4188	; 0x105c
 8006ff6:	f023 ffd8 	bl	802afaa <_ZdlPvj>
 8006ffa:	9801      	ldr	r0, [sp, #4]
 8006ffc:	b003      	add	sp, #12
 8006ffe:	f85d fb04 	ldr.w	pc, [sp], #4
 8007002:	bf00      	nop
 8007004:	0802ee30 	.word	0x0802ee30

08007008 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007008:	3098      	adds	r0, #152	; 0x98
 800700a:	4288      	cmp	r0, r1
{
 800700c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800700e:	d105      	bne.n	800701c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007010:	f00f ff16 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8007014:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8007018:	f7fd bda6 	b.w	8004b68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800701c:	bd08      	pop	{r3, pc}
	...

08007020 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8007020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007024:	ed2d 8b02 	vpush	{d8}
 8007028:	4604      	mov	r4, r0
 800702a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 800702c:	46a1      	mov	r9, r4
 800702e:	2500      	movs	r5, #0
 8007030:	f011 fb86 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 8007034:	4ba5      	ldr	r3, [pc, #660]	; (80072cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8007036:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007038:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800703c:	2226      	movs	r2, #38	; 0x26
 800703e:	4629      	mov	r1, r5
 8007040:	4648      	mov	r0, r9
 8007042:	f024 ffca 	bl	802bfda <memset>
 8007046:	4648      	mov	r0, r9
 8007048:	f7fb fd7e 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 800704c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007050:	26ff      	movs	r6, #255	; 0xff
 8007052:	4b9f      	ldr	r3, [pc, #636]	; (80072d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8007054:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007056:	2226      	movs	r2, #38	; 0x26
 8007058:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800705c:	4629      	mov	r1, r5
 800705e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007062:	4640      	mov	r0, r8
 8007064:	66a5      	str	r5, [r4, #104]	; 0x68
 8007066:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800706a:	f024 ffb6 	bl	802bfda <memset>
 800706e:	4640      	mov	r0, r8
 8007070:	f7fb fd6a 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8007074:	4b97      	ldr	r3, [pc, #604]	; (80072d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8007076:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007078:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800707c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007080:	a90a      	add	r1, sp, #40	; 0x28
 8007082:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8007086:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8007088:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800708c:	f00d f9d9 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007090:	4658      	mov	r0, fp
 8007092:	f00d fb0d 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007096:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800709a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800709e:	4618      	mov	r0, r3
 80070a0:	ee08 3a90 	vmov	s17, r3
 80070a4:	f7fb fdb4 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80070a8:	4638      	mov	r0, r7
 80070aa:	f00b febd 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 80070ae:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80070b2:	4618      	mov	r0, r3
 80070b4:	9303      	str	r3, [sp, #12]
 80070b6:	f7fb fb4b 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80070ba:	4b87      	ldr	r3, [pc, #540]	; (80072d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 80070bc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80070c0:	3324      	adds	r3, #36	; 0x24
 80070c2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80070c6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80070ca:	4618      	mov	r0, r3
 80070cc:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80070d0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80070d4:	ee08 3a10 	vmov	s16, r3
 80070d8:	f7fb fd9a 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80070dc:	4650      	mov	r0, sl
 80070de:	f7fb fd97 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80070e2:	4a7e      	ldr	r2, [pc, #504]	; (80072dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 80070e4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80070e8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80070ec:	4a7c      	ldr	r2, [pc, #496]	; (80072e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80070ee:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80070f2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80070f6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80070fa:	f00e f995 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80070fe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007102:	462a      	mov	r2, r5
 8007104:	4648      	mov	r0, r9
 8007106:	9300      	str	r3, [sp, #0]
 8007108:	4629      	mov	r1, r5
 800710a:	23f0      	movs	r3, #240	; 0xf0
 800710c:	f7fb fcf7 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007110:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007112:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007116:	66a3      	str	r3, [r4, #104]	; 0x68
 8007118:	4649      	mov	r1, r9
 800711a:	4630      	mov	r0, r6
 800711c:	f009 fdb8 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007120:	462a      	mov	r2, r5
 8007122:	4640      	mov	r0, r8
 8007124:	4629      	mov	r1, r5
 8007126:	f7fb fcdd 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800712a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800712c:	4640      	mov	r0, r8
 800712e:	a90a      	add	r1, sp, #40	; 0x28
 8007130:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007134:	f00d f985 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007138:	4641      	mov	r1, r8
 800713a:	4630      	mov	r0, r6
 800713c:	f009 fda8 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007140:	4658      	mov	r0, fp
 8007142:	f240 1201 	movw	r2, #257	; 0x101
 8007146:	2121      	movs	r1, #33	; 0x21
 8007148:	f7fb fccc 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800714c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800714e:	aa0a      	add	r2, sp, #40	; 0x28
 8007150:	a909      	add	r1, sp, #36	; 0x24
 8007152:	4658      	mov	r0, fp
 8007154:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007158:	2302      	movs	r3, #2
 800715a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800715e:	f00c ff7a 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007162:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8007164:	4658      	mov	r0, fp
 8007166:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800716a:	f7fb fcff 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800716e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007172:	330c      	adds	r3, #12
        color = col;
 8007174:	f04f 39ff 	mov.w	r9, #4294967295
 8007178:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800717c:	4659      	mov	r1, fp
 800717e:	4630      	mov	r0, r6
        colorPressed = col;
 8007180:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8007184:	f009 fd84 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007188:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 800718c:	223c      	movs	r2, #60	; 0x3c
 800718e:	ee18 0a90 	vmov	r0, s17
 8007192:	2117      	movs	r1, #23
 8007194:	f7fb fca6 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007198:	ee18 1a90 	vmov	r1, s17
 800719c:	4640      	mov	r0, r8
        color = newColor;
 800719e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80071a2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80071a6:	f00c f901 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071aa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071ae:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80071b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80071b6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80072e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80071ba:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071be:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80071c0:	ee18 0a90 	vmov	r0, s17
 80071c4:	a90a      	add	r1, sp, #40	; 0x28
 80071c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071ca:	f00c fb89 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071ce:	ee18 1a90 	vmov	r1, s17
 80071d2:	4630      	mov	r0, r6
 80071d4:	f009 fd5c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80071d8:	230a      	movs	r3, #10
 80071da:	9300      	str	r3, [sp, #0]
 80071dc:	2232      	movs	r2, #50	; 0x32
 80071de:	23f0      	movs	r3, #240	; 0xf0
 80071e0:	4629      	mov	r1, r5
 80071e2:	4638      	mov	r0, r7
 80071e4:	f7fb fc8b 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 80071e8:	9b03      	ldr	r3, [sp, #12]
 80071ea:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80071ee:	22a0      	movs	r2, #160	; 0xa0
 80071f0:	4611      	mov	r1, r2
 80071f2:	4638      	mov	r0, r7
 80071f4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80071f8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80071fc:	f00b ff2a 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007200:	22a0      	movs	r2, #160	; 0xa0
 8007202:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007206:	4638      	mov	r0, r7
 8007208:	f00b ff2f 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800720c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007210:	2b20      	cmp	r3, #32
 8007212:	d005      	beq.n	8007220 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007214:	2320      	movs	r3, #32
 8007216:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800721a:	4638      	mov	r0, r7
 800721c:	f00b fe24 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007220:	4638      	mov	r0, r7
 8007222:	2101      	movs	r1, #1
 8007224:	f00b ff2c 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007228:	4639      	mov	r1, r7
 800722a:	4630      	mov	r0, r6
 800722c:	f009 fd30 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007230:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007234:	ee18 0a10 	vmov	r0, s16
 8007238:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800723a:	2500      	movs	r5, #0
 800723c:	2145      	movs	r1, #69	; 0x45
 800723e:	f7fb fc51 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007242:	ee18 1a10 	vmov	r1, s16
 8007246:	4640      	mov	r0, r8
        color = newColor;
 8007248:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800724c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007250:	f00c f8ac 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007254:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007258:	ee18 3a10 	vmov	r3, s16
 800725c:	333c      	adds	r3, #60	; 0x3c
 800725e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007262:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007264:	ee18 0a10 	vmov	r0, s16
 8007268:	a90a      	add	r1, sp, #40	; 0x28
 800726a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800726e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007272:	f00c fb35 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007276:	ee18 1a10 	vmov	r1, s16
 800727a:	4630      	mov	r0, r6
 800727c:	f009 fd08 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007280:	220c      	movs	r2, #12
 8007282:	4650      	mov	r0, sl
 8007284:	2136      	movs	r1, #54	; 0x36
 8007286:	f7fb fc2d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800728a:	4651      	mov	r1, sl
 800728c:	4640      	mov	r0, r8
        color = newColor;
 800728e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8007292:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8007296:	f00c f889 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800729a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800729e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80072a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80072a6:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80072a8:	a90a      	add	r1, sp, #40	; 0x28
 80072aa:	4650      	mov	r0, sl
 80072ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072b0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80072b4:	f00c fb14 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072b8:	4630      	mov	r0, r6
 80072ba:	4651      	mov	r1, sl
 80072bc:	f009 fce8 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80072c0:	4620      	mov	r0, r4
 80072c2:	b00d      	add	sp, #52	; 0x34
 80072c4:	ecbd 8b02 	vpop	{d8}
 80072c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072cc:	0802ee30 	.word	0x0802ee30
 80072d0:	0802fcb4 	.word	0x0802fcb4
 80072d4:	0802ff00 	.word	0x0802ff00
 80072d8:	0802f9e8 	.word	0x0802f9e8
 80072dc:	0802ee18 	.word	0x0802ee18
 80072e0:	08007009 	.word	0x08007009
 80072e4:	0802d760 	.word	0x0802d760

080072e8 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80072e8:	4770      	bx	lr

080072ea <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80072ea:	4770      	bx	lr

080072ec <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80072ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80072ee:	68c2      	ldr	r2, [r0, #12]
 80072f0:	6844      	ldr	r4, [r0, #4]
 80072f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80072f4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80072f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80072fa:	07d2      	lsls	r2, r2, #31
 80072fc:	bf48      	it	mi
 80072fe:	5962      	ldrmi	r2, [r4, r5]
 8007300:	689b      	ldr	r3, [r3, #8]
    }
 8007302:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007304:	bf48      	it	mi
 8007306:	58d3      	ldrmi	r3, [r2, r3]
 8007308:	4718      	bx	r3

0800730a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800730a:	6843      	ldr	r3, [r0, #4]
 800730c:	b12b      	cbz	r3, 800731a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800730e:	6883      	ldr	r3, [r0, #8]
 8007310:	b92b      	cbnz	r3, 800731e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007312:	68c0      	ldr	r0, [r0, #12]
 8007314:	f000 0001 	and.w	r0, r0, #1
 8007318:	4770      	bx	lr
 800731a:	4618      	mov	r0, r3
 800731c:	4770      	bx	lr
 800731e:	2001      	movs	r0, #1
    }
 8007320:	4770      	bx	lr

08007322 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007322:	b510      	push	{r4, lr}
 8007324:	2110      	movs	r1, #16
 8007326:	4604      	mov	r4, r0
 8007328:	f023 fe3f 	bl	802afaa <_ZdlPvj>
 800732c:	4620      	mov	r0, r4
 800732e:	bd10      	pop	{r4, pc}

08007330 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007330:	b510      	push	{r4, lr}
 8007332:	4b03      	ldr	r3, [pc, #12]	; (8007340 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007334:	6003      	str	r3, [r0, #0]
 8007336:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007338:	f00e f880 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800733c:	4620      	mov	r0, r4
 800733e:	bd10      	pop	{r4, pc}
 8007340:	0802ee7c 	.word	0x0802ee7c

08007344 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007344:	b507      	push	{r0, r1, r2, lr}
 8007346:	4b07      	ldr	r3, [pc, #28]	; (8007364 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007348:	6003      	str	r3, [r0, #0]
 800734a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800734c:	f00e f876 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007350:	9801      	ldr	r0, [sp, #4]
 8007352:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007356:	f023 fe28 	bl	802afaa <_ZdlPvj>
 800735a:	9801      	ldr	r0, [sp, #4]
 800735c:	b003      	add	sp, #12
 800735e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007362:	bf00      	nop
 8007364:	0802ee7c 	.word	0x0802ee7c

08007368 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007368:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800736a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800736e:	4299      	cmp	r1, r3
{
 8007370:	4604      	mov	r4, r0
 8007372:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007374:	d103      	bne.n	800737e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007376:	f00f fd63 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800737a:	f7fd fba5 	bl	8004ac8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800737e:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007382:	429d      	cmp	r5, r3
 8007384:	d103      	bne.n	800738e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8007386:	f00f fd5b 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 800738a:	f7fd fbbd 	bl	8004b08 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800738e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8007392:	42a5      	cmp	r5, r4
 8007394:	d105      	bne.n	80073a2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8007396:	f00f fd53 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 800739a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800739e:	f7fd bbc3 	b.w	8004b28 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80073a2:	bd38      	pop	{r3, r4, r5, pc}

080073a4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80073a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073a8:	ed2d 8b06 	vpush	{d8-d10}
 80073ac:	4604      	mov	r4, r0
 80073ae:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80073b0:	46a3      	mov	fp, r4
 80073b2:	2500      	movs	r5, #0
 80073b4:	f011 f9c4 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 80073b8:	4b66      	ldr	r3, [pc, #408]	; (8007554 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80073ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80073bc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80073c0:	2226      	movs	r2, #38	; 0x26
 80073c2:	4629      	mov	r1, r5
 80073c4:	4658      	mov	r0, fp
 80073c6:	f024 fe08 	bl	802bfda <memset>
 80073ca:	4658      	mov	r0, fp
 80073cc:	f7fb fbbc 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 80073d0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80073d4:	26ff      	movs	r6, #255	; 0xff
 80073d6:	4b60      	ldr	r3, [pc, #384]	; (8007558 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80073d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80073da:	2226      	movs	r2, #38	; 0x26
 80073dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80073e0:	4629      	mov	r1, r5
 80073e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80073e6:	4650      	mov	r0, sl
 80073e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80073ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80073ee:	f024 fdf4 	bl	802bfda <memset>
 80073f2:	4650      	mov	r0, sl
 80073f4:	f7fb fba8 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 80073f8:	4b58      	ldr	r3, [pc, #352]	; (800755c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80073fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80073fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007400:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007404:	a90a      	add	r1, sp, #40	; 0x28
 8007406:	4650      	mov	r0, sl
 8007408:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800740c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007410:	f00d f817 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007414:	4648      	mov	r0, r9
 8007416:	f7fb fbfb 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800741a:	4b51      	ldr	r3, [pc, #324]	; (8007560 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 800741c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007420:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007424:	4618      	mov	r0, r3
 8007426:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800742a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800742e:	ee08 3a90 	vmov	s17, r3
 8007432:	f7fb fbed 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8007436:	4638      	mov	r0, r7
 8007438:	f00b fcf6 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 800743c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007440:	4618      	mov	r0, r3
 8007442:	9303      	str	r3, [sp, #12]
 8007444:	f7fb f984 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007448:	4b46      	ldr	r3, [pc, #280]	; (8007564 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 800744a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800744e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007452:	3324      	adds	r3, #36	; 0x24
 8007454:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007458:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 800745c:	4640      	mov	r0, r8
 800745e:	f7fb fbd7 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8007462:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007466:	4618      	mov	r0, r3
 8007468:	ee08 3a10 	vmov	s16, r3
 800746c:	f7fb fbd0 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8007470:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007474:	4618      	mov	r0, r3
 8007476:	ee09 3a10 	vmov	s18, r3
 800747a:	f00d f919 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800747e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8007482:	4618      	mov	r0, r3
 8007484:	ee09 3a90 	vmov	s19, r3
 8007488:	f00d f912 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800748c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8007490:	4618      	mov	r0, r3
 8007492:	ee0a 3a10 	vmov	s20, r3
 8007496:	f00d f90b 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800749a:	4a33      	ldr	r2, [pc, #204]	; (8007568 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 800749c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80074a0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80074a4:	4a31      	ldr	r2, [pc, #196]	; (800756c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80074a6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80074aa:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80074ae:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80074b2:	f00d ffb9 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80074b6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80074ba:	462a      	mov	r2, r5
 80074bc:	4658      	mov	r0, fp
 80074be:	9300      	str	r3, [sp, #0]
 80074c0:	4629      	mov	r1, r5
 80074c2:	23f0      	movs	r3, #240	; 0xf0
 80074c4:	f7fb fb1b 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 80074c8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80074ca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80074ce:	66a3      	str	r3, [r4, #104]	; 0x68
 80074d0:	4659      	mov	r1, fp
 80074d2:	4630      	mov	r0, r6
 80074d4:	f009 fbdc 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80074d8:	462a      	mov	r2, r5
 80074da:	4650      	mov	r0, sl
 80074dc:	4629      	mov	r1, r5
 80074de:	f7fb fb01 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80074e2:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80074e4:	4650      	mov	r0, sl
 80074e6:	a90a      	add	r1, sp, #40	; 0x28
 80074e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80074ec:	f00c ffa9 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80074f0:	4651      	mov	r1, sl
 80074f2:	4630      	mov	r0, r6
 80074f4:	f009 fbcc 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80074f8:	f44f 729a 	mov.w	r2, #308	; 0x134
 80074fc:	2156      	movs	r1, #86	; 0x56
 80074fe:	4648      	mov	r0, r9
 8007500:	f7fb faf0 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007504:	f04f 33ff 	mov.w	r3, #4294967295
 8007508:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800750c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007510:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007514:	f10d 0b10 	add.w	fp, sp, #16
 8007518:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800751c:	4649      	mov	r1, r9
 800751e:	4658      	mov	r0, fp
 8007520:	4798      	blx	r3
 8007522:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007526:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800752a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800752e:	4b10      	ldr	r3, [pc, #64]	; (8007570 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007530:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007532:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007536:	b92b      	cbnz	r3, 8007544 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007538:	4b0e      	ldr	r3, [pc, #56]	; (8007574 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800753a:	4a0f      	ldr	r2, [pc, #60]	; (8007578 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800753c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800753e:	480f      	ldr	r0, [pc, #60]	; (800757c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007540:	f024 fb46 	bl	802bbd0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007544:	4b0e      	ldr	r3, [pc, #56]	; (8007580 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007546:	881b      	ldrh	r3, [r3, #0]
 8007548:	2b26      	cmp	r3, #38	; 0x26
 800754a:	d81d      	bhi.n	8007588 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 800754c:	4b0d      	ldr	r3, [pc, #52]	; (8007584 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800754e:	4a0a      	ldr	r2, [pc, #40]	; (8007578 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007550:	2161      	movs	r1, #97	; 0x61
 8007552:	e7f4      	b.n	800753e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007554:	0802ee7c 	.word	0x0802ee7c
 8007558:	0802fcb4 	.word	0x0802fcb4
 800755c:	0802ff00 	.word	0x0802ff00
 8007560:	0802d800 	.word	0x0802d800
 8007564:	0802f9e8 	.word	0x0802f9e8
 8007568:	0802ee64 	.word	0x0802ee64
 800756c:	08007369 	.word	0x08007369
 8007570:	20013894 	.word	0x20013894
 8007574:	0802d5b0 	.word	0x0802d5b0
 8007578:	0802d6b5 	.word	0x0802d6b5
 800757c:	0802d62d 	.word	0x0802d62d
 8007580:	20013898 	.word	0x20013898
 8007584:	0802d674 	.word	0x0802d674
        return texts->getText(typedTextId);
 8007588:	4b95      	ldr	r3, [pc, #596]	; (80077e0 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 800758a:	2126      	movs	r1, #38	; 0x26
 800758c:	6818      	ldr	r0, [r3, #0]
 800758e:	f001 faad 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8007592:	4a94      	ldr	r2, [pc, #592]	; (80077e4 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8007594:	4603      	mov	r3, r0
 8007596:	2104      	movs	r1, #4
 8007598:	4650      	mov	r0, sl
 800759a:	f012 fdff 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800759e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80075a2:	4648      	mov	r0, r9
 80075a4:	f00c f97c 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80075a8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 80077e8 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80075ac:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80075b0:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80075b2:	a90a      	add	r1, sp, #40	; 0x28
 80075b4:	4648      	mov	r0, r9
 80075b6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075ba:	f00c f991 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075be:	4649      	mov	r1, r9
 80075c0:	4630      	mov	r0, r6
 80075c2:	f009 fb65 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80075c6:	223c      	movs	r2, #60	; 0x3c
 80075c8:	ee18 0a90 	vmov	r0, s17
 80075cc:	2129      	movs	r1, #41	; 0x29
 80075ce:	f7fb fa89 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80075d2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80075d6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80075da:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80075de:	4658      	mov	r0, fp
        linespace = space;
 80075e0:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 80075e4:	f00b fee2 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075e8:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80075ec:	f504 7390 	add.w	r3, r4, #288	; 0x120
 80075f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075f4:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 80075f6:	ee18 0a90 	vmov	r0, s17
 80075fa:	a90a      	add	r1, sp, #40	; 0x28
 80075fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007600:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007604:	f00c f96c 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007608:	ee18 1a90 	vmov	r1, s17
 800760c:	4630      	mov	r0, r6
 800760e:	f009 fb3f 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007612:	230a      	movs	r3, #10
 8007614:	9300      	str	r3, [sp, #0]
 8007616:	2232      	movs	r2, #50	; 0x32
 8007618:	23f0      	movs	r3, #240	; 0xf0
 800761a:	4629      	mov	r1, r5
 800761c:	4638      	mov	r0, r7
 800761e:	f7fb fa6e 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007622:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007626:	22a0      	movs	r2, #160	; 0xa0
 8007628:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800762c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007630:	9b03      	ldr	r3, [sp, #12]
 8007632:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007636:	4611      	mov	r1, r2
 8007638:	4638      	mov	r0, r7
 800763a:	f00b fd0b 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800763e:	22a0      	movs	r2, #160	; 0xa0
 8007640:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007644:	4638      	mov	r0, r7
 8007646:	f00b fd10 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800764a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800764e:	2b20      	cmp	r3, #32
 8007650:	d005      	beq.n	800765e <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8007652:	2320      	movs	r3, #32
 8007654:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007658:	4638      	mov	r0, r7
 800765a:	f00b fc05 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800765e:	4638      	mov	r0, r7
 8007660:	2101      	movs	r1, #1
 8007662:	f00b fd0d 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007666:	4639      	mov	r1, r7
 8007668:	4630      	mov	r0, r6
 800766a:	f009 fb11 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800766e:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007672:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007674:	2223      	movs	r2, #35	; 0x23
 8007676:	4640      	mov	r0, r8
        linespace = space;
 8007678:	f04f 0a00 	mov.w	sl, #0
 800767c:	2145      	movs	r1, #69	; 0x45
 800767e:	f7fb fa31 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007682:	4641      	mov	r1, r8
 8007684:	4638      	mov	r0, r7
        color = newColor;
 8007686:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 800768a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800768e:	f00b fe8d 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007692:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007696:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800769a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800769e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 80077e8 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80076a2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80076a6:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 80076a8:	a90a      	add	r1, sp, #40	; 0x28
 80076aa:	4640      	mov	r0, r8
 80076ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076b0:	f00c f916 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076b4:	4641      	mov	r1, r8
 80076b6:	4630      	mov	r0, r6
 80076b8:	f009 faea 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80076bc:	ee18 0a10 	vmov	r0, s16
 80076c0:	220c      	movs	r2, #12
 80076c2:	2136      	movs	r1, #54	; 0x36
 80076c4:	f7fb fa0e 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80076c8:	ee18 1a10 	vmov	r1, s16
 80076cc:	4638      	mov	r0, r7
        color = newColor;
 80076ce:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80076d2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80076d6:	f00b fe69 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076da:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80076de:	ee18 3a10 	vmov	r3, s16
 80076e2:	333c      	adds	r3, #60	; 0x3c
 80076e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80076e8:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 80076ea:	ee18 0a10 	vmov	r0, s16
 80076ee:	a90a      	add	r1, sp, #40	; 0x28
 80076f0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076f4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80076f8:	f00c f8f2 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076fc:	ee18 1a10 	vmov	r1, s16
 8007700:	4630      	mov	r0, r6
 8007702:	f009 fac5 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007706:	ee19 0a10 	vmov	r0, s18
 800770a:	22f0      	movs	r2, #240	; 0xf0
 800770c:	2121      	movs	r1, #33	; 0x21
 800770e:	f7fb f9e9 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007712:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007716:	aa0a      	add	r2, sp, #40	; 0x28
 8007718:	f04f 0802 	mov.w	r8, #2
 800771c:	a909      	add	r1, sp, #36	; 0x24
 800771e:	ee19 0a10 	vmov	r0, s18
 8007722:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007726:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800772a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800772e:	f00c fc92 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007732:	2347      	movs	r3, #71	; 0x47
 8007734:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007738:	3710      	adds	r7, #16
        updateTextPosition();
 800773a:	ee19 0a10 	vmov	r0, s18
 800773e:	f7fb fa15 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007742:	ee19 1a10 	vmov	r1, s18
 8007746:	4630      	mov	r0, r6
        colorPressed = col;
 8007748:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 800774c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007750:	f009 fa9e 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007754:	ee19 0a90 	vmov	r0, s19
 8007758:	22aa      	movs	r2, #170	; 0xaa
 800775a:	2121      	movs	r1, #33	; 0x21
 800775c:	f7fb f9c2 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007760:	aa0a      	add	r2, sp, #40	; 0x28
 8007762:	a909      	add	r1, sp, #36	; 0x24
 8007764:	ee19 0a90 	vmov	r0, s19
 8007768:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800776c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007770:	f00c fc71 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007774:	2346      	movs	r3, #70	; 0x46
 8007776:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800777a:	ee19 0a90 	vmov	r0, s19
 800777e:	f7fb f9f5 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007782:	ee19 1a90 	vmov	r1, s19
 8007786:	4630      	mov	r0, r6
        colorPressed = col;
 8007788:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 800778c:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007790:	f009 fa7e 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8007794:	ee1a 0a10 	vmov	r0, s20
 8007798:	2264      	movs	r2, #100	; 0x64
 800779a:	2121      	movs	r1, #33	; 0x21
 800779c:	f7fb f9a2 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80077a0:	aa0a      	add	r2, sp, #40	; 0x28
 80077a2:	a909      	add	r1, sp, #36	; 0x24
 80077a4:	ee1a 0a10 	vmov	r0, s20
 80077a8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80077ac:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80077b0:	f00c fc51 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80077b4:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80077b6:	ee1a 0a10 	vmov	r0, s20
 80077ba:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80077be:	f7fb f9d5 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077c2:	4630      	mov	r0, r6
        colorPressed = col;
 80077c4:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80077c8:	ee1a 1a10 	vmov	r1, s20
 80077cc:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80077d0:	f009 fa5e 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80077d4:	4620      	mov	r0, r4
 80077d6:	b00d      	add	sp, #52	; 0x34
 80077d8:	ecbd 8b06 	vpop	{d8-d10}
 80077dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80077e0:	200138a0 	.word	0x200138a0
 80077e4:	0802d6ed 	.word	0x0802d6ed
 80077e8:	0802d760 	.word	0x0802d760

080077ec <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 80077ec:	4770      	bx	lr

080077ee <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 80077ee:	4770      	bx	lr

080077f0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80077f0:	4770      	bx	lr

080077f2 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80077f2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80077f4:	68c2      	ldr	r2, [r0, #12]
 80077f6:	6844      	ldr	r4, [r0, #4]
 80077f8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80077fa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80077fc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007800:	07d2      	lsls	r2, r2, #31
 8007802:	bf48      	it	mi
 8007804:	5962      	ldrmi	r2, [r4, r5]
 8007806:	689b      	ldr	r3, [r3, #8]
    }
 8007808:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800780a:	bf48      	it	mi
 800780c:	58d3      	ldrmi	r3, [r2, r3]
 800780e:	4718      	bx	r3

08007810 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007810:	6843      	ldr	r3, [r0, #4]
 8007812:	b12b      	cbz	r3, 8007820 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007814:	6883      	ldr	r3, [r0, #8]
 8007816:	b92b      	cbnz	r3, 8007824 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007818:	68c0      	ldr	r0, [r0, #12]
 800781a:	f000 0001 	and.w	r0, r0, #1
 800781e:	4770      	bx	lr
 8007820:	4618      	mov	r0, r3
 8007822:	4770      	bx	lr
 8007824:	2001      	movs	r0, #1
    }
 8007826:	4770      	bx	lr

08007828 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007828:	b510      	push	{r4, lr}
 800782a:	2110      	movs	r1, #16
 800782c:	4604      	mov	r4, r0
 800782e:	f023 fbbc 	bl	802afaa <_ZdlPvj>
 8007832:	4620      	mov	r0, r4
 8007834:	bd10      	pop	{r4, pc}
	...

08007838 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007838:	b510      	push	{r4, lr}
 800783a:	4b03      	ldr	r3, [pc, #12]	; (8007848 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 800783c:	6003      	str	r3, [r0, #0]
 800783e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007840:	f00d fdfc 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007844:	4620      	mov	r0, r4
 8007846:	bd10      	pop	{r4, pc}
 8007848:	0802eec8 	.word	0x0802eec8

0800784c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800784c:	b507      	push	{r0, r1, r2, lr}
 800784e:	4b07      	ldr	r3, [pc, #28]	; (800786c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007850:	6003      	str	r3, [r0, #0]
 8007852:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007854:	f00d fdf2 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007858:	9801      	ldr	r0, [sp, #4]
 800785a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800785e:	f023 fba4 	bl	802afaa <_ZdlPvj>
 8007862:	9801      	ldr	r0, [sp, #4]
 8007864:	b003      	add	sp, #12
 8007866:	f85d fb04 	ldr.w	pc, [sp], #4
 800786a:	bf00      	nop
 800786c:	0802eec8 	.word	0x0802eec8

08007870 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007870:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007872:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007876:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 800787a:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 800787c:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 800787e:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8007882:	d105      	bne.n	8007890 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8007884:	6803      	ldr	r3, [r0, #0]
 8007886:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007888:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 800788a:	2300      	movs	r3, #0
 800788c:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8007890:	bd10      	pop	{r4, pc}

08007892 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8007892:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007896:	4288      	cmp	r0, r1
{
 8007898:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800789a:	d105      	bne.n	80078a8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800789c:	f00f fad0 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
}
 80078a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80078a4:	f7fd b920 	b.w	8004ae8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80078a8:	bd08      	pop	{r3, pc}
	...

080078ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80078ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078b0:	ed2d 8b0a 	vpush	{d8-d12}
 80078b4:	4604      	mov	r4, r0
 80078b6:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80078b8:	46a3      	mov	fp, r4
 80078ba:	2500      	movs	r5, #0
 80078bc:	f010 ff40 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 80078c0:	4baa      	ldr	r3, [pc, #680]	; (8007b6c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 80078c2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80078c4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80078c8:	2226      	movs	r2, #38	; 0x26
 80078ca:	4629      	mov	r1, r5
 80078cc:	4658      	mov	r0, fp
 80078ce:	f024 fb84 	bl	802bfda <memset>
 80078d2:	4658      	mov	r0, fp
 80078d4:	f7fb f938 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 80078d8:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80078dc:	27ff      	movs	r7, #255	; 0xff
 80078de:	4ba4      	ldr	r3, [pc, #656]	; (8007b70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 80078e0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80078e2:	2226      	movs	r2, #38	; 0x26
 80078e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80078e8:	4629      	mov	r1, r5
 80078ea:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 80078ee:	4630      	mov	r0, r6
 80078f0:	66a5      	str	r5, [r4, #104]	; 0x68
 80078f2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80078f6:	f024 fb70 	bl	802bfda <memset>
 80078fa:	4630      	mov	r0, r6
 80078fc:	f7fb f924 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8007900:	4b9c      	ldr	r3, [pc, #624]	; (8007b74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007902:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007904:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007908:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800790c:	a90a      	add	r1, sp, #40	; 0x28
 800790e:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8007910:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007914:	f00c fd95 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007918:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800791c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8007920:	4618      	mov	r0, r3
 8007922:	ee09 3a10 	vmov	s18, r3
 8007926:	f504 7920 	add.w	r9, r4, #640	; 0x280
 800792a:	f7fb f971 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800792e:	4640      	mov	r0, r8
 8007930:	f00c fa4a 	bl	8013dc8 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007934:	4648      	mov	r0, r9
 8007936:	f7fb f96b 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800793a:	4f8f      	ldr	r7, [pc, #572]	; (8007b78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 800793c:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 8007940:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8007944:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007946:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800794a:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 800794e:	f7fb f95f 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8007952:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007956:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 800795a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800795c:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007960:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007964:	f7fb f954 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8007968:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 800796c:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 8007970:	4618      	mov	r0, r3
 8007972:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007976:	ee0a 3a90 	vmov	s21, r3
 800797a:	f7fb f949 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800797e:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007982:	4618      	mov	r0, r3
 8007984:	ee0b 3a10 	vmov	s22, r3
 8007988:	f7fb f942 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800798c:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007990:	4618      	mov	r0, r3
 8007992:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8007996:	ee0b 3a90 	vmov	s23, r3
 800799a:	f7fb f939 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800799e:	4650      	mov	r0, sl
 80079a0:	f00b fa42 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 80079a4:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80079a8:	4618      	mov	r0, r3
 80079aa:	9302      	str	r3, [sp, #8]
 80079ac:	f7fa fed0 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80079b0:	4b72      	ldr	r3, [pc, #456]	; (8007b7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80079b2:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80079b6:	3324      	adds	r3, #36	; 0x24
 80079b8:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80079bc:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80079c0:	4618      	mov	r0, r3
 80079c2:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80079c6:	ee08 3a10 	vmov	s16, r3
 80079ca:	f7fb f921 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80079ce:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80079d2:	4618      	mov	r0, r3
 80079d4:	ee08 3a90 	vmov	s17, r3
 80079d8:	f7fb f91a 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80079dc:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 80079e0:	4618      	mov	r0, r3
 80079e2:	ee0c 3a10 	vmov	s24, r3
 80079e6:	f00c fe63 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80079ea:	4a65      	ldr	r2, [pc, #404]	; (8007b80 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80079ec:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80079f0:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 80079f4:	4a63      	ldr	r2, [pc, #396]	; (8007b84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80079f6:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 80079fa:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80079fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007a02:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007a06:	f00d fd0f 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007a0a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007a0e:	462a      	mov	r2, r5
 8007a10:	4658      	mov	r0, fp
 8007a12:	9300      	str	r3, [sp, #0]
 8007a14:	4629      	mov	r1, r5
 8007a16:	23f0      	movs	r3, #240	; 0xf0
 8007a18:	f7fb f871 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a1c:	1d27      	adds	r7, r4, #4
        color = newColor;
 8007a1e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007a22:	66a3      	str	r3, [r4, #104]	; 0x68
 8007a24:	4659      	mov	r1, fp
 8007a26:	4638      	mov	r0, r7
 8007a28:	f009 f932 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007a2c:	462a      	mov	r2, r5
 8007a2e:	4630      	mov	r0, r6
 8007a30:	4629      	mov	r1, r5
 8007a32:	f7fb f857 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007a36:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007a3a:	4630      	mov	r0, r6
 8007a3c:	a90a      	add	r1, sp, #40	; 0x28
 8007a3e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a42:	f00c fcfe 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007a46:	4631      	mov	r1, r6
 8007a48:	4638      	mov	r0, r7
 8007a4a:	f009 f921 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007a4e:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 8007a50:	223c      	movs	r2, #60	; 0x3c
 8007a52:	ee19 0a10 	vmov	r0, s18
 8007a56:	211f      	movs	r1, #31
        color = newColor;
 8007a58:	f04f 3bff 	mov.w	fp, #4294967295
 8007a5c:	f7fb f842 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007a60:	ee19 1a10 	vmov	r1, s18
 8007a64:	4630      	mov	r0, r6
        color = newColor;
 8007a66:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 8007a6a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007a6e:	f00b fc9d 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a72:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007a76:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007a7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007a7e:	4b42      	ldr	r3, [pc, #264]	; (8007b88 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007a80:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007a82:	ee19 0a10 	vmov	r0, s18
 8007a86:	f04f 0335 	mov.w	r3, #53	; 0x35
 8007a8a:	a90a      	add	r1, sp, #40	; 0x28
 8007a8c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a90:	f00b ff26 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a94:	ee19 1a10 	vmov	r1, s18
 8007a98:	4638      	mov	r0, r7
 8007a9a:	f009 f8f9 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007a9e:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8007aa0:	4640      	mov	r0, r8
 8007aa2:	a90a      	add	r1, sp, #40	; 0x28
 8007aa4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007aa8:	f009 f884 	bl	8010bb4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007aac:	236a      	movs	r3, #106	; 0x6a
 8007aae:	4640      	mov	r0, r8
 8007ab0:	9300      	str	r3, [sp, #0]
 8007ab2:	225e      	movs	r2, #94	; 0x5e
 8007ab4:	23b8      	movs	r3, #184	; 0xb8
 8007ab6:	211c      	movs	r1, #28
 8007ab8:	f7fb f821 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007abc:	225c      	movs	r2, #92	; 0x5c
 8007abe:	4611      	mov	r1, r2
 8007ac0:	4640      	mov	r0, r8
 8007ac2:	f00c fa2c 	bl	8013f1e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007ac6:	4640      	mov	r0, r8
 8007ac8:	225a      	movs	r2, #90	; 0x5a
 8007aca:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007ace:	f00c faab 	bl	8014028 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 8007ad2:	462b      	mov	r3, r5
 8007ad4:	225a      	movs	r2, #90	; 0x5a
 8007ad6:	4640      	mov	r0, r8
 8007ad8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007adc:	9500      	str	r5, [sp, #0]
 8007ade:	f008 ff16 	bl	801090e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007ae2:	4640      	mov	r0, r8
 8007ae4:	4629      	mov	r1, r5
 8007ae6:	f00c fa49 	bl	8013f7c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007aea:	2335      	movs	r3, #53	; 0x35
 8007aec:	2208      	movs	r2, #8
 8007aee:	4640      	mov	r0, r8
 8007af0:	2105      	movs	r1, #5
 8007af2:	f00c f9ff 	bl	8013ef4 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007af6:	4640      	mov	r0, r8
 8007af8:	2101      	movs	r1, #1
 8007afa:	f00c f99d 	bl	8013e38 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007afe:	4640      	mov	r0, r8
 8007b00:	2101      	movs	r1, #1
 8007b02:	f00c f99c 	bl	8013e3e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007b06:	4641      	mov	r1, r8
 8007b08:	4638      	mov	r0, r7
 8007b0a:	f009 f8c1 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007b0e:	230f      	movs	r3, #15
 8007b10:	22e6      	movs	r2, #230	; 0xe6
 8007b12:	9300      	str	r3, [sp, #0]
 8007b14:	4629      	mov	r1, r5
 8007b16:	23f0      	movs	r3, #240	; 0xf0
 8007b18:	4648      	mov	r0, r9
 8007b1a:	f7fa fff0 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b1e:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8007b22:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007b26:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007b2a:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007b2e:	4649      	mov	r1, r9
 8007b30:	4630      	mov	r0, r6
 8007b32:	4798      	blx	r3
 8007b34:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b38:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b3c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007ba0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007b40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007b44:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8007b48:	9303      	str	r3, [sp, #12]
 8007b4a:	f8d8 3000 	ldr.w	r3, [r8]
 8007b4e:	b92b      	cbnz	r3, 8007b5c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 8007b50:	4b0e      	ldr	r3, [pc, #56]	; (8007b8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007b52:	4a0f      	ldr	r2, [pc, #60]	; (8007b90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007b54:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b56:	480f      	ldr	r0, [pc, #60]	; (8007b94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007b58:	f024 f83a 	bl	802bbd0 <__assert_func>
 8007b5c:	4b0e      	ldr	r3, [pc, #56]	; (8007b98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007b5e:	881b      	ldrh	r3, [r3, #0]
 8007b60:	2b15      	cmp	r3, #21
 8007b62:	d81f      	bhi.n	8007ba4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8007b64:	4b0d      	ldr	r3, [pc, #52]	; (8007b9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8007b66:	4a0a      	ldr	r2, [pc, #40]	; (8007b90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007b68:	2161      	movs	r1, #97	; 0x61
 8007b6a:	e7f4      	b.n	8007b56 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 8007b6c:	0802eec8 	.word	0x0802eec8
 8007b70:	0802fcb4 	.word	0x0802fcb4
 8007b74:	0802ff00 	.word	0x0802ff00
 8007b78:	0802d800 	.word	0x0802d800
 8007b7c:	0802f9e8 	.word	0x0802f9e8
 8007b80:	0802eeb0 	.word	0x0802eeb0
 8007b84:	08007893 	.word	0x08007893
 8007b88:	0802d760 	.word	0x0802d760
 8007b8c:	0802d5b0 	.word	0x0802d5b0
 8007b90:	0802d6b5 	.word	0x0802d6b5
 8007b94:	0802d62d 	.word	0x0802d62d
 8007b98:	20013898 	.word	0x20013898
 8007b9c:	0802d674 	.word	0x0802d674
 8007ba0:	20013894 	.word	0x20013894
        return texts->getText(typedTextId);
 8007ba4:	4bdb      	ldr	r3, [pc, #876]	; (8007f14 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007ba6:	2115      	movs	r1, #21
 8007ba8:	6818      	ldr	r0, [r3, #0]
 8007baa:	f000 ff9f 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8007bae:	4ada      	ldr	r2, [pc, #872]	; (8007f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007bb0:	4603      	mov	r3, r0
 8007bb2:	210a      	movs	r1, #10
 8007bb4:	9803      	ldr	r0, [sp, #12]
 8007bb6:	f012 faf1 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007bba:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007bbc:	4bd7      	ldr	r3, [pc, #860]	; (8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007bbe:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007bc2:	4648      	mov	r0, r9
 8007bc4:	930a      	str	r3, [sp, #40]	; 0x28
 8007bc6:	a90a      	add	r1, sp, #40	; 0x28
 8007bc8:	2318      	movs	r3, #24
 8007bca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bce:	f00b fe87 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bd2:	4649      	mov	r1, r9
 8007bd4:	4638      	mov	r0, r7
 8007bd6:	f009 f85b 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007bda:	210f      	movs	r1, #15
 8007bdc:	22d7      	movs	r2, #215	; 0xd7
 8007bde:	ee19 0a90 	vmov	r0, s19
 8007be2:	9100      	str	r1, [sp, #0]
 8007be4:	23f0      	movs	r3, #240	; 0xf0
 8007be6:	4629      	mov	r1, r5
 8007be8:	f7fa ff89 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007bec:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8007bf0:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007bf4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007bf8:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007bfc:	ee19 1a90 	vmov	r1, s19
 8007c00:	4630      	mov	r0, r6
 8007c02:	4798      	blx	r3
 8007c04:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c08:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007c0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c10:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007c14:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007c18:	2b00      	cmp	r3, #0
 8007c1a:	d099      	beq.n	8007b50 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007c1c:	49c0      	ldr	r1, [pc, #768]	; (8007f20 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007c1e:	880b      	ldrh	r3, [r1, #0]
 8007c20:	2b16      	cmp	r3, #22
 8007c22:	d99f      	bls.n	8007b64 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007c24:	4abb      	ldr	r2, [pc, #748]	; (8007f14 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007c26:	2116      	movs	r1, #22
 8007c28:	6810      	ldr	r0, [r2, #0]
 8007c2a:	f000 ff5f 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8007c2e:	4aba      	ldr	r2, [pc, #744]	; (8007f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007c30:	4603      	mov	r3, r0
 8007c32:	210a      	movs	r1, #10
 8007c34:	4648      	mov	r0, r9
 8007c36:	f012 fab1 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007c3a:	4bb8      	ldr	r3, [pc, #736]	; (8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c3c:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007c40:	a80a      	add	r0, sp, #40	; 0x28
 8007c42:	4601      	mov	r1, r0
 8007c44:	930a      	str	r3, [sp, #40]	; 0x28
 8007c46:	ee19 0a90 	vmov	r0, s19
 8007c4a:	2319      	movs	r3, #25
 8007c4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c50:	f00b fe46 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c54:	ee19 1a90 	vmov	r1, s19
 8007c58:	4638      	mov	r0, r7
 8007c5a:	f009 f819 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007c5e:	200f      	movs	r0, #15
 8007c60:	22c8      	movs	r2, #200	; 0xc8
 8007c62:	9000      	str	r0, [sp, #0]
 8007c64:	23f0      	movs	r3, #240	; 0xf0
 8007c66:	ee1a 0a10 	vmov	r0, s20
 8007c6a:	4629      	mov	r1, r5
 8007c6c:	f7fa ff47 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c70:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8007c74:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007c78:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007c7c:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007c80:	ee1a 1a10 	vmov	r1, s20
 8007c84:	4630      	mov	r0, r6
 8007c86:	4798      	blx	r3
 8007c88:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c8c:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007c90:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007c94:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007c98:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	f43f af57 	beq.w	8007b50 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ca2:	499f      	ldr	r1, [pc, #636]	; (8007f20 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007ca4:	880b      	ldrh	r3, [r1, #0]
 8007ca6:	2b17      	cmp	r3, #23
 8007ca8:	f67f af5c 	bls.w	8007b64 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007cac:	4a99      	ldr	r2, [pc, #612]	; (8007f14 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007cae:	2117      	movs	r1, #23
 8007cb0:	6810      	ldr	r0, [r2, #0]
 8007cb2:	f000 ff1b 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8007cb6:	4a98      	ldr	r2, [pc, #608]	; (8007f18 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007cb8:	4603      	mov	r3, r0
 8007cba:	210a      	movs	r1, #10
 8007cbc:	4648      	mov	r0, r9
 8007cbe:	f012 fa6d 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007cc2:	4b96      	ldr	r3, [pc, #600]	; (8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007cc4:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007cc6:	ee1a 0a10 	vmov	r0, s20
 8007cca:	231a      	movs	r3, #26
 8007ccc:	a90a      	add	r1, sp, #40	; 0x28
 8007cce:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007cd2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cd6:	f00b fe03 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cda:	ee1a 1a10 	vmov	r1, s20
 8007cde:	4638      	mov	r0, r7
 8007ce0:	f008 ffd6 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007ce4:	224c      	movs	r2, #76	; 0x4c
 8007ce6:	ee1a 0a90 	vmov	r0, s21
 8007cea:	2171      	movs	r1, #113	; 0x71
 8007cec:	f7fa fefa 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007cf0:	ee1a 1a90 	vmov	r1, s21
 8007cf4:	4630      	mov	r0, r6
        color = newColor;
 8007cf6:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 8007cfa:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007cfe:	f00b fb55 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d02:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007d06:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007d0a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d0e:	4b83      	ldr	r3, [pc, #524]	; (8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007d10:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007d12:	ee1a 0a90 	vmov	r0, s21
 8007d16:	231b      	movs	r3, #27
 8007d18:	a90a      	add	r1, sp, #40	; 0x28
 8007d1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d1e:	f00b fddf 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d22:	ee1a 1a90 	vmov	r1, s21
 8007d26:	4638      	mov	r0, r7
 8007d28:	f008 ffb2 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007d2c:	22b9      	movs	r2, #185	; 0xb9
 8007d2e:	ee1b 0a10 	vmov	r0, s22
 8007d32:	4629      	mov	r1, r5
 8007d34:	f7fa fed6 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007d38:	ee1b 1a10 	vmov	r1, s22
 8007d3c:	4630      	mov	r0, r6
        color = newColor;
 8007d3e:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 8007d42:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007d46:	f00b fb31 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d4a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007d4e:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007d52:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d56:	4b71      	ldr	r3, [pc, #452]	; (8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007d58:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007d5a:	ee1b 0a10 	vmov	r0, s22
 8007d5e:	231c      	movs	r3, #28
 8007d60:	a90a      	add	r1, sp, #40	; 0x28
 8007d62:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d66:	f00b fdbb 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d6a:	ee1b 1a10 	vmov	r1, s22
 8007d6e:	4638      	mov	r0, r7
 8007d70:	f008 ff8e 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007d74:	22b9      	movs	r2, #185	; 0xb9
 8007d76:	ee1b 0a90 	vmov	r0, s23
 8007d7a:	21d9      	movs	r1, #217	; 0xd9
 8007d7c:	f7fa feb2 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007d80:	ee1b 1a90 	vmov	r1, s23
 8007d84:	4630      	mov	r0, r6
        color = newColor;
 8007d86:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 8007d8a:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007d8e:	f00b fb0d 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d92:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007d96:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007d9a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d9e:	4b5f      	ldr	r3, [pc, #380]	; (8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007da0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007da2:	ee1b 0a90 	vmov	r0, s23
 8007da6:	231d      	movs	r3, #29
 8007da8:	a90a      	add	r1, sp, #40	; 0x28
 8007daa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dae:	f00b fd97 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007db2:	ee1b 1a90 	vmov	r1, s23
 8007db6:	4638      	mov	r0, r7
 8007db8:	f008 ff6a 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007dbc:	230a      	movs	r3, #10
 8007dbe:	9300      	str	r3, [sp, #0]
 8007dc0:	2232      	movs	r2, #50	; 0x32
 8007dc2:	23f0      	movs	r3, #240	; 0xf0
 8007dc4:	4629      	mov	r1, r5
 8007dc6:	4650      	mov	r0, sl
 8007dc8:	f7fa fe99 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8007dcc:	9b02      	ldr	r3, [sp, #8]
 8007dce:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007dd2:	22a0      	movs	r2, #160	; 0xa0
 8007dd4:	4611      	mov	r1, r2
 8007dd6:	4650      	mov	r0, sl
 8007dd8:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007ddc:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 8007de0:	f00b f938 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007de4:	22a0      	movs	r2, #160	; 0xa0
 8007de6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007dea:	4650      	mov	r0, sl
 8007dec:	f00b f93d 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007df0:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007df4:	2b20      	cmp	r3, #32
 8007df6:	d005      	beq.n	8007e04 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 8007df8:	2320      	movs	r3, #32
 8007dfa:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007dfe:	4650      	mov	r0, sl
 8007e00:	f00b f832 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007e04:	4650      	mov	r0, sl
 8007e06:	2101      	movs	r1, #1
 8007e08:	f00b f93a 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007e0c:	4651      	mov	r1, sl
 8007e0e:	4638      	mov	r0, r7
 8007e10:	f008 ff3e 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007e14:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007e18:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007e1a:	ee18 0a10 	vmov	r0, s16
 8007e1e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007e20:	f04f 0900 	mov.w	r9, #0
 8007e24:	2145      	movs	r1, #69	; 0x45
 8007e26:	f7fa fe5d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007e2a:	ee18 1a10 	vmov	r1, s16
 8007e2e:	4628      	mov	r0, r5
        color = newColor;
 8007e30:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007e34:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007e38:	f00b fab8 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e3c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007e40:	ee18 3a10 	vmov	r3, s16
 8007e44:	333c      	adds	r3, #60	; 0x3c
 8007e46:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007e4a:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007f1c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007e4e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007e52:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007e54:	ee18 0a10 	vmov	r0, s16
 8007e58:	a90a      	add	r1, sp, #40	; 0x28
 8007e5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e5e:	f00b fd3f 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e62:	ee18 1a10 	vmov	r1, s16
 8007e66:	4638      	mov	r0, r7
 8007e68:	f008 ff12 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007e6c:	ee18 0a90 	vmov	r0, s17
 8007e70:	220c      	movs	r2, #12
 8007e72:	2136      	movs	r1, #54	; 0x36
 8007e74:	f7fa fe36 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007e78:	ee18 1a90 	vmov	r1, s17
 8007e7c:	4628      	mov	r0, r5
        color = newColor;
 8007e7e:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007e82:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007e86:	f00b fa91 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007e8e:	ee18 3a90 	vmov	r3, s17
 8007e92:	333c      	adds	r3, #60	; 0x3c
 8007e94:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007e98:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007e9a:	ee18 0a90 	vmov	r0, s17
 8007e9e:	a90a      	add	r1, sp, #40	; 0x28
 8007ea0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ea4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007ea8:	f00b fd1a 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007eac:	ee18 1a90 	vmov	r1, s17
 8007eb0:	4638      	mov	r0, r7
 8007eb2:	f008 feed 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007eb6:	ee1c 0a10 	vmov	r0, s24
 8007eba:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007ebe:	2121      	movs	r1, #33	; 0x21
 8007ec0:	f7fa fe10 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8007ec4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007ec6:	aa0a      	add	r2, sp, #40	; 0x28
 8007ec8:	a909      	add	r1, sp, #36	; 0x24
 8007eca:	ee1c 0a10 	vmov	r0, s24
 8007ece:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007ed2:	2302      	movs	r3, #2
 8007ed4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ed8:	f00c f8bd 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007edc:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007ede:	ee1c 0a10 	vmov	r0, s24
 8007ee2:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007ee6:	f7fa fe41 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007eea:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007eee:	3304      	adds	r3, #4
 8007ef0:	4638      	mov	r0, r7
 8007ef2:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007ef6:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007efa:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007efe:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007f02:	f008 fec5 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007f06:	4620      	mov	r0, r4
 8007f08:	b00d      	add	sp, #52	; 0x34
 8007f0a:	ecbd 8b0a 	vpop	{d8-d12}
 8007f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f12:	bf00      	nop
 8007f14:	200138a0 	.word	0x200138a0
 8007f18:	0802d6ed 	.word	0x0802d6ed
 8007f1c:	0802d760 	.word	0x0802d760
 8007f20:	20013898 	.word	0x20013898

08007f24 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007f24:	4770      	bx	lr

08007f26 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f26:	4770      	bx	lr

08007f28 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007f28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f2a:	68c2      	ldr	r2, [r0, #12]
 8007f2c:	6844      	ldr	r4, [r0, #4]
 8007f2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007f30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007f32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007f36:	07d2      	lsls	r2, r2, #31
 8007f38:	bf48      	it	mi
 8007f3a:	5962      	ldrmi	r2, [r4, r5]
 8007f3c:	689b      	ldr	r3, [r3, #8]
    }
 8007f3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007f40:	bf48      	it	mi
 8007f42:	58d3      	ldrmi	r3, [r2, r3]
 8007f44:	4718      	bx	r3

08007f46 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007f46:	6843      	ldr	r3, [r0, #4]
 8007f48:	b12b      	cbz	r3, 8007f56 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007f4a:	6883      	ldr	r3, [r0, #8]
 8007f4c:	b92b      	cbnz	r3, 8007f5a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007f4e:	68c0      	ldr	r0, [r0, #12]
 8007f50:	f000 0001 	and.w	r0, r0, #1
 8007f54:	4770      	bx	lr
 8007f56:	4618      	mov	r0, r3
 8007f58:	4770      	bx	lr
 8007f5a:	2001      	movs	r0, #1
    }
 8007f5c:	4770      	bx	lr

08007f5e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007f5e:	b510      	push	{r4, lr}
 8007f60:	2110      	movs	r1, #16
 8007f62:	4604      	mov	r4, r0
 8007f64:	f023 f821 	bl	802afaa <_ZdlPvj>
 8007f68:	4620      	mov	r0, r4
 8007f6a:	bd10      	pop	{r4, pc}

08007f6c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007f6c:	b510      	push	{r4, lr}
 8007f6e:	4b03      	ldr	r3, [pc, #12]	; (8007f7c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007f70:	6003      	str	r3, [r0, #0]
 8007f72:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007f74:	f00d fa62 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007f78:	4620      	mov	r0, r4
 8007f7a:	bd10      	pop	{r4, pc}
 8007f7c:	0802ef18 	.word	0x0802ef18

08007f80 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007f80:	b507      	push	{r0, r1, r2, lr}
 8007f82:	4b07      	ldr	r3, [pc, #28]	; (8007fa0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007f84:	6003      	str	r3, [r0, #0]
 8007f86:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007f88:	f00d fa58 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007f8c:	9801      	ldr	r0, [sp, #4]
 8007f8e:	f241 015c 	movw	r1, #4188	; 0x105c
 8007f92:	f023 f80a 	bl	802afaa <_ZdlPvj>
 8007f96:	9801      	ldr	r0, [sp, #4]
 8007f98:	b003      	add	sp, #12
 8007f9a:	f85d fb04 	ldr.w	pc, [sp], #4
 8007f9e:	bf00      	nop
 8007fa0:	0802ef18 	.word	0x0802ef18

08007fa4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007fa4:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007fa8:	4288      	cmp	r0, r1
{
 8007faa:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007fac:	d105      	bne.n	8007fba <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007fae:	f00e ff47 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007fb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007fb6:	f7fc bd97 	b.w	8004ae8 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007fba:	bd08      	pop	{r3, pc}

08007fbc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007fbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fc0:	ed2d 8b02 	vpush	{d8}
 8007fc4:	4604      	mov	r4, r0
 8007fc6:	b08d      	sub	sp, #52	; 0x34
 8007fc8:	f010 fbba 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007fcc:	4622      	mov	r2, r4
 8007fce:	2500      	movs	r5, #0
 8007fd0:	4ba4      	ldr	r3, [pc, #656]	; (8008264 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007fd2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007fd4:	f842 3b40 	str.w	r3, [r2], #64
 8007fd8:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007fdc:	4629      	mov	r1, r5
 8007fde:	2226      	movs	r2, #38	; 0x26
 8007fe0:	ee18 0a10 	vmov	r0, s16
 8007fe4:	f023 fff9 	bl	802bfda <memset>
 8007fe8:	ee18 0a10 	vmov	r0, s16
 8007fec:	f7fa fdac 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8007ff0:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007ff4:	26ff      	movs	r6, #255	; 0xff
 8007ff6:	4b9c      	ldr	r3, [pc, #624]	; (8008268 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007ff8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007ffa:	2226      	movs	r2, #38	; 0x26
 8007ffc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008000:	4629      	mov	r1, r5
 8008002:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008006:	66a5      	str	r5, [r4, #104]	; 0x68
 8008008:	4658      	mov	r0, fp
 800800a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800800e:	f023 ffe4 	bl	802bfda <memset>
 8008012:	4658      	mov	r0, fp
 8008014:	f7fa fd98 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8008018:	4b94      	ldr	r3, [pc, #592]	; (800826c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 800801a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800801c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008020:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008024:	a90a      	add	r1, sp, #40	; 0x28
 8008026:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800802a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800802e:	4658      	mov	r0, fp
 8008030:	f00c fa07 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008034:	4638      	mov	r0, r7
 8008036:	f00a fef7 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 800803a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800803e:	4618      	mov	r0, r3
 8008040:	9303      	str	r3, [sp, #12]
 8008042:	f7fa fb85 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8008046:	4b8a      	ldr	r3, [pc, #552]	; (8008270 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8008048:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800804c:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8008050:	3324      	adds	r3, #36	; 0x24
 8008052:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8008056:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800805a:	4650      	mov	r0, sl
 800805c:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8008060:	f7fa fdd6 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8008064:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8008068:	4648      	mov	r0, r9
 800806a:	f7fa fdd1 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800806e:	4640      	mov	r0, r8
 8008070:	f7fa fdce 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 8008074:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8008078:	4618      	mov	r0, r3
 800807a:	ee08 3a90 	vmov	s17, r3
 800807e:	f00c fb17 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008082:	4a7c      	ldr	r2, [pc, #496]	; (8008274 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8008084:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008088:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800808c:	4a7a      	ldr	r2, [pc, #488]	; (8008278 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800808e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008092:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8008096:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800809a:	f00d f9c5 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800809e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80080a2:	462a      	mov	r2, r5
 80080a4:	ee18 0a10 	vmov	r0, s16
 80080a8:	9300      	str	r3, [sp, #0]
 80080aa:	4629      	mov	r1, r5
 80080ac:	23f0      	movs	r3, #240	; 0xf0
 80080ae:	f7fa fd26 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 80080b2:	1d26      	adds	r6, r4, #4
        color = newColor;
 80080b4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80080b8:	66a3      	str	r3, [r4, #104]	; 0x68
 80080ba:	ee18 1a10 	vmov	r1, s16
 80080be:	4630      	mov	r0, r6
 80080c0:	f008 fde6 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80080c4:	462a      	mov	r2, r5
 80080c6:	4629      	mov	r1, r5
 80080c8:	4658      	mov	r0, fp
 80080ca:	f7fa fd0b 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80080ce:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80080d0:	a90a      	add	r1, sp, #40	; 0x28
 80080d2:	4658      	mov	r0, fp
 80080d4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80080d8:	f00c f9b3 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80080dc:	4659      	mov	r1, fp
 80080de:	4630      	mov	r0, r6
 80080e0:	f008 fdd6 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80080e4:	230a      	movs	r3, #10
 80080e6:	9300      	str	r3, [sp, #0]
 80080e8:	2232      	movs	r2, #50	; 0x32
 80080ea:	23f0      	movs	r3, #240	; 0xf0
 80080ec:	4629      	mov	r1, r5
 80080ee:	4638      	mov	r0, r7
 80080f0:	f7fa fd05 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 80080f4:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80080f8:	22a0      	movs	r2, #160	; 0xa0
 80080fa:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 80080fe:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008102:	9b03      	ldr	r3, [sp, #12]
 8008104:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008108:	4611      	mov	r1, r2
 800810a:	4638      	mov	r0, r7
 800810c:	f00a ffa2 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008110:	22a0      	movs	r2, #160	; 0xa0
 8008112:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008116:	4638      	mov	r0, r7
 8008118:	f00a ffa7 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800811c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008120:	2b20      	cmp	r3, #32
 8008122:	d005      	beq.n	8008130 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8008124:	2320      	movs	r3, #32
 8008126:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800812a:	4638      	mov	r0, r7
 800812c:	f00a fe9c 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008130:	4638      	mov	r0, r7
 8008132:	2101      	movs	r1, #1
 8008134:	f00a ffa4 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008138:	4639      	mov	r1, r7
 800813a:	4630      	mov	r0, r6
 800813c:	f008 fda8 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008140:	ad04      	add	r5, sp, #16
        color = newColor;
 8008142:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8008146:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 800814a:	2223      	movs	r2, #35	; 0x23
 800814c:	4650      	mov	r0, sl
 800814e:	2145      	movs	r1, #69	; 0x45
 8008150:	f7fa fcc8 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008154:	4651      	mov	r1, sl
 8008156:	4628      	mov	r0, r5
        color = newColor;
 8008158:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800815c:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008160:	f00b f924 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008164:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008168:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800816c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008170:	4b42      	ldr	r3, [pc, #264]	; (800827c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8008172:	930a      	str	r3, [sp, #40]	; 0x28
 8008174:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8008176:	a90a      	add	r1, sp, #40	; 0x28
 8008178:	4650      	mov	r0, sl
 800817a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800817e:	f00b fbaf 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008182:	4651      	mov	r1, sl
 8008184:	4630      	mov	r0, r6
 8008186:	f008 fd83 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 800818a:	223c      	movs	r2, #60	; 0x3c
 800818c:	4648      	mov	r0, r9
 800818e:	211f      	movs	r1, #31
 8008190:	f7fa fca8 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8008194:	4649      	mov	r1, r9
 8008196:	4628      	mov	r0, r5
        color = newColor;
 8008198:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 800819c:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80081a0:	f00b f904 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80081a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80081a8:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80081ac:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80081b0:	4b32      	ldr	r3, [pc, #200]	; (800827c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80081b2:	930a      	str	r3, [sp, #40]	; 0x28
 80081b4:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80081b6:	a90a      	add	r1, sp, #40	; 0x28
 80081b8:	4648      	mov	r0, r9
 80081ba:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80081be:	f00b fb8f 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80081c2:	4649      	mov	r1, r9
 80081c4:	4630      	mov	r0, r6
 80081c6:	f008 fd63 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80081ca:	220c      	movs	r2, #12
 80081cc:	4640      	mov	r0, r8
 80081ce:	2136      	movs	r1, #54	; 0x36
 80081d0:	f7fa fc88 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80081d4:	4641      	mov	r1, r8
 80081d6:	4628      	mov	r0, r5
        color = newColor;
 80081d8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80081dc:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80081e0:	f00b f8e4 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80081e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80081e8:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 80081ec:	4b23      	ldr	r3, [pc, #140]	; (800827c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80081ee:	930a      	str	r3, [sp, #40]	; 0x28
 80081f0:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80081f4:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 80081f6:	a90a      	add	r1, sp, #40	; 0x28
 80081f8:	4640      	mov	r0, r8
 80081fa:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80081fe:	f00b fb6f 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008202:	4641      	mov	r1, r8
 8008204:	4630      	mov	r0, r6
 8008206:	f008 fd43 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800820a:	ee18 0a90 	vmov	r0, s17
 800820e:	f240 1201 	movw	r2, #257	; 0x101
 8008212:	2121      	movs	r1, #33	; 0x21
 8008214:	f7fa fc66 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8008218:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800821a:	aa0a      	add	r2, sp, #40	; 0x28
 800821c:	a909      	add	r1, sp, #36	; 0x24
 800821e:	ee18 0a90 	vmov	r0, s17
 8008222:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008226:	2302      	movs	r3, #2
 8008228:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800822c:	f00b ff13 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008230:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8008232:	ee18 0a90 	vmov	r0, s17
 8008236:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800823a:	f7fa fc97 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800823e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8008242:	330c      	adds	r3, #12
 8008244:	4630      	mov	r0, r6
        colorPressed = col;
 8008246:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800824a:	ee18 1a90 	vmov	r1, s17
 800824e:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8008252:	f008 fd1d 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008256:	4620      	mov	r0, r4
 8008258:	b00d      	add	sp, #52	; 0x34
 800825a:	ecbd 8b02 	vpop	{d8}
 800825e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008262:	bf00      	nop
 8008264:	0802ef18 	.word	0x0802ef18
 8008268:	0802fcb4 	.word	0x0802fcb4
 800826c:	0802ff00 	.word	0x0802ff00
 8008270:	0802f9e8 	.word	0x0802f9e8
 8008274:	0802ef00 	.word	0x0802ef00
 8008278:	08007fa5 	.word	0x08007fa5
 800827c:	0802d760 	.word	0x0802d760

08008280 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8008280:	4770      	bx	lr

08008282 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008282:	4770      	bx	lr

08008284 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8008284:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8008286:	68c2      	ldr	r2, [r0, #12]
 8008288:	6844      	ldr	r4, [r0, #4]
 800828a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800828c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800828e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008292:	07d2      	lsls	r2, r2, #31
 8008294:	bf48      	it	mi
 8008296:	5962      	ldrmi	r2, [r4, r5]
 8008298:	689b      	ldr	r3, [r3, #8]
    }
 800829a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800829c:	bf48      	it	mi
 800829e:	58d3      	ldrmi	r3, [r2, r3]
 80082a0:	4718      	bx	r3

080082a2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80082a2:	6843      	ldr	r3, [r0, #4]
 80082a4:	b12b      	cbz	r3, 80082b2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80082a6:	6883      	ldr	r3, [r0, #8]
 80082a8:	b92b      	cbnz	r3, 80082b6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80082aa:	68c0      	ldr	r0, [r0, #12]
 80082ac:	f000 0001 	and.w	r0, r0, #1
 80082b0:	4770      	bx	lr
 80082b2:	4618      	mov	r0, r3
 80082b4:	4770      	bx	lr
 80082b6:	2001      	movs	r0, #1
    }
 80082b8:	4770      	bx	lr

080082ba <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80082ba:	b510      	push	{r4, lr}
 80082bc:	2110      	movs	r1, #16
 80082be:	4604      	mov	r4, r0
 80082c0:	f022 fe73 	bl	802afaa <_ZdlPvj>
 80082c4:	4620      	mov	r0, r4
 80082c6:	bd10      	pop	{r4, pc}

080082c8 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80082c8:	b510      	push	{r4, lr}
 80082ca:	4b03      	ldr	r3, [pc, #12]	; (80082d8 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80082cc:	6003      	str	r3, [r0, #0]
 80082ce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80082d0:	f00d f8b4 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80082d4:	4620      	mov	r0, r4
 80082d6:	bd10      	pop	{r4, pc}
 80082d8:	0802ef64 	.word	0x0802ef64

080082dc <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80082dc:	b507      	push	{r0, r1, r2, lr}
 80082de:	4b07      	ldr	r3, [pc, #28]	; (80082fc <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 80082e0:	6003      	str	r3, [r0, #0]
 80082e2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80082e4:	f00d f8aa 	bl	801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80082e8:	9801      	ldr	r0, [sp, #4]
 80082ea:	f241 01b0 	movw	r1, #4272	; 0x10b0
 80082ee:	f022 fe5c 	bl	802afaa <_ZdlPvj>
 80082f2:	9801      	ldr	r0, [sp, #4]
 80082f4:	b003      	add	sp, #12
 80082f6:	f85d fb04 	ldr.w	pc, [sp], #4
 80082fa:	bf00      	nop
 80082fc:	0802ef64 	.word	0x0802ef64

08008300 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008300:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008304:	4288      	cmp	r0, r1
{
 8008306:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008308:	d105      	bne.n	8008316 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800830a:	f00e fd99 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800830e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008312:	f7fc bbb9 	b.w	8004a88 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008316:	bd08      	pop	{r3, pc}

08008318 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800831c:	ed2d 8b04 	vpush	{d8-d9}
 8008320:	4604      	mov	r4, r0
 8008322:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008324:	46a3      	mov	fp, r4
 8008326:	2500      	movs	r5, #0
 8008328:	f010 fa0a 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 800832c:	4bd1      	ldr	r3, [pc, #836]	; (8008674 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800832e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008330:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008334:	2226      	movs	r2, #38	; 0x26
 8008336:	4629      	mov	r1, r5
 8008338:	4658      	mov	r0, fp
 800833a:	f023 fe4e 	bl	802bfda <memset>
 800833e:	4658      	mov	r0, fp
 8008340:	f7fa fc02 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 8008344:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008348:	26ff      	movs	r6, #255	; 0xff
 800834a:	4bcb      	ldr	r3, [pc, #812]	; (8008678 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800834c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800834e:	2226      	movs	r2, #38	; 0x26
 8008350:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008354:	4629      	mov	r1, r5
 8008356:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800835a:	4650      	mov	r0, sl
 800835c:	66a5      	str	r5, [r4, #104]	; 0x68
 800835e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008362:	f023 fe3a 	bl	802bfda <memset>
 8008366:	4650      	mov	r0, sl
 8008368:	f7fa fbee 	bl	8002b48 <_ZN8touchgfx6WidgetC1Ev>
 800836c:	4bc3      	ldr	r3, [pc, #780]	; (800867c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800836e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008370:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008374:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008378:	a90a      	add	r1, sp, #40	; 0x28
 800837a:	4650      	mov	r0, sl
 800837c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8008380:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8008384:	f00c f85d 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8008388:	4648      	mov	r0, r9
 800838a:	f7fa fc41 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 800838e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8008392:	4bbb      	ldr	r3, [pc, #748]	; (8008680 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8008394:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8008398:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800839c:	4638      	mov	r0, r7
 800839e:	f00a fd43 	bl	8012e28 <_ZN8touchgfx4LineC1Ev>
 80083a2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80083a6:	4618      	mov	r0, r3
 80083a8:	9303      	str	r3, [sp, #12]
 80083aa:	f7fa f9d1 	bl	8002750 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80083ae:	4bb5      	ldr	r3, [pc, #724]	; (8008684 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80083b0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80083b4:	3324      	adds	r3, #36	; 0x24
 80083b6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80083ba:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80083be:	4618      	mov	r0, r3
 80083c0:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80083c4:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80083c8:	ee09 3a10 	vmov	s18, r3
 80083cc:	f00c f970 	bl	80146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80083d0:	4640      	mov	r0, r8
 80083d2:	f7fa fc1d 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80083d6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80083da:	4618      	mov	r0, r3
 80083dc:	ee08 3a10 	vmov	s16, r3
 80083e0:	f7fa fc16 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
 80083e4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80083e8:	4618      	mov	r0, r3
 80083ea:	ee08 3a90 	vmov	s17, r3
 80083ee:	f7fa fc0f 	bl	8002c10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80083f2:	4aa5      	ldr	r2, [pc, #660]	; (8008688 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 80083f4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80083f8:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 80083fc:	4aa3      	ldr	r2, [pc, #652]	; (800868c <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80083fe:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008402:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008406:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800840a:	f00d f80d 	bl	8015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800840e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008412:	462a      	mov	r2, r5
 8008414:	4658      	mov	r0, fp
 8008416:	9300      	str	r3, [sp, #0]
 8008418:	4629      	mov	r1, r5
 800841a:	23f0      	movs	r3, #240	; 0xf0
 800841c:	f7fa fb6f 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 8008420:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008422:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008426:	66a3      	str	r3, [r4, #104]	; 0x68
 8008428:	4659      	mov	r1, fp
 800842a:	4630      	mov	r0, r6
 800842c:	f008 fc30 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008430:	462a      	mov	r2, r5
 8008432:	4650      	mov	r0, sl
 8008434:	4629      	mov	r1, r5
 8008436:	f7fa fb55 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800843a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800843c:	4650      	mov	r0, sl
 800843e:	a90a      	add	r1, sp, #40	; 0x28
 8008440:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008444:	f00b fffd 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008448:	4651      	mov	r1, sl
 800844a:	4630      	mov	r0, r6
 800844c:	f008 fc20 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008450:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008454:	2156      	movs	r1, #86	; 0x56
 8008456:	4648      	mov	r0, r9
 8008458:	f7fa fb44 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800845c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008460:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008464:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008468:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800846c:	4650      	mov	r0, sl
 800846e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008472:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008476:	4649      	mov	r1, r9
 8008478:	4798      	blx	r3
 800847a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800847e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8008482:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8008486:	4b82      	ldr	r3, [pc, #520]	; (8008690 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8008488:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 800848a:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 800848e:	b92b      	cbnz	r3, 800849c <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8008490:	4b80      	ldr	r3, [pc, #512]	; (8008694 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8008492:	4a81      	ldr	r2, [pc, #516]	; (8008698 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008494:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8008496:	4881      	ldr	r0, [pc, #516]	; (800869c <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8008498:	f023 fb9a 	bl	802bbd0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800849c:	4b80      	ldr	r3, [pc, #512]	; (80086a0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800849e:	881b      	ldrh	r3, [r3, #0]
 80084a0:	2b22      	cmp	r3, #34	; 0x22
 80084a2:	d803      	bhi.n	80084ac <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80084a4:	4b7f      	ldr	r3, [pc, #508]	; (80086a4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80084a6:	4a7c      	ldr	r2, [pc, #496]	; (8008698 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80084a8:	2161      	movs	r1, #97	; 0x61
 80084aa:	e7f4      	b.n	8008496 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80084ac:	4b7e      	ldr	r3, [pc, #504]	; (80086a8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80084ae:	2122      	movs	r1, #34	; 0x22
 80084b0:	6818      	ldr	r0, [r3, #0]
 80084b2:	f000 fb1b 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80084b6:	4a7d      	ldr	r2, [pc, #500]	; (80086ac <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80084b8:	4603      	mov	r3, r0
 80084ba:	2104      	movs	r1, #4
 80084bc:	4650      	mov	r0, sl
 80084be:	f011 fe6d 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80084c2:	4648      	mov	r0, r9
        wc1 = value;
 80084c4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80084c8:	f00b f9ea 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80084cc:	4b78      	ldr	r3, [pc, #480]	; (80086b0 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80084ce:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80084d0:	a90a      	add	r1, sp, #40	; 0x28
 80084d2:	2323      	movs	r3, #35	; 0x23
 80084d4:	4648      	mov	r0, r9
 80084d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80084da:	f00b fa01 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084de:	4649      	mov	r1, r9
 80084e0:	4630      	mov	r0, r6
 80084e2:	f008 fbd5 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80084e6:	230a      	movs	r3, #10
 80084e8:	9300      	str	r3, [sp, #0]
 80084ea:	2232      	movs	r2, #50	; 0x32
 80084ec:	23f0      	movs	r3, #240	; 0xf0
 80084ee:	4629      	mov	r1, r5
 80084f0:	4638      	mov	r0, r7
 80084f2:	f7fa fb04 	bl	8002afe <_ZN8touchgfx8Drawable11setPositionEssss>
 80084f6:	9b03      	ldr	r3, [sp, #12]
 80084f8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80084fc:	22a0      	movs	r2, #160	; 0xa0
 80084fe:	4611      	mov	r1, r2
 8008500:	4638      	mov	r0, r7
 8008502:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008506:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800850a:	f00a fda3 	bl	8013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800850e:	22a0      	movs	r2, #160	; 0xa0
 8008510:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008514:	4638      	mov	r0, r7
 8008516:	f00a fda8 	bl	801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800851a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800851e:	2b20      	cmp	r3, #32
 8008520:	d005      	beq.n	800852e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008522:	2320      	movs	r3, #32
 8008524:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008528:	4638      	mov	r0, r7
 800852a:	f00a fc9d 	bl	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800852e:	4638      	mov	r0, r7
 8008530:	2101      	movs	r1, #1
 8008532:	f00a fda5 	bl	8013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008536:	4639      	mov	r1, r7
 8008538:	4630      	mov	r0, r6
 800853a:	f008 fba9 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800853e:	ee19 0a10 	vmov	r0, s18
 8008542:	22f0      	movs	r2, #240	; 0xf0
 8008544:	2121      	movs	r1, #33	; 0x21
 8008546:	f7fa facd 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800854a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800854c:	aa0a      	add	r2, sp, #40	; 0x28
 800854e:	a909      	add	r1, sp, #36	; 0x24
 8008550:	ee19 0a10 	vmov	r0, s18
 8008554:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008558:	2302      	movs	r3, #2
 800855a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800855e:	f00b fd7a 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008562:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 8008564:	ee19 0a10 	vmov	r0, s18
 8008568:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 800856c:	f7fa fafe 	bl	8002b6c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008570:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008574:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008578:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 800857c:	ee19 1a10 	vmov	r1, s18
 8008580:	4630      	mov	r0, r6
        colorPressed = col;
 8008582:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8008586:	ad04      	add	r5, sp, #16
 8008588:	f008 fb82 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800858c:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8008590:	225b      	movs	r2, #91	; 0x5b
 8008592:	4640      	mov	r0, r8
 8008594:	2105      	movs	r1, #5
 8008596:	f7fa faa5 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800859a:	4641      	mov	r1, r8
 800859c:	4628      	mov	r0, r5
        color = newColor;
 800859e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80085a2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80085a6:	f00a ff01 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80085aa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80085ae:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80085b2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80085b6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80086b0 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80085ba:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80085be:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80085c0:	a90a      	add	r1, sp, #40	; 0x28
 80085c2:	4640      	mov	r0, r8
 80085c4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80085c8:	f00b f98a 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80085cc:	4641      	mov	r1, r8
 80085ce:	4630      	mov	r0, r6
 80085d0:	f008 fb5e 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80085d4:	ee18 0a10 	vmov	r0, s16
 80085d8:	2223      	movs	r2, #35	; 0x23
 80085da:	2145      	movs	r1, #69	; 0x45
 80085dc:	f7fa fa82 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80085e0:	ee18 1a10 	vmov	r1, s16
 80085e4:	4628      	mov	r0, r5
        color = newColor;
 80085e6:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80085ea:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80085ee:	f00a fedd 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80085f2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80085f6:	ee18 3a10 	vmov	r3, s16
 80085fa:	333c      	adds	r3, #60	; 0x3c
 80085fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008600:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008602:	ee18 0a10 	vmov	r0, s16
 8008606:	a90a      	add	r1, sp, #40	; 0x28
 8008608:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800860c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008610:	f00b f966 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008614:	ee18 1a10 	vmov	r1, s16
 8008618:	4630      	mov	r0, r6
 800861a:	f008 fb39 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800861e:	ee18 0a90 	vmov	r0, s17
 8008622:	220c      	movs	r2, #12
 8008624:	2136      	movs	r1, #54	; 0x36
 8008626:	f7fa fa5d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 800862a:	ee18 1a90 	vmov	r1, s17
 800862e:	4628      	mov	r0, r5
        color = newColor;
 8008630:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008634:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008638:	f00a feb8 	bl	80133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800863c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008640:	ee18 3a90 	vmov	r3, s17
 8008644:	333c      	adds	r3, #60	; 0x3c
 8008646:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800864a:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800864c:	ee18 0a90 	vmov	r0, s17
 8008650:	a90a      	add	r1, sp, #40	; 0x28
 8008652:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008656:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800865a:	f00b f941 	bl	80138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800865e:	4630      	mov	r0, r6
 8008660:	ee18 1a90 	vmov	r1, s17
 8008664:	f008 fb14 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008668:	4620      	mov	r0, r4
 800866a:	b00d      	add	sp, #52	; 0x34
 800866c:	ecbd 8b04 	vpop	{d8-d9}
 8008670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008674:	0802ef64 	.word	0x0802ef64
 8008678:	0802fcb4 	.word	0x0802fcb4
 800867c:	0802ff00 	.word	0x0802ff00
 8008680:	0802d800 	.word	0x0802d800
 8008684:	0802f9e8 	.word	0x0802f9e8
 8008688:	0802ef4c 	.word	0x0802ef4c
 800868c:	08008301 	.word	0x08008301
 8008690:	20013894 	.word	0x20013894
 8008694:	0802d5b0 	.word	0x0802d5b0
 8008698:	0802d6b5 	.word	0x0802d6b5
 800869c:	0802d62d 	.word	0x0802d62d
 80086a0:	20013898 	.word	0x20013898
 80086a4:	0802d674 	.word	0x0802d674
 80086a8:	200138a0 	.word	0x200138a0
 80086ac:	0802d6ed 	.word	0x0802d6ed
 80086b0:	0802d760 	.word	0x0802d760

080086b4 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80086b4:	4770      	bx	lr

080086b6 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80086b6:	4770      	bx	lr

080086b8 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80086b8:	b510      	push	{r4, lr}
}
 80086ba:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80086bc:	4604      	mov	r4, r0
}
 80086be:	f022 fc74 	bl	802afaa <_ZdlPvj>
 80086c2:	4620      	mov	r0, r4
 80086c4:	bd10      	pop	{r4, pc}
	...

080086c8 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80086c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80086cc:	4604      	mov	r4, r0
 80086ce:	4626      	mov	r6, r4
 80086d0:	f010 f836 	bl	8018740 <_ZN8touchgfx6ScreenC1Ev>
 80086d4:	2500      	movs	r5, #0
 80086d6:	4b2e      	ldr	r3, [pc, #184]	; (8008790 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 80086d8:	63e5      	str	r5, [r4, #60]	; 0x3c
 80086da:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80086de:	4b2d      	ldr	r3, [pc, #180]	; (8008794 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 80086e0:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 80086e2:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 80086e6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80086ea:	23ff      	movs	r3, #255	; 0xff
 80086ec:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 80086f0:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80086f4:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 80086f8:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 80086fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008700:	4a25      	ldr	r2, [pc, #148]	; (8008798 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008702:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008706:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800870a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800870c:	a901      	add	r1, sp, #4
 800870e:	4638      	mov	r0, r7
 8008710:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008714:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008718:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800871c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008720:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008724:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008728:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800872c:	66a5      	str	r5, [r4, #104]	; 0x68
 800872e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008732:	f00b fe86 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008736:	462a      	mov	r2, r5
 8008738:	4629      	mov	r1, r5
 800873a:	4630      	mov	r0, r6
 800873c:	f7fa f9d2 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008740:	4630      	mov	r0, r6
 8008742:	21f0      	movs	r1, #240	; 0xf0
 8008744:	f7f9 ff50 	bl	80025e8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008748:	4630      	mov	r0, r6
 800874a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800874e:	f7f9 ff4d 	bl	80025ec <_ZN8touchgfx8Drawable9setHeightEs>
 8008752:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008756:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800875a:	66a3      	str	r3, [r4, #104]	; 0x68
 800875c:	4631      	mov	r1, r6
 800875e:	4640      	mov	r0, r8
 8008760:	f008 fa96 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008764:	462a      	mov	r2, r5
 8008766:	4638      	mov	r0, r7
 8008768:	f06f 0102 	mvn.w	r1, #2
 800876c:	f7fa f9ba 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8008770:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008772:	a901      	add	r1, sp, #4
 8008774:	4638      	mov	r0, r7
 8008776:	f8ad 3004 	strh.w	r3, [sp, #4]
 800877a:	f00b fe62 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800877e:	4640      	mov	r0, r8
 8008780:	4639      	mov	r1, r7
 8008782:	f008 fa85 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008786:	4620      	mov	r0, r4
 8008788:	b002      	add	sp, #8
 800878a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800878e:	bf00      	nop
 8008790:	0802ef98 	.word	0x0802ef98
 8008794:	0802fcb4 	.word	0x0802fcb4
 8008798:	0802ff00 	.word	0x0802ff00

0800879c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800879c:	4770      	bx	lr
	...

080087a0 <_Z23getFont_verdana_10_4bppv>:
{
 80087a0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80087a2:	4d17      	ldr	r5, [pc, #92]	; (8008800 <_Z23getFont_verdana_10_4bppv+0x60>)
 80087a4:	682c      	ldr	r4, [r5, #0]
 80087a6:	f3bf 8f5b 	dmb	ish
 80087aa:	f014 0401 	ands.w	r4, r4, #1
{
 80087ae:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80087b0:	d122      	bne.n	80087f8 <_Z23getFont_verdana_10_4bppv+0x58>
 80087b2:	4628      	mov	r0, r5
 80087b4:	f022 fbfb 	bl	802afae <__cxa_guard_acquire>
 80087b8:	b1f0      	cbz	r0, 80087f8 <_Z23getFont_verdana_10_4bppv+0x58>
 80087ba:	233f      	movs	r3, #63	; 0x3f
 80087bc:	9309      	str	r3, [sp, #36]	; 0x24
 80087be:	4b11      	ldr	r3, [pc, #68]	; (8008804 <_Z23getFont_verdana_10_4bppv+0x64>)
 80087c0:	9308      	str	r3, [sp, #32]
 80087c2:	4b11      	ldr	r3, [pc, #68]	; (8008808 <_Z23getFont_verdana_10_4bppv+0x68>)
 80087c4:	9307      	str	r3, [sp, #28]
 80087c6:	2301      	movs	r3, #1
 80087c8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80087cc:	9304      	str	r3, [sp, #16]
 80087ce:	2304      	movs	r3, #4
 80087d0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80087d4:	230a      	movs	r3, #10
 80087d6:	490d      	ldr	r1, [pc, #52]	; (800880c <_Z23getFont_verdana_10_4bppv+0x6c>)
 80087d8:	9300      	str	r3, [sp, #0]
 80087da:	225f      	movs	r2, #95	; 0x5f
 80087dc:	230c      	movs	r3, #12
 80087de:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80087e2:	480b      	ldr	r0, [pc, #44]	; (8008810 <_Z23getFont_verdana_10_4bppv+0x70>)
 80087e4:	940a      	str	r4, [sp, #40]	; 0x28
 80087e6:	9401      	str	r4, [sp, #4]
 80087e8:	f7fd fa34 	bl	8005c54 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80087ec:	4809      	ldr	r0, [pc, #36]	; (8008814 <_Z23getFont_verdana_10_4bppv+0x74>)
 80087ee:	f023 fa0d 	bl	802bc0c <atexit>
 80087f2:	4628      	mov	r0, r5
 80087f4:	f022 fbe7 	bl	802afc6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80087f8:	4805      	ldr	r0, [pc, #20]	; (8008810 <_Z23getFont_verdana_10_4bppv+0x70>)
 80087fa:	b00f      	add	sp, #60	; 0x3c
 80087fc:	bd30      	pop	{r4, r5, pc}
 80087fe:	bf00      	nop
 8008800:	2000293c 	.word	0x2000293c
 8008804:	08047b84 	.word	0x08047b84
 8008808:	08047dc0 	.word	0x08047dc0
 800880c:	08046bcc 	.word	0x08046bcc
 8008810:	20002940 	.word	0x20002940
 8008814:	0800879d 	.word	0x0800879d

08008818 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008818:	4770      	bx	lr
	...

0800881c <_Z23getFont_verdana_12_4bppv>:
{
 800881c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800881e:	4d17      	ldr	r5, [pc, #92]	; (800887c <_Z23getFont_verdana_12_4bppv+0x60>)
 8008820:	682c      	ldr	r4, [r5, #0]
 8008822:	f3bf 8f5b 	dmb	ish
 8008826:	f014 0401 	ands.w	r4, r4, #1
{
 800882a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800882c:	d122      	bne.n	8008874 <_Z23getFont_verdana_12_4bppv+0x58>
 800882e:	4628      	mov	r0, r5
 8008830:	f022 fbbd 	bl	802afae <__cxa_guard_acquire>
 8008834:	b1f0      	cbz	r0, 8008874 <_Z23getFont_verdana_12_4bppv+0x58>
 8008836:	233f      	movs	r3, #63	; 0x3f
 8008838:	9309      	str	r3, [sp, #36]	; 0x24
 800883a:	4b11      	ldr	r3, [pc, #68]	; (8008880 <_Z23getFont_verdana_12_4bppv+0x64>)
 800883c:	9308      	str	r3, [sp, #32]
 800883e:	4b11      	ldr	r3, [pc, #68]	; (8008884 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008840:	9307      	str	r3, [sp, #28]
 8008842:	2301      	movs	r3, #1
 8008844:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008848:	9304      	str	r3, [sp, #16]
 800884a:	2304      	movs	r3, #4
 800884c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008850:	230c      	movs	r3, #12
 8008852:	490d      	ldr	r1, [pc, #52]	; (8008888 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008854:	9300      	str	r3, [sp, #0]
 8008856:	2260      	movs	r2, #96	; 0x60
 8008858:	230f      	movs	r3, #15
 800885a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800885e:	480b      	ldr	r0, [pc, #44]	; (800888c <_Z23getFont_verdana_12_4bppv+0x70>)
 8008860:	940a      	str	r4, [sp, #40]	; 0x28
 8008862:	9401      	str	r4, [sp, #4]
 8008864:	f7fd f9f6 	bl	8005c54 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008868:	4809      	ldr	r0, [pc, #36]	; (8008890 <_Z23getFont_verdana_12_4bppv+0x74>)
 800886a:	f023 f9cf 	bl	802bc0c <atexit>
 800886e:	4628      	mov	r0, r5
 8008870:	f022 fba9 	bl	802afc6 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008874:	4805      	ldr	r0, [pc, #20]	; (800888c <_Z23getFont_verdana_12_4bppv+0x70>)
 8008876:	b00f      	add	sp, #60	; 0x3c
 8008878:	bd30      	pop	{r4, r5, pc}
 800887a:	bf00      	nop
 800887c:	2000296c 	.word	0x2000296c
 8008880:	08047bb8 	.word	0x08047bb8
 8008884:	08047dc4 	.word	0x08047dc4
 8008888:	08047100 	.word	0x08047100
 800888c:	20002970 	.word	0x20002970
 8008890:	08008819 	.word	0x08008819

08008894 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008894:	4770      	bx	lr
	...

08008898 <_Z23getFont_verdana_19_4bppv>:
{
 8008898:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800889a:	4d17      	ldr	r5, [pc, #92]	; (80088f8 <_Z23getFont_verdana_19_4bppv+0x60>)
 800889c:	682c      	ldr	r4, [r5, #0]
 800889e:	f3bf 8f5b 	dmb	ish
 80088a2:	f014 0401 	ands.w	r4, r4, #1
{
 80088a6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80088a8:	d122      	bne.n	80088f0 <_Z23getFont_verdana_19_4bppv+0x58>
 80088aa:	4628      	mov	r0, r5
 80088ac:	f022 fb7f 	bl	802afae <__cxa_guard_acquire>
 80088b0:	b1f0      	cbz	r0, 80088f0 <_Z23getFont_verdana_19_4bppv+0x58>
 80088b2:	233f      	movs	r3, #63	; 0x3f
 80088b4:	9309      	str	r3, [sp, #36]	; 0x24
 80088b6:	4b11      	ldr	r3, [pc, #68]	; (80088fc <_Z23getFont_verdana_19_4bppv+0x64>)
 80088b8:	9308      	str	r3, [sp, #32]
 80088ba:	4b11      	ldr	r3, [pc, #68]	; (8008900 <_Z23getFont_verdana_19_4bppv+0x68>)
 80088bc:	9307      	str	r3, [sp, #28]
 80088be:	2301      	movs	r3, #1
 80088c0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80088c4:	9304      	str	r3, [sp, #16]
 80088c6:	2304      	movs	r3, #4
 80088c8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80088cc:	2313      	movs	r3, #19
 80088ce:	490d      	ldr	r1, [pc, #52]	; (8008904 <_Z23getFont_verdana_19_4bppv+0x6c>)
 80088d0:	9300      	str	r3, [sp, #0]
 80088d2:	225f      	movs	r2, #95	; 0x5f
 80088d4:	2317      	movs	r3, #23
 80088d6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80088da:	480b      	ldr	r0, [pc, #44]	; (8008908 <_Z23getFont_verdana_19_4bppv+0x70>)
 80088dc:	940a      	str	r4, [sp, #40]	; 0x28
 80088de:	9401      	str	r4, [sp, #4]
 80088e0:	f7fd f9b8 	bl	8005c54 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80088e4:	4809      	ldr	r0, [pc, #36]	; (800890c <_Z23getFont_verdana_19_4bppv+0x74>)
 80088e6:	f023 f991 	bl	802bc0c <atexit>
 80088ea:	4628      	mov	r0, r5
 80088ec:	f022 fb6b 	bl	802afc6 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 80088f0:	4805      	ldr	r0, [pc, #20]	; (8008908 <_Z23getFont_verdana_19_4bppv+0x70>)
 80088f2:	b00f      	add	sp, #60	; 0x3c
 80088f4:	bd30      	pop	{r4, r5, pc}
 80088f6:	bf00      	nop
 80088f8:	2000299c 	.word	0x2000299c
 80088fc:	08047c3c 	.word	0x08047c3c
 8008900:	08047dc8 	.word	0x08047dc8
 8008904:	08047640 	.word	0x08047640
 8008908:	200029a0 	.word	0x200029a0
 800890c:	08008895 	.word	0x08008895

08008910 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008910:	4770      	bx	lr
	...

08008914 <_Z23getFont_verdana_40_4bppv>:
{
 8008914:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008916:	4d16      	ldr	r5, [pc, #88]	; (8008970 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008918:	682c      	ldr	r4, [r5, #0]
 800891a:	f3bf 8f5b 	dmb	ish
 800891e:	f014 0401 	ands.w	r4, r4, #1
{
 8008922:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008924:	d120      	bne.n	8008968 <_Z23getFont_verdana_40_4bppv+0x54>
 8008926:	4628      	mov	r0, r5
 8008928:	f022 fb41 	bl	802afae <__cxa_guard_acquire>
 800892c:	b1e0      	cbz	r0, 8008968 <_Z23getFont_verdana_40_4bppv+0x54>
 800892e:	233f      	movs	r3, #63	; 0x3f
 8008930:	9309      	str	r3, [sp, #36]	; 0x24
 8008932:	4b10      	ldr	r3, [pc, #64]	; (8008974 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008934:	9308      	str	r3, [sp, #32]
 8008936:	4b10      	ldr	r3, [pc, #64]	; (8008978 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008938:	4910      	ldr	r1, [pc, #64]	; (800897c <_Z23getFont_verdana_40_4bppv+0x68>)
 800893a:	4811      	ldr	r0, [pc, #68]	; (8008980 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800893c:	940a      	str	r4, [sp, #40]	; 0x28
 800893e:	2201      	movs	r2, #1
 8008940:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008944:	2304      	movs	r3, #4
 8008946:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800894a:	2328      	movs	r3, #40	; 0x28
 800894c:	9300      	str	r3, [sp, #0]
 800894e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008952:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008956:	9405      	str	r4, [sp, #20]
 8008958:	f7fd f97c 	bl	8005c54 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800895c:	4809      	ldr	r0, [pc, #36]	; (8008984 <_Z23getFont_verdana_40_4bppv+0x70>)
 800895e:	f023 f955 	bl	802bc0c <atexit>
 8008962:	4628      	mov	r0, r5
 8008964:	f022 fb2f 	bl	802afc6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008968:	4805      	ldr	r0, [pc, #20]	; (8008980 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800896a:	b00f      	add	sp, #60	; 0x3c
 800896c:	bd30      	pop	{r4, r5, pc}
 800896e:	bf00      	nop
 8008970:	200029cc 	.word	0x200029cc
 8008974:	08047dbc 	.word	0x08047dbc
 8008978:	08047dcc 	.word	0x08047dcc
 800897c:	08047b74 	.word	0x08047b74
 8008980:	200029d0 	.word	0x200029d0
 8008984:	08008911 	.word	0x08008911

08008988 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008988:	2000      	movs	r0, #0
 800898a:	4770      	bx	lr

0800898c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800898c:	2000      	movs	r0, #0
 800898e:	4770      	bx	lr

08008990 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008990:	b40e      	push	{r1, r2, r3}
 8008992:	b503      	push	{r0, r1, lr}
 8008994:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008996:	2100      	movs	r1, #0
{
 8008998:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800899c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800899e:	f00f fa0d 	bl	8017dbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80089a2:	b002      	add	sp, #8
 80089a4:	f85d eb04 	ldr.w	lr, [sp], #4
 80089a8:	b003      	add	sp, #12
 80089aa:	4770      	bx	lr

080089ac <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80089ac:	b40c      	push	{r2, r3}
 80089ae:	b507      	push	{r0, r1, r2, lr}
 80089b0:	ab04      	add	r3, sp, #16
 80089b2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80089b6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80089b8:	f00f fa00 	bl	8017dbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80089bc:	b003      	add	sp, #12
 80089be:	f85d eb04 	ldr.w	lr, [sp], #4
 80089c2:	b002      	add	sp, #8
 80089c4:	4770      	bx	lr
	...

080089c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80089c8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80089ca:	b510      	push	{r4, lr}
 80089cc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80089ce:	b373      	cbz	r3, 8008a2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80089d0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80089d2:	b92b      	cbnz	r3, 80089e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80089d4:	4b18      	ldr	r3, [pc, #96]	; (8008a38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80089d6:	4a19      	ldr	r2, [pc, #100]	; (8008a3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80089d8:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80089da:	4819      	ldr	r0, [pc, #100]	; (8008a40 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80089dc:	f023 f8f8 	bl	802bbd0 <__assert_func>
            return buffer[pos];
 80089e0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80089e2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80089e6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80089e8:	b30b      	cbz	r3, 8008a2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80089ea:	f010 fe22 	bl	8019632 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80089ee:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80089f0:	2b01      	cmp	r3, #1
 80089f2:	d803      	bhi.n	80089fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80089f4:	4b13      	ldr	r3, [pc, #76]	; (8008a44 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80089f6:	4a14      	ldr	r2, [pc, #80]	; (8008a48 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80089f8:	21cb      	movs	r1, #203	; 0xcb
 80089fa:	e7ee      	b.n	80089da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80089fc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80089fe:	1c53      	adds	r3, r2, #1
 8008a00:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008a02:	2b09      	cmp	r3, #9
 8008a04:	4619      	mov	r1, r3
 8008a06:	bf88      	it	hi
 8008a08:	f1a3 010a 	subhi.w	r1, r3, #10
 8008a0c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008a10:	f640 103f 	movw	r0, #2367	; 0x93f
 8008a14:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008a16:	4281      	cmp	r1, r0
 8008a18:	d109      	bne.n	8008a2e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008a1a:	2b0a      	cmp	r3, #10
 8008a1c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008a20:	bf28      	it	cs
 8008a22:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008a24:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008a28:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008a2a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008a2c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008a2e:	4620      	mov	r0, r4
}
 8008a30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008a34:	f010 bd00 	b.w	8019438 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008a38:	0802efc4 	.word	0x0802efc4
 8008a3c:	0802efcd 	.word	0x0802efcd
 8008a40:	0802f078 	.word	0x0802f078
 8008a44:	0802f0c2 	.word	0x0802f0c2
 8008a48:	0802f0d0 	.word	0x0802f0d0

08008a4c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008a4c:	f010 bcbb 	b.w	80193c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008a50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008a50:	b510      	push	{r4, lr}
 8008a52:	b086      	sub	sp, #24
 8008a54:	ac02      	add	r4, sp, #8
 8008a56:	e884 0006 	stmia.w	r4, {r1, r2}
 8008a5a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008a5c:	ab0a      	add	r3, sp, #40	; 0x28
 8008a5e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008a60:	9301      	str	r3, [sp, #4]
 8008a62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008a64:	9300      	str	r3, [sp, #0]
 8008a66:	4621      	mov	r1, r4
 8008a68:	9b08      	ldr	r3, [sp, #32]
 8008a6a:	f00d fd6b 	bl	8016544 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008a6e:	b006      	add	sp, #24
 8008a70:	bd10      	pop	{r4, pc}
	...

08008a74 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008a74:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008a76:	bb18      	cbnz	r0, 8008ac0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008a78:	4b12      	ldr	r3, [pc, #72]	; (8008ac4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8008a7a:	4813      	ldr	r0, [pc, #76]	; (8008ac8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008a7c:	681c      	ldr	r4, [r3, #0]
 8008a7e:	4913      	ldr	r1, [pc, #76]	; (8008acc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008a80:	b1b4      	cbz	r4, 8008ab0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008a82:	6822      	ldr	r2, [r4, #0]
 8008a84:	4422      	add	r2, r4
 8008a86:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008a88:	6862      	ldr	r2, [r4, #4]
 8008a8a:	4422      	add	r2, r4
 8008a8c:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008a8e:	68a2      	ldr	r2, [r4, #8]
 8008a90:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008a92:	4b0f      	ldr	r3, [pc, #60]	; (8008ad0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008a94:	2200      	movs	r2, #0
 8008a96:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008a98:	f000 f838 	bl	8008b0c <_ZN17TypedTextDatabase8getFontsEv>
 8008a9c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008a9e:	f000 f833 	bl	8008b08 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008aa2:	4b0c      	ldr	r3, [pc, #48]	; (8008ad4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008aa4:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008aa6:	4b0c      	ldr	r3, [pc, #48]	; (8008ad8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008aa8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008aaa:	4b0c      	ldr	r3, [pc, #48]	; (8008adc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008aac:	8018      	strh	r0, [r3, #0]
    }
}
 8008aae:	e007      	b.n	8008ac0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008ab0:	4b0b      	ldr	r3, [pc, #44]	; (8008ae0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008ab2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008ab4:	4b0b      	ldr	r3, [pc, #44]	; (8008ae4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008ab6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008ab8:	4b0b      	ldr	r3, [pc, #44]	; (8008ae8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008aba:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008abc:	2c00      	cmp	r4, #0
 8008abe:	d1e8      	bne.n	8008a92 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008ac0:	bd38      	pop	{r3, r4, r5, pc}
 8008ac2:	bf00      	nop
 8008ac4:	200029fc 	.word	0x200029fc
 8008ac8:	20002a00 	.word	0x20002a00
 8008acc:	20002a04 	.word	0x20002a04
 8008ad0:	20002a08 	.word	0x20002a08
 8008ad4:	20013894 	.word	0x20013894
 8008ad8:	2001389c 	.word	0x2001389c
 8008adc:	20013898 	.word	0x20013898
 8008ae0:	08047f30 	.word	0x08047f30
 8008ae4:	08047dd0 	.word	0x08047dd0
 8008ae8:	0804844c 	.word	0x0804844c

08008aec <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008aec:	4b04      	ldr	r3, [pc, #16]	; (8008b00 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008aee:	681b      	ldr	r3, [r3, #0]
 8008af0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008af4:	4b03      	ldr	r3, [pc, #12]	; (8008b04 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008af6:	681b      	ldr	r3, [r3, #0]
}
 8008af8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008afc:	4770      	bx	lr
 8008afe:	bf00      	nop
 8008b00:	20002a04 	.word	0x20002a04
 8008b04:	20002a00 	.word	0x20002a00

08008b08 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008b08:	2058      	movs	r0, #88	; 0x58
 8008b0a:	4770      	bx	lr

08008b0c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008b0c:	4800      	ldr	r0, [pc, #0]	; (8008b10 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008b0e:	4770      	bx	lr
 8008b10:	20002a0c 	.word	0x20002a0c

08008b14 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008b14:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008b16:	f7ff febf 	bl	8008898 <_Z23getFont_verdana_19_4bppv>
};
 8008b1a:	4c06      	ldr	r4, [pc, #24]	; (8008b34 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008b1c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008b1e:	f7ff fef9 	bl	8008914 <_Z23getFont_verdana_40_4bppv>
};
 8008b22:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008b24:	f7ff fe3c 	bl	80087a0 <_Z23getFont_verdana_10_4bppv>
};
 8008b28:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008b2a:	f7ff fe77 	bl	800881c <_Z23getFont_verdana_12_4bppv>
};
 8008b2e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008b30:	bd10      	pop	{r4, pc}
 8008b32:	bf00      	nop
 8008b34:	20002a0c 	.word	0x20002a0c

08008b38 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008b38:	4770      	bx	lr

08008b3a <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008b3a:	3804      	subs	r0, #4
 8008b3c:	4770      	bx	lr

08008b3e <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008b3e:	4770      	bx	lr

08008b40 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008b40:	4770      	bx	lr

08008b42 <_ZN24Calibration_PadPresenterD0Ev>:
 8008b42:	b510      	push	{r4, lr}
 8008b44:	2110      	movs	r1, #16
 8008b46:	4604      	mov	r4, r0
 8008b48:	f022 fa2f 	bl	802afaa <_ZdlPvj>
 8008b4c:	4620      	mov	r0, r4
 8008b4e:	bd10      	pop	{r4, pc}

08008b50 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008b50:	f1a0 0004 	sub.w	r0, r0, #4
 8008b54:	e7f5      	b.n	8008b42 <_ZN24Calibration_PadPresenterD0Ev>

08008b56 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008b56:	4770      	bx	lr

08008b58 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008b58:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008b5a:	2200      	movs	r2, #0
 8008b5c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b5e:	4a04      	ldr	r2, [pc, #16]	; (8008b70 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008b60:	60c1      	str	r1, [r0, #12]
 8008b62:	f102 0408 	add.w	r4, r2, #8
 8008b66:	3224      	adds	r2, #36	; 0x24
 8008b68:	6004      	str	r4, [r0, #0]
 8008b6a:	6042      	str	r2, [r0, #4]
}
 8008b6c:	bd10      	pop	{r4, pc}
 8008b6e:	bf00      	nop
 8008b70:	0802f1a4 	.word	0x0802f1a4

08008b74 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008b74:	4770      	bx	lr

08008b76 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008b76:	4770      	bx	lr

08008b78 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008b78:	b510      	push	{r4, lr}
 8008b7a:	4b03      	ldr	r3, [pc, #12]	; (8008b88 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008b7c:	6003      	str	r3, [r0, #0]
 8008b7e:	4604      	mov	r4, r0
 8008b80:	f7f9 ff5a 	bl	8002a38 <_ZN23Calibration_PadViewBaseD1Ev>
 8008b84:	4620      	mov	r0, r4
 8008b86:	bd10      	pop	{r4, pc}
 8008b88:	0802f1dc 	.word	0x0802f1dc

08008b8c <_ZN19Calibration_PadViewD0Ev>:
 8008b8c:	b510      	push	{r4, lr}
 8008b8e:	4604      	mov	r4, r0
 8008b90:	f7ff fff2 	bl	8008b78 <_ZN19Calibration_PadViewD1Ev>
 8008b94:	4620      	mov	r0, r4
 8008b96:	f641 5104 	movw	r1, #7428	; 0x1d04
 8008b9a:	f022 fa06 	bl	802afaa <_ZdlPvj>
 8008b9e:	4620      	mov	r0, r4
 8008ba0:	bd10      	pop	{r4, pc}
	...

08008ba4 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008ba4:	b510      	push	{r4, lr}
 8008ba6:	4604      	mov	r4, r0
 8008ba8:	f7fa fb32 	bl	8003210 <_ZN23Calibration_PadViewBaseC1Ev>
 8008bac:	4b01      	ldr	r3, [pc, #4]	; (8008bb4 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008bae:	6023      	str	r3, [r4, #0]
}
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	bd10      	pop	{r4, pc}
 8008bb4:	0802f1dc 	.word	0x0802f1dc

08008bb8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008bb8:	b570      	push	{r4, r5, r6, lr}
 8008bba:	4604      	mov	r4, r0
 8008bbc:	b0ca      	sub	sp, #296	; 0x128
 8008bbe:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8008bc2:	4631      	mov	r1, r6
 8008bc4:	a80d      	add	r0, sp, #52	; 0x34
 8008bc6:	f7fa f84f 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008bca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008bce:	9317      	str	r3, [sp, #92]	; 0x5c
 8008bd0:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008bd4:	9318      	str	r3, [sp, #96]	; 0x60
 8008bd6:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008bda:	4a57      	ldr	r2, [pc, #348]	; (8008d38 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 8008bdc:	9319      	str	r3, [sp, #100]	; 0x64
 8008bde:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8008be2:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008be6:	920d      	str	r2, [sp, #52]	; 0x34
 8008be8:	a81b      	add	r0, sp, #108	; 0x6c
 8008bea:	931a      	str	r3, [sp, #104]	; 0x68
 8008bec:	f7fa f83c 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008bf0:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008bf4:	9325      	str	r3, [sp, #148]	; 0x94
 8008bf6:	4b51      	ldr	r3, [pc, #324]	; (8008d3c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 8008bf8:	931b      	str	r3, [sp, #108]	; 0x6c
 8008bfa:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8008bfe:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 8008c02:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008c06:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008c0a:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 8008c0e:	a827      	add	r0, sp, #156	; 0x9c
 8008c10:	f7fa f82a 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008c14:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008c18:	9331      	str	r3, [sp, #196]	; 0xc4
 8008c1a:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008c1e:	4b48      	ldr	r3, [pc, #288]	; (8008d40 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 8008c20:	9327      	str	r3, [sp, #156]	; 0x9c
 8008c22:	a832      	add	r0, sp, #200	; 0xc8
 8008c24:	f7fa f820 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008c28:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008c2c:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 8008c30:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008c34:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8008c38:	4b42      	ldr	r3, [pc, #264]	; (8008d44 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8008c3a:	9332      	str	r3, [sp, #200]	; 0xc8
 8008c3c:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008c40:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 8008c44:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008c48:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008c4c:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 8008c50:	a83e      	add	r0, sp, #248	; 0xf8
 8008c52:	f7fa f809 	bl	8002c68 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008c56:	4b3c      	ldr	r3, [pc, #240]	; (8008d48 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 8008c58:	933e      	str	r3, [sp, #248]	; 0xf8
 8008c5a:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008c5e:	4d3b      	ldr	r5, [pc, #236]	; (8008d4c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 8008c60:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8008c64:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008c68:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 8008c6c:	a901      	add	r1, sp, #4
 8008c6e:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008c72:	4837      	ldr	r0, [pc, #220]	; (8008d50 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8008c74:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 8008c78:	220c      	movs	r2, #12
 8008c7a:	f7f7 fde9 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008c7e:	9b01      	ldr	r3, [sp, #4]
 8008c80:	462a      	mov	r2, r5
 8008c82:	210a      	movs	r1, #10
 8008c84:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8008c88:	f011 fa88 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008c8c:	9b02      	ldr	r3, [sp, #8]
 8008c8e:	462a      	mov	r2, r5
 8008c90:	210a      	movs	r1, #10
 8008c92:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8008c96:	f011 fa81 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008c9a:	9b03      	ldr	r3, [sp, #12]
 8008c9c:	462a      	mov	r2, r5
 8008c9e:	210a      	movs	r1, #10
 8008ca0:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8008ca4:	f011 fa7a 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008ca8:	9b04      	ldr	r3, [sp, #16]
 8008caa:	462a      	mov	r2, r5
 8008cac:	210a      	movs	r1, #10
 8008cae:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8008cb2:	f011 fa73 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008cb6:	9b05      	ldr	r3, [sp, #20]
 8008cb8:	462a      	mov	r2, r5
 8008cba:	210a      	movs	r1, #10
 8008cbc:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8008cc0:	f011 fa6c 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008cc4:	9b06      	ldr	r3, [sp, #24]
 8008cc6:	462a      	mov	r2, r5
 8008cc8:	210a      	movs	r1, #10
 8008cca:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8008cce:	f011 fa65 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 8008cd2:	9b07      	ldr	r3, [sp, #28]
 8008cd4:	462a      	mov	r2, r5
 8008cd6:	210a      	movs	r1, #10
 8008cd8:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8008cdc:	f011 fa5e 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 8008ce0:	9b08      	ldr	r3, [sp, #32]
 8008ce2:	462a      	mov	r2, r5
 8008ce4:	210a      	movs	r1, #10
 8008ce6:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8008cea:	f011 fa57 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 8008cee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008cf0:	462a      	mov	r2, r5
 8008cf2:	210a      	movs	r1, #10
 8008cf4:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8008cf8:	f011 fa50 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 8008cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008cfe:	462a      	mov	r2, r5
 8008d00:	210a      	movs	r1, #10
 8008d02:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8008d06:	f011 fa49 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8008d0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008d0c:	462a      	mov	r2, r5
 8008d0e:	210a      	movs	r1, #10
 8008d10:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8008d14:	f011 fa42 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8008d18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008d1a:	462a      	mov	r2, r5
 8008d1c:	210a      	movs	r1, #10
 8008d1e:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8008d22:	f011 fa3b 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008d26:	4630      	mov	r0, r6
 8008d28:	f00f f972 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008d2c:	a80d      	add	r0, sp, #52	; 0x34
 8008d2e:	f008 fa3d 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
 8008d32:	b04a      	add	sp, #296	; 0x128
 8008d34:	bd70      	pop	{r4, r5, r6, pc}
 8008d36:	bf00      	nop
 8008d38:	0802f85c 	.word	0x0802f85c
 8008d3c:	0802f920 	.word	0x0802f920
 8008d40:	0802d770 	.word	0x0802d770
 8008d44:	0802fd1c 	.word	0x0802fd1c
 8008d48:	0802ff00 	.word	0x0802ff00
 8008d4c:	0802d6b2 	.word	0x0802d6b2
 8008d50:	081e0000 	.word	0x081e0000

08008d54 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008d54:	f7f9 be30 	b.w	80029b8 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008d58 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008d58:	4770      	bx	lr

08008d5a <_ZN19FrontendApplicationD0Ev>:
 8008d5a:	b510      	push	{r4, lr}
 8008d5c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008d60:	4604      	mov	r4, r0
 8008d62:	f022 f922 	bl	802afaa <_ZdlPvj>
 8008d66:	4620      	mov	r0, r4
 8008d68:	bd10      	pop	{r4, pc}

08008d6a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008d6a:	b510      	push	{r4, lr}
 8008d6c:	4604      	mov	r4, r0
    {
        model.tick();
 8008d6e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008d72:	f000 fafb 	bl	800936c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008d76:	4620      	mov	r0, r4
    }
 8008d78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008d7c:	f00e b924 	b.w	8016fc8 <_ZN8touchgfx11Application15handleTickEventEv>

08008d80 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008d80:	b510      	push	{r4, lr}
 8008d82:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008d84:	f7fb fe40 	bl	8004a08 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008d88:	4b01      	ldr	r3, [pc, #4]	; (8008d90 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008d8a:	6023      	str	r3, [r4, #0]
{

}
 8008d8c:	4620      	mov	r0, r4
 8008d8e:	bd10      	pop	{r4, pc}
 8008d90:	0802f21c 	.word	0x0802f21c

08008d94 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008d94:	4770      	bx	lr

08008d96 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008d96:	3804      	subs	r0, #4
 8008d98:	4770      	bx	lr

08008d9a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008d9a:	4770      	bx	lr

08008d9c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d9c:	68c0      	ldr	r0, [r0, #12]
 8008d9e:	6803      	ldr	r3, [r0, #0]
 8008da0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008da2:	4718      	bx	r3

08008da4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008da4:	f1a0 0004 	sub.w	r0, r0, #4
 8008da8:	f7ff bff8 	b.w	8008d9c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008dac <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008dac:	b510      	push	{r4, lr}
 8008dae:	2110      	movs	r1, #16
 8008db0:	4604      	mov	r4, r0
 8008db2:	f022 f8fa 	bl	802afaa <_ZdlPvj>
 8008db6:	4620      	mov	r0, r4
 8008db8:	bd10      	pop	{r4, pc}

08008dba <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008dba:	f1a0 0004 	sub.w	r0, r0, #4
 8008dbe:	e7f5      	b.n	8008dac <_ZN18Main_MenuPresenterD0Ev>

08008dc0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008dc0:	b510      	push	{r4, lr}
 8008dc2:	2200      	movs	r2, #0
 8008dc4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008dc6:	4a04      	ldr	r2, [pc, #16]	; (8008dd8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008dc8:	60c1      	str	r1, [r0, #12]
 8008dca:	f102 0408 	add.w	r4, r2, #8
 8008dce:	3224      	adds	r2, #36	; 0x24
 8008dd0:	6004      	str	r4, [r0, #0]
 8008dd2:	6042      	str	r2, [r0, #4]
}
 8008dd4:	bd10      	pop	{r4, pc}
 8008dd6:	bf00      	nop
 8008dd8:	0802f268 	.word	0x0802f268

08008ddc <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008ddc:	4770      	bx	lr
	...

08008de0 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008de0:	b510      	push	{r4, lr}
 8008de2:	4b03      	ldr	r3, [pc, #12]	; (8008df0 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008de4:	6003      	str	r3, [r0, #0]
 8008de6:	4604      	mov	r4, r0
 8008de8:	f7fc ff88 	bl	8005cfc <_ZN17Main_MenuViewBaseD1Ev>
 8008dec:	4620      	mov	r0, r4
 8008dee:	bd10      	pop	{r4, pc}
 8008df0:	0802f2a0 	.word	0x0802f2a0

08008df4 <_ZN13Main_MenuViewD0Ev>:
 8008df4:	b510      	push	{r4, lr}
 8008df6:	4604      	mov	r4, r0
 8008df8:	f7ff fff2 	bl	8008de0 <_ZN13Main_MenuViewD1Ev>
 8008dfc:	4620      	mov	r0, r4
 8008dfe:	f241 117c 	movw	r1, #4476	; 0x117c
 8008e02:	f022 f8d2 	bl	802afaa <_ZdlPvj>
 8008e06:	4620      	mov	r0, r4
 8008e08:	bd10      	pop	{r4, pc}
	...

08008e0c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008e0c:	b510      	push	{r4, lr}
 8008e0e:	4604      	mov	r4, r0
 8008e10:	f7fc ffbe 	bl	8005d90 <_ZN17Main_MenuViewBaseC1Ev>
 8008e14:	4b01      	ldr	r3, [pc, #4]	; (8008e1c <_ZN13Main_MenuViewC1Ev+0x10>)
 8008e16:	6023      	str	r3, [r4, #0]
}
 8008e18:	4620      	mov	r0, r4
 8008e1a:	bd10      	pop	{r4, pc}
 8008e1c:	0802f2a0 	.word	0x0802f2a0

08008e20 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008e20:	f7fc bf48 	b.w	8005cb4 <_ZN17Main_MenuViewBase11setupScreenEv>

08008e24 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008e24:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008e26:	4a0a      	ldr	r2, [pc, #40]	; (8008e50 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008e28:	4605      	mov	r5, r0
 8008e2a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008e2c:	460b      	mov	r3, r1
 8008e2e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008e32:	2104      	movs	r1, #4
 8008e34:	f011 f9b2 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008e38:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e3c:	f00f f8e8 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e40:	b92c      	cbnz	r4, 8008e4e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008e42:	f00d fffd 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e46:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e4a:	f7fb bedd 	b.w	8004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e4e:	bd38      	pop	{r3, r4, r5, pc}
 8008e50:	0802d6b2 	.word	0x0802d6b2

08008e54 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008e54:	4770      	bx	lr

08008e56 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008e56:	3804      	subs	r0, #4
 8008e58:	4770      	bx	lr

08008e5a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008e5a:	4770      	bx	lr

08008e5c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e5c:	68c0      	ldr	r0, [r0, #12]
 8008e5e:	6803      	ldr	r3, [r0, #0]
 8008e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e62:	4718      	bx	r3

08008e64 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e64:	f1a0 0004 	sub.w	r0, r0, #4
 8008e68:	f7ff bff8 	b.w	8008e5c <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008e6c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008e6c:	b510      	push	{r4, lr}
 8008e6e:	2110      	movs	r1, #16
 8008e70:	4604      	mov	r4, r0
 8008e72:	f022 f89a 	bl	802afaa <_ZdlPvj>
 8008e76:	4620      	mov	r0, r4
 8008e78:	bd10      	pop	{r4, pc}

08008e7a <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008e7a:	f1a0 0004 	sub.w	r0, r0, #4
 8008e7e:	e7f5      	b.n	8008e6c <_ZN20MeasurementPresenterD0Ev>

08008e80 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008e80:	b510      	push	{r4, lr}
 8008e82:	2200      	movs	r2, #0
 8008e84:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e86:	4a04      	ldr	r2, [pc, #16]	; (8008e98 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008e88:	60c1      	str	r1, [r0, #12]
 8008e8a:	f102 0408 	add.w	r4, r2, #8
 8008e8e:	3224      	adds	r2, #36	; 0x24
 8008e90:	6004      	str	r4, [r0, #0]
 8008e92:	6042      	str	r2, [r0, #4]
}
 8008e94:	bd10      	pop	{r4, pc}
 8008e96:	bf00      	nop
 8008e98:	0802f2d0 	.word	0x0802f2d0

08008e9c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008e9c:	4770      	bx	lr
	...

08008ea0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008ea0:	b510      	push	{r4, lr}
 8008ea2:	4b03      	ldr	r3, [pc, #12]	; (8008eb0 <_ZN15MeasurementViewD1Ev+0x10>)
 8008ea4:	6003      	str	r3, [r0, #0]
 8008ea6:	4604      	mov	r4, r0
 8008ea8:	f7fd f9e2 	bl	8006270 <_ZN19MeasurementViewBaseD1Ev>
 8008eac:	4620      	mov	r0, r4
 8008eae:	bd10      	pop	{r4, pc}
 8008eb0:	0802f308 	.word	0x0802f308

08008eb4 <_ZN15MeasurementViewD0Ev>:
 8008eb4:	b510      	push	{r4, lr}
 8008eb6:	4604      	mov	r4, r0
 8008eb8:	f7ff fff2 	bl	8008ea0 <_ZN15MeasurementViewD1Ev>
 8008ebc:	4620      	mov	r0, r4
 8008ebe:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008ec2:	f022 f872 	bl	802afaa <_ZdlPvj>
 8008ec6:	4620      	mov	r0, r4
 8008ec8:	bd10      	pop	{r4, pc}
	...

08008ecc <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008ecc:	b510      	push	{r4, lr}
 8008ece:	4604      	mov	r4, r0
 8008ed0:	f7fd fa08 	bl	80062e4 <_ZN19MeasurementViewBaseC1Ev>
 8008ed4:	4b01      	ldr	r3, [pc, #4]	; (8008edc <_ZN15MeasurementViewC1Ev+0x10>)
 8008ed6:	6023      	str	r3, [r4, #0]
}
 8008ed8:	4620      	mov	r0, r4
 8008eda:	bd10      	pop	{r4, pc}
 8008edc:	0802f308 	.word	0x0802f308

08008ee0 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008ee0:	f7fd b9a2 	b.w	8006228 <_ZN19MeasurementViewBase11setupScreenEv>

08008ee4 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008ee4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ee6:	4a0a      	ldr	r2, [pc, #40]	; (8008f10 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008ee8:	4605      	mov	r5, r0
 8008eea:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008eec:	460b      	mov	r3, r1
 8008eee:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008ef2:	2104      	movs	r1, #4
 8008ef4:	f011 f952 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ef8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008efc:	f00f f888 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008f00:	b92c      	cbnz	r4, 8008f0e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008f02:	f00d ff9d 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008f06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008f0a:	f7fb be7d 	b.w	8004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008f0e:	bd38      	pop	{r3, r4, r5, pc}
 8008f10:	0802d6b2 	.word	0x0802d6b2

08008f14 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008f14:	4770      	bx	lr

08008f16 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008f16:	3804      	subs	r0, #4
 8008f18:	4770      	bx	lr

08008f1a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008f1a:	4770      	bx	lr

08008f1c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008f1c:	68c0      	ldr	r0, [r0, #12]
 8008f1e:	6803      	ldr	r3, [r0, #0]
 8008f20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f22:	4718      	bx	r3

08008f24 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008f24:	f1a0 0004 	sub.w	r0, r0, #4
 8008f28:	f7ff bff8 	b.w	8008f1c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008f2c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008f2c:	b510      	push	{r4, lr}
 8008f2e:	2110      	movs	r1, #16
 8008f30:	4604      	mov	r4, r0
 8008f32:	f022 f83a 	bl	802afaa <_ZdlPvj>
 8008f36:	4620      	mov	r0, r4
 8008f38:	bd10      	pop	{r4, pc}

08008f3a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008f3a:	f1a0 0004 	sub.w	r0, r0, #4
 8008f3e:	e7f5      	b.n	8008f2c <_ZN29Measurement_AccuratePresenterD0Ev>

08008f40 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008f40:	b510      	push	{r4, lr}
 8008f42:	2200      	movs	r2, #0
 8008f44:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f46:	4a04      	ldr	r2, [pc, #16]	; (8008f58 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008f48:	60c1      	str	r1, [r0, #12]
 8008f4a:	f102 0408 	add.w	r4, r2, #8
 8008f4e:	3224      	adds	r2, #36	; 0x24
 8008f50:	6004      	str	r4, [r0, #0]
 8008f52:	6042      	str	r2, [r0, #4]
}
 8008f54:	bd10      	pop	{r4, pc}
 8008f56:	bf00      	nop
 8008f58:	0802f338 	.word	0x0802f338

08008f5c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008f5c:	4770      	bx	lr
	...

08008f60 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008f60:	b510      	push	{r4, lr}
 8008f62:	4b03      	ldr	r3, [pc, #12]	; (8008f70 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008f64:	6003      	str	r3, [r0, #0]
 8008f66:	4604      	mov	r4, r0
 8008f68:	f7fd fc04 	bl	8006774 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008f6c:	4620      	mov	r0, r4
 8008f6e:	bd10      	pop	{r4, pc}
 8008f70:	0802f370 	.word	0x0802f370

08008f74 <_ZN24Measurement_AccurateViewD0Ev>:
 8008f74:	b510      	push	{r4, lr}
 8008f76:	4604      	mov	r4, r0
 8008f78:	f7ff fff2 	bl	8008f60 <_ZN24Measurement_AccurateViewD1Ev>
 8008f7c:	4620      	mov	r0, r4
 8008f7e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008f82:	f022 f812 	bl	802afaa <_ZdlPvj>
 8008f86:	4620      	mov	r0, r4
 8008f88:	bd10      	pop	{r4, pc}
	...

08008f8c <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008f8c:	b510      	push	{r4, lr}
 8008f8e:	4604      	mov	r4, r0
 8008f90:	f7fd fc2a 	bl	80067e8 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008f94:	4b01      	ldr	r3, [pc, #4]	; (8008f9c <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008f96:	6023      	str	r3, [r4, #0]
}
 8008f98:	4620      	mov	r0, r4
 8008f9a:	bd10      	pop	{r4, pc}
 8008f9c:	0802f370 	.word	0x0802f370

08008fa0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008fa0:	f7fd bbc4 	b.w	800672c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008fa4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008fa4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008fa6:	4a0a      	ldr	r2, [pc, #40]	; (8008fd0 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008fa8:	4605      	mov	r5, r0
 8008faa:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008fac:	460b      	mov	r3, r1
 8008fae:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008fb2:	2104      	movs	r1, #4
 8008fb4:	f011 f8f2 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008fb8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008fbc:	f00f f828 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008fc0:	b92c      	cbnz	r4, 8008fce <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008fc2:	f00d ff3d 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008fc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008fca:	f7fb be1d 	b.w	8004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008fce:	bd38      	pop	{r3, r4, r5, pc}
 8008fd0:	0802d6b2 	.word	0x0802d6b2

08008fd4 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008fd4:	4770      	bx	lr

08008fd6 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008fd6:	3804      	subs	r0, #4
 8008fd8:	4770      	bx	lr

08008fda <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008fda:	4770      	bx	lr

08008fdc <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008fdc:	4770      	bx	lr

08008fde <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008fde:	b510      	push	{r4, lr}
 8008fe0:	2110      	movs	r1, #16
 8008fe2:	4604      	mov	r4, r0
 8008fe4:	f021 ffe1 	bl	802afaa <_ZdlPvj>
 8008fe8:	4620      	mov	r0, r4
 8008fea:	bd10      	pop	{r4, pc}

08008fec <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008fec:	f1a0 0004 	sub.w	r0, r0, #4
 8008ff0:	e7f5      	b.n	8008fde <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008ff2 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008ff2:	4770      	bx	lr

08008ff4 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008ff4:	b510      	push	{r4, lr}
 8008ff6:	2200      	movs	r2, #0
 8008ff8:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ffa:	4a04      	ldr	r2, [pc, #16]	; (800900c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008ffc:	60c1      	str	r1, [r0, #12]
 8008ffe:	f102 0408 	add.w	r4, r2, #8
 8009002:	3224      	adds	r2, #36	; 0x24
 8009004:	6004      	str	r4, [r0, #0]
 8009006:	6042      	str	r2, [r0, #4]
}
 8009008:	bd10      	pop	{r4, pc}
 800900a:	bf00      	nop
 800900c:	0802f3a0 	.word	0x0802f3a0

08009010 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8009010:	4770      	bx	lr
	...

08009014 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8009014:	b510      	push	{r4, lr}
 8009016:	4b03      	ldr	r3, [pc, #12]	; (8009024 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8009018:	6003      	str	r3, [r0, #0]
 800901a:	4604      	mov	r4, r0
 800901c:	f7fd fe28 	bl	8006c70 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8009020:	4620      	mov	r0, r4
 8009022:	bd10      	pop	{r4, pc}
 8009024:	0802f3d8 	.word	0x0802f3d8

08009028 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8009028:	b510      	push	{r4, lr}
 800902a:	4604      	mov	r4, r0
 800902c:	f7ff fff2 	bl	8009014 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8009030:	4620      	mov	r0, r4
 8009032:	f241 015c 	movw	r1, #4188	; 0x105c
 8009036:	f021 ffb8 	bl	802afaa <_ZdlPvj>
 800903a:	4620      	mov	r0, r4
 800903c:	bd10      	pop	{r4, pc}
	...

08009040 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8009040:	b510      	push	{r4, lr}
 8009042:	4604      	mov	r4, r0
 8009044:	f7fd fe3c 	bl	8006cc0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8009048:	4b01      	ldr	r3, [pc, #4]	; (8009050 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800904a:	6023      	str	r3, [r4, #0]
}
 800904c:	4620      	mov	r0, r4
 800904e:	bd10      	pop	{r4, pc}
 8009050:	0802f3d8 	.word	0x0802f3d8

08009054 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8009054:	f7fd bde8 	b.w	8006c28 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08009058 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8009058:	4770      	bx	lr

0800905a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800905a:	3804      	subs	r0, #4
 800905c:	4770      	bx	lr

0800905e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800905e:	4770      	bx	lr

08009060 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8009060:	4770      	bx	lr

08009062 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009062:	b510      	push	{r4, lr}
 8009064:	2110      	movs	r1, #16
 8009066:	4604      	mov	r4, r0
 8009068:	f021 ff9f 	bl	802afaa <_ZdlPvj>
 800906c:	4620      	mov	r0, r4
 800906e:	bd10      	pop	{r4, pc}

08009070 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8009070:	f1a0 0004 	sub.w	r0, r0, #4
 8009074:	e7f5      	b.n	8009062 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08009076 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8009076:	4770      	bx	lr

08009078 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8009078:	b510      	push	{r4, lr}
 800907a:	2200      	movs	r2, #0
 800907c:	6082      	str	r2, [r0, #8]
    : view(v)
 800907e:	4a04      	ldr	r2, [pc, #16]	; (8009090 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8009080:	60c1      	str	r1, [r0, #12]
 8009082:	f102 0408 	add.w	r4, r2, #8
 8009086:	3224      	adds	r2, #36	; 0x24
 8009088:	6004      	str	r4, [r0, #0]
 800908a:	6042      	str	r2, [r0, #4]
}
 800908c:	bd10      	pop	{r4, pc}
 800908e:	bf00      	nop
 8009090:	0802f404 	.word	0x0802f404

08009094 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8009094:	4770      	bx	lr
	...

08009098 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8009098:	b510      	push	{r4, lr}
 800909a:	4b03      	ldr	r3, [pc, #12]	; (80090a8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800909c:	6003      	str	r3, [r0, #0]
 800909e:	4604      	mov	r4, r0
 80090a0:	f7fd ff96 	bl	8006fd0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80090a4:	4620      	mov	r0, r4
 80090a6:	bd10      	pop	{r4, pc}
 80090a8:	0802f43c 	.word	0x0802f43c

080090ac <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80090ac:	b510      	push	{r4, lr}
 80090ae:	4604      	mov	r4, r0
 80090b0:	f7ff fff2 	bl	8009098 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80090b4:	4620      	mov	r0, r4
 80090b6:	f241 015c 	movw	r1, #4188	; 0x105c
 80090ba:	f021 ff76 	bl	802afaa <_ZdlPvj>
 80090be:	4620      	mov	r0, r4
 80090c0:	bd10      	pop	{r4, pc}
	...

080090c4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80090c4:	b510      	push	{r4, lr}
 80090c6:	4604      	mov	r4, r0
 80090c8:	f7fd ffaa 	bl	8007020 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80090cc:	4b01      	ldr	r3, [pc, #4]	; (80090d4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80090ce:	6023      	str	r3, [r4, #0]
}
 80090d0:	4620      	mov	r0, r4
 80090d2:	bd10      	pop	{r4, pc}
 80090d4:	0802f43c 	.word	0x0802f43c

080090d8 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 80090d8:	f7fd bf56 	b.w	8006f88 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

080090dc <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 80090dc:	4770      	bx	lr

080090de <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 80090de:	3804      	subs	r0, #4
 80090e0:	4770      	bx	lr

080090e2 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 80090e2:	4770      	bx	lr

080090e4 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80090e4:	68c0      	ldr	r0, [r0, #12]
 80090e6:	6803      	ldr	r3, [r0, #0]
 80090e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090ea:	4718      	bx	r3

080090ec <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80090ec:	f1a0 0004 	sub.w	r0, r0, #4
 80090f0:	f7ff bff8 	b.w	80090e4 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

080090f4 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 80090f4:	b510      	push	{r4, lr}
 80090f6:	2110      	movs	r1, #16
 80090f8:	4604      	mov	r4, r0
 80090fa:	f021 ff56 	bl	802afaa <_ZdlPvj>
 80090fe:	4620      	mov	r0, r4
 8009100:	bd10      	pop	{r4, pc}

08009102 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009102:	f1a0 0004 	sub.w	r0, r0, #4
 8009106:	e7f5      	b.n	80090f4 <_ZN27Measurement_SinglePresenterD0Ev>

08009108 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009108:	b510      	push	{r4, lr}
 800910a:	2200      	movs	r2, #0
 800910c:	6082      	str	r2, [r0, #8]
    : view(v)
 800910e:	4a04      	ldr	r2, [pc, #16]	; (8009120 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009110:	60c1      	str	r1, [r0, #12]
 8009112:	f102 0408 	add.w	r4, r2, #8
 8009116:	3224      	adds	r2, #36	; 0x24
 8009118:	6004      	str	r4, [r0, #0]
 800911a:	6042      	str	r2, [r0, #4]
}
 800911c:	bd10      	pop	{r4, pc}
 800911e:	bf00      	nop
 8009120:	0802f468 	.word	0x0802f468

08009124 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009124:	4770      	bx	lr
	...

08009128 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009128:	b510      	push	{r4, lr}
 800912a:	4b03      	ldr	r3, [pc, #12]	; (8009138 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800912c:	6003      	str	r3, [r0, #0]
 800912e:	4604      	mov	r4, r0
 8009130:	f7fe f8fe 	bl	8007330 <_ZN26Measurement_SingleViewBaseD1Ev>
 8009134:	4620      	mov	r0, r4
 8009136:	bd10      	pop	{r4, pc}
 8009138:	0802f4a0 	.word	0x0802f4a0

0800913c <_ZN22Measurement_SingleViewD0Ev>:
 800913c:	b510      	push	{r4, lr}
 800913e:	4604      	mov	r4, r0
 8009140:	f7ff fff2 	bl	8009128 <_ZN22Measurement_SingleViewD1Ev>
 8009144:	4620      	mov	r0, r4
 8009146:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800914a:	f021 ff2e 	bl	802afaa <_ZdlPvj>
 800914e:	4620      	mov	r0, r4
 8009150:	bd10      	pop	{r4, pc}
	...

08009154 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009154:	b510      	push	{r4, lr}
 8009156:	4604      	mov	r4, r0
 8009158:	f7fe f924 	bl	80073a4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800915c:	4b01      	ldr	r3, [pc, #4]	; (8009164 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800915e:	6023      	str	r3, [r4, #0]
}
 8009160:	4620      	mov	r0, r4
 8009162:	bd10      	pop	{r4, pc}
 8009164:	0802f4a0 	.word	0x0802f4a0

08009168 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009168:	f7fe b8be 	b.w	80072e8 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800916c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800916c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800916e:	4a0a      	ldr	r2, [pc, #40]	; (8009198 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009170:	4605      	mov	r5, r0
 8009172:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009174:	460b      	mov	r3, r1
 8009176:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800917a:	2104      	movs	r1, #4
 800917c:	f011 f80e 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009180:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009184:	f00e ff44 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8009188:	b92c      	cbnz	r4, 8009196 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 800918a:	f00d fe59 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800918e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009192:	f7fb bd39 	b.w	8004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009196:	bd38      	pop	{r3, r4, r5, pc}
 8009198:	0802d6b2 	.word	0x0802d6b2

0800919c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 800919c:	4770      	bx	lr

0800919e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 800919e:	3804      	subs	r0, #4
 80091a0:	4770      	bx	lr

080091a2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80091a2:	4770      	bx	lr

080091a4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80091a4:	4770      	bx	lr

080091a6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80091a6:	b510      	push	{r4, lr}
 80091a8:	2110      	movs	r1, #16
 80091aa:	4604      	mov	r4, r0
 80091ac:	f021 fefd 	bl	802afaa <_ZdlPvj>
 80091b0:	4620      	mov	r0, r4
 80091b2:	bd10      	pop	{r4, pc}

080091b4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80091b4:	f1a0 0004 	sub.w	r0, r0, #4
 80091b8:	e7f5      	b.n	80091a6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080091ba <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80091ba:	4770      	bx	lr

080091bc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80091bc:	b510      	push	{r4, lr}
 80091be:	2200      	movs	r2, #0
 80091c0:	6082      	str	r2, [r0, #8]
    : view(v)
 80091c2:	4a04      	ldr	r2, [pc, #16]	; (80091d4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80091c4:	60c1      	str	r1, [r0, #12]
 80091c6:	f102 0408 	add.w	r4, r2, #8
 80091ca:	3224      	adds	r2, #36	; 0x24
 80091cc:	6004      	str	r4, [r0, #0]
 80091ce:	6042      	str	r2, [r0, #4]
}
 80091d0:	bd10      	pop	{r4, pc}
 80091d2:	bf00      	nop
 80091d4:	0802f4d0 	.word	0x0802f4d0

080091d8 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80091d8:	4770      	bx	lr
	...

080091dc <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80091dc:	b510      	push	{r4, lr}
 80091de:	4b03      	ldr	r3, [pc, #12]	; (80091ec <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 80091e0:	6003      	str	r3, [r0, #0]
 80091e2:	4604      	mov	r4, r0
 80091e4:	f7fe fb28 	bl	8007838 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 80091e8:	4620      	mov	r0, r4
 80091ea:	bd10      	pop	{r4, pc}
 80091ec:	0802f510 	.word	0x0802f510

080091f0 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 80091f0:	b510      	push	{r4, lr}
 80091f2:	4604      	mov	r4, r0
 80091f4:	f7ff fff2 	bl	80091dc <_ZN33Measurement_Single_Display_1PViewD1Ev>
 80091f8:	4620      	mov	r0, r4
 80091fa:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80091fe:	f021 fed4 	bl	802afaa <_ZdlPvj>
 8009202:	4620      	mov	r0, r4
 8009204:	bd10      	pop	{r4, pc}
	...

08009208 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009208:	b510      	push	{r4, lr}
 800920a:	4604      	mov	r4, r0
 800920c:	f7fe fb4e 	bl	80078ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009210:	4b01      	ldr	r3, [pc, #4]	; (8009218 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009212:	6023      	str	r3, [r4, #0]
}
 8009214:	4620      	mov	r0, r4
 8009216:	bd10      	pop	{r4, pc}
 8009218:	0802f510 	.word	0x0802f510

0800921c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800921c:	f7fe bae7 	b.w	80077ee <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009220 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009220:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009222:	4e2a      	ldr	r6, [pc, #168]	; (80092cc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009224:	4f2a      	ldr	r7, [pc, #168]	; (80092d0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8009226:	4604      	mov	r4, r0
 8009228:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 800922a:	6803      	ldr	r3, [r0, #0]
{
 800922c:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 800922e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009230:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009232:	2201      	movs	r2, #1
 8009234:	2180      	movs	r1, #128	; 0x80
 8009236:	4638      	mov	r0, r7
 8009238:	f000 ffe2 	bl	800a200 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 800923c:	f7f7 fbde 	bl	80009fc <updateGUI_test>
 8009240:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8009242:	f7f8 f9c7 	bl	80015d4 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009246:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8009248:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800924a:	2001      	movs	r0, #1
 800924c:	f7f7 fb0c 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8009250:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8009254:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009256:	ed8d 0a04 	vstr	s0, [sp, #16]
 800925a:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 800925e:	9001      	str	r0, [sp, #4]
 8009260:	f00a fe8c 	bl	8013f7c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009264:	9801      	ldr	r0, [sp, #4]
 8009266:	f00e fed3 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800926a:	462b      	mov	r3, r5
 800926c:	4a19      	ldr	r2, [pc, #100]	; (80092d4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 800926e:	210a      	movs	r1, #10
 8009270:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8009274:	f010 ff92 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8009278:	f504 7020 	add.w	r0, r4, #640	; 0x280
 800927c:	f00e fec8 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 8009280:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8009282:	4a15      	ldr	r2, [pc, #84]	; (80092d8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 8009284:	9303      	str	r3, [sp, #12]
 8009286:	210a      	movs	r1, #10
 8009288:	ab03      	add	r3, sp, #12
 800928a:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 800928e:	f011 f971 	bl	801a574 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 8009292:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8009296:	f00e febb 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 800929a:	9b05      	ldr	r3, [sp, #20]
 800929c:	4a0e      	ldr	r2, [pc, #56]	; (80092d8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 800929e:	9303      	str	r3, [sp, #12]
 80092a0:	210a      	movs	r1, #10
 80092a2:	ab03      	add	r3, sp, #12
 80092a4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80092a8:	f011 f964 	bl	801a574 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80092ac:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80092b0:	f00e feae 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80092b4:	4638      	mov	r0, r7
 80092b6:	2200      	movs	r2, #0
 80092b8:	2180      	movs	r1, #128	; 0x80
 80092ba:	f000 ffa1 	bl	800a200 <HAL_GPIO_WritePin>
 80092be:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80092c0:	6803      	ldr	r3, [r0, #0]
 80092c2:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80092c4:	b007      	add	sp, #28
 80092c6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80092ca:	4718      	bx	r3
 80092cc:	2001383c 	.word	0x2001383c
 80092d0:	40020000 	.word	0x40020000
 80092d4:	0802d6b2 	.word	0x0802d6b2
 80092d8:	0802f500 	.word	0x0802f500

080092dc <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80092dc:	4770      	bx	lr

080092de <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80092de:	3804      	subs	r0, #4
 80092e0:	4770      	bx	lr

080092e2 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 80092e2:	4770      	bx	lr

080092e4 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 80092e4:	4770      	bx	lr

080092e6 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 80092e6:	b510      	push	{r4, lr}
 80092e8:	2110      	movs	r1, #16
 80092ea:	4604      	mov	r4, r0
 80092ec:	f021 fe5d 	bl	802afaa <_ZdlPvj>
 80092f0:	4620      	mov	r0, r4
 80092f2:	bd10      	pop	{r4, pc}

080092f4 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 80092f4:	f1a0 0004 	sub.w	r0, r0, #4
 80092f8:	e7f5      	b.n	80092e6 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

080092fa <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 80092fa:	4770      	bx	lr

080092fc <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 80092fc:	b510      	push	{r4, lr}
 80092fe:	2200      	movs	r2, #0
 8009300:	6082      	str	r2, [r0, #8]
    : view(v)
 8009302:	4a04      	ldr	r2, [pc, #16]	; (8009314 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009304:	60c1      	str	r1, [r0, #12]
 8009306:	f102 0408 	add.w	r4, r2, #8
 800930a:	3224      	adds	r2, #36	; 0x24
 800930c:	6004      	str	r4, [r0, #0]
 800930e:	6042      	str	r2, [r0, #4]
}
 8009310:	bd10      	pop	{r4, pc}
 8009312:	bf00      	nop
 8009314:	0802f540 	.word	0x0802f540

08009318 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009318:	4770      	bx	lr
	...

0800931c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800931c:	b510      	push	{r4, lr}
 800931e:	4b03      	ldr	r3, [pc, #12]	; (800932c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009320:	6003      	str	r3, [r0, #0]
 8009322:	4604      	mov	r4, r0
 8009324:	f7fe fe22 	bl	8007f6c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009328:	4620      	mov	r0, r4
 800932a:	bd10      	pop	{r4, pc}
 800932c:	0802f578 	.word	0x0802f578

08009330 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009330:	b510      	push	{r4, lr}
 8009332:	4604      	mov	r4, r0
 8009334:	f7ff fff2 	bl	800931c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009338:	4620      	mov	r0, r4
 800933a:	f241 015c 	movw	r1, #4188	; 0x105c
 800933e:	f021 fe34 	bl	802afaa <_ZdlPvj>
 8009342:	4620      	mov	r0, r4
 8009344:	bd10      	pop	{r4, pc}
	...

08009348 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009348:	b510      	push	{r4, lr}
 800934a:	4604      	mov	r4, r0
 800934c:	f7fe fe36 	bl	8007fbc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009350:	4b01      	ldr	r3, [pc, #4]	; (8009358 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009352:	6023      	str	r3, [r4, #0]
}
 8009354:	4620      	mov	r0, r4
 8009356:	bd10      	pop	{r4, pc}
 8009358:	0802f578 	.word	0x0802f578

0800935c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800935c:	f7fe bde2 	b.w	8007f24 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009360 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009360:	2100      	movs	r1, #0
 8009362:	223c      	movs	r2, #60	; 0x3c
 8009364:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009368:	4770      	bx	lr
	...

0800936c <_ZN5Model4tickEv>:

void Model::tick()
{
 800936c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800936e:	4d0a      	ldr	r5, [pc, #40]	; (8009398 <_ZN5Model4tickEv+0x2c>)
{
 8009370:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009372:	6828      	ldr	r0, [r5, #0]
 8009374:	f004 fe80 	bl	800e078 <osMessageQueueGetCount>
 8009378:	b168      	cbz	r0, 8009396 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800937a:	2300      	movs	r3, #0
 800937c:	6828      	ldr	r0, [r5, #0]
 800937e:	461a      	mov	r2, r3
 8009380:	1d21      	adds	r1, r4, #4
 8009382:	f004 fe45 	bl	800e010 <osMessageQueueGet>
 8009386:	b930      	cbnz	r0, 8009396 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8009388:	6820      	ldr	r0, [r4, #0]
 800938a:	6861      	ldr	r1, [r4, #4]
 800938c:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 800938e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8009392:	689b      	ldr	r3, [r3, #8]
 8009394:	4718      	bx	r3
}
 8009396:	bd70      	pop	{r4, r5, r6, pc}
 8009398:	200001d8 	.word	0x200001d8

0800939c <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 800939c:	4770      	bx	lr

0800939e <_ZThn4_N21Project_InfoPresenterD1Ev>:
 800939e:	3804      	subs	r0, #4
 80093a0:	4770      	bx	lr

080093a2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80093a2:	4770      	bx	lr

080093a4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80093a4:	68c0      	ldr	r0, [r0, #12]
 80093a6:	6803      	ldr	r3, [r0, #0]
 80093a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80093aa:	4718      	bx	r3

080093ac <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80093ac:	f1a0 0004 	sub.w	r0, r0, #4
 80093b0:	f7ff bff8 	b.w	80093a4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080093b4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80093b4:	b510      	push	{r4, lr}
 80093b6:	2110      	movs	r1, #16
 80093b8:	4604      	mov	r4, r0
 80093ba:	f021 fdf6 	bl	802afaa <_ZdlPvj>
 80093be:	4620      	mov	r0, r4
 80093c0:	bd10      	pop	{r4, pc}

080093c2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80093c2:	f1a0 0004 	sub.w	r0, r0, #4
 80093c6:	e7f5      	b.n	80093b4 <_ZN21Project_InfoPresenterD0Ev>

080093c8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80093c8:	b510      	push	{r4, lr}
 80093ca:	2200      	movs	r2, #0
 80093cc:	6082      	str	r2, [r0, #8]
    : view(v)
 80093ce:	4a04      	ldr	r2, [pc, #16]	; (80093e0 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80093d0:	60c1      	str	r1, [r0, #12]
 80093d2:	f102 0408 	add.w	r4, r2, #8
 80093d6:	3224      	adds	r2, #36	; 0x24
 80093d8:	6004      	str	r4, [r0, #0]
 80093da:	6042      	str	r2, [r0, #4]
}
 80093dc:	bd10      	pop	{r4, pc}
 80093de:	bf00      	nop
 80093e0:	0802f5a4 	.word	0x0802f5a4

080093e4 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 80093e4:	4770      	bx	lr
	...

080093e8 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 80093e8:	b510      	push	{r4, lr}
 80093ea:	4b03      	ldr	r3, [pc, #12]	; (80093f8 <_ZN16Project_InfoViewD1Ev+0x10>)
 80093ec:	6003      	str	r3, [r0, #0]
 80093ee:	4604      	mov	r4, r0
 80093f0:	f7fe ff6a 	bl	80082c8 <_ZN20Project_InfoViewBaseD1Ev>
 80093f4:	4620      	mov	r0, r4
 80093f6:	bd10      	pop	{r4, pc}
 80093f8:	0802f5dc 	.word	0x0802f5dc

080093fc <_ZN16Project_InfoViewD0Ev>:
 80093fc:	b510      	push	{r4, lr}
 80093fe:	4604      	mov	r4, r0
 8009400:	f7ff fff2 	bl	80093e8 <_ZN16Project_InfoViewD1Ev>
 8009404:	4620      	mov	r0, r4
 8009406:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800940a:	f021 fdce 	bl	802afaa <_ZdlPvj>
 800940e:	4620      	mov	r0, r4
 8009410:	bd10      	pop	{r4, pc}
	...

08009414 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009414:	b510      	push	{r4, lr}
 8009416:	4604      	mov	r4, r0
 8009418:	f7fe ff7e 	bl	8008318 <_ZN20Project_InfoViewBaseC1Ev>
 800941c:	4b01      	ldr	r3, [pc, #4]	; (8009424 <_ZN16Project_InfoViewC1Ev+0x10>)
 800941e:	6023      	str	r3, [r4, #0]
}
 8009420:	4620      	mov	r0, r4
 8009422:	bd10      	pop	{r4, pc}
 8009424:	0802f5dc 	.word	0x0802f5dc

08009428 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009428:	f7fe bf2a 	b.w	8008280 <_ZN20Project_InfoViewBase11setupScreenEv>

0800942c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800942c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800942e:	4a0a      	ldr	r2, [pc, #40]	; (8009458 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009430:	4605      	mov	r5, r0
 8009432:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009434:	460b      	mov	r3, r1
 8009436:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800943a:	2104      	movs	r1, #4
 800943c:	f010 feae 	bl	801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009440:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009444:	f00e fde4 	bl	8018010 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009448:	b92c      	cbnz	r4, 8009456 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800944a:	f00d fcf9 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800944e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009452:	f7fb bbd9 	b.w	8004c08 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009456:	bd38      	pop	{r3, r4, r5, pc}
 8009458:	0802d6b2 	.word	0x0802d6b2

0800945c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800945c:	4770      	bx	lr

0800945e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800945e:	3804      	subs	r0, #4
 8009460:	4770      	bx	lr

08009462 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009462:	4770      	bx	lr

08009464 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009464:	4770      	bx	lr

08009466 <_ZN21Shutting_OffPresenterD0Ev>:
 8009466:	b510      	push	{r4, lr}
 8009468:	2110      	movs	r1, #16
 800946a:	4604      	mov	r4, r0
 800946c:	f021 fd9d 	bl	802afaa <_ZdlPvj>
 8009470:	4620      	mov	r0, r4
 8009472:	bd10      	pop	{r4, pc}

08009474 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009474:	f1a0 0004 	sub.w	r0, r0, #4
 8009478:	e7f5      	b.n	8009466 <_ZN21Shutting_OffPresenterD0Ev>

0800947a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800947a:	4770      	bx	lr

0800947c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800947c:	b510      	push	{r4, lr}
 800947e:	2200      	movs	r2, #0
 8009480:	6082      	str	r2, [r0, #8]
    : view(v)
 8009482:	4a04      	ldr	r2, [pc, #16]	; (8009494 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8009484:	60c1      	str	r1, [r0, #12]
 8009486:	f102 0408 	add.w	r4, r2, #8
 800948a:	3224      	adds	r2, #36	; 0x24
 800948c:	6004      	str	r4, [r0, #0]
 800948e:	6042      	str	r2, [r0, #4]
}
 8009490:	bd10      	pop	{r4, pc}
 8009492:	bf00      	nop
 8009494:	0802f60c 	.word	0x0802f60c

08009498 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8009498:	4770      	bx	lr
	...

0800949c <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 800949c:	b510      	push	{r4, lr}
 800949e:	4b03      	ldr	r3, [pc, #12]	; (80094ac <_ZN16Shutting_OffViewD1Ev+0x10>)
 80094a0:	6003      	str	r3, [r0, #0]
 80094a2:	4604      	mov	r4, r0
 80094a4:	f7ff f906 	bl	80086b4 <_ZN20Shutting_OffViewBaseD1Ev>
 80094a8:	4620      	mov	r0, r4
 80094aa:	bd10      	pop	{r4, pc}
 80094ac:	0802f644 	.word	0x0802f644

080094b0 <_ZN16Shutting_OffViewD0Ev>:
 80094b0:	b510      	push	{r4, lr}
 80094b2:	4604      	mov	r4, r0
 80094b4:	f7ff fff2 	bl	800949c <_ZN16Shutting_OffViewD1Ev>
 80094b8:	4620      	mov	r0, r4
 80094ba:	2198      	movs	r1, #152	; 0x98
 80094bc:	f021 fd75 	bl	802afaa <_ZdlPvj>
 80094c0:	4620      	mov	r0, r4
 80094c2:	bd10      	pop	{r4, pc}

080094c4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80094c4:	b510      	push	{r4, lr}
 80094c6:	4604      	mov	r4, r0
 80094c8:	f7ff f8fe 	bl	80086c8 <_ZN20Shutting_OffViewBaseC1Ev>
 80094cc:	4b01      	ldr	r3, [pc, #4]	; (80094d4 <_ZN16Shutting_OffViewC1Ev+0x10>)
 80094ce:	6023      	str	r3, [r4, #0]
}
 80094d0:	4620      	mov	r0, r4
 80094d2:	bd10      	pop	{r4, pc}
 80094d4:	0802f644 	.word	0x0802f644

080094d8 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 80094d8:	f7ff b8ed 	b.w	80086b6 <_ZN20Shutting_OffViewBase11setupScreenEv>

080094dc <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80094dc:	20f0      	movs	r0, #240	; 0xf0
 80094de:	4770      	bx	lr

080094e0 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 80094e0:	f44f 70a0 	mov.w	r0, #320	; 0x140
 80094e4:	4770      	bx	lr
 80094e6:	bf00      	nop

080094e8 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 80094e8:	2029      	movs	r0, #41	; 0x29
 80094ea:	f7f7 beeb 	b.w	80012c4 <LCD_IO_WriteReg>
 80094ee:	bf00      	nop

080094f0 <ili9341_DisplayOff>:
 80094f0:	2028      	movs	r0, #40	; 0x28
 80094f2:	f7f7 bee7 	b.w	80012c4 <LCD_IO_WriteReg>
 80094f6:	bf00      	nop

080094f8 <ili9341_Init>:
{
 80094f8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80094fa:	f7f7 fea9 	bl	8001250 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 80094fe:	20ca      	movs	r0, #202	; 0xca
 8009500:	f7f7 fee0 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009504:	20c3      	movs	r0, #195	; 0xc3
 8009506:	f7f7 feb3 	bl	8001270 <LCD_IO_WriteData>
 800950a:	2008      	movs	r0, #8
 800950c:	f7f7 feb0 	bl	8001270 <LCD_IO_WriteData>
 8009510:	2050      	movs	r0, #80	; 0x50
 8009512:	f7f7 fead 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009516:	20cf      	movs	r0, #207	; 0xcf
 8009518:	f7f7 fed4 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800951c:	2000      	movs	r0, #0
 800951e:	f7f7 fea7 	bl	8001270 <LCD_IO_WriteData>
 8009522:	20c1      	movs	r0, #193	; 0xc1
 8009524:	f7f7 fea4 	bl	8001270 <LCD_IO_WriteData>
 8009528:	2030      	movs	r0, #48	; 0x30
 800952a:	f7f7 fea1 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800952e:	20ed      	movs	r0, #237	; 0xed
 8009530:	f7f7 fec8 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009534:	2064      	movs	r0, #100	; 0x64
 8009536:	f7f7 fe9b 	bl	8001270 <LCD_IO_WriteData>
 800953a:	2003      	movs	r0, #3
 800953c:	f7f7 fe98 	bl	8001270 <LCD_IO_WriteData>
 8009540:	2012      	movs	r0, #18
 8009542:	f7f7 fe95 	bl	8001270 <LCD_IO_WriteData>
 8009546:	2081      	movs	r0, #129	; 0x81
 8009548:	f7f7 fe92 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800954c:	20e8      	movs	r0, #232	; 0xe8
 800954e:	f7f7 feb9 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009552:	2085      	movs	r0, #133	; 0x85
 8009554:	f7f7 fe8c 	bl	8001270 <LCD_IO_WriteData>
 8009558:	2000      	movs	r0, #0
 800955a:	f7f7 fe89 	bl	8001270 <LCD_IO_WriteData>
 800955e:	2078      	movs	r0, #120	; 0x78
 8009560:	f7f7 fe86 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009564:	20cb      	movs	r0, #203	; 0xcb
 8009566:	f7f7 fead 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800956a:	2039      	movs	r0, #57	; 0x39
 800956c:	f7f7 fe80 	bl	8001270 <LCD_IO_WriteData>
 8009570:	202c      	movs	r0, #44	; 0x2c
 8009572:	f7f7 fe7d 	bl	8001270 <LCD_IO_WriteData>
 8009576:	2000      	movs	r0, #0
 8009578:	f7f7 fe7a 	bl	8001270 <LCD_IO_WriteData>
 800957c:	2034      	movs	r0, #52	; 0x34
 800957e:	f7f7 fe77 	bl	8001270 <LCD_IO_WriteData>
 8009582:	2002      	movs	r0, #2
 8009584:	f7f7 fe74 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009588:	20f7      	movs	r0, #247	; 0xf7
 800958a:	f7f7 fe9b 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800958e:	2020      	movs	r0, #32
 8009590:	f7f7 fe6e 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009594:	20ea      	movs	r0, #234	; 0xea
 8009596:	f7f7 fe95 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800959a:	2000      	movs	r0, #0
 800959c:	f7f7 fe68 	bl	8001270 <LCD_IO_WriteData>
 80095a0:	2000      	movs	r0, #0
 80095a2:	f7f7 fe65 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095a6:	20b1      	movs	r0, #177	; 0xb1
 80095a8:	f7f7 fe8c 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095ac:	2000      	movs	r0, #0
 80095ae:	f7f7 fe5f 	bl	8001270 <LCD_IO_WriteData>
 80095b2:	201b      	movs	r0, #27
 80095b4:	f7f7 fe5c 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095b8:	20b6      	movs	r0, #182	; 0xb6
 80095ba:	f7f7 fe83 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095be:	200a      	movs	r0, #10
 80095c0:	f7f7 fe56 	bl	8001270 <LCD_IO_WriteData>
 80095c4:	20a2      	movs	r0, #162	; 0xa2
 80095c6:	f7f7 fe53 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095ca:	20c0      	movs	r0, #192	; 0xc0
 80095cc:	f7f7 fe7a 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095d0:	2010      	movs	r0, #16
 80095d2:	f7f7 fe4d 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095d6:	20c1      	movs	r0, #193	; 0xc1
 80095d8:	f7f7 fe74 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095dc:	2010      	movs	r0, #16
 80095de:	f7f7 fe47 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095e2:	20c5      	movs	r0, #197	; 0xc5
 80095e4:	f7f7 fe6e 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095e8:	2045      	movs	r0, #69	; 0x45
 80095ea:	f7f7 fe41 	bl	8001270 <LCD_IO_WriteData>
 80095ee:	2015      	movs	r0, #21
 80095f0:	f7f7 fe3e 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095f4:	20c7      	movs	r0, #199	; 0xc7
 80095f6:	f7f7 fe65 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095fa:	2090      	movs	r0, #144	; 0x90
 80095fc:	f7f7 fe38 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009600:	2036      	movs	r0, #54	; 0x36
 8009602:	f7f7 fe5f 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009606:	20c8      	movs	r0, #200	; 0xc8
 8009608:	f7f7 fe32 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800960c:	20f2      	movs	r0, #242	; 0xf2
 800960e:	f7f7 fe59 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009612:	2000      	movs	r0, #0
 8009614:	f7f7 fe2c 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009618:	20b0      	movs	r0, #176	; 0xb0
 800961a:	f7f7 fe53 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800961e:	20c2      	movs	r0, #194	; 0xc2
 8009620:	f7f7 fe26 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009624:	20b6      	movs	r0, #182	; 0xb6
 8009626:	f7f7 fe4d 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800962a:	200a      	movs	r0, #10
 800962c:	f7f7 fe20 	bl	8001270 <LCD_IO_WriteData>
 8009630:	20a7      	movs	r0, #167	; 0xa7
 8009632:	f7f7 fe1d 	bl	8001270 <LCD_IO_WriteData>
 8009636:	2027      	movs	r0, #39	; 0x27
 8009638:	f7f7 fe1a 	bl	8001270 <LCD_IO_WriteData>
 800963c:	2004      	movs	r0, #4
 800963e:	f7f7 fe17 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009642:	202a      	movs	r0, #42	; 0x2a
 8009644:	f7f7 fe3e 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009648:	2000      	movs	r0, #0
 800964a:	f7f7 fe11 	bl	8001270 <LCD_IO_WriteData>
 800964e:	2000      	movs	r0, #0
 8009650:	f7f7 fe0e 	bl	8001270 <LCD_IO_WriteData>
 8009654:	2000      	movs	r0, #0
 8009656:	f7f7 fe0b 	bl	8001270 <LCD_IO_WriteData>
 800965a:	20ef      	movs	r0, #239	; 0xef
 800965c:	f7f7 fe08 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009660:	202b      	movs	r0, #43	; 0x2b
 8009662:	f7f7 fe2f 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009666:	2000      	movs	r0, #0
 8009668:	f7f7 fe02 	bl	8001270 <LCD_IO_WriteData>
 800966c:	2000      	movs	r0, #0
 800966e:	f7f7 fdff 	bl	8001270 <LCD_IO_WriteData>
 8009672:	2001      	movs	r0, #1
 8009674:	f7f7 fdfc 	bl	8001270 <LCD_IO_WriteData>
 8009678:	203f      	movs	r0, #63	; 0x3f
 800967a:	f7f7 fdf9 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800967e:	20f6      	movs	r0, #246	; 0xf6
 8009680:	f7f7 fe20 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009684:	2001      	movs	r0, #1
 8009686:	f7f7 fdf3 	bl	8001270 <LCD_IO_WriteData>
 800968a:	2000      	movs	r0, #0
 800968c:	f7f7 fdf0 	bl	8001270 <LCD_IO_WriteData>
 8009690:	2006      	movs	r0, #6
 8009692:	f7f7 fded 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009696:	202c      	movs	r0, #44	; 0x2c
 8009698:	f7f7 fe14 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800969c:	20c8      	movs	r0, #200	; 0xc8
 800969e:	f7f7 fe79 	bl	8001394 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80096a2:	2026      	movs	r0, #38	; 0x26
 80096a4:	f7f7 fe0e 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80096a8:	2001      	movs	r0, #1
 80096aa:	f7f7 fde1 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80096ae:	20e0      	movs	r0, #224	; 0xe0
 80096b0:	f7f7 fe08 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80096b4:	200f      	movs	r0, #15
 80096b6:	f7f7 fddb 	bl	8001270 <LCD_IO_WriteData>
 80096ba:	2029      	movs	r0, #41	; 0x29
 80096bc:	f7f7 fdd8 	bl	8001270 <LCD_IO_WriteData>
 80096c0:	2024      	movs	r0, #36	; 0x24
 80096c2:	f7f7 fdd5 	bl	8001270 <LCD_IO_WriteData>
 80096c6:	200c      	movs	r0, #12
 80096c8:	f7f7 fdd2 	bl	8001270 <LCD_IO_WriteData>
 80096cc:	200e      	movs	r0, #14
 80096ce:	f7f7 fdcf 	bl	8001270 <LCD_IO_WriteData>
 80096d2:	2009      	movs	r0, #9
 80096d4:	f7f7 fdcc 	bl	8001270 <LCD_IO_WriteData>
 80096d8:	204e      	movs	r0, #78	; 0x4e
 80096da:	f7f7 fdc9 	bl	8001270 <LCD_IO_WriteData>
 80096de:	2078      	movs	r0, #120	; 0x78
 80096e0:	f7f7 fdc6 	bl	8001270 <LCD_IO_WriteData>
 80096e4:	203c      	movs	r0, #60	; 0x3c
 80096e6:	f7f7 fdc3 	bl	8001270 <LCD_IO_WriteData>
 80096ea:	2009      	movs	r0, #9
 80096ec:	f7f7 fdc0 	bl	8001270 <LCD_IO_WriteData>
 80096f0:	2013      	movs	r0, #19
 80096f2:	f7f7 fdbd 	bl	8001270 <LCD_IO_WriteData>
 80096f6:	2005      	movs	r0, #5
 80096f8:	f7f7 fdba 	bl	8001270 <LCD_IO_WriteData>
 80096fc:	2017      	movs	r0, #23
 80096fe:	f7f7 fdb7 	bl	8001270 <LCD_IO_WriteData>
 8009702:	2011      	movs	r0, #17
 8009704:	f7f7 fdb4 	bl	8001270 <LCD_IO_WriteData>
 8009708:	2000      	movs	r0, #0
 800970a:	f7f7 fdb1 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800970e:	20e1      	movs	r0, #225	; 0xe1
 8009710:	f7f7 fdd8 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009714:	2000      	movs	r0, #0
 8009716:	f7f7 fdab 	bl	8001270 <LCD_IO_WriteData>
 800971a:	2016      	movs	r0, #22
 800971c:	f7f7 fda8 	bl	8001270 <LCD_IO_WriteData>
 8009720:	201b      	movs	r0, #27
 8009722:	f7f7 fda5 	bl	8001270 <LCD_IO_WriteData>
 8009726:	2004      	movs	r0, #4
 8009728:	f7f7 fda2 	bl	8001270 <LCD_IO_WriteData>
 800972c:	2011      	movs	r0, #17
 800972e:	f7f7 fd9f 	bl	8001270 <LCD_IO_WriteData>
 8009732:	2007      	movs	r0, #7
 8009734:	f7f7 fd9c 	bl	8001270 <LCD_IO_WriteData>
 8009738:	2031      	movs	r0, #49	; 0x31
 800973a:	f7f7 fd99 	bl	8001270 <LCD_IO_WriteData>
 800973e:	2033      	movs	r0, #51	; 0x33
 8009740:	f7f7 fd96 	bl	8001270 <LCD_IO_WriteData>
 8009744:	2042      	movs	r0, #66	; 0x42
 8009746:	f7f7 fd93 	bl	8001270 <LCD_IO_WriteData>
 800974a:	2005      	movs	r0, #5
 800974c:	f7f7 fd90 	bl	8001270 <LCD_IO_WriteData>
 8009750:	200c      	movs	r0, #12
 8009752:	f7f7 fd8d 	bl	8001270 <LCD_IO_WriteData>
 8009756:	200a      	movs	r0, #10
 8009758:	f7f7 fd8a 	bl	8001270 <LCD_IO_WriteData>
 800975c:	2028      	movs	r0, #40	; 0x28
 800975e:	f7f7 fd87 	bl	8001270 <LCD_IO_WriteData>
 8009762:	202f      	movs	r0, #47	; 0x2f
 8009764:	f7f7 fd84 	bl	8001270 <LCD_IO_WriteData>
 8009768:	200f      	movs	r0, #15
 800976a:	f7f7 fd81 	bl	8001270 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800976e:	2011      	movs	r0, #17
 8009770:	f7f7 fda8 	bl	80012c4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009774:	20c8      	movs	r0, #200	; 0xc8
 8009776:	f7f7 fe0d 	bl	8001394 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800977a:	2029      	movs	r0, #41	; 0x29
 800977c:	f7f7 fda2 	bl	80012c4 <LCD_IO_WriteReg>
}
 8009780:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8009784:	202c      	movs	r0, #44	; 0x2c
 8009786:	f7f7 bd9d 	b.w	80012c4 <LCD_IO_WriteReg>
 800978a:	bf00      	nop

0800978c <ili9341_ReadID>:
{
 800978c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800978e:	f7f7 fd5f 	bl	8001250 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8009792:	2103      	movs	r1, #3
 8009794:	20d3      	movs	r0, #211	; 0xd3
 8009796:	f7f7 fdbf 	bl	8001318 <LCD_IO_ReadData>
}
 800979a:	b280      	uxth	r0, r0
 800979c:	bd08      	pop	{r3, pc}
 800979e:	bf00      	nop

080097a0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80097a0:	221f      	movs	r2, #31
 80097a2:	210b      	movs	r1, #11
 80097a4:	b2c0      	uxtb	r0, r0
 80097a6:	f7f7 bd05 	b.w	80011b4 <IOE_Write>
 80097aa:	bf00      	nop

080097ac <stmpe811_Reset>:
{
 80097ac:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80097ae:	b2c4      	uxtb	r4, r0
 80097b0:	2202      	movs	r2, #2
 80097b2:	2103      	movs	r1, #3
 80097b4:	4620      	mov	r0, r4
 80097b6:	f7f7 fcfd 	bl	80011b4 <IOE_Write>
  IOE_Delay(10); 
 80097ba:	200a      	movs	r0, #10
 80097bc:	f7f7 fd46 	bl	800124c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80097c0:	4620      	mov	r0, r4
 80097c2:	2200      	movs	r2, #0
 80097c4:	2103      	movs	r1, #3
 80097c6:	f7f7 fcf5 	bl	80011b4 <IOE_Write>
}
 80097ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80097ce:	2002      	movs	r0, #2
 80097d0:	f7f7 bd3c 	b.w	800124c <IOE_Delay>

080097d4 <stmpe811_ReadID>:
{
 80097d4:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80097d6:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 80097d8:	f7f7 fce8 	bl	80011ac <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80097dc:	2100      	movs	r1, #0
 80097de:	4620      	mov	r0, r4
 80097e0:	f7f7 fd00 	bl	80011e4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80097e4:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80097e6:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80097e8:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80097ea:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 80097ec:	f7f7 fcfa 	bl	80011e4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80097f0:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 80097f4:	b280      	uxth	r0, r0
 80097f6:	bd10      	pop	{r4, pc}

080097f8 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 80097f8:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 80097fa:	b2c4      	uxtb	r4, r0
 80097fc:	2140      	movs	r1, #64	; 0x40
 80097fe:	4620      	mov	r0, r4
 8009800:	f7f7 fcf0 	bl	80011e4 <IOE_Read>
  
  if(state > 0)
 8009804:	0603      	lsls	r3, r0, #24
 8009806:	d40b      	bmi.n	8009820 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009808:	4620      	mov	r0, r4
 800980a:	2201      	movs	r2, #1
 800980c:	214b      	movs	r1, #75	; 0x4b
 800980e:	f7f7 fcd1 	bl	80011b4 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009812:	4620      	mov	r0, r4
 8009814:	2200      	movs	r2, #0
 8009816:	214b      	movs	r1, #75	; 0x4b
 8009818:	f7f7 fccc 	bl	80011b4 <IOE_Write>
  uint8_t ret = 0;
 800981c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800981e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009820:	214c      	movs	r1, #76	; 0x4c
 8009822:	4620      	mov	r0, r4
 8009824:	f7f7 fcde 	bl	80011e4 <IOE_Read>
      ret = 1;
 8009828:	3800      	subs	r0, #0
 800982a:	bf18      	it	ne
 800982c:	2001      	movne	r0, #1
}
 800982e:	bd10      	pop	{r4, pc}

08009830 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009830:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009832:	210b      	movs	r1, #11
 8009834:	b2c0      	uxtb	r0, r0
 8009836:	f7f7 fcd5 	bl	80011e4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800983a:	f000 001f 	and.w	r0, r0, #31
 800983e:	bd08      	pop	{r3, pc}

08009840 <stmpe811_TS_GetXY>:
{
 8009840:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009842:	2304      	movs	r3, #4
{
 8009844:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009846:	b2c4      	uxtb	r4, r0
{
 8009848:	4615      	mov	r5, r2
 800984a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800984c:	eb0d 0203 	add.w	r2, sp, r3
 8009850:	21d7      	movs	r1, #215	; 0xd7
 8009852:	4620      	mov	r0, r4
 8009854:	f7f7 fce2 	bl	800121c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009858:	9b01      	ldr	r3, [sp, #4]
 800985a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800985c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800985e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009862:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009864:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009866:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009868:	2201      	movs	r2, #1
 800986a:	214b      	movs	r1, #75	; 0x4b
 800986c:	f7f7 fca2 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009870:	2200      	movs	r2, #0
 8009872:	214b      	movs	r1, #75	; 0x4b
 8009874:	4620      	mov	r0, r4
 8009876:	f7f7 fc9d 	bl	80011b4 <IOE_Write>
}
 800987a:	b002      	add	sp, #8
 800987c:	bd70      	pop	{r4, r5, r6, pc}
 800987e:	bf00      	nop

08009880 <stmpe811_TS_Start>:
{
 8009880:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009882:	b2c4      	uxtb	r4, r0
 8009884:	2104      	movs	r1, #4
 8009886:	4620      	mov	r0, r4
 8009888:	f7f7 fcac 	bl	80011e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800988c:	2104      	movs	r1, #4
 800988e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8009892:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009894:	4620      	mov	r0, r4
 8009896:	f7f7 fc8d 	bl	80011b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 800989a:	2117      	movs	r1, #23
 800989c:	4620      	mov	r0, r4
 800989e:	f7f7 fca1 	bl	80011e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80098a2:	2117      	movs	r1, #23
 80098a4:	f000 020f 	and.w	r2, r0, #15
 80098a8:	4620      	mov	r0, r4
 80098aa:	f7f7 fc83 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80098ae:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80098b2:	4620      	mov	r0, r4
 80098b4:	2104      	movs	r1, #4
 80098b6:	f7f7 fc7d 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80098ba:	2249      	movs	r2, #73	; 0x49
 80098bc:	2120      	movs	r1, #32
 80098be:	4620      	mov	r0, r4
 80098c0:	f7f7 fc78 	bl	80011b4 <IOE_Write>
  IOE_Delay(2); 
 80098c4:	2002      	movs	r0, #2
 80098c6:	f7f7 fcc1 	bl	800124c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80098ca:	4620      	mov	r0, r4
 80098cc:	2201      	movs	r2, #1
 80098ce:	2121      	movs	r1, #33	; 0x21
 80098d0:	f7f7 fc70 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80098d4:	4620      	mov	r0, r4
 80098d6:	229a      	movs	r2, #154	; 0x9a
 80098d8:	2141      	movs	r1, #65	; 0x41
 80098da:	f7f7 fc6b 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80098de:	4620      	mov	r0, r4
 80098e0:	2201      	movs	r2, #1
 80098e2:	214a      	movs	r1, #74	; 0x4a
 80098e4:	f7f7 fc66 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80098e8:	4620      	mov	r0, r4
 80098ea:	2201      	movs	r2, #1
 80098ec:	214b      	movs	r1, #75	; 0x4b
 80098ee:	f7f7 fc61 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80098f2:	4620      	mov	r0, r4
 80098f4:	2200      	movs	r2, #0
 80098f6:	214b      	movs	r1, #75	; 0x4b
 80098f8:	f7f7 fc5c 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80098fc:	4620      	mov	r0, r4
 80098fe:	2201      	movs	r2, #1
 8009900:	2156      	movs	r1, #86	; 0x56
 8009902:	f7f7 fc57 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009906:	4620      	mov	r0, r4
 8009908:	2201      	movs	r2, #1
 800990a:	2158      	movs	r1, #88	; 0x58
 800990c:	f7f7 fc52 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009910:	4620      	mov	r0, r4
 8009912:	2201      	movs	r2, #1
 8009914:	2140      	movs	r1, #64	; 0x40
 8009916:	f7f7 fc4d 	bl	80011b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800991a:	4620      	mov	r0, r4
 800991c:	22ff      	movs	r2, #255	; 0xff
 800991e:	210b      	movs	r1, #11
 8009920:	f7f7 fc48 	bl	80011b4 <IOE_Write>
}
 8009924:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009928:	2002      	movs	r0, #2
 800992a:	f7f7 bc8f 	b.w	800124c <IOE_Delay>
 800992e:	bf00      	nop

08009930 <stmpe811_TS_DisableIT>:
{
 8009930:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009932:	b2c4      	uxtb	r4, r0
 8009934:	2109      	movs	r1, #9
 8009936:	4620      	mov	r0, r4
 8009938:	f7f7 fc54 	bl	80011e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800993c:	2109      	movs	r1, #9
 800993e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009942:	4620      	mov	r0, r4
 8009944:	f7f7 fc36 	bl	80011b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009948:	210a      	movs	r1, #10
 800994a:	4620      	mov	r0, r4
 800994c:	f7f7 fc4a 	bl	80011e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009950:	210a      	movs	r1, #10
 8009952:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009956:	4620      	mov	r0, r4
}
 8009958:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800995c:	f7f7 bc2a 	b.w	80011b4 <IOE_Write>

08009960 <stmpe811_TS_EnableIT>:
{
 8009960:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009962:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009964:	f7f7 fc24 	bl	80011b0 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009968:	210a      	movs	r1, #10
 800996a:	4620      	mov	r0, r4
 800996c:	f7f7 fc3a 	bl	80011e4 <IOE_Read>
  tmp |= Source; 
 8009970:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009974:	b2c2      	uxtb	r2, r0
 8009976:	210a      	movs	r1, #10
 8009978:	4620      	mov	r0, r4
 800997a:	f7f7 fc1b 	bl	80011b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800997e:	2109      	movs	r1, #9
 8009980:	4620      	mov	r0, r4
 8009982:	f7f7 fc2f 	bl	80011e4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8009986:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800998a:	b2c2      	uxtb	r2, r0
 800998c:	2109      	movs	r1, #9
 800998e:	4620      	mov	r0, r4
}
 8009990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009994:	f7f7 bc0e 	b.w	80011b4 <IOE_Write>

08009998 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009998:	4a10      	ldr	r2, [pc, #64]	; (80099dc <stmpe811_Init+0x44>)
 800999a:	7813      	ldrb	r3, [r2, #0]
 800999c:	4298      	cmp	r0, r3
 800999e:	d004      	beq.n	80099aa <stmpe811_Init+0x12>
 80099a0:	7851      	ldrb	r1, [r2, #1]
 80099a2:	4288      	cmp	r0, r1
 80099a4:	d001      	beq.n	80099aa <stmpe811_Init+0x12>
 80099a6:	b113      	cbz	r3, 80099ae <stmpe811_Init+0x16>
 80099a8:	b101      	cbz	r1, 80099ac <stmpe811_Init+0x14>
 80099aa:	4770      	bx	lr
 80099ac:	2301      	movs	r3, #1
{
 80099ae:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80099b0:	b2c4      	uxtb	r4, r0
 80099b2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80099b4:	f7f7 fbfa 	bl	80011ac <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80099b8:	2202      	movs	r2, #2
 80099ba:	2103      	movs	r1, #3
 80099bc:	4620      	mov	r0, r4
 80099be:	f7f7 fbf9 	bl	80011b4 <IOE_Write>
  IOE_Delay(10); 
 80099c2:	200a      	movs	r0, #10
 80099c4:	f7f7 fc42 	bl	800124c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80099c8:	4620      	mov	r0, r4
 80099ca:	2200      	movs	r2, #0
 80099cc:	2103      	movs	r1, #3
 80099ce:	f7f7 fbf1 	bl	80011b4 <IOE_Write>
}
 80099d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80099d6:	2002      	movs	r0, #2
 80099d8:	f7f7 bc38 	b.w	800124c <IOE_Delay>
 80099dc:	20002a1c 	.word	0x20002a1c

080099e0 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80099e0:	4b05      	ldr	r3, [pc, #20]	; (80099f8 <SystemInit+0x18>)
 80099e2:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80099e6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80099ea:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80099ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80099f2:	6099      	str	r1, [r3, #8]
#endif
}
 80099f4:	4770      	bx	lr
 80099f6:	bf00      	nop
 80099f8:	e000ed00 	.word	0xe000ed00

080099fc <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80099fc:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80099fe:	4b0b      	ldr	r3, [pc, #44]	; (8009a2c <HAL_Init+0x30>)
 8009a00:	681a      	ldr	r2, [r3, #0]
 8009a02:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009a06:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009a08:	681a      	ldr	r2, [r3, #0]
 8009a0a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009a0e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009a10:	681a      	ldr	r2, [r3, #0]
 8009a12:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009a16:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009a18:	2003      	movs	r0, #3
 8009a1a:	f000 f82d 	bl	8009a78 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009a1e:	2000      	movs	r0, #0
 8009a20:	f7f8 f8ea 	bl	8001bf8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009a24:	f7f7 fe0a 	bl	800163c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009a28:	2000      	movs	r0, #0
 8009a2a:	bd08      	pop	{r3, pc}
 8009a2c:	40023c00 	.word	0x40023c00

08009a30 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009a30:	4a03      	ldr	r2, [pc, #12]	; (8009a40 <HAL_IncTick+0x10>)
 8009a32:	4b04      	ldr	r3, [pc, #16]	; (8009a44 <HAL_IncTick+0x14>)
 8009a34:	6811      	ldr	r1, [r2, #0]
 8009a36:	781b      	ldrb	r3, [r3, #0]
 8009a38:	440b      	add	r3, r1
 8009a3a:	6013      	str	r3, [r2, #0]
}
 8009a3c:	4770      	bx	lr
 8009a3e:	bf00      	nop
 8009a40:	20002a20 	.word	0x20002a20
 8009a44:	20000080 	.word	0x20000080

08009a48 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009a48:	4b01      	ldr	r3, [pc, #4]	; (8009a50 <HAL_GetTick+0x8>)
 8009a4a:	6818      	ldr	r0, [r3, #0]
}
 8009a4c:	4770      	bx	lr
 8009a4e:	bf00      	nop
 8009a50:	20002a20 	.word	0x20002a20

08009a54 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009a54:	b538      	push	{r3, r4, r5, lr}
 8009a56:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009a58:	f7ff fff6 	bl	8009a48 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009a5c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 8009a5e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009a60:	d002      	beq.n	8009a68 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009a62:	4b04      	ldr	r3, [pc, #16]	; (8009a74 <HAL_Delay+0x20>)
 8009a64:	781b      	ldrb	r3, [r3, #0]
 8009a66:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009a68:	f7ff ffee 	bl	8009a48 <HAL_GetTick>
 8009a6c:	1b43      	subs	r3, r0, r5
 8009a6e:	42a3      	cmp	r3, r4
 8009a70:	d3fa      	bcc.n	8009a68 <HAL_Delay+0x14>
  {
  }
}
 8009a72:	bd38      	pop	{r3, r4, r5, pc}
 8009a74:	20000080 	.word	0x20000080

08009a78 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009a78:	4907      	ldr	r1, [pc, #28]	; (8009a98 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009a7a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009a7c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009a7e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009a82:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009a86:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009a88:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009a8a:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009a8e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009a92:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009a94:	4770      	bx	lr
 8009a96:	bf00      	nop
 8009a98:	e000ed00 	.word	0xe000ed00

08009a9c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009a9c:	4b1c      	ldr	r3, [pc, #112]	; (8009b10 <HAL_NVIC_SetPriority+0x74>)
 8009a9e:	68db      	ldr	r3, [r3, #12]
 8009aa0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009aa4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009aa6:	f1c3 0e07 	rsb	lr, r3, #7
 8009aaa:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009aae:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009ab2:	bf28      	it	cs
 8009ab4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009ab8:	f1bc 0f06 	cmp.w	ip, #6
 8009abc:	d91b      	bls.n	8009af6 <HAL_NVIC_SetPriority+0x5a>
 8009abe:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009ac0:	f04f 3cff 	mov.w	ip, #4294967295
 8009ac4:	fa0c fc03 	lsl.w	ip, ip, r3
 8009ac8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009acc:	f04f 3cff 	mov.w	ip, #4294967295
 8009ad0:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009ad4:	ea21 010c 	bic.w	r1, r1, ip
 8009ad8:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009ada:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009adc:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009ae0:	db0c      	blt.n	8009afc <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009ae2:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009ae6:	0109      	lsls	r1, r1, #4
 8009ae8:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009aec:	b2c9      	uxtb	r1, r1
 8009aee:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009af2:	f85d fb04 	ldr.w	pc, [sp], #4
 8009af6:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009af8:	4613      	mov	r3, r2
 8009afa:	e7e7      	b.n	8009acc <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009afc:	4b05      	ldr	r3, [pc, #20]	; (8009b14 <HAL_NVIC_SetPriority+0x78>)
 8009afe:	f000 000f 	and.w	r0, r0, #15
 8009b02:	0109      	lsls	r1, r1, #4
 8009b04:	4403      	add	r3, r0
 8009b06:	b2c9      	uxtb	r1, r1
 8009b08:	7619      	strb	r1, [r3, #24]
 8009b0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009b0e:	bf00      	nop
 8009b10:	e000ed00 	.word	0xe000ed00
 8009b14:	e000ecfc 	.word	0xe000ecfc

08009b18 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009b18:	2800      	cmp	r0, #0
 8009b1a:	db07      	blt.n	8009b2c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009b1c:	0941      	lsrs	r1, r0, #5
 8009b1e:	4a04      	ldr	r2, [pc, #16]	; (8009b30 <HAL_NVIC_EnableIRQ+0x18>)
 8009b20:	f000 001f 	and.w	r0, r0, #31
 8009b24:	2301      	movs	r3, #1
 8009b26:	4083      	lsls	r3, r0
 8009b28:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009b2c:	4770      	bx	lr
 8009b2e:	bf00      	nop
 8009b30:	e000e100 	.word	0xe000e100

08009b34 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009b34:	b180      	cbz	r0, 8009b58 <HAL_CRC_Init+0x24>
{
 8009b36:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009b38:	7943      	ldrb	r3, [r0, #5]
 8009b3a:	4604      	mov	r4, r0
 8009b3c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009b40:	b11b      	cbz	r3, 8009b4a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009b42:	2301      	movs	r3, #1
 8009b44:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009b46:	2000      	movs	r0, #0
}
 8009b48:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009b4a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009b4c:	f7f7 fd96 	bl	800167c <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009b50:	2301      	movs	r3, #1
 8009b52:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009b54:	2000      	movs	r0, #0
}
 8009b56:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009b58:	2001      	movs	r0, #1
}
 8009b5a:	4770      	bx	lr

08009b5c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009b5c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009b60:	2b02      	cmp	r3, #2
 8009b62:	d003      	beq.n	8009b6c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009b64:	2380      	movs	r3, #128	; 0x80
 8009b66:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009b68:	2001      	movs	r0, #1
 8009b6a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009b6c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009b6e:	2305      	movs	r3, #5
 8009b70:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009b74:	6813      	ldr	r3, [r2, #0]
 8009b76:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009b7a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009b7c:	6013      	str	r3, [r2, #0]
}
 8009b7e:	4770      	bx	lr

08009b80 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009b80:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009b84:	4770      	bx	lr
 8009b86:	bf00      	nop

08009b88 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8009b88:	4b21      	ldr	r3, [pc, #132]	; (8009c10 <FLASH_SetErrorCode+0x88>)
 8009b8a:	68da      	ldr	r2, [r3, #12]
 8009b8c:	06d0      	lsls	r0, r2, #27
 8009b8e:	d505      	bpl.n	8009b9c <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009b90:	4920      	ldr	r1, [pc, #128]	; (8009c14 <FLASH_SetErrorCode+0x8c>)
 8009b92:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009b94:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009b96:	4302      	orrs	r2, r0
 8009b98:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009b9a:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009b9c:	4b1c      	ldr	r3, [pc, #112]	; (8009c10 <FLASH_SetErrorCode+0x88>)
 8009b9e:	68da      	ldr	r2, [r3, #12]
 8009ba0:	0691      	lsls	r1, r2, #26
 8009ba2:	d506      	bpl.n	8009bb2 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ba4:	491b      	ldr	r1, [pc, #108]	; (8009c14 <FLASH_SetErrorCode+0x8c>)
 8009ba6:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ba8:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009baa:	f042 0208 	orr.w	r2, r2, #8
 8009bae:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009bb0:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009bb2:	4b17      	ldr	r3, [pc, #92]	; (8009c10 <FLASH_SetErrorCode+0x88>)
 8009bb4:	68da      	ldr	r2, [r3, #12]
 8009bb6:	0652      	lsls	r2, r2, #25
 8009bb8:	d506      	bpl.n	8009bc8 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009bba:	4916      	ldr	r1, [pc, #88]	; (8009c14 <FLASH_SetErrorCode+0x8c>)
 8009bbc:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009bbe:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009bc0:	f042 0204 	orr.w	r2, r2, #4
 8009bc4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009bc6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009bc8:	4b11      	ldr	r3, [pc, #68]	; (8009c10 <FLASH_SetErrorCode+0x88>)
 8009bca:	68da      	ldr	r2, [r3, #12]
 8009bcc:	0610      	lsls	r0, r2, #24
 8009bce:	d506      	bpl.n	8009bde <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009bd0:	4910      	ldr	r1, [pc, #64]	; (8009c14 <FLASH_SetErrorCode+0x8c>)
 8009bd2:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009bd4:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009bd6:	f042 0202 	orr.w	r2, r2, #2
 8009bda:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009bdc:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009bde:	4b0c      	ldr	r3, [pc, #48]	; (8009c10 <FLASH_SetErrorCode+0x88>)
 8009be0:	68da      	ldr	r2, [r3, #12]
 8009be2:	05d1      	lsls	r1, r2, #23
 8009be4:	d507      	bpl.n	8009bf6 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009be6:	490b      	ldr	r1, [pc, #44]	; (8009c14 <FLASH_SetErrorCode+0x8c>)
 8009be8:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009bea:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009bee:	f042 0201 	orr.w	r2, r2, #1
 8009bf2:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009bf4:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009bf6:	4b06      	ldr	r3, [pc, #24]	; (8009c10 <FLASH_SetErrorCode+0x88>)
 8009bf8:	68da      	ldr	r2, [r3, #12]
 8009bfa:	0792      	lsls	r2, r2, #30
 8009bfc:	d506      	bpl.n	8009c0c <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009bfe:	4905      	ldr	r1, [pc, #20]	; (8009c14 <FLASH_SetErrorCode+0x8c>)
 8009c00:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009c02:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009c04:	f042 0220 	orr.w	r2, r2, #32
 8009c08:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009c0a:	60d8      	str	r0, [r3, #12]
  }
}
 8009c0c:	4770      	bx	lr
 8009c0e:	bf00      	nop
 8009c10:	40023c00 	.word	0x40023c00
 8009c14:	20002a24 	.word	0x20002a24

08009c18 <HAL_FLASH_Program>:
{
 8009c18:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009c1c:	4f4d      	ldr	r7, [pc, #308]	; (8009d54 <HAL_FLASH_Program+0x13c>)
{
 8009c1e:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009c20:	7e3b      	ldrb	r3, [r7, #24]
 8009c22:	2b01      	cmp	r3, #1
 8009c24:	d060      	beq.n	8009ce8 <HAL_FLASH_Program+0xd0>
 8009c26:	2301      	movs	r3, #1
 8009c28:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009c2a:	2300      	movs	r3, #0
 8009c2c:	4681      	mov	r9, r0
 8009c2e:	468a      	mov	sl, r1
 8009c30:	4690      	mov	r8, r2
 8009c32:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009c34:	f7ff ff08 	bl	8009a48 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009c38:	4d47      	ldr	r5, [pc, #284]	; (8009d58 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009c3a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009c3c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009c40:	e004      	b.n	8009c4c <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009c42:	f7ff ff01 	bl	8009a48 <HAL_GetTick>
 8009c46:	1b00      	subs	r0, r0, r4
 8009c48:	42b0      	cmp	r0, r6
 8009c4a:	d848      	bhi.n	8009cde <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009c4c:	68eb      	ldr	r3, [r5, #12]
 8009c4e:	03d8      	lsls	r0, r3, #15
 8009c50:	d4f7      	bmi.n	8009c42 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009c52:	68eb      	ldr	r3, [r5, #12]
 8009c54:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009c56:	bf44      	itt	mi
 8009c58:	2301      	movmi	r3, #1
 8009c5a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009c5c:	4b3e      	ldr	r3, [pc, #248]	; (8009d58 <HAL_FLASH_Program+0x140>)
 8009c5e:	68da      	ldr	r2, [r3, #12]
 8009c60:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009c64:	d154      	bne.n	8009d10 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009c66:	f1b9 0f00 	cmp.w	r9, #0
 8009c6a:	d040      	beq.n	8009cee <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009c6c:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c70:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009c72:	d051      	beq.n	8009d18 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c74:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c78:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009c7a:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009c7e:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009c80:	d05e      	beq.n	8009d40 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009c82:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009c86:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c88:	691a      	ldr	r2, [r3, #16]
 8009c8a:	f042 0201 	orr.w	r2, r2, #1
 8009c8e:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009c90:	f8ca 8000 	str.w	r8, [sl]
 8009c94:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009c98:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009c9c:	2300      	movs	r3, #0
 8009c9e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009ca0:	f7ff fed2 	bl	8009a48 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009ca4:	4d2c      	ldr	r5, [pc, #176]	; (8009d58 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009ca6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009ca8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cac:	e004      	b.n	8009cb8 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009cae:	f7ff fecb 	bl	8009a48 <HAL_GetTick>
 8009cb2:	1b00      	subs	r0, r0, r4
 8009cb4:	42b0      	cmp	r0, r6
 8009cb6:	d829      	bhi.n	8009d0c <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cb8:	68eb      	ldr	r3, [r5, #12]
 8009cba:	03da      	lsls	r2, r3, #15
 8009cbc:	d4f7      	bmi.n	8009cae <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009cbe:	68eb      	ldr	r3, [r5, #12]
 8009cc0:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009cc2:	bf44      	itt	mi
 8009cc4:	2301      	movmi	r3, #1
 8009cc6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009cc8:	4b23      	ldr	r3, [pc, #140]	; (8009d58 <HAL_FLASH_Program+0x140>)
 8009cca:	68d8      	ldr	r0, [r3, #12]
 8009ccc:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009cd0:	d132      	bne.n	8009d38 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009cd2:	4a21      	ldr	r2, [pc, #132]	; (8009d58 <HAL_FLASH_Program+0x140>)
 8009cd4:	6913      	ldr	r3, [r2, #16]
 8009cd6:	f023 0301 	bic.w	r3, r3, #1
 8009cda:	6113      	str	r3, [r2, #16]
 8009cdc:	e000      	b.n	8009ce0 <HAL_FLASH_Program+0xc8>
 8009cde:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009ce0:	2300      	movs	r3, #0
 8009ce2:	763b      	strb	r3, [r7, #24]
}
 8009ce4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009ce8:	2002      	movs	r0, #2
}
 8009cea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009cee:	691a      	ldr	r2, [r3, #16]
 8009cf0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009cf4:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009cf6:	691a      	ldr	r2, [r3, #16]
 8009cf8:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009cfa:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009cfc:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009d00:	f042 0201 	orr.w	r2, r2, #1
 8009d04:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009d06:	f88a 8000 	strb.w	r8, [sl]
}
 8009d0a:	e7c7      	b.n	8009c9c <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009d0c:	2003      	movs	r0, #3
 8009d0e:	e7e0      	b.n	8009cd2 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009d10:	f7ff ff3a 	bl	8009b88 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009d14:	2001      	movs	r0, #1
 8009d16:	e7e3      	b.n	8009ce0 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009d18:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009d1c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009d1e:	691a      	ldr	r2, [r3, #16]
 8009d20:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009d24:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009d26:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009d28:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009d2c:	f042 0201 	orr.w	r2, r2, #1
 8009d30:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009d32:	f8aa 8000 	strh.w	r8, [sl]
}
 8009d36:	e7b1      	b.n	8009c9c <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009d38:	f7ff ff26 	bl	8009b88 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009d3c:	2001      	movs	r0, #1
 8009d3e:	e7c8      	b.n	8009cd2 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009d40:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d44:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009d46:	691a      	ldr	r2, [r3, #16]
 8009d48:	f042 0201 	orr.w	r2, r2, #1
 8009d4c:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009d4e:	f8ca 8000 	str.w	r8, [sl]
}
 8009d52:	e7a3      	b.n	8009c9c <HAL_FLASH_Program+0x84>
 8009d54:	20002a24 	.word	0x20002a24
 8009d58:	40023c00 	.word	0x40023c00

08009d5c <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009d5c:	4b06      	ldr	r3, [pc, #24]	; (8009d78 <HAL_FLASH_Unlock+0x1c>)
 8009d5e:	691a      	ldr	r2, [r3, #16]
 8009d60:	2a00      	cmp	r2, #0
 8009d62:	db01      	blt.n	8009d68 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009d64:	2000      	movs	r0, #0
}
 8009d66:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009d68:	4904      	ldr	r1, [pc, #16]	; (8009d7c <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009d6a:	4a05      	ldr	r2, [pc, #20]	; (8009d80 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009d6c:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009d6e:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009d70:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009d72:	0fc0      	lsrs	r0, r0, #31
 8009d74:	4770      	bx	lr
 8009d76:	bf00      	nop
 8009d78:	40023c00 	.word	0x40023c00
 8009d7c:	45670123 	.word	0x45670123
 8009d80:	cdef89ab 	.word	0xcdef89ab

08009d84 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009d84:	4a03      	ldr	r2, [pc, #12]	; (8009d94 <HAL_FLASH_Lock+0x10>)
 8009d86:	6913      	ldr	r3, [r2, #16]
 8009d88:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009d8c:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009d8e:	6113      	str	r3, [r2, #16]
}
 8009d90:	4770      	bx	lr
 8009d92:	bf00      	nop
 8009d94:	40023c00 	.word	0x40023c00

08009d98 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009d98:	4b01      	ldr	r3, [pc, #4]	; (8009da0 <HAL_FLASH_GetError+0x8>)
 8009d9a:	69d8      	ldr	r0, [r3, #28]
}  
 8009d9c:	4770      	bx	lr
 8009d9e:	bf00      	nop
 8009da0:	20002a24 	.word	0x20002a24

08009da4 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009da4:	4b14      	ldr	r3, [pc, #80]	; (8009df8 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009da6:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009da8:	2200      	movs	r2, #0
{ 
 8009daa:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009dac:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009dae:	f7ff fe4b 	bl	8009a48 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009db2:	4e12      	ldr	r6, [pc, #72]	; (8009dfc <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009db4:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009db6:	1c63      	adds	r3, r4, #1
 8009db8:	d10f      	bne.n	8009dda <FLASH_WaitForLastOperation+0x36>
 8009dba:	4a10      	ldr	r2, [pc, #64]	; (8009dfc <FLASH_WaitForLastOperation+0x58>)
 8009dbc:	68d3      	ldr	r3, [r2, #12]
 8009dbe:	03d8      	lsls	r0, r3, #15
 8009dc0:	d4fc      	bmi.n	8009dbc <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009dc2:	4b0e      	ldr	r3, [pc, #56]	; (8009dfc <FLASH_WaitForLastOperation+0x58>)
 8009dc4:	68da      	ldr	r2, [r3, #12]
 8009dc6:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009dc8:	bf44      	itt	mi
 8009dca:	2201      	movmi	r2, #1
 8009dcc:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009dce:	4b0b      	ldr	r3, [pc, #44]	; (8009dfc <FLASH_WaitForLastOperation+0x58>)
 8009dd0:	68d8      	ldr	r0, [r3, #12]
 8009dd2:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009dd6:	d10b      	bne.n	8009df0 <FLASH_WaitForLastOperation+0x4c>
}  
 8009dd8:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009dda:	68f3      	ldr	r3, [r6, #12]
 8009ddc:	03d9      	lsls	r1, r3, #15
 8009dde:	d5f0      	bpl.n	8009dc2 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009de0:	b124      	cbz	r4, 8009dec <FLASH_WaitForLastOperation+0x48>
 8009de2:	f7ff fe31 	bl	8009a48 <HAL_GetTick>
 8009de6:	1b40      	subs	r0, r0, r5
 8009de8:	42a0      	cmp	r0, r4
 8009dea:	d9e4      	bls.n	8009db6 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009dec:	2003      	movs	r0, #3
}  
 8009dee:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009df0:	f7ff feca 	bl	8009b88 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009df4:	2001      	movs	r0, #1
}  
 8009df6:	bd70      	pop	{r4, r5, r6, pc}
 8009df8:	20002a24 	.word	0x20002a24
 8009dfc:	40023c00 	.word	0x40023c00

08009e00 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009e00:	4b14      	ldr	r3, [pc, #80]	; (8009e54 <FLASH_FlushCaches+0x54>)
 8009e02:	681a      	ldr	r2, [r3, #0]
 8009e04:	0591      	lsls	r1, r2, #22
 8009e06:	d50f      	bpl.n	8009e28 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009e08:	681a      	ldr	r2, [r3, #0]
 8009e0a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009e0e:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009e10:	681a      	ldr	r2, [r3, #0]
 8009e12:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009e16:	601a      	str	r2, [r3, #0]
 8009e18:	681a      	ldr	r2, [r3, #0]
 8009e1a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009e1e:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009e20:	681a      	ldr	r2, [r3, #0]
 8009e22:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e26:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009e28:	4b0a      	ldr	r3, [pc, #40]	; (8009e54 <FLASH_FlushCaches+0x54>)
 8009e2a:	681a      	ldr	r2, [r3, #0]
 8009e2c:	0552      	lsls	r2, r2, #21
 8009e2e:	d50f      	bpl.n	8009e50 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009e30:	681a      	ldr	r2, [r3, #0]
 8009e32:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009e36:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009e38:	681a      	ldr	r2, [r3, #0]
 8009e3a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009e3e:	601a      	str	r2, [r3, #0]
 8009e40:	681a      	ldr	r2, [r3, #0]
 8009e42:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009e46:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009e48:	681a      	ldr	r2, [r3, #0]
 8009e4a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009e4e:	601a      	str	r2, [r3, #0]
  }
}
 8009e50:	4770      	bx	lr
 8009e52:	bf00      	nop
 8009e54:	40023c00 	.word	0x40023c00

08009e58 <HAL_FLASHEx_Erase>:
{
 8009e58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009e5c:	4f44      	ldr	r7, [pc, #272]	; (8009f70 <HAL_FLASHEx_Erase+0x118>)
 8009e5e:	7e3b      	ldrb	r3, [r7, #24]
 8009e60:	2b01      	cmp	r3, #1
 8009e62:	d053      	beq.n	8009f0c <HAL_FLASHEx_Erase+0xb4>
 8009e64:	2301      	movs	r3, #1
 8009e66:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e68:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e6c:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009e6e:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e70:	f7ff ff98 	bl	8009da4 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009e74:	4606      	mov	r6, r0
 8009e76:	2800      	cmp	r0, #0
 8009e78:	d143      	bne.n	8009f02 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009e7a:	f04f 33ff 	mov.w	r3, #4294967295
 8009e7e:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009e82:	f8d9 3000 	ldr.w	r3, [r9]
 8009e86:	2b01      	cmp	r3, #1
 8009e88:	d044      	beq.n	8009f14 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009e8a:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009e8e:	442b      	add	r3, r5
 8009e90:	429d      	cmp	r5, r3
 8009e92:	d234      	bcs.n	8009efe <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e94:	4c37      	ldr	r4, [pc, #220]	; (8009f74 <HAL_FLASHEx_Erase+0x11c>)
 8009e96:	e005      	b.n	8009ea4 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009e98:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009e9c:	3501      	adds	r5, #1
 8009e9e:	4413      	add	r3, r2
 8009ea0:	42ab      	cmp	r3, r5
 8009ea2:	d92c      	bls.n	8009efe <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009ea4:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009ea8:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009eaa:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009eae:	bf98      	it	ls
 8009eb0:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009eb2:	6923      	ldr	r3, [r4, #16]
 8009eb4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009eb8:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009eba:	6923      	ldr	r3, [r4, #16]
 8009ebc:	430b      	orrs	r3, r1
 8009ebe:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009ec0:	6923      	ldr	r3, [r4, #16]
 8009ec2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009ec6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009ec8:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009eca:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009ecc:	bf8c      	ite	hi
 8009ece:	1d2a      	addhi	r2, r5, #4
 8009ed0:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009ed2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009ed6:	f043 0302 	orr.w	r3, r3, #2
 8009eda:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009edc:	6923      	ldr	r3, [r4, #16]
 8009ede:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009ee2:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009ee4:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009ee8:	f7ff ff5c 	bl	8009da4 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009eec:	6923      	ldr	r3, [r4, #16]
 8009eee:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009ef2:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009ef4:	2800      	cmp	r0, #0
 8009ef6:	d0cf      	beq.n	8009e98 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009ef8:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009efc:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009efe:	f7ff ff7f 	bl	8009e00 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009f02:	2300      	movs	r3, #0
 8009f04:	763b      	strb	r3, [r7, #24]
}
 8009f06:	4630      	mov	r0, r6
 8009f08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009f0c:	2602      	movs	r6, #2
}
 8009f0e:	4630      	mov	r0, r6
 8009f10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009f14:	4a17      	ldr	r2, [pc, #92]	; (8009f74 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009f16:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009f1a:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009f1c:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009f20:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009f24:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009f26:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009f28:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009f2a:	d01a      	beq.n	8009f62 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009f2c:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009f2e:	bf0c      	ite	eq
 8009f30:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009f34:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009f38:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009f3a:	4c0e      	ldr	r4, [pc, #56]	; (8009f74 <HAL_FLASHEx_Erase+0x11c>)
 8009f3c:	021b      	lsls	r3, r3, #8
 8009f3e:	6922      	ldr	r2, [r4, #16]
 8009f40:	b29b      	uxth	r3, r3
 8009f42:	4313      	orrs	r3, r2
 8009f44:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009f48:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009f4a:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009f4e:	f7ff ff29 	bl	8009da4 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009f52:	6923      	ldr	r3, [r4, #16]
 8009f54:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009f58:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009f5c:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009f5e:	6123      	str	r3, [r4, #16]
 8009f60:	e7cd      	b.n	8009efe <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009f62:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009f66:	f041 0104 	orr.w	r1, r1, #4
 8009f6a:	6111      	str	r1, [r2, #16]
 8009f6c:	e7e5      	b.n	8009f3a <HAL_FLASHEx_Erase+0xe2>
 8009f6e:	bf00      	nop
 8009f70:	20002a24 	.word	0x20002a24
 8009f74:	40023c00 	.word	0x40023c00

08009f78 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009f7c:	2200      	movs	r2, #0
 8009f7e:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009f80:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a1e4 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009f84:	4e90      	ldr	r6, [pc, #576]	; (800a1c8 <HAL_GPIO_Init+0x250>)
{
 8009f86:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009f88:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009f8a:	4689      	mov	r9, r1
 8009f8c:	e005      	b.n	8009f9a <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009f8e:	3301      	adds	r3, #1
 8009f90:	2b10      	cmp	r3, #16
 8009f92:	f102 0202 	add.w	r2, r2, #2
 8009f96:	f000 8095 	beq.w	800a0c4 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009f9a:	2101      	movs	r1, #1
 8009f9c:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009f9e:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009fa2:	43a1      	bics	r1, r4
 8009fa4:	d1f3      	bne.n	8009f8e <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009fa6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009faa:	f00c 0103 	and.w	r1, ip, #3
 8009fae:	1e4d      	subs	r5, r1, #1
 8009fb0:	2d01      	cmp	r5, #1
 8009fb2:	f240 808a 	bls.w	800a0ca <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009fb6:	2903      	cmp	r1, #3
 8009fb8:	f040 80ca 	bne.w	800a150 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009fbc:	4091      	lsls	r1, r2
 8009fbe:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009fc0:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009fc2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009fc4:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009fc6:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009fca:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009fcc:	d0df      	beq.n	8009f8e <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009fce:	2100      	movs	r1, #0
 8009fd0:	9103      	str	r1, [sp, #12]
 8009fd2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009fd6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009fda:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009fde:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009fe2:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009fe6:	9103      	str	r1, [sp, #12]
 8009fe8:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009fea:	f023 0103 	bic.w	r1, r3, #3
 8009fee:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009ff2:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009ff6:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009ffa:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009ffc:	00bf      	lsls	r7, r7, #2
 8009ffe:	f04f 0e0f 	mov.w	lr, #15
 800a002:	fa0e fe07 	lsl.w	lr, lr, r7
 800a006:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a00a:	4d70      	ldr	r5, [pc, #448]	; (800a1cc <HAL_GPIO_Init+0x254>)
 800a00c:	42a8      	cmp	r0, r5
 800a00e:	d02e      	beq.n	800a06e <HAL_GPIO_Init+0xf6>
 800a010:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800a014:	42a8      	cmp	r0, r5
 800a016:	f000 809f 	beq.w	800a158 <HAL_GPIO_Init+0x1e0>
 800a01a:	4d6d      	ldr	r5, [pc, #436]	; (800a1d0 <HAL_GPIO_Init+0x258>)
 800a01c:	42a8      	cmp	r0, r5
 800a01e:	f000 80a2 	beq.w	800a166 <HAL_GPIO_Init+0x1ee>
 800a022:	4d6c      	ldr	r5, [pc, #432]	; (800a1d4 <HAL_GPIO_Init+0x25c>)
 800a024:	42a8      	cmp	r0, r5
 800a026:	f000 80a5 	beq.w	800a174 <HAL_GPIO_Init+0x1fc>
 800a02a:	4d6b      	ldr	r5, [pc, #428]	; (800a1d8 <HAL_GPIO_Init+0x260>)
 800a02c:	42a8      	cmp	r0, r5
 800a02e:	f000 80a8 	beq.w	800a182 <HAL_GPIO_Init+0x20a>
 800a032:	4d6a      	ldr	r5, [pc, #424]	; (800a1dc <HAL_GPIO_Init+0x264>)
 800a034:	42a8      	cmp	r0, r5
 800a036:	f000 80b2 	beq.w	800a19e <HAL_GPIO_Init+0x226>
 800a03a:	4d69      	ldr	r5, [pc, #420]	; (800a1e0 <HAL_GPIO_Init+0x268>)
 800a03c:	42a8      	cmp	r0, r5
 800a03e:	f000 80b5 	beq.w	800a1ac <HAL_GPIO_Init+0x234>
 800a042:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a1e8 <HAL_GPIO_Init+0x270>
 800a046:	4570      	cmp	r0, lr
 800a048:	f000 80a2 	beq.w	800a190 <HAL_GPIO_Init+0x218>
 800a04c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a1ec <HAL_GPIO_Init+0x274>
 800a050:	4570      	cmp	r0, lr
 800a052:	f000 80b2 	beq.w	800a1ba <HAL_GPIO_Init+0x242>
 800a056:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a1f0 <HAL_GPIO_Init+0x278>
 800a05a:	4570      	cmp	r0, lr
 800a05c:	bf0c      	ite	eq
 800a05e:	f04f 0e09 	moveq.w	lr, #9
 800a062:	f04f 0e0a 	movne.w	lr, #10
 800a066:	fa0e f707 	lsl.w	r7, lr, r7
 800a06a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a06e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 800a072:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 800a074:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800a078:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800a07c:	bf0c      	ite	eq
 800a07e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a080:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 800a084:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800a086:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800a088:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 800a08c:	bf0c      	ite	eq
 800a08e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a090:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 800a094:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800a096:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800a098:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 800a09c:	bf0c      	ite	eq
 800a09e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a0a0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 800a0a4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a0a6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800a0a8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a0ac:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 800a0b0:	bf0c      	ite	eq
 800a0b2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 800a0b4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a0b8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800a0ba:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a0bc:	f102 0202 	add.w	r2, r2, #2
 800a0c0:	f47f af6b 	bne.w	8009f9a <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 800a0c4:	b005      	add	sp, #20
 800a0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a0ca:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800a0ce:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a0d2:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a0d6:	2503      	movs	r5, #3
 800a0d8:	fa05 f802 	lsl.w	r8, r5, r2
 800a0dc:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a0e0:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a0e4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a0e6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a0e8:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a0ec:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a0f0:	409f      	lsls	r7, r3
 800a0f2:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a0f6:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a0fa:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a0fc:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a0fe:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a102:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a106:	4097      	lsls	r7, r2
 800a108:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a10c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a10e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a110:	fa01 f102 	lsl.w	r1, r1, r2
 800a114:	f47f af54 	bne.w	8009fc0 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a118:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a11c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a120:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a124:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a128:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a12a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a12e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a132:	fa07 f708 	lsl.w	r7, r7, r8
 800a136:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a138:	270f      	movs	r7, #15
 800a13a:	fa07 f808 	lsl.w	r8, r7, r8
 800a13e:	9f00      	ldr	r7, [sp, #0]
 800a140:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a144:	9f01      	ldr	r7, [sp, #4]
 800a146:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a14a:	f8ce 7020 	str.w	r7, [lr, #32]
 800a14e:	e737      	b.n	8009fc0 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a150:	2503      	movs	r5, #3
 800a152:	4095      	lsls	r5, r2
 800a154:	43ed      	mvns	r5, r5
 800a156:	e7d1      	b.n	800a0fc <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a158:	f04f 0e01 	mov.w	lr, #1
 800a15c:	fa0e f707 	lsl.w	r7, lr, r7
 800a160:	ea48 0807 	orr.w	r8, r8, r7
 800a164:	e783      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a166:	f04f 0e02 	mov.w	lr, #2
 800a16a:	fa0e f707 	lsl.w	r7, lr, r7
 800a16e:	ea48 0807 	orr.w	r8, r8, r7
 800a172:	e77c      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a174:	f04f 0e03 	mov.w	lr, #3
 800a178:	fa0e f707 	lsl.w	r7, lr, r7
 800a17c:	ea48 0807 	orr.w	r8, r8, r7
 800a180:	e775      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a182:	f04f 0e04 	mov.w	lr, #4
 800a186:	fa0e f707 	lsl.w	r7, lr, r7
 800a18a:	ea48 0807 	orr.w	r8, r8, r7
 800a18e:	e76e      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a190:	f04f 0e07 	mov.w	lr, #7
 800a194:	fa0e f707 	lsl.w	r7, lr, r7
 800a198:	ea48 0807 	orr.w	r8, r8, r7
 800a19c:	e767      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a19e:	f04f 0e05 	mov.w	lr, #5
 800a1a2:	fa0e f707 	lsl.w	r7, lr, r7
 800a1a6:	ea48 0807 	orr.w	r8, r8, r7
 800a1aa:	e760      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a1ac:	f04f 0e06 	mov.w	lr, #6
 800a1b0:	fa0e f707 	lsl.w	r7, lr, r7
 800a1b4:	ea48 0807 	orr.w	r8, r8, r7
 800a1b8:	e759      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a1ba:	f04f 0e08 	mov.w	lr, #8
 800a1be:	fa0e f707 	lsl.w	r7, lr, r7
 800a1c2:	ea48 0807 	orr.w	r8, r8, r7
 800a1c6:	e752      	b.n	800a06e <HAL_GPIO_Init+0xf6>
 800a1c8:	40013c00 	.word	0x40013c00
 800a1cc:	40020000 	.word	0x40020000
 800a1d0:	40020800 	.word	0x40020800
 800a1d4:	40020c00 	.word	0x40020c00
 800a1d8:	40021000 	.word	0x40021000
 800a1dc:	40021400 	.word	0x40021400
 800a1e0:	40021800 	.word	0x40021800
 800a1e4:	40023800 	.word	0x40023800
 800a1e8:	40021c00 	.word	0x40021c00
 800a1ec:	40022000 	.word	0x40022000
 800a1f0:	40022400 	.word	0x40022400

0800a1f4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a1f4:	6903      	ldr	r3, [r0, #16]
 800a1f6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a1f8:	bf14      	ite	ne
 800a1fa:	2001      	movne	r0, #1
 800a1fc:	2000      	moveq	r0, #0
 800a1fe:	4770      	bx	lr

0800a200 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a200:	b902      	cbnz	r2, 800a204 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a202:	0409      	lsls	r1, r1, #16
 800a204:	6181      	str	r1, [r0, #24]
  }
}
 800a206:	4770      	bx	lr

0800a208 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a208:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a20a:	ea01 0203 	and.w	r2, r1, r3
 800a20e:	ea21 0103 	bic.w	r1, r1, r3
 800a212:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a216:	6181      	str	r1, [r0, #24]
}
 800a218:	4770      	bx	lr
 800a21a:	bf00      	nop

0800a21c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a21c:	4770      	bx	lr
 800a21e:	bf00      	nop

0800a220 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a220:	4a04      	ldr	r2, [pc, #16]	; (800a234 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a222:	6951      	ldr	r1, [r2, #20]
 800a224:	4201      	tst	r1, r0
 800a226:	d100      	bne.n	800a22a <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a228:	4770      	bx	lr
{
 800a22a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a22c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a22e:	f7ff fff5 	bl	800a21c <HAL_GPIO_EXTI_Callback>
}
 800a232:	bd08      	pop	{r3, pc}
 800a234:	40013c00 	.word	0x40013c00

0800a238 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a23c:	6804      	ldr	r4, [r0, #0]
{
 800a23e:	b083      	sub	sp, #12
 800a240:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a242:	6823      	ldr	r3, [r4, #0]
{
 800a244:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a248:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a24c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a250:	4606      	mov	r6, r0
 800a252:	468a      	mov	sl, r1
 800a254:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a256:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a258:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a25c:	d136      	bne.n	800a2cc <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a25e:	6965      	ldr	r5, [r4, #20]
 800a260:	07e8      	lsls	r0, r5, #31
 800a262:	d5fc      	bpl.n	800a25e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a264:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a268:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a26a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a26e:	d003      	beq.n	800a278 <I2C_RequestMemoryWrite+0x40>
 800a270:	e04f      	b.n	800a312 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a272:	6961      	ldr	r1, [r4, #20]
 800a274:	054d      	lsls	r5, r1, #21
 800a276:	d45d      	bmi.n	800a334 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a278:	6961      	ldr	r1, [r4, #20]
 800a27a:	078b      	lsls	r3, r1, #30
 800a27c:	d5f9      	bpl.n	800a272 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a27e:	2300      	movs	r3, #0
 800a280:	9301      	str	r3, [sp, #4]
 800a282:	6963      	ldr	r3, [r4, #20]
 800a284:	9301      	str	r3, [sp, #4]
 800a286:	69a3      	ldr	r3, [r4, #24]
 800a288:	9301      	str	r3, [sp, #4]
 800a28a:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a28c:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a290:	f040 8088 	bne.w	800a3a4 <I2C_RequestMemoryWrite+0x16c>
 800a294:	6963      	ldr	r3, [r4, #20]
 800a296:	061a      	lsls	r2, r3, #24
 800a298:	d464      	bmi.n	800a364 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a29a:	6963      	ldr	r3, [r4, #20]
 800a29c:	055b      	lsls	r3, r3, #21
 800a29e:	d5f9      	bpl.n	800a294 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a2a0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a2a2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a2a6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a2a8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a2aa:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a2ac:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a2b0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a2b4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a2b6:	f043 0304 	orr.w	r3, r3, #4
 800a2ba:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a2bc:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a2be:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a2c0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a2c2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a2c6:	d066      	beq.n	800a396 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a2c8:	2001      	movs	r0, #1
 800a2ca:	e01f      	b.n	800a30c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a2cc:	6963      	ldr	r3, [r4, #20]
 800a2ce:	07d9      	lsls	r1, r3, #31
 800a2d0:	d4c8      	bmi.n	800a264 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2d2:	f7ff fbb9 	bl	8009a48 <HAL_GetTick>
 800a2d6:	eba0 000b 	sub.w	r0, r0, fp
 800a2da:	4581      	cmp	r9, r0
 800a2dc:	d304      	bcc.n	800a2e8 <I2C_RequestMemoryWrite+0xb0>
 800a2de:	f1b9 0f00 	cmp.w	r9, #0
 800a2e2:	d001      	beq.n	800a2e8 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a2e4:	6834      	ldr	r4, [r6, #0]
 800a2e6:	e7b7      	b.n	800a258 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a2e8:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a2ea:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a2ec:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a2ee:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a2f2:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a2f6:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a2f8:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a2fa:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a2fe:	f042 0220 	orr.w	r2, r2, #32
 800a302:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a304:	680b      	ldr	r3, [r1, #0]
 800a306:	05dc      	lsls	r4, r3, #23
 800a308:	d435      	bmi.n	800a376 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a30a:	2003      	movs	r0, #3
}
 800a30c:	b003      	add	sp, #12
 800a30e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a312:	6963      	ldr	r3, [r4, #20]
 800a314:	0798      	lsls	r0, r3, #30
 800a316:	d4b2      	bmi.n	800a27e <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a318:	6963      	ldr	r3, [r4, #20]
 800a31a:	055a      	lsls	r2, r3, #21
 800a31c:	d40a      	bmi.n	800a334 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a31e:	f7ff fb93 	bl	8009a48 <HAL_GetTick>
 800a322:	eba0 000b 	sub.w	r0, r0, fp
 800a326:	4581      	cmp	r9, r0
 800a328:	d34e      	bcc.n	800a3c8 <I2C_RequestMemoryWrite+0x190>
 800a32a:	f1b9 0f00 	cmp.w	r9, #0
 800a32e:	d04b      	beq.n	800a3c8 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a330:	6834      	ldr	r4, [r6, #0]
 800a332:	e79a      	b.n	800a26a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a334:	6823      	ldr	r3, [r4, #0]
 800a336:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a33a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a33c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a33e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a342:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a344:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a346:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a348:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a34c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a350:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a352:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a356:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a35a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a35c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a35e:	b003      	add	sp, #12
 800a360:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a364:	f1b8 0f01 	cmp.w	r8, #1
 800a368:	d109      	bne.n	800a37e <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a36a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a36c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a36e:	6127      	str	r7, [r4, #16]
}
 800a370:	b003      	add	sp, #12
 800a372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a376:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a37a:	6433      	str	r3, [r6, #64]	; 0x40
 800a37c:	e7c5      	b.n	800a30a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a37e:	0a3b      	lsrs	r3, r7, #8
 800a380:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a382:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a386:	d12e      	bne.n	800a3e6 <I2C_RequestMemoryWrite+0x1ae>
 800a388:	6963      	ldr	r3, [r4, #20]
 800a38a:	0619      	lsls	r1, r3, #24
 800a38c:	d4ed      	bmi.n	800a36a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a38e:	6963      	ldr	r3, [r4, #20]
 800a390:	055a      	lsls	r2, r3, #21
 800a392:	d5f9      	bpl.n	800a388 <I2C_RequestMemoryWrite+0x150>
 800a394:	e784      	b.n	800a2a0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a396:	6832      	ldr	r2, [r6, #0]
 800a398:	6813      	ldr	r3, [r2, #0]
 800a39a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a39e:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3a0:	6013      	str	r3, [r2, #0]
 800a3a2:	e7b3      	b.n	800a30c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3a4:	6963      	ldr	r3, [r4, #20]
 800a3a6:	061d      	lsls	r5, r3, #24
 800a3a8:	d4dc      	bmi.n	800a364 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3aa:	6963      	ldr	r3, [r4, #20]
 800a3ac:	0559      	lsls	r1, r3, #21
 800a3ae:	f53f af77 	bmi.w	800a2a0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3b2:	f7ff fb49 	bl	8009a48 <HAL_GetTick>
 800a3b6:	eba0 000b 	sub.w	r0, r0, fp
 800a3ba:	4581      	cmp	r9, r0
 800a3bc:	d325      	bcc.n	800a40a <I2C_RequestMemoryWrite+0x1d2>
 800a3be:	f1b9 0f00 	cmp.w	r9, #0
 800a3c2:	d022      	beq.n	800a40a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3c4:	6834      	ldr	r4, [r6, #0]
 800a3c6:	e761      	b.n	800a28c <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a3c8:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a3ca:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a3cc:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a3ce:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3d2:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a3d6:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a3d8:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a3dc:	f043 0320 	orr.w	r3, r3, #32
 800a3e0:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a3e2:	2001      	movs	r0, #1
 800a3e4:	e792      	b.n	800a30c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3e6:	6963      	ldr	r3, [r4, #20]
 800a3e8:	061b      	lsls	r3, r3, #24
 800a3ea:	d4be      	bmi.n	800a36a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3ec:	6963      	ldr	r3, [r4, #20]
 800a3ee:	0558      	lsls	r0, r3, #21
 800a3f0:	f53f af56 	bmi.w	800a2a0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3f4:	f7ff fb28 	bl	8009a48 <HAL_GetTick>
 800a3f8:	eba0 000b 	sub.w	r0, r0, fp
 800a3fc:	4581      	cmp	r9, r0
 800a3fe:	d304      	bcc.n	800a40a <I2C_RequestMemoryWrite+0x1d2>
 800a400:	f1b9 0f00 	cmp.w	r9, #0
 800a404:	d001      	beq.n	800a40a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a406:	6834      	ldr	r4, [r6, #0]
 800a408:	e7bb      	b.n	800a382 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a40a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a40c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a40e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a410:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a414:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a418:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a41a:	4313      	orrs	r3, r2
 800a41c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a41e:	e74d      	b.n	800a2bc <I2C_RequestMemoryWrite+0x84>

0800a420 <I2C_RequestMemoryRead>:
{
 800a420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a424:	6804      	ldr	r4, [r0, #0]
{
 800a426:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a428:	6823      	ldr	r3, [r4, #0]
 800a42a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a42e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a430:	6823      	ldr	r3, [r4, #0]
{
 800a432:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a434:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a438:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a43c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a440:	6023      	str	r3, [r4, #0]
{
 800a442:	4606      	mov	r6, r0
 800a444:	468b      	mov	fp, r1
 800a446:	4617      	mov	r7, r2
 800a448:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a44c:	d13a      	bne.n	800a4c4 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a44e:	6965      	ldr	r5, [r4, #20]
 800a450:	07eb      	lsls	r3, r5, #31
 800a452:	d5fc      	bpl.n	800a44e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a454:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a458:	6123      	str	r3, [r4, #16]
 800a45a:	fa5f fb8b 	uxtb.w	fp, fp
 800a45e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a462:	d003      	beq.n	800a46c <I2C_RequestMemoryRead+0x4c>
 800a464:	e069      	b.n	800a53a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a466:	6965      	ldr	r5, [r4, #20]
 800a468:	056a      	lsls	r2, r5, #21
 800a46a:	d44e      	bmi.n	800a50a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a46c:	6965      	ldr	r5, [r4, #20]
 800a46e:	07a9      	lsls	r1, r5, #30
 800a470:	d5f9      	bpl.n	800a466 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a472:	2300      	movs	r3, #0
 800a474:	9301      	str	r3, [sp, #4]
 800a476:	6963      	ldr	r3, [r4, #20]
 800a478:	9301      	str	r3, [sp, #4]
 800a47a:	69a3      	ldr	r3, [r4, #24]
 800a47c:	9301      	str	r3, [sp, #4]
 800a47e:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a480:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a484:	f040 80bd 	bne.w	800a602 <I2C_RequestMemoryRead+0x1e2>
 800a488:	6963      	ldr	r3, [r4, #20]
 800a48a:	0618      	lsls	r0, r3, #24
 800a48c:	d468      	bmi.n	800a560 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a48e:	6963      	ldr	r3, [r4, #20]
 800a490:	0559      	lsls	r1, r3, #21
 800a492:	d5f9      	bpl.n	800a488 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a494:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a496:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a49a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a49c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a49e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a4a0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4a4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a4a8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a4aa:	f043 0304 	orr.w	r3, r3, #4
 800a4ae:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a4b0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a4b2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a4b4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a4b6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a4ba:	d070      	beq.n	800a59e <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a4bc:	2001      	movs	r0, #1
}
 800a4be:	b003      	add	sp, #12
 800a4c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4c4:	6963      	ldr	r3, [r4, #20]
 800a4c6:	07dd      	lsls	r5, r3, #31
 800a4c8:	d4c4      	bmi.n	800a454 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4ca:	f7ff fabd 	bl	8009a48 <HAL_GetTick>
 800a4ce:	eba0 0009 	sub.w	r0, r0, r9
 800a4d2:	4582      	cmp	sl, r0
 800a4d4:	d304      	bcc.n	800a4e0 <I2C_RequestMemoryRead+0xc0>
 800a4d6:	f1ba 0f00 	cmp.w	sl, #0
 800a4da:	d001      	beq.n	800a4e0 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a4dc:	6834      	ldr	r4, [r6, #0]
 800a4de:	e7b3      	b.n	800a448 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4e0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4e2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a4e4:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a4e6:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a4ea:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4ee:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a4f0:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a4f2:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a4f6:	f042 0220 	orr.w	r2, r2, #32
 800a4fa:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a4fc:	680b      	ldr	r3, [r1, #0]
 800a4fe:	05dc      	lsls	r4, r3, #23
 800a500:	d43d      	bmi.n	800a57e <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a502:	2003      	movs	r0, #3
}
 800a504:	b003      	add	sp, #12
 800a506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a50a:	6823      	ldr	r3, [r4, #0]
 800a50c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a510:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a512:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a514:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a518:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a51a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a51c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a51e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a522:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a526:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a528:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a52c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a530:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a532:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a534:	b003      	add	sp, #12
 800a536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a53a:	6963      	ldr	r3, [r4, #20]
 800a53c:	079b      	lsls	r3, r3, #30
 800a53e:	d498      	bmi.n	800a472 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a540:	6963      	ldr	r3, [r4, #20]
 800a542:	0558      	lsls	r0, r3, #21
 800a544:	d4e1      	bmi.n	800a50a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a546:	f7ff fa7f 	bl	8009a48 <HAL_GetTick>
 800a54a:	eba0 0009 	sub.w	r0, r0, r9
 800a54e:	4582      	cmp	sl, r0
 800a550:	f0c0 808f 	bcc.w	800a672 <I2C_RequestMemoryRead+0x252>
 800a554:	f1ba 0f00 	cmp.w	sl, #0
 800a558:	f000 808b 	beq.w	800a672 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a55c:	6834      	ldr	r4, [r6, #0]
 800a55e:	e77e      	b.n	800a45e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a560:	f1b8 0f01 	cmp.w	r8, #1
 800a564:	d10f      	bne.n	800a586 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a566:	b2ff      	uxtb	r7, r7
 800a568:	6127      	str	r7, [r4, #16]
 800a56a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a56e:	d16e      	bne.n	800a64e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a570:	6963      	ldr	r3, [r4, #20]
 800a572:	061b      	lsls	r3, r3, #24
 800a574:	d41a      	bmi.n	800a5ac <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a576:	6963      	ldr	r3, [r4, #20]
 800a578:	055f      	lsls	r7, r3, #21
 800a57a:	d5f9      	bpl.n	800a570 <I2C_RequestMemoryRead+0x150>
 800a57c:	e78a      	b.n	800a494 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a57e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a582:	6433      	str	r3, [r6, #64]	; 0x40
 800a584:	e7bd      	b.n	800a502 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a586:	0a3b      	lsrs	r3, r7, #8
 800a588:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a58a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a58e:	d17e      	bne.n	800a68e <I2C_RequestMemoryRead+0x26e>
 800a590:	6963      	ldr	r3, [r4, #20]
 800a592:	061d      	lsls	r5, r3, #24
 800a594:	d4e7      	bmi.n	800a566 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a596:	6963      	ldr	r3, [r4, #20]
 800a598:	0558      	lsls	r0, r3, #21
 800a59a:	d5f9      	bpl.n	800a590 <I2C_RequestMemoryRead+0x170>
 800a59c:	e77a      	b.n	800a494 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a59e:	6832      	ldr	r2, [r6, #0]
 800a5a0:	6813      	ldr	r3, [r2, #0]
 800a5a2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a5a6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a5a8:	6013      	str	r3, [r2, #0]
 800a5aa:	e7ab      	b.n	800a504 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a5ac:	6823      	ldr	r3, [r4, #0]
 800a5ae:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a5b2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a5b4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a5b8:	d113      	bne.n	800a5e2 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a5ba:	6963      	ldr	r3, [r4, #20]
 800a5bc:	07d8      	lsls	r0, r3, #31
 800a5be:	d5fc      	bpl.n	800a5ba <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a5c0:	f04b 0301 	orr.w	r3, fp, #1
 800a5c4:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a5c6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a5ca:	d003      	beq.n	800a5d4 <I2C_RequestMemoryRead+0x1b4>
 800a5cc:	e02b      	b.n	800a626 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5ce:	6963      	ldr	r3, [r4, #20]
 800a5d0:	055b      	lsls	r3, r3, #21
 800a5d2:	d49a      	bmi.n	800a50a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a5d4:	6963      	ldr	r3, [r4, #20]
 800a5d6:	43db      	mvns	r3, r3
 800a5d8:	f013 0302 	ands.w	r3, r3, #2
 800a5dc:	d1f7      	bne.n	800a5ce <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a5de:	4618      	mov	r0, r3
 800a5e0:	e790      	b.n	800a504 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a5e2:	6963      	ldr	r3, [r4, #20]
 800a5e4:	07d9      	lsls	r1, r3, #31
 800a5e6:	d4eb      	bmi.n	800a5c0 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5e8:	f7ff fa2e 	bl	8009a48 <HAL_GetTick>
 800a5ec:	eba0 0009 	sub.w	r0, r0, r9
 800a5f0:	4582      	cmp	sl, r0
 800a5f2:	f4ff af75 	bcc.w	800a4e0 <I2C_RequestMemoryRead+0xc0>
 800a5f6:	f1ba 0f00 	cmp.w	sl, #0
 800a5fa:	f43f af71 	beq.w	800a4e0 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a5fe:	6834      	ldr	r4, [r6, #0]
 800a600:	e7d8      	b.n	800a5b4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a602:	6963      	ldr	r3, [r4, #20]
 800a604:	061a      	lsls	r2, r3, #24
 800a606:	d4ab      	bmi.n	800a560 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a608:	6963      	ldr	r3, [r4, #20]
 800a60a:	055d      	lsls	r5, r3, #21
 800a60c:	f53f af42 	bmi.w	800a494 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a610:	f7ff fa1a 	bl	8009a48 <HAL_GetTick>
 800a614:	eba0 0009 	sub.w	r0, r0, r9
 800a618:	4582      	cmp	sl, r0
 800a61a:	d34b      	bcc.n	800a6b4 <I2C_RequestMemoryRead+0x294>
 800a61c:	f1ba 0f00 	cmp.w	sl, #0
 800a620:	d048      	beq.n	800a6b4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a622:	6834      	ldr	r4, [r6, #0]
 800a624:	e72c      	b.n	800a480 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a626:	6963      	ldr	r3, [r4, #20]
 800a628:	43db      	mvns	r3, r3
 800a62a:	f013 0302 	ands.w	r3, r3, #2
 800a62e:	d0d6      	beq.n	800a5de <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a630:	6963      	ldr	r3, [r4, #20]
 800a632:	055a      	lsls	r2, r3, #21
 800a634:	f53f af69 	bmi.w	800a50a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a638:	f7ff fa06 	bl	8009a48 <HAL_GetTick>
 800a63c:	eba0 0009 	sub.w	r0, r0, r9
 800a640:	4582      	cmp	sl, r0
 800a642:	d316      	bcc.n	800a672 <I2C_RequestMemoryRead+0x252>
 800a644:	f1ba 0f00 	cmp.w	sl, #0
 800a648:	d013      	beq.n	800a672 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a64a:	6834      	ldr	r4, [r6, #0]
 800a64c:	e7bb      	b.n	800a5c6 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a64e:	6963      	ldr	r3, [r4, #20]
 800a650:	061d      	lsls	r5, r3, #24
 800a652:	d4ab      	bmi.n	800a5ac <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a654:	6963      	ldr	r3, [r4, #20]
 800a656:	055a      	lsls	r2, r3, #21
 800a658:	f53f af1c 	bmi.w	800a494 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a65c:	f7ff f9f4 	bl	8009a48 <HAL_GetTick>
 800a660:	eba0 0009 	sub.w	r0, r0, r9
 800a664:	4582      	cmp	sl, r0
 800a666:	d325      	bcc.n	800a6b4 <I2C_RequestMemoryRead+0x294>
 800a668:	f1ba 0f00 	cmp.w	sl, #0
 800a66c:	d022      	beq.n	800a6b4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a66e:	6834      	ldr	r4, [r6, #0]
 800a670:	e77b      	b.n	800a56a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a672:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a674:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a676:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a678:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a67c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a680:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a682:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a686:	f043 0320 	orr.w	r3, r3, #32
 800a68a:	6433      	str	r3, [r6, #64]	; 0x40
 800a68c:	e716      	b.n	800a4bc <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a68e:	6963      	ldr	r3, [r4, #20]
 800a690:	0619      	lsls	r1, r3, #24
 800a692:	f53f af68 	bmi.w	800a566 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a696:	6963      	ldr	r3, [r4, #20]
 800a698:	055b      	lsls	r3, r3, #21
 800a69a:	f53f aefb 	bmi.w	800a494 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a69e:	f7ff f9d3 	bl	8009a48 <HAL_GetTick>
 800a6a2:	eba0 0009 	sub.w	r0, r0, r9
 800a6a6:	4582      	cmp	sl, r0
 800a6a8:	d304      	bcc.n	800a6b4 <I2C_RequestMemoryRead+0x294>
 800a6aa:	f1ba 0f00 	cmp.w	sl, #0
 800a6ae:	d001      	beq.n	800a6b4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a6b0:	6834      	ldr	r4, [r6, #0]
 800a6b2:	e76a      	b.n	800a58a <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a6b4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a6b6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a6b8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a6ba:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a6be:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a6c2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a6c4:	4313      	orrs	r3, r2
 800a6c6:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a6c8:	e6f2      	b.n	800a4b0 <I2C_RequestMemoryRead+0x90>
 800a6ca:	bf00      	nop

0800a6cc <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a6cc:	2800      	cmp	r0, #0
 800a6ce:	f000 80b9 	beq.w	800a844 <HAL_I2C_Init+0x178>
{
 800a6d2:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a6d4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a6d8:	4604      	mov	r4, r0
 800a6da:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a6de:	2b00      	cmp	r3, #0
 800a6e0:	f000 8098 	beq.w	800a814 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a6e4:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a6e6:	2224      	movs	r2, #36	; 0x24
 800a6e8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a6ec:	681a      	ldr	r2, [r3, #0]
 800a6ee:	f022 0201 	bic.w	r2, r2, #1
 800a6f2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a6f4:	681a      	ldr	r2, [r3, #0]
 800a6f6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a6fa:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a6fc:	681a      	ldr	r2, [r3, #0]
 800a6fe:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a702:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a704:	f001 fe70 	bl	800c3e8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a708:	6865      	ldr	r5, [r4, #4]
 800a70a:	4b4f      	ldr	r3, [pc, #316]	; (800a848 <HAL_I2C_Init+0x17c>)
 800a70c:	429d      	cmp	r5, r3
 800a70e:	d84f      	bhi.n	800a7b0 <HAL_I2C_Init+0xe4>
 800a710:	4b4e      	ldr	r3, [pc, #312]	; (800a84c <HAL_I2C_Init+0x180>)
 800a712:	4298      	cmp	r0, r3
 800a714:	d97c      	bls.n	800a810 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a716:	4b4e      	ldr	r3, [pc, #312]	; (800a850 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a718:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a71a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a71e:	1e43      	subs	r3, r0, #1
 800a720:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a724:	6822      	ldr	r2, [r4, #0]
 800a726:	6851      	ldr	r1, [r2, #4]
 800a728:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a72c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a730:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a732:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a734:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a738:	f10c 0c01 	add.w	ip, ip, #1
 800a73c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a740:	ea41 010c 	orr.w	r1, r1, ip
 800a744:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a746:	69d1      	ldr	r1, [r2, #28]
 800a748:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a74c:	3301      	adds	r3, #1
 800a74e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a752:	4203      	tst	r3, r0
 800a754:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a758:	d161      	bne.n	800a81e <HAL_I2C_Init+0x152>
 800a75a:	2304      	movs	r3, #4
 800a75c:	430b      	orrs	r3, r1
 800a75e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a760:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a764:	6811      	ldr	r1, [r2, #0]
 800a766:	4303      	orrs	r3, r0
 800a768:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a76c:	430b      	orrs	r3, r1
 800a76e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a770:	6891      	ldr	r1, [r2, #8]
 800a772:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a776:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a77a:	4303      	orrs	r3, r0
 800a77c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a780:	430b      	orrs	r3, r1
 800a782:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a784:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a788:	68d1      	ldr	r1, [r2, #12]
 800a78a:	4303      	orrs	r3, r0
 800a78c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a790:	430b      	orrs	r3, r1
 800a792:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a794:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a796:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a798:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a79c:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a79e:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a7a0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a7a2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a7a6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a7a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a7ac:	4618      	mov	r0, r3
}
 800a7ae:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a7b0:	4b28      	ldr	r3, [pc, #160]	; (800a854 <HAL_I2C_Init+0x188>)
 800a7b2:	4298      	cmp	r0, r3
 800a7b4:	d92c      	bls.n	800a810 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a7b6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a7b8:	4b25      	ldr	r3, [pc, #148]	; (800a850 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a7ba:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a7bc:	4e26      	ldr	r6, [pc, #152]	; (800a858 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a7be:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a7c2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a7c6:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a7ca:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a7cc:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a7d0:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a7d4:	fb01 f303 	mul.w	r3, r1, r3
 800a7d8:	fba6 6303 	umull	r6, r3, r6, r3
 800a7dc:	6a11      	ldr	r1, [r2, #32]
 800a7de:	099b      	lsrs	r3, r3, #6
 800a7e0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a7e4:	3301      	adds	r3, #1
 800a7e6:	430b      	orrs	r3, r1
 800a7e8:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a7ea:	69d1      	ldr	r1, [r2, #28]
 800a7ec:	68a3      	ldr	r3, [r4, #8]
 800a7ee:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a7f2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a7f6:	b9ab      	cbnz	r3, 800a824 <HAL_I2C_Init+0x158>
 800a7f8:	1e43      	subs	r3, r0, #1
 800a7fa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a7fe:	fbb3 f3f5 	udiv	r3, r3, r5
 800a802:	3301      	adds	r3, #1
 800a804:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a808:	b1d3      	cbz	r3, 800a840 <HAL_I2C_Init+0x174>
 800a80a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a80e:	e7a5      	b.n	800a75c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a810:	2001      	movs	r0, #1
}
 800a812:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a814:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a818:	f7f6 ff4a 	bl	80016b0 <HAL_I2C_MspInit>
 800a81c:	e762      	b.n	800a6e4 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a81e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a822:	e79b      	b.n	800a75c <HAL_I2C_Init+0x90>
 800a824:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a828:	1e43      	subs	r3, r0, #1
 800a82a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a82e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a832:	3301      	adds	r3, #1
 800a834:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a838:	b113      	cbz	r3, 800a840 <HAL_I2C_Init+0x174>
 800a83a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a83e:	e78d      	b.n	800a75c <HAL_I2C_Init+0x90>
 800a840:	2301      	movs	r3, #1
 800a842:	e78b      	b.n	800a75c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a844:	2001      	movs	r0, #1
}
 800a846:	4770      	bx	lr
 800a848:	000186a0 	.word	0x000186a0
 800a84c:	001e847f 	.word	0x001e847f
 800a850:	431bde83 	.word	0x431bde83
 800a854:	003d08ff 	.word	0x003d08ff
 800a858:	10624dd3 	.word	0x10624dd3

0800a85c <HAL_I2C_Mem_Write>:
{
 800a85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a860:	4604      	mov	r4, r0
 800a862:	b083      	sub	sp, #12
 800a864:	4699      	mov	r9, r3
 800a866:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a86a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a86c:	460f      	mov	r7, r1
 800a86e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a870:	f7ff f8ea 	bl	8009a48 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a874:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a878:	2b20      	cmp	r3, #32
 800a87a:	d004      	beq.n	800a886 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a87c:	2702      	movs	r7, #2
}
 800a87e:	4638      	mov	r0, r7
 800a880:	b003      	add	sp, #12
 800a882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a886:	4605      	mov	r5, r0
 800a888:	e005      	b.n	800a896 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a88a:	f7ff f8dd 	bl	8009a48 <HAL_GetTick>
 800a88e:	1b40      	subs	r0, r0, r5
 800a890:	2819      	cmp	r0, #25
 800a892:	f200 80a8 	bhi.w	800a9e6 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a896:	6820      	ldr	r0, [r4, #0]
 800a898:	6983      	ldr	r3, [r0, #24]
 800a89a:	ea6f 0c03 	mvn.w	ip, r3
 800a89e:	f01c 0b02 	ands.w	fp, ip, #2
 800a8a2:	d0f2      	beq.n	800a88a <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a8a4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a8a8:	2b01      	cmp	r3, #1
 800a8aa:	d0e7      	beq.n	800a87c <HAL_I2C_Mem_Write+0x20>
 800a8ac:	2301      	movs	r3, #1
 800a8ae:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a8b2:	6803      	ldr	r3, [r0, #0]
 800a8b4:	07db      	lsls	r3, r3, #31
 800a8b6:	d572      	bpl.n	800a99e <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a8b8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a8ba:	6807      	ldr	r7, [r0, #0]
 800a8bc:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a8c0:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a8c2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a8c4:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a8c6:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a8c8:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a8cc:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a8d0:	2040      	movs	r0, #64	; 0x40
 800a8d2:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a8d6:	2000      	movs	r0, #0
 800a8d8:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a8da:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a8de:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a8e0:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a8e2:	4856      	ldr	r0, [pc, #344]	; (800aa3c <HAL_I2C_Mem_Write+0x1e0>)
 800a8e4:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a8e6:	464b      	mov	r3, r9
 800a8e8:	4642      	mov	r2, r8
 800a8ea:	4620      	mov	r0, r4
 800a8ec:	f7ff fca4 	bl	800a238 <I2C_RequestMemoryWrite>
 800a8f0:	4607      	mov	r7, r0
 800a8f2:	bb00      	cbnz	r0, 800a936 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a8f4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a8f6:	2b00      	cmp	r3, #0
 800a8f8:	f000 809e 	beq.w	800aa38 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a8fc:	6823      	ldr	r3, [r4, #0]
 800a8fe:	1c72      	adds	r2, r6, #1
 800a900:	d159      	bne.n	800a9b6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a902:	695a      	ldr	r2, [r3, #20]
 800a904:	0610      	lsls	r0, r2, #24
 800a906:	d41b      	bmi.n	800a940 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a908:	695a      	ldr	r2, [r3, #20]
 800a90a:	0551      	lsls	r1, r2, #21
 800a90c:	d5f9      	bpl.n	800a902 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a90e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a910:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a914:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a916:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a918:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a91a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a91e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a922:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a924:	f043 0304 	orr.w	r3, r3, #4
 800a928:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a92a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a92c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a92e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a930:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a934:	d038      	beq.n	800a9a8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a936:	2701      	movs	r7, #1
}
 800a938:	4638      	mov	r0, r7
 800a93a:	b003      	add	sp, #12
 800a93c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a940:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a944:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a948:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a94a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a94e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a952:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a954:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a956:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a958:	3a01      	subs	r2, #1
 800a95a:	b292      	uxth	r2, r2
 800a95c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a95e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a960:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a962:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a964:	0740      	lsls	r0, r0, #29
 800a966:	d517      	bpl.n	800a998 <HAL_I2C_Mem_Write+0x13c>
 800a968:	b942      	cbnz	r2, 800a97c <HAL_I2C_Mem_Write+0x120>
 800a96a:	1c72      	adds	r2, r6, #1
 800a96c:	d156      	bne.n	800aa1c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a96e:	695a      	ldr	r2, [r3, #20]
 800a970:	0750      	lsls	r0, r2, #29
 800a972:	d446      	bmi.n	800aa02 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a974:	695a      	ldr	r2, [r3, #20]
 800a976:	0551      	lsls	r1, r2, #21
 800a978:	d5f9      	bpl.n	800a96e <HAL_I2C_Mem_Write+0x112>
 800a97a:	e7c8      	b.n	800a90e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a97c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a980:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a982:	f10c 0102 	add.w	r1, ip, #2
 800a986:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a988:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a98a:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a98e:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a990:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a992:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a994:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a996:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a998:	2a00      	cmp	r2, #0
 800a99a:	d1b0      	bne.n	800a8fe <HAL_I2C_Mem_Write+0xa2>
 800a99c:	e7e5      	b.n	800a96a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a99e:	6803      	ldr	r3, [r0, #0]
 800a9a0:	f043 0301 	orr.w	r3, r3, #1
 800a9a4:	6003      	str	r3, [r0, #0]
 800a9a6:	e787      	b.n	800a8b8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9a8:	6822      	ldr	r2, [r4, #0]
 800a9aa:	6813      	ldr	r3, [r2, #0]
 800a9ac:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a9b0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9b2:	6013      	str	r3, [r2, #0]
 800a9b4:	e763      	b.n	800a87e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a9b6:	695a      	ldr	r2, [r3, #20]
 800a9b8:	0612      	lsls	r2, r2, #24
 800a9ba:	d4c1      	bmi.n	800a940 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a9bc:	695a      	ldr	r2, [r3, #20]
 800a9be:	0551      	lsls	r1, r2, #21
 800a9c0:	d4a5      	bmi.n	800a90e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a9c2:	f7ff f841 	bl	8009a48 <HAL_GetTick>
 800a9c6:	1b40      	subs	r0, r0, r5
 800a9c8:	4286      	cmp	r6, r0
 800a9ca:	d301      	bcc.n	800a9d0 <HAL_I2C_Mem_Write+0x174>
 800a9cc:	2e00      	cmp	r6, #0
 800a9ce:	d195      	bne.n	800a8fc <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a9d0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a9d2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a9d4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a9d6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a9da:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a9de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a9e0:	4313      	orrs	r3, r2
 800a9e2:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a9e4:	e7a1      	b.n	800a92a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a9e6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a9e8:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a9ec:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a9f0:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a9f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a9f6:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a9fa:	f043 0320 	orr.w	r3, r3, #32
 800a9fe:	6423      	str	r3, [r4, #64]	; 0x40
 800aa00:	e73c      	b.n	800a87c <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa02:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa04:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800aa0a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa0c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800aa0e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aa12:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa16:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800aa1a:	e730      	b.n	800a87e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aa1c:	695a      	ldr	r2, [r3, #20]
 800aa1e:	0752      	lsls	r2, r2, #29
 800aa20:	d4ef      	bmi.n	800aa02 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aa22:	695a      	ldr	r2, [r3, #20]
 800aa24:	0551      	lsls	r1, r2, #21
 800aa26:	f53f af72 	bmi.w	800a90e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa2a:	f7ff f80d 	bl	8009a48 <HAL_GetTick>
 800aa2e:	1b40      	subs	r0, r0, r5
 800aa30:	4286      	cmp	r6, r0
 800aa32:	d3cd      	bcc.n	800a9d0 <HAL_I2C_Mem_Write+0x174>
 800aa34:	2e00      	cmp	r6, #0
 800aa36:	d0cb      	beq.n	800a9d0 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800aa38:	6823      	ldr	r3, [r4, #0]
 800aa3a:	e796      	b.n	800a96a <HAL_I2C_Mem_Write+0x10e>
 800aa3c:	ffff0000 	.word	0xffff0000

0800aa40 <HAL_I2C_Mem_Read>:
{
 800aa40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa44:	4604      	mov	r4, r0
 800aa46:	b087      	sub	sp, #28
 800aa48:	4699      	mov	r9, r3
 800aa4a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800aa4e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800aa50:	460f      	mov	r7, r1
 800aa52:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800aa54:	f7fe fff8 	bl	8009a48 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800aa58:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800aa5c:	2b20      	cmp	r3, #32
 800aa5e:	d004      	beq.n	800aa6a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800aa60:	2702      	movs	r7, #2
}
 800aa62:	4638      	mov	r0, r7
 800aa64:	b007      	add	sp, #28
 800aa66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa6a:	4606      	mov	r6, r0
 800aa6c:	e005      	b.n	800aa7a <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa6e:	f7fe ffeb 	bl	8009a48 <HAL_GetTick>
 800aa72:	1b80      	subs	r0, r0, r6
 800aa74:	2819      	cmp	r0, #25
 800aa76:	f200 80d2 	bhi.w	800ac1e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa7a:	f8d4 c000 	ldr.w	ip, [r4]
 800aa7e:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800aa82:	43c0      	mvns	r0, r0
 800aa84:	f010 0b02 	ands.w	fp, r0, #2
 800aa88:	d0f1      	beq.n	800aa6e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800aa8a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800aa8e:	2b01      	cmp	r3, #1
 800aa90:	d0e6      	beq.n	800aa60 <HAL_I2C_Mem_Read+0x20>
 800aa92:	2301      	movs	r3, #1
 800aa94:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800aa98:	f8dc 3000 	ldr.w	r3, [ip]
 800aa9c:	07d9      	lsls	r1, r3, #31
 800aa9e:	d537      	bpl.n	800ab10 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aaa0:	f8dc 0000 	ldr.w	r0, [ip]
 800aaa4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800aaa8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800aaac:	9810      	ldr	r0, [sp, #64]	; 0x40
 800aaae:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800aab0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aab2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800aab6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800aaba:	2040      	movs	r0, #64	; 0x40
 800aabc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800aac0:	2000      	movs	r0, #0
 800aac2:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800aac4:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800aac8:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800aaca:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800aacc:	4893      	ldr	r0, [pc, #588]	; (800ad1c <HAL_I2C_Mem_Read+0x2dc>)
 800aace:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800aad0:	4639      	mov	r1, r7
 800aad2:	464b      	mov	r3, r9
 800aad4:	4642      	mov	r2, r8
 800aad6:	4620      	mov	r0, r4
 800aad8:	f7ff fca2 	bl	800a420 <I2C_RequestMemoryRead>
 800aadc:	4607      	mov	r7, r0
 800aade:	2800      	cmp	r0, #0
 800aae0:	f040 80ab 	bne.w	800ac3a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800aae4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800aae6:	b9d2      	cbnz	r2, 800ab1e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aae8:	6823      	ldr	r3, [r4, #0]
 800aaea:	9002      	str	r0, [sp, #8]
 800aaec:	695a      	ldr	r2, [r3, #20]
 800aaee:	9202      	str	r2, [sp, #8]
 800aaf0:	699a      	ldr	r2, [r3, #24]
 800aaf2:	9202      	str	r2, [sp, #8]
 800aaf4:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aaf6:	681a      	ldr	r2, [r3, #0]
 800aaf8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aafc:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aafe:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ab00:	2220      	movs	r2, #32
 800ab02:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800ab06:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab0a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800ab0e:	e7a8      	b.n	800aa62 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800ab10:	f8dc 3000 	ldr.w	r3, [ip]
 800ab14:	f043 0301 	orr.w	r3, r3, #1
 800ab18:	f8cc 3000 	str.w	r3, [ip]
 800ab1c:	e7c0      	b.n	800aaa0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800ab1e:	2a01      	cmp	r2, #1
 800ab20:	f000 812c 	beq.w	800ad7c <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800ab24:	2a02      	cmp	r2, #2
 800ab26:	f000 80bd 	beq.w	800aca4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab2a:	6823      	ldr	r3, [r4, #0]
 800ab2c:	9005      	str	r0, [sp, #20]
 800ab2e:	6959      	ldr	r1, [r3, #20]
 800ab30:	9105      	str	r1, [sp, #20]
 800ab32:	6999      	ldr	r1, [r3, #24]
 800ab34:	9105      	str	r1, [sp, #20]
 800ab36:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800ab38:	2a03      	cmp	r2, #3
 800ab3a:	d849      	bhi.n	800abd0 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800ab3c:	2a01      	cmp	r2, #1
 800ab3e:	f000 80eb 	beq.w	800ad18 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800ab42:	2a02      	cmp	r2, #2
 800ab44:	f000 8089 	beq.w	800ac5a <HAL_I2C_Mem_Read+0x21a>
 800ab48:	1c69      	adds	r1, r5, #1
 800ab4a:	f040 80bb 	bne.w	800acc4 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab4e:	695a      	ldr	r2, [r3, #20]
 800ab50:	0752      	lsls	r2, r2, #29
 800ab52:	d5fc      	bpl.n	800ab4e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab54:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab56:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab58:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ab5c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab5e:	691b      	ldr	r3, [r3, #16]
 800ab60:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ab62:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ab64:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ab66:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ab68:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800ab6a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800ab6c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ab6e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800ab70:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ab72:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800ab74:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800ab76:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab78:	6822      	ldr	r2, [r4, #0]
 800ab7a:	f040 80af 	bne.w	800acdc <HAL_I2C_Mem_Read+0x29c>
 800ab7e:	6953      	ldr	r3, [r2, #20]
 800ab80:	075b      	lsls	r3, r3, #29
 800ab82:	d5fc      	bpl.n	800ab7e <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab84:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab86:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab88:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800ab8c:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab8e:	6913      	ldr	r3, [r2, #16]
 800ab90:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800ab92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ab94:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ab96:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab98:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800ab9a:	3b01      	subs	r3, #1
 800ab9c:	b29b      	uxth	r3, r3
 800ab9e:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aba0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aba2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aba4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aba8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800abaa:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abae:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800abb0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800abb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800abb4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800abb6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800abb8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800abba:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800abbc:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800abbe:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800abc0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800abc2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800abc4:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800abc6:	2a00      	cmp	r2, #0
 800abc8:	d099      	beq.n	800aafe <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800abca:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800abcc:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800abce:	d9b5      	bls.n	800ab3c <HAL_I2C_Mem_Read+0xfc>
 800abd0:	b95d      	cbnz	r5, 800abea <HAL_I2C_Mem_Read+0x1aa>
 800abd2:	e0c5      	b.n	800ad60 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800abd4:	695a      	ldr	r2, [r3, #20]
 800abd6:	06d0      	lsls	r0, r2, #27
 800abd8:	f100 80b2 	bmi.w	800ad40 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abdc:	f7fe ff34 	bl	8009a48 <HAL_GetTick>
 800abe0:	1b80      	subs	r0, r0, r6
 800abe2:	4285      	cmp	r5, r0
 800abe4:	f0c0 8086 	bcc.w	800acf4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800abe8:	6823      	ldr	r3, [r4, #0]
 800abea:	695a      	ldr	r2, [r3, #20]
 800abec:	0652      	lsls	r2, r2, #25
 800abee:	d5f1      	bpl.n	800abd4 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abf0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800abf2:	691b      	ldr	r3, [r3, #16]
 800abf4:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800abf6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800abf8:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800abfa:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800abfc:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800abfe:	3b01      	subs	r3, #1
 800ac00:	b29b      	uxth	r3, r3
 800ac02:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ac04:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ac06:	3a01      	subs	r2, #1
 800ac08:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ac0a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ac0e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ac10:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ac12:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ac16:	d5d6      	bpl.n	800abc6 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac18:	6903      	ldr	r3, [r0, #16]
 800ac1a:	704b      	strb	r3, [r1, #1]
 800ac1c:	e036      	b.n	800ac8c <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac1e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac20:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac24:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac28:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac2e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac32:	f043 0320 	orr.w	r3, r3, #32
 800ac36:	6423      	str	r3, [r4, #64]	; 0x40
 800ac38:	e712      	b.n	800aa60 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ac3a:	2701      	movs	r7, #1
}
 800ac3c:	4638      	mov	r0, r7
 800ac3e:	b007      	add	sp, #28
 800ac40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac44:	695a      	ldr	r2, [r3, #20]
 800ac46:	0750      	lsls	r0, r2, #29
 800ac48:	d40c      	bmi.n	800ac64 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac4a:	f7fe fefd 	bl	8009a48 <HAL_GetTick>
 800ac4e:	1b80      	subs	r0, r0, r6
 800ac50:	4285      	cmp	r5, r0
 800ac52:	d34f      	bcc.n	800acf4 <HAL_I2C_Mem_Read+0x2b4>
 800ac54:	2d00      	cmp	r5, #0
 800ac56:	d04d      	beq.n	800acf4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac58:	6823      	ldr	r3, [r4, #0]
 800ac5a:	1c69      	adds	r1, r5, #1
 800ac5c:	d1f2      	bne.n	800ac44 <HAL_I2C_Mem_Read+0x204>
 800ac5e:	695a      	ldr	r2, [r3, #20]
 800ac60:	0752      	lsls	r2, r2, #29
 800ac62:	d5fc      	bpl.n	800ac5e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac64:	681a      	ldr	r2, [r3, #0]
 800ac66:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac6a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac6c:	691a      	ldr	r2, [r3, #16]
 800ac6e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac70:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800ac72:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ac74:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ac76:	3b01      	subs	r3, #1
 800ac78:	b29b      	uxth	r3, r3
 800ac7a:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ac7c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ac7e:	3b01      	subs	r3, #1
 800ac80:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac82:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800ac84:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac86:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800ac88:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac8a:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800ac8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800ac8e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800ac90:	3301      	adds	r3, #1
 800ac92:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ac94:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ac96:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800ac98:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800ac9a:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800ac9c:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800ac9e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aca0:	8563      	strh	r3, [r4, #42]	; 0x2a
 800aca2:	e790      	b.n	800abc6 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aca4:	6823      	ldr	r3, [r4, #0]
 800aca6:	6819      	ldr	r1, [r3, #0]
 800aca8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800acac:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800acae:	6819      	ldr	r1, [r3, #0]
 800acb0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800acb4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800acb6:	9004      	str	r0, [sp, #16]
 800acb8:	6959      	ldr	r1, [r3, #20]
 800acba:	9104      	str	r1, [sp, #16]
 800acbc:	6999      	ldr	r1, [r3, #24]
 800acbe:	9104      	str	r1, [sp, #16]
 800acc0:	9904      	ldr	r1, [sp, #16]
 800acc2:	e739      	b.n	800ab38 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800acc4:	695a      	ldr	r2, [r3, #20]
 800acc6:	0750      	lsls	r0, r2, #29
 800acc8:	f53f af44 	bmi.w	800ab54 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800accc:	f7fe febc 	bl	8009a48 <HAL_GetTick>
 800acd0:	1b80      	subs	r0, r0, r6
 800acd2:	4285      	cmp	r5, r0
 800acd4:	d30e      	bcc.n	800acf4 <HAL_I2C_Mem_Read+0x2b4>
 800acd6:	b16d      	cbz	r5, 800acf4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800acd8:	6823      	ldr	r3, [r4, #0]
 800acda:	e735      	b.n	800ab48 <HAL_I2C_Mem_Read+0x108>
 800acdc:	6953      	ldr	r3, [r2, #20]
 800acde:	0758      	lsls	r0, r3, #29
 800ace0:	f53f af50 	bmi.w	800ab84 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ace4:	f7fe feb0 	bl	8009a48 <HAL_GetTick>
 800ace8:	1b80      	subs	r0, r0, r6
 800acea:	4285      	cmp	r5, r0
 800acec:	d302      	bcc.n	800acf4 <HAL_I2C_Mem_Read+0x2b4>
 800acee:	2d00      	cmp	r5, #0
 800acf0:	f47f af41 	bne.w	800ab76 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800acf4:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800acf6:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800acf8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800acfa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800acfe:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad02:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad04:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ad08:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad0a:	f043 0320 	orr.w	r3, r3, #32
}
 800ad0e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad10:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ad12:	b007      	add	sp, #28
 800ad14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad18:	b95d      	cbnz	r5, 800ad32 <HAL_I2C_Mem_Read+0x2f2>
 800ad1a:	e02b      	b.n	800ad74 <HAL_I2C_Mem_Read+0x334>
 800ad1c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ad20:	695a      	ldr	r2, [r3, #20]
 800ad22:	06d2      	lsls	r2, r2, #27
 800ad24:	d40c      	bmi.n	800ad40 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad26:	f7fe fe8f 	bl	8009a48 <HAL_GetTick>
 800ad2a:	1b80      	subs	r0, r0, r6
 800ad2c:	4285      	cmp	r5, r0
 800ad2e:	d3e1      	bcc.n	800acf4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ad30:	6823      	ldr	r3, [r4, #0]
 800ad32:	695a      	ldr	r2, [r3, #20]
 800ad34:	0651      	lsls	r1, r2, #25
 800ad36:	d5f3      	bpl.n	800ad20 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad38:	691a      	ldr	r2, [r3, #16]
 800ad3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ad3c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ad3e:	e7a5      	b.n	800ac8c <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ad40:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ad42:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ad46:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ad48:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ad4a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ad4c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ad50:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ad54:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ad56:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ad58:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ad5c:	2701      	movs	r7, #1
 800ad5e:	e680      	b.n	800aa62 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ad60:	695a      	ldr	r2, [r3, #20]
 800ad62:	0652      	lsls	r2, r2, #25
 800ad64:	f53f af44 	bmi.w	800abf0 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ad68:	695a      	ldr	r2, [r3, #20]
 800ad6a:	06d1      	lsls	r1, r2, #27
 800ad6c:	d4e8      	bmi.n	800ad40 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad6e:	f7fe fe6b 	bl	8009a48 <HAL_GetTick>
 800ad72:	e7bf      	b.n	800acf4 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ad74:	695a      	ldr	r2, [r3, #20]
 800ad76:	0650      	lsls	r0, r2, #25
 800ad78:	d5f6      	bpl.n	800ad68 <HAL_I2C_Mem_Read+0x328>
 800ad7a:	e7dd      	b.n	800ad38 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad7c:	6823      	ldr	r3, [r4, #0]
 800ad7e:	6819      	ldr	r1, [r3, #0]
 800ad80:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ad84:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad86:	9003      	str	r0, [sp, #12]
 800ad88:	6959      	ldr	r1, [r3, #20]
 800ad8a:	9103      	str	r1, [sp, #12]
 800ad8c:	6999      	ldr	r1, [r3, #24]
 800ad8e:	9103      	str	r1, [sp, #12]
 800ad90:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad92:	6819      	ldr	r1, [r3, #0]
 800ad94:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ad98:	6019      	str	r1, [r3, #0]
 800ad9a:	e6cd      	b.n	800ab38 <HAL_I2C_Mem_Read+0xf8>

0800ad9c <HAL_I2C_MasterTxCpltCallback>:
 800ad9c:	4770      	bx	lr
 800ad9e:	bf00      	nop

0800ada0 <HAL_I2C_MasterRxCpltCallback>:
 800ada0:	4770      	bx	lr
 800ada2:	bf00      	nop

0800ada4 <HAL_I2C_SlaveTxCpltCallback>:
 800ada4:	4770      	bx	lr
 800ada6:	bf00      	nop

0800ada8 <HAL_I2C_SlaveRxCpltCallback>:
 800ada8:	4770      	bx	lr
 800adaa:	bf00      	nop

0800adac <HAL_I2C_AddrCallback>:
}
 800adac:	4770      	bx	lr
 800adae:	bf00      	nop

0800adb0 <HAL_I2C_ListenCpltCallback>:
 800adb0:	4770      	bx	lr
 800adb2:	bf00      	nop

0800adb4 <HAL_I2C_MemTxCpltCallback>:
 800adb4:	4770      	bx	lr
 800adb6:	bf00      	nop

0800adb8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adb8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800adbc:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800adbe:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800adc0:	b959      	cbnz	r1, 800adda <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800adc2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800adc4:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800adc6:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800adc8:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800adca:	d00d      	beq.n	800ade8 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800adcc:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800add0:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800add2:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800add4:	3201      	adds	r2, #1
 800add6:	6502      	str	r2, [r0, #80]	; 0x50
 800add8:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800adda:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800addc:	2901      	cmp	r1, #1
 800adde:	d009      	beq.n	800adf4 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ade0:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ade2:	2902      	cmp	r1, #2
 800ade4:	d00e      	beq.n	800ae04 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800ade6:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ade8:	b2d2      	uxtb	r2, r2
 800adea:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800adec:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800adee:	3202      	adds	r2, #2
 800adf0:	6502      	str	r2, [r0, #80]	; 0x50
 800adf2:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800adf4:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800adf6:	6801      	ldr	r1, [r0, #0]
 800adf8:	b2d2      	uxtb	r2, r2
 800adfa:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800adfc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800adfe:	3201      	adds	r2, #1
 800ae00:	6502      	str	r2, [r0, #80]	; 0x50
 800ae02:	4770      	bx	lr
 800ae04:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ae06:	2a22      	cmp	r2, #34	; 0x22
 800ae08:	d01f      	beq.n	800ae4a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ae0a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ae0c:	b289      	uxth	r1, r1
 800ae0e:	b9c1      	cbnz	r1, 800ae42 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ae10:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ae12:	b289      	uxth	r1, r1
 800ae14:	2900      	cmp	r1, #0
 800ae16:	d1e6      	bne.n	800ade6 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ae18:	2a21      	cmp	r2, #33	; 0x21
 800ae1a:	d1e4      	bne.n	800ade6 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae1c:	6802      	ldr	r2, [r0, #0]
{
 800ae1e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae20:	6854      	ldr	r4, [r2, #4]
 800ae22:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ae26:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae28:	6814      	ldr	r4, [r2, #0]
 800ae2a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ae2e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ae30:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae32:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ae34:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae38:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ae3c:	f7ff ffba 	bl	800adb4 <HAL_I2C_MemTxCpltCallback>
}
 800ae40:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ae42:	2a21      	cmp	r2, #33	; 0x21
 800ae44:	d00a      	beq.n	800ae5c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ae46:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ae48:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ae4a:	6801      	ldr	r1, [r0, #0]
 800ae4c:	680a      	ldr	r2, [r1, #0]
 800ae4e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ae52:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ae54:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ae56:	3201      	adds	r2, #1
 800ae58:	6502      	str	r2, [r0, #80]	; 0x50
 800ae5a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ae5c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ae5e:	6802      	ldr	r2, [r0, #0]
 800ae60:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ae64:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ae66:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ae68:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ae6a:	3a01      	subs	r2, #1
 800ae6c:	b292      	uxth	r2, r2
 800ae6e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ae70:	4770      	bx	lr
 800ae72:	bf00      	nop

0800ae74 <HAL_I2C_MemRxCpltCallback>:
 800ae74:	4770      	bx	lr
 800ae76:	bf00      	nop

0800ae78 <HAL_I2C_ErrorCallback>:
 800ae78:	4770      	bx	lr
 800ae7a:	bf00      	nop

0800ae7c <HAL_I2C_AbortCpltCallback>:
 800ae7c:	4770      	bx	lr
 800ae7e:	bf00      	nop

0800ae80 <I2C_DMAAbort>:
{
 800ae80:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae82:	4b3a      	ldr	r3, [pc, #232]	; (800af6c <I2C_DMAAbort+0xec>)
 800ae84:	4a3a      	ldr	r2, [pc, #232]	; (800af70 <I2C_DMAAbort+0xf0>)
 800ae86:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ae88:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800ae8a:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae8c:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800ae8e:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae90:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800ae94:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae96:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ae98:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ae9c:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae9e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800aea2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aea6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800aea8:	9301      	str	r3, [sp, #4]
 800aeaa:	e005      	b.n	800aeb8 <I2C_DMAAbort+0x38>
    count--;
 800aeac:	9b01      	ldr	r3, [sp, #4]
 800aeae:	3b01      	subs	r3, #1
 800aeb0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800aeb2:	6813      	ldr	r3, [r2, #0]
 800aeb4:	059b      	lsls	r3, r3, #22
 800aeb6:	d506      	bpl.n	800aec6 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800aeb8:	9b01      	ldr	r3, [sp, #4]
 800aeba:	2b00      	cmp	r3, #0
 800aebc:	d1f6      	bne.n	800aeac <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800aebe:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800aec0:	f043 0320 	orr.w	r3, r3, #32
 800aec4:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800aec6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800aec8:	b34c      	cbz	r4, 800af1e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800aeca:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800aecc:	2500      	movs	r5, #0
 800aece:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800aed0:	b1f3      	cbz	r3, 800af10 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aed2:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800aed4:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aed6:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800aeda:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800aedc:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800aede:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800aee0:	2400      	movs	r4, #0
 800aee2:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800aee4:	6813      	ldr	r3, [r2, #0]
 800aee6:	f023 0301 	bic.w	r3, r3, #1
 800aeea:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aeec:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800aef0:	2b60      	cmp	r3, #96	; 0x60
 800aef2:	d02a      	beq.n	800af4a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800aef4:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800aef8:	2928      	cmp	r1, #40	; 0x28
 800aefa:	d019      	beq.n	800af30 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800aefc:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aefe:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800af00:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af04:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800af08:	f7ff ffb6 	bl	800ae78 <HAL_I2C_ErrorCallback>
}
 800af0c:	b002      	add	sp, #8
 800af0e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af10:	6815      	ldr	r5, [r2, #0]
 800af12:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800af16:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800af18:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800af1a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800af1c:	e7e2      	b.n	800aee4 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800af1e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800af20:	b1f3      	cbz	r3, 800af60 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af22:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800af24:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af26:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800af2a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800af2c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800af2e:	e7d7      	b.n	800aee0 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800af30:	6813      	ldr	r3, [r2, #0]
 800af32:	f043 0301 	orr.w	r3, r3, #1
 800af36:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af38:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800af3a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af3c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800af40:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800af42:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800af44:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800af48:	e7de      	b.n	800af08 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800af4a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800af4c:	2220      	movs	r2, #32
 800af4e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800af52:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800af56:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800af58:	f7ff ff90 	bl	800ae7c <HAL_I2C_AbortCpltCallback>
}
 800af5c:	b002      	add	sp, #8
 800af5e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af60:	6814      	ldr	r4, [r2, #0]
 800af62:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800af66:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800af68:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800af6a:	e7bb      	b.n	800aee4 <I2C_DMAAbort+0x64>
 800af6c:	2000007c 	.word	0x2000007c
 800af70:	14f8b589 	.word	0x14f8b589

0800af74 <I2C_ITError>:
{
 800af74:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af76:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800af7a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af7e:	2b10      	cmp	r3, #16
{
 800af80:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af82:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af84:	d039      	beq.n	800affa <I2C_ITError+0x86>
 800af86:	b2d9      	uxtb	r1, r3
 800af88:	2940      	cmp	r1, #64	; 0x40
 800af8a:	d036      	beq.n	800affa <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800af8c:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800af90:	2928      	cmp	r1, #40	; 0x28
 800af92:	d03d      	beq.n	800b010 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af94:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800af96:	6859      	ldr	r1, [r3, #4]
 800af98:	0508      	lsls	r0, r1, #20
 800af9a:	d407      	bmi.n	800afac <I2C_ITError+0x38>
 800af9c:	2a60      	cmp	r2, #96	; 0x60
 800af9e:	d005      	beq.n	800afac <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800afa0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800afa2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800afa4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800afa8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800afac:	2200      	movs	r2, #0
 800afae:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800afb0:	685a      	ldr	r2, [r3, #4]
 800afb2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800afb6:	d134      	bne.n	800b022 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800afb8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800afbc:	2960      	cmp	r1, #96	; 0x60
 800afbe:	d075      	beq.n	800b0ac <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afc0:	695a      	ldr	r2, [r3, #20]
 800afc2:	0650      	lsls	r0, r2, #25
 800afc4:	d505      	bpl.n	800afd2 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afc8:	691b      	ldr	r3, [r3, #16]
 800afca:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800afcc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800afce:	3301      	adds	r3, #1
 800afd0:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800afd2:	4620      	mov	r0, r4
 800afd4:	f7ff ff50 	bl	800ae78 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800afd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800afda:	0719      	lsls	r1, r3, #28
 800afdc:	d004      	beq.n	800afe8 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800afde:	6822      	ldr	r2, [r4, #0]
 800afe0:	6853      	ldr	r3, [r2, #4]
 800afe2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800afe6:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800afe8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800afec:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800afee:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800aff0:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800aff2:	d501      	bpl.n	800aff8 <I2C_ITError+0x84>
 800aff4:	2b28      	cmp	r3, #40	; 0x28
 800aff6:	d02f      	beq.n	800b058 <I2C_ITError+0xe4>
}
 800aff8:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800affa:	2a22      	cmp	r2, #34	; 0x22
 800affc:	d1c6      	bne.n	800af8c <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800affe:	6823      	ldr	r3, [r4, #0]
 800b000:	681a      	ldr	r2, [r3, #0]
 800b002:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b006:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800b008:	685a      	ldr	r2, [r3, #4]
 800b00a:	0512      	lsls	r2, r2, #20
 800b00c:	d5c8      	bpl.n	800afa0 <I2C_ITError+0x2c>
 800b00e:	e7cd      	b.n	800afac <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b010:	2300      	movs	r3, #0
 800b012:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800b014:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800b016:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b01a:	685a      	ldr	r2, [r3, #4]
 800b01c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b020:	d0ca      	beq.n	800afb8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b022:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b024:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800b026:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b02a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800b02c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800b030:	2b01      	cmp	r3, #1
 800b032:	d01e      	beq.n	800b072 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b034:	4b28      	ldr	r3, [pc, #160]	; (800b0d8 <I2C_ITError+0x164>)
 800b036:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b038:	f7fe fd90 	bl	8009b5c <HAL_DMA_Abort_IT>
 800b03c:	2800      	cmp	r0, #0
 800b03e:	d0cb      	beq.n	800afd8 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800b040:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b042:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800b044:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b046:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b048:	f023 0301 	bic.w	r3, r3, #1
 800b04c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b04e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b052:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b054:	4798      	blx	r3
 800b056:	e7bf      	b.n	800afd8 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800b058:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800b05a:	4920      	ldr	r1, [pc, #128]	; (800b0dc <I2C_ITError+0x168>)
 800b05c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800b05e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800b060:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800b062:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800b064:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b068:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800b06c:	f7ff fea0 	bl	800adb0 <HAL_I2C_ListenCpltCallback>
}
 800b070:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b072:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b074:	4b18      	ldr	r3, [pc, #96]	; (800b0d8 <I2C_ITError+0x164>)
 800b076:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b078:	f7fe fd70 	bl	8009b5c <HAL_DMA_Abort_IT>
 800b07c:	2800      	cmp	r0, #0
 800b07e:	d0ab      	beq.n	800afd8 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b080:	6823      	ldr	r3, [r4, #0]
 800b082:	695a      	ldr	r2, [r3, #20]
 800b084:	0651      	lsls	r1, r2, #25
 800b086:	d506      	bpl.n	800b096 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b088:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b08a:	691b      	ldr	r3, [r3, #16]
 800b08c:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800b08e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b090:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800b092:	3201      	adds	r2, #1
 800b094:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800b096:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b098:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800b09a:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b09e:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800b0a0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800b0a2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b0a6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b0a8:	4798      	blx	r3
 800b0aa:	e795      	b.n	800afd8 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800b0ac:	2120      	movs	r1, #32
 800b0ae:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b0b2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b0b4:	695a      	ldr	r2, [r3, #20]
 800b0b6:	0652      	lsls	r2, r2, #25
 800b0b8:	d506      	bpl.n	800b0c8 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b0ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b0bc:	691b      	ldr	r3, [r3, #16]
 800b0be:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800b0c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b0c2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b0c4:	3201      	adds	r2, #1
 800b0c6:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800b0c8:	681a      	ldr	r2, [r3, #0]
 800b0ca:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800b0ce:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800b0d0:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800b0d2:	f7ff fed3 	bl	800ae7c <HAL_I2C_AbortCpltCallback>
 800b0d6:	e77f      	b.n	800afd8 <I2C_ITError+0x64>
 800b0d8:	0800ae81 	.word	0x0800ae81
 800b0dc:	ffff0000 	.word	0xffff0000

0800b0e0 <HAL_I2C_EV_IRQHandler>:
{
 800b0e0:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b0e2:	6803      	ldr	r3, [r0, #0]
{
 800b0e4:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b0e6:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b0e8:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b0ea:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0ee:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b0f2:	2910      	cmp	r1, #16
{
 800b0f4:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0f6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b0f8:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b0fc:	d022      	beq.n	800b144 <HAL_I2C_EV_IRQHandler+0x64>
 800b0fe:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b102:	d01f      	beq.n	800b144 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b104:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b106:	2900      	cmp	r1, #0
 800b108:	f000 8094 	beq.w	800b234 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b10c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b10e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b110:	f011 0602 	ands.w	r6, r1, #2
 800b114:	d059      	beq.n	800b1ca <HAL_I2C_EV_IRQHandler+0xea>
 800b116:	0586      	lsls	r6, r0, #22
 800b118:	d559      	bpl.n	800b1ce <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b11a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b11c:	b102      	cbz	r2, 800b120 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b11e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b120:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b124:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b128:	2a28      	cmp	r2, #40	; 0x28
 800b12a:	f000 821e 	beq.w	800b56a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b12e:	2200      	movs	r2, #0
 800b130:	920c      	str	r2, [sp, #48]	; 0x30
 800b132:	6959      	ldr	r1, [r3, #20]
 800b134:	910c      	str	r1, [sp, #48]	; 0x30
 800b136:	699b      	ldr	r3, [r3, #24]
 800b138:	930c      	str	r3, [sp, #48]	; 0x30
 800b13a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b13c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b140:	b00e      	add	sp, #56	; 0x38
 800b142:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b144:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b146:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b148:	f011 0f01 	tst.w	r1, #1
 800b14c:	d11a      	bne.n	800b184 <HAL_I2C_EV_IRQHandler+0xa4>
 800b14e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b152:	d0f5      	beq.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b154:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b158:	d0f2      	beq.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b15a:	070d      	lsls	r5, r1, #28
 800b15c:	d56d      	bpl.n	800b23a <HAL_I2C_EV_IRQHandler+0x15a>
 800b15e:	0585      	lsls	r5, r0, #22
 800b160:	f140 8083 	bpl.w	800b26a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b164:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b166:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b168:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b16a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b16c:	2900      	cmp	r1, #0
 800b16e:	f000 81e3 	beq.w	800b538 <HAL_I2C_EV_IRQHandler+0x458>
 800b172:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b174:	2a00      	cmp	r2, #0
 800b176:	f000 81df 	beq.w	800b538 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b17a:	685a      	ldr	r2, [r3, #4]
 800b17c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b180:	605a      	str	r2, [r3, #4]
 800b182:	e7dd      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b184:	0585      	lsls	r5, r0, #22
 800b186:	d56e      	bpl.n	800b266 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b188:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b18a:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b18e:	f000 81e9 	beq.w	800b564 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b192:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b194:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b198:	bf04      	itt	eq
 800b19a:	2208      	moveq	r2, #8
 800b19c:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b19e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b1a2:	2a40      	cmp	r2, #64	; 0x40
 800b1a4:	f000 81d7 	beq.w	800b556 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b1a8:	6922      	ldr	r2, [r4, #16]
 800b1aa:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b1ae:	f000 81b2 	beq.w	800b516 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b1b2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b1b4:	2a00      	cmp	r2, #0
 800b1b6:	f040 81ef 	bne.w	800b598 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b1ba:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b1bc:	11d2      	asrs	r2, r2, #7
 800b1be:	f002 0206 	and.w	r2, r2, #6
 800b1c2:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b1c6:	611a      	str	r2, [r3, #16]
 800b1c8:	e7ba      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b1ca:	06cd      	lsls	r5, r1, #27
 800b1cc:	d47c      	bmi.n	800b2c8 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b1ce:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b1d2:	2a21      	cmp	r2, #33	; 0x21
 800b1d4:	f000 80f5 	beq.w	800b3c2 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b1d8:	064e      	lsls	r6, r1, #25
 800b1da:	f140 8132 	bpl.w	800b442 <HAL_I2C_EV_IRQHandler+0x362>
 800b1de:	0545      	lsls	r5, r0, #21
 800b1e0:	f140 812f 	bpl.w	800b442 <HAL_I2C_EV_IRQHandler+0x362>
 800b1e4:	0749      	lsls	r1, r1, #29
 800b1e6:	f100 812f 	bmi.w	800b448 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ea:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b1ee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1f0:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1f2:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b1f4:	2a00      	cmp	r2, #0
 800b1f6:	d0a3      	beq.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b1fa:	691b      	ldr	r3, [r3, #16]
 800b1fc:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b1fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b200:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b202:	3b01      	subs	r3, #1
 800b204:	b29b      	uxth	r3, r3
 800b206:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b208:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b20a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b20c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b20e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b210:	2b00      	cmp	r3, #0
 800b212:	d195      	bne.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b214:	292a      	cmp	r1, #42	; 0x2a
 800b216:	d193      	bne.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b218:	6822      	ldr	r2, [r4, #0]
 800b21a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b21c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b21e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b220:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b224:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b226:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b228:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b22a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b22e:	f7ff fdbb 	bl	800ada8 <HAL_I2C_SlaveRxCpltCallback>
 800b232:	e785      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b234:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b236:	6959      	ldr	r1, [r3, #20]
 800b238:	e76a      	b.n	800b110 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b23a:	078d      	lsls	r5, r1, #30
 800b23c:	d515      	bpl.n	800b26a <HAL_I2C_EV_IRQHandler+0x18a>
 800b23e:	0585      	lsls	r5, r0, #22
 800b240:	d513      	bpl.n	800b26a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b242:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b246:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b248:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b24a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b24e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b250:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b252:	f000 81b3 	beq.w	800b5bc <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b256:	2200      	movs	r2, #0
 800b258:	920a      	str	r2, [sp, #40]	; 0x28
 800b25a:	695a      	ldr	r2, [r3, #20]
 800b25c:	920a      	str	r2, [sp, #40]	; 0x28
 800b25e:	699b      	ldr	r3, [r3, #24]
 800b260:	930a      	str	r3, [sp, #40]	; 0x28
 800b262:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b264:	e76c      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b266:	070d      	lsls	r5, r1, #28
 800b268:	d5e7      	bpl.n	800b23a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b26a:	0776      	lsls	r6, r6, #29
 800b26c:	f140 80f5 	bpl.w	800b45a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b270:	685d      	ldr	r5, [r3, #4]
 800b272:	052d      	lsls	r5, r5, #20
 800b274:	f53f af64 	bmi.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b278:	060e      	lsls	r6, r1, #24
 800b27a:	f140 8115 	bpl.w	800b4a8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b27e:	0545      	lsls	r5, r0, #21
 800b280:	f140 8112 	bpl.w	800b4a8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b284:	074e      	lsls	r6, r1, #29
 800b286:	f100 8112 	bmi.w	800b4ae <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b28a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b28e:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b290:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b294:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b296:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b298:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b29a:	2800      	cmp	r0, #0
 800b29c:	f040 8235 	bne.w	800b70a <HAL_I2C_EV_IRQHandler+0x62a>
 800b2a0:	2a21      	cmp	r2, #33	; 0x21
 800b2a2:	f000 8347 	beq.w	800b934 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b2a6:	2940      	cmp	r1, #64	; 0x40
 800b2a8:	f47f af4a 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b2ac:	2a22      	cmp	r2, #34	; 0x22
 800b2ae:	f47f af47 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b2b2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2b4:	b292      	uxth	r2, r2
 800b2b6:	2a00      	cmp	r2, #0
 800b2b8:	f000 8268 	beq.w	800b78c <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b2bc:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b2c0:	2a40      	cmp	r2, #64	; 0x40
 800b2c2:	f040 80b4 	bne.w	800b42e <HAL_I2C_EV_IRQHandler+0x34e>
 800b2c6:	e0fc      	b.n	800b4c2 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b2c8:	0585      	lsls	r5, r0, #22
 800b2ca:	d580      	bpl.n	800b1ce <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2cc:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b2d0:	685a      	ldr	r2, [r3, #4]
 800b2d2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b2d6:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b2d8:	960d      	str	r6, [sp, #52]	; 0x34
 800b2da:	695a      	ldr	r2, [r3, #20]
 800b2dc:	920d      	str	r2, [sp, #52]	; 0x34
 800b2de:	681a      	ldr	r2, [r3, #0]
 800b2e0:	f042 0201 	orr.w	r2, r2, #1
 800b2e4:	601a      	str	r2, [r3, #0]
 800b2e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b2e8:	681a      	ldr	r2, [r3, #0]
 800b2ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b2ee:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b2f0:	685a      	ldr	r2, [r3, #4]
 800b2f2:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2f4:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b2f6:	d521      	bpl.n	800b33c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b2f8:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b2fc:	2a22      	cmp	r2, #34	; 0x22
 800b2fe:	f000 817a 	beq.w	800b5f6 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b302:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b304:	6802      	ldr	r2, [r0, #0]
 800b306:	6852      	ldr	r2, [r2, #4]
 800b308:	b292      	uxth	r2, r2
 800b30a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b30c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b30e:	b292      	uxth	r2, r2
 800b310:	b11a      	cbz	r2, 800b31a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b312:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b314:	f042 0204 	orr.w	r2, r2, #4
 800b318:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b31a:	685a      	ldr	r2, [r3, #4]
 800b31c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b320:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b322:	f7fe fc2d 	bl	8009b80 <HAL_DMA_GetState>
 800b326:	2801      	cmp	r0, #1
 800b328:	d008      	beq.n	800b33c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b32a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b32c:	4b99      	ldr	r3, [pc, #612]	; (800b594 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b32e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b330:	f7fe fc14 	bl	8009b5c <HAL_DMA_Abort_IT>
 800b334:	b110      	cbz	r0, 800b33c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b336:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b338:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b33a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b33c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b33e:	b29b      	uxth	r3, r3
 800b340:	b313      	cbz	r3, 800b388 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b342:	6823      	ldr	r3, [r4, #0]
 800b344:	695a      	ldr	r2, [r3, #20]
 800b346:	0752      	lsls	r2, r2, #29
 800b348:	d50a      	bpl.n	800b360 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b34a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b34c:	691b      	ldr	r3, [r3, #16]
 800b34e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b350:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b352:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b354:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b356:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b358:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b35a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b35c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b35e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b360:	695a      	ldr	r2, [r3, #20]
 800b362:	0656      	lsls	r6, r2, #25
 800b364:	d509      	bpl.n	800b37a <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b366:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b368:	691b      	ldr	r3, [r3, #16]
 800b36a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b36c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b36e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b370:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b372:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b374:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b376:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b378:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b37a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b37c:	b29b      	uxth	r3, r3
 800b37e:	b11b      	cbz	r3, 800b388 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b380:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b382:	f043 0304 	orr.w	r3, r3, #4
 800b386:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b388:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b38a:	2b00      	cmp	r3, #0
 800b38c:	f040 80dd 	bne.w	800b54a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b390:	2d2a      	cmp	r5, #42	; 0x2a
 800b392:	f000 8151 	beq.w	800b638 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b396:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b39a:	2b28      	cmp	r3, #40	; 0x28
 800b39c:	f000 8154 	beq.w	800b648 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b3a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b3a2:	2b22      	cmp	r3, #34	; 0x22
 800b3a4:	d002      	beq.n	800b3ac <HAL_I2C_EV_IRQHandler+0x2cc>
 800b3a6:	2d22      	cmp	r5, #34	; 0x22
 800b3a8:	f47f aeca 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b3ac:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b3ae:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b3b0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b3b2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b3b4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b3b8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b3bc:	f7ff fcf4 	bl	800ada8 <HAL_I2C_SlaveRxCpltCallback>
 800b3c0:	e6be      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3c2:	060d      	lsls	r5, r1, #24
 800b3c4:	d528      	bpl.n	800b418 <HAL_I2C_EV_IRQHandler+0x338>
 800b3c6:	0546      	lsls	r6, r0, #21
 800b3c8:	d526      	bpl.n	800b418 <HAL_I2C_EV_IRQHandler+0x338>
 800b3ca:	074d      	lsls	r5, r1, #29
 800b3cc:	d427      	bmi.n	800b41e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3ce:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b3d2:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b3d4:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b3d6:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b3d8:	2900      	cmp	r1, #0
 800b3da:	f43f aeb1 	beq.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b3de:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b3e0:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b3e4:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b3e6:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3e8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b3ea:	3901      	subs	r1, #1
 800b3ec:	b289      	uxth	r1, r1
 800b3ee:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b3f0:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b3f2:	b289      	uxth	r1, r1
 800b3f4:	2900      	cmp	r1, #0
 800b3f6:	f47f aea3 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b3fa:	2829      	cmp	r0, #41	; 0x29
 800b3fc:	f47f aea0 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b400:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b402:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b404:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b408:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b40a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b40c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b40e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b412:	f7ff fcc7 	bl	800ada4 <HAL_I2C_SlaveTxCpltCallback>
 800b416:	e693      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b418:	0749      	lsls	r1, r1, #29
 800b41a:	f57f ae91 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b41e:	0582      	lsls	r2, r0, #22
 800b420:	f57f ae8e 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b424:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b426:	b292      	uxth	r2, r2
 800b428:	2a00      	cmp	r2, #0
 800b42a:	f43f ae89 	beq.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b42e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b430:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b434:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b436:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b438:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b43a:	3b01      	subs	r3, #1
 800b43c:	b29b      	uxth	r3, r3
 800b43e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b440:	e67e      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b442:	074a      	lsls	r2, r1, #29
 800b444:	f57f ae7c 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b448:	0586      	lsls	r6, r0, #22
 800b44a:	f57f ae79 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b44e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b450:	b292      	uxth	r2, r2
 800b452:	2a00      	cmp	r2, #0
 800b454:	f43f ae74 	beq.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b458:	e01b      	b.n	800b492 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b45a:	685a      	ldr	r2, [r3, #4]
 800b45c:	0512      	lsls	r2, r2, #20
 800b45e:	f53f ae6f 	bmi.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b462:	064e      	lsls	r6, r1, #25
 800b464:	d433      	bmi.n	800b4ce <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b466:	0749      	lsls	r1, r1, #29
 800b468:	f57f ae6a 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b46c:	0582      	lsls	r2, r0, #22
 800b46e:	f57f ae67 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b472:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b474:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b476:	b292      	uxth	r2, r2
 800b478:	2a04      	cmp	r2, #4
 800b47a:	f000 8113 	beq.w	800b6a4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b47e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b480:	b292      	uxth	r2, r2
 800b482:	2a03      	cmp	r2, #3
 800b484:	f000 8153 	beq.w	800b72e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b488:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b48a:	b292      	uxth	r2, r2
 800b48c:	2a02      	cmp	r2, #2
 800b48e:	f000 8182 	beq.w	800b796 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b492:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b494:	691b      	ldr	r3, [r3, #16]
 800b496:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b498:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b49a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b49c:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b49e:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b4a0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b4a2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b4a4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b4a6:	e64b      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b4a8:	074d      	lsls	r5, r1, #29
 800b4aa:	f57f ae49 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b4ae:	0581      	lsls	r1, r0, #22
 800b4b0:	f57f ae46 	bpl.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b4b4:	2a21      	cmp	r2, #33	; 0x21
 800b4b6:	f000 80fd 	beq.w	800b6b4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b4ba:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b4be:	f47f ae3f 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b4c2:	4620      	mov	r0, r4
}
 800b4c4:	b00e      	add	sp, #56	; 0x38
 800b4c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b4ca:	f7ff bc75 	b.w	800adb8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b4ce:	0545      	lsls	r5, r0, #21
 800b4d0:	d5c9      	bpl.n	800b466 <HAL_I2C_EV_IRQHandler+0x386>
 800b4d2:	f011 0104 	ands.w	r1, r1, #4
 800b4d6:	d1c9      	bne.n	800b46c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b4d8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b4dc:	2a22      	cmp	r2, #34	; 0x22
 800b4de:	f47f ae2f 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b4e2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b4e4:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b4e6:	2a03      	cmp	r2, #3
 800b4e8:	f240 81ec 	bls.w	800b8c4 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b4ec:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b4ee:	691b      	ldr	r3, [r3, #16]
 800b4f0:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b4f2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b4f4:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b4f6:	3b01      	subs	r3, #1
 800b4f8:	b29b      	uxth	r3, r3
 800b4fa:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b4fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b4fe:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b500:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b502:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b504:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b506:	f47f ae1b 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b50a:	6822      	ldr	r2, [r4, #0]
 800b50c:	6853      	ldr	r3, [r2, #4]
 800b50e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b512:	6053      	str	r3, [r2, #4]
 800b514:	e614      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b516:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b51a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b51c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b51e:	bf16      	itet	ne
 800b520:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b524:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b528:	b2d2      	uxtbne	r2, r2
 800b52a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b52c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b52e:	b11a      	cbz	r2, 800b538 <HAL_I2C_EV_IRQHandler+0x458>
 800b530:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b532:	2a00      	cmp	r2, #0
 800b534:	f47f ae21 	bne.w	800b17a <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b538:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b53a:	2a00      	cmp	r2, #0
 800b53c:	f43f ae00 	beq.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b540:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b542:	2a00      	cmp	r2, #0
 800b544:	f47f ae19 	bne.w	800b17a <HAL_I2C_EV_IRQHandler+0x9a>
 800b548:	e5fa      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b54a:	4620      	mov	r0, r4
}
 800b54c:	b00e      	add	sp, #56	; 0x38
 800b54e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b552:	f7ff bd0f 	b.w	800af74 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b556:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b558:	bb52      	cbnz	r2, 800b5b0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b55a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b55c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b560:	611a      	str	r2, [r3, #16]
 800b562:	e5ed      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b564:	2201      	movs	r2, #1
 800b566:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b568:	e619      	b.n	800b19e <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b56a:	685a      	ldr	r2, [r3, #4]
 800b56c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b570:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b572:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b574:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b578:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b57c:	bf54      	ite	pl
 800b57e:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b580:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b582:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b586:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b58a:	4620      	mov	r0, r4
 800b58c:	f7ff fc0e 	bl	800adac <HAL_I2C_AddrCallback>
 800b590:	e5d6      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800b592:	bf00      	nop
 800b594:	0800ae81 	.word	0x0800ae81
      else if (hi2c->EventCount == 1U)
 800b598:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b59a:	2a01      	cmp	r2, #1
 800b59c:	f47f add0 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b5a0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b5a2:	11d2      	asrs	r2, r2, #7
 800b5a4:	f002 0206 	and.w	r2, r2, #6
 800b5a8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b5ac:	611a      	str	r2, [r3, #16]
 800b5ae:	e5c7      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b5b0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b5b2:	f042 0201 	orr.w	r2, r2, #1
 800b5b6:	b2d2      	uxtb	r2, r2
 800b5b8:	611a      	str	r2, [r3, #16]
 800b5ba:	e5c1      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b5bc:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b5be:	b911      	cbnz	r1, 800b5c6 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b5c0:	2a40      	cmp	r2, #64	; 0x40
 800b5c2:	f000 809b 	beq.w	800b6fc <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b5c6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b5c8:	b922      	cbnz	r2, 800b5d4 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b5ca:	6921      	ldr	r1, [r4, #16]
 800b5cc:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b5d0:	f000 809f 	beq.w	800b712 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b5d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5d6:	b292      	uxth	r2, r2
 800b5d8:	2a00      	cmp	r2, #0
 800b5da:	d142      	bne.n	800b662 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5dc:	9203      	str	r2, [sp, #12]
 800b5de:	695a      	ldr	r2, [r3, #20]
 800b5e0:	9203      	str	r2, [sp, #12]
 800b5e2:	699a      	ldr	r2, [r3, #24]
 800b5e4:	9203      	str	r2, [sp, #12]
 800b5e6:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b5e8:	681a      	ldr	r2, [r3, #0]
 800b5ea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b5ee:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b5f0:	2300      	movs	r3, #0
 800b5f2:	6523      	str	r3, [r4, #80]	; 0x50
 800b5f4:	e5a4      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b5f6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b5f8:	6802      	ldr	r2, [r0, #0]
 800b5fa:	6852      	ldr	r2, [r2, #4]
 800b5fc:	b292      	uxth	r2, r2
 800b5fe:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b600:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b602:	b292      	uxth	r2, r2
 800b604:	b11a      	cbz	r2, 800b60e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b606:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b608:	f042 0204 	orr.w	r2, r2, #4
 800b60c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b60e:	685a      	ldr	r2, [r3, #4]
 800b610:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b614:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b616:	f7fe fab3 	bl	8009b80 <HAL_DMA_GetState>
 800b61a:	2801      	cmp	r0, #1
 800b61c:	f43f ae8e 	beq.w	800b33c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b620:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b622:	4b98      	ldr	r3, [pc, #608]	; (800b884 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b624:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b626:	f7fe fa99 	bl	8009b5c <HAL_DMA_Abort_IT>
 800b62a:	2800      	cmp	r0, #0
 800b62c:	f43f ae86 	beq.w	800b33c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b630:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b632:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b634:	4798      	blx	r3
 800b636:	e681      	b.n	800b33c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b638:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b63a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b63c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b63e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b642:	f7ff fbb1 	bl	800ada8 <HAL_I2C_SlaveRxCpltCallback>
 800b646:	e6a6      	b.n	800b396 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b648:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b64a:	498f      	ldr	r1, [pc, #572]	; (800b888 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b64c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b64e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b650:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b652:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b654:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b658:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b65c:	f7ff fba8 	bl	800adb0 <HAL_I2C_ListenCpltCallback>
 800b660:	e56e      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b662:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b664:	b292      	uxth	r2, r2
 800b666:	2a01      	cmp	r2, #1
 800b668:	d070      	beq.n	800b74c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b66a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b66c:	b292      	uxth	r2, r2
 800b66e:	2a02      	cmp	r2, #2
 800b670:	f000 80d6 	beq.w	800b820 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b674:	681a      	ldr	r2, [r3, #0]
 800b676:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b67a:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b67c:	685a      	ldr	r2, [r3, #4]
 800b67e:	0511      	lsls	r1, r2, #20
 800b680:	d508      	bpl.n	800b694 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b682:	2820      	cmp	r0, #32
 800b684:	f200 80f8 	bhi.w	800b878 <HAL_I2C_EV_IRQHandler+0x798>
 800b688:	2807      	cmp	r0, #7
 800b68a:	f200 80ea 	bhi.w	800b862 <HAL_I2C_EV_IRQHandler+0x782>
 800b68e:	2801      	cmp	r0, #1
 800b690:	f000 80ed 	beq.w	800b86e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b694:	2200      	movs	r2, #0
 800b696:	9209      	str	r2, [sp, #36]	; 0x24
 800b698:	695a      	ldr	r2, [r3, #20]
 800b69a:	9209      	str	r2, [sp, #36]	; 0x24
 800b69c:	699b      	ldr	r3, [r3, #24]
 800b69e:	9309      	str	r3, [sp, #36]	; 0x24
 800b6a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b6a2:	e7a5      	b.n	800b5f0 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6a4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6a6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6a8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6ac:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6ae:	691b      	ldr	r3, [r3, #16]
 800b6b0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b6b2:	e6f1      	b.n	800b498 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b6b4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b6b6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b6ba:	2a21      	cmp	r2, #33	; 0x21
 800b6bc:	f47f ad40 	bne.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b6c0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b6c2:	b292      	uxth	r2, r2
 800b6c4:	2a00      	cmp	r2, #0
 800b6c6:	f47f aeb2 	bne.w	800b42e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b6ca:	2908      	cmp	r1, #8
 800b6cc:	f000 80e2 	beq.w	800b894 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b6d0:	2920      	cmp	r1, #32
 800b6d2:	f000 80df 	beq.w	800b894 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b6d6:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b6da:	f000 80db 	beq.w	800b894 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b6de:	6859      	ldr	r1, [r3, #4]
 800b6e0:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b6e4:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b6e6:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b6e8:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b6ea:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b6ec:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b6f0:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b6f2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b6f6:	f7ff fb51 	bl	800ad9c <HAL_I2C_MasterTxCpltCallback>
 800b6fa:	e521      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b6fc:	9101      	str	r1, [sp, #4]
 800b6fe:	695a      	ldr	r2, [r3, #20]
 800b700:	9201      	str	r2, [sp, #4]
 800b702:	699b      	ldr	r3, [r3, #24]
 800b704:	9301      	str	r3, [sp, #4]
 800b706:	9b01      	ldr	r3, [sp, #4]
 800b708:	e51a      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b70a:	2a21      	cmp	r2, #33	; 0x21
 800b70c:	f43f add1 	beq.w	800b2b2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b710:	e5c9      	b.n	800b2a6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b712:	9202      	str	r2, [sp, #8]
 800b714:	695a      	ldr	r2, [r3, #20]
 800b716:	9202      	str	r2, [sp, #8]
 800b718:	699a      	ldr	r2, [r3, #24]
 800b71a:	9202      	str	r2, [sp, #8]
 800b71c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b71e:	681a      	ldr	r2, [r3, #0]
 800b720:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b724:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b726:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b728:	3301      	adds	r3, #1
 800b72a:	6523      	str	r3, [r4, #80]	; 0x50
 800b72c:	e508      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b72e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b730:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b732:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b736:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b738:	f43f aeab 	beq.w	800b492 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b73c:	2902      	cmp	r1, #2
 800b73e:	f43f aea8 	beq.w	800b492 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b742:	681a      	ldr	r2, [r3, #0]
 800b744:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b748:	601a      	str	r2, [r3, #0]
 800b74a:	e6a2      	b.n	800b492 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b74c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b750:	f000 811b 	beq.w	800b98a <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b754:	2808      	cmp	r0, #8
 800b756:	f000 8108 	beq.w	800b96a <HAL_I2C_EV_IRQHandler+0x88a>
 800b75a:	2820      	cmp	r0, #32
 800b75c:	f000 8105 	beq.w	800b96a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b760:	2d12      	cmp	r5, #18
 800b762:	f000 80ff 	beq.w	800b964 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b766:	2810      	cmp	r0, #16
 800b768:	d804      	bhi.n	800b774 <HAL_I2C_EV_IRQHandler+0x694>
 800b76a:	4a48      	ldr	r2, [pc, #288]	; (800b88c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b76c:	40c2      	lsrs	r2, r0
 800b76e:	07d1      	lsls	r1, r2, #31
 800b770:	f100 814c 	bmi.w	800ba0c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b774:	681a      	ldr	r2, [r3, #0]
 800b776:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b77a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b77c:	2200      	movs	r2, #0
 800b77e:	9206      	str	r2, [sp, #24]
 800b780:	695a      	ldr	r2, [r3, #20]
 800b782:	9206      	str	r2, [sp, #24]
 800b784:	699b      	ldr	r3, [r3, #24]
 800b786:	9306      	str	r3, [sp, #24]
 800b788:	9b06      	ldr	r3, [sp, #24]
 800b78a:	e731      	b.n	800b5f0 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b78c:	685a      	ldr	r2, [r3, #4]
 800b78e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b792:	605a      	str	r2, [r3, #4]
 800b794:	e4d4      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b796:	3901      	subs	r1, #1
 800b798:	290f      	cmp	r1, #15
 800b79a:	d809      	bhi.n	800b7b0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b79c:	e8df f001 	tbb	[pc, r1]
 800b7a0:	3608363b 	.word	0x3608363b
 800b7a4:	08080808 	.word	0x08080808
 800b7a8:	08080808 	.word	0x08080808
 800b7ac:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7b0:	681a      	ldr	r2, [r3, #0]
 800b7b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b7b6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b7ba:	691b      	ldr	r3, [r3, #16]
 800b7bc:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b7be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b7c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7c2:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b7c4:	3b01      	subs	r3, #1
 800b7c6:	b29b      	uxth	r3, r3
 800b7c8:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7ca:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b7cc:	1c51      	adds	r1, r2, #1
 800b7ce:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b7d0:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b7d2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b7d4:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b7d6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b7d8:	3b01      	subs	r3, #1
 800b7da:	b29b      	uxth	r3, r3
 800b7dc:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b7de:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b7e0:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b7e2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b7e6:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b7e8:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b7ea:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b7ec:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7f0:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b7f4:	2b40      	cmp	r3, #64	; 0x40
 800b7f6:	f000 80f5 	beq.w	800b9e4 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7fa:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b7fc:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7fe:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b802:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b804:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b806:	f7ff facb 	bl	800ada0 <HAL_I2C_MasterRxCpltCallback>
 800b80a:	e499      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b80c:	681a      	ldr	r2, [r3, #0]
 800b80e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b812:	601a      	str	r2, [r3, #0]
 800b814:	e7d0      	b.n	800b7b8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b816:	681a      	ldr	r2, [r3, #0]
 800b818:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b81c:	601a      	str	r2, [r3, #0]
 800b81e:	e7cb      	b.n	800b7b8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b820:	2810      	cmp	r0, #16
 800b822:	d804      	bhi.n	800b82e <HAL_I2C_EV_IRQHandler+0x74e>
 800b824:	4a19      	ldr	r2, [pc, #100]	; (800b88c <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b826:	40c2      	lsrs	r2, r0
 800b828:	07d2      	lsls	r2, r2, #31
 800b82a:	f100 80c2 	bmi.w	800b9b2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b82e:	681a      	ldr	r2, [r3, #0]
 800b830:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b834:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b836:	681a      	ldr	r2, [r3, #0]
 800b838:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b83c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b83e:	685a      	ldr	r2, [r3, #4]
 800b840:	0516      	lsls	r6, r2, #20
 800b842:	d506      	bpl.n	800b852 <HAL_I2C_EV_IRQHandler+0x772>
 800b844:	2820      	cmp	r0, #32
 800b846:	f240 80bc 	bls.w	800b9c2 <HAL_I2C_EV_IRQHandler+0x8e2>
 800b84a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b84e:	f000 80bd 	beq.w	800b9cc <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b852:	2200      	movs	r2, #0
 800b854:	9208      	str	r2, [sp, #32]
 800b856:	695a      	ldr	r2, [r3, #20]
 800b858:	9208      	str	r2, [sp, #32]
 800b85a:	699b      	ldr	r3, [r3, #24]
 800b85c:	9308      	str	r3, [sp, #32]
 800b85e:	9b08      	ldr	r3, [sp, #32]
 800b860:	e6c6      	b.n	800b5f0 <HAL_I2C_EV_IRQHandler+0x510>
 800b862:	4a0b      	ldr	r2, [pc, #44]	; (800b890 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b864:	3808      	subs	r0, #8
 800b866:	40c2      	lsrs	r2, r0
 800b868:	07d2      	lsls	r2, r2, #31
 800b86a:	f57f af13 	bpl.w	800b694 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b86e:	685a      	ldr	r2, [r3, #4]
 800b870:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b874:	605a      	str	r2, [r3, #4]
 800b876:	e70d      	b.n	800b694 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b878:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b87c:	f47f af0a 	bne.w	800b694 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b880:	e7f5      	b.n	800b86e <HAL_I2C_EV_IRQHandler+0x78e>
 800b882:	bf00      	nop
 800b884:	0800ae81 	.word	0x0800ae81
 800b888:	ffff0000 	.word	0xffff0000
 800b88c:	00010014 	.word	0x00010014
 800b890:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b894:	6859      	ldr	r1, [r3, #4]
 800b896:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b89a:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b89c:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b89e:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b8a0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8a2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b8a6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b8a8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b8aa:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b8ae:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b8b2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b8b6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b8b8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b8ba:	f47f af1c 	bne.w	800b6f6 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b8be:	f7ff fa79 	bl	800adb4 <HAL_I2C_MemTxCpltCallback>
 800b8c2:	e43d      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b8c4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b8c6:	2802      	cmp	r0, #2
 800b8c8:	f43f af60 	beq.w	800b78c <HAL_I2C_EV_IRQHandler+0x6ac>
 800b8cc:	2a01      	cmp	r2, #1
 800b8ce:	f63f af5d 	bhi.w	800b78c <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b8d2:	4a62      	ldr	r2, [pc, #392]	; (800ba5c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b8d4:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b8d6:	6812      	ldr	r2, [r2, #0]
 800b8d8:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b8dc:	fbb2 f2f0 	udiv	r2, r2, r0
 800b8e0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b8e4:	920b      	str	r2, [sp, #44]	; 0x2c
 800b8e6:	e004      	b.n	800b8f2 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b8e8:	681a      	ldr	r2, [r3, #0]
 800b8ea:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b8ee:	f000 8092 	beq.w	800ba16 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b8f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b8f4:	3a01      	subs	r2, #1
 800b8f6:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b8f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b8fa:	2900      	cmp	r1, #0
 800b8fc:	d1f4      	bne.n	800b8e8 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b8fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b900:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b902:	f042 0220 	orr.w	r2, r2, #32
 800b906:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b908:	685a      	ldr	r2, [r3, #4]
 800b90a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b90e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b910:	691b      	ldr	r3, [r3, #16]
 800b912:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b914:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b916:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b918:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b91a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b91c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b91e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b920:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b922:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b924:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b928:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b92a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b92e:	f7ff faa3 	bl	800ae78 <HAL_I2C_ErrorCallback>
 800b932:	e405      	b.n	800b140 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b934:	2d08      	cmp	r5, #8
 800b936:	d0ad      	beq.n	800b894 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b938:	2d20      	cmp	r5, #32
 800b93a:	d0ab      	beq.n	800b894 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b93c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b940:	d0a8      	beq.n	800b894 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b942:	685a      	ldr	r2, [r3, #4]
 800b944:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b948:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b94a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b94c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b94e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b950:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b952:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b956:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b958:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b95c:	f7ff fa1e 	bl	800ad9c <HAL_I2C_MasterTxCpltCallback>
 800b960:	f7ff bbee 	b.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b964:	2801      	cmp	r0, #1
 800b966:	f43f af05 	beq.w	800b774 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b96a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b96c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b96e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b972:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b974:	9107      	str	r1, [sp, #28]
 800b976:	695a      	ldr	r2, [r3, #20]
 800b978:	9207      	str	r2, [sp, #28]
 800b97a:	699a      	ldr	r2, [r3, #24]
 800b97c:	9207      	str	r2, [sp, #28]
 800b97e:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b980:	681a      	ldr	r2, [r3, #0]
 800b982:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b986:	601a      	str	r2, [r3, #0]
 800b988:	e632      	b.n	800b5f0 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b98a:	681a      	ldr	r2, [r3, #0]
 800b98c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b990:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b992:	685a      	ldr	r2, [r3, #4]
 800b994:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b998:	d02d      	beq.n	800b9f6 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b99a:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b99c:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b99e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b9a2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b9a4:	9104      	str	r1, [sp, #16]
 800b9a6:	695a      	ldr	r2, [r3, #20]
 800b9a8:	9204      	str	r2, [sp, #16]
 800b9aa:	699b      	ldr	r3, [r3, #24]
 800b9ac:	9304      	str	r3, [sp, #16]
 800b9ae:	9b04      	ldr	r3, [sp, #16]
 800b9b0:	e61e      	b.n	800b5f0 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b9b2:	681a      	ldr	r2, [r3, #0]
 800b9b4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b9b8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b9ba:	685a      	ldr	r2, [r3, #4]
 800b9bc:	0515      	lsls	r5, r2, #20
 800b9be:	f57f af48 	bpl.w	800b852 <HAL_I2C_EV_IRQHandler+0x772>
 800b9c2:	2807      	cmp	r0, #7
 800b9c4:	d807      	bhi.n	800b9d6 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b9c6:	2801      	cmp	r0, #1
 800b9c8:	f47f af43 	bne.w	800b852 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b9cc:	685a      	ldr	r2, [r3, #4]
 800b9ce:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b9d2:	605a      	str	r2, [r3, #4]
 800b9d4:	e73d      	b.n	800b852 <HAL_I2C_EV_IRQHandler+0x772>
 800b9d6:	4a22      	ldr	r2, [pc, #136]	; (800ba60 <HAL_I2C_EV_IRQHandler+0x980>)
 800b9d8:	3808      	subs	r0, #8
 800b9da:	40c2      	lsrs	r2, r0
 800b9dc:	07d0      	lsls	r0, r2, #31
 800b9de:	f57f af38 	bpl.w	800b852 <HAL_I2C_EV_IRQHandler+0x772>
 800b9e2:	e7f3      	b.n	800b9cc <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b9e4:	2300      	movs	r3, #0
 800b9e6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b9ea:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b9ec:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b9ee:	f7ff fa41 	bl	800ae74 <HAL_I2C_MemRxCpltCallback>
 800b9f2:	f7ff bba5 	b.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b9f6:	9205      	str	r2, [sp, #20]
 800b9f8:	695a      	ldr	r2, [r3, #20]
 800b9fa:	9205      	str	r2, [sp, #20]
 800b9fc:	699a      	ldr	r2, [r3, #24]
 800b9fe:	9205      	str	r2, [sp, #20]
 800ba00:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ba02:	681a      	ldr	r2, [r3, #0]
 800ba04:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ba08:	601a      	str	r2, [r3, #0]
 800ba0a:	e5f1      	b.n	800b5f0 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba0c:	681a      	ldr	r2, [r3, #0]
 800ba0e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ba12:	601a      	str	r2, [r3, #0]
 800ba14:	e6b2      	b.n	800b77c <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba16:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba18:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ba1a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ba1e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ba20:	6859      	ldr	r1, [r3, #4]
 800ba22:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ba26:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ba28:	691b      	ldr	r3, [r3, #16]
 800ba2a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ba2c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ba2e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ba30:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ba32:	b29b      	uxth	r3, r3
 800ba34:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800ba36:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800ba3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba3c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800ba40:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba42:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800ba44:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ba46:	f47f aed9 	bne.w	800b7fc <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ba4a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ba4e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800ba50:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ba52:	f7ff fa0f 	bl	800ae74 <HAL_I2C_MemRxCpltCallback>
 800ba56:	f7ff bb73 	b.w	800b140 <HAL_I2C_EV_IRQHandler+0x60>
 800ba5a:	bf00      	nop
 800ba5c:	2000007c 	.word	0x2000007c
 800ba60:	01000101 	.word	0x01000101

0800ba64 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ba64:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ba68:	2a20      	cmp	r2, #32
{
 800ba6a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800ba6c:	fa5f fc82 	uxtb.w	ip, r2
 800ba70:	d001      	beq.n	800ba76 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800ba72:	2002      	movs	r0, #2
  }
}
 800ba74:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800ba76:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800ba78:	2024      	movs	r0, #36	; 0x24
 800ba7a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800ba7e:	6810      	ldr	r0, [r2, #0]
 800ba80:	f020 0001 	bic.w	r0, r0, #1
 800ba84:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800ba86:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ba88:	f020 0010 	bic.w	r0, r0, #16
 800ba8c:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800ba8e:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800ba90:	4301      	orrs	r1, r0
 800ba92:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ba94:	6811      	ldr	r1, [r2, #0]
 800ba96:	f041 0101 	orr.w	r1, r1, #1
 800ba9a:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800ba9c:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800ba9e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800baa2:	4770      	bx	lr

0800baa4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800baa4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800baa8:	2a20      	cmp	r2, #32
 800baaa:	d001      	beq.n	800bab0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800baac:	2002      	movs	r0, #2
  }
}
 800baae:	4770      	bx	lr
{
 800bab0:	b410      	push	{r4}
 800bab2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800bab6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800bab8:	2224      	movs	r2, #36	; 0x24
 800baba:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800babe:	6822      	ldr	r2, [r4, #0]
 800bac0:	f022 0201 	bic.w	r2, r2, #1
 800bac4:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800bac6:	4603      	mov	r3, r0
 800bac8:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800baca:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800bace:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800bad0:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800bad2:	b289      	uxth	r1, r1
 800bad4:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800bad6:	6822      	ldr	r2, [r4, #0]
 800bad8:	f042 0201 	orr.w	r2, r2, #1
 800badc:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800bade:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800bae2:	2000      	movs	r0, #0
}
 800bae4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bae8:	4770      	bx	lr
 800baea:	bf00      	nop

0800baec <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800baec:	2800      	cmp	r0, #0
 800baee:	d069      	beq.n	800bbc4 <HAL_LTDC_Init+0xd8>
{
 800baf0:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800baf2:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800baf6:	4604      	mov	r4, r0
 800baf8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bafc:	2b00      	cmp	r3, #0
 800bafe:	d05c      	beq.n	800bbba <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bb00:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bb02:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bb04:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bb08:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bb0c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bb0e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bb10:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800bb14:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800bb18:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bb1a:	6999      	ldr	r1, [r3, #24]
 800bb1c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800bb1e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800bb20:	430a      	orrs	r2, r1
 800bb22:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bb24:	689a      	ldr	r2, [r3, #8]
 800bb26:	4928      	ldr	r1, [pc, #160]	; (800bbc8 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800bb28:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800bb2a:	400a      	ands	r2, r1
 800bb2c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800bb2e:	689a      	ldr	r2, [r3, #8]
 800bb30:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bb34:	69a0      	ldr	r0, [r4, #24]
 800bb36:	4302      	orrs	r2, r0
 800bb38:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bb3a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800bb3c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800bb3e:	400a      	ands	r2, r1
 800bb40:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800bb42:	68da      	ldr	r2, [r3, #12]
 800bb44:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bb48:	6a20      	ldr	r0, [r4, #32]
 800bb4a:	4302      	orrs	r2, r0
 800bb4c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bb4e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800bb50:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800bb52:	400a      	ands	r2, r1
 800bb54:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800bb56:	691a      	ldr	r2, [r3, #16]
 800bb58:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bb5c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bb5e:	4302      	orrs	r2, r0
 800bb60:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bb62:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800bb64:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800bb66:	400a      	ands	r2, r1
 800bb68:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800bb6a:	695a      	ldr	r2, [r3, #20]
 800bb6c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bb6e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800bb72:	430a      	orrs	r2, r1
 800bb74:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bb76:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800bb78:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800bb7c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800bb80:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800bb84:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800bb86:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800bb88:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800bb8c:	432a      	orrs	r2, r5
 800bb8e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bb92:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bb96:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bb98:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb9a:	f042 0206 	orr.w	r2, r2, #6
 800bb9e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bba0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bba2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bba6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bba8:	ea42 020c 	orr.w	r2, r2, ip
 800bbac:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bbae:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bbb2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bbb6:	4608      	mov	r0, r1
}
 800bbb8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bbba:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bbbe:	f7f5 fddf 	bl	8001780 <HAL_LTDC_MspInit>
 800bbc2:	e79d      	b.n	800bb00 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bbc4:	2001      	movs	r0, #1
}
 800bbc6:	4770      	bx	lr
 800bbc8:	f000f800 	.word	0xf000f800

0800bbcc <HAL_LTDC_ErrorCallback>:
 800bbcc:	4770      	bx	lr
 800bbce:	bf00      	nop

0800bbd0 <HAL_LTDC_ReloadEventCallback>:
 800bbd0:	4770      	bx	lr
 800bbd2:	bf00      	nop

0800bbd4 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bbd4:	6803      	ldr	r3, [r0, #0]
{
 800bbd6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800bbd8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bbda:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bbdc:	076a      	lsls	r2, r5, #29
{
 800bbde:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bbe0:	d501      	bpl.n	800bbe6 <HAL_LTDC_IRQHandler+0x12>
 800bbe2:	0771      	lsls	r1, r6, #29
 800bbe4:	d41d      	bmi.n	800bc22 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bbe6:	07aa      	lsls	r2, r5, #30
 800bbe8:	d501      	bpl.n	800bbee <HAL_LTDC_IRQHandler+0x1a>
 800bbea:	07b3      	lsls	r3, r6, #30
 800bbec:	d42d      	bmi.n	800bc4a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bbee:	07e8      	lsls	r0, r5, #31
 800bbf0:	d501      	bpl.n	800bbf6 <HAL_LTDC_IRQHandler+0x22>
 800bbf2:	07f1      	lsls	r1, r6, #31
 800bbf4:	d440      	bmi.n	800bc78 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bbf6:	072a      	lsls	r2, r5, #28
 800bbf8:	d501      	bpl.n	800bbfe <HAL_LTDC_IRQHandler+0x2a>
 800bbfa:	0733      	lsls	r3, r6, #28
 800bbfc:	d400      	bmi.n	800bc00 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bbfe:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bc00:	6823      	ldr	r3, [r4, #0]
 800bc02:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bc04:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bc06:	f022 0208 	bic.w	r2, r2, #8
 800bc0a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bc0c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bc0e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bc10:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bc12:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc16:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bc1a:	4620      	mov	r0, r4
 800bc1c:	f7ff ffd8 	bl	800bbd0 <HAL_LTDC_ReloadEventCallback>
}
 800bc20:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bc22:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bc24:	f022 0204 	bic.w	r2, r2, #4
 800bc28:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bc2a:	2204      	movs	r2, #4
 800bc2c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bc2e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bc32:	f043 0301 	orr.w	r3, r3, #1
 800bc36:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bc3a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bc3c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc40:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bc44:	f7ff ffc2 	bl	800bbcc <HAL_LTDC_ErrorCallback>
 800bc48:	e7cd      	b.n	800bbe6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bc4a:	6823      	ldr	r3, [r4, #0]
 800bc4c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bc4e:	f022 0202 	bic.w	r2, r2, #2
 800bc52:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bc54:	2202      	movs	r2, #2
 800bc56:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bc58:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bc5c:	f043 0302 	orr.w	r3, r3, #2
 800bc60:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bc64:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bc66:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bc68:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc6c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bc70:	4620      	mov	r0, r4
 800bc72:	f7ff ffab 	bl	800bbcc <HAL_LTDC_ErrorCallback>
 800bc76:	e7ba      	b.n	800bbee <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bc78:	6823      	ldr	r3, [r4, #0]
 800bc7a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bc7c:	f022 0201 	bic.w	r2, r2, #1
 800bc80:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bc82:	2201      	movs	r2, #1
 800bc84:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bc86:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bc88:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bc8c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bc90:	4620      	mov	r0, r4
 800bc92:	f7f6 fdd1 	bl	8002838 <HAL_LTDC_LineEventCallback>
 800bc96:	e7ae      	b.n	800bbf6 <HAL_LTDC_IRQHandler+0x22>

0800bc98 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bc98:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bc9c:	2b01      	cmp	r3, #1
 800bc9e:	f000 80c2 	beq.w	800be26 <HAL_LTDC_ConfigLayer+0x18e>
{
 800bca2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bca6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bcaa:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bcae:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bcb2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bcb4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bcb6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bcba:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bcbe:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bcc2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bcc6:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bcca:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bcce:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bcd0:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bcd4:	460c      	mov	r4, r1
 800bcd6:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bcd8:	9301      	str	r3, [sp, #4]
 800bcda:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bcdc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bcde:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bce2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bce6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bce8:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bcea:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bcee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bcf0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bcf4:	6823      	ldr	r3, [r4, #0]
 800bcf6:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bcfa:	9b01      	ldr	r3, [sp, #4]
 800bcfc:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bd00:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bd04:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bd06:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bd08:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bd0c:	1c51      	adds	r1, r2, #1
 800bd0e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bd12:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bd14:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bd16:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bd1a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bd1e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bd22:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bd26:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bd2a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bd2e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bd32:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bd34:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bd36:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bd3a:	3301      	adds	r3, #1
 800bd3c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bd40:	4403      	add	r3, r0
 800bd42:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bd46:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bd4a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bd4e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bd50:	f023 0307 	bic.w	r3, r3, #7
 800bd54:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bd58:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bd5c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bd60:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bd64:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bd68:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bd6c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bd70:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bd74:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bd78:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bd7c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bd80:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bd84:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bd88:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bd8c:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bd90:	696b      	ldr	r3, [r5, #20]
 800bd92:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bd96:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bd9a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bd9e:	f023 0307 	bic.w	r3, r3, #7
 800bda2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bda6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bdaa:	4303      	orrs	r3, r0
 800bdac:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bdb0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bdb4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bdb6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bdba:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bdbe:	bb69      	cbnz	r1, 800be1c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bdc0:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bdc2:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bdc4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bdc6:	fb03 f707 	mul.w	r7, r3, r7
 800bdca:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bdcc:	fb02 f303 	mul.w	r3, r2, r3
 800bdd0:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bdd4:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bdd8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bdda:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bdde:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bde2:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bde6:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bdea:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bdee:	f023 0307 	bic.w	r3, r3, #7
 800bdf2:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bdf6:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bdfa:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bdfe:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800be00:	4313      	orrs	r3, r2
 800be02:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800be06:	2300      	movs	r3, #0
  return HAL_OK;
 800be08:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800be0a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800be0e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800be12:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800be16:	b003      	add	sp, #12
 800be18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800be1c:	3901      	subs	r1, #1
 800be1e:	2906      	cmp	r1, #6
 800be20:	d903      	bls.n	800be2a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800be22:	2301      	movs	r3, #1
 800be24:	e7cd      	b.n	800bdc2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800be26:	2002      	movs	r0, #2
}
 800be28:	4770      	bx	lr
 800be2a:	4b02      	ldr	r3, [pc, #8]	; (800be34 <HAL_LTDC_ConfigLayer+0x19c>)
 800be2c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800be30:	e7c7      	b.n	800bdc2 <HAL_LTDC_ConfigLayer+0x12a>
 800be32:	bf00      	nop
 800be34:	0802f688 	.word	0x0802f688

0800be38 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800be38:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800be3c:	2b01      	cmp	r3, #1
 800be3e:	d019      	beq.n	800be74 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800be40:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800be42:	2302      	movs	r3, #2
{
 800be44:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800be46:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800be4a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800be4c:	4c0a      	ldr	r4, [pc, #40]	; (800be78 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800be4e:	f023 0301 	bic.w	r3, r3, #1
 800be52:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800be54:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800be56:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800be58:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800be5a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800be5e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800be62:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800be64:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800be68:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800be6c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800be70:	4618      	mov	r0, r3
}
 800be72:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800be74:	2002      	movs	r0, #2
}
 800be76:	4770      	bx	lr
 800be78:	40016800 	.word	0x40016800

0800be7c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800be7c:	2800      	cmp	r0, #0
 800be7e:	f000 81a2 	beq.w	800c1c6 <HAL_RCC_OscConfig+0x34a>
{
 800be82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800be86:	6803      	ldr	r3, [r0, #0]
 800be88:	07dd      	lsls	r5, r3, #31
{
 800be8a:	b082      	sub	sp, #8
 800be8c:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800be8e:	d52f      	bpl.n	800bef0 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800be90:	499e      	ldr	r1, [pc, #632]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800be92:	688a      	ldr	r2, [r1, #8]
 800be94:	f002 020c 	and.w	r2, r2, #12
 800be98:	2a04      	cmp	r2, #4
 800be9a:	f000 80ed 	beq.w	800c078 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800be9e:	688a      	ldr	r2, [r1, #8]
 800bea0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bea4:	2a08      	cmp	r2, #8
 800bea6:	f000 80e3 	beq.w	800c070 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800beaa:	6863      	ldr	r3, [r4, #4]
 800beac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800beb0:	f000 80ec 	beq.w	800c08c <HAL_RCC_OscConfig+0x210>
 800beb4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800beb8:	f000 8175 	beq.w	800c1a6 <HAL_RCC_OscConfig+0x32a>
 800bebc:	4d93      	ldr	r5, [pc, #588]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800bebe:	682a      	ldr	r2, [r5, #0]
 800bec0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bec4:	602a      	str	r2, [r5, #0]
 800bec6:	682a      	ldr	r2, [r5, #0]
 800bec8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800becc:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bece:	2b00      	cmp	r3, #0
 800bed0:	f040 80e1 	bne.w	800c096 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bed4:	f7fd fdb8 	bl	8009a48 <HAL_GetTick>
 800bed8:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800beda:	e005      	b.n	800bee8 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bedc:	f7fd fdb4 	bl	8009a48 <HAL_GetTick>
 800bee0:	1b80      	subs	r0, r0, r6
 800bee2:	2864      	cmp	r0, #100	; 0x64
 800bee4:	f200 8101 	bhi.w	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bee8:	682b      	ldr	r3, [r5, #0]
 800beea:	039b      	lsls	r3, r3, #14
 800beec:	d4f6      	bmi.n	800bedc <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800beee:	6823      	ldr	r3, [r4, #0]
 800bef0:	079f      	lsls	r7, r3, #30
 800bef2:	d528      	bpl.n	800bf46 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bef4:	4a85      	ldr	r2, [pc, #532]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800bef6:	6891      	ldr	r1, [r2, #8]
 800bef8:	f011 0f0c 	tst.w	r1, #12
 800befc:	f000 8090 	beq.w	800c020 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bf00:	6891      	ldr	r1, [r2, #8]
 800bf02:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bf06:	2908      	cmp	r1, #8
 800bf08:	f000 8086 	beq.w	800c018 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800bf0c:	68e3      	ldr	r3, [r4, #12]
 800bf0e:	2b00      	cmp	r3, #0
 800bf10:	f000 810e 	beq.w	800c130 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800bf14:	4b7e      	ldr	r3, [pc, #504]	; (800c110 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf16:	4e7d      	ldr	r6, [pc, #500]	; (800c10c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800bf18:	2201      	movs	r2, #1
 800bf1a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800bf1c:	f7fd fd94 	bl	8009a48 <HAL_GetTick>
 800bf20:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf22:	e005      	b.n	800bf30 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800bf24:	f7fd fd90 	bl	8009a48 <HAL_GetTick>
 800bf28:	1b40      	subs	r0, r0, r5
 800bf2a:	2802      	cmp	r0, #2
 800bf2c:	f200 80dd 	bhi.w	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf30:	6833      	ldr	r3, [r6, #0]
 800bf32:	0798      	lsls	r0, r3, #30
 800bf34:	d5f6      	bpl.n	800bf24 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bf36:	6833      	ldr	r3, [r6, #0]
 800bf38:	6922      	ldr	r2, [r4, #16]
 800bf3a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800bf3e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800bf42:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bf44:	6823      	ldr	r3, [r4, #0]
 800bf46:	071a      	lsls	r2, r3, #28
 800bf48:	d451      	bmi.n	800bfee <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bf4a:	0758      	lsls	r0, r3, #29
 800bf4c:	d52f      	bpl.n	800bfae <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800bf4e:	4a6f      	ldr	r2, [pc, #444]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800bf50:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf52:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800bf56:	d07f      	beq.n	800c058 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800bf58:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bf5a:	4e6e      	ldr	r6, [pc, #440]	; (800c114 <HAL_RCC_OscConfig+0x298>)
 800bf5c:	6833      	ldr	r3, [r6, #0]
 800bf5e:	05d9      	lsls	r1, r3, #23
 800bf60:	f140 80b3 	bpl.w	800c0ca <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bf64:	68a3      	ldr	r3, [r4, #8]
 800bf66:	2b01      	cmp	r3, #1
 800bf68:	f000 80c3 	beq.w	800c0f2 <HAL_RCC_OscConfig+0x276>
 800bf6c:	2b05      	cmp	r3, #5
 800bf6e:	f000 812c 	beq.w	800c1ca <HAL_RCC_OscConfig+0x34e>
 800bf72:	4e66      	ldr	r6, [pc, #408]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800bf74:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bf76:	f022 0201 	bic.w	r2, r2, #1
 800bf7a:	6732      	str	r2, [r6, #112]	; 0x70
 800bf7c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bf7e:	f022 0204 	bic.w	r2, r2, #4
 800bf82:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800bf84:	2b00      	cmp	r3, #0
 800bf86:	f040 80b9 	bne.w	800c0fc <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800bf8a:	f7fd fd5d 	bl	8009a48 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bf8e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800bf92:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bf94:	e005      	b.n	800bfa2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bf96:	f7fd fd57 	bl	8009a48 <HAL_GetTick>
 800bf9a:	1bc0      	subs	r0, r0, r7
 800bf9c:	4540      	cmp	r0, r8
 800bf9e:	f200 80a4 	bhi.w	800c0ea <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bfa2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800bfa4:	0798      	lsls	r0, r3, #30
 800bfa6:	d4f6      	bmi.n	800bf96 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800bfa8:	2d00      	cmp	r5, #0
 800bfaa:	f040 8106 	bne.w	800c1ba <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800bfae:	69a0      	ldr	r0, [r4, #24]
 800bfb0:	b1c8      	cbz	r0, 800bfe6 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800bfb2:	4d56      	ldr	r5, [pc, #344]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800bfb4:	68ab      	ldr	r3, [r5, #8]
 800bfb6:	f003 030c 	and.w	r3, r3, #12
 800bfba:	2b08      	cmp	r3, #8
 800bfbc:	f000 80c9 	beq.w	800c152 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bfc0:	4b53      	ldr	r3, [pc, #332]	; (800c110 <HAL_RCC_OscConfig+0x294>)
 800bfc2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bfc4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800bfc6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bfc8:	f000 8109 	beq.w	800c1de <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bfcc:	f7fd fd3c 	bl	8009a48 <HAL_GetTick>
 800bfd0:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bfd2:	e005      	b.n	800bfe0 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bfd4:	f7fd fd38 	bl	8009a48 <HAL_GetTick>
 800bfd8:	1b00      	subs	r0, r0, r4
 800bfda:	2802      	cmp	r0, #2
 800bfdc:	f200 8085 	bhi.w	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bfe0:	682b      	ldr	r3, [r5, #0]
 800bfe2:	019b      	lsls	r3, r3, #6
 800bfe4:	d4f6      	bmi.n	800bfd4 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800bfe6:	2000      	movs	r0, #0
}
 800bfe8:	b002      	add	sp, #8
 800bfea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bfee:	6963      	ldr	r3, [r4, #20]
 800bff0:	b30b      	cbz	r3, 800c036 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bff2:	4b47      	ldr	r3, [pc, #284]	; (800c110 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bff4:	4e45      	ldr	r6, [pc, #276]	; (800c10c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bff6:	2201      	movs	r2, #1
 800bff8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bffc:	f7fd fd24 	bl	8009a48 <HAL_GetTick>
 800c000:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c002:	e004      	b.n	800c00e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c004:	f7fd fd20 	bl	8009a48 <HAL_GetTick>
 800c008:	1b40      	subs	r0, r0, r5
 800c00a:	2802      	cmp	r0, #2
 800c00c:	d86d      	bhi.n	800c0ea <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c00e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c010:	079b      	lsls	r3, r3, #30
 800c012:	d5f7      	bpl.n	800c004 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c014:	6823      	ldr	r3, [r4, #0]
 800c016:	e798      	b.n	800bf4a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c018:	6852      	ldr	r2, [r2, #4]
 800c01a:	0256      	lsls	r6, r2, #9
 800c01c:	f53f af76 	bmi.w	800bf0c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c020:	4a3a      	ldr	r2, [pc, #232]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800c022:	6812      	ldr	r2, [r2, #0]
 800c024:	0795      	lsls	r5, r2, #30
 800c026:	d544      	bpl.n	800c0b2 <HAL_RCC_OscConfig+0x236>
 800c028:	68e2      	ldr	r2, [r4, #12]
 800c02a:	2a01      	cmp	r2, #1
 800c02c:	d041      	beq.n	800c0b2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800c02e:	2001      	movs	r0, #1
}
 800c030:	b002      	add	sp, #8
 800c032:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800c036:	4a36      	ldr	r2, [pc, #216]	; (800c110 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c038:	4e34      	ldr	r6, [pc, #208]	; (800c10c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800c03a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c03e:	f7fd fd03 	bl	8009a48 <HAL_GetTick>
 800c042:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c044:	e004      	b.n	800c050 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c046:	f7fd fcff 	bl	8009a48 <HAL_GetTick>
 800c04a:	1b40      	subs	r0, r0, r5
 800c04c:	2802      	cmp	r0, #2
 800c04e:	d84c      	bhi.n	800c0ea <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c050:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c052:	079f      	lsls	r7, r3, #30
 800c054:	d4f7      	bmi.n	800c046 <HAL_RCC_OscConfig+0x1ca>
 800c056:	e7dd      	b.n	800c014 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c058:	9301      	str	r3, [sp, #4]
 800c05a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c05c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c060:	6413      	str	r3, [r2, #64]	; 0x40
 800c062:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c064:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c068:	9301      	str	r3, [sp, #4]
 800c06a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c06c:	2501      	movs	r5, #1
 800c06e:	e774      	b.n	800bf5a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c070:	684a      	ldr	r2, [r1, #4]
 800c072:	0250      	lsls	r0, r2, #9
 800c074:	f57f af19 	bpl.w	800beaa <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c078:	4a24      	ldr	r2, [pc, #144]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800c07a:	6812      	ldr	r2, [r2, #0]
 800c07c:	0391      	lsls	r1, r2, #14
 800c07e:	f57f af37 	bpl.w	800bef0 <HAL_RCC_OscConfig+0x74>
 800c082:	6862      	ldr	r2, [r4, #4]
 800c084:	2a00      	cmp	r2, #0
 800c086:	f47f af33 	bne.w	800bef0 <HAL_RCC_OscConfig+0x74>
 800c08a:	e7d0      	b.n	800c02e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c08c:	4a1f      	ldr	r2, [pc, #124]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800c08e:	6813      	ldr	r3, [r2, #0]
 800c090:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c094:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c096:	f7fd fcd7 	bl	8009a48 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c09a:	4e1c      	ldr	r6, [pc, #112]	; (800c10c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800c09c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c09e:	e004      	b.n	800c0aa <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c0a0:	f7fd fcd2 	bl	8009a48 <HAL_GetTick>
 800c0a4:	1b40      	subs	r0, r0, r5
 800c0a6:	2864      	cmp	r0, #100	; 0x64
 800c0a8:	d81f      	bhi.n	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c0aa:	6833      	ldr	r3, [r6, #0]
 800c0ac:	039a      	lsls	r2, r3, #14
 800c0ae:	d5f7      	bpl.n	800c0a0 <HAL_RCC_OscConfig+0x224>
 800c0b0:	e71d      	b.n	800beee <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c0b2:	4916      	ldr	r1, [pc, #88]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800c0b4:	6920      	ldr	r0, [r4, #16]
 800c0b6:	680a      	ldr	r2, [r1, #0]
 800c0b8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800c0bc:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800c0c0:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c0c2:	071a      	lsls	r2, r3, #28
 800c0c4:	f57f af41 	bpl.w	800bf4a <HAL_RCC_OscConfig+0xce>
 800c0c8:	e791      	b.n	800bfee <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c0ca:	6833      	ldr	r3, [r6, #0]
 800c0cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c0d0:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800c0d2:	f7fd fcb9 	bl	8009a48 <HAL_GetTick>
 800c0d6:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c0d8:	6833      	ldr	r3, [r6, #0]
 800c0da:	05da      	lsls	r2, r3, #23
 800c0dc:	f53f af42 	bmi.w	800bf64 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c0e0:	f7fd fcb2 	bl	8009a48 <HAL_GetTick>
 800c0e4:	1bc0      	subs	r0, r0, r7
 800c0e6:	2802      	cmp	r0, #2
 800c0e8:	d9f6      	bls.n	800c0d8 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c0ea:	2003      	movs	r0, #3
}
 800c0ec:	b002      	add	sp, #8
 800c0ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c0f2:	4a06      	ldr	r2, [pc, #24]	; (800c10c <HAL_RCC_OscConfig+0x290>)
 800c0f4:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c0f6:	f043 0301 	orr.w	r3, r3, #1
 800c0fa:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c0fc:	f7fd fca4 	bl	8009a48 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c100:	4f02      	ldr	r7, [pc, #8]	; (800c10c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c102:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c104:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c108:	e00b      	b.n	800c122 <HAL_RCC_OscConfig+0x2a6>
 800c10a:	bf00      	nop
 800c10c:	40023800 	.word	0x40023800
 800c110:	42470000 	.word	0x42470000
 800c114:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c118:	f7fd fc96 	bl	8009a48 <HAL_GetTick>
 800c11c:	1b80      	subs	r0, r0, r6
 800c11e:	4540      	cmp	r0, r8
 800c120:	d8e3      	bhi.n	800c0ea <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c122:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c124:	079b      	lsls	r3, r3, #30
 800c126:	d5f7      	bpl.n	800c118 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c128:	2d00      	cmp	r5, #0
 800c12a:	f43f af40 	beq.w	800bfae <HAL_RCC_OscConfig+0x132>
 800c12e:	e044      	b.n	800c1ba <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c130:	4a42      	ldr	r2, [pc, #264]	; (800c23c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c132:	4e43      	ldr	r6, [pc, #268]	; (800c240 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c134:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c136:	f7fd fc87 	bl	8009a48 <HAL_GetTick>
 800c13a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c13c:	e004      	b.n	800c148 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c13e:	f7fd fc83 	bl	8009a48 <HAL_GetTick>
 800c142:	1b40      	subs	r0, r0, r5
 800c144:	2802      	cmp	r0, #2
 800c146:	d8d0      	bhi.n	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c148:	6833      	ldr	r3, [r6, #0]
 800c14a:	0799      	lsls	r1, r3, #30
 800c14c:	d4f7      	bmi.n	800c13e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c14e:	6823      	ldr	r3, [r4, #0]
 800c150:	e6f9      	b.n	800bf46 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c152:	2801      	cmp	r0, #1
 800c154:	f43f af48 	beq.w	800bfe8 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c158:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c15a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c15c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c160:	4291      	cmp	r1, r2
 800c162:	f47f af64 	bne.w	800c02e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c166:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c168:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c16c:	4291      	cmp	r1, r2
 800c16e:	f47f af5e 	bne.w	800c02e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c172:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c174:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c178:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c17a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c17e:	f47f af56 	bne.w	800c02e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c182:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c184:	0852      	lsrs	r2, r2, #1
 800c186:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c18a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c18c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c190:	f47f af4d 	bne.w	800c02e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c194:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c196:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c19a:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c19e:	bf14      	ite	ne
 800c1a0:	2001      	movne	r0, #1
 800c1a2:	2000      	moveq	r0, #0
 800c1a4:	e720      	b.n	800bfe8 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c1a6:	4b26      	ldr	r3, [pc, #152]	; (800c240 <HAL_RCC_OscConfig+0x3c4>)
 800c1a8:	681a      	ldr	r2, [r3, #0]
 800c1aa:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c1ae:	601a      	str	r2, [r3, #0]
 800c1b0:	681a      	ldr	r2, [r3, #0]
 800c1b2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c1b6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c1b8:	e76d      	b.n	800c096 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c1ba:	4a21      	ldr	r2, [pc, #132]	; (800c240 <HAL_RCC_OscConfig+0x3c4>)
 800c1bc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c1be:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c1c2:	6413      	str	r3, [r2, #64]	; 0x40
 800c1c4:	e6f3      	b.n	800bfae <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c1c6:	2001      	movs	r0, #1
}
 800c1c8:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c1ca:	4b1d      	ldr	r3, [pc, #116]	; (800c240 <HAL_RCC_OscConfig+0x3c4>)
 800c1cc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c1ce:	f042 0204 	orr.w	r2, r2, #4
 800c1d2:	671a      	str	r2, [r3, #112]	; 0x70
 800c1d4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c1d6:	f042 0201 	orr.w	r2, r2, #1
 800c1da:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c1dc:	e78e      	b.n	800c0fc <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c1de:	f7fd fc33 	bl	8009a48 <HAL_GetTick>
 800c1e2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c1e4:	e005      	b.n	800c1f2 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c1e6:	f7fd fc2f 	bl	8009a48 <HAL_GetTick>
 800c1ea:	1b80      	subs	r0, r0, r6
 800c1ec:	2802      	cmp	r0, #2
 800c1ee:	f63f af7c 	bhi.w	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c1f2:	682b      	ldr	r3, [r5, #0]
 800c1f4:	0199      	lsls	r1, r3, #6
 800c1f6:	d4f6      	bmi.n	800c1e6 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c1f8:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c1fc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c1fe:	430b      	orrs	r3, r1
 800c200:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c204:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c208:	0852      	lsrs	r2, r2, #1
 800c20a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c20e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c210:	490a      	ldr	r1, [pc, #40]	; (800c23c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c212:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c216:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c218:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c21a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c21c:	f7fd fc14 	bl	8009a48 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c220:	4d07      	ldr	r5, [pc, #28]	; (800c240 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c222:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c224:	e005      	b.n	800c232 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c226:	f7fd fc0f 	bl	8009a48 <HAL_GetTick>
 800c22a:	1b00      	subs	r0, r0, r4
 800c22c:	2802      	cmp	r0, #2
 800c22e:	f63f af5c 	bhi.w	800c0ea <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c232:	682b      	ldr	r3, [r5, #0]
 800c234:	019a      	lsls	r2, r3, #6
 800c236:	d5f6      	bpl.n	800c226 <HAL_RCC_OscConfig+0x3aa>
 800c238:	e6d5      	b.n	800bfe6 <HAL_RCC_OscConfig+0x16a>
 800c23a:	bf00      	nop
 800c23c:	42470000 	.word	0x42470000
 800c240:	40023800 	.word	0x40023800

0800c244 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c244:	4916      	ldr	r1, [pc, #88]	; (800c2a0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c246:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c248:	688b      	ldr	r3, [r1, #8]
 800c24a:	f003 030c 	and.w	r3, r3, #12
 800c24e:	2b04      	cmp	r3, #4
 800c250:	d01b      	beq.n	800c28a <HAL_RCC_GetSysClockFreq+0x46>
 800c252:	2b08      	cmp	r3, #8
 800c254:	d117      	bne.n	800c286 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c256:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c258:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c25a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c25c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c260:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c264:	d113      	bne.n	800c28e <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c266:	480f      	ldr	r0, [pc, #60]	; (800c2a4 <HAL_RCC_GetSysClockFreq+0x60>)
 800c268:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c26c:	fba1 0100 	umull	r0, r1, r1, r0
 800c270:	f7f4 f86e 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c274:	4b0a      	ldr	r3, [pc, #40]	; (800c2a0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c276:	685b      	ldr	r3, [r3, #4]
 800c278:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c27c:	3301      	adds	r3, #1
 800c27e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c280:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c284:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c286:	4807      	ldr	r0, [pc, #28]	; (800c2a4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c288:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c28a:	4807      	ldr	r0, [pc, #28]	; (800c2a8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c28c:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c28e:	4806      	ldr	r0, [pc, #24]	; (800c2a8 <HAL_RCC_GetSysClockFreq+0x64>)
 800c290:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c294:	2300      	movs	r3, #0
 800c296:	fba1 0100 	umull	r0, r1, r1, r0
 800c29a:	f7f4 f859 	bl	8000350 <__aeabi_uldivmod>
 800c29e:	e7e9      	b.n	800c274 <HAL_RCC_GetSysClockFreq+0x30>
 800c2a0:	40023800 	.word	0x40023800
 800c2a4:	00f42400 	.word	0x00f42400
 800c2a8:	007a1200 	.word	0x007a1200

0800c2ac <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c2ac:	2800      	cmp	r0, #0
 800c2ae:	f000 8087 	beq.w	800c3c0 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c2b2:	4a48      	ldr	r2, [pc, #288]	; (800c3d4 <HAL_RCC_ClockConfig+0x128>)
 800c2b4:	6813      	ldr	r3, [r2, #0]
 800c2b6:	f003 030f 	and.w	r3, r3, #15
 800c2ba:	428b      	cmp	r3, r1
{
 800c2bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c2c0:	460d      	mov	r5, r1
 800c2c2:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c2c4:	d209      	bcs.n	800c2da <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c2c6:	b2cb      	uxtb	r3, r1
 800c2c8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c2ca:	6813      	ldr	r3, [r2, #0]
 800c2cc:	f003 030f 	and.w	r3, r3, #15
 800c2d0:	428b      	cmp	r3, r1
 800c2d2:	d002      	beq.n	800c2da <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c2d4:	2001      	movs	r0, #1
}
 800c2d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c2da:	6823      	ldr	r3, [r4, #0]
 800c2dc:	0798      	lsls	r0, r3, #30
 800c2de:	d514      	bpl.n	800c30a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c2e0:	0759      	lsls	r1, r3, #29
 800c2e2:	d504      	bpl.n	800c2ee <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c2e4:	493c      	ldr	r1, [pc, #240]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c2e6:	688a      	ldr	r2, [r1, #8]
 800c2e8:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c2ec:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c2ee:	071a      	lsls	r2, r3, #28
 800c2f0:	d504      	bpl.n	800c2fc <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c2f2:	4939      	ldr	r1, [pc, #228]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c2f4:	688a      	ldr	r2, [r1, #8]
 800c2f6:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c2fa:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c2fc:	4936      	ldr	r1, [pc, #216]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c2fe:	68a0      	ldr	r0, [r4, #8]
 800c300:	688a      	ldr	r2, [r1, #8]
 800c302:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c306:	4302      	orrs	r2, r0
 800c308:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c30a:	07df      	lsls	r7, r3, #31
 800c30c:	d521      	bpl.n	800c352 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c30e:	6862      	ldr	r2, [r4, #4]
 800c310:	2a01      	cmp	r2, #1
 800c312:	d057      	beq.n	800c3c4 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c314:	1e93      	subs	r3, r2, #2
 800c316:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c318:	4b2f      	ldr	r3, [pc, #188]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c31a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c31c:	d94d      	bls.n	800c3ba <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c31e:	0799      	lsls	r1, r3, #30
 800c320:	d5d8      	bpl.n	800c2d4 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c322:	4e2d      	ldr	r6, [pc, #180]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c324:	68b3      	ldr	r3, [r6, #8]
 800c326:	f023 0303 	bic.w	r3, r3, #3
 800c32a:	4313      	orrs	r3, r2
 800c32c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c32e:	f7fd fb8b 	bl	8009a48 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c332:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c336:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c338:	e004      	b.n	800c344 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c33a:	f7fd fb85 	bl	8009a48 <HAL_GetTick>
 800c33e:	1bc0      	subs	r0, r0, r7
 800c340:	4540      	cmp	r0, r8
 800c342:	d844      	bhi.n	800c3ce <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c344:	68b3      	ldr	r3, [r6, #8]
 800c346:	6862      	ldr	r2, [r4, #4]
 800c348:	f003 030c 	and.w	r3, r3, #12
 800c34c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c350:	d1f3      	bne.n	800c33a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c352:	4a20      	ldr	r2, [pc, #128]	; (800c3d4 <HAL_RCC_ClockConfig+0x128>)
 800c354:	6813      	ldr	r3, [r2, #0]
 800c356:	f003 030f 	and.w	r3, r3, #15
 800c35a:	42ab      	cmp	r3, r5
 800c35c:	d906      	bls.n	800c36c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c35e:	b2eb      	uxtb	r3, r5
 800c360:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c362:	6813      	ldr	r3, [r2, #0]
 800c364:	f003 030f 	and.w	r3, r3, #15
 800c368:	42ab      	cmp	r3, r5
 800c36a:	d1b3      	bne.n	800c2d4 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c36c:	6823      	ldr	r3, [r4, #0]
 800c36e:	075a      	lsls	r2, r3, #29
 800c370:	d506      	bpl.n	800c380 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c372:	4919      	ldr	r1, [pc, #100]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c374:	68e0      	ldr	r0, [r4, #12]
 800c376:	688a      	ldr	r2, [r1, #8]
 800c378:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c37c:	4302      	orrs	r2, r0
 800c37e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c380:	071b      	lsls	r3, r3, #28
 800c382:	d507      	bpl.n	800c394 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c384:	4a14      	ldr	r2, [pc, #80]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c386:	6921      	ldr	r1, [r4, #16]
 800c388:	6893      	ldr	r3, [r2, #8]
 800c38a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c38e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c392:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c394:	f7ff ff56 	bl	800c244 <HAL_RCC_GetSysClockFreq>
 800c398:	4a0f      	ldr	r2, [pc, #60]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c39a:	4c10      	ldr	r4, [pc, #64]	; (800c3dc <HAL_RCC_ClockConfig+0x130>)
 800c39c:	6892      	ldr	r2, [r2, #8]
 800c39e:	4910      	ldr	r1, [pc, #64]	; (800c3e0 <HAL_RCC_ClockConfig+0x134>)
 800c3a0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c3a4:	4603      	mov	r3, r0
 800c3a6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c3a8:	480e      	ldr	r0, [pc, #56]	; (800c3e4 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c3aa:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c3ac:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c3ae:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c3b0:	f7f5 fc22 	bl	8001bf8 <HAL_InitTick>
  return HAL_OK;
 800c3b4:	2000      	movs	r0, #0
}
 800c3b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c3ba:	0198      	lsls	r0, r3, #6
 800c3bc:	d4b1      	bmi.n	800c322 <HAL_RCC_ClockConfig+0x76>
 800c3be:	e789      	b.n	800c2d4 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c3c0:	2001      	movs	r0, #1
}
 800c3c2:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c3c4:	4b04      	ldr	r3, [pc, #16]	; (800c3d8 <HAL_RCC_ClockConfig+0x12c>)
 800c3c6:	681b      	ldr	r3, [r3, #0]
 800c3c8:	039e      	lsls	r6, r3, #14
 800c3ca:	d4aa      	bmi.n	800c322 <HAL_RCC_ClockConfig+0x76>
 800c3cc:	e782      	b.n	800c2d4 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c3ce:	2003      	movs	r0, #3
 800c3d0:	e781      	b.n	800c2d6 <HAL_RCC_ClockConfig+0x2a>
 800c3d2:	bf00      	nop
 800c3d4:	40023c00 	.word	0x40023c00
 800c3d8:	40023800 	.word	0x40023800
 800c3dc:	0802f670 	.word	0x0802f670
 800c3e0:	2000007c 	.word	0x2000007c
 800c3e4:	20000084 	.word	0x20000084

0800c3e8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c3e8:	4b04      	ldr	r3, [pc, #16]	; (800c3fc <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c3ea:	4905      	ldr	r1, [pc, #20]	; (800c400 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c3ec:	689b      	ldr	r3, [r3, #8]
 800c3ee:	4a05      	ldr	r2, [pc, #20]	; (800c404 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c3f0:	6808      	ldr	r0, [r1, #0]
 800c3f2:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c3f6:	5cd3      	ldrb	r3, [r2, r3]
}
 800c3f8:	40d8      	lsrs	r0, r3
 800c3fa:	4770      	bx	lr
 800c3fc:	40023800 	.word	0x40023800
 800c400:	2000007c 	.word	0x2000007c
 800c404:	0802f680 	.word	0x0802f680

0800c408 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c408:	4b0e      	ldr	r3, [pc, #56]	; (800c444 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c40a:	220f      	movs	r2, #15
 800c40c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c40e:	689a      	ldr	r2, [r3, #8]
 800c410:	f002 0203 	and.w	r2, r2, #3
 800c414:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c416:	689a      	ldr	r2, [r3, #8]
 800c418:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c41c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c41e:	689a      	ldr	r2, [r3, #8]
 800c420:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c424:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c426:	689b      	ldr	r3, [r3, #8]
 800c428:	08db      	lsrs	r3, r3, #3
{
 800c42a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c42c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c430:	4c05      	ldr	r4, [pc, #20]	; (800c448 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c432:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c434:	6823      	ldr	r3, [r4, #0]
}
 800c436:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c43a:	f003 030f 	and.w	r3, r3, #15
 800c43e:	600b      	str	r3, [r1, #0]
}
 800c440:	4770      	bx	lr
 800c442:	bf00      	nop
 800c444:	40023800 	.word	0x40023800
 800c448:	40023c00 	.word	0x40023c00

0800c44c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c44c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c44e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c450:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c454:	b083      	sub	sp, #12
 800c456:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c458:	d111      	bne.n	800c47e <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c45a:	f013 0f0c 	tst.w	r3, #12
 800c45e:	d16f      	bne.n	800c540 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c460:	0698      	lsls	r0, r3, #26
 800c462:	f100 80c2 	bmi.w	800c5ea <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c466:	f013 0310 	ands.w	r3, r3, #16
 800c46a:	f000 80bb 	beq.w	800c5e4 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c46e:	4b89      	ldr	r3, [pc, #548]	; (800c694 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c470:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c474:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c478:	2000      	movs	r0, #0
}
 800c47a:	b003      	add	sp, #12
 800c47c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c47e:	4b86      	ldr	r3, [pc, #536]	; (800c698 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c480:	4e86      	ldr	r6, [pc, #536]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c482:	2200      	movs	r2, #0
 800c484:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c486:	f7fd fadf 	bl	8009a48 <HAL_GetTick>
 800c48a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c48c:	e004      	b.n	800c498 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c48e:	f7fd fadb 	bl	8009a48 <HAL_GetTick>
 800c492:	1b43      	subs	r3, r0, r5
 800c494:	2b02      	cmp	r3, #2
 800c496:	d850      	bhi.n	800c53a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c498:	6833      	ldr	r3, [r6, #0]
 800c49a:	0118      	lsls	r0, r3, #4
 800c49c:	d4f7      	bmi.n	800c48e <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c49e:	6823      	ldr	r3, [r4, #0]
 800c4a0:	07d9      	lsls	r1, r3, #31
 800c4a2:	d506      	bpl.n	800c4b2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c4a4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c4a8:	0712      	lsls	r2, r2, #28
 800c4aa:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c4ae:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c4b2:	079a      	lsls	r2, r3, #30
 800c4b4:	d515      	bpl.n	800c4e2 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c4b6:	4979      	ldr	r1, [pc, #484]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c4b8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c4ba:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c4be:	6865      	ldr	r5, [r4, #4]
 800c4c0:	0612      	lsls	r2, r2, #24
 800c4c2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c4c6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c4ca:	4302      	orrs	r2, r0
 800c4cc:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c4d0:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c4d4:	69e2      	ldr	r2, [r4, #28]
 800c4d6:	f020 001f 	bic.w	r0, r0, #31
 800c4da:	3a01      	subs	r2, #1
 800c4dc:	4302      	orrs	r2, r0
 800c4de:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c4e2:	065b      	lsls	r3, r3, #25
 800c4e4:	d509      	bpl.n	800c4fa <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c4e6:	1d20      	adds	r0, r4, #4
 800c4e8:	c80b      	ldmia	r0, {r0, r1, r3}
 800c4ea:	061b      	lsls	r3, r3, #24
 800c4ec:	4a6b      	ldr	r2, [pc, #428]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c4ee:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4f2:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c4f6:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c4fa:	4b67      	ldr	r3, [pc, #412]	; (800c698 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c4fc:	4e67      	ldr	r6, [pc, #412]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c4fe:	2201      	movs	r2, #1
 800c500:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c502:	f7fd faa1 	bl	8009a48 <HAL_GetTick>
 800c506:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c508:	e004      	b.n	800c514 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c50a:	f7fd fa9d 	bl	8009a48 <HAL_GetTick>
 800c50e:	1b40      	subs	r0, r0, r5
 800c510:	2802      	cmp	r0, #2
 800c512:	d812      	bhi.n	800c53a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c514:	6833      	ldr	r3, [r6, #0]
 800c516:	011f      	lsls	r7, r3, #4
 800c518:	d5f7      	bpl.n	800c50a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c51a:	6823      	ldr	r3, [r4, #0]
 800c51c:	e79d      	b.n	800c45a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c51e:	f7fd fa93 	bl	8009a48 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c522:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c526:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c528:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c52a:	079b      	lsls	r3, r3, #30
 800c52c:	f100 80a5 	bmi.w	800c67a <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c530:	f7fd fa8a 	bl	8009a48 <HAL_GetTick>
 800c534:	1b80      	subs	r0, r0, r6
 800c536:	42b8      	cmp	r0, r7
 800c538:	d9f6      	bls.n	800c528 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c53a:	2003      	movs	r0, #3
}
 800c53c:	b003      	add	sp, #12
 800c53e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c540:	4b55      	ldr	r3, [pc, #340]	; (800c698 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c542:	4e56      	ldr	r6, [pc, #344]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c544:	2200      	movs	r2, #0
 800c546:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c548:	f7fd fa7e 	bl	8009a48 <HAL_GetTick>
 800c54c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c54e:	e004      	b.n	800c55a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c550:	f7fd fa7a 	bl	8009a48 <HAL_GetTick>
 800c554:	1b43      	subs	r3, r0, r5
 800c556:	2b02      	cmp	r3, #2
 800c558:	d8ef      	bhi.n	800c53a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c55a:	6833      	ldr	r3, [r6, #0]
 800c55c:	0098      	lsls	r0, r3, #2
 800c55e:	d4f7      	bmi.n	800c550 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c560:	6822      	ldr	r2, [r4, #0]
 800c562:	0751      	lsls	r1, r2, #29
 800c564:	d515      	bpl.n	800c592 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c566:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c568:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c56c:	6920      	ldr	r0, [r4, #16]
 800c56e:	061b      	lsls	r3, r3, #24
 800c570:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c574:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c578:	430b      	orrs	r3, r1
 800c57a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c57e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c582:	6a21      	ldr	r1, [r4, #32]
 800c584:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c588:	3901      	subs	r1, #1
 800c58a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c58e:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c592:	0713      	lsls	r3, r2, #28
 800c594:	d514      	bpl.n	800c5c0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c596:	4a41      	ldr	r2, [pc, #260]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c598:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c59a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c59e:	6920      	ldr	r0, [r4, #16]
 800c5a0:	071b      	lsls	r3, r3, #28
 800c5a2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c5a6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c5aa:	430b      	orrs	r3, r1
 800c5ac:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c5b0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c5b4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c5b6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c5ba:	430b      	orrs	r3, r1
 800c5bc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c5c0:	4b35      	ldr	r3, [pc, #212]	; (800c698 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c5c2:	4e36      	ldr	r6, [pc, #216]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c5c4:	2201      	movs	r2, #1
 800c5c6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c5c8:	f7fd fa3e 	bl	8009a48 <HAL_GetTick>
 800c5cc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c5ce:	e004      	b.n	800c5da <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c5d0:	f7fd fa3a 	bl	8009a48 <HAL_GetTick>
 800c5d4:	1b40      	subs	r0, r0, r5
 800c5d6:	2802      	cmp	r0, #2
 800c5d8:	d8af      	bhi.n	800c53a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c5da:	6833      	ldr	r3, [r6, #0]
 800c5dc:	009f      	lsls	r7, r3, #2
 800c5de:	d5f7      	bpl.n	800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c5e0:	6823      	ldr	r3, [r4, #0]
 800c5e2:	e73d      	b.n	800c460 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c5e4:	4618      	mov	r0, r3
}
 800c5e6:	b003      	add	sp, #12
 800c5e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c5ea:	4b2c      	ldr	r3, [pc, #176]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c5ec:	4d2c      	ldr	r5, [pc, #176]	; (800c6a0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c5ee:	2200      	movs	r2, #0
 800c5f0:	9201      	str	r2, [sp, #4]
 800c5f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c5f4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c5f8:	641a      	str	r2, [r3, #64]	; 0x40
 800c5fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c5fc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c600:	9301      	str	r3, [sp, #4]
 800c602:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c604:	682b      	ldr	r3, [r5, #0]
 800c606:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c60a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c60c:	f7fd fa1c 	bl	8009a48 <HAL_GetTick>
 800c610:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c612:	e004      	b.n	800c61e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c614:	f7fd fa18 	bl	8009a48 <HAL_GetTick>
 800c618:	1b83      	subs	r3, r0, r6
 800c61a:	2b02      	cmp	r3, #2
 800c61c:	d88d      	bhi.n	800c53a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c61e:	682b      	ldr	r3, [r5, #0]
 800c620:	05d9      	lsls	r1, r3, #23
 800c622:	d5f7      	bpl.n	800c614 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c624:	4d1d      	ldr	r5, [pc, #116]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c626:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c628:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c62a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c62e:	d111      	bne.n	800c654 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c630:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c634:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c638:	d021      	beq.n	800c67e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c63a:	4918      	ldr	r1, [pc, #96]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c63c:	688a      	ldr	r2, [r1, #8]
 800c63e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c642:	608a      	str	r2, [r1, #8]
 800c644:	4a15      	ldr	r2, [pc, #84]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c646:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c648:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c64c:	430b      	orrs	r3, r1
 800c64e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c650:	6823      	ldr	r3, [r4, #0]
 800c652:	e708      	b.n	800c466 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c654:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c658:	4291      	cmp	r1, r2
 800c65a:	d0eb      	beq.n	800c634 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c65c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c65e:	4a0e      	ldr	r2, [pc, #56]	; (800c698 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c660:	2101      	movs	r1, #1
 800c662:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c666:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c66a:	2100      	movs	r1, #0
 800c66c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c670:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c672:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c674:	07da      	lsls	r2, r3, #31
 800c676:	f53f af52 	bmi.w	800c51e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c67a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c67c:	e7d8      	b.n	800c630 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c67e:	4807      	ldr	r0, [pc, #28]	; (800c69c <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c680:	6882      	ldr	r2, [r0, #8]
 800c682:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c686:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c68a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c68e:	430a      	orrs	r2, r1
 800c690:	6082      	str	r2, [r0, #8]
 800c692:	e7d7      	b.n	800c644 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c694:	42471000 	.word	0x42471000
 800c698:	42470000 	.word	0x42470000
 800c69c:	40023800 	.word	0x40023800
 800c6a0:	40007000 	.word	0x40007000

0800c6a4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c6a4:	b1f0      	cbz	r0, 800c6e4 <HAL_SDRAM_Init+0x40>
{
 800c6a6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c6a8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c6ac:	460d      	mov	r5, r1
 800c6ae:	4604      	mov	r4, r0
 800c6b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c6b4:	b18b      	cbz	r3, 800c6da <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c6b6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c6b8:	2302      	movs	r3, #2
 800c6ba:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c6be:	f851 0b04 	ldr.w	r0, [r1], #4
 800c6c2:	f001 fa2d 	bl	800db20 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c6c6:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c6ca:	4629      	mov	r1, r5
 800c6cc:	f001 fa66 	bl	800db9c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c6d0:	2301      	movs	r3, #1
 800c6d2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c6d6:	2000      	movs	r0, #0
}
 800c6d8:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c6da:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c6de:	f7f5 fa23 	bl	8001b28 <HAL_SDRAM_MspInit>
 800c6e2:	e7e8      	b.n	800c6b6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c6e4:	2001      	movs	r0, #1
}
 800c6e6:	4770      	bx	lr

0800c6e8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c6e8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c6ea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c6ee:	2b02      	cmp	r3, #2
{
 800c6f0:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c6f2:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c6f4:	d004      	beq.n	800c700 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c6f6:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c6fa:	2c01      	cmp	r4, #1
 800c6fc:	d001      	beq.n	800c702 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c6fe:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c700:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c702:	460e      	mov	r6, r1
 800c704:	2302      	movs	r3, #2
 800c706:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c70a:	6828      	ldr	r0, [r5, #0]
 800c70c:	f001 fa92 	bl	800dc34 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c710:	6833      	ldr	r3, [r6, #0]
 800c712:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c714:	bf06      	itte	eq
 800c716:	2305      	moveq	r3, #5
 800c718:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c71c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c720:	2000      	movs	r0, #0
}
 800c722:	bd70      	pop	{r4, r5, r6, pc}

0800c724 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c724:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c726:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c72a:	2b02      	cmp	r3, #2
{
 800c72c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c72e:	b2d8      	uxtb	r0, r3
 800c730:	d005      	beq.n	800c73e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c732:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c736:	2b01      	cmp	r3, #1
 800c738:	b2dd      	uxtb	r5, r3
 800c73a:	d001      	beq.n	800c740 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c73c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c73e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c740:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c742:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c744:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c748:	f001 fa9e 	bl	800dc88 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c74c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c750:	2000      	movs	r0, #0
}
 800c752:	bd38      	pop	{r3, r4, r5, pc}

0800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c758:	b082      	sub	sp, #8
 800c75a:	461d      	mov	r5, r3
 800c75c:	4616      	mov	r6, r2
 800c75e:	460c      	mov	r4, r1
 800c760:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c762:	f7fd f971 	bl	8009a48 <HAL_GetTick>
 800c766:	4435      	add	r5, r6
 800c768:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c76a:	f7fd f96d 	bl	8009a48 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c76e:	4b27      	ldr	r3, [pc, #156]	; (800c80c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c770:	681b      	ldr	r3, [r3, #0]
 800c772:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c776:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c77a:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c77c:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c77e:	1c73      	adds	r3, r6, #1
 800c780:	6839      	ldr	r1, [r7, #0]
 800c782:	d107      	bne.n	800c794 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c784:	688b      	ldr	r3, [r1, #8]
 800c786:	ea34 0303 	bics.w	r3, r4, r3
 800c78a:	d0fb      	beq.n	800c784 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c78c:	2000      	movs	r0, #0
}
 800c78e:	b002      	add	sp, #8
 800c790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c794:	688b      	ldr	r3, [r1, #8]
 800c796:	ea34 0303 	bics.w	r3, r4, r3
 800c79a:	d1f7      	bne.n	800c78c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c79c:	f7fd f954 	bl	8009a48 <HAL_GetTick>
 800c7a0:	eba0 0008 	sub.w	r0, r0, r8
 800c7a4:	42a8      	cmp	r0, r5
 800c7a6:	d208      	bcs.n	800c7ba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c7a8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c7aa:	2b00      	cmp	r3, #0
      count--;
 800c7ac:	9b01      	ldr	r3, [sp, #4]
 800c7ae:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c7b2:	bf08      	it	eq
 800c7b4:	2500      	moveq	r5, #0
      count--;
 800c7b6:	9301      	str	r3, [sp, #4]
 800c7b8:	e7e1      	b.n	800c77e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c7ba:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c7be:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c7c0:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c7c4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c7c8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c7ca:	d013      	beq.n	800c7f4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c7cc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c7ce:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c7d2:	d107      	bne.n	800c7e4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c7d4:	681a      	ldr	r2, [r3, #0]
 800c7d6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c7da:	601a      	str	r2, [r3, #0]
 800c7dc:	681a      	ldr	r2, [r3, #0]
 800c7de:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c7e2:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c7e4:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c7e6:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c7e8:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c7ec:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c7f0:	2003      	movs	r0, #3
 800c7f2:	e7cc      	b.n	800c78e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c7f4:	68ba      	ldr	r2, [r7, #8]
 800c7f6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c7fa:	d002      	beq.n	800c802 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c7fc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c800:	d1e4      	bne.n	800c7cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c802:	681a      	ldr	r2, [r3, #0]
 800c804:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c808:	601a      	str	r2, [r3, #0]
 800c80a:	e7df      	b.n	800c7cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c80c:	2000007c 	.word	0x2000007c

0800c810 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c810:	b538      	push	{r3, r4, r5, lr}
 800c812:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c814:	6842      	ldr	r2, [r0, #4]
 800c816:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c81a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c81c:	d006      	beq.n	800c82c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c81e:	460a      	mov	r2, r1
 800c820:	2101      	movs	r1, #1
 800c822:	f7ff ff97 	bl	800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c826:	b978      	cbnz	r0, 800c848 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c828:	2000      	movs	r0, #0
}
 800c82a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c82c:	6882      	ldr	r2, [r0, #8]
 800c82e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c832:	d01c      	beq.n	800c86e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c834:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c838:	d00c      	beq.n	800c854 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c83a:	460a      	mov	r2, r1
 800c83c:	4620      	mov	r0, r4
 800c83e:	2180      	movs	r1, #128	; 0x80
 800c840:	f7ff ff88 	bl	800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c844:	2800      	cmp	r0, #0
 800c846:	d0ef      	beq.n	800c828 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c848:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c84a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c84e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c850:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c852:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c854:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c856:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c858:	6829      	ldr	r1, [r5, #0]
 800c85a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c85e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c860:	2101      	movs	r1, #1
 800c862:	f7ff ff77 	bl	800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c866:	2800      	cmp	r0, #0
 800c868:	d1ee      	bne.n	800c848 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c86a:	2000      	movs	r0, #0
 800c86c:	e7dd      	b.n	800c82a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c86e:	6800      	ldr	r0, [r0, #0]
 800c870:	6802      	ldr	r2, [r0, #0]
 800c872:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c876:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c878:	460a      	mov	r2, r1
 800c87a:	4620      	mov	r0, r4
 800c87c:	2180      	movs	r1, #128	; 0x80
 800c87e:	f7ff ff69 	bl	800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c882:	2800      	cmp	r0, #0
 800c884:	d0d0      	beq.n	800c828 <SPI_EndRxTransaction+0x18>
 800c886:	e7df      	b.n	800c848 <SPI_EndRxTransaction+0x38>

0800c888 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c888:	2800      	cmp	r0, #0
 800c88a:	d05c      	beq.n	800c946 <HAL_SPI_Init+0xbe>
{
 800c88c:	b570      	push	{r4, r5, r6, lr}
 800c88e:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c890:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c892:	2800      	cmp	r0, #0
 800c894:	d047      	beq.n	800c926 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c896:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c898:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c89c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c8a0:	2200      	movs	r2, #0
 800c8a2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c8a4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c8a8:	2b00      	cmp	r3, #0
 800c8aa:	d042      	beq.n	800c932 <HAL_SPI_Init+0xaa>
 800c8ac:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c8ae:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c8b0:	68a5      	ldr	r5, [r4, #8]
 800c8b2:	69a2      	ldr	r2, [r4, #24]
 800c8b4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c8b6:	2302      	movs	r3, #2
 800c8b8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c8bc:	680b      	ldr	r3, [r1, #0]
 800c8be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c8c2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c8c4:	6863      	ldr	r3, [r4, #4]
 800c8c6:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c8ca:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c8ce:	432b      	orrs	r3, r5
 800c8d0:	68e5      	ldr	r5, [r4, #12]
 800c8d2:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c8d6:	432b      	orrs	r3, r5
 800c8d8:	6925      	ldr	r5, [r4, #16]
 800c8da:	f005 0502 	and.w	r5, r5, #2
 800c8de:	432b      	orrs	r3, r5
 800c8e0:	6965      	ldr	r5, [r4, #20]
 800c8e2:	f005 0501 	and.w	r5, r5, #1
 800c8e6:	432b      	orrs	r3, r5
 800c8e8:	69e5      	ldr	r5, [r4, #28]
 800c8ea:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c8ee:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c8f2:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c8f6:	4333      	orrs	r3, r6
 800c8f8:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c8fa:	0c12      	lsrs	r2, r2, #16
 800c8fc:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c900:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c904:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c908:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c90c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c90e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c910:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c912:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c914:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c916:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c91a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c91c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c91e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c920:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c924:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c926:	6863      	ldr	r3, [r4, #4]
 800c928:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c92c:	d0b6      	beq.n	800c89c <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c92e:	61e0      	str	r0, [r4, #28]
 800c930:	e7b4      	b.n	800c89c <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c932:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c934:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c938:	f7f5 f812 	bl	8001960 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c93c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c940:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c944:	e7b3      	b.n	800c8ae <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c946:	2001      	movs	r0, #1
}
 800c948:	4770      	bx	lr
 800c94a:	bf00      	nop

0800c94c <HAL_SPI_Transmit>:
{
 800c94c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c950:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c952:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c956:	2801      	cmp	r0, #1
{
 800c958:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c95a:	f000 8085 	beq.w	800ca68 <HAL_SPI_Transmit+0x11c>
 800c95e:	461d      	mov	r5, r3
 800c960:	2301      	movs	r3, #1
 800c962:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c966:	4688      	mov	r8, r1
 800c968:	4617      	mov	r7, r2
 800c96a:	f7fd f86d 	bl	8009a48 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c96e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c972:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c974:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c976:	b2d8      	uxtb	r0, r3
 800c978:	d009      	beq.n	800c98e <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c97a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c97c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c97e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c980:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c984:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c988:	b002      	add	sp, #8
 800c98a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c98e:	f1b8 0f00 	cmp.w	r8, #0
 800c992:	d0f3      	beq.n	800c97c <HAL_SPI_Transmit+0x30>
 800c994:	2f00      	cmp	r7, #0
 800c996:	d0f1      	beq.n	800c97c <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c998:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c99a:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c99c:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c9a0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c9a2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9a4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c9a8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c9ac:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c9b0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c9b2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c9b4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c9b6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c9b8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c9ba:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c9bc:	f000 8085 	beq.w	800caca <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c9c0:	6803      	ldr	r3, [r0, #0]
 800c9c2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c9c4:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c9c6:	d403      	bmi.n	800c9d0 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c9c8:	6803      	ldr	r3, [r0, #0]
 800c9ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c9ce:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c9d0:	68e3      	ldr	r3, [r4, #12]
 800c9d2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c9d6:	d04b      	beq.n	800ca70 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c9d8:	6863      	ldr	r3, [r4, #4]
 800c9da:	2b00      	cmp	r3, #0
 800c9dc:	f000 8097 	beq.w	800cb0e <HAL_SPI_Transmit+0x1c2>
 800c9e0:	2f01      	cmp	r7, #1
 800c9e2:	f000 8094 	beq.w	800cb0e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c9e6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9e8:	b29b      	uxth	r3, r3
 800c9ea:	b1ab      	cbz	r3, 800ca18 <HAL_SPI_Transmit+0xcc>
 800c9ec:	1c68      	adds	r0, r5, #1
 800c9ee:	f040 8083 	bne.w	800caf8 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9f2:	6823      	ldr	r3, [r4, #0]
 800c9f4:	689a      	ldr	r2, [r3, #8]
 800c9f6:	0791      	lsls	r1, r2, #30
 800c9f8:	f140 8094 	bpl.w	800cb24 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c9fc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9fe:	7812      	ldrb	r2, [r2, #0]
 800ca00:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ca02:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca04:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca06:	3901      	subs	r1, #1
 800ca08:	b289      	uxth	r1, r1
 800ca0a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca0c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca0e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800ca10:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca12:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800ca14:	2900      	cmp	r1, #0
 800ca16:	d1ec      	bne.n	800c9f2 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca18:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ca1a:	4b5b      	ldr	r3, [pc, #364]	; (800cb88 <HAL_SPI_Transmit+0x23c>)
 800ca1c:	4a5b      	ldr	r2, [pc, #364]	; (800cb8c <HAL_SPI_Transmit+0x240>)
 800ca1e:	681b      	ldr	r3, [r3, #0]
 800ca20:	fba2 2303 	umull	r2, r3, r2, r3
 800ca24:	0d5b      	lsrs	r3, r3, #21
 800ca26:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800ca2a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca2e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ca32:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca34:	d107      	bne.n	800ca46 <HAL_SPI_Transmit+0xfa>
 800ca36:	e098      	b.n	800cb6a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800ca38:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ca3a:	6822      	ldr	r2, [r4, #0]
      count--;
 800ca3c:	3b01      	subs	r3, #1
 800ca3e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ca40:	6893      	ldr	r3, [r2, #8]
 800ca42:	061b      	lsls	r3, r3, #24
 800ca44:	d502      	bpl.n	800ca4c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800ca46:	9b01      	ldr	r3, [sp, #4]
 800ca48:	2b00      	cmp	r3, #0
 800ca4a:	d1f5      	bne.n	800ca38 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800ca4c:	68a3      	ldr	r3, [r4, #8]
 800ca4e:	b933      	cbnz	r3, 800ca5e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ca50:	6822      	ldr	r2, [r4, #0]
 800ca52:	9300      	str	r3, [sp, #0]
 800ca54:	68d3      	ldr	r3, [r2, #12]
 800ca56:	9300      	str	r3, [sp, #0]
 800ca58:	6893      	ldr	r3, [r2, #8]
 800ca5a:	9300      	str	r3, [sp, #0]
 800ca5c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800ca5e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800ca60:	3800      	subs	r0, #0
 800ca62:	bf18      	it	ne
 800ca64:	2001      	movne	r0, #1
error:
 800ca66:	e789      	b.n	800c97c <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800ca68:	2002      	movs	r0, #2
}
 800ca6a:	b002      	add	sp, #8
 800ca6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca70:	6861      	ldr	r1, [r4, #4]
 800ca72:	2900      	cmp	r1, #0
 800ca74:	d176      	bne.n	800cb64 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca76:	4643      	mov	r3, r8
 800ca78:	f833 7b02 	ldrh.w	r7, [r3], #2
 800ca7c:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca7e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca80:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca82:	3b01      	subs	r3, #1
 800ca84:	b29b      	uxth	r3, r3
 800ca86:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca88:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca8a:	b29b      	uxth	r3, r3
 800ca8c:	2b00      	cmp	r3, #0
 800ca8e:	d0c4      	beq.n	800ca1a <HAL_SPI_Transmit+0xce>
 800ca90:	1c6b      	adds	r3, r5, #1
 800ca92:	d15e      	bne.n	800cb52 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca94:	6883      	ldr	r3, [r0, #8]
 800ca96:	079f      	lsls	r7, r3, #30
 800ca98:	d50f      	bpl.n	800caba <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca9a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ca9c:	f832 3b02 	ldrh.w	r3, [r2], #2
 800caa0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800caa2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800caa4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800caa6:	3b01      	subs	r3, #1
 800caa8:	b29b      	uxth	r3, r3
 800caaa:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800caac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800caae:	b29b      	uxth	r3, r3
 800cab0:	2b00      	cmp	r3, #0
 800cab2:	d0b1      	beq.n	800ca18 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cab4:	6883      	ldr	r3, [r0, #8]
 800cab6:	079f      	lsls	r7, r3, #30
 800cab8:	d4ef      	bmi.n	800ca9a <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800caba:	f7fc ffc5 	bl	8009a48 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cabe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cac0:	b29b      	uxth	r3, r3
 800cac2:	2b00      	cmp	r3, #0
 800cac4:	d0a8      	beq.n	800ca18 <HAL_SPI_Transmit+0xcc>
 800cac6:	6820      	ldr	r0, [r4, #0]
 800cac8:	e7e4      	b.n	800ca94 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800caca:	6803      	ldr	r3, [r0, #0]
 800cacc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cad0:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800cad2:	6803      	ldr	r3, [r0, #0]
 800cad4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800cad8:	6003      	str	r3, [r0, #0]
 800cada:	e771      	b.n	800c9c0 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cadc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800cade:	7812      	ldrb	r2, [r2, #0]
 800cae0:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800cae2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cae4:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cae6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800cae8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800caea:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800caec:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800caee:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800caf0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800caf2:	b29b      	uxth	r3, r3
 800caf4:	2b00      	cmp	r3, #0
 800caf6:	d08f      	beq.n	800ca18 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800caf8:	6823      	ldr	r3, [r4, #0]
 800cafa:	689a      	ldr	r2, [r3, #8]
 800cafc:	0792      	lsls	r2, r2, #30
 800cafe:	d4ed      	bmi.n	800cadc <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cb00:	f7fc ffa2 	bl	8009a48 <HAL_GetTick>
 800cb04:	1b80      	subs	r0, r0, r6
 800cb06:	42a8      	cmp	r0, r5
 800cb08:	d3f2      	bcc.n	800caf0 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800cb0a:	2003      	movs	r0, #3
 800cb0c:	e736      	b.n	800c97c <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cb0e:	f898 3000 	ldrb.w	r3, [r8]
 800cb12:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800cb14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb16:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cb18:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb1a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cb1c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cb1e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cb20:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cb22:	e760      	b.n	800c9e6 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cb24:	f7fc ff90 	bl	8009a48 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800cb28:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb2a:	b29b      	uxth	r3, r3
 800cb2c:	2b00      	cmp	r3, #0
 800cb2e:	f47f af60 	bne.w	800c9f2 <HAL_SPI_Transmit+0xa6>
 800cb32:	e771      	b.n	800ca18 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cb34:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cb36:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cb3a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cb3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cb3e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cb40:	3b01      	subs	r3, #1
 800cb42:	b29b      	uxth	r3, r3
 800cb44:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800cb46:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb48:	b29b      	uxth	r3, r3
 800cb4a:	2b00      	cmp	r3, #0
 800cb4c:	f43f af64 	beq.w	800ca18 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800cb50:	6822      	ldr	r2, [r4, #0]
 800cb52:	6893      	ldr	r3, [r2, #8]
 800cb54:	0799      	lsls	r1, r3, #30
 800cb56:	d4ed      	bmi.n	800cb34 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cb58:	f7fc ff76 	bl	8009a48 <HAL_GetTick>
 800cb5c:	1b80      	subs	r0, r0, r6
 800cb5e:	42a8      	cmp	r0, r5
 800cb60:	d3f1      	bcc.n	800cb46 <HAL_SPI_Transmit+0x1fa>
 800cb62:	e7d2      	b.n	800cb0a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb64:	2f01      	cmp	r7, #1
 800cb66:	d18f      	bne.n	800ca88 <HAL_SPI_Transmit+0x13c>
 800cb68:	e785      	b.n	800ca76 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cb6a:	4633      	mov	r3, r6
 800cb6c:	462a      	mov	r2, r5
 800cb6e:	2180      	movs	r1, #128	; 0x80
 800cb70:	4620      	mov	r0, r4
 800cb72:	f7ff fdef 	bl	800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cb76:	2800      	cmp	r0, #0
 800cb78:	f43f af68 	beq.w	800ca4c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cb7c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cb7e:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cb80:	4313      	orrs	r3, r2
 800cb82:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cb84:	6562      	str	r2, [r4, #84]	; 0x54
 800cb86:	e761      	b.n	800ca4c <HAL_SPI_Transmit+0x100>
 800cb88:	2000007c 	.word	0x2000007c
 800cb8c:	165e9f81 	.word	0x165e9f81

0800cb90 <HAL_SPI_TransmitReceive>:
{
 800cb90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb94:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cb96:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800cb9a:	2801      	cmp	r0, #1
{
 800cb9c:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cb9e:	f000 80ac 	beq.w	800ccfa <HAL_SPI_TransmitReceive+0x16a>
 800cba2:	461e      	mov	r6, r3
 800cba4:	2301      	movs	r3, #1
 800cba6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cbaa:	4690      	mov	r8, r2
 800cbac:	460f      	mov	r7, r1
 800cbae:	f7fc ff4b 	bl	8009a48 <HAL_GetTick>
 800cbb2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cbb4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cbb8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cbba:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cbbc:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cbbe:	d011      	beq.n	800cbe4 <HAL_SPI_TransmitReceive+0x54>
 800cbc0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cbc4:	d009      	beq.n	800cbda <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cbc6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cbc8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cbca:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cbcc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cbd0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cbd4:	b002      	add	sp, #8
 800cbd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cbda:	68a1      	ldr	r1, [r4, #8]
 800cbdc:	2900      	cmp	r1, #0
 800cbde:	d1f2      	bne.n	800cbc6 <HAL_SPI_TransmitReceive+0x36>
 800cbe0:	2a04      	cmp	r2, #4
 800cbe2:	d1f0      	bne.n	800cbc6 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cbe4:	2f00      	cmp	r7, #0
 800cbe6:	f000 808c 	beq.w	800cd02 <HAL_SPI_TransmitReceive+0x172>
 800cbea:	f1b8 0f00 	cmp.w	r8, #0
 800cbee:	f000 8088 	beq.w	800cd02 <HAL_SPI_TransmitReceive+0x172>
 800cbf2:	2e00      	cmp	r6, #0
 800cbf4:	f000 8085 	beq.w	800cd02 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cbf8:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cbfc:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cc00:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cc02:	bf1c      	itt	ne
 800cc04:	2205      	movne	r2, #5
 800cc06:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cc0a:	2200      	movs	r2, #0
 800cc0c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cc0e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cc12:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cc14:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cc16:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cc18:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cc1a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cc1c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cc1e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cc20:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cc22:	d403      	bmi.n	800cc2c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cc24:	6811      	ldr	r1, [r2, #0]
 800cc26:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cc2a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cc2c:	68e1      	ldr	r1, [r4, #12]
 800cc2e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cc32:	f000 809e 	beq.w	800cd72 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc36:	2b00      	cmp	r3, #0
 800cc38:	f000 8091 	beq.w	800cd5e <HAL_SPI_TransmitReceive+0x1ce>
 800cc3c:	2e01      	cmp	r6, #1
 800cc3e:	f000 808e 	beq.w	800cd5e <HAL_SPI_TransmitReceive+0x1ce>
 800cc42:	9b08      	ldr	r3, [sp, #32]
 800cc44:	3301      	adds	r3, #1
        txallowed = 1U;
 800cc46:	f04f 0601 	mov.w	r6, #1
 800cc4a:	d028      	beq.n	800cc9e <HAL_SPI_TransmitReceive+0x10e>
 800cc4c:	e05b      	b.n	800cd06 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc4e:	6821      	ldr	r1, [r4, #0]
 800cc50:	688b      	ldr	r3, [r1, #8]
 800cc52:	0798      	lsls	r0, r3, #30
 800cc54:	d50f      	bpl.n	800cc76 <HAL_SPI_TransmitReceive+0xe6>
 800cc56:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc58:	b29b      	uxth	r3, r3
 800cc5a:	b163      	cbz	r3, 800cc76 <HAL_SPI_TransmitReceive+0xe6>
 800cc5c:	b15e      	cbz	r6, 800cc76 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cc5e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc60:	781b      	ldrb	r3, [r3, #0]
 800cc62:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cc64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc66:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc68:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cc6a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cc6c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc6e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cc70:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cc72:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc74:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc76:	688a      	ldr	r2, [r1, #8]
 800cc78:	f012 0201 	ands.w	r2, r2, #1
 800cc7c:	d00d      	beq.n	800cc9a <HAL_SPI_TransmitReceive+0x10a>
 800cc7e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc80:	b29b      	uxth	r3, r3
 800cc82:	b153      	cbz	r3, 800cc9a <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cc84:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cc86:	68c9      	ldr	r1, [r1, #12]
 800cc88:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cc8a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cc8c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cc8e:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cc90:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cc92:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cc94:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cc96:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cc98:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cc9a:	f7fc fed5 	bl	8009a48 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc9e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cca0:	b292      	uxth	r2, r2
 800cca2:	2a00      	cmp	r2, #0
 800cca4:	d1d3      	bne.n	800cc4e <HAL_SPI_TransmitReceive+0xbe>
 800cca6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cca8:	b29b      	uxth	r3, r3
 800ccaa:	2b00      	cmp	r3, #0
 800ccac:	d1cf      	bne.n	800cc4e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ccae:	4b79      	ldr	r3, [pc, #484]	; (800ce94 <HAL_SPI_TransmitReceive+0x304>)
 800ccb0:	4a79      	ldr	r2, [pc, #484]	; (800ce98 <HAL_SPI_TransmitReceive+0x308>)
 800ccb2:	681b      	ldr	r3, [r3, #0]
 800ccb4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ccb8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ccba:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ccbe:	0d5b      	lsrs	r3, r3, #21
 800ccc0:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ccc4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800ccc8:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ccca:	d107      	bne.n	800ccdc <HAL_SPI_TransmitReceive+0x14c>
 800cccc:	e0d2      	b.n	800ce74 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800ccce:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ccd0:	6822      	ldr	r2, [r4, #0]
      count--;
 800ccd2:	3b01      	subs	r3, #1
 800ccd4:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800ccd6:	6893      	ldr	r3, [r2, #8]
 800ccd8:	061b      	lsls	r3, r3, #24
 800ccda:	d502      	bpl.n	800cce2 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800ccdc:	9b01      	ldr	r3, [sp, #4]
 800ccde:	2b00      	cmp	r3, #0
 800cce0:	d1f5      	bne.n	800ccce <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cce2:	68a0      	ldr	r0, [r4, #8]
 800cce4:	2800      	cmp	r0, #0
 800cce6:	f040 8082 	bne.w	800cdee <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800ccea:	6823      	ldr	r3, [r4, #0]
 800ccec:	9000      	str	r0, [sp, #0]
 800ccee:	68da      	ldr	r2, [r3, #12]
 800ccf0:	9200      	str	r2, [sp, #0]
 800ccf2:	689b      	ldr	r3, [r3, #8]
 800ccf4:	9300      	str	r3, [sp, #0]
 800ccf6:	9b00      	ldr	r3, [sp, #0]
 800ccf8:	e766      	b.n	800cbc8 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800ccfa:	2002      	movs	r0, #2
}
 800ccfc:	b002      	add	sp, #8
 800ccfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cd02:	2001      	movs	r0, #1
 800cd04:	e760      	b.n	800cbc8 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd08:	b29b      	uxth	r3, r3
 800cd0a:	b91b      	cbnz	r3, 800cd14 <HAL_SPI_TransmitReceive+0x184>
 800cd0c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd0e:	b29b      	uxth	r3, r3
 800cd10:	2b00      	cmp	r3, #0
 800cd12:	d0cc      	beq.n	800ccae <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd14:	6822      	ldr	r2, [r4, #0]
 800cd16:	6893      	ldr	r3, [r2, #8]
 800cd18:	0799      	lsls	r1, r3, #30
 800cd1a:	d50f      	bpl.n	800cd3c <HAL_SPI_TransmitReceive+0x1ac>
 800cd1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd1e:	b29b      	uxth	r3, r3
 800cd20:	b163      	cbz	r3, 800cd3c <HAL_SPI_TransmitReceive+0x1ac>
 800cd22:	b15e      	cbz	r6, 800cd3c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cd24:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cd26:	781b      	ldrb	r3, [r3, #0]
 800cd28:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd2a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cd2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd2e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cd30:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cd32:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cd34:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd36:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cd38:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cd3a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd3c:	6893      	ldr	r3, [r2, #8]
 800cd3e:	f013 0301 	ands.w	r3, r3, #1
 800cd42:	d004      	beq.n	800cd4e <HAL_SPI_TransmitReceive+0x1be>
 800cd44:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cd46:	b289      	uxth	r1, r1
 800cd48:	2900      	cmp	r1, #0
 800cd4a:	f040 8087 	bne.w	800ce5c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cd4e:	f7fc fe7b 	bl	8009a48 <HAL_GetTick>
 800cd52:	9b08      	ldr	r3, [sp, #32]
 800cd54:	1b40      	subs	r0, r0, r5
 800cd56:	4298      	cmp	r0, r3
 800cd58:	d3d5      	bcc.n	800cd06 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cd5a:	2003      	movs	r0, #3
 800cd5c:	e734      	b.n	800cbc8 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cd5e:	783b      	ldrb	r3, [r7, #0]
 800cd60:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cd62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd64:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd66:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd68:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cd6a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cd6c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd6e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cd70:	e767      	b.n	800cc42 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd72:	2b00      	cmp	r3, #0
 800cd74:	d13d      	bne.n	800cdf2 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd76:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cd7a:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cd7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd7e:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cd80:	3b01      	subs	r3, #1
 800cd82:	b29b      	uxth	r3, r3
 800cd84:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cd86:	9b08      	ldr	r3, [sp, #32]
 800cd88:	3301      	adds	r3, #1
{
 800cd8a:	f04f 0601 	mov.w	r6, #1
 800cd8e:	d025      	beq.n	800cddc <HAL_SPI_TransmitReceive+0x24c>
 800cd90:	e032      	b.n	800cdf8 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd92:	6823      	ldr	r3, [r4, #0]
 800cd94:	689a      	ldr	r2, [r3, #8]
 800cd96:	0792      	lsls	r2, r2, #30
 800cd98:	d50d      	bpl.n	800cdb6 <HAL_SPI_TransmitReceive+0x226>
 800cd9a:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cd9c:	b292      	uxth	r2, r2
 800cd9e:	b152      	cbz	r2, 800cdb6 <HAL_SPI_TransmitReceive+0x226>
 800cda0:	b14e      	cbz	r6, 800cdb6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cda2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cda4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800cda8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800cdaa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cdac:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cdae:	3a01      	subs	r2, #1
 800cdb0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800cdb2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cdb4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cdb6:	689a      	ldr	r2, [r3, #8]
 800cdb8:	f012 0201 	ands.w	r2, r2, #1
 800cdbc:	d00c      	beq.n	800cdd8 <HAL_SPI_TransmitReceive+0x248>
 800cdbe:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cdc0:	b289      	uxth	r1, r1
 800cdc2:	b149      	cbz	r1, 800cdd8 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cdc4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cdc6:	68db      	ldr	r3, [r3, #12]
 800cdc8:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800cdcc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cdce:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cdd0:	3b01      	subs	r3, #1
 800cdd2:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cdd4:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cdd6:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cdd8:	f7fc fe36 	bl	8009a48 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cddc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdde:	b29b      	uxth	r3, r3
 800cde0:	2b00      	cmp	r3, #0
 800cde2:	d1d6      	bne.n	800cd92 <HAL_SPI_TransmitReceive+0x202>
 800cde4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cde6:	b29b      	uxth	r3, r3
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	d1d2      	bne.n	800cd92 <HAL_SPI_TransmitReceive+0x202>
 800cdec:	e75f      	b.n	800ccae <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cdee:	2000      	movs	r0, #0
 800cdf0:	e6ea      	b.n	800cbc8 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cdf2:	2e01      	cmp	r6, #1
 800cdf4:	d1c7      	bne.n	800cd86 <HAL_SPI_TransmitReceive+0x1f6>
 800cdf6:	e7be      	b.n	800cd76 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cdf8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cdfa:	b29b      	uxth	r3, r3
 800cdfc:	b923      	cbnz	r3, 800ce08 <HAL_SPI_TransmitReceive+0x278>
 800cdfe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce00:	b29b      	uxth	r3, r3
 800ce02:	2b00      	cmp	r3, #0
 800ce04:	f43f af53 	beq.w	800ccae <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ce08:	6822      	ldr	r2, [r4, #0]
 800ce0a:	6893      	ldr	r3, [r2, #8]
 800ce0c:	079f      	lsls	r7, r3, #30
 800ce0e:	d50d      	bpl.n	800ce2c <HAL_SPI_TransmitReceive+0x29c>
 800ce10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ce12:	b29b      	uxth	r3, r3
 800ce14:	b153      	cbz	r3, 800ce2c <HAL_SPI_TransmitReceive+0x29c>
 800ce16:	b14e      	cbz	r6, 800ce2c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ce18:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ce1a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ce1e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ce20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ce22:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ce24:	3b01      	subs	r3, #1
 800ce26:	b29b      	uxth	r3, r3
 800ce28:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800ce2a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ce2c:	6893      	ldr	r3, [r2, #8]
 800ce2e:	f013 0301 	ands.w	r3, r3, #1
 800ce32:	d00c      	beq.n	800ce4e <HAL_SPI_TransmitReceive+0x2be>
 800ce34:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce36:	b289      	uxth	r1, r1
 800ce38:	b149      	cbz	r1, 800ce4e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce3a:	68d1      	ldr	r1, [r2, #12]
 800ce3c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ce3e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800ce42:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800ce44:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce46:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce48:	3b01      	subs	r3, #1
 800ce4a:	b29b      	uxth	r3, r3
 800ce4c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ce4e:	f7fc fdfb 	bl	8009a48 <HAL_GetTick>
 800ce52:	9b08      	ldr	r3, [sp, #32]
 800ce54:	1b40      	subs	r0, r0, r5
 800ce56:	4298      	cmp	r0, r3
 800ce58:	d3ce      	bcc.n	800cdf8 <HAL_SPI_TransmitReceive+0x268>
 800ce5a:	e77e      	b.n	800cd5a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ce5c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ce5e:	68d2      	ldr	r2, [r2, #12]
 800ce60:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800ce62:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ce64:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce66:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800ce68:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ce6a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800ce6c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce6e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800ce70:	461e      	mov	r6, r3
 800ce72:	e76c      	b.n	800cd4e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ce74:	9a08      	ldr	r2, [sp, #32]
 800ce76:	462b      	mov	r3, r5
 800ce78:	2180      	movs	r1, #128	; 0x80
 800ce7a:	4620      	mov	r0, r4
 800ce7c:	f7ff fc6a 	bl	800c754 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ce80:	2800      	cmp	r0, #0
 800ce82:	f43f af2e 	beq.w	800cce2 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ce86:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce88:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ce8a:	4313      	orrs	r3, r2
 800ce8c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800ce8e:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ce90:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800ce92:	e699      	b.n	800cbc8 <HAL_SPI_TransmitReceive+0x38>
 800ce94:	2000007c 	.word	0x2000007c
 800ce98:	165e9f81 	.word	0x165e9f81

0800ce9c <HAL_SPI_Receive>:
{
 800ce9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cea0:	6846      	ldr	r6, [r0, #4]
 800cea2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cea6:	b082      	sub	sp, #8
 800cea8:	4604      	mov	r4, r0
 800ceaa:	4690      	mov	r8, r2
 800ceac:	461d      	mov	r5, r3
 800ceae:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ceb0:	d06e      	beq.n	800cf90 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800ceb2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800ceb6:	2b01      	cmp	r3, #1
 800ceb8:	d076      	beq.n	800cfa8 <HAL_SPI_Receive+0x10c>
 800ceba:	2301      	movs	r3, #1
 800cebc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cec0:	f7fc fdc2 	bl	8009a48 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cec4:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cec8:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cecc:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cece:	fa5f f08c 	uxtb.w	r0, ip
 800ced2:	d009      	beq.n	800cee8 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800ced4:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ced6:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ced8:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ceda:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cede:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cee2:	b002      	add	sp, #8
 800cee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cee8:	2f00      	cmp	r7, #0
 800ceea:	d0f4      	beq.n	800ced6 <HAL_SPI_Receive+0x3a>
 800ceec:	f1b8 0f00 	cmp.w	r8, #0
 800cef0:	d0f1      	beq.n	800ced6 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cef2:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800cef4:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cef6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800cefa:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800cefc:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cf00:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800cf04:	f04f 0104 	mov.w	r1, #4
 800cf08:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800cf0c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cf10:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800cf12:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800cf14:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800cf16:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800cf1a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800cf1c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cf1e:	d107      	bne.n	800cf30 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800cf20:	6811      	ldr	r1, [r2, #0]
 800cf22:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800cf26:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800cf28:	6811      	ldr	r1, [r2, #0]
 800cf2a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800cf2e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cf30:	6811      	ldr	r1, [r2, #0]
 800cf32:	0648      	lsls	r0, r1, #25
 800cf34:	d403      	bmi.n	800cf3e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800cf36:	6811      	ldr	r1, [r2, #0]
 800cf38:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cf3c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800cf3e:	68e1      	ldr	r1, [r4, #12]
 800cf40:	2900      	cmp	r1, #0
 800cf42:	d054      	beq.n	800cfee <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800cf44:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cf46:	b289      	uxth	r1, r1
 800cf48:	b1a9      	cbz	r1, 800cf76 <HAL_SPI_Receive+0xda>
 800cf4a:	1c69      	adds	r1, r5, #1
 800cf4c:	d13e      	bne.n	800cfcc <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf4e:	6893      	ldr	r3, [r2, #8]
 800cf50:	07db      	lsls	r3, r3, #31
 800cf52:	d544      	bpl.n	800cfde <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cf54:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cf56:	68d1      	ldr	r1, [r2, #12]
 800cf58:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800cf5c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cf60:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf62:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cf66:	fa1f fc8c 	uxth.w	ip, ip
 800cf6a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf6e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf70:	b29b      	uxth	r3, r3
 800cf72:	2b00      	cmp	r3, #0
 800cf74:	d1eb      	bne.n	800cf4e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800cf76:	4632      	mov	r2, r6
 800cf78:	4629      	mov	r1, r5
 800cf7a:	4620      	mov	r0, r4
 800cf7c:	f7ff fc48 	bl	800c810 <SPI_EndRxTransaction>
 800cf80:	b108      	cbz	r0, 800cf86 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cf82:	2320      	movs	r3, #32
 800cf84:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cf86:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cf88:	3800      	subs	r0, #0
 800cf8a:	bf18      	it	ne
 800cf8c:	2001      	movne	r0, #1
error :
 800cf8e:	e7a2      	b.n	800ced6 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cf90:	6883      	ldr	r3, [r0, #8]
 800cf92:	2b00      	cmp	r3, #0
 800cf94:	d18d      	bne.n	800ceb2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cf96:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cf98:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cf9a:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cf9c:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cfa0:	460a      	mov	r2, r1
 800cfa2:	f7ff fdf5 	bl	800cb90 <HAL_SPI_TransmitReceive>
 800cfa6:	e79c      	b.n	800cee2 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800cfa8:	2002      	movs	r0, #2
}
 800cfaa:	b002      	add	sp, #8
 800cfac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cfb0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cfb2:	68db      	ldr	r3, [r3, #12]
 800cfb4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800cfb8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cfba:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cfbc:	3b01      	subs	r3, #1
 800cfbe:	b29b      	uxth	r3, r3
 800cfc0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cfc2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cfc4:	b29b      	uxth	r3, r3
 800cfc6:	2b00      	cmp	r3, #0
 800cfc8:	d0d5      	beq.n	800cf76 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cfca:	6823      	ldr	r3, [r4, #0]
 800cfcc:	689a      	ldr	r2, [r3, #8]
 800cfce:	07d2      	lsls	r2, r2, #31
 800cfd0:	d4ee      	bmi.n	800cfb0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cfd2:	f7fc fd39 	bl	8009a48 <HAL_GetTick>
 800cfd6:	1b80      	subs	r0, r0, r6
 800cfd8:	42a8      	cmp	r0, r5
 800cfda:	d243      	bcs.n	800d064 <HAL_SPI_Receive+0x1c8>
 800cfdc:	e7f1      	b.n	800cfc2 <HAL_SPI_Receive+0x126>
 800cfde:	f7fc fd33 	bl	8009a48 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cfe2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cfe4:	b29b      	uxth	r3, r3
 800cfe6:	2b00      	cmp	r3, #0
 800cfe8:	d0c5      	beq.n	800cf76 <HAL_SPI_Receive+0xda>
 800cfea:	6822      	ldr	r2, [r4, #0]
 800cfec:	e7af      	b.n	800cf4e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cfee:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cff0:	b292      	uxth	r2, r2
 800cff2:	2a00      	cmp	r2, #0
 800cff4:	d0bf      	beq.n	800cf76 <HAL_SPI_Receive+0xda>
 800cff6:	1c6f      	adds	r7, r5, #1
 800cff8:	d013      	beq.n	800d022 <HAL_SPI_Receive+0x186>
 800cffa:	e02b      	b.n	800d054 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cffc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cffe:	7b1b      	ldrb	r3, [r3, #12]
 800d000:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d002:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d006:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d008:	f10c 3cff 	add.w	ip, ip, #4294967295
 800d00c:	fa1f fc8c 	uxth.w	ip, ip
 800d010:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d014:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d016:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800d018:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d01a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800d01c:	2b00      	cmp	r3, #0
 800d01e:	d0aa      	beq.n	800cf76 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d020:	6823      	ldr	r3, [r4, #0]
 800d022:	689a      	ldr	r2, [r3, #8]
 800d024:	07d0      	lsls	r0, r2, #31
 800d026:	d4e9      	bmi.n	800cffc <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d028:	f7fc fd0e 	bl	8009a48 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800d02c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d02e:	b29b      	uxth	r3, r3
 800d030:	2b00      	cmp	r3, #0
 800d032:	d1f5      	bne.n	800d020 <HAL_SPI_Receive+0x184>
 800d034:	e79f      	b.n	800cf76 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800d036:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d038:	7b1b      	ldrb	r3, [r3, #12]
 800d03a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800d03c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d03e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d040:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d042:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800d044:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800d046:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800d048:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800d04a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800d04c:	b29b      	uxth	r3, r3
 800d04e:	2b00      	cmp	r3, #0
 800d050:	d091      	beq.n	800cf76 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800d052:	6823      	ldr	r3, [r4, #0]
 800d054:	689a      	ldr	r2, [r3, #8]
 800d056:	07d1      	lsls	r1, r2, #31
 800d058:	d4ed      	bmi.n	800d036 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800d05a:	f7fc fcf5 	bl	8009a48 <HAL_GetTick>
 800d05e:	1b80      	subs	r0, r0, r6
 800d060:	42a8      	cmp	r0, r5
 800d062:	d3f2      	bcc.n	800d04a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800d064:	2003      	movs	r0, #3
 800d066:	e736      	b.n	800ced6 <HAL_SPI_Receive+0x3a>

0800d068 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800d068:	2800      	cmp	r0, #0
 800d06a:	f000 8087 	beq.w	800d17c <HAL_TIM_Base_Init+0x114>
{
 800d06e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800d070:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d074:	4604      	mov	r4, r0
 800d076:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d07a:	2b00      	cmp	r3, #0
 800d07c:	d079      	beq.n	800d172 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d07e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d080:	493f      	ldr	r1, [pc, #252]	; (800d180 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d082:	2302      	movs	r3, #2
 800d084:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d088:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d08a:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d08c:	d05d      	beq.n	800d14a <HAL_TIM_Base_Init+0xe2>
 800d08e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d092:	d031      	beq.n	800d0f8 <HAL_TIM_Base_Init+0x90>
 800d094:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d098:	428a      	cmp	r2, r1
 800d09a:	d02d      	beq.n	800d0f8 <HAL_TIM_Base_Init+0x90>
 800d09c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d0a0:	428a      	cmp	r2, r1
 800d0a2:	d029      	beq.n	800d0f8 <HAL_TIM_Base_Init+0x90>
 800d0a4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d0a8:	428a      	cmp	r2, r1
 800d0aa:	d025      	beq.n	800d0f8 <HAL_TIM_Base_Init+0x90>
 800d0ac:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d0b0:	428a      	cmp	r2, r1
 800d0b2:	d04a      	beq.n	800d14a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d0b4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d0b8:	428a      	cmp	r2, r1
 800d0ba:	d021      	beq.n	800d100 <HAL_TIM_Base_Init+0x98>
 800d0bc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d0c0:	428a      	cmp	r2, r1
 800d0c2:	d01d      	beq.n	800d100 <HAL_TIM_Base_Init+0x98>
 800d0c4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d0c8:	428a      	cmp	r2, r1
 800d0ca:	d019      	beq.n	800d100 <HAL_TIM_Base_Init+0x98>
 800d0cc:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d0d0:	428a      	cmp	r2, r1
 800d0d2:	d015      	beq.n	800d100 <HAL_TIM_Base_Init+0x98>
 800d0d4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d0d8:	428a      	cmp	r2, r1
 800d0da:	d011      	beq.n	800d100 <HAL_TIM_Base_Init+0x98>
 800d0dc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d0e0:	428a      	cmp	r2, r1
 800d0e2:	d00d      	beq.n	800d100 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d0e4:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d0e6:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d0e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d0ec:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d0ee:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d0f0:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d0f2:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d0f4:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d0f6:	e010      	b.n	800d11a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d0f8:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d0fa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d0fe:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d100:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d102:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d104:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d108:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d10a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d10e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d110:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d112:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d114:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d116:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d118:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d11a:	2301      	movs	r3, #1
 800d11c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d11e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d122:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d126:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d12a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d12e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d132:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d136:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d13a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d13e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d142:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d146:	2000      	movs	r0, #0
}
 800d148:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d14a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d14c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d14e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d152:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d154:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d158:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d15a:	69a1      	ldr	r1, [r4, #24]
 800d15c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d160:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d162:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d164:	68e3      	ldr	r3, [r4, #12]
 800d166:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d168:	6863      	ldr	r3, [r4, #4]
 800d16a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d16c:	6963      	ldr	r3, [r4, #20]
 800d16e:	6313      	str	r3, [r2, #48]	; 0x30
 800d170:	e7d3      	b.n	800d11a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d172:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d176:	f7f4 fc2f 	bl	80019d8 <HAL_TIM_Base_MspInit>
 800d17a:	e780      	b.n	800d07e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d17c:	2001      	movs	r0, #1
}
 800d17e:	4770      	bx	lr
 800d180:	40010000 	.word	0x40010000

0800d184 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d184:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d188:	2b01      	cmp	r3, #1
 800d18a:	d12f      	bne.n	800d1ec <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d18c:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d18e:	4919      	ldr	r1, [pc, #100]	; (800d1f4 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d190:	2202      	movs	r2, #2
 800d192:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d196:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d198:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d19a:	f042 0201 	orr.w	r2, r2, #1
 800d19e:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d1a0:	d019      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1a2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d1a6:	d016      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1a8:	4a13      	ldr	r2, [pc, #76]	; (800d1f8 <HAL_TIM_Base_Start_IT+0x74>)
 800d1aa:	4293      	cmp	r3, r2
 800d1ac:	d013      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d1b2:	4293      	cmp	r3, r2
 800d1b4:	d00f      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d1ba:	4293      	cmp	r3, r2
 800d1bc:	d00b      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1be:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d1c2:	4293      	cmp	r3, r2
 800d1c4:	d007      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1c6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d1ca:	4293      	cmp	r3, r2
 800d1cc:	d003      	beq.n	800d1d6 <HAL_TIM_Base_Start_IT+0x52>
 800d1ce:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d1d2:	4293      	cmp	r3, r2
 800d1d4:	d104      	bne.n	800d1e0 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d1d6:	689a      	ldr	r2, [r3, #8]
 800d1d8:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d1dc:	2a06      	cmp	r2, #6
 800d1de:	d007      	beq.n	800d1f0 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d1e0:	681a      	ldr	r2, [r3, #0]
 800d1e2:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d1e6:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d1e8:	601a      	str	r2, [r3, #0]
 800d1ea:	4770      	bx	lr
    return HAL_ERROR;
 800d1ec:	2001      	movs	r0, #1
 800d1ee:	4770      	bx	lr
  return HAL_OK;
 800d1f0:	2000      	movs	r0, #0
}
 800d1f2:	4770      	bx	lr
 800d1f4:	40010000 	.word	0x40010000
 800d1f8:	40000400 	.word	0x40000400

0800d1fc <HAL_TIM_PWM_MspInit>:
 800d1fc:	4770      	bx	lr
 800d1fe:	bf00      	nop

0800d200 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800d200:	2800      	cmp	r0, #0
 800d202:	f000 8087 	beq.w	800d314 <HAL_TIM_PWM_Init+0x114>
{
 800d206:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800d208:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d20c:	4604      	mov	r4, r0
 800d20e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d212:	2b00      	cmp	r3, #0
 800d214:	d079      	beq.n	800d30a <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d216:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d218:	493f      	ldr	r1, [pc, #252]	; (800d318 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d21a:	2302      	movs	r3, #2
 800d21c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d220:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d222:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d224:	d05d      	beq.n	800d2e2 <HAL_TIM_PWM_Init+0xe2>
 800d226:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d22a:	d031      	beq.n	800d290 <HAL_TIM_PWM_Init+0x90>
 800d22c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d230:	428a      	cmp	r2, r1
 800d232:	d02d      	beq.n	800d290 <HAL_TIM_PWM_Init+0x90>
 800d234:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d238:	428a      	cmp	r2, r1
 800d23a:	d029      	beq.n	800d290 <HAL_TIM_PWM_Init+0x90>
 800d23c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d240:	428a      	cmp	r2, r1
 800d242:	d025      	beq.n	800d290 <HAL_TIM_PWM_Init+0x90>
 800d244:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d248:	428a      	cmp	r2, r1
 800d24a:	d04a      	beq.n	800d2e2 <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d24c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d250:	428a      	cmp	r2, r1
 800d252:	d021      	beq.n	800d298 <HAL_TIM_PWM_Init+0x98>
 800d254:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d258:	428a      	cmp	r2, r1
 800d25a:	d01d      	beq.n	800d298 <HAL_TIM_PWM_Init+0x98>
 800d25c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d260:	428a      	cmp	r2, r1
 800d262:	d019      	beq.n	800d298 <HAL_TIM_PWM_Init+0x98>
 800d264:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d268:	428a      	cmp	r2, r1
 800d26a:	d015      	beq.n	800d298 <HAL_TIM_PWM_Init+0x98>
 800d26c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d270:	428a      	cmp	r2, r1
 800d272:	d011      	beq.n	800d298 <HAL_TIM_PWM_Init+0x98>
 800d274:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d278:	428a      	cmp	r2, r1
 800d27a:	d00d      	beq.n	800d298 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d27c:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d27e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d280:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d284:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d286:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800d288:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d28a:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d28c:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d28e:	e010      	b.n	800d2b2 <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d290:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d292:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d296:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d298:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d29a:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d29c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2a0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d2a6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2a8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d2aa:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d2ac:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d2ae:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d2b0:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800d2b2:	2301      	movs	r3, #1
 800d2b4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d2b6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d2ba:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d2be:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d2c2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d2c6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d2ca:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d2ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d2d2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d2d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d2da:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d2de:	2000      	movs	r0, #0
}
 800d2e0:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d2e2:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2e4:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d2e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d2ea:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d2ec:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d2f0:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d2f2:	69a1      	ldr	r1, [r4, #24]
 800d2f4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d2f8:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d2fa:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d2fc:	68e3      	ldr	r3, [r4, #12]
 800d2fe:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d300:	6863      	ldr	r3, [r4, #4]
 800d302:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d304:	6963      	ldr	r3, [r4, #20]
 800d306:	6313      	str	r3, [r2, #48]	; 0x30
 800d308:	e7d3      	b.n	800d2b2 <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d30a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800d30e:	f7ff ff75 	bl	800d1fc <HAL_TIM_PWM_MspInit>
 800d312:	e780      	b.n	800d216 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800d314:	2001      	movs	r0, #1
}
 800d316:	4770      	bx	lr
 800d318:	40010000 	.word	0x40010000

0800d31c <HAL_TIM_PWM_Start>:
 800d31c:	2900      	cmp	r1, #0
 800d31e:	d13c      	bne.n	800d39a <HAL_TIM_PWM_Start+0x7e>
 800d320:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800d324:	2b01      	cmp	r3, #1
 800d326:	d140      	bne.n	800d3aa <HAL_TIM_PWM_Start+0x8e>
 800d328:	2302      	movs	r3, #2
 800d32a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800d32e:	6803      	ldr	r3, [r0, #0]
 800d330:	f001 011f 	and.w	r1, r1, #31
 800d334:	6a18      	ldr	r0, [r3, #32]
 800d336:	2201      	movs	r2, #1
 800d338:	408a      	lsls	r2, r1
 800d33a:	ea20 0002 	bic.w	r0, r0, r2
 800d33e:	6218      	str	r0, [r3, #32]
 800d340:	6a18      	ldr	r0, [r3, #32]
 800d342:	492c      	ldr	r1, [pc, #176]	; (800d3f4 <HAL_TIM_PWM_Start+0xd8>)
 800d344:	4302      	orrs	r2, r0
 800d346:	428b      	cmp	r3, r1
 800d348:	621a      	str	r2, [r3, #32]
 800d34a:	d038      	beq.n	800d3be <HAL_TIM_PWM_Start+0xa2>
 800d34c:	4a2a      	ldr	r2, [pc, #168]	; (800d3f8 <HAL_TIM_PWM_Start+0xdc>)
 800d34e:	4293      	cmp	r3, r2
 800d350:	d035      	beq.n	800d3be <HAL_TIM_PWM_Start+0xa2>
 800d352:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d356:	d015      	beq.n	800d384 <HAL_TIM_PWM_Start+0x68>
 800d358:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d35c:	428b      	cmp	r3, r1
 800d35e:	d011      	beq.n	800d384 <HAL_TIM_PWM_Start+0x68>
 800d360:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d364:	428b      	cmp	r3, r1
 800d366:	d00d      	beq.n	800d384 <HAL_TIM_PWM_Start+0x68>
 800d368:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d36c:	428b      	cmp	r3, r1
 800d36e:	d009      	beq.n	800d384 <HAL_TIM_PWM_Start+0x68>
 800d370:	4293      	cmp	r3, r2
 800d372:	d007      	beq.n	800d384 <HAL_TIM_PWM_Start+0x68>
 800d374:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d378:	4293      	cmp	r3, r2
 800d37a:	d003      	beq.n	800d384 <HAL_TIM_PWM_Start+0x68>
 800d37c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d380:	4293      	cmp	r3, r2
 800d382:	d104      	bne.n	800d38e <HAL_TIM_PWM_Start+0x72>
 800d384:	689a      	ldr	r2, [r3, #8]
 800d386:	f002 0207 	and.w	r2, r2, #7
 800d38a:	2a06      	cmp	r2, #6
 800d38c:	d020      	beq.n	800d3d0 <HAL_TIM_PWM_Start+0xb4>
 800d38e:	681a      	ldr	r2, [r3, #0]
 800d390:	f042 0201 	orr.w	r2, r2, #1
 800d394:	2000      	movs	r0, #0
 800d396:	601a      	str	r2, [r3, #0]
 800d398:	4770      	bx	lr
 800d39a:	2904      	cmp	r1, #4
 800d39c:	d022      	beq.n	800d3e4 <HAL_TIM_PWM_Start+0xc8>
 800d39e:	2908      	cmp	r1, #8
 800d3a0:	d018      	beq.n	800d3d4 <HAL_TIM_PWM_Start+0xb8>
 800d3a2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800d3a6:	2b01      	cmp	r3, #1
 800d3a8:	d001      	beq.n	800d3ae <HAL_TIM_PWM_Start+0x92>
 800d3aa:	2001      	movs	r0, #1
 800d3ac:	4770      	bx	lr
 800d3ae:	2904      	cmp	r1, #4
 800d3b0:	d01c      	beq.n	800d3ec <HAL_TIM_PWM_Start+0xd0>
 800d3b2:	2908      	cmp	r1, #8
 800d3b4:	d012      	beq.n	800d3dc <HAL_TIM_PWM_Start+0xc0>
 800d3b6:	2302      	movs	r3, #2
 800d3b8:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800d3bc:	e7b7      	b.n	800d32e <HAL_TIM_PWM_Start+0x12>
 800d3be:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d3c0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800d3c4:	645a      	str	r2, [r3, #68]	; 0x44
 800d3c6:	689a      	ldr	r2, [r3, #8]
 800d3c8:	f002 0207 	and.w	r2, r2, #7
 800d3cc:	2a06      	cmp	r2, #6
 800d3ce:	d1de      	bne.n	800d38e <HAL_TIM_PWM_Start+0x72>
 800d3d0:	2000      	movs	r0, #0
 800d3d2:	4770      	bx	lr
 800d3d4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800d3d8:	2b01      	cmp	r3, #1
 800d3da:	d1e6      	bne.n	800d3aa <HAL_TIM_PWM_Start+0x8e>
 800d3dc:	2302      	movs	r3, #2
 800d3de:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d3e2:	e7a4      	b.n	800d32e <HAL_TIM_PWM_Start+0x12>
 800d3e4:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800d3e8:	2b01      	cmp	r3, #1
 800d3ea:	d1de      	bne.n	800d3aa <HAL_TIM_PWM_Start+0x8e>
 800d3ec:	2302      	movs	r3, #2
 800d3ee:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800d3f2:	e79c      	b.n	800d32e <HAL_TIM_PWM_Start+0x12>
 800d3f4:	40010000 	.word	0x40010000
 800d3f8:	40010400 	.word	0x40010400

0800d3fc <HAL_TIM_PWM_Stop>:
 800d3fc:	6803      	ldr	r3, [r0, #0]
 800d3fe:	b410      	push	{r4}
 800d400:	6a1a      	ldr	r2, [r3, #32]
 800d402:	f001 041f 	and.w	r4, r1, #31
 800d406:	f04f 0c01 	mov.w	ip, #1
 800d40a:	fa0c fc04 	lsl.w	ip, ip, r4
 800d40e:	ea22 020c 	bic.w	r2, r2, ip
 800d412:	621a      	str	r2, [r3, #32]
 800d414:	4a20      	ldr	r2, [pc, #128]	; (800d498 <HAL_TIM_PWM_Stop+0x9c>)
 800d416:	6a1c      	ldr	r4, [r3, #32]
 800d418:	621c      	str	r4, [r3, #32]
 800d41a:	4293      	cmp	r3, r2
 800d41c:	d015      	beq.n	800d44a <HAL_TIM_PWM_Stop+0x4e>
 800d41e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d422:	4293      	cmp	r3, r2
 800d424:	d011      	beq.n	800d44a <HAL_TIM_PWM_Stop+0x4e>
 800d426:	6a1c      	ldr	r4, [r3, #32]
 800d428:	f241 1211 	movw	r2, #4369	; 0x1111
 800d42c:	4214      	tst	r4, r2
 800d42e:	d104      	bne.n	800d43a <HAL_TIM_PWM_Stop+0x3e>
 800d430:	6a1c      	ldr	r4, [r3, #32]
 800d432:	f240 4244 	movw	r2, #1092	; 0x444
 800d436:	4214      	tst	r4, r2
 800d438:	d022      	beq.n	800d480 <HAL_TIM_PWM_Stop+0x84>
 800d43a:	2301      	movs	r3, #1
 800d43c:	b9a1      	cbnz	r1, 800d468 <HAL_TIM_PWM_Stop+0x6c>
 800d43e:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800d442:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d446:	2000      	movs	r0, #0
 800d448:	4770      	bx	lr
 800d44a:	6a1c      	ldr	r4, [r3, #32]
 800d44c:	f241 1211 	movw	r2, #4369	; 0x1111
 800d450:	4214      	tst	r4, r2
 800d452:	d1e8      	bne.n	800d426 <HAL_TIM_PWM_Stop+0x2a>
 800d454:	6a1c      	ldr	r4, [r3, #32]
 800d456:	f240 4244 	movw	r2, #1092	; 0x444
 800d45a:	4214      	tst	r4, r2
 800d45c:	d1e3      	bne.n	800d426 <HAL_TIM_PWM_Stop+0x2a>
 800d45e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d460:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800d464:	645a      	str	r2, [r3, #68]	; 0x44
 800d466:	e7de      	b.n	800d426 <HAL_TIM_PWM_Stop+0x2a>
 800d468:	2904      	cmp	r1, #4
 800d46a:	d00e      	beq.n	800d48a <HAL_TIM_PWM_Stop+0x8e>
 800d46c:	2908      	cmp	r1, #8
 800d46e:	bf0c      	ite	eq
 800d470:	f880 3040 	strbeq.w	r3, [r0, #64]	; 0x40
 800d474:	f880 3041 	strbne.w	r3, [r0, #65]	; 0x41
 800d478:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d47c:	2000      	movs	r0, #0
 800d47e:	4770      	bx	lr
 800d480:	681a      	ldr	r2, [r3, #0]
 800d482:	f022 0201 	bic.w	r2, r2, #1
 800d486:	601a      	str	r2, [r3, #0]
 800d488:	e7d7      	b.n	800d43a <HAL_TIM_PWM_Stop+0x3e>
 800d48a:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800d48e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d492:	2000      	movs	r0, #0
 800d494:	4770      	bx	lr
 800d496:	bf00      	nop
 800d498:	40010000 	.word	0x40010000

0800d49c <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800d49c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d4a0:	2b01      	cmp	r3, #1
 800d4a2:	f000 80d2 	beq.w	800d64a <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800d4a6:	2301      	movs	r3, #1
{
 800d4a8:	b570      	push	{r4, r5, r6, lr}
 800d4aa:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800d4ac:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800d4b0:	2a0c      	cmp	r2, #12
 800d4b2:	d808      	bhi.n	800d4c6 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800d4b4:	e8df f002 	tbb	[pc, r2]
 800d4b8:	0707073e 	.word	0x0707073e
 800d4bc:	0707076b 	.word	0x0707076b
 800d4c0:	0707079b 	.word	0x0707079b
 800d4c4:	0c          	.byte	0x0c
 800d4c5:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800d4c6:	2300      	movs	r3, #0
 800d4c8:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800d4cc:	2001      	movs	r0, #1
}
 800d4ce:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800d4d0:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d4d2:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800d4d4:	6a1a      	ldr	r2, [r3, #32]
 800d4d6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800d4da:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d4dc:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d4de:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d4e0:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800d4e2:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d4e6:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d4ea:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800d4ec:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d4f0:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d4f4:	4d70      	ldr	r5, [pc, #448]	; (800d6b8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d4f6:	42ab      	cmp	r3, r5
 800d4f8:	f000 80c8 	beq.w	800d68c <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800d4fc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d500:	42ab      	cmp	r3, r5
 800d502:	f000 80c3 	beq.w	800d68c <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d506:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800d508:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800d50a:	6848      	ldr	r0, [r1, #4]
 800d50c:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d50e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d510:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d512:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d514:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d518:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800d51a:	69da      	ldr	r2, [r3, #28]
 800d51c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d520:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d522:	69da      	ldr	r2, [r3, #28]
 800d524:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d528:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d52a:	2300      	movs	r3, #0
 800d52c:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d530:	2000      	movs	r0, #0
}
 800d532:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800d534:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d536:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d538:	6a1a      	ldr	r2, [r3, #32]
 800d53a:	f022 0201 	bic.w	r2, r2, #1
 800d53e:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d540:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d542:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d544:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800d546:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d54a:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800d54c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800d54e:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800d552:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800d554:	4d58      	ldr	r5, [pc, #352]	; (800d6b8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d556:	42ab      	cmp	r3, r5
 800d558:	d079      	beq.n	800d64e <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800d55a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d55e:	42ab      	cmp	r3, r5
 800d560:	d075      	beq.n	800d64e <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800d562:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d564:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800d566:	6848      	ldr	r0, [r1, #4]
 800d568:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800d56a:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d56c:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d56e:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d570:	f042 0208 	orr.w	r2, r2, #8
 800d574:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800d576:	699a      	ldr	r2, [r3, #24]
 800d578:	f022 0204 	bic.w	r2, r2, #4
 800d57c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d57e:	699a      	ldr	r2, [r3, #24]
 800d580:	430a      	orrs	r2, r1
 800d582:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d584:	2300      	movs	r3, #0
 800d586:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d58a:	2000      	movs	r0, #0
}
 800d58c:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800d58e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d590:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d592:	6a1a      	ldr	r2, [r3, #32]
 800d594:	f022 0210 	bic.w	r2, r2, #16
 800d598:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d59a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d59c:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d59e:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800d5a0:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d5a4:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d5a8:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800d5aa:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d5ae:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800d5b2:	4d41      	ldr	r5, [pc, #260]	; (800d6b8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d5b4:	42ab      	cmp	r3, r5
 800d5b6:	d059      	beq.n	800d66c <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800d5b8:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d5bc:	42ab      	cmp	r3, r5
 800d5be:	d055      	beq.n	800d66c <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800d5c0:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d5c2:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800d5c4:	6848      	ldr	r0, [r1, #4]
 800d5c6:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800d5c8:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d5ca:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d5cc:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d5ce:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d5d2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800d5d4:	699a      	ldr	r2, [r3, #24]
 800d5d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d5da:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d5dc:	699a      	ldr	r2, [r3, #24]
 800d5de:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d5e2:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d5e4:	2300      	movs	r3, #0
 800d5e6:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d5ea:	2000      	movs	r0, #0
}
 800d5ec:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800d5ee:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d5f0:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800d5f2:	6a1a      	ldr	r2, [r3, #32]
 800d5f4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d5f8:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d5fa:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d5fc:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d5fe:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800d600:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d604:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d606:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800d608:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d60c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800d610:	4d29      	ldr	r5, [pc, #164]	; (800d6b8 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d612:	42ab      	cmp	r3, r5
 800d614:	d040      	beq.n	800d698 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800d616:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d61a:	42ab      	cmp	r3, r5
 800d61c:	d03c      	beq.n	800d698 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800d61e:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800d620:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800d622:	6848      	ldr	r0, [r1, #4]
 800d624:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800d626:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d628:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d62a:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d62c:	f042 0208 	orr.w	r2, r2, #8
 800d630:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800d632:	69da      	ldr	r2, [r3, #28]
 800d634:	f022 0204 	bic.w	r2, r2, #4
 800d638:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d63a:	69da      	ldr	r2, [r3, #28]
 800d63c:	430a      	orrs	r2, r1
 800d63e:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d640:	2300      	movs	r3, #0
 800d642:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d646:	2000      	movs	r0, #0
}
 800d648:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800d64a:	2002      	movs	r0, #2
}
 800d64c:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800d64e:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800d650:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800d654:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800d656:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800d65a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800d65e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800d662:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800d666:	ea4e 0404 	orr.w	r4, lr, r4
 800d66a:	e77a      	b.n	800d562 <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d66c:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800d66e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d672:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d676:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800d67a:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d67e:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800d682:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d686:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800d68a:	e799      	b.n	800d5c0 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d68c:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800d68e:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d692:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800d696:	e736      	b.n	800d506 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d698:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800d69a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d69e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d6a2:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800d6a6:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d6aa:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800d6ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d6b2:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800d6b6:	e7b2      	b.n	800d61e <HAL_TIM_PWM_ConfigChannel+0x182>
 800d6b8:	40010000 	.word	0x40010000

0800d6bc <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800d6bc:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d6c0:	2b01      	cmp	r3, #1
 800d6c2:	d075      	beq.n	800d7b0 <HAL_TIM_ConfigClockSource+0xf4>
 800d6c4:	4602      	mov	r2, r0
{
 800d6c6:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d6c8:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800d6ca:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d6cc:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d6d0:	2001      	movs	r0, #1
 800d6d2:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d6d6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d6d8:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800d6dc:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800d6e0:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800d6e2:	680b      	ldr	r3, [r1, #0]
 800d6e4:	2b60      	cmp	r3, #96	; 0x60
 800d6e6:	d065      	beq.n	800d7b4 <HAL_TIM_ConfigClockSource+0xf8>
 800d6e8:	d824      	bhi.n	800d734 <HAL_TIM_ConfigClockSource+0x78>
 800d6ea:	2b40      	cmp	r3, #64	; 0x40
 800d6ec:	d07c      	beq.n	800d7e8 <HAL_TIM_ConfigClockSource+0x12c>
 800d6ee:	d94b      	bls.n	800d788 <HAL_TIM_ConfigClockSource+0xcc>
 800d6f0:	2b50      	cmp	r3, #80	; 0x50
 800d6f2:	d117      	bne.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d6f4:	684b      	ldr	r3, [r1, #4]
 800d6f6:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800d6f8:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d6fa:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d6fe:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d700:	6a23      	ldr	r3, [r4, #32]
 800d702:	f023 0301 	bic.w	r3, r3, #1
 800d706:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d708:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d70a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d70e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800d712:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d714:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800d716:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800d718:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d71c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800d720:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d722:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800d724:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800d726:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d728:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d72c:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800d730:	bc30      	pop	{r4, r5}
 800d732:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800d734:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d738:	d038      	beq.n	800d7ac <HAL_TIM_ConfigClockSource+0xf0>
 800d73a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800d73e:	d110      	bne.n	800d762 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d740:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d744:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d746:	432b      	orrs	r3, r5
 800d748:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d74a:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d74e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d752:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d754:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d756:	68a3      	ldr	r3, [r4, #8]
 800d758:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800d75c:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d75e:	60a3      	str	r3, [r4, #8]
      break;
 800d760:	e7e0      	b.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d762:	2b70      	cmp	r3, #112	; 0x70
 800d764:	d1de      	bne.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d766:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d76a:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d76c:	432b      	orrs	r3, r5
 800d76e:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d770:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d774:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d778:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800d77a:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800d77c:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800d77e:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800d782:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800d784:	60a3      	str	r3, [r4, #8]
      break;
 800d786:	e7cd      	b.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d788:	2b20      	cmp	r3, #32
 800d78a:	d002      	beq.n	800d792 <HAL_TIM_ConfigClockSource+0xd6>
 800d78c:	d90a      	bls.n	800d7a4 <HAL_TIM_ConfigClockSource+0xe8>
 800d78e:	2b30      	cmp	r3, #48	; 0x30
 800d790:	d1c8      	bne.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800d792:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d794:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d798:	430b      	orrs	r3, r1
 800d79a:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800d79e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d7a0:	60a3      	str	r3, [r4, #8]
}
 800d7a2:	e7bf      	b.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d7a4:	f033 0110 	bics.w	r1, r3, #16
 800d7a8:	d1bc      	bne.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
 800d7aa:	e7f2      	b.n	800d792 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800d7ac:	2000      	movs	r0, #0
 800d7ae:	e7b9      	b.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800d7b0:	2002      	movs	r0, #2
}
 800d7b2:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d7b4:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d7b6:	6848      	ldr	r0, [r1, #4]
 800d7b8:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d7ba:	f023 0310 	bic.w	r3, r3, #16
 800d7be:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d7c0:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d7c2:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d7c4:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d7c8:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800d7cc:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d7d0:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800d7d4:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d7d6:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d7d8:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d7da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d7de:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800d7e2:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d7e4:	60a3      	str	r3, [r4, #8]
}
 800d7e6:	e79d      	b.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d7e8:	684b      	ldr	r3, [r1, #4]
 800d7ea:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800d7ec:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d7ee:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d7f2:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d7f4:	6a23      	ldr	r3, [r4, #32]
 800d7f6:	f023 0301 	bic.w	r3, r3, #1
 800d7fa:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d7fc:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d7fe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d802:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d806:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d808:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d80a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d80c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d810:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800d814:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d816:	60a3      	str	r3, [r4, #8]
}
 800d818:	e784      	b.n	800d724 <HAL_TIM_ConfigClockSource+0x68>
 800d81a:	bf00      	nop

0800d81c <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800d81c:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800d820:	2a01      	cmp	r2, #1
 800d822:	d050      	beq.n	800d8c6 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800d824:	4603      	mov	r3, r0
{
 800d826:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d828:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800d82a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d82c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d830:	2001      	movs	r0, #1
 800d832:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d836:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d838:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d83a:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d83c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d840:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800d842:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d846:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800d848:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800d84a:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800d84c:	d060      	beq.n	800d910 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800d84e:	d90f      	bls.n	800d870 <HAL_TIM_SlaveConfigSynchro+0x54>
 800d850:	2860      	cmp	r0, #96	; 0x60
 800d852:	d03a      	beq.n	800d8ca <HAL_TIM_SlaveConfigSynchro+0xae>
 800d854:	2870      	cmp	r0, #112	; 0x70
 800d856:	d10e      	bne.n	800d876 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d858:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800d85c:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d85e:	432a      	orrs	r2, r5
 800d860:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d862:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d866:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d86a:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d86c:	60a2      	str	r2, [r4, #8]
 800d86e:	e00f      	b.n	800d890 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d870:	2840      	cmp	r0, #64	; 0x40
 800d872:	d03d      	beq.n	800d8f0 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d874:	d907      	bls.n	800d886 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d876:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d878:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d87a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d87e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d882:	bc30      	pop	{r4, r5}
 800d884:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d886:	2820      	cmp	r0, #32
 800d888:	d002      	beq.n	800d890 <HAL_TIM_SlaveConfigSynchro+0x74>
 800d88a:	d912      	bls.n	800d8b2 <HAL_TIM_SlaveConfigSynchro+0x96>
 800d88c:	2830      	cmp	r0, #48	; 0x30
 800d88e:	d1f2      	bne.n	800d876 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d890:	68e2      	ldr	r2, [r4, #12]
 800d892:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d896:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d898:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d89a:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d89c:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d89e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d8a2:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d8a4:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d8a8:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d8ac:	4608      	mov	r0, r1
}
 800d8ae:	bc30      	pop	{r4, r5}
 800d8b0:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d8b2:	f030 0210 	bics.w	r2, r0, #16
 800d8b6:	d0eb      	beq.n	800d890 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d8b8:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d8ba:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d8bc:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d8c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d8c4:	e7dd      	b.n	800d882 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d8c6:	2002      	movs	r0, #2
}
 800d8c8:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d8ca:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d8cc:	6888      	ldr	r0, [r1, #8]
 800d8ce:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d8d0:	f022 0210 	bic.w	r2, r2, #16
 800d8d4:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d8d6:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d8d8:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d8da:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d8de:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d8e2:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d8e6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d8ea:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d8ec:	6222      	str	r2, [r4, #32]
 800d8ee:	e7cf      	b.n	800d890 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d8f0:	2d05      	cmp	r5, #5
 800d8f2:	d0c0      	beq.n	800d876 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d8f4:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d8f6:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d8f8:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d8fa:	f022 0201 	bic.w	r2, r2, #1
 800d8fe:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d900:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d902:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d906:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d90a:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d90c:	6220      	str	r0, [r4, #32]
      break;
 800d90e:	e7bf      	b.n	800d890 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d910:	688a      	ldr	r2, [r1, #8]
 800d912:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d914:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d916:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d91a:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d91c:	6a22      	ldr	r2, [r4, #32]
 800d91e:	f022 0201 	bic.w	r2, r2, #1
 800d922:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d924:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d926:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d92a:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d92e:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d930:	6221      	str	r1, [r4, #32]
 800d932:	e7ad      	b.n	800d890 <HAL_TIM_SlaveConfigSynchro+0x74>

0800d934 <HAL_TIM_OC_DelayElapsedCallback>:
 800d934:	4770      	bx	lr
 800d936:	bf00      	nop

0800d938 <HAL_TIM_IC_CaptureCallback>:
 800d938:	4770      	bx	lr
 800d93a:	bf00      	nop

0800d93c <HAL_TIM_PWM_PulseFinishedCallback>:
 800d93c:	4770      	bx	lr
 800d93e:	bf00      	nop

0800d940 <HAL_TIM_TriggerCallback>:
 800d940:	4770      	bx	lr
 800d942:	bf00      	nop

0800d944 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d944:	6803      	ldr	r3, [r0, #0]
 800d946:	691a      	ldr	r2, [r3, #16]
 800d948:	0791      	lsls	r1, r2, #30
{
 800d94a:	b510      	push	{r4, lr}
 800d94c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d94e:	d502      	bpl.n	800d956 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d950:	68da      	ldr	r2, [r3, #12]
 800d952:	0792      	lsls	r2, r2, #30
 800d954:	d45f      	bmi.n	800da16 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d956:	691a      	ldr	r2, [r3, #16]
 800d958:	0750      	lsls	r0, r2, #29
 800d95a:	d502      	bpl.n	800d962 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d95c:	68da      	ldr	r2, [r3, #12]
 800d95e:	0751      	lsls	r1, r2, #29
 800d960:	d446      	bmi.n	800d9f0 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d962:	691a      	ldr	r2, [r3, #16]
 800d964:	0712      	lsls	r2, r2, #28
 800d966:	d502      	bpl.n	800d96e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d968:	68da      	ldr	r2, [r3, #12]
 800d96a:	0710      	lsls	r0, r2, #28
 800d96c:	d42e      	bmi.n	800d9cc <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d96e:	691a      	ldr	r2, [r3, #16]
 800d970:	06d2      	lsls	r2, r2, #27
 800d972:	d502      	bpl.n	800d97a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d974:	68da      	ldr	r2, [r3, #12]
 800d976:	06d0      	lsls	r0, r2, #27
 800d978:	d418      	bmi.n	800d9ac <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d97a:	691a      	ldr	r2, [r3, #16]
 800d97c:	07d1      	lsls	r1, r2, #31
 800d97e:	d502      	bpl.n	800d986 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d980:	68da      	ldr	r2, [r3, #12]
 800d982:	07d2      	lsls	r2, r2, #31
 800d984:	d45d      	bmi.n	800da42 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d986:	691a      	ldr	r2, [r3, #16]
 800d988:	0610      	lsls	r0, r2, #24
 800d98a:	d502      	bpl.n	800d992 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d98c:	68da      	ldr	r2, [r3, #12]
 800d98e:	0611      	lsls	r1, r2, #24
 800d990:	d45f      	bmi.n	800da52 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d992:	691a      	ldr	r2, [r3, #16]
 800d994:	0652      	lsls	r2, r2, #25
 800d996:	d502      	bpl.n	800d99e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d998:	68da      	ldr	r2, [r3, #12]
 800d99a:	0650      	lsls	r0, r2, #25
 800d99c:	d461      	bmi.n	800da62 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d99e:	691a      	ldr	r2, [r3, #16]
 800d9a0:	0691      	lsls	r1, r2, #26
 800d9a2:	d502      	bpl.n	800d9aa <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d9a4:	68da      	ldr	r2, [r3, #12]
 800d9a6:	0692      	lsls	r2, r2, #26
 800d9a8:	d443      	bmi.n	800da32 <HAL_TIM_IRQHandler+0xee>
}
 800d9aa:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d9ac:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d9b0:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d9b2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d9b4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d9b6:	69db      	ldr	r3, [r3, #28]
 800d9b8:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d9bc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d9be:	d064      	beq.n	800da8a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d9c0:	f7ff ffba 	bl	800d938 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d9c4:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d9c6:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d9c8:	7722      	strb	r2, [r4, #28]
 800d9ca:	e7d6      	b.n	800d97a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d9cc:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d9d0:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d9d2:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d9d4:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d9d6:	69db      	ldr	r3, [r3, #28]
 800d9d8:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d9da:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d9dc:	d152      	bne.n	800da84 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d9de:	f7ff ffa9 	bl	800d934 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d9e2:	4620      	mov	r0, r4
 800d9e4:	f7ff ffaa 	bl	800d93c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d9e8:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d9ea:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d9ec:	7722      	strb	r2, [r4, #28]
 800d9ee:	e7be      	b.n	800d96e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d9f0:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d9f4:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d9f6:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d9f8:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d9fa:	699b      	ldr	r3, [r3, #24]
 800d9fc:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800da00:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800da02:	d13c      	bne.n	800da7e <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800da04:	f7ff ff96 	bl	800d934 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800da08:	4620      	mov	r0, r4
 800da0a:	f7ff ff97 	bl	800d93c <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800da0e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800da10:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800da12:	7722      	strb	r2, [r4, #28]
 800da14:	e7a5      	b.n	800d962 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800da16:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800da1a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800da1c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800da1e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800da20:	699b      	ldr	r3, [r3, #24]
 800da22:	079b      	lsls	r3, r3, #30
 800da24:	d025      	beq.n	800da72 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800da26:	f7ff ff87 	bl	800d938 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800da2a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800da2c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800da2e:	7722      	strb	r2, [r4, #28]
 800da30:	e791      	b.n	800d956 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800da32:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800da36:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800da38:	611a      	str	r2, [r3, #16]
}
 800da3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800da3e:	f000 b86b 	b.w	800db18 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800da42:	f06f 0201 	mvn.w	r2, #1
 800da46:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800da48:	4620      	mov	r0, r4
 800da4a:	f7f3 fca5 	bl	8001398 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800da4e:	6823      	ldr	r3, [r4, #0]
 800da50:	e799      	b.n	800d986 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800da52:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800da56:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800da58:	4620      	mov	r0, r4
 800da5a:	f000 f85f 	bl	800db1c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800da5e:	6823      	ldr	r3, [r4, #0]
 800da60:	e797      	b.n	800d992 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800da62:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800da66:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800da68:	4620      	mov	r0, r4
 800da6a:	f7ff ff69 	bl	800d940 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800da6e:	6823      	ldr	r3, [r4, #0]
 800da70:	e795      	b.n	800d99e <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800da72:	f7ff ff5f 	bl	800d934 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800da76:	4620      	mov	r0, r4
 800da78:	f7ff ff60 	bl	800d93c <HAL_TIM_PWM_PulseFinishedCallback>
 800da7c:	e7d5      	b.n	800da2a <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800da7e:	f7ff ff5b 	bl	800d938 <HAL_TIM_IC_CaptureCallback>
 800da82:	e7c4      	b.n	800da0e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800da84:	f7ff ff58 	bl	800d938 <HAL_TIM_IC_CaptureCallback>
 800da88:	e7ae      	b.n	800d9e8 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800da8a:	f7ff ff53 	bl	800d934 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800da8e:	4620      	mov	r0, r4
 800da90:	f7ff ff54 	bl	800d93c <HAL_TIM_PWM_PulseFinishedCallback>
 800da94:	e796      	b.n	800d9c4 <HAL_TIM_IRQHandler+0x80>
 800da96:	bf00      	nop

0800da98 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800da98:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800da9c:	2b01      	cmp	r3, #1
 800da9e:	d037      	beq.n	800db10 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800daa0:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800daa2:	2202      	movs	r2, #2
{
 800daa4:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800daa6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800daaa:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800daac:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800daae:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800dab0:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800dab4:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800dab6:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800dab8:	4a16      	ldr	r2, [pc, #88]	; (800db14 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800daba:	4293      	cmp	r3, r2
 800dabc:	d01a      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800dabe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800dac2:	d017      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800dac4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800dac8:	4293      	cmp	r3, r2
 800daca:	d013      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800dacc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800dad0:	4293      	cmp	r3, r2
 800dad2:	d00f      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800dad4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800dad8:	4293      	cmp	r3, r2
 800dada:	d00b      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800dadc:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800dae0:	4293      	cmp	r3, r2
 800dae2:	d007      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800dae4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800dae8:	4293      	cmp	r3, r2
 800daea:	d003      	beq.n	800daf4 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800daec:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800daf0:	4293      	cmp	r3, r2
 800daf2:	d104      	bne.n	800dafe <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800daf4:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800daf6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800dafa:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800dafc:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800dafe:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800db00:	2201      	movs	r2, #1
 800db02:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800db06:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800db0a:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800db0c:	4618      	mov	r0, r3
}
 800db0e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800db10:	2002      	movs	r0, #2
}
 800db12:	4770      	bx	lr
 800db14:	40010000 	.word	0x40010000

0800db18 <HAL_TIMEx_CommutCallback>:
 800db18:	4770      	bx	lr
 800db1a:	bf00      	nop

0800db1c <HAL_TIMEx_BreakCallback>:
 800db1c:	4770      	bx	lr
 800db1e:	bf00      	nop

0800db20 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800db20:	680b      	ldr	r3, [r1, #0]
{
 800db22:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800db24:	b9d3      	cbnz	r3, 800db5c <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800db26:	6803      	ldr	r3, [r0, #0]
 800db28:	684c      	ldr	r4, [r1, #4]
 800db2a:	688a      	ldr	r2, [r1, #8]
 800db2c:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800db30:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800db34:	4323      	orrs	r3, r4
 800db36:	4313      	orrs	r3, r2
 800db38:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800db3c:	4323      	orrs	r3, r4
 800db3e:	4313      	orrs	r3, r2
 800db40:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800db44:	4323      	orrs	r3, r4
 800db46:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800db4a:	4313      	orrs	r3, r2
 800db4c:	432b      	orrs	r3, r5
 800db4e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800db50:	4323      	orrs	r3, r4
 800db52:	4313      	orrs	r3, r2
 800db54:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800db56:	bc30      	pop	{r4, r5}
 800db58:	2000      	movs	r0, #0
 800db5a:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800db5c:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800db60:	6803      	ldr	r3, [r0, #0]
 800db62:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800db66:	4323      	orrs	r3, r4
 800db68:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800db6a:	4313      	orrs	r3, r2
 800db6c:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800db6e:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800db70:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800db72:	6843      	ldr	r3, [r0, #4]
 800db74:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800db78:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800db7c:	4313      	orrs	r3, r2
 800db7e:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800db82:	4323      	orrs	r3, r4
 800db84:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800db88:	4313      	orrs	r3, r2
 800db8a:	432b      	orrs	r3, r5
 800db8c:	698a      	ldr	r2, [r1, #24]
 800db8e:	4323      	orrs	r3, r4
 800db90:	4313      	orrs	r3, r2
 800db92:	6043      	str	r3, [r0, #4]
}
 800db94:	bc30      	pop	{r4, r5}
 800db96:	2000      	movs	r0, #0
 800db98:	4770      	bx	lr
 800db9a:	bf00      	nop

0800db9c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800db9c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800db9e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800dba0:	bb02      	cbnz	r2, 800dbe4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800dba2:	e9d1 2400 	ldrd	r2, r4, [r1]
 800dba6:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800dbaa:	3c01      	subs	r4, #1
 800dbac:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800dbb0:	3a01      	subs	r2, #1
 800dbb2:	4313      	orrs	r3, r2
 800dbb4:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800dbb8:	3c01      	subs	r4, #1
 800dbba:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800dbbe:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800dbc2:	3a01      	subs	r2, #1
 800dbc4:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800dbc8:	698a      	ldr	r2, [r1, #24]
 800dbca:	1e69      	subs	r1, r5, #1
 800dbcc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800dbd0:	1e61      	subs	r1, r4, #1
 800dbd2:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800dbd6:	3a01      	subs	r2, #1
 800dbd8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800dbdc:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800dbde:	bc30      	pop	{r4, r5}
 800dbe0:	2000      	movs	r0, #0
 800dbe2:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800dbe4:	68cc      	ldr	r4, [r1, #12]
 800dbe6:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800dbe8:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800dbea:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800dbee:	3c01      	subs	r4, #1
 800dbf0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800dbf4:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800dbf8:	3a01      	subs	r2, #1
 800dbfa:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800dbfe:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800dc00:	e9d1 2400 	ldrd	r2, r4, [r1]
 800dc04:	68c3      	ldr	r3, [r0, #12]
 800dc06:	3c01      	subs	r4, #1
 800dc08:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800dc0c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800dc10:	3a01      	subs	r2, #1
 800dc12:	690c      	ldr	r4, [r1, #16]
 800dc14:	4313      	orrs	r3, r2
 800dc16:	698a      	ldr	r2, [r1, #24]
 800dc18:	1e69      	subs	r1, r5, #1
 800dc1a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800dc1e:	1e61      	subs	r1, r4, #1
 800dc20:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800dc24:	3a01      	subs	r2, #1
 800dc26:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800dc2a:	60c3      	str	r3, [r0, #12]
}
 800dc2c:	bc30      	pop	{r4, r5}
 800dc2e:	2000      	movs	r0, #0
 800dc30:	4770      	bx	lr
 800dc32:	bf00      	nop

0800dc34 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800dc34:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dc36:	680b      	ldr	r3, [r1, #0]
{
 800dc38:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dc3a:	684a      	ldr	r2, [r1, #4]
{
 800dc3c:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dc3e:	4313      	orrs	r3, r2
 800dc40:	6900      	ldr	r0, [r0, #16]
 800dc42:	68ca      	ldr	r2, [r1, #12]
 800dc44:	0d80      	lsrs	r0, r0, #22
 800dc46:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800dc4a:	688a      	ldr	r2, [r1, #8]
 800dc4c:	0580      	lsls	r0, r0, #22
 800dc4e:	4303      	orrs	r3, r0
 800dc50:	3a01      	subs	r2, #1
 800dc52:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800dc56:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800dc58:	f7fb fef6 	bl	8009a48 <HAL_GetTick>
 800dc5c:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800dc5e:	1c6b      	adds	r3, r5, #1
 800dc60:	d105      	bne.n	800dc6e <FMC_SDRAM_SendCommand+0x3a>
 800dc62:	69a3      	ldr	r3, [r4, #24]
 800dc64:	f013 0320 	ands.w	r3, r3, #32
 800dc68:	d1fb      	bne.n	800dc62 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800dc6a:	4618      	mov	r0, r3
}
 800dc6c:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800dc6e:	69a3      	ldr	r3, [r4, #24]
 800dc70:	f013 0320 	ands.w	r3, r3, #32
 800dc74:	d0f9      	beq.n	800dc6a <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800dc76:	b125      	cbz	r5, 800dc82 <FMC_SDRAM_SendCommand+0x4e>
 800dc78:	f7fb fee6 	bl	8009a48 <HAL_GetTick>
 800dc7c:	1b80      	subs	r0, r0, r6
 800dc7e:	42a8      	cmp	r0, r5
 800dc80:	d9ed      	bls.n	800dc5e <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800dc82:	2003      	movs	r0, #3
}
 800dc84:	bd70      	pop	{r4, r5, r6, pc}
 800dc86:	bf00      	nop

0800dc88 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800dc88:	6943      	ldr	r3, [r0, #20]
 800dc8a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800dc8e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800dc90:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800dc94:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800dc98:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800dc9a:	6151      	str	r1, [r2, #20]
}
 800dc9c:	4770      	bx	lr
 800dc9e:	bf00      	nop

0800dca0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800dca0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800dca2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dca6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800dca8:	f002 fb04 	bl	80102b4 <xTaskGetSchedulerState>
 800dcac:	2801      	cmp	r0, #1
 800dcae:	d100      	bne.n	800dcb2 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800dcb0:	bd08      	pop	{r3, pc}
 800dcb2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800dcb6:	f000 bc45 	b.w	800e544 <xPortSysTickHandler>
 800dcba:	bf00      	nop

0800dcbc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800dcbc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800dcc0:	b92b      	cbnz	r3, 800dcce <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800dcc2:	4b06      	ldr	r3, [pc, #24]	; (800dcdc <osKernelInitialize+0x20>)
 800dcc4:	6818      	ldr	r0, [r3, #0]
 800dcc6:	b928      	cbnz	r0, 800dcd4 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800dcc8:	2201      	movs	r2, #1
 800dcca:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800dccc:	4770      	bx	lr
    stat = osErrorISR;
 800dcce:	f06f 0005 	mvn.w	r0, #5
 800dcd2:	4770      	bx	lr
    } else {
      stat = osError;
 800dcd4:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800dcd8:	4770      	bx	lr
 800dcda:	bf00      	nop
 800dcdc:	20002cf0 	.word	0x20002cf0

0800dce0 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800dce0:	b510      	push	{r4, lr}
 800dce2:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800dce6:	b974      	cbnz	r4, 800dd06 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800dce8:	4b08      	ldr	r3, [pc, #32]	; (800dd0c <osKernelStart+0x2c>)
 800dcea:	681a      	ldr	r2, [r3, #0]
 800dcec:	2a01      	cmp	r2, #1
 800dcee:	d107      	bne.n	800dd00 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800dcf0:	4907      	ldr	r1, [pc, #28]	; (800dd10 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800dcf2:	2202      	movs	r2, #2
 800dcf4:	77cc      	strb	r4, [r1, #31]
 800dcf6:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800dcf8:	f002 f8b6 	bl	800fe68 <vTaskStartScheduler>
      stat = osOK;
 800dcfc:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800dcfe:	bd10      	pop	{r4, pc}
      stat = osError;
 800dd00:	f04f 30ff 	mov.w	r0, #4294967295
}
 800dd04:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800dd06:	f06f 0005 	mvn.w	r0, #5
}
 800dd0a:	bd10      	pop	{r4, pc}
 800dd0c:	20002cf0 	.word	0x20002cf0
 800dd10:	e000ed00 	.word	0xe000ed00

0800dd14 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800dd14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd16:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800dd18:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800dd1a:	4615      	mov	r5, r2
  hTask = NULL;
 800dd1c:	9405      	str	r4, [sp, #20]
 800dd1e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800dd22:	b9ea      	cbnz	r2, 800dd60 <osThreadNew+0x4c>
 800dd24:	b350      	cbz	r0, 800dd7c <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800dd26:	b1f5      	cbz	r5, 800dd66 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800dd28:	69ab      	ldr	r3, [r5, #24]
 800dd2a:	bb5b      	cbnz	r3, 800dd84 <osThreadNew+0x70>
 800dd2c:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dd2e:	686a      	ldr	r2, [r5, #4]
 800dd30:	07d2      	lsls	r2, r2, #31
 800dd32:	d423      	bmi.n	800dd7c <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800dd34:	696e      	ldr	r6, [r5, #20]
 800dd36:	b34e      	cbz	r6, 800dd8c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800dd38:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dd3c:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800dd3e:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dd40:	b34c      	cbz	r4, 800dd96 <osThreadNew+0x82>
 800dd42:	68ea      	ldr	r2, [r5, #12]
 800dd44:	2aab      	cmp	r2, #171	; 0xab
 800dd46:	d919      	bls.n	800dd7c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dd48:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dd4a:	b1bd      	cbz	r5, 800dd7c <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dd4c:	b1b6      	cbz	r6, 800dd7c <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800dd4e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800dd52:	9300      	str	r3, [sp, #0]
 800dd54:	4662      	mov	r2, ip
 800dd56:	460b      	mov	r3, r1
 800dd58:	4639      	mov	r1, r7
 800dd5a:	f001 ffc3 	bl	800fce4 <xTaskCreateStatic>
 800dd5e:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800dd60:	4620      	mov	r0, r4
 800dd62:	b007      	add	sp, #28
 800dd64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd66:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800dd68:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dd6a:	ac05      	add	r4, sp, #20
 800dd6c:	9300      	str	r3, [sp, #0]
 800dd6e:	9401      	str	r4, [sp, #4]
 800dd70:	460b      	mov	r3, r1
 800dd72:	4629      	mov	r1, r5
 800dd74:	f001 fff0 	bl	800fd58 <xTaskCreate>
 800dd78:	2801      	cmp	r0, #1
 800dd7a:	d00a      	beq.n	800dd92 <osThreadNew+0x7e>
        return (NULL);
 800dd7c:	2400      	movs	r4, #0
}
 800dd7e:	4620      	mov	r0, r4
 800dd80:	b007      	add	sp, #28
 800dd82:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dd84:	1e5c      	subs	r4, r3, #1
 800dd86:	2c37      	cmp	r4, #55	; 0x37
 800dd88:	d9d1      	bls.n	800dd2e <osThreadNew+0x1a>
 800dd8a:	e7f7      	b.n	800dd7c <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800dd8c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800dd90:	e7d4      	b.n	800dd3c <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800dd92:	9c05      	ldr	r4, [sp, #20]
 800dd94:	e7e4      	b.n	800dd60 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800dd96:	68ee      	ldr	r6, [r5, #12]
 800dd98:	2e00      	cmp	r6, #0
 800dd9a:	d1e1      	bne.n	800dd60 <osThreadNew+0x4c>
 800dd9c:	692d      	ldr	r5, [r5, #16]
 800dd9e:	2d00      	cmp	r5, #0
 800dda0:	d1de      	bne.n	800dd60 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dda2:	fa1f f28c 	uxth.w	r2, ip
 800dda6:	463d      	mov	r5, r7
 800dda8:	e7df      	b.n	800dd6a <osThreadNew+0x56>
 800ddaa:	bf00      	nop

0800ddac <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800ddac:	b510      	push	{r4, lr}
 800ddae:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ddb2:	b92c      	cbnz	r4, 800ddc0 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800ddb4:	b900      	cbnz	r0, 800ddb8 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800ddb6:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800ddb8:	f002 f800 	bl	800fdbc <vTaskDelay>
    stat = osOK;
 800ddbc:	4620      	mov	r0, r4
}
 800ddbe:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ddc0:	f06f 0005 	mvn.w	r0, #5
}
 800ddc4:	bd10      	pop	{r4, pc}
 800ddc6:	bf00      	nop

0800ddc8 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800ddc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddca:	b083      	sub	sp, #12
 800ddcc:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800ddd0:	b9fe      	cbnz	r6, 800de12 <osSemaphoreNew+0x4a>
 800ddd2:	b1f0      	cbz	r0, 800de12 <osSemaphoreNew+0x4a>
 800ddd4:	4288      	cmp	r0, r1
 800ddd6:	460f      	mov	r7, r1
 800ddd8:	d31b      	bcc.n	800de12 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800ddda:	4615      	mov	r5, r2
 800dddc:	b192      	cbz	r2, 800de04 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800ddde:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800dde2:	b1d2      	cbz	r2, 800de1a <osSemaphoreNew+0x52>
 800dde4:	2b4f      	cmp	r3, #79	; 0x4f
 800dde6:	d914      	bls.n	800de12 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800dde8:	2801      	cmp	r0, #1
 800ddea:	d038      	beq.n	800de5e <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800ddec:	f000 fd90 	bl	800e910 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800ddf0:	4604      	mov	r4, r0
 800ddf2:	b170      	cbz	r0, 800de12 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800ddf4:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800ddf6:	4620      	mov	r0, r4
 800ddf8:	4629      	mov	r1, r5
 800ddfa:	f001 fc3b 	bl	800f674 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800ddfe:	4620      	mov	r0, r4
 800de00:	b003      	add	sp, #12
 800de02:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800de04:	2801      	cmp	r0, #1
 800de06:	d012      	beq.n	800de2e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800de08:	f000 fde2 	bl	800e9d0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800de0c:	4604      	mov	r4, r0
 800de0e:	2800      	cmp	r0, #0
 800de10:	d1f1      	bne.n	800ddf6 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800de12:	2400      	movs	r4, #0
}
 800de14:	4620      	mov	r0, r4
 800de16:	b003      	add	sp, #12
 800de18:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800de1a:	2b00      	cmp	r3, #0
 800de1c:	d1f9      	bne.n	800de12 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800de1e:	2801      	cmp	r0, #1
 800de20:	d005      	beq.n	800de2e <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800de22:	f000 fdd5 	bl	800e9d0 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800de26:	4604      	mov	r4, r0
 800de28:	2800      	cmp	r0, #0
 800de2a:	d1e3      	bne.n	800ddf4 <osSemaphoreNew+0x2c>
 800de2c:	e7f1      	b.n	800de12 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800de2e:	2203      	movs	r2, #3
 800de30:	2100      	movs	r1, #0
 800de32:	2001      	movs	r0, #1
 800de34:	f000 fd2a 	bl	800e88c <xQueueGenericCreate>
 800de38:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800de3a:	2c00      	cmp	r4, #0
 800de3c:	d0e9      	beq.n	800de12 <osSemaphoreNew+0x4a>
 800de3e:	b917      	cbnz	r7, 800de46 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800de40:	2d00      	cmp	r5, #0
 800de42:	d1d7      	bne.n	800ddf4 <osSemaphoreNew+0x2c>
 800de44:	e7d7      	b.n	800ddf6 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800de46:	2300      	movs	r3, #0
 800de48:	461a      	mov	r2, r3
 800de4a:	4619      	mov	r1, r3
 800de4c:	4620      	mov	r0, r4
 800de4e:	f000 fe05 	bl	800ea5c <xQueueGenericSend>
 800de52:	2801      	cmp	r0, #1
 800de54:	d0f4      	beq.n	800de40 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800de56:	4620      	mov	r0, r4
 800de58:	f001 fbc6 	bl	800f5e8 <vQueueDelete>
 800de5c:	e7d9      	b.n	800de12 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800de5e:	4613      	mov	r3, r2
 800de60:	2203      	movs	r2, #3
 800de62:	9200      	str	r2, [sp, #0]
 800de64:	4631      	mov	r1, r6
 800de66:	4632      	mov	r2, r6
 800de68:	f000 fca2 	bl	800e7b0 <xQueueGenericCreateStatic>
 800de6c:	4604      	mov	r4, r0
 800de6e:	e7e4      	b.n	800de3a <osSemaphoreNew+0x72>

0800de70 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800de70:	b370      	cbz	r0, 800ded0 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800de72:	b510      	push	{r4, lr}
 800de74:	460c      	mov	r4, r1
 800de76:	b082      	sub	sp, #8
 800de78:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800de7c:	b1c3      	cbz	r3, 800deb0 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800de7e:	bb21      	cbnz	r1, 800deca <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800de80:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800de82:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800de84:	f001 fb2e 	bl	800f4e4 <xQueueReceiveFromISR>
 800de88:	2801      	cmp	r0, #1
 800de8a:	d11a      	bne.n	800dec2 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800de8c:	9b01      	ldr	r3, [sp, #4]
 800de8e:	b913      	cbnz	r3, 800de96 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800de90:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800de92:	b002      	add	sp, #8
 800de94:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800de96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de9e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dea2:	f3bf 8f4f 	dsb	sy
 800dea6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800deaa:	4620      	mov	r0, r4
}
 800deac:	b002      	add	sp, #8
 800deae:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800deb0:	f001 f98e 	bl	800f1d0 <xQueueSemaphoreTake>
 800deb4:	2801      	cmp	r0, #1
 800deb6:	d0eb      	beq.n	800de90 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800deb8:	b11c      	cbz	r4, 800dec2 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800deba:	f06f 0001 	mvn.w	r0, #1
}
 800debe:	b002      	add	sp, #8
 800dec0:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800dec2:	f06f 0002 	mvn.w	r0, #2
}
 800dec6:	b002      	add	sp, #8
 800dec8:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800deca:	f06f 0003 	mvn.w	r0, #3
 800dece:	e7e0      	b.n	800de92 <osSemaphoreAcquire+0x22>
 800ded0:	f06f 0003 	mvn.w	r0, #3
}
 800ded4:	4770      	bx	lr
 800ded6:	bf00      	nop

0800ded8 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ded8:	b330      	cbz	r0, 800df28 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800deda:	b510      	push	{r4, lr}
 800dedc:	b082      	sub	sp, #8
 800dede:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dee2:	b1ab      	cbz	r3, 800df10 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800dee4:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dee6:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800dee8:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800deea:	f000 ff9b 	bl	800ee24 <xQueueGiveFromISR>
 800deee:	2801      	cmp	r0, #1
 800def0:	d117      	bne.n	800df22 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800def2:	9b01      	ldr	r3, [sp, #4]
 800def4:	b193      	cbz	r3, 800df1c <osSemaphoreRelease+0x44>
 800def6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800defa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800defe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df02:	f3bf 8f4f 	dsb	sy
 800df06:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800df0a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800df0c:	b002      	add	sp, #8
 800df0e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800df10:	461a      	mov	r2, r3
 800df12:	4619      	mov	r1, r3
 800df14:	f000 fda2 	bl	800ea5c <xQueueGenericSend>
 800df18:	2801      	cmp	r0, #1
 800df1a:	d102      	bne.n	800df22 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800df1c:	2000      	movs	r0, #0
}
 800df1e:	b002      	add	sp, #8
 800df20:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800df22:	f06f 0002 	mvn.w	r0, #2
 800df26:	e7fa      	b.n	800df1e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800df28:	f06f 0003 	mvn.w	r0, #3
}
 800df2c:	4770      	bx	lr
 800df2e:	bf00      	nop

0800df30 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800df30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df32:	b085      	sub	sp, #20
 800df34:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800df38:	b987      	cbnz	r7, 800df5c <osMessageQueueNew+0x2c>
 800df3a:	4605      	mov	r5, r0
 800df3c:	b170      	cbz	r0, 800df5c <osMessageQueueNew+0x2c>
 800df3e:	b169      	cbz	r1, 800df5c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800df40:	4614      	mov	r4, r2
 800df42:	b1ea      	cbz	r2, 800df80 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800df44:	6893      	ldr	r3, [r2, #8]
 800df46:	b163      	cbz	r3, 800df62 <osMessageQueueNew+0x32>
 800df48:	68d2      	ldr	r2, [r2, #12]
 800df4a:	2a4f      	cmp	r2, #79	; 0x4f
 800df4c:	d906      	bls.n	800df5c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800df4e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800df50:	b122      	cbz	r2, 800df5c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800df52:	6966      	ldr	r6, [r4, #20]
 800df54:	fb01 f505 	mul.w	r5, r1, r5
 800df58:	42ae      	cmp	r6, r5
 800df5a:	d21c      	bcs.n	800df96 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800df5c:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800df5e:	b005      	add	sp, #20
 800df60:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800df62:	68d3      	ldr	r3, [r2, #12]
 800df64:	2b00      	cmp	r3, #0
 800df66:	d1f9      	bne.n	800df5c <osMessageQueueNew+0x2c>
 800df68:	6913      	ldr	r3, [r2, #16]
 800df6a:	2b00      	cmp	r3, #0
 800df6c:	d1f6      	bne.n	800df5c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800df6e:	6952      	ldr	r2, [r2, #20]
 800df70:	2a00      	cmp	r2, #0
 800df72:	d1f3      	bne.n	800df5c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800df74:	f000 fc8a 	bl	800e88c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800df78:	2800      	cmp	r0, #0
 800df7a:	d0ef      	beq.n	800df5c <osMessageQueueNew+0x2c>
        name = attr->name;
 800df7c:	6824      	ldr	r4, [r4, #0]
 800df7e:	e003      	b.n	800df88 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800df80:	f000 fc84 	bl	800e88c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800df84:	2800      	cmp	r0, #0
 800df86:	d0e9      	beq.n	800df5c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800df88:	4621      	mov	r1, r4
 800df8a:	9003      	str	r0, [sp, #12]
 800df8c:	f001 fb72 	bl	800f674 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800df90:	9803      	ldr	r0, [sp, #12]
}
 800df92:	b005      	add	sp, #20
 800df94:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800df96:	9700      	str	r7, [sp, #0]
 800df98:	f000 fc0a 	bl	800e7b0 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800df9c:	2800      	cmp	r0, #0
 800df9e:	d1ed      	bne.n	800df7c <osMessageQueueNew+0x4c>
 800dfa0:	e7dc      	b.n	800df5c <osMessageQueueNew+0x2c>
 800dfa2:	bf00      	nop

0800dfa4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800dfa4:	b570      	push	{r4, r5, r6, lr}
 800dfa6:	461c      	mov	r4, r3
 800dfa8:	b082      	sub	sp, #8
 800dfaa:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800dfae:	b1be      	cbz	r6, 800dfe0 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800dfb0:	b350      	cbz	r0, 800e008 <osMessageQueuePut+0x64>
 800dfb2:	b349      	cbz	r1, 800e008 <osMessageQueuePut+0x64>
 800dfb4:	bb43      	cbnz	r3, 800e008 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800dfb6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dfb8:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800dfba:	f000 fecd 	bl	800ed58 <xQueueGenericSendFromISR>
 800dfbe:	2801      	cmp	r0, #1
 800dfc0:	d11e      	bne.n	800e000 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dfc2:	9b01      	ldr	r3, [sp, #4]
 800dfc4:	b1cb      	cbz	r3, 800dffa <osMessageQueuePut+0x56>
 800dfc6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dfca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dfce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dfd2:	f3bf 8f4f 	dsb	sy
 800dfd6:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dfda:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800dfdc:	b002      	add	sp, #8
 800dfde:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800dfe0:	b190      	cbz	r0, 800e008 <osMessageQueuePut+0x64>
 800dfe2:	b189      	cbz	r1, 800e008 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800dfe4:	4633      	mov	r3, r6
 800dfe6:	4622      	mov	r2, r4
 800dfe8:	f000 fd38 	bl	800ea5c <xQueueGenericSend>
 800dfec:	2801      	cmp	r0, #1
 800dfee:	d004      	beq.n	800dffa <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800dff0:	b134      	cbz	r4, 800e000 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800dff2:	f06f 0001 	mvn.w	r0, #1
}
 800dff6:	b002      	add	sp, #8
 800dff8:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800dffa:	2000      	movs	r0, #0
}
 800dffc:	b002      	add	sp, #8
 800dffe:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800e000:	f06f 0002 	mvn.w	r0, #2
}
 800e004:	b002      	add	sp, #8
 800e006:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800e008:	f06f 0003 	mvn.w	r0, #3
 800e00c:	e7e6      	b.n	800dfdc <osMessageQueuePut+0x38>
 800e00e:	bf00      	nop

0800e010 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800e010:	b530      	push	{r4, r5, lr}
 800e012:	461c      	mov	r4, r3
 800e014:	b083      	sub	sp, #12
 800e016:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800e01a:	b1bb      	cbz	r3, 800e04c <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800e01c:	b348      	cbz	r0, 800e072 <osMessageQueueGet+0x62>
 800e01e:	b341      	cbz	r1, 800e072 <osMessageQueueGet+0x62>
 800e020:	bb3c      	cbnz	r4, 800e072 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e022:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800e024:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800e026:	f001 fa5d 	bl	800f4e4 <xQueueReceiveFromISR>
 800e02a:	2801      	cmp	r0, #1
 800e02c:	d11d      	bne.n	800e06a <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800e02e:	9b01      	ldr	r3, [sp, #4]
 800e030:	b1c3      	cbz	r3, 800e064 <osMessageQueueGet+0x54>
 800e032:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e036:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e03a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e03e:	f3bf 8f4f 	dsb	sy
 800e042:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800e046:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800e048:	b003      	add	sp, #12
 800e04a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800e04c:	b188      	cbz	r0, 800e072 <osMessageQueueGet+0x62>
 800e04e:	b181      	cbz	r1, 800e072 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800e050:	4622      	mov	r2, r4
 800e052:	f000 ff3f 	bl	800eed4 <xQueueReceive>
 800e056:	2801      	cmp	r0, #1
 800e058:	d004      	beq.n	800e064 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800e05a:	b134      	cbz	r4, 800e06a <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800e05c:	f06f 0001 	mvn.w	r0, #1
}
 800e060:	b003      	add	sp, #12
 800e062:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800e064:	2000      	movs	r0, #0
}
 800e066:	b003      	add	sp, #12
 800e068:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800e06a:	f06f 0002 	mvn.w	r0, #2
}
 800e06e:	b003      	add	sp, #12
 800e070:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800e072:	f06f 0003 	mvn.w	r0, #3
 800e076:	e7e7      	b.n	800e048 <osMessageQueueGet+0x38>

0800e078 <osMessageQueueGetCount>:
 800e078:	b130      	cbz	r0, 800e088 <osMessageQueueGetCount+0x10>
 800e07a:	f3ef 8305 	mrs	r3, IPSR
 800e07e:	b10b      	cbz	r3, 800e084 <osMessageQueueGetCount+0xc>
 800e080:	f001 baa4 	b.w	800f5cc <uxQueueMessagesWaitingFromISR>
 800e084:	f001 ba8c 	b.w	800f5a0 <uxQueueMessagesWaiting>
 800e088:	4770      	bx	lr
 800e08a:	bf00      	nop

0800e08c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800e08c:	4b04      	ldr	r3, [pc, #16]	; (800e0a0 <vApplicationGetIdleTaskMemory+0x14>)
 800e08e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800e090:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800e092:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800e094:	4c03      	ldr	r4, [pc, #12]	; (800e0a4 <vApplicationGetIdleTaskMemory+0x18>)
 800e096:	600c      	str	r4, [r1, #0]
}
 800e098:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800e09c:	6013      	str	r3, [r2, #0]
}
 800e09e:	4770      	bx	lr
 800e0a0:	20002c44 	.word	0x20002c44
 800e0a4:	20002a44 	.word	0x20002a44

0800e0a8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800e0a8:	4b05      	ldr	r3, [pc, #20]	; (800e0c0 <vApplicationGetTimerTaskMemory+0x18>)
 800e0aa:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800e0ac:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800e0ae:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800e0b2:	4c04      	ldr	r4, [pc, #16]	; (800e0c4 <vApplicationGetTimerTaskMemory+0x1c>)
 800e0b4:	600c      	str	r4, [r1, #0]
}
 800e0b6:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800e0ba:	6013      	str	r3, [r2, #0]
}
 800e0bc:	4770      	bx	lr
 800e0be:	bf00      	nop
 800e0c0:	200030f4 	.word	0x200030f4
 800e0c4:	20002cf4 	.word	0x20002cf4

0800e0c8 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800e0c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0cc:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800e0ce:	f001 ff47 	bl	800ff60 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800e0d2:	4a54      	ldr	r2, [pc, #336]	; (800e224 <pvPortMalloc+0x15c>)
 800e0d4:	6816      	ldr	r6, [r2, #0]
 800e0d6:	2e00      	cmp	r6, #0
 800e0d8:	d06e      	beq.n	800e1b8 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800e0da:	4b53      	ldr	r3, [pc, #332]	; (800e228 <pvPortMalloc+0x160>)
 800e0dc:	681f      	ldr	r7, [r3, #0]
 800e0de:	423d      	tst	r5, r7
 800e0e0:	d12e      	bne.n	800e140 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800e0e2:	b36d      	cbz	r5, 800e140 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800e0e4:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800e0e8:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800e0ea:	bf1c      	itt	ne
 800e0ec:	f024 0407 	bicne.w	r4, r4, #7
 800e0f0:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800e0f2:	b32c      	cbz	r4, 800e140 <pvPortMalloc+0x78>
 800e0f4:	f8df c144 	ldr.w	ip, [pc, #324]	; 800e23c <pvPortMalloc+0x174>
 800e0f8:	f8dc 5000 	ldr.w	r5, [ip]
 800e0fc:	42a5      	cmp	r5, r4
 800e0fe:	d31f      	bcc.n	800e140 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800e100:	484a      	ldr	r0, [pc, #296]	; (800e22c <pvPortMalloc+0x164>)
 800e102:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800e104:	e003      	b.n	800e10e <pvPortMalloc+0x46>
 800e106:	681a      	ldr	r2, [r3, #0]
 800e108:	b122      	cbz	r2, 800e114 <pvPortMalloc+0x4c>
 800e10a:	4618      	mov	r0, r3
 800e10c:	4613      	mov	r3, r2
 800e10e:	6859      	ldr	r1, [r3, #4]
 800e110:	42a1      	cmp	r1, r4
 800e112:	d3f8      	bcc.n	800e106 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800e114:	42b3      	cmp	r3, r6
 800e116:	d013      	beq.n	800e140 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800e118:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e11a:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800e11c:	f858 eb08 	ldr.w	lr, [r8], #8
 800e120:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800e124:	2a10      	cmp	r2, #16
 800e126:	d929      	bls.n	800e17c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800e128:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800e12a:	0748      	lsls	r0, r1, #29
 800e12c:	d00f      	beq.n	800e14e <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800e12e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e132:	f383 8811 	msr	BASEPRI, r3
 800e136:	f3bf 8f6f 	isb	sy
 800e13a:	f3bf 8f4f 	dsb	sy
 800e13e:	e7fe      	b.n	800e13e <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800e140:	f001 ff16 	bl	800ff70 <xTaskResumeAll>
 800e144:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800e148:	4640      	mov	r0, r8
 800e14a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800e14e:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e150:	4a36      	ldr	r2, [pc, #216]	; (800e22c <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800e152:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e154:	4614      	mov	r4, r2
 800e156:	6812      	ldr	r2, [r2, #0]
 800e158:	4291      	cmp	r1, r2
 800e15a:	d8fb      	bhi.n	800e154 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e15c:	6860      	ldr	r0, [r4, #4]
 800e15e:	eb04 0e00 	add.w	lr, r4, r0
 800e162:	4571      	cmp	r1, lr
 800e164:	d04b      	beq.n	800e1fe <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e166:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e16a:	eb01 000e 	add.w	r0, r1, lr
 800e16e:	4282      	cmp	r2, r0
 800e170:	d051      	beq.n	800e216 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800e172:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e174:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e176:	bf18      	it	ne
 800e178:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e17a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e17c:	4a2c      	ldr	r2, [pc, #176]	; (800e230 <pvPortMalloc+0x168>)
 800e17e:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e180:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e182:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e184:	bf38      	it	cc
 800e186:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800e188:	4a2a      	ldr	r2, [pc, #168]	; (800e234 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e18a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e18e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800e190:	2000      	movs	r0, #0
 800e192:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800e196:	6813      	ldr	r3, [r2, #0]
 800e198:	3301      	adds	r3, #1
 800e19a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800e19c:	f001 fee8 	bl	800ff70 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e1a0:	f018 0f07 	tst.w	r8, #7
 800e1a4:	d0d0      	beq.n	800e148 <pvPortMalloc+0x80>
 800e1a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1aa:	f383 8811 	msr	BASEPRI, r3
 800e1ae:	f3bf 8f6f 	isb	sy
 800e1b2:	f3bf 8f4f 	dsb	sy
 800e1b6:	e7fe      	b.n	800e1b6 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800e1b8:	4b1f      	ldr	r3, [pc, #124]	; (800e238 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e1ba:	075e      	lsls	r6, r3, #29
 800e1bc:	d118      	bne.n	800e1f0 <pvPortMalloc+0x128>
 800e1be:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800e1c2:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800e1c4:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e1c6:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800e1ca:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e1cc:	4a18      	ldr	r2, [pc, #96]	; (800e230 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e1ce:	4817      	ldr	r0, [pc, #92]	; (800e22c <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e1d0:	4c15      	ldr	r4, [pc, #84]	; (800e228 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e1d2:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e1d4:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e1d6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e1d8:	4a18      	ldr	r2, [pc, #96]	; (800e23c <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e1da:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e1de:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800e1e0:	2200      	movs	r2, #0
 800e1e2:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e1e4:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e1e6:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e1ea:	e9c1 6300 	strd	r6, r3, [r1]
}
 800e1ee:	e776      	b.n	800e0de <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e1f0:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800e1f2:	f021 0107 	bic.w	r1, r1, #7
 800e1f6:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e1fa:	460b      	mov	r3, r1
 800e1fc:	e7e2      	b.n	800e1c4 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e1fe:	6849      	ldr	r1, [r1, #4]
 800e200:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e204:	eb04 010e 	add.w	r1, r4, lr
 800e208:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e20a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e20e:	d001      	beq.n	800e214 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e210:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800e212:	e7b2      	b.n	800e17a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e214:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e216:	42b2      	cmp	r2, r6
 800e218:	d0ab      	beq.n	800e172 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e21a:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e21c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e21e:	4470      	add	r0, lr
 800e220:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e222:	e7a6      	b.n	800e172 <pvPortMalloc+0xaa>
 800e224:	200031a0 	.word	0x200031a0
 800e228:	200131a4 	.word	0x200131a4
 800e22c:	200131b8 	.word	0x200131b8
 800e230:	200131ac 	.word	0x200131ac
 800e234:	200131b0 	.word	0x200131b0
 800e238:	200031a4 	.word	0x200031a4
 800e23c:	200131a8 	.word	0x200131a8

0800e240 <vPortFree>:
	if( pv != NULL )
 800e240:	b1d0      	cbz	r0, 800e278 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e242:	4a2c      	ldr	r2, [pc, #176]	; (800e2f4 <vPortFree+0xb4>)
 800e244:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e248:	6812      	ldr	r2, [r2, #0]
 800e24a:	4213      	tst	r3, r2
 800e24c:	d00b      	beq.n	800e266 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800e24e:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e252:	b191      	cbz	r1, 800e27a <vPortFree+0x3a>
 800e254:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e258:	f383 8811 	msr	BASEPRI, r3
 800e25c:	f3bf 8f6f 	isb	sy
 800e260:	f3bf 8f4f 	dsb	sy
 800e264:	e7fe      	b.n	800e264 <vPortFree+0x24>
 800e266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e26a:	f383 8811 	msr	BASEPRI, r3
 800e26e:	f3bf 8f6f 	isb	sy
 800e272:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e276:	e7fe      	b.n	800e276 <vPortFree+0x36>
 800e278:	4770      	bx	lr
{
 800e27a:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e27c:	ea23 0302 	bic.w	r3, r3, r2
{
 800e280:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e282:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e286:	4c1c      	ldr	r4, [pc, #112]	; (800e2f8 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e288:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800e28a:	f001 fe69 	bl	800ff60 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e28e:	9801      	ldr	r0, [sp, #4]
 800e290:	6822      	ldr	r2, [r4, #0]
 800e292:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e296:	4b19      	ldr	r3, [pc, #100]	; (800e2fc <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e298:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800e29a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e29c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e29e:	461a      	mov	r2, r3
 800e2a0:	681b      	ldr	r3, [r3, #0]
 800e2a2:	4298      	cmp	r0, r3
 800e2a4:	d8fb      	bhi.n	800e29e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e2a6:	6854      	ldr	r4, [r2, #4]
 800e2a8:	eb02 0e04 	add.w	lr, r2, r4
 800e2ac:	4570      	cmp	r0, lr
 800e2ae:	d010      	beq.n	800e2d2 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e2b0:	eb00 0c01 	add.w	ip, r0, r1
 800e2b4:	4563      	cmp	r3, ip
 800e2b6:	d014      	beq.n	800e2e2 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800e2b8:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e2ba:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e2bc:	bf18      	it	ne
 800e2be:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800e2c0:	4a0f      	ldr	r2, [pc, #60]	; (800e300 <vPortFree+0xc0>)
 800e2c2:	6813      	ldr	r3, [r2, #0]
 800e2c4:	3301      	adds	r3, #1
 800e2c6:	6013      	str	r3, [r2, #0]
}
 800e2c8:	b002      	add	sp, #8
 800e2ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800e2ce:	f001 be4f 	b.w	800ff70 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e2d2:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e2d4:	1850      	adds	r0, r2, r1
 800e2d6:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e2d8:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e2da:	d001      	beq.n	800e2e0 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e2dc:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800e2de:	e7ef      	b.n	800e2c0 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e2e0:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e2e2:	4c08      	ldr	r4, [pc, #32]	; (800e304 <vPortFree+0xc4>)
 800e2e4:	6824      	ldr	r4, [r4, #0]
 800e2e6:	42a3      	cmp	r3, r4
 800e2e8:	d0e6      	beq.n	800e2b8 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e2ea:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e2ee:	4421      	add	r1, r4
 800e2f0:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e2f2:	e7e1      	b.n	800e2b8 <vPortFree+0x78>
 800e2f4:	200131a4 	.word	0x200131a4
 800e2f8:	200131a8 	.word	0x200131a8
 800e2fc:	200131b8 	.word	0x200131b8
 800e300:	200131b4 	.word	0x200131b4
 800e304:	200031a0 	.word	0x200031a0

0800e308 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e308:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e30c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e310:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e312:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e316:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e31a:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800e31c:	4770      	bx	lr
 800e31e:	bf00      	nop

0800e320 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800e320:	2300      	movs	r3, #0
 800e322:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800e324:	4770      	bx	lr
 800e326:	bf00      	nop

0800e328 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800e328:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800e32a:	689a      	ldr	r2, [r3, #8]
 800e32c:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e32e:	6802      	ldr	r2, [r0, #0]
{
 800e330:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e332:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800e334:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e336:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e338:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800e33a:	6099      	str	r1, [r3, #8]
}
 800e33c:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800e340:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e342:	6002      	str	r2, [r0, #0]
}
 800e344:	4770      	bx	lr
 800e346:	bf00      	nop

0800e348 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800e348:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800e34a:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800e34c:	1c6b      	adds	r3, r5, #1
 800e34e:	d010      	beq.n	800e372 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800e350:	f100 0308 	add.w	r3, r0, #8
 800e354:	461c      	mov	r4, r3
 800e356:	685b      	ldr	r3, [r3, #4]
 800e358:	681a      	ldr	r2, [r3, #0]
 800e35a:	42aa      	cmp	r2, r5
 800e35c:	d9fa      	bls.n	800e354 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e35e:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e360:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e362:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800e364:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800e366:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800e368:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800e36a:	6108      	str	r0, [r1, #16]
}
 800e36c:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800e36e:	6002      	str	r2, [r0, #0]
}
 800e370:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800e372:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e374:	6863      	ldr	r3, [r4, #4]
 800e376:	e7f2      	b.n	800e35e <vListInsert+0x16>

0800e378 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800e378:	6903      	ldr	r3, [r0, #16]
{
 800e37a:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e37c:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800e380:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e382:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800e384:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800e386:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800e388:	bf08      	it	eq
 800e38a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800e38c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800e38e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800e392:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800e394:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800e396:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800e398:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800e39a:	6818      	ldr	r0, [r3, #0]
}
 800e39c:	4770      	bx	lr
 800e39e:	bf00      	nop

0800e3a0 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800e3a0:	4808      	ldr	r0, [pc, #32]	; (800e3c4 <prvPortStartFirstTask+0x24>)
 800e3a2:	6800      	ldr	r0, [r0, #0]
 800e3a4:	6800      	ldr	r0, [r0, #0]
 800e3a6:	f380 8808 	msr	MSP, r0
 800e3aa:	f04f 0000 	mov.w	r0, #0
 800e3ae:	f380 8814 	msr	CONTROL, r0
 800e3b2:	b662      	cpsie	i
 800e3b4:	b661      	cpsie	f
 800e3b6:	f3bf 8f4f 	dsb	sy
 800e3ba:	f3bf 8f6f 	isb	sy
 800e3be:	df00      	svc	0
 800e3c0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800e3c2:	0000      	.short	0x0000
 800e3c4:	e000ed08 	.word	0xe000ed08

0800e3c8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800e3c8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800e3d8 <vPortEnableVFP+0x10>
 800e3cc:	6801      	ldr	r1, [r0, #0]
 800e3ce:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800e3d2:	6001      	str	r1, [r0, #0]
 800e3d4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800e3d6:	0000      	.short	0x0000
 800e3d8:	e000ed88 	.word	0xe000ed88

0800e3dc <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800e3dc:	4b0e      	ldr	r3, [pc, #56]	; (800e418 <prvTaskExitError+0x3c>)
 800e3de:	681b      	ldr	r3, [r3, #0]
{
 800e3e0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800e3e2:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800e3e4:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800e3e6:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800e3e8:	d008      	beq.n	800e3fc <prvTaskExitError+0x20>
 800e3ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ee:	f383 8811 	msr	BASEPRI, r3
 800e3f2:	f3bf 8f6f 	isb	sy
 800e3f6:	f3bf 8f4f 	dsb	sy
 800e3fa:	e7fe      	b.n	800e3fa <prvTaskExitError+0x1e>
 800e3fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e400:	f383 8811 	msr	BASEPRI, r3
 800e404:	f3bf 8f6f 	isb	sy
 800e408:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e40c:	9b01      	ldr	r3, [sp, #4]
 800e40e:	2b00      	cmp	r3, #0
 800e410:	d0fc      	beq.n	800e40c <prvTaskExitError+0x30>
}
 800e412:	b002      	add	sp, #8
 800e414:	4770      	bx	lr
 800e416:	bf00      	nop
 800e418:	20000088 	.word	0x20000088

0800e41c <pxPortInitialiseStack>:
{
 800e41c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e41e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e422:	4c07      	ldr	r4, [pc, #28]	; (800e440 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e424:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e428:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e42c:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e430:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e434:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800e438:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e43c:	3844      	subs	r0, #68	; 0x44
 800e43e:	4770      	bx	lr
 800e440:	0800e3dd 	.word	0x0800e3dd
	...

0800e450 <SVC_Handler>:
	__asm volatile (
 800e450:	4b07      	ldr	r3, [pc, #28]	; (800e470 <pxCurrentTCBConst2>)
 800e452:	6819      	ldr	r1, [r3, #0]
 800e454:	6808      	ldr	r0, [r1, #0]
 800e456:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e45a:	f380 8809 	msr	PSP, r0
 800e45e:	f3bf 8f6f 	isb	sy
 800e462:	f04f 0000 	mov.w	r0, #0
 800e466:	f380 8811 	msr	BASEPRI, r0
 800e46a:	4770      	bx	lr
 800e46c:	f3af 8000 	nop.w

0800e470 <pxCurrentTCBConst2>:
 800e470:	20013208 	.word	0x20013208

0800e474 <vPortEnterCritical>:
 800e474:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e478:	f383 8811 	msr	BASEPRI, r3
 800e47c:	f3bf 8f6f 	isb	sy
 800e480:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e484:	4a0b      	ldr	r2, [pc, #44]	; (800e4b4 <vPortEnterCritical+0x40>)
 800e486:	6813      	ldr	r3, [r2, #0]
 800e488:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e48a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e48c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e48e:	d000      	beq.n	800e492 <vPortEnterCritical+0x1e>
}
 800e490:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e492:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e496:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800e49a:	b2db      	uxtb	r3, r3
 800e49c:	2b00      	cmp	r3, #0
 800e49e:	d0f7      	beq.n	800e490 <vPortEnterCritical+0x1c>
 800e4a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4a4:	f383 8811 	msr	BASEPRI, r3
 800e4a8:	f3bf 8f6f 	isb	sy
 800e4ac:	f3bf 8f4f 	dsb	sy
 800e4b0:	e7fe      	b.n	800e4b0 <vPortEnterCritical+0x3c>
 800e4b2:	bf00      	nop
 800e4b4:	20000088 	.word	0x20000088

0800e4b8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e4b8:	4a08      	ldr	r2, [pc, #32]	; (800e4dc <vPortExitCritical+0x24>)
 800e4ba:	6813      	ldr	r3, [r2, #0]
 800e4bc:	b943      	cbnz	r3, 800e4d0 <vPortExitCritical+0x18>
 800e4be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4c2:	f383 8811 	msr	BASEPRI, r3
 800e4c6:	f3bf 8f6f 	isb	sy
 800e4ca:	f3bf 8f4f 	dsb	sy
 800e4ce:	e7fe      	b.n	800e4ce <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e4d0:	3b01      	subs	r3, #1
 800e4d2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e4d4:	b90b      	cbnz	r3, 800e4da <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e4d6:	f383 8811 	msr	BASEPRI, r3
}
 800e4da:	4770      	bx	lr
 800e4dc:	20000088 	.word	0x20000088

0800e4e0 <PendSV_Handler>:
	__asm volatile
 800e4e0:	f3ef 8009 	mrs	r0, PSP
 800e4e4:	f3bf 8f6f 	isb	sy
 800e4e8:	4b15      	ldr	r3, [pc, #84]	; (800e540 <pxCurrentTCBConst>)
 800e4ea:	681a      	ldr	r2, [r3, #0]
 800e4ec:	f01e 0f10 	tst.w	lr, #16
 800e4f0:	bf08      	it	eq
 800e4f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e4f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4fa:	6010      	str	r0, [r2, #0]
 800e4fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e500:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e504:	f380 8811 	msr	BASEPRI, r0
 800e508:	f3bf 8f4f 	dsb	sy
 800e50c:	f3bf 8f6f 	isb	sy
 800e510:	f001 fd54 	bl	800ffbc <vTaskSwitchContext>
 800e514:	f04f 0000 	mov.w	r0, #0
 800e518:	f380 8811 	msr	BASEPRI, r0
 800e51c:	bc09      	pop	{r0, r3}
 800e51e:	6819      	ldr	r1, [r3, #0]
 800e520:	6808      	ldr	r0, [r1, #0]
 800e522:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e526:	f01e 0f10 	tst.w	lr, #16
 800e52a:	bf08      	it	eq
 800e52c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e530:	f380 8809 	msr	PSP, r0
 800e534:	f3bf 8f6f 	isb	sy
 800e538:	4770      	bx	lr
 800e53a:	bf00      	nop
 800e53c:	f3af 8000 	nop.w

0800e540 <pxCurrentTCBConst>:
 800e540:	20013208 	.word	0x20013208

0800e544 <xPortSysTickHandler>:
{
 800e544:	b508      	push	{r3, lr}
	__asm volatile
 800e546:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e54a:	f383 8811 	msr	BASEPRI, r3
 800e54e:	f3bf 8f6f 	isb	sy
 800e552:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e556:	f001 fd21 	bl	800ff9c <xTaskIncrementTick>
 800e55a:	b128      	cbz	r0, 800e568 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e55c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e560:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e564:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e568:	2300      	movs	r3, #0
 800e56a:	f383 8811 	msr	BASEPRI, r3
}
 800e56e:	bd08      	pop	{r3, pc}

0800e570 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e570:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e574:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e576:	4906      	ldr	r1, [pc, #24]	; (800e590 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e578:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e57a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e57c:	680b      	ldr	r3, [r1, #0]
 800e57e:	4905      	ldr	r1, [pc, #20]	; (800e594 <vPortSetupTimerInterrupt+0x24>)
 800e580:	fba1 1303 	umull	r1, r3, r1, r3
 800e584:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e586:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e588:	3b01      	subs	r3, #1
 800e58a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e58c:	6110      	str	r0, [r2, #16]
}
 800e58e:	4770      	bx	lr
 800e590:	2000007c 	.word	0x2000007c
 800e594:	10624dd3 	.word	0x10624dd3

0800e598 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e598:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e59c:	4a49      	ldr	r2, [pc, #292]	; (800e6c4 <xPortStartScheduler+0x12c>)
 800e59e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e5a2:	4291      	cmp	r1, r2
 800e5a4:	d043      	beq.n	800e62e <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e5a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e5aa:	4b47      	ldr	r3, [pc, #284]	; (800e6c8 <xPortStartScheduler+0x130>)
 800e5ac:	429a      	cmp	r2, r3
 800e5ae:	d035      	beq.n	800e61c <xPortStartScheduler+0x84>
{
 800e5b0:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e5b2:	4b46      	ldr	r3, [pc, #280]	; (800e6cc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e5b4:	4846      	ldr	r0, [pc, #280]	; (800e6d0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e5b6:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e5b8:	4c46      	ldr	r4, [pc, #280]	; (800e6d4 <xPortStartScheduler+0x13c>)
{
 800e5ba:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e5bc:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e5be:	b2d2      	uxtb	r2, r2
 800e5c0:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e5c2:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e5c4:	781b      	ldrb	r3, [r3, #0]
 800e5c6:	b2db      	uxtb	r3, r3
 800e5c8:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e5cc:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e5d0:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e5d4:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e5d8:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e5da:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e5dc:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e5de:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e5e0:	bf48      	it	mi
 800e5e2:	2206      	movmi	r2, #6
 800e5e4:	d511      	bpl.n	800e60a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e5e6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e5ea:	005b      	lsls	r3, r3, #1
 800e5ec:	b2db      	uxtb	r3, r3
 800e5ee:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e5f2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e5f6:	0609      	lsls	r1, r1, #24
 800e5f8:	4610      	mov	r0, r2
 800e5fa:	f102 32ff 	add.w	r2, r2, #4294967295
 800e5fe:	d4f2      	bmi.n	800e5e6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e600:	2803      	cmp	r0, #3
 800e602:	6020      	str	r0, [r4, #0]
 800e604:	f88d 3007 	strb.w	r3, [sp, #7]
 800e608:	d01a      	beq.n	800e640 <xPortStartScheduler+0xa8>
	__asm volatile
 800e60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e60e:	f383 8811 	msr	BASEPRI, r3
 800e612:	f3bf 8f6f 	isb	sy
 800e616:	f3bf 8f4f 	dsb	sy
 800e61a:	e7fe      	b.n	800e61a <xPortStartScheduler+0x82>
 800e61c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e620:	f383 8811 	msr	BASEPRI, r3
 800e624:	f3bf 8f6f 	isb	sy
 800e628:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e62c:	e7fe      	b.n	800e62c <xPortStartScheduler+0x94>
 800e62e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e632:	f383 8811 	msr	BASEPRI, r3
 800e636:	f3bf 8f6f 	isb	sy
 800e63a:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e63e:	e7fe      	b.n	800e63e <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e640:	9b02      	ldr	r3, [sp, #8]
 800e642:	4a22      	ldr	r2, [pc, #136]	; (800e6cc <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e644:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e648:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e64c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e64e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e650:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e652:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e656:	4c20      	ldr	r4, [pc, #128]	; (800e6d8 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e658:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e65c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e660:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e664:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e668:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e66c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e66e:	f7ff ff7f 	bl	800e570 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e672:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e674:	f7ff fea8 	bl	800e3c8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e678:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e67c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e680:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e684:	f7ff fe8c 	bl	800e3a0 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e688:	f001 fc98 	bl	800ffbc <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e68c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e68e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e690:	3301      	adds	r3, #1
 800e692:	d008      	beq.n	800e6a6 <xPortStartScheduler+0x10e>
 800e694:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e698:	f383 8811 	msr	BASEPRI, r3
 800e69c:	f3bf 8f6f 	isb	sy
 800e6a0:	f3bf 8f4f 	dsb	sy
 800e6a4:	e7fe      	b.n	800e6a4 <xPortStartScheduler+0x10c>
 800e6a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6aa:	f383 8811 	msr	BASEPRI, r3
 800e6ae:	f3bf 8f6f 	isb	sy
 800e6b2:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e6b6:	9b03      	ldr	r3, [sp, #12]
 800e6b8:	2b00      	cmp	r3, #0
 800e6ba:	d0fc      	beq.n	800e6b6 <xPortStartScheduler+0x11e>
}
 800e6bc:	2000      	movs	r0, #0
 800e6be:	b004      	add	sp, #16
 800e6c0:	bd70      	pop	{r4, r5, r6, pc}
 800e6c2:	bf00      	nop
 800e6c4:	410fc271 	.word	0x410fc271
 800e6c8:	410fc270 	.word	0x410fc270
 800e6cc:	e000e400 	.word	0xe000e400
 800e6d0:	200131c0 	.word	0x200131c0
 800e6d4:	200131c4 	.word	0x200131c4
 800e6d8:	20000088 	.word	0x20000088

0800e6dc <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e6dc:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e6e0:	2b0f      	cmp	r3, #15
 800e6e2:	d90e      	bls.n	800e702 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e6e4:	4911      	ldr	r1, [pc, #68]	; (800e72c <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e6e6:	4a12      	ldr	r2, [pc, #72]	; (800e730 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e6e8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e6ea:	7812      	ldrb	r2, [r2, #0]
 800e6ec:	429a      	cmp	r2, r3
 800e6ee:	d908      	bls.n	800e702 <vPortValidateInterruptPriority+0x26>
 800e6f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6f4:	f383 8811 	msr	BASEPRI, r3
 800e6f8:	f3bf 8f6f 	isb	sy
 800e6fc:	f3bf 8f4f 	dsb	sy
 800e700:	e7fe      	b.n	800e700 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e702:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e706:	4a0b      	ldr	r2, [pc, #44]	; (800e734 <vPortValidateInterruptPriority+0x58>)
 800e708:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e70c:	6812      	ldr	r2, [r2, #0]
 800e70e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e712:	4293      	cmp	r3, r2
 800e714:	d908      	bls.n	800e728 <vPortValidateInterruptPriority+0x4c>
 800e716:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e71a:	f383 8811 	msr	BASEPRI, r3
 800e71e:	f3bf 8f6f 	isb	sy
 800e722:	f3bf 8f4f 	dsb	sy
 800e726:	e7fe      	b.n	800e726 <vPortValidateInterruptPriority+0x4a>
	}
 800e728:	4770      	bx	lr
 800e72a:	bf00      	nop
 800e72c:	e000e3f0 	.word	0xe000e3f0
 800e730:	200131c0 	.word	0x200131c0
 800e734:	200131c4 	.word	0x200131c4

0800e738 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e738:	b570      	push	{r4, r5, r6, lr}
 800e73a:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e73c:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e73e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e740:	b920      	cbnz	r0, 800e74c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e742:	6825      	ldr	r5, [r4, #0]
 800e744:	b34d      	cbz	r5, 800e79a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e746:	3601      	adds	r6, #1
 800e748:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e74a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e74c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e74e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e750:	b97d      	cbnz	r5, 800e772 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e752:	6860      	ldr	r0, [r4, #4]
 800e754:	f01d fd67 	bl	802c226 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e758:	6863      	ldr	r3, [r4, #4]
 800e75a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e75c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e75e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e760:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e762:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e764:	bf24      	itt	cs
 800e766:	6823      	ldrcs	r3, [r4, #0]
 800e768:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e76a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e76c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e76e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e770:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e772:	68e0      	ldr	r0, [r4, #12]
 800e774:	f01d fd57 	bl	802c226 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e778:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e77a:	68e3      	ldr	r3, [r4, #12]
 800e77c:	4251      	negs	r1, r2
 800e77e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e780:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e782:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e784:	4293      	cmp	r3, r2
 800e786:	d202      	bcs.n	800e78e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e788:	68a3      	ldr	r3, [r4, #8]
 800e78a:	440b      	add	r3, r1
 800e78c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e78e:	2d02      	cmp	r5, #2
 800e790:	d008      	beq.n	800e7a4 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e792:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e794:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e796:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e798:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e79a:	68a0      	ldr	r0, [r4, #8]
 800e79c:	f001 fde0 	bl	8010360 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e7a0:	60a5      	str	r5, [r4, #8]
 800e7a2:	e7d0      	b.n	800e746 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e7a4:	2e01      	cmp	r6, #1
 800e7a6:	bf38      	it	cc
 800e7a8:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e7aa:	2000      	movs	r0, #0
 800e7ac:	e7cc      	b.n	800e748 <prvCopyDataToQueue+0x10>
 800e7ae:	bf00      	nop

0800e7b0 <xQueueGenericCreateStatic>:
	{
 800e7b0:	b530      	push	{r4, r5, lr}
 800e7b2:	b083      	sub	sp, #12
 800e7b4:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e7b8:	b940      	cbnz	r0, 800e7cc <xQueueGenericCreateStatic+0x1c>
 800e7ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7be:	f383 8811 	msr	BASEPRI, r3
 800e7c2:	f3bf 8f6f 	isb	sy
 800e7c6:	f3bf 8f4f 	dsb	sy
 800e7ca:	e7fe      	b.n	800e7ca <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e7cc:	461d      	mov	r5, r3
 800e7ce:	b17b      	cbz	r3, 800e7f0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e7d0:	b302      	cbz	r2, 800e814 <xQueueGenericCreateStatic+0x64>
 800e7d2:	b1b1      	cbz	r1, 800e802 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e7d4:	2350      	movs	r3, #80	; 0x50
 800e7d6:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e7d8:	9b01      	ldr	r3, [sp, #4]
 800e7da:	2b50      	cmp	r3, #80	; 0x50
 800e7dc:	d023      	beq.n	800e826 <xQueueGenericCreateStatic+0x76>
 800e7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e2:	f383 8811 	msr	BASEPRI, r3
 800e7e6:	f3bf 8f6f 	isb	sy
 800e7ea:	f3bf 8f4f 	dsb	sy
 800e7ee:	e7fe      	b.n	800e7ee <xQueueGenericCreateStatic+0x3e>
 800e7f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7f4:	f383 8811 	msr	BASEPRI, r3
 800e7f8:	f3bf 8f6f 	isb	sy
 800e7fc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e800:	e7fe      	b.n	800e800 <xQueueGenericCreateStatic+0x50>
 800e802:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e806:	f383 8811 	msr	BASEPRI, r3
 800e80a:	f3bf 8f6f 	isb	sy
 800e80e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e812:	e7fe      	b.n	800e812 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e814:	bb89      	cbnz	r1, 800e87a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e816:	2250      	movs	r2, #80	; 0x50
 800e818:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e81a:	9a01      	ldr	r2, [sp, #4]
 800e81c:	2a50      	cmp	r2, #80	; 0x50
 800e81e:	d1de      	bne.n	800e7de <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e820:	9a01      	ldr	r2, [sp, #4]
 800e822:	462a      	mov	r2, r5
 800e824:	e000      	b.n	800e828 <xQueueGenericCreateStatic+0x78>
 800e826:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e828:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e82a:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e82c:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e830:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e834:	f7ff fe1e 	bl	800e474 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e838:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e83c:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e83e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e840:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e844:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e846:	4401      	add	r1, r0
 800e848:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e84a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e84c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e84e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e850:	21ff      	movs	r1, #255	; 0xff
 800e852:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e856:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e858:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e85c:	f105 0010 	add.w	r0, r5, #16
 800e860:	f7ff fd52 	bl	800e308 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e864:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e868:	f7ff fd4e 	bl	800e308 <vListInitialise>
	taskEXIT_CRITICAL();
 800e86c:	f7ff fe24 	bl	800e4b8 <vPortExitCritical>
	}
 800e870:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e872:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e876:	b003      	add	sp, #12
 800e878:	bd30      	pop	{r4, r5, pc}
 800e87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e87e:	f383 8811 	msr	BASEPRI, r3
 800e882:	f3bf 8f6f 	isb	sy
 800e886:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e88a:	e7fe      	b.n	800e88a <xQueueGenericCreateStatic+0xda>

0800e88c <xQueueGenericCreate>:
	{
 800e88c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e88e:	b940      	cbnz	r0, 800e8a2 <xQueueGenericCreate+0x16>
 800e890:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e894:	f383 8811 	msr	BASEPRI, r3
 800e898:	f3bf 8f6f 	isb	sy
 800e89c:	f3bf 8f4f 	dsb	sy
 800e8a0:	e7fe      	b.n	800e8a0 <xQueueGenericCreate+0x14>
 800e8a2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e8a4:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e8a8:	3050      	adds	r0, #80	; 0x50
 800e8aa:	460e      	mov	r6, r1
 800e8ac:	4617      	mov	r7, r2
 800e8ae:	f7ff fc0b 	bl	800e0c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e8b2:	4604      	mov	r4, r0
 800e8b4:	b340      	cbz	r0, 800e908 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e8b6:	2300      	movs	r3, #0
 800e8b8:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e8bc:	b336      	cbz	r6, 800e90c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8be:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e8c2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e8c4:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e8c8:	f7ff fdd4 	bl	800e474 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8cc:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e8d0:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e8d2:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8d4:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8d8:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8da:	440a      	add	r2, r1
 800e8dc:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e8de:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8e0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e8e2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e8e4:	22ff      	movs	r2, #255	; 0xff
 800e8e6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8ea:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e8ec:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e8f0:	f104 0010 	add.w	r0, r4, #16
 800e8f4:	f7ff fd08 	bl	800e308 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e8f8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e8fc:	f7ff fd04 	bl	800e308 <vListInitialise>
	taskEXIT_CRITICAL();
 800e900:	f7ff fdda 	bl	800e4b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e904:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e908:	4620      	mov	r0, r4
 800e90a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e90c:	4603      	mov	r3, r0
 800e90e:	e7d8      	b.n	800e8c2 <xQueueGenericCreate+0x36>

0800e910 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e910:	b940      	cbnz	r0, 800e924 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e912:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e916:	f383 8811 	msr	BASEPRI, r3
 800e91a:	f3bf 8f6f 	isb	sy
 800e91e:	f3bf 8f4f 	dsb	sy
 800e922:	e7fe      	b.n	800e922 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e924:	4288      	cmp	r0, r1
 800e926:	d208      	bcs.n	800e93a <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e928:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e92c:	f383 8811 	msr	BASEPRI, r3
 800e930:	f3bf 8f6f 	isb	sy
 800e934:	f3bf 8f4f 	dsb	sy
 800e938:	e7fe      	b.n	800e938 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e93a:	b530      	push	{r4, r5, lr}
 800e93c:	4615      	mov	r5, r2
 800e93e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e940:	2a00      	cmp	r2, #0
 800e942:	d03c      	beq.n	800e9be <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e944:	2350      	movs	r3, #80	; 0x50
 800e946:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e948:	9b03      	ldr	r3, [sp, #12]
 800e94a:	2b50      	cmp	r3, #80	; 0x50
 800e94c:	d008      	beq.n	800e960 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e94e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e952:	f383 8811 	msr	BASEPRI, r3
 800e956:	f3bf 8f6f 	isb	sy
 800e95a:	f3bf 8f4f 	dsb	sy
 800e95e:	e7fe      	b.n	800e95e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e960:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e962:	2301      	movs	r3, #1
 800e964:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e968:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e96a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e96e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e970:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e972:	f7ff fd7f 	bl	800e474 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e976:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e97a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e97c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e97e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e982:	1ac3      	subs	r3, r0, r3
 800e984:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e986:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e988:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e98c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e990:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e992:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e994:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e998:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e99a:	f105 0010 	add.w	r0, r5, #16
 800e99e:	f7ff fcb3 	bl	800e308 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e9a2:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e9a6:	f7ff fcaf 	bl	800e308 <vListInitialise>
	taskEXIT_CRITICAL();
 800e9aa:	f7ff fd85 	bl	800e4b8 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e9ae:	9901      	ldr	r1, [sp, #4]
 800e9b0:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e9b2:	2302      	movs	r3, #2
	}
 800e9b4:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e9b6:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e9ba:	b005      	add	sp, #20
 800e9bc:	bd30      	pop	{r4, r5, pc}
 800e9be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9c2:	f383 8811 	msr	BASEPRI, r3
 800e9c6:	f3bf 8f6f 	isb	sy
 800e9ca:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e9ce:	e7fe      	b.n	800e9ce <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e9d0 <xQueueCreateCountingSemaphore>:
	{
 800e9d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e9d2:	b940      	cbnz	r0, 800e9e6 <xQueueCreateCountingSemaphore+0x16>
 800e9d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9d8:	f383 8811 	msr	BASEPRI, r3
 800e9dc:	f3bf 8f6f 	isb	sy
 800e9e0:	f3bf 8f4f 	dsb	sy
 800e9e4:	e7fe      	b.n	800e9e4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e9e6:	4288      	cmp	r0, r1
 800e9e8:	460e      	mov	r6, r1
 800e9ea:	4604      	mov	r4, r0
 800e9ec:	d208      	bcs.n	800ea00 <xQueueCreateCountingSemaphore+0x30>
 800e9ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9f2:	f383 8811 	msr	BASEPRI, r3
 800e9f6:	f3bf 8f6f 	isb	sy
 800e9fa:	f3bf 8f4f 	dsb	sy
 800e9fe:	e7fe      	b.n	800e9fe <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800ea00:	2050      	movs	r0, #80	; 0x50
 800ea02:	f7ff fb61 	bl	800e0c8 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800ea06:	4605      	mov	r5, r0
 800ea08:	b330      	cbz	r0, 800ea58 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800ea0a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800ea0c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800ea10:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800ea14:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800ea16:	f7ff fd2d 	bl	800e474 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea1a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800ea1e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800ea20:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea22:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea26:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea28:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea2a:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea2c:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800ea2e:	22ff      	movs	r2, #255	; 0xff
 800ea30:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800ea34:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800ea36:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800ea38:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800ea3c:	f105 0010 	add.w	r0, r5, #16
 800ea40:	f7ff fc62 	bl	800e308 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800ea44:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800ea48:	f7ff fc5e 	bl	800e308 <vListInitialise>
	taskEXIT_CRITICAL();
 800ea4c:	f7ff fd34 	bl	800e4b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800ea50:	2302      	movs	r3, #2
 800ea52:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800ea56:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800ea58:	4628      	mov	r0, r5
 800ea5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ea5c <xQueueGenericSend>:
{
 800ea5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ea60:	b085      	sub	sp, #20
 800ea62:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800ea64:	2800      	cmp	r0, #0
 800ea66:	f000 80a4 	beq.w	800ebb2 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea6a:	4688      	mov	r8, r1
 800ea6c:	461f      	mov	r7, r3
 800ea6e:	4604      	mov	r4, r0
 800ea70:	2900      	cmp	r1, #0
 800ea72:	f000 8091 	beq.w	800eb98 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ea76:	2f02      	cmp	r7, #2
 800ea78:	d10b      	bne.n	800ea92 <xQueueGenericSend+0x36>
 800ea7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ea7c:	2b01      	cmp	r3, #1
 800ea7e:	d008      	beq.n	800ea92 <xQueueGenericSend+0x36>
 800ea80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea84:	f383 8811 	msr	BASEPRI, r3
 800ea88:	f3bf 8f6f 	isb	sy
 800ea8c:	f3bf 8f4f 	dsb	sy
 800ea90:	e7fe      	b.n	800ea90 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea92:	f001 fc0f 	bl	80102b4 <xTaskGetSchedulerState>
 800ea96:	4605      	mov	r5, r0
 800ea98:	2800      	cmp	r0, #0
 800ea9a:	f000 8093 	beq.w	800ebc4 <xQueueGenericSend+0x168>
 800ea9e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eaa0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800eaa4:	f7ff fce6 	bl	800e474 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800eaa8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eaaa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800eaac:	429a      	cmp	r2, r3
 800eaae:	f0c0 80ef 	bcc.w	800ec90 <xQueueGenericSend+0x234>
 800eab2:	2f02      	cmp	r7, #2
 800eab4:	f000 80ec 	beq.w	800ec90 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eab8:	9801      	ldr	r0, [sp, #4]
 800eaba:	2800      	cmp	r0, #0
 800eabc:	f000 8101 	beq.w	800ecc2 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800eac0:	2d00      	cmp	r5, #0
 800eac2:	f000 80e1 	beq.w	800ec88 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800eac6:	f7ff fcf7 	bl	800e4b8 <vPortExitCritical>
		vTaskSuspendAll();
 800eaca:	f001 fa49 	bl	800ff60 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800eace:	f7ff fcd1 	bl	800e474 <vPortEnterCritical>
 800ead2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ead6:	2bff      	cmp	r3, #255	; 0xff
 800ead8:	bf04      	itt	eq
 800eada:	2300      	moveq	r3, #0
 800eadc:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800eae0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eae4:	2bff      	cmp	r3, #255	; 0xff
 800eae6:	bf04      	itt	eq
 800eae8:	2300      	moveq	r3, #0
 800eaea:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800eaee:	f7ff fce3 	bl	800e4b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800eaf2:	a901      	add	r1, sp, #4
 800eaf4:	a802      	add	r0, sp, #8
 800eaf6:	f001 fb8f 	bl	8010218 <xTaskCheckForTimeOut>
 800eafa:	2800      	cmp	r0, #0
 800eafc:	f040 80e6 	bne.w	800eccc <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800eb00:	f7ff fcb8 	bl	800e474 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800eb04:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eb06:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800eb08:	429a      	cmp	r2, r3
 800eb0a:	d068      	beq.n	800ebde <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800eb0c:	f7ff fcd4 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb10:	f7ff fcb0 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb14:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800eb18:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb1a:	2d00      	cmp	r5, #0
 800eb1c:	dc04      	bgt.n	800eb28 <xQueueGenericSend+0xcc>
 800eb1e:	e011      	b.n	800eb44 <xQueueGenericSend+0xe8>
			--cTxLock;
 800eb20:	1e6a      	subs	r2, r5, #1
 800eb22:	b2d3      	uxtb	r3, r2
 800eb24:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb26:	b16b      	cbz	r3, 800eb44 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb28:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb2a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb2c:	b153      	cbz	r3, 800eb44 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb2e:	f001 fb1f 	bl	8010170 <xTaskRemoveFromEventList>
 800eb32:	2800      	cmp	r0, #0
 800eb34:	d0f4      	beq.n	800eb20 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800eb36:	f001 fbb7 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800eb3a:	1e6a      	subs	r2, r5, #1
 800eb3c:	b2d3      	uxtb	r3, r2
 800eb3e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb40:	2b00      	cmp	r3, #0
 800eb42:	d1f1      	bne.n	800eb28 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb44:	23ff      	movs	r3, #255	; 0xff
 800eb46:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb4a:	f7ff fcb5 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb4e:	f7ff fc91 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb52:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800eb56:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb58:	2d00      	cmp	r5, #0
 800eb5a:	dd14      	ble.n	800eb86 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb5c:	f104 0910 	add.w	r9, r4, #16
 800eb60:	e003      	b.n	800eb6a <xQueueGenericSend+0x10e>
				--cRxLock;
 800eb62:	1e6a      	subs	r2, r5, #1
 800eb64:	b2d3      	uxtb	r3, r2
 800eb66:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb68:	b16b      	cbz	r3, 800eb86 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb6a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb6c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb6e:	b153      	cbz	r3, 800eb86 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb70:	f001 fafe 	bl	8010170 <xTaskRemoveFromEventList>
 800eb74:	2800      	cmp	r0, #0
 800eb76:	d0f4      	beq.n	800eb62 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800eb78:	f001 fb96 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800eb7c:	1e6a      	subs	r2, r5, #1
 800eb7e:	b2d3      	uxtb	r3, r2
 800eb80:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb82:	2b00      	cmp	r3, #0
 800eb84:	d1f1      	bne.n	800eb6a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800eb86:	23ff      	movs	r3, #255	; 0xff
 800eb88:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eb8c:	f7ff fc94 	bl	800e4b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800eb90:	f001 f9ee 	bl	800ff70 <xTaskResumeAll>
 800eb94:	2501      	movs	r5, #1
 800eb96:	e785      	b.n	800eaa4 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eb98:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	f43f af6b 	beq.w	800ea76 <xQueueGenericSend+0x1a>
 800eba0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eba4:	f383 8811 	msr	BASEPRI, r3
 800eba8:	f3bf 8f6f 	isb	sy
 800ebac:	f3bf 8f4f 	dsb	sy
 800ebb0:	e7fe      	b.n	800ebb0 <xQueueGenericSend+0x154>
 800ebb2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebb6:	f383 8811 	msr	BASEPRI, r3
 800ebba:	f3bf 8f6f 	isb	sy
 800ebbe:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ebc2:	e7fe      	b.n	800ebc2 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ebc4:	9b01      	ldr	r3, [sp, #4]
 800ebc6:	2b00      	cmp	r3, #0
 800ebc8:	f43f af6a 	beq.w	800eaa0 <xQueueGenericSend+0x44>
 800ebcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebd0:	f383 8811 	msr	BASEPRI, r3
 800ebd4:	f3bf 8f6f 	isb	sy
 800ebd8:	f3bf 8f4f 	dsb	sy
 800ebdc:	e7fe      	b.n	800ebdc <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ebde:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800ebe2:	f7ff fc69 	bl	800e4b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ebe6:	9901      	ldr	r1, [sp, #4]
 800ebe8:	4648      	mov	r0, r9
 800ebea:	f001 fa33 	bl	8010054 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ebee:	f7ff fc41 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ebf2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebf6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ebf8:	2d00      	cmp	r5, #0
 800ebfa:	dc04      	bgt.n	800ec06 <xQueueGenericSend+0x1aa>
 800ebfc:	e011      	b.n	800ec22 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800ebfe:	1e6b      	subs	r3, r5, #1
 800ec00:	b2da      	uxtb	r2, r3
 800ec02:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec04:	b16a      	cbz	r2, 800ec22 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec06:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec08:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec0a:	b153      	cbz	r3, 800ec22 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec0c:	f001 fab0 	bl	8010170 <xTaskRemoveFromEventList>
 800ec10:	2800      	cmp	r0, #0
 800ec12:	d0f4      	beq.n	800ebfe <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800ec14:	f001 fb48 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800ec18:	1e6b      	subs	r3, r5, #1
 800ec1a:	b2da      	uxtb	r2, r3
 800ec1c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec1e:	2a00      	cmp	r2, #0
 800ec20:	d1f1      	bne.n	800ec06 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800ec22:	23ff      	movs	r3, #255	; 0xff
 800ec24:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ec28:	f7ff fc46 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec2c:	f7ff fc22 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ec30:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec34:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec36:	2d00      	cmp	r5, #0
 800ec38:	dc04      	bgt.n	800ec44 <xQueueGenericSend+0x1e8>
 800ec3a:	e011      	b.n	800ec60 <xQueueGenericSend+0x204>
				--cRxLock;
 800ec3c:	1e6b      	subs	r3, r5, #1
 800ec3e:	b2da      	uxtb	r2, r3
 800ec40:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec42:	b16a      	cbz	r2, 800ec60 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec44:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec46:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ec48:	b153      	cbz	r3, 800ec60 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec4a:	f001 fa91 	bl	8010170 <xTaskRemoveFromEventList>
 800ec4e:	2800      	cmp	r0, #0
 800ec50:	d0f4      	beq.n	800ec3c <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800ec52:	f001 fb29 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800ec56:	1e6b      	subs	r3, r5, #1
 800ec58:	b2da      	uxtb	r2, r3
 800ec5a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec5c:	2a00      	cmp	r2, #0
 800ec5e:	d1f1      	bne.n	800ec44 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800ec60:	23ff      	movs	r3, #255	; 0xff
 800ec62:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ec66:	f7ff fc27 	bl	800e4b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800ec6a:	f001 f981 	bl	800ff70 <xTaskResumeAll>
 800ec6e:	2800      	cmp	r0, #0
 800ec70:	d190      	bne.n	800eb94 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800ec72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ec76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ec7e:	f3bf 8f4f 	dsb	sy
 800ec82:	f3bf 8f6f 	isb	sy
 800ec86:	e785      	b.n	800eb94 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ec88:	a802      	add	r0, sp, #8
 800ec8a:	f001 fab9 	bl	8010200 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ec8e:	e71a      	b.n	800eac6 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec90:	463a      	mov	r2, r7
 800ec92:	4641      	mov	r1, r8
 800ec94:	4620      	mov	r0, r4
 800ec96:	f7ff fd4f 	bl	800e738 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ec9c:	2b00      	cmp	r3, #0
 800ec9e:	d153      	bne.n	800ed48 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800eca0:	b148      	cbz	r0, 800ecb6 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800eca2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eca6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ecaa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ecae:	f3bf 8f4f 	dsb	sy
 800ecb2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800ecb6:	f7ff fbff 	bl	800e4b8 <vPortExitCritical>
				return pdPASS;
 800ecba:	2001      	movs	r0, #1
}
 800ecbc:	b005      	add	sp, #20
 800ecbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ecc2:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800ecc4:	f7ff fbf8 	bl	800e4b8 <vPortExitCritical>
					return errQUEUE_FULL;
 800ecc8:	9800      	ldr	r0, [sp, #0]
 800ecca:	e7f7      	b.n	800ecbc <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800eccc:	f7ff fbd2 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ecd0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ecd4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ecd6:	2d00      	cmp	r5, #0
 800ecd8:	dd10      	ble.n	800ecfc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecda:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800ecde:	e003      	b.n	800ece8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800ece0:	1e6b      	subs	r3, r5, #1
 800ece2:	b2da      	uxtb	r2, r3
 800ece4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ece6:	b14a      	cbz	r2, 800ecfc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ece8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ecec:	b133      	cbz	r3, 800ecfc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ecee:	f001 fa3f 	bl	8010170 <xTaskRemoveFromEventList>
 800ecf2:	2800      	cmp	r0, #0
 800ecf4:	d0f4      	beq.n	800ece0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800ecf6:	f001 fad7 	bl	80102a8 <vTaskMissedYield>
 800ecfa:	e7f1      	b.n	800ece0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800ecfc:	23ff      	movs	r3, #255	; 0xff
 800ecfe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed02:	f7ff fbd9 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed06:	f7ff fbb5 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed0a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed0e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed10:	2d00      	cmp	r5, #0
 800ed12:	dd10      	ble.n	800ed36 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed14:	f104 0610 	add.w	r6, r4, #16
 800ed18:	e003      	b.n	800ed22 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800ed1a:	1e6b      	subs	r3, r5, #1
 800ed1c:	b2da      	uxtb	r2, r3
 800ed1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed20:	b14a      	cbz	r2, 800ed36 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed22:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed24:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed26:	b133      	cbz	r3, 800ed36 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed28:	f001 fa22 	bl	8010170 <xTaskRemoveFromEventList>
 800ed2c:	2800      	cmp	r0, #0
 800ed2e:	d0f4      	beq.n	800ed1a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800ed30:	f001 faba 	bl	80102a8 <vTaskMissedYield>
 800ed34:	e7f1      	b.n	800ed1a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed36:	23ff      	movs	r3, #255	; 0xff
 800ed38:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed3c:	f7ff fbbc 	bl	800e4b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ed40:	f001 f916 	bl	800ff70 <xTaskResumeAll>
			return errQUEUE_FULL;
 800ed44:	2000      	movs	r0, #0
 800ed46:	e7b9      	b.n	800ecbc <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed48:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ed4c:	f001 fa10 	bl	8010170 <xTaskRemoveFromEventList>
 800ed50:	2800      	cmp	r0, #0
 800ed52:	d0b0      	beq.n	800ecb6 <xQueueGenericSend+0x25a>
 800ed54:	e7a5      	b.n	800eca2 <xQueueGenericSend+0x246>
 800ed56:	bf00      	nop

0800ed58 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800ed58:	2800      	cmp	r0, #0
 800ed5a:	d04b      	beq.n	800edf4 <xQueueGenericSendFromISR+0x9c>
{
 800ed5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed60:	460e      	mov	r6, r1
 800ed62:	4617      	mov	r7, r2
 800ed64:	461d      	mov	r5, r3
 800ed66:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ed68:	b321      	cbz	r1, 800edb4 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ed6a:	2d02      	cmp	r5, #2
 800ed6c:	d10b      	bne.n	800ed86 <xQueueGenericSendFromISR+0x2e>
 800ed6e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ed70:	2b01      	cmp	r3, #1
 800ed72:	d008      	beq.n	800ed86 <xQueueGenericSendFromISR+0x2e>
 800ed74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed78:	f383 8811 	msr	BASEPRI, r3
 800ed7c:	f3bf 8f6f 	isb	sy
 800ed80:	f3bf 8f4f 	dsb	sy
 800ed84:	e7fe      	b.n	800ed84 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ed86:	f7ff fca9 	bl	800e6dc <vPortValidateInterruptPriority>
	__asm volatile
 800ed8a:	f3ef 8811 	mrs	r8, BASEPRI
 800ed8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed92:	f383 8811 	msr	BASEPRI, r3
 800ed96:	f3bf 8f6f 	isb	sy
 800ed9a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ed9e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800eda0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800eda2:	429a      	cmp	r2, r3
 800eda4:	d312      	bcc.n	800edcc <xQueueGenericSendFromISR+0x74>
 800eda6:	2d02      	cmp	r5, #2
 800eda8:	d010      	beq.n	800edcc <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800edaa:	2000      	movs	r0, #0
	__asm volatile
 800edac:	f388 8811 	msr	BASEPRI, r8
}
 800edb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800edb4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800edb6:	2b00      	cmp	r3, #0
 800edb8:	d0d7      	beq.n	800ed6a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800edba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edbe:	f383 8811 	msr	BASEPRI, r3
 800edc2:	f3bf 8f6f 	isb	sy
 800edc6:	f3bf 8f4f 	dsb	sy
 800edca:	e7fe      	b.n	800edca <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800edcc:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800edce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800edd2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800edd4:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800edd6:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800edd8:	4620      	mov	r0, r4
 800edda:	f7ff fcad 	bl	800e738 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800edde:	1c6b      	adds	r3, r5, #1
 800ede0:	d011      	beq.n	800ee06 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ede2:	1c6b      	adds	r3, r5, #1
 800ede4:	b25b      	sxtb	r3, r3
 800ede6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800edea:	2001      	movs	r0, #1
	__asm volatile
 800edec:	f388 8811 	msr	BASEPRI, r8
}
 800edf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800edf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edf8:	f383 8811 	msr	BASEPRI, r3
 800edfc:	f3bf 8f6f 	isb	sy
 800ee00:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ee04:	e7fe      	b.n	800ee04 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ee06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ee08:	2b00      	cmp	r3, #0
 800ee0a:	d0ee      	beq.n	800edea <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ee0c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ee10:	f001 f9ae 	bl	8010170 <xTaskRemoveFromEventList>
 800ee14:	2800      	cmp	r0, #0
 800ee16:	d0e8      	beq.n	800edea <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ee18:	2f00      	cmp	r7, #0
 800ee1a:	d0e6      	beq.n	800edea <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ee1c:	2001      	movs	r0, #1
 800ee1e:	6038      	str	r0, [r7, #0]
 800ee20:	e7c4      	b.n	800edac <xQueueGenericSendFromISR+0x54>
 800ee22:	bf00      	nop

0800ee24 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800ee24:	b370      	cbz	r0, 800ee84 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ee26:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800ee28:	b570      	push	{r4, r5, r6, lr}
 800ee2a:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800ee2c:	b143      	cbz	r3, 800ee40 <xQueueGiveFromISR+0x1c>
 800ee2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee32:	f383 8811 	msr	BASEPRI, r3
 800ee36:	f3bf 8f6f 	isb	sy
 800ee3a:	f3bf 8f4f 	dsb	sy
 800ee3e:	e7fe      	b.n	800ee3e <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ee40:	6803      	ldr	r3, [r0, #0]
 800ee42:	460c      	mov	r4, r1
 800ee44:	b33b      	cbz	r3, 800ee96 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ee46:	f7ff fc49 	bl	800e6dc <vPortValidateInterruptPriority>
	__asm volatile
 800ee4a:	f3ef 8511 	mrs	r5, BASEPRI
 800ee4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee52:	f383 8811 	msr	BASEPRI, r3
 800ee56:	f3bf 8f6f 	isb	sy
 800ee5a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ee5e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ee60:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ee62:	429a      	cmp	r2, r3
 800ee64:	d923      	bls.n	800eeae <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ee66:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ee6a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800ee6c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ee6e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ee70:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800ee72:	d020      	beq.n	800eeb6 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ee74:	3301      	adds	r3, #1
 800ee76:	b25b      	sxtb	r3, r3
 800ee78:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800ee7c:	2001      	movs	r0, #1
	__asm volatile
 800ee7e:	f385 8811 	msr	BASEPRI, r5
}
 800ee82:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800ee84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee88:	f383 8811 	msr	BASEPRI, r3
 800ee8c:	f3bf 8f6f 	isb	sy
 800ee90:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ee94:	e7fe      	b.n	800ee94 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ee96:	6883      	ldr	r3, [r0, #8]
 800ee98:	2b00      	cmp	r3, #0
 800ee9a:	d0d4      	beq.n	800ee46 <xQueueGiveFromISR+0x22>
 800ee9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eea0:	f383 8811 	msr	BASEPRI, r3
 800eea4:	f3bf 8f6f 	isb	sy
 800eea8:	f3bf 8f4f 	dsb	sy
 800eeac:	e7fe      	b.n	800eeac <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800eeae:	2000      	movs	r0, #0
	__asm volatile
 800eeb0:	f385 8811 	msr	BASEPRI, r5
}
 800eeb4:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eeb6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800eeb8:	2b00      	cmp	r3, #0
 800eeba:	d0df      	beq.n	800ee7c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eebc:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800eec0:	f001 f956 	bl	8010170 <xTaskRemoveFromEventList>
 800eec4:	2800      	cmp	r0, #0
 800eec6:	d0d9      	beq.n	800ee7c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800eec8:	2c00      	cmp	r4, #0
 800eeca:	d0d7      	beq.n	800ee7c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800eecc:	2001      	movs	r0, #1
 800eece:	6020      	str	r0, [r4, #0]
 800eed0:	e7ee      	b.n	800eeb0 <xQueueGiveFromISR+0x8c>
 800eed2:	bf00      	nop

0800eed4 <xQueueReceive>:
{
 800eed4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eed8:	b085      	sub	sp, #20
 800eeda:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800eedc:	2800      	cmp	r0, #0
 800eede:	f000 815c 	beq.w	800f19a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eee2:	460f      	mov	r7, r1
 800eee4:	4604      	mov	r4, r0
 800eee6:	2900      	cmp	r1, #0
 800eee8:	d079      	beq.n	800efde <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eeea:	f001 f9e3 	bl	80102b4 <xTaskGetSchedulerState>
 800eeee:	2800      	cmp	r0, #0
 800eef0:	f000 8081 	beq.w	800eff6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800eef4:	f7ff fabe 	bl	800e474 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eef8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eefa:	2d00      	cmp	r5, #0
 800eefc:	f040 8138 	bne.w	800f170 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ef00:	9b01      	ldr	r3, [sp, #4]
 800ef02:	2b00      	cmp	r3, #0
 800ef04:	f000 80d5 	beq.w	800f0b2 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ef08:	a802      	add	r0, sp, #8
 800ef0a:	f001 f979 	bl	8010200 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800ef0e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef10:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800ef14:	f7ff fad0 	bl	800e4b8 <vPortExitCritical>
		vTaskSuspendAll();
 800ef18:	f001 f822 	bl	800ff60 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ef1c:	f7ff faaa 	bl	800e474 <vPortEnterCritical>
 800ef20:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ef24:	2bff      	cmp	r3, #255	; 0xff
 800ef26:	bf08      	it	eq
 800ef28:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800ef2c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ef30:	2bff      	cmp	r3, #255	; 0xff
 800ef32:	bf08      	it	eq
 800ef34:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800ef38:	f7ff fabe 	bl	800e4b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ef3c:	a901      	add	r1, sp, #4
 800ef3e:	a802      	add	r0, sp, #8
 800ef40:	f001 f96a 	bl	8010218 <xTaskCheckForTimeOut>
 800ef44:	2800      	cmp	r0, #0
 800ef46:	d163      	bne.n	800f010 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800ef48:	f7ff fa94 	bl	800e474 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ef4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ef4e:	2b00      	cmp	r3, #0
 800ef50:	f000 80b5 	beq.w	800f0be <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800ef54:	f7ff fab0 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef58:	f7ff fa8c 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef5c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ef60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef62:	2d00      	cmp	r5, #0
 800ef64:	dc04      	bgt.n	800ef70 <xQueueReceive+0x9c>
 800ef66:	e011      	b.n	800ef8c <xQueueReceive+0xb8>
			--cTxLock;
 800ef68:	1e6b      	subs	r3, r5, #1
 800ef6a:	b2da      	uxtb	r2, r3
 800ef6c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef6e:	b16a      	cbz	r2, 800ef8c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef70:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef72:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef74:	b153      	cbz	r3, 800ef8c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef76:	f001 f8fb 	bl	8010170 <xTaskRemoveFromEventList>
 800ef7a:	2800      	cmp	r0, #0
 800ef7c:	d0f4      	beq.n	800ef68 <xQueueReceive+0x94>
						vTaskMissedYield();
 800ef7e:	f001 f993 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800ef82:	1e6b      	subs	r3, r5, #1
 800ef84:	b2da      	uxtb	r2, r3
 800ef86:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef88:	2a00      	cmp	r2, #0
 800ef8a:	d1f1      	bne.n	800ef70 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef8c:	23ff      	movs	r3, #255	; 0xff
 800ef8e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef92:	f7ff fa91 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef96:	f7ff fa6d 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef9a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ef9e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efa0:	2d00      	cmp	r5, #0
 800efa2:	dd14      	ble.n	800efce <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efa4:	f104 0910 	add.w	r9, r4, #16
 800efa8:	e003      	b.n	800efb2 <xQueueReceive+0xde>
				--cRxLock;
 800efaa:	1e6b      	subs	r3, r5, #1
 800efac:	b2da      	uxtb	r2, r3
 800efae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efb0:	b16a      	cbz	r2, 800efce <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efb2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efb4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efb6:	b153      	cbz	r3, 800efce <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efb8:	f001 f8da 	bl	8010170 <xTaskRemoveFromEventList>
 800efbc:	2800      	cmp	r0, #0
 800efbe:	d0f4      	beq.n	800efaa <xQueueReceive+0xd6>
					vTaskMissedYield();
 800efc0:	f001 f972 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800efc4:	1e6b      	subs	r3, r5, #1
 800efc6:	b2da      	uxtb	r2, r3
 800efc8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efca:	2a00      	cmp	r2, #0
 800efcc:	d1f1      	bne.n	800efb2 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800efce:	23ff      	movs	r3, #255	; 0xff
 800efd0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800efd4:	f7ff fa70 	bl	800e4b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800efd8:	f000 ffca 	bl	800ff70 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800efdc:	e060      	b.n	800f0a0 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800efde:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800efe0:	2b00      	cmp	r3, #0
 800efe2:	d082      	beq.n	800eeea <xQueueReceive+0x16>
	__asm volatile
 800efe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efe8:	f383 8811 	msr	BASEPRI, r3
 800efec:	f3bf 8f6f 	isb	sy
 800eff0:	f3bf 8f4f 	dsb	sy
 800eff4:	e7fe      	b.n	800eff4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eff6:	9b01      	ldr	r3, [sp, #4]
 800eff8:	2b00      	cmp	r3, #0
 800effa:	f43f af7b 	beq.w	800eef4 <xQueueReceive+0x20>
 800effe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f002:	f383 8811 	msr	BASEPRI, r3
 800f006:	f3bf 8f6f 	isb	sy
 800f00a:	f3bf 8f4f 	dsb	sy
 800f00e:	e7fe      	b.n	800f00e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800f010:	f7ff fa30 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f014:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f018:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f01a:	2d00      	cmp	r5, #0
 800f01c:	dc04      	bgt.n	800f028 <xQueueReceive+0x154>
 800f01e:	e011      	b.n	800f044 <xQueueReceive+0x170>
			--cTxLock;
 800f020:	1e6b      	subs	r3, r5, #1
 800f022:	b2da      	uxtb	r2, r3
 800f024:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f026:	b16a      	cbz	r2, 800f044 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f028:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f02a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f02c:	b153      	cbz	r3, 800f044 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f02e:	f001 f89f 	bl	8010170 <xTaskRemoveFromEventList>
 800f032:	2800      	cmp	r0, #0
 800f034:	d0f4      	beq.n	800f020 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800f036:	f001 f937 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800f03a:	1e6b      	subs	r3, r5, #1
 800f03c:	b2da      	uxtb	r2, r3
 800f03e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f040:	2a00      	cmp	r2, #0
 800f042:	d1f1      	bne.n	800f028 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800f044:	23ff      	movs	r3, #255	; 0xff
 800f046:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f04a:	f7ff fa35 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f04e:	f7ff fa11 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f052:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f056:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f058:	2d00      	cmp	r5, #0
 800f05a:	dd14      	ble.n	800f086 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f05c:	f104 0910 	add.w	r9, r4, #16
 800f060:	e003      	b.n	800f06a <xQueueReceive+0x196>
				--cRxLock;
 800f062:	1e6b      	subs	r3, r5, #1
 800f064:	b2da      	uxtb	r2, r3
 800f066:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f068:	b16a      	cbz	r2, 800f086 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f06a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f06c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f06e:	b153      	cbz	r3, 800f086 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f070:	f001 f87e 	bl	8010170 <xTaskRemoveFromEventList>
 800f074:	2800      	cmp	r0, #0
 800f076:	d0f4      	beq.n	800f062 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800f078:	f001 f916 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800f07c:	1e6b      	subs	r3, r5, #1
 800f07e:	b2da      	uxtb	r2, r3
 800f080:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f082:	2a00      	cmp	r2, #0
 800f084:	d1f1      	bne.n	800f06a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800f086:	23ff      	movs	r3, #255	; 0xff
 800f088:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f08c:	f7ff fa14 	bl	800e4b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800f090:	f000 ff6e 	bl	800ff70 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800f094:	f7ff f9ee 	bl	800e474 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f098:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f09a:	b153      	cbz	r3, 800f0b2 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800f09c:	f7ff fa0c 	bl	800e4b8 <vPortExitCritical>
		taskENTER_CRITICAL();
 800f0a0:	f7ff f9e8 	bl	800e474 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f0a4:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f0a6:	2d00      	cmp	r5, #0
 800f0a8:	d162      	bne.n	800f170 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f0aa:	9b01      	ldr	r3, [sp, #4]
 800f0ac:	2b00      	cmp	r3, #0
 800f0ae:	f47f af31 	bne.w	800ef14 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800f0b2:	f7ff fa01 	bl	800e4b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f0b6:	2000      	movs	r0, #0
}
 800f0b8:	b005      	add	sp, #20
 800f0ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800f0be:	f7ff f9fb 	bl	800e4b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f0c2:	9901      	ldr	r1, [sp, #4]
 800f0c4:	4630      	mov	r0, r6
 800f0c6:	f000 ffc5 	bl	8010054 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800f0ca:	f7ff f9d3 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f0ce:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f0d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0d4:	2d00      	cmp	r5, #0
 800f0d6:	dc04      	bgt.n	800f0e2 <xQueueReceive+0x20e>
 800f0d8:	e011      	b.n	800f0fe <xQueueReceive+0x22a>
			--cTxLock;
 800f0da:	1e6b      	subs	r3, r5, #1
 800f0dc:	b2da      	uxtb	r2, r3
 800f0de:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0e0:	b16a      	cbz	r2, 800f0fe <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0e4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0e6:	b153      	cbz	r3, 800f0fe <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0e8:	f001 f842 	bl	8010170 <xTaskRemoveFromEventList>
 800f0ec:	2800      	cmp	r0, #0
 800f0ee:	d0f4      	beq.n	800f0da <xQueueReceive+0x206>
						vTaskMissedYield();
 800f0f0:	f001 f8da 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800f0f4:	1e6b      	subs	r3, r5, #1
 800f0f6:	b2da      	uxtb	r2, r3
 800f0f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0fa:	2a00      	cmp	r2, #0
 800f0fc:	d1f1      	bne.n	800f0e2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f0fe:	23ff      	movs	r3, #255	; 0xff
 800f100:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f104:	f7ff f9d8 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f108:	f7ff f9b4 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f10c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f110:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f112:	2d00      	cmp	r5, #0
 800f114:	dd14      	ble.n	800f140 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f116:	f104 0910 	add.w	r9, r4, #16
 800f11a:	e003      	b.n	800f124 <xQueueReceive+0x250>
				--cRxLock;
 800f11c:	1e6b      	subs	r3, r5, #1
 800f11e:	b2da      	uxtb	r2, r3
 800f120:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f122:	b16a      	cbz	r2, 800f140 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f124:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f126:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f128:	b153      	cbz	r3, 800f140 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f12a:	f001 f821 	bl	8010170 <xTaskRemoveFromEventList>
 800f12e:	2800      	cmp	r0, #0
 800f130:	d0f4      	beq.n	800f11c <xQueueReceive+0x248>
					vTaskMissedYield();
 800f132:	f001 f8b9 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800f136:	1e6b      	subs	r3, r5, #1
 800f138:	b2da      	uxtb	r2, r3
 800f13a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f13c:	2a00      	cmp	r2, #0
 800f13e:	d1f1      	bne.n	800f124 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800f140:	23ff      	movs	r3, #255	; 0xff
 800f142:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f146:	f7ff f9b7 	bl	800e4b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f14a:	f000 ff11 	bl	800ff70 <xTaskResumeAll>
 800f14e:	2800      	cmp	r0, #0
 800f150:	d1a6      	bne.n	800f0a0 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800f152:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f156:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f15a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f15e:	f3bf 8f4f 	dsb	sy
 800f162:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800f166:	f7ff f985 	bl	800e474 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f16a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f16c:	2d00      	cmp	r5, #0
 800f16e:	d09c      	beq.n	800f0aa <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f170:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800f172:	b152      	cbz	r2, 800f18a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f174:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f176:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f178:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f17a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f17c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f17e:	bf24      	itt	cs
 800f180:	6821      	ldrcs	r1, [r4, #0]
 800f182:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f184:	4638      	mov	r0, r7
 800f186:	f01d f84e 	bl	802c226 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f18a:	3d01      	subs	r5, #1
 800f18c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f18e:	6923      	ldr	r3, [r4, #16]
 800f190:	b963      	cbnz	r3, 800f1ac <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800f192:	f7ff f991 	bl	800e4b8 <vPortExitCritical>
				return pdPASS;
 800f196:	2001      	movs	r0, #1
 800f198:	e78e      	b.n	800f0b8 <xQueueReceive+0x1e4>
 800f19a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f19e:	f383 8811 	msr	BASEPRI, r3
 800f1a2:	f3bf 8f6f 	isb	sy
 800f1a6:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f1aa:	e7fe      	b.n	800f1aa <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1ac:	f104 0010 	add.w	r0, r4, #16
 800f1b0:	f000 ffde 	bl	8010170 <xTaskRemoveFromEventList>
 800f1b4:	2800      	cmp	r0, #0
 800f1b6:	d0ec      	beq.n	800f192 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800f1b8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f1bc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f1c0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f1c4:	f3bf 8f4f 	dsb	sy
 800f1c8:	f3bf 8f6f 	isb	sy
 800f1cc:	e7e1      	b.n	800f192 <xQueueReceive+0x2be>
 800f1ce:	bf00      	nop

0800f1d0 <xQueueSemaphoreTake>:
{
 800f1d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f1d4:	b084      	sub	sp, #16
 800f1d6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f1d8:	2800      	cmp	r0, #0
 800f1da:	d05c      	beq.n	800f296 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f1dc:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800f1de:	4604      	mov	r4, r0
 800f1e0:	b147      	cbz	r7, 800f1f4 <xQueueSemaphoreTake+0x24>
 800f1e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1e6:	f383 8811 	msr	BASEPRI, r3
 800f1ea:	f3bf 8f6f 	isb	sy
 800f1ee:	f3bf 8f4f 	dsb	sy
 800f1f2:	e7fe      	b.n	800f1f2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f1f4:	f001 f85e 	bl	80102b4 <xTaskGetSchedulerState>
 800f1f8:	4605      	mov	r5, r0
 800f1fa:	2800      	cmp	r0, #0
 800f1fc:	d054      	beq.n	800f2a8 <xQueueSemaphoreTake+0xd8>
 800f1fe:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f200:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800f204:	f7ff f936 	bl	800e474 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f208:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f20a:	2b00      	cmp	r3, #0
 800f20c:	f040 8148 	bne.w	800f4a0 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f210:	9b01      	ldr	r3, [sp, #4]
 800f212:	2b00      	cmp	r3, #0
 800f214:	f000 813a 	beq.w	800f48c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800f218:	2d00      	cmp	r5, #0
 800f21a:	f000 809d 	beq.w	800f358 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800f21e:	f7ff f94b 	bl	800e4b8 <vPortExitCritical>
		vTaskSuspendAll();
 800f222:	f000 fe9d 	bl	800ff60 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f226:	f7ff f925 	bl	800e474 <vPortEnterCritical>
 800f22a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f22e:	2bff      	cmp	r3, #255	; 0xff
 800f230:	bf04      	itt	eq
 800f232:	2300      	moveq	r3, #0
 800f234:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f238:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f23c:	2bff      	cmp	r3, #255	; 0xff
 800f23e:	bf04      	itt	eq
 800f240:	2300      	moveq	r3, #0
 800f242:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f246:	f7ff f937 	bl	800e4b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f24a:	a901      	add	r1, sp, #4
 800f24c:	a802      	add	r0, sp, #8
 800f24e:	f000 ffe3 	bl	8010218 <xTaskCheckForTimeOut>
 800f252:	2800      	cmp	r0, #0
 800f254:	d135      	bne.n	800f2c2 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800f256:	f7ff f90d 	bl	800e474 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f25a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f25c:	2b00      	cmp	r3, #0
 800f25e:	f000 80a4 	beq.w	800f3aa <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800f262:	f7ff f929 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f266:	f7ff f905 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f26a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f26e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f270:	2d00      	cmp	r5, #0
 800f272:	dc05      	bgt.n	800f280 <xQueueSemaphoreTake+0xb0>
 800f274:	e074      	b.n	800f360 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800f276:	1e6b      	subs	r3, r5, #1
 800f278:	b2da      	uxtb	r2, r3
 800f27a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f27c:	2a00      	cmp	r2, #0
 800f27e:	d06f      	beq.n	800f360 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f280:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f282:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f284:	2b00      	cmp	r3, #0
 800f286:	d06b      	beq.n	800f360 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f288:	f000 ff72 	bl	8010170 <xTaskRemoveFromEventList>
 800f28c:	2800      	cmp	r0, #0
 800f28e:	d0f2      	beq.n	800f276 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800f290:	f001 f80a 	bl	80102a8 <vTaskMissedYield>
 800f294:	e7ef      	b.n	800f276 <xQueueSemaphoreTake+0xa6>
 800f296:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f29a:	f383 8811 	msr	BASEPRI, r3
 800f29e:	f3bf 8f6f 	isb	sy
 800f2a2:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f2a6:	e7fe      	b.n	800f2a6 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f2a8:	9b01      	ldr	r3, [sp, #4]
 800f2aa:	2b00      	cmp	r3, #0
 800f2ac:	f000 80d4 	beq.w	800f458 <xQueueSemaphoreTake+0x288>
 800f2b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2b4:	f383 8811 	msr	BASEPRI, r3
 800f2b8:	f3bf 8f6f 	isb	sy
 800f2bc:	f3bf 8f4f 	dsb	sy
 800f2c0:	e7fe      	b.n	800f2c0 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800f2c2:	f7ff f8d7 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f2c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f2ca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f2cc:	2d00      	cmp	r5, #0
 800f2ce:	dc04      	bgt.n	800f2da <xQueueSemaphoreTake+0x10a>
 800f2d0:	e011      	b.n	800f2f6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800f2d2:	1e6b      	subs	r3, r5, #1
 800f2d4:	b2da      	uxtb	r2, r3
 800f2d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f2d8:	b16a      	cbz	r2, 800f2f6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f2da:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f2dc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f2de:	b153      	cbz	r3, 800f2f6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f2e0:	f000 ff46 	bl	8010170 <xTaskRemoveFromEventList>
 800f2e4:	2800      	cmp	r0, #0
 800f2e6:	d0f4      	beq.n	800f2d2 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800f2e8:	f000 ffde 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800f2ec:	1e6b      	subs	r3, r5, #1
 800f2ee:	b2da      	uxtb	r2, r3
 800f2f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f2f2:	2a00      	cmp	r2, #0
 800f2f4:	d1f1      	bne.n	800f2da <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800f2f6:	23ff      	movs	r3, #255	; 0xff
 800f2f8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f2fc:	f7ff f8dc 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f300:	f7ff f8b8 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f304:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f308:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f30a:	2d00      	cmp	r5, #0
 800f30c:	dd14      	ble.n	800f338 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f30e:	f104 0810 	add.w	r8, r4, #16
 800f312:	e003      	b.n	800f31c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800f314:	1e6b      	subs	r3, r5, #1
 800f316:	b2da      	uxtb	r2, r3
 800f318:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f31a:	b16a      	cbz	r2, 800f338 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f31c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f31e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f320:	b153      	cbz	r3, 800f338 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f322:	f000 ff25 	bl	8010170 <xTaskRemoveFromEventList>
 800f326:	2800      	cmp	r0, #0
 800f328:	d0f4      	beq.n	800f314 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800f32a:	f000 ffbd 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800f32e:	1e6b      	subs	r3, r5, #1
 800f330:	b2da      	uxtb	r2, r3
 800f332:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f334:	2a00      	cmp	r2, #0
 800f336:	d1f1      	bne.n	800f31c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800f338:	23ff      	movs	r3, #255	; 0xff
 800f33a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f33e:	f7ff f8bb 	bl	800e4b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800f342:	f000 fe15 	bl	800ff70 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800f346:	f7ff f895 	bl	800e474 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f34a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f34c:	2b00      	cmp	r3, #0
 800f34e:	d07c      	beq.n	800f44a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800f350:	f7ff f8b2 	bl	800e4b8 <vPortExitCritical>
	return xReturn;
 800f354:	2501      	movs	r5, #1
 800f356:	e755      	b.n	800f204 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f358:	a802      	add	r0, sp, #8
 800f35a:	f000 ff51 	bl	8010200 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800f35e:	e75e      	b.n	800f21e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f360:	23ff      	movs	r3, #255	; 0xff
 800f362:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f366:	f7ff f8a7 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f36a:	f7ff f883 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f36e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f372:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f374:	2d00      	cmp	r5, #0
 800f376:	dd10      	ble.n	800f39a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f378:	f104 0810 	add.w	r8, r4, #16
 800f37c:	e003      	b.n	800f386 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800f37e:	1e6b      	subs	r3, r5, #1
 800f380:	b2da      	uxtb	r2, r3
 800f382:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f384:	b14a      	cbz	r2, 800f39a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f386:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f388:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f38a:	b133      	cbz	r3, 800f39a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f38c:	f000 fef0 	bl	8010170 <xTaskRemoveFromEventList>
 800f390:	2800      	cmp	r0, #0
 800f392:	d0f4      	beq.n	800f37e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800f394:	f000 ff88 	bl	80102a8 <vTaskMissedYield>
 800f398:	e7f1      	b.n	800f37e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800f39a:	23ff      	movs	r3, #255	; 0xff
 800f39c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f3a0:	f7ff f88a 	bl	800e4b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800f3a4:	f000 fde4 	bl	800ff70 <xTaskResumeAll>
 800f3a8:	e7d4      	b.n	800f354 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f3aa:	f7ff f885 	bl	800e4b8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f3ae:	6823      	ldr	r3, [r4, #0]
 800f3b0:	2b00      	cmp	r3, #0
 800f3b2:	d062      	beq.n	800f47a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f3b4:	9901      	ldr	r1, [sp, #4]
 800f3b6:	4630      	mov	r0, r6
 800f3b8:	f000 fe4c 	bl	8010054 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800f3bc:	f7ff f85a 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f3c0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f3c4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f3c6:	2d00      	cmp	r5, #0
 800f3c8:	dc04      	bgt.n	800f3d4 <xQueueSemaphoreTake+0x204>
 800f3ca:	e00d      	b.n	800f3e8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800f3cc:	1e6b      	subs	r3, r5, #1
 800f3ce:	b2da      	uxtb	r2, r3
 800f3d0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f3d2:	b14a      	cbz	r2, 800f3e8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f3d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f3d6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f3d8:	b133      	cbz	r3, 800f3e8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f3da:	f000 fec9 	bl	8010170 <xTaskRemoveFromEventList>
 800f3de:	2800      	cmp	r0, #0
 800f3e0:	d0f4      	beq.n	800f3cc <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800f3e2:	f000 ff61 	bl	80102a8 <vTaskMissedYield>
 800f3e6:	e7f1      	b.n	800f3cc <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800f3e8:	23ff      	movs	r3, #255	; 0xff
 800f3ea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f3ee:	f7ff f863 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f3f2:	f7ff f83f 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f3f6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f3fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f3fc:	2d00      	cmp	r5, #0
 800f3fe:	dd10      	ble.n	800f422 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f400:	f104 0810 	add.w	r8, r4, #16
 800f404:	e003      	b.n	800f40e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800f406:	1e6b      	subs	r3, r5, #1
 800f408:	b2da      	uxtb	r2, r3
 800f40a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f40c:	b14a      	cbz	r2, 800f422 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f40e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f410:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f412:	b133      	cbz	r3, 800f422 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f414:	f000 feac 	bl	8010170 <xTaskRemoveFromEventList>
 800f418:	2800      	cmp	r0, #0
 800f41a:	d0f4      	beq.n	800f406 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800f41c:	f000 ff44 	bl	80102a8 <vTaskMissedYield>
 800f420:	e7f1      	b.n	800f406 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800f422:	23ff      	movs	r3, #255	; 0xff
 800f424:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f428:	f7ff f846 	bl	800e4b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f42c:	f000 fda0 	bl	800ff70 <xTaskResumeAll>
 800f430:	2800      	cmp	r0, #0
 800f432:	d18f      	bne.n	800f354 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800f434:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f438:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f43c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f440:	f3bf 8f4f 	dsb	sy
 800f444:	f3bf 8f6f 	isb	sy
 800f448:	e784      	b.n	800f354 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f44a:	f7ff f835 	bl	800e4b8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800f44e:	b92f      	cbnz	r7, 800f45c <xQueueSemaphoreTake+0x28c>
}
 800f450:	4638      	mov	r0, r7
 800f452:	b004      	add	sp, #16
 800f454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f458:	4607      	mov	r7, r0
 800f45a:	e6d1      	b.n	800f200 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800f45c:	f7ff f80a 	bl	800e474 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f460:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f462:	b119      	cbz	r1, 800f46c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f464:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f466:	6819      	ldr	r1, [r3, #0]
 800f468:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f46c:	68a0      	ldr	r0, [r4, #8]
 800f46e:	f000 ffbd 	bl	80103ec <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f472:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800f474:	f7ff f820 	bl	800e4b8 <vPortExitCritical>
 800f478:	e7ea      	b.n	800f450 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800f47a:	f7fe fffb 	bl	800e474 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f47e:	68a0      	ldr	r0, [r4, #8]
 800f480:	f000 ff28 	bl	80102d4 <xTaskPriorityInherit>
 800f484:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800f486:	f7ff f817 	bl	800e4b8 <vPortExitCritical>
 800f48a:	e793      	b.n	800f3b4 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f48c:	b197      	cbz	r7, 800f4b4 <xQueueSemaphoreTake+0x2e4>
 800f48e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f492:	f383 8811 	msr	BASEPRI, r3
 800f496:	f3bf 8f6f 	isb	sy
 800f49a:	f3bf 8f4f 	dsb	sy
 800f49e:	e7fe      	b.n	800f49e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f4a0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f4a2:	3b01      	subs	r3, #1
 800f4a4:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f4a6:	b1ca      	cbz	r2, 800f4dc <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f4a8:	6923      	ldr	r3, [r4, #16]
 800f4aa:	b933      	cbnz	r3, 800f4ba <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800f4ac:	f7ff f804 	bl	800e4b8 <vPortExitCritical>
				return pdPASS;
 800f4b0:	2701      	movs	r7, #1
 800f4b2:	e7cd      	b.n	800f450 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800f4b4:	f7ff f800 	bl	800e4b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f4b8:	e7ca      	b.n	800f450 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f4ba:	f104 0010 	add.w	r0, r4, #16
 800f4be:	f000 fe57 	bl	8010170 <xTaskRemoveFromEventList>
 800f4c2:	2800      	cmp	r0, #0
 800f4c4:	d0f2      	beq.n	800f4ac <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800f4c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f4ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f4ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f4d2:	f3bf 8f4f 	dsb	sy
 800f4d6:	f3bf 8f6f 	isb	sy
 800f4da:	e7e7      	b.n	800f4ac <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f4dc:	f000 ffda 	bl	8010494 <pvTaskIncrementMutexHeldCount>
 800f4e0:	60a0      	str	r0, [r4, #8]
 800f4e2:	e7e1      	b.n	800f4a8 <xQueueSemaphoreTake+0x2d8>

0800f4e4 <xQueueReceiveFromISR>:
{
 800f4e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800f4e8:	b310      	cbz	r0, 800f530 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f4ea:	460e      	mov	r6, r1
 800f4ec:	4617      	mov	r7, r2
 800f4ee:	4604      	mov	r4, r0
 800f4f0:	b191      	cbz	r1, 800f518 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f4f2:	f7ff f8f3 	bl	800e6dc <vPortValidateInterruptPriority>
	__asm volatile
 800f4f6:	f3ef 8911 	mrs	r9, BASEPRI
 800f4fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4fe:	f383 8811 	msr	BASEPRI, r3
 800f502:	f3bf 8f6f 	isb	sy
 800f506:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f50a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f50c:	b9cd      	cbnz	r5, 800f542 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800f50e:	4628      	mov	r0, r5
	__asm volatile
 800f510:	f389 8811 	msr	BASEPRI, r9
}
 800f514:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f518:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f51a:	2b00      	cmp	r3, #0
 800f51c:	d0e9      	beq.n	800f4f2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800f51e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f522:	f383 8811 	msr	BASEPRI, r3
 800f526:	f3bf 8f6f 	isb	sy
 800f52a:	f3bf 8f4f 	dsb	sy
 800f52e:	e7fe      	b.n	800f52e <xQueueReceiveFromISR+0x4a>
 800f530:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f534:	f383 8811 	msr	BASEPRI, r3
 800f538:	f3bf 8f6f 	isb	sy
 800f53c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f540:	e7fe      	b.n	800f540 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f542:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f546:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f548:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f54c:	b152      	cbz	r2, 800f564 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f54e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f550:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f552:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f554:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f556:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f558:	bf24      	itt	cs
 800f55a:	6821      	ldrcs	r1, [r4, #0]
 800f55c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f55e:	4630      	mov	r0, r6
 800f560:	f01c fe61 	bl	802c226 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f564:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f566:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f56a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f56c:	d009      	beq.n	800f582 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f56e:	f108 0301 	add.w	r3, r8, #1
 800f572:	b25b      	sxtb	r3, r3
 800f574:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f578:	2001      	movs	r0, #1
	__asm volatile
 800f57a:	f389 8811 	msr	BASEPRI, r9
}
 800f57e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f582:	6923      	ldr	r3, [r4, #16]
 800f584:	2b00      	cmp	r3, #0
 800f586:	d0f7      	beq.n	800f578 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f588:	f104 0010 	add.w	r0, r4, #16
 800f58c:	f000 fdf0 	bl	8010170 <xTaskRemoveFromEventList>
 800f590:	2800      	cmp	r0, #0
 800f592:	d0f1      	beq.n	800f578 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f594:	2f00      	cmp	r7, #0
 800f596:	d0ef      	beq.n	800f578 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f598:	2001      	movs	r0, #1
 800f59a:	6038      	str	r0, [r7, #0]
 800f59c:	e7b8      	b.n	800f510 <xQueueReceiveFromISR+0x2c>
 800f59e:	bf00      	nop

0800f5a0 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f5a0:	b158      	cbz	r0, 800f5ba <uxQueueMessagesWaiting+0x1a>
{
 800f5a2:	b510      	push	{r4, lr}
 800f5a4:	4604      	mov	r4, r0
 800f5a6:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f5a8:	f7fe ff64 	bl	800e474 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f5ac:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f5ae:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f5b0:	f7fe ff82 	bl	800e4b8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f5b4:	9801      	ldr	r0, [sp, #4]
 800f5b6:	b002      	add	sp, #8
 800f5b8:	bd10      	pop	{r4, pc}
	__asm volatile
 800f5ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5be:	f383 8811 	msr	BASEPRI, r3
 800f5c2:	f3bf 8f6f 	isb	sy
 800f5c6:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f5ca:	e7fe      	b.n	800f5ca <uxQueueMessagesWaiting+0x2a>

0800f5cc <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f5cc:	b108      	cbz	r0, 800f5d2 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f5ce:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f5d0:	4770      	bx	lr
 800f5d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5d6:	f383 8811 	msr	BASEPRI, r3
 800f5da:	f3bf 8f6f 	isb	sy
 800f5de:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f5e2:	e7fe      	b.n	800f5e2 <uxQueueMessagesWaitingFromISR+0x16>
 800f5e4:	0000      	movs	r0, r0
	...

0800f5e8 <vQueueDelete>:
	configASSERT( pxQueue );
 800f5e8:	b1f0      	cbz	r0, 800f628 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f5ea:	4b21      	ldr	r3, [pc, #132]	; (800f670 <vQueueDelete+0x88>)
 800f5ec:	685a      	ldr	r2, [r3, #4]
 800f5ee:	4290      	cmp	r0, r2
 800f5f0:	d025      	beq.n	800f63e <vQueueDelete+0x56>
 800f5f2:	68da      	ldr	r2, [r3, #12]
 800f5f4:	4290      	cmp	r0, r2
 800f5f6:	d02c      	beq.n	800f652 <vQueueDelete+0x6a>
 800f5f8:	695a      	ldr	r2, [r3, #20]
 800f5fa:	4290      	cmp	r0, r2
 800f5fc:	d02b      	beq.n	800f656 <vQueueDelete+0x6e>
 800f5fe:	69da      	ldr	r2, [r3, #28]
 800f600:	4290      	cmp	r0, r2
 800f602:	d02a      	beq.n	800f65a <vQueueDelete+0x72>
 800f604:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f606:	4290      	cmp	r0, r2
 800f608:	d029      	beq.n	800f65e <vQueueDelete+0x76>
 800f60a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f60c:	4290      	cmp	r0, r2
 800f60e:	d01e      	beq.n	800f64e <vQueueDelete+0x66>
 800f610:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f612:	4290      	cmp	r0, r2
 800f614:	d025      	beq.n	800f662 <vQueueDelete+0x7a>
 800f616:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f618:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f61a:	bf08      	it	eq
 800f61c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f61e:	d00f      	beq.n	800f640 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f620:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f624:	b14b      	cbz	r3, 800f63a <vQueueDelete+0x52>
}
 800f626:	4770      	bx	lr
 800f628:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f62c:	f383 8811 	msr	BASEPRI, r3
 800f630:	f3bf 8f6f 	isb	sy
 800f634:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f638:	e7fe      	b.n	800f638 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f63a:	f7fe be01 	b.w	800e240 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f63e:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f640:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f668 <vQueueDelete+0x80>
 800f644:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f648:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f64c:	e7e8      	b.n	800f620 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f64e:	2205      	movs	r2, #5
 800f650:	e7f6      	b.n	800f640 <vQueueDelete+0x58>
 800f652:	2201      	movs	r2, #1
 800f654:	e7f4      	b.n	800f640 <vQueueDelete+0x58>
 800f656:	2202      	movs	r2, #2
 800f658:	e7f2      	b.n	800f640 <vQueueDelete+0x58>
 800f65a:	2203      	movs	r2, #3
 800f65c:	e7f0      	b.n	800f640 <vQueueDelete+0x58>
 800f65e:	2204      	movs	r2, #4
 800f660:	e7ee      	b.n	800f640 <vQueueDelete+0x58>
 800f662:	2206      	movs	r2, #6
 800f664:	e7ec      	b.n	800f640 <vQueueDelete+0x58>
 800f666:	bf00      	nop
	...
 800f670:	200131c8 	.word	0x200131c8

0800f674 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f674:	4b12      	ldr	r3, [pc, #72]	; (800f6c0 <vQueueAddToRegistry+0x4c>)
 800f676:	681a      	ldr	r2, [r3, #0]
 800f678:	b17a      	cbz	r2, 800f69a <vQueueAddToRegistry+0x26>
 800f67a:	689a      	ldr	r2, [r3, #8]
 800f67c:	b162      	cbz	r2, 800f698 <vQueueAddToRegistry+0x24>
 800f67e:	691a      	ldr	r2, [r3, #16]
 800f680:	b192      	cbz	r2, 800f6a8 <vQueueAddToRegistry+0x34>
 800f682:	699a      	ldr	r2, [r3, #24]
 800f684:	b192      	cbz	r2, 800f6ac <vQueueAddToRegistry+0x38>
 800f686:	6a1a      	ldr	r2, [r3, #32]
 800f688:	b192      	cbz	r2, 800f6b0 <vQueueAddToRegistry+0x3c>
 800f68a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f68c:	b192      	cbz	r2, 800f6b4 <vQueueAddToRegistry+0x40>
 800f68e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f690:	b192      	cbz	r2, 800f6b8 <vQueueAddToRegistry+0x44>
 800f692:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f694:	b192      	cbz	r2, 800f6bc <vQueueAddToRegistry+0x48>
	}
 800f696:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f698:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f69a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f69e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f6a2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f6a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f6a8:	2202      	movs	r2, #2
 800f6aa:	e7f6      	b.n	800f69a <vQueueAddToRegistry+0x26>
 800f6ac:	2203      	movs	r2, #3
 800f6ae:	e7f4      	b.n	800f69a <vQueueAddToRegistry+0x26>
 800f6b0:	2204      	movs	r2, #4
 800f6b2:	e7f2      	b.n	800f69a <vQueueAddToRegistry+0x26>
 800f6b4:	2205      	movs	r2, #5
 800f6b6:	e7f0      	b.n	800f69a <vQueueAddToRegistry+0x26>
 800f6b8:	2206      	movs	r2, #6
 800f6ba:	e7ee      	b.n	800f69a <vQueueAddToRegistry+0x26>
 800f6bc:	2207      	movs	r2, #7
 800f6be:	e7ec      	b.n	800f69a <vQueueAddToRegistry+0x26>
 800f6c0:	200131c8 	.word	0x200131c8

0800f6c4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f6c4:	b570      	push	{r4, r5, r6, lr}
 800f6c6:	4605      	mov	r5, r0
 800f6c8:	460e      	mov	r6, r1
 800f6ca:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f6cc:	f7fe fed2 	bl	800e474 <vPortEnterCritical>
 800f6d0:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f6d4:	2bff      	cmp	r3, #255	; 0xff
 800f6d6:	bf04      	itt	eq
 800f6d8:	2300      	moveq	r3, #0
 800f6da:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f6de:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f6e2:	2bff      	cmp	r3, #255	; 0xff
 800f6e4:	bf04      	itt	eq
 800f6e6:	2300      	moveq	r3, #0
 800f6e8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f6ec:	f7fe fee4 	bl	800e4b8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f6f0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f6f2:	2b00      	cmp	r3, #0
 800f6f4:	d043      	beq.n	800f77e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f6f6:	f7fe febd 	bl	800e474 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f6fa:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f6fe:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f700:	2c00      	cmp	r4, #0
 800f702:	dd14      	ble.n	800f72e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f704:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f708:	e003      	b.n	800f712 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f70a:	1e63      	subs	r3, r4, #1
 800f70c:	b2da      	uxtb	r2, r3
 800f70e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f710:	b16a      	cbz	r2, 800f72e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f712:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f714:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f716:	b153      	cbz	r3, 800f72e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f718:	f000 fd2a 	bl	8010170 <xTaskRemoveFromEventList>
 800f71c:	2800      	cmp	r0, #0
 800f71e:	d0f4      	beq.n	800f70a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f720:	f000 fdc2 	bl	80102a8 <vTaskMissedYield>
			--cTxLock;
 800f724:	1e63      	subs	r3, r4, #1
 800f726:	b2da      	uxtb	r2, r3
 800f728:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f72a:	2a00      	cmp	r2, #0
 800f72c:	d1f1      	bne.n	800f712 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f72e:	23ff      	movs	r3, #255	; 0xff
 800f730:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f734:	f7fe fec0 	bl	800e4b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f738:	f7fe fe9c 	bl	800e474 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f73c:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f740:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f742:	2c00      	cmp	r4, #0
 800f744:	dd14      	ble.n	800f770 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f746:	f105 0610 	add.w	r6, r5, #16
 800f74a:	e003      	b.n	800f754 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f74c:	1e63      	subs	r3, r4, #1
 800f74e:	b2da      	uxtb	r2, r3
 800f750:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f752:	b16a      	cbz	r2, 800f770 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f754:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f756:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f758:	b153      	cbz	r3, 800f770 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f75a:	f000 fd09 	bl	8010170 <xTaskRemoveFromEventList>
 800f75e:	2800      	cmp	r0, #0
 800f760:	d0f4      	beq.n	800f74c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f762:	f000 fda1 	bl	80102a8 <vTaskMissedYield>
				--cRxLock;
 800f766:	1e63      	subs	r3, r4, #1
 800f768:	b2da      	uxtb	r2, r3
 800f76a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f76c:	2a00      	cmp	r2, #0
 800f76e:	d1f1      	bne.n	800f754 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f770:	23ff      	movs	r3, #255	; 0xff
 800f772:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f776:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f77a:	f7fe be9d 	b.w	800e4b8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f77e:	4622      	mov	r2, r4
 800f780:	4631      	mov	r1, r6
 800f782:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f786:	f000 fca9 	bl	80100dc <vTaskPlaceOnEventListRestricted>
 800f78a:	e7b4      	b.n	800f6f6 <vQueueWaitForMessageRestricted+0x32>

0800f78c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f78c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f790:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f792:	f7fe fe6f 	bl	800e474 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f796:	4a34      	ldr	r2, [pc, #208]	; (800f868 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f798:	4e34      	ldr	r6, [pc, #208]	; (800f86c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f79a:	6813      	ldr	r3, [r2, #0]
 800f79c:	3301      	adds	r3, #1
 800f79e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f7a0:	6833      	ldr	r3, [r6, #0]
 800f7a2:	2b00      	cmp	r3, #0
 800f7a4:	d032      	beq.n	800f80c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f7a6:	4c32      	ldr	r4, [pc, #200]	; (800f870 <prvAddNewTaskToReadyList+0xe4>)
 800f7a8:	6823      	ldr	r3, [r4, #0]
 800f7aa:	b33b      	cbz	r3, 800f7fc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f7ac:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f7ae:	4f31      	ldr	r7, [pc, #196]	; (800f874 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f7b0:	4a31      	ldr	r2, [pc, #196]	; (800f878 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f7b2:	4932      	ldr	r1, [pc, #200]	; (800f87c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f7b4:	6813      	ldr	r3, [r2, #0]
 800f7b6:	3301      	adds	r3, #1
 800f7b8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f7ba:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f7bc:	680b      	ldr	r3, [r1, #0]
 800f7be:	4283      	cmp	r3, r0
 800f7c0:	bf38      	it	cc
 800f7c2:	6008      	strcc	r0, [r1, #0]
 800f7c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f7c8:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f7cc:	1d29      	adds	r1, r5, #4
 800f7ce:	f7fe fdab 	bl	800e328 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f7d2:	f7fe fe71 	bl	800e4b8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f7d6:	6823      	ldr	r3, [r4, #0]
 800f7d8:	b173      	cbz	r3, 800f7f8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f7da:	6832      	ldr	r2, [r6, #0]
 800f7dc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f7de:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f7e0:	429a      	cmp	r2, r3
 800f7e2:	d209      	bcs.n	800f7f8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f7e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f7e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f7ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f7f0:	f3bf 8f4f 	dsb	sy
 800f7f4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f7f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f7fc:	6833      	ldr	r3, [r6, #0]
 800f7fe:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f800:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f802:	4f1c      	ldr	r7, [pc, #112]	; (800f874 <prvAddNewTaskToReadyList+0xe8>)
 800f804:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f806:	bf98      	it	ls
 800f808:	6035      	strls	r5, [r6, #0]
 800f80a:	e7d1      	b.n	800f7b0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f80c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f80e:	6813      	ldr	r3, [r2, #0]
 800f810:	2b01      	cmp	r3, #1
 800f812:	d003      	beq.n	800f81c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f814:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f816:	4f17      	ldr	r7, [pc, #92]	; (800f874 <prvAddNewTaskToReadyList+0xe8>)
 800f818:	4c15      	ldr	r4, [pc, #84]	; (800f870 <prvAddNewTaskToReadyList+0xe4>)
 800f81a:	e7c9      	b.n	800f7b0 <prvAddNewTaskToReadyList+0x24>
 800f81c:	4f15      	ldr	r7, [pc, #84]	; (800f874 <prvAddNewTaskToReadyList+0xe8>)
 800f81e:	463c      	mov	r4, r7
 800f820:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f824:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f826:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f828:	f7fe fd6e 	bl	800e308 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f82c:	45a0      	cmp	r8, r4
 800f82e:	d1f9      	bne.n	800f824 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f830:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f894 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f834:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f898 <prvAddNewTaskToReadyList+0x10c>
 800f838:	4c0d      	ldr	r4, [pc, #52]	; (800f870 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f83a:	4648      	mov	r0, r9
 800f83c:	f7fe fd64 	bl	800e308 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f840:	4640      	mov	r0, r8
 800f842:	f7fe fd61 	bl	800e308 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f846:	480e      	ldr	r0, [pc, #56]	; (800f880 <prvAddNewTaskToReadyList+0xf4>)
 800f848:	f7fe fd5e 	bl	800e308 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f84c:	480d      	ldr	r0, [pc, #52]	; (800f884 <prvAddNewTaskToReadyList+0xf8>)
 800f84e:	f7fe fd5b 	bl	800e308 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f852:	480d      	ldr	r0, [pc, #52]	; (800f888 <prvAddNewTaskToReadyList+0xfc>)
 800f854:	f7fe fd58 	bl	800e308 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f858:	4b0c      	ldr	r3, [pc, #48]	; (800f88c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f85a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f85c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f860:	4b0b      	ldr	r3, [pc, #44]	; (800f890 <prvAddNewTaskToReadyList+0x104>)
 800f862:	f8c3 8000 	str.w	r8, [r3]
}
 800f866:	e7a3      	b.n	800f7b0 <prvAddNewTaskToReadyList+0x24>
 800f868:	20013674 	.word	0x20013674
 800f86c:	20013208 	.word	0x20013208
 800f870:	200136d0 	.word	0x200136d0
 800f874:	20013214 	.word	0x20013214
 800f878:	20013680 	.word	0x20013680
 800f87c:	20013684 	.word	0x20013684
 800f880:	200136bc 	.word	0x200136bc
 800f884:	200136e8 	.word	0x200136e8
 800f888:	200136d4 	.word	0x200136d4
 800f88c:	2001320c 	.word	0x2001320c
 800f890:	20013210 	.word	0x20013210
 800f894:	20013688 	.word	0x20013688
 800f898:	2001369c 	.word	0x2001369c

0800f89c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f89c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f8a0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f8a2:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f8a6:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f8aa:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f8ac:	4606      	mov	r6, r0
 800f8ae:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f8b0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f8b2:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f8b4:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f8b6:	f01c fb90 	bl	802bfda <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f8ba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f8bc:	f1a9 0904 	sub.w	r9, r9, #4
 800f8c0:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f8c2:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f8c6:	2d00      	cmp	r5, #0
 800f8c8:	d079      	beq.n	800f9be <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8ca:	782b      	ldrb	r3, [r5, #0]
 800f8cc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f8d0:	2b00      	cmp	r3, #0
 800f8d2:	d03b      	beq.n	800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8d4:	786b      	ldrb	r3, [r5, #1]
 800f8d6:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f8da:	2b00      	cmp	r3, #0
 800f8dc:	d036      	beq.n	800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8de:	78ab      	ldrb	r3, [r5, #2]
 800f8e0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f8e4:	b393      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8e6:	78eb      	ldrb	r3, [r5, #3]
 800f8e8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f8ec:	b373      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8ee:	792b      	ldrb	r3, [r5, #4]
 800f8f0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f8f4:	b353      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8f6:	796b      	ldrb	r3, [r5, #5]
 800f8f8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f8fc:	b333      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f8fe:	79ab      	ldrb	r3, [r5, #6]
 800f900:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f904:	b313      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f906:	79eb      	ldrb	r3, [r5, #7]
 800f908:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f90c:	b1f3      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f90e:	7a2b      	ldrb	r3, [r5, #8]
 800f910:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f914:	b1d3      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f916:	7a6b      	ldrb	r3, [r5, #9]
 800f918:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f91c:	b1b3      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f91e:	7aab      	ldrb	r3, [r5, #10]
 800f920:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f924:	b193      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f926:	7aeb      	ldrb	r3, [r5, #11]
 800f928:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f92c:	b173      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f92e:	7b2b      	ldrb	r3, [r5, #12]
 800f930:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f934:	b153      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f936:	7b6b      	ldrb	r3, [r5, #13]
 800f938:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f93c:	b133      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f93e:	7bab      	ldrb	r3, [r5, #14]
 800f940:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f944:	b113      	cbz	r3, 800f94c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f946:	7beb      	ldrb	r3, [r5, #15]
 800f948:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f94c:	2300      	movs	r3, #0
 800f94e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f952:	9d08      	ldr	r5, [sp, #32]
 800f954:	2d37      	cmp	r5, #55	; 0x37
 800f956:	bf28      	it	cs
 800f958:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f95a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f95e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f960:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f962:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f964:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f968:	f7fe fcda 	bl	800e320 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f96c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f970:	f104 0018 	add.w	r0, r4, #24
 800f974:	f7fe fcd4 	bl	800e320 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f978:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f97a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f97e:	4651      	mov	r1, sl
 800f980:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f982:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f984:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f986:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f98a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f98e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f992:	f01c fb22 	bl	802bfda <memset>
 800f996:	4b0b      	ldr	r3, [pc, #44]	; (800f9c4 <prvInitialiseNewTask.constprop.0+0x128>)
 800f998:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f99a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f99e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f9a0:	463a      	mov	r2, r7
 800f9a2:	4631      	mov	r1, r6
 800f9a4:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f9a6:	6625      	str	r5, [r4, #96]	; 0x60
 800f9a8:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f9aa:	f7fe fd37 	bl	800e41c <pxPortInitialiseStack>
 800f9ae:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f9b0:	f1b8 0f00 	cmp.w	r8, #0
 800f9b4:	d001      	beq.n	800f9ba <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f9b6:	f8c8 4000 	str.w	r4, [r8]
}
 800f9ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f9be:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f9c2:	e7c6      	b.n	800f952 <prvInitialiseNewTask.constprop.0+0xb6>
 800f9c4:	20014198 	.word	0x20014198

0800f9c8 <prvIdleTask>:
{
 800f9c8:	b580      	push	{r7, lr}
 800f9ca:	4d23      	ldr	r5, [pc, #140]	; (800fa58 <prvIdleTask+0x90>)
 800f9cc:	4f23      	ldr	r7, [pc, #140]	; (800fa5c <prvIdleTask+0x94>)
 800f9ce:	4e24      	ldr	r6, [pc, #144]	; (800fa60 <prvIdleTask+0x98>)
 800f9d0:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800fa64 <prvIdleTask+0x9c>
				taskYIELD();
 800f9d4:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f9d8:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f9dc:	682b      	ldr	r3, [r5, #0]
 800f9de:	b35b      	cbz	r3, 800fa38 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f9e0:	f7fe fd48 	bl	800e474 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9e4:	68fb      	ldr	r3, [r7, #12]
 800f9e6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f9e8:	1d20      	adds	r0, r4, #4
 800f9ea:	f7fe fcc5 	bl	800e378 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f9ee:	6833      	ldr	r3, [r6, #0]
 800f9f0:	3b01      	subs	r3, #1
 800f9f2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f9f4:	682b      	ldr	r3, [r5, #0]
 800f9f6:	3b01      	subs	r3, #1
 800f9f8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f9fa:	f7fe fd5d 	bl	800e4b8 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f9fe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800fa02:	f01c fb33 	bl	802c06c <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800fa06:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800fa0a:	b163      	cbz	r3, 800fa26 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800fa0c:	2b01      	cmp	r3, #1
 800fa0e:	d01e      	beq.n	800fa4e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800fa10:	2b02      	cmp	r3, #2
 800fa12:	d0e3      	beq.n	800f9dc <prvIdleTask+0x14>
 800fa14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa18:	f383 8811 	msr	BASEPRI, r3
 800fa1c:	f3bf 8f6f 	isb	sy
 800fa20:	f3bf 8f4f 	dsb	sy
 800fa24:	e7fe      	b.n	800fa24 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800fa26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800fa28:	f7fe fc0a 	bl	800e240 <vPortFree>
				vPortFree( pxTCB );
 800fa2c:	4620      	mov	r0, r4
 800fa2e:	f7fe fc07 	bl	800e240 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800fa32:	682b      	ldr	r3, [r5, #0]
 800fa34:	2b00      	cmp	r3, #0
 800fa36:	d1d3      	bne.n	800f9e0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800fa38:	f8d8 3000 	ldr.w	r3, [r8]
 800fa3c:	2b01      	cmp	r3, #1
 800fa3e:	d9cd      	bls.n	800f9dc <prvIdleTask+0x14>
				taskYIELD();
 800fa40:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800fa44:	f3bf 8f4f 	dsb	sy
 800fa48:	f3bf 8f6f 	isb	sy
 800fa4c:	e7c6      	b.n	800f9dc <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800fa4e:	4620      	mov	r0, r4
 800fa50:	f7fe fbf6 	bl	800e240 <vPortFree>
 800fa54:	e7c2      	b.n	800f9dc <prvIdleTask+0x14>
 800fa56:	bf00      	nop
 800fa58:	20013678 	.word	0x20013678
 800fa5c:	200136e8 	.word	0x200136e8
 800fa60:	20013674 	.word	0x20013674
 800fa64:	20013214 	.word	0x20013214

0800fa68 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800fa68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800fa6c:	4b47      	ldr	r3, [pc, #284]	; (800fb8c <xTaskIncrementTick.part.0+0x124>)
 800fa6e:	681e      	ldr	r6, [r3, #0]
 800fa70:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800fa72:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800fa74:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800fa76:	2e00      	cmp	r6, #0
 800fa78:	d040      	beq.n	800fafc <xTaskIncrementTick.part.0+0x94>
 800fa7a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800fba0 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800fa7e:	f8db 3000 	ldr.w	r3, [fp]
 800fa82:	429e      	cmp	r6, r3
 800fa84:	d347      	bcc.n	800fb16 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fa86:	4f42      	ldr	r7, [pc, #264]	; (800fb90 <xTaskIncrementTick.part.0+0x128>)
 800fa88:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800fba4 <xTaskIncrementTick.part.0+0x13c>
 800fa8c:	683b      	ldr	r3, [r7, #0]
 800fa8e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800fba8 <xTaskIncrementTick.part.0+0x140>
 800fa92:	681d      	ldr	r5, [r3, #0]
 800fa94:	2d00      	cmp	r5, #0
 800fa96:	d073      	beq.n	800fb80 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800fa98:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800fbac <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800fa9c:	2500      	movs	r5, #0
 800fa9e:	e022      	b.n	800fae6 <xTaskIncrementTick.part.0+0x7e>
 800faa0:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800faa2:	f7fe fc69 	bl	800e378 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800faa6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800faa8:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800faaa:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800faae:	b113      	cbz	r3, 800fab6 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fab0:	f7fe fc62 	bl	800e378 <uxListRemove>
 800fab4:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800fab6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fab8:	f8d8 2000 	ldr.w	r2, [r8]
 800fabc:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800fac0:	4293      	cmp	r3, r2
 800fac2:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800fac6:	bf88      	it	hi
 800fac8:	f8c8 3000 	strhi.w	r3, [r8]
 800facc:	f7fe fc2c 	bl	800e328 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fad0:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fad4:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fad6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fad8:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fada:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800fadc:	4291      	cmp	r1, r2
 800fade:	bf28      	it	cs
 800fae0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fae2:	2b00      	cmp	r3, #0
 800fae4:	d04c      	beq.n	800fb80 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fae6:	683b      	ldr	r3, [r7, #0]
 800fae8:	68db      	ldr	r3, [r3, #12]
 800faea:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800faec:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800faee:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800faf0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800faf2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800faf4:	d2d4      	bcs.n	800faa0 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800faf6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800fafa:	e011      	b.n	800fb20 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800fafc:	4b24      	ldr	r3, [pc, #144]	; (800fb90 <xTaskIncrementTick.part.0+0x128>)
 800fafe:	681a      	ldr	r2, [r3, #0]
 800fb00:	6812      	ldr	r2, [r2, #0]
 800fb02:	b30a      	cbz	r2, 800fb48 <xTaskIncrementTick.part.0+0xe0>
 800fb04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb08:	f383 8811 	msr	BASEPRI, r3
 800fb0c:	f3bf 8f6f 	isb	sy
 800fb10:	f3bf 8f4f 	dsb	sy
 800fb14:	e7fe      	b.n	800fb14 <xTaskIncrementTick.part.0+0xac>
 800fb16:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800fba4 <xTaskIncrementTick.part.0+0x13c>
 800fb1a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800fba8 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800fb1e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800fb20:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800fb24:	491b      	ldr	r1, [pc, #108]	; (800fb94 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800fb26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb28:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fb2c:	009b      	lsls	r3, r3, #2
 800fb2e:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800fb32:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800fb34:	2a02      	cmp	r2, #2
 800fb36:	bf28      	it	cs
 800fb38:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800fb3a:	2b00      	cmp	r3, #0
}
 800fb3c:	bf0c      	ite	eq
 800fb3e:	4628      	moveq	r0, r5
 800fb40:	2001      	movne	r0, #1
 800fb42:	b003      	add	sp, #12
 800fb44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800fb48:	4a13      	ldr	r2, [pc, #76]	; (800fb98 <xTaskIncrementTick.part.0+0x130>)
 800fb4a:	6818      	ldr	r0, [r3, #0]
 800fb4c:	6811      	ldr	r1, [r2, #0]
 800fb4e:	6019      	str	r1, [r3, #0]
 800fb50:	4912      	ldr	r1, [pc, #72]	; (800fb9c <xTaskIncrementTick.part.0+0x134>)
 800fb52:	6010      	str	r0, [r2, #0]
 800fb54:	680a      	ldr	r2, [r1, #0]
 800fb56:	3201      	adds	r2, #1
 800fb58:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fb5a:	681a      	ldr	r2, [r3, #0]
 800fb5c:	6812      	ldr	r2, [r2, #0]
 800fb5e:	b932      	cbnz	r2, 800fb6e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800fb60:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800fba0 <xTaskIncrementTick.part.0+0x138>
 800fb64:	f04f 33ff 	mov.w	r3, #4294967295
 800fb68:	f8cb 3000 	str.w	r3, [fp]
 800fb6c:	e787      	b.n	800fa7e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb6e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fb70:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800fba0 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb74:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fb76:	68db      	ldr	r3, [r3, #12]
 800fb78:	685b      	ldr	r3, [r3, #4]
 800fb7a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800fb7e:	e77e      	b.n	800fa7e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fb80:	f04f 33ff 	mov.w	r3, #4294967295
 800fb84:	f8cb 3000 	str.w	r3, [fp]
					break;
 800fb88:	e7ca      	b.n	800fb20 <xTaskIncrementTick.part.0+0xb8>
 800fb8a:	bf00      	nop
 800fb8c:	200136fc 	.word	0x200136fc
 800fb90:	2001320c 	.word	0x2001320c
 800fb94:	20013700 	.word	0x20013700
 800fb98:	20013210 	.word	0x20013210
 800fb9c:	200136b4 	.word	0x200136b4
 800fba0:	200136b0 	.word	0x200136b0
 800fba4:	20013214 	.word	0x20013214
 800fba8:	20013208 	.word	0x20013208
 800fbac:	20013684 	.word	0x20013684

0800fbb0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800fbb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800fbb4:	4d41      	ldr	r5, [pc, #260]	; (800fcbc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800fbb6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800fbb8:	f7fe fc5c 	bl	800e474 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800fbbc:	682b      	ldr	r3, [r5, #0]
 800fbbe:	3b01      	subs	r3, #1
 800fbc0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fbc2:	682b      	ldr	r3, [r5, #0]
 800fbc4:	2b00      	cmp	r3, #0
 800fbc6:	d161      	bne.n	800fc8c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800fbc8:	4b3d      	ldr	r3, [pc, #244]	; (800fcc0 <xTaskResumeAll.part.0+0x110>)
 800fbca:	681b      	ldr	r3, [r3, #0]
 800fbcc:	2b00      	cmp	r3, #0
 800fbce:	d05d      	beq.n	800fc8c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fbd0:	4e3c      	ldr	r6, [pc, #240]	; (800fcc4 <xTaskResumeAll.part.0+0x114>)
 800fbd2:	6833      	ldr	r3, [r6, #0]
 800fbd4:	2b00      	cmp	r3, #0
 800fbd6:	d06e      	beq.n	800fcb6 <xTaskResumeAll.part.0+0x106>
 800fbd8:	4f3b      	ldr	r7, [pc, #236]	; (800fcc8 <xTaskResumeAll.part.0+0x118>)
 800fbda:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800fcd8 <xTaskResumeAll.part.0+0x128>
 800fbde:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800fcdc <xTaskResumeAll.part.0+0x12c>
 800fbe2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800fce0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fbe6:	68f3      	ldr	r3, [r6, #12]
 800fbe8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fbea:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fbee:	f104 0018 	add.w	r0, r4, #24
 800fbf2:	f7fe fbc1 	bl	800e378 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fbf6:	4658      	mov	r0, fp
 800fbf8:	f7fe fbbe 	bl	800e378 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fbfc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fbfe:	683a      	ldr	r2, [r7, #0]
 800fc00:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800fc04:	4293      	cmp	r3, r2
 800fc06:	4659      	mov	r1, fp
 800fc08:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800fc0c:	bf88      	it	hi
 800fc0e:	603b      	strhi	r3, [r7, #0]
 800fc10:	f7fe fb8a 	bl	800e328 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fc14:	f8d8 3000 	ldr.w	r3, [r8]
 800fc18:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fc1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc1c:	429a      	cmp	r2, r3
 800fc1e:	d33d      	bcc.n	800fc9c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800fc20:	2301      	movs	r3, #1
 800fc22:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fc26:	6833      	ldr	r3, [r6, #0]
 800fc28:	2b00      	cmp	r3, #0
 800fc2a:	d1dc      	bne.n	800fbe6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fc2c:	4b27      	ldr	r3, [pc, #156]	; (800fccc <xTaskResumeAll.part.0+0x11c>)
 800fc2e:	681a      	ldr	r2, [r3, #0]
 800fc30:	6812      	ldr	r2, [r2, #0]
 800fc32:	2a00      	cmp	r2, #0
 800fc34:	d03a      	beq.n	800fcac <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fc36:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fc38:	4b25      	ldr	r3, [pc, #148]	; (800fcd0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fc3a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fc3c:	68d2      	ldr	r2, [r2, #12]
 800fc3e:	6852      	ldr	r2, [r2, #4]
 800fc40:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800fc42:	4e24      	ldr	r6, [pc, #144]	; (800fcd4 <xTaskResumeAll.part.0+0x124>)
 800fc44:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800fc46:	b194      	cbz	r4, 800fc6e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800fc48:	2701      	movs	r7, #1
 800fc4a:	e006      	b.n	800fc5a <xTaskResumeAll.part.0+0xaa>
 800fc4c:	f7ff ff0c 	bl	800fa68 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800fc50:	b108      	cbz	r0, 800fc56 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800fc52:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fc56:	3c01      	subs	r4, #1
 800fc58:	d008      	beq.n	800fc6c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc5a:	682b      	ldr	r3, [r5, #0]
 800fc5c:	2b00      	cmp	r3, #0
 800fc5e:	d0f5      	beq.n	800fc4c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800fc60:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fc62:	3c01      	subs	r4, #1
		++xPendedTicks;
 800fc64:	f103 0301 	add.w	r3, r3, #1
 800fc68:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fc6a:	d1f6      	bne.n	800fc5a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800fc6c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800fc6e:	f8da 3000 	ldr.w	r3, [sl]
 800fc72:	b15b      	cbz	r3, 800fc8c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800fc74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc78:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc7c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc80:	f3bf 8f4f 	dsb	sy
 800fc84:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800fc88:	2001      	movs	r0, #1
 800fc8a:	e000      	b.n	800fc8e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800fc8c:	2000      	movs	r0, #0
 800fc8e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fc90:	f7fe fc12 	bl	800e4b8 <vPortExitCritical>
}
 800fc94:	9801      	ldr	r0, [sp, #4]
 800fc96:	b003      	add	sp, #12
 800fc98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fc9c:	6833      	ldr	r3, [r6, #0]
 800fc9e:	2b00      	cmp	r3, #0
 800fca0:	d1a1      	bne.n	800fbe6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fca2:	4b0a      	ldr	r3, [pc, #40]	; (800fccc <xTaskResumeAll.part.0+0x11c>)
 800fca4:	681a      	ldr	r2, [r3, #0]
 800fca6:	6812      	ldr	r2, [r2, #0]
 800fca8:	2a00      	cmp	r2, #0
 800fcaa:	d1c4      	bne.n	800fc36 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800fcac:	4b08      	ldr	r3, [pc, #32]	; (800fcd0 <xTaskResumeAll.part.0+0x120>)
 800fcae:	f04f 32ff 	mov.w	r2, #4294967295
 800fcb2:	601a      	str	r2, [r3, #0]
 800fcb4:	e7c5      	b.n	800fc42 <xTaskResumeAll.part.0+0x92>
 800fcb6:	f8df a028 	ldr.w	sl, [pc, #40]	; 800fce0 <xTaskResumeAll.part.0+0x130>
 800fcba:	e7c2      	b.n	800fc42 <xTaskResumeAll.part.0+0x92>
 800fcbc:	2001367c 	.word	0x2001367c
 800fcc0:	20013674 	.word	0x20013674
 800fcc4:	200136bc 	.word	0x200136bc
 800fcc8:	20013684 	.word	0x20013684
 800fccc:	2001320c 	.word	0x2001320c
 800fcd0:	200136b0 	.word	0x200136b0
 800fcd4:	200136b8 	.word	0x200136b8
 800fcd8:	20013214 	.word	0x20013214
 800fcdc:	20013208 	.word	0x20013208
 800fce0:	20013700 	.word	0x20013700

0800fce4 <xTaskCreateStatic>:
	{
 800fce4:	b530      	push	{r4, r5, lr}
 800fce6:	b087      	sub	sp, #28
 800fce8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800fcea:	b1c4      	cbz	r4, 800fd1e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800fcec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fcee:	b16d      	cbz	r5, 800fd0c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fcf0:	25ac      	movs	r5, #172	; 0xac
 800fcf2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800fcf4:	9d05      	ldr	r5, [sp, #20]
 800fcf6:	2dac      	cmp	r5, #172	; 0xac
 800fcf8:	d01a      	beq.n	800fd30 <xTaskCreateStatic+0x4c>
 800fcfa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcfe:	f383 8811 	msr	BASEPRI, r3
 800fd02:	f3bf 8f6f 	isb	sy
 800fd06:	f3bf 8f4f 	dsb	sy
 800fd0a:	e7fe      	b.n	800fd0a <xTaskCreateStatic+0x26>
 800fd0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd10:	f383 8811 	msr	BASEPRI, r3
 800fd14:	f3bf 8f6f 	isb	sy
 800fd18:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fd1c:	e7fe      	b.n	800fd1c <xTaskCreateStatic+0x38>
 800fd1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd22:	f383 8811 	msr	BASEPRI, r3
 800fd26:	f3bf 8f6f 	isb	sy
 800fd2a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fd2e:	e7fe      	b.n	800fd2e <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fd30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fd32:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd34:	2402      	movs	r4, #2
 800fd36:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd3a:	ac04      	add	r4, sp, #16
 800fd3c:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800fd40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800fd42:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fd44:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd46:	f7ff fda9 	bl	800f89c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fd4a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fd4c:	f7ff fd1e 	bl	800f78c <prvAddNewTaskToReadyList>
	}
 800fd50:	9804      	ldr	r0, [sp, #16]
 800fd52:	b007      	add	sp, #28
 800fd54:	bd30      	pop	{r4, r5, pc}
 800fd56:	bf00      	nop

0800fd58 <xTaskCreate>:
	{
 800fd58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd5c:	4607      	mov	r7, r0
 800fd5e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fd60:	0090      	lsls	r0, r2, #2
	{
 800fd62:	4615      	mov	r5, r2
 800fd64:	4688      	mov	r8, r1
 800fd66:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fd68:	f7fe f9ae 	bl	800e0c8 <pvPortMalloc>
			if( pxStack != NULL )
 800fd6c:	b1d8      	cbz	r0, 800fda6 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800fd6e:	4604      	mov	r4, r0
 800fd70:	20ac      	movs	r0, #172	; 0xac
 800fd72:	f7fe f9a9 	bl	800e0c8 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800fd76:	4606      	mov	r6, r0
 800fd78:	b1d0      	cbz	r0, 800fdb0 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800fd7a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800fd7c:	2400      	movs	r4, #0
 800fd7e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fd82:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800fd84:	9401      	str	r4, [sp, #4]
 800fd86:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fd88:	9602      	str	r6, [sp, #8]
 800fd8a:	464b      	mov	r3, r9
 800fd8c:	462a      	mov	r2, r5
 800fd8e:	4641      	mov	r1, r8
 800fd90:	4638      	mov	r0, r7
 800fd92:	9400      	str	r4, [sp, #0]
 800fd94:	f7ff fd82 	bl	800f89c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fd98:	4630      	mov	r0, r6
 800fd9a:	f7ff fcf7 	bl	800f78c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800fd9e:	2001      	movs	r0, #1
	}
 800fda0:	b005      	add	sp, #20
 800fda2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fda6:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800fdaa:	b005      	add	sp, #20
 800fdac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800fdb0:	4620      	mov	r0, r4
 800fdb2:	f7fe fa45 	bl	800e240 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fdb6:	f04f 30ff 	mov.w	r0, #4294967295
 800fdba:	e7f1      	b.n	800fda0 <xTaskCreate+0x48>

0800fdbc <vTaskDelay>:
	{
 800fdbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800fdbe:	b950      	cbnz	r0, 800fdd6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800fdc0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fdc4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fdc8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fdcc:	f3bf 8f4f 	dsb	sy
 800fdd0:	f3bf 8f6f 	isb	sy
	}
 800fdd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800fdd6:	4d1e      	ldr	r5, [pc, #120]	; (800fe50 <vTaskDelay+0x94>)
 800fdd8:	682b      	ldr	r3, [r5, #0]
 800fdda:	b143      	cbz	r3, 800fdee <vTaskDelay+0x32>
 800fddc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fde0:	f383 8811 	msr	BASEPRI, r3
 800fde4:	f3bf 8f6f 	isb	sy
 800fde8:	f3bf 8f4f 	dsb	sy
 800fdec:	e7fe      	b.n	800fdec <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800fdee:	682b      	ldr	r3, [r5, #0]
 800fdf0:	3301      	adds	r3, #1
 800fdf2:	4604      	mov	r4, r0
 800fdf4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800fdf6:	4b17      	ldr	r3, [pc, #92]	; (800fe54 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fdf8:	4e17      	ldr	r6, [pc, #92]	; (800fe58 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800fdfa:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fdfc:	6830      	ldr	r0, [r6, #0]
 800fdfe:	3004      	adds	r0, #4
 800fe00:	f7fe faba 	bl	800e378 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fe04:	6833      	ldr	r3, [r6, #0]
 800fe06:	19e4      	adds	r4, r4, r7
 800fe08:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800fe0a:	d310      	bcc.n	800fe2e <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fe0c:	4b13      	ldr	r3, [pc, #76]	; (800fe5c <vTaskDelay+0xa0>)
 800fe0e:	6818      	ldr	r0, [r3, #0]
 800fe10:	6831      	ldr	r1, [r6, #0]
 800fe12:	3104      	adds	r1, #4
 800fe14:	f7fe fa98 	bl	800e348 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800fe18:	682b      	ldr	r3, [r5, #0]
 800fe1a:	b9a3      	cbnz	r3, 800fe46 <vTaskDelay+0x8a>
 800fe1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe20:	f383 8811 	msr	BASEPRI, r3
 800fe24:	f3bf 8f6f 	isb	sy
 800fe28:	f3bf 8f4f 	dsb	sy
 800fe2c:	e7fe      	b.n	800fe2c <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fe2e:	4b0c      	ldr	r3, [pc, #48]	; (800fe60 <vTaskDelay+0xa4>)
 800fe30:	6818      	ldr	r0, [r3, #0]
 800fe32:	6831      	ldr	r1, [r6, #0]
 800fe34:	3104      	adds	r1, #4
 800fe36:	f7fe fa87 	bl	800e348 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800fe3a:	4b0a      	ldr	r3, [pc, #40]	; (800fe64 <vTaskDelay+0xa8>)
 800fe3c:	681a      	ldr	r2, [r3, #0]
 800fe3e:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800fe40:	bf38      	it	cc
 800fe42:	601c      	strcc	r4, [r3, #0]
 800fe44:	e7e8      	b.n	800fe18 <vTaskDelay+0x5c>
 800fe46:	f7ff feb3 	bl	800fbb0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800fe4a:	2800      	cmp	r0, #0
 800fe4c:	d0b8      	beq.n	800fdc0 <vTaskDelay+0x4>
	}
 800fe4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fe50:	2001367c 	.word	0x2001367c
 800fe54:	200136fc 	.word	0x200136fc
 800fe58:	20013208 	.word	0x20013208
 800fe5c:	20013210 	.word	0x20013210
 800fe60:	2001320c 	.word	0x2001320c
 800fe64:	200136b0 	.word	0x200136b0

0800fe68 <vTaskStartScheduler>:
{
 800fe68:	b530      	push	{r4, r5, lr}
 800fe6a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fe6c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800fe6e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fe70:	a906      	add	r1, sp, #24
 800fe72:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800fe74:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fe78:	f7fe f908 	bl	800e08c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800fe7c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fe80:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800fe82:	b1bb      	cbz	r3, 800feb4 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800fe84:	b16d      	cbz	r5, 800fea2 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fe86:	21ac      	movs	r1, #172	; 0xac
 800fe88:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800fe8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fe8c:	29ac      	cmp	r1, #172	; 0xac
 800fe8e:	d01a      	beq.n	800fec6 <vTaskStartScheduler+0x5e>
 800fe90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe94:	f383 8811 	msr	BASEPRI, r3
 800fe98:	f3bf 8f6f 	isb	sy
 800fe9c:	f3bf 8f4f 	dsb	sy
 800fea0:	e7fe      	b.n	800fea0 <vTaskStartScheduler+0x38>
 800fea2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fea6:	f383 8811 	msr	BASEPRI, r3
 800feaa:	f3bf 8f6f 	isb	sy
 800feae:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800feb2:	e7fe      	b.n	800feb2 <vTaskStartScheduler+0x4a>
 800feb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feb8:	f383 8811 	msr	BASEPRI, r3
 800febc:	f3bf 8f6f 	isb	sy
 800fec0:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fec4:	e7fe      	b.n	800fec4 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fec6:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fec8:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800feca:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fecc:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fed0:	4623      	mov	r3, r4
 800fed2:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800fed6:	491b      	ldr	r1, [pc, #108]	; (800ff44 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fed8:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800feda:	9400      	str	r4, [sp, #0]
 800fedc:	481a      	ldr	r0, [pc, #104]	; (800ff48 <vTaskStartScheduler+0xe0>)
 800fede:	f7ff fcdd 	bl	800f89c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fee2:	4628      	mov	r0, r5
 800fee4:	f7ff fc52 	bl	800f78c <prvAddNewTaskToReadyList>
		return xReturn;
 800fee8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800feea:	b1eb      	cbz	r3, 800ff28 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800feec:	f000 fc6e 	bl	80107cc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fef0:	2801      	cmp	r0, #1
 800fef2:	d11b      	bne.n	800ff2c <vTaskStartScheduler+0xc4>
 800fef4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fef8:	f383 8811 	msr	BASEPRI, r3
 800fefc:	f3bf 8f6f 	isb	sy
 800ff00:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ff04:	4b11      	ldr	r3, [pc, #68]	; (800ff4c <vTaskStartScheduler+0xe4>)
 800ff06:	4a12      	ldr	r2, [pc, #72]	; (800ff50 <vTaskStartScheduler+0xe8>)
 800ff08:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800ff0a:	4912      	ldr	r1, [pc, #72]	; (800ff54 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ff0c:	3358      	adds	r3, #88	; 0x58
 800ff0e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800ff10:	4a11      	ldr	r2, [pc, #68]	; (800ff58 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ff12:	4b12      	ldr	r3, [pc, #72]	; (800ff5c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800ff14:	f04f 35ff 	mov.w	r5, #4294967295
 800ff18:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800ff1a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800ff1c:	601c      	str	r4, [r3, #0]
}
 800ff1e:	b00b      	add	sp, #44	; 0x2c
 800ff20:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800ff24:	f7fe bb38 	b.w	800e598 <xPortStartScheduler>
}
 800ff28:	b00b      	add	sp, #44	; 0x2c
 800ff2a:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800ff2c:	3001      	adds	r0, #1
 800ff2e:	d1fb      	bne.n	800ff28 <vTaskStartScheduler+0xc0>
 800ff30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff34:	f383 8811 	msr	BASEPRI, r3
 800ff38:	f3bf 8f6f 	isb	sy
 800ff3c:	f3bf 8f4f 	dsb	sy
 800ff40:	e7fe      	b.n	800ff40 <vTaskStartScheduler+0xd8>
 800ff42:	bf00      	nop
 800ff44:	0802f6a4 	.word	0x0802f6a4
 800ff48:	0800f9c9 	.word	0x0800f9c9
 800ff4c:	20013208 	.word	0x20013208
 800ff50:	20000164 	.word	0x20000164
 800ff54:	200136b0 	.word	0x200136b0
 800ff58:	200136d0 	.word	0x200136d0
 800ff5c:	200136fc 	.word	0x200136fc

0800ff60 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ff60:	4a02      	ldr	r2, [pc, #8]	; (800ff6c <vTaskSuspendAll+0xc>)
 800ff62:	6813      	ldr	r3, [r2, #0]
 800ff64:	3301      	adds	r3, #1
 800ff66:	6013      	str	r3, [r2, #0]
}
 800ff68:	4770      	bx	lr
 800ff6a:	bf00      	nop
 800ff6c:	2001367c 	.word	0x2001367c

0800ff70 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800ff70:	4b06      	ldr	r3, [pc, #24]	; (800ff8c <xTaskResumeAll+0x1c>)
 800ff72:	681b      	ldr	r3, [r3, #0]
 800ff74:	b943      	cbnz	r3, 800ff88 <xTaskResumeAll+0x18>
 800ff76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff7a:	f383 8811 	msr	BASEPRI, r3
 800ff7e:	f3bf 8f6f 	isb	sy
 800ff82:	f3bf 8f4f 	dsb	sy
 800ff86:	e7fe      	b.n	800ff86 <xTaskResumeAll+0x16>
 800ff88:	f7ff be12 	b.w	800fbb0 <xTaskResumeAll.part.0>
 800ff8c:	2001367c 	.word	0x2001367c

0800ff90 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ff90:	4b01      	ldr	r3, [pc, #4]	; (800ff98 <xTaskGetTickCount+0x8>)
 800ff92:	6818      	ldr	r0, [r3, #0]
}
 800ff94:	4770      	bx	lr
 800ff96:	bf00      	nop
 800ff98:	200136fc 	.word	0x200136fc

0800ff9c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ff9c:	4b05      	ldr	r3, [pc, #20]	; (800ffb4 <xTaskIncrementTick+0x18>)
 800ff9e:	681b      	ldr	r3, [r3, #0]
 800ffa0:	b90b      	cbnz	r3, 800ffa6 <xTaskIncrementTick+0xa>
 800ffa2:	f7ff bd61 	b.w	800fa68 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ffa6:	4a04      	ldr	r2, [pc, #16]	; (800ffb8 <xTaskIncrementTick+0x1c>)
 800ffa8:	6813      	ldr	r3, [r2, #0]
 800ffaa:	3301      	adds	r3, #1
}
 800ffac:	2000      	movs	r0, #0
		++xPendedTicks;
 800ffae:	6013      	str	r3, [r2, #0]
}
 800ffb0:	4770      	bx	lr
 800ffb2:	bf00      	nop
 800ffb4:	2001367c 	.word	0x2001367c
 800ffb8:	200136b8 	.word	0x200136b8

0800ffbc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ffbc:	4b1f      	ldr	r3, [pc, #124]	; (801003c <vTaskSwitchContext+0x80>)
 800ffbe:	681b      	ldr	r3, [r3, #0]
 800ffc0:	b11b      	cbz	r3, 800ffca <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ffc2:	4b1f      	ldr	r3, [pc, #124]	; (8010040 <vTaskSwitchContext+0x84>)
 800ffc4:	2201      	movs	r2, #1
 800ffc6:	601a      	str	r2, [r3, #0]
 800ffc8:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ffca:	4a1d      	ldr	r2, [pc, #116]	; (8010040 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffcc:	491d      	ldr	r1, [pc, #116]	; (8010044 <vTaskSwitchContext+0x88>)
{
 800ffce:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffd0:	4c1d      	ldr	r4, [pc, #116]	; (8010048 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ffd2:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ffd4:	6823      	ldr	r3, [r4, #0]
 800ffd6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ffda:	0092      	lsls	r2, r2, #2
 800ffdc:	0098      	lsls	r0, r3, #2
 800ffde:	588a      	ldr	r2, [r1, r2]
 800ffe0:	b942      	cbnz	r2, 800fff4 <vTaskSwitchContext+0x38>
 800ffe2:	b313      	cbz	r3, 801002a <vTaskSwitchContext+0x6e>
 800ffe4:	3b01      	subs	r3, #1
 800ffe6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ffea:	0098      	lsls	r0, r3, #2
 800ffec:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fff0:	2a00      	cmp	r2, #0
 800fff2:	d0f6      	beq.n	800ffe2 <vTaskSwitchContext+0x26>
 800fff4:	4418      	add	r0, r3
 800fff6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fffa:	4662      	mov	r2, ip
 800fffc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8010000:	6849      	ldr	r1, [r1, #4]
 8010002:	f8cc 1004 	str.w	r1, [ip, #4]
 8010006:	3208      	adds	r2, #8
 8010008:	4291      	cmp	r1, r2
 801000a:	bf08      	it	eq
 801000c:	6849      	ldreq	r1, [r1, #4]
 801000e:	4a0f      	ldr	r2, [pc, #60]	; (801004c <vTaskSwitchContext+0x90>)
 8010010:	bf08      	it	eq
 8010012:	f8cc 1004 	streq.w	r1, [ip, #4]
 8010016:	68c9      	ldr	r1, [r1, #12]
 8010018:	6011      	str	r1, [r2, #0]
 801001a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 801001c:	6813      	ldr	r3, [r2, #0]
 801001e:	4a0c      	ldr	r2, [pc, #48]	; (8010050 <vTaskSwitchContext+0x94>)
}
 8010020:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8010024:	3358      	adds	r3, #88	; 0x58
 8010026:	6013      	str	r3, [r2, #0]
}
 8010028:	4770      	bx	lr
 801002a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801002e:	f383 8811 	msr	BASEPRI, r3
 8010032:	f3bf 8f6f 	isb	sy
 8010036:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801003a:	e7fe      	b.n	801003a <vTaskSwitchContext+0x7e>
 801003c:	2001367c 	.word	0x2001367c
 8010040:	20013700 	.word	0x20013700
 8010044:	20013214 	.word	0x20013214
 8010048:	20013684 	.word	0x20013684
 801004c:	20013208 	.word	0x20013208
 8010050:	20000164 	.word	0x20000164

08010054 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 8010054:	b1d0      	cbz	r0, 801008c <vTaskPlaceOnEventList+0x38>
{
 8010056:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8010058:	4d1a      	ldr	r5, [pc, #104]	; (80100c4 <vTaskPlaceOnEventList+0x70>)
 801005a:	460c      	mov	r4, r1
 801005c:	6829      	ldr	r1, [r5, #0]
 801005e:	3118      	adds	r1, #24
 8010060:	f7fe f972 	bl	800e348 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8010064:	4b18      	ldr	r3, [pc, #96]	; (80100c8 <vTaskPlaceOnEventList+0x74>)
 8010066:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010068:	6828      	ldr	r0, [r5, #0]
 801006a:	3004      	adds	r0, #4
 801006c:	f7fe f984 	bl	800e378 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8010070:	1c63      	adds	r3, r4, #1
 8010072:	d014      	beq.n	801009e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8010074:	682b      	ldr	r3, [r5, #0]
 8010076:	19a4      	adds	r4, r4, r6
 8010078:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 801007a:	d317      	bcc.n	80100ac <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801007c:	4b13      	ldr	r3, [pc, #76]	; (80100cc <vTaskPlaceOnEventList+0x78>)
 801007e:	6818      	ldr	r0, [r3, #0]
 8010080:	6829      	ldr	r1, [r5, #0]
}
 8010082:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010086:	3104      	adds	r1, #4
 8010088:	f7fe b95e 	b.w	800e348 <vListInsert>
 801008c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010090:	f383 8811 	msr	BASEPRI, r3
 8010094:	f3bf 8f6f 	isb	sy
 8010098:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 801009c:	e7fe      	b.n	801009c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801009e:	6829      	ldr	r1, [r5, #0]
 80100a0:	480b      	ldr	r0, [pc, #44]	; (80100d0 <vTaskPlaceOnEventList+0x7c>)
}
 80100a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80100a6:	3104      	adds	r1, #4
 80100a8:	f7fe b93e 	b.w	800e328 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80100ac:	4b09      	ldr	r3, [pc, #36]	; (80100d4 <vTaskPlaceOnEventList+0x80>)
 80100ae:	6818      	ldr	r0, [r3, #0]
 80100b0:	6829      	ldr	r1, [r5, #0]
 80100b2:	3104      	adds	r1, #4
 80100b4:	f7fe f948 	bl	800e348 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80100b8:	4b07      	ldr	r3, [pc, #28]	; (80100d8 <vTaskPlaceOnEventList+0x84>)
 80100ba:	681a      	ldr	r2, [r3, #0]
 80100bc:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 80100be:	bf38      	it	cc
 80100c0:	601c      	strcc	r4, [r3, #0]
}
 80100c2:	bd70      	pop	{r4, r5, r6, pc}
 80100c4:	20013208 	.word	0x20013208
 80100c8:	200136fc 	.word	0x200136fc
 80100cc:	20013210 	.word	0x20013210
 80100d0:	200136d4 	.word	0x200136d4
 80100d4:	2001320c 	.word	0x2001320c
 80100d8:	200136b0 	.word	0x200136b0

080100dc <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 80100dc:	b330      	cbz	r0, 801012c <vTaskPlaceOnEventListRestricted+0x50>
	{
 80100de:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80100e0:	4e1d      	ldr	r6, [pc, #116]	; (8010158 <vTaskPlaceOnEventListRestricted+0x7c>)
 80100e2:	460c      	mov	r4, r1
 80100e4:	6831      	ldr	r1, [r6, #0]
 80100e6:	4615      	mov	r5, r2
 80100e8:	3118      	adds	r1, #24
 80100ea:	f7fe f91d 	bl	800e328 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 80100ee:	4b1b      	ldr	r3, [pc, #108]	; (801015c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 80100f0:	b985      	cbnz	r5, 8010114 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 80100f2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80100f4:	6830      	ldr	r0, [r6, #0]
 80100f6:	3004      	adds	r0, #4
 80100f8:	f7fe f93e 	bl	800e378 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80100fc:	6833      	ldr	r3, [r6, #0]
 80100fe:	1964      	adds	r4, r4, r5
 8010100:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8010102:	d31c      	bcc.n	801013e <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010104:	4b16      	ldr	r3, [pc, #88]	; (8010160 <vTaskPlaceOnEventListRestricted+0x84>)
 8010106:	6818      	ldr	r0, [r3, #0]
 8010108:	6831      	ldr	r1, [r6, #0]
	}
 801010a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801010e:	3104      	adds	r1, #4
 8010110:	f7fe b91a 	b.w	800e348 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 8010114:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010116:	6830      	ldr	r0, [r6, #0]
 8010118:	3004      	adds	r0, #4
 801011a:	f7fe f92d 	bl	800e378 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801011e:	6831      	ldr	r1, [r6, #0]
 8010120:	4810      	ldr	r0, [pc, #64]	; (8010164 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 8010122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8010126:	3104      	adds	r1, #4
 8010128:	f7fe b8fe 	b.w	800e328 <vListInsertEnd>
 801012c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010130:	f383 8811 	msr	BASEPRI, r3
 8010134:	f3bf 8f6f 	isb	sy
 8010138:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 801013c:	e7fe      	b.n	801013c <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 801013e:	4b0a      	ldr	r3, [pc, #40]	; (8010168 <vTaskPlaceOnEventListRestricted+0x8c>)
 8010140:	6818      	ldr	r0, [r3, #0]
 8010142:	6831      	ldr	r1, [r6, #0]
 8010144:	3104      	adds	r1, #4
 8010146:	f7fe f8ff 	bl	800e348 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 801014a:	4b08      	ldr	r3, [pc, #32]	; (801016c <vTaskPlaceOnEventListRestricted+0x90>)
 801014c:	681a      	ldr	r2, [r3, #0]
 801014e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 8010150:	bf38      	it	cc
 8010152:	601c      	strcc	r4, [r3, #0]
	}
 8010154:	bd70      	pop	{r4, r5, r6, pc}
 8010156:	bf00      	nop
 8010158:	20013208 	.word	0x20013208
 801015c:	200136fc 	.word	0x200136fc
 8010160:	20013210 	.word	0x20013210
 8010164:	200136d4 	.word	0x200136d4
 8010168:	2001320c 	.word	0x2001320c
 801016c:	200136b0 	.word	0x200136b0

08010170 <xTaskRemoveFromEventList>:
{
 8010170:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010172:	68c3      	ldr	r3, [r0, #12]
 8010174:	68dc      	ldr	r4, [r3, #12]
{
 8010176:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 8010178:	2c00      	cmp	r4, #0
 801017a:	d02b      	beq.n	80101d4 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 801017c:	f104 0518 	add.w	r5, r4, #24
 8010180:	4628      	mov	r0, r5
 8010182:	f7fe f8f9 	bl	800e378 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010186:	4b18      	ldr	r3, [pc, #96]	; (80101e8 <xTaskRemoveFromEventList+0x78>)
 8010188:	681b      	ldr	r3, [r3, #0]
 801018a:	b17b      	cbz	r3, 80101ac <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 801018c:	4817      	ldr	r0, [pc, #92]	; (80101ec <xTaskRemoveFromEventList+0x7c>)
 801018e:	4629      	mov	r1, r5
 8010190:	f7fe f8ca 	bl	800e328 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010194:	4b16      	ldr	r3, [pc, #88]	; (80101f0 <xTaskRemoveFromEventList+0x80>)
 8010196:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010198:	681b      	ldr	r3, [r3, #0]
 801019a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801019c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 801019e:	bf85      	ittet	hi
 80101a0:	4b14      	ldrhi	r3, [pc, #80]	; (80101f4 <xTaskRemoveFromEventList+0x84>)
 80101a2:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80101a4:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80101a6:	6018      	strhi	r0, [r3, #0]
}
 80101a8:	b003      	add	sp, #12
 80101aa:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80101ac:	1d21      	adds	r1, r4, #4
 80101ae:	4608      	mov	r0, r1
 80101b0:	9101      	str	r1, [sp, #4]
 80101b2:	f7fe f8e1 	bl	800e378 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80101b6:	4a10      	ldr	r2, [pc, #64]	; (80101f8 <xTaskRemoveFromEventList+0x88>)
 80101b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80101ba:	6810      	ldr	r0, [r2, #0]
 80101bc:	9901      	ldr	r1, [sp, #4]
 80101be:	4283      	cmp	r3, r0
 80101c0:	480e      	ldr	r0, [pc, #56]	; (80101fc <xTaskRemoveFromEventList+0x8c>)
 80101c2:	bf88      	it	hi
 80101c4:	6013      	strhi	r3, [r2, #0]
 80101c6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80101ca:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80101ce:	f7fe f8ab 	bl	800e328 <vListInsertEnd>
 80101d2:	e7df      	b.n	8010194 <xTaskRemoveFromEventList+0x24>
 80101d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101d8:	f383 8811 	msr	BASEPRI, r3
 80101dc:	f3bf 8f6f 	isb	sy
 80101e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 80101e4:	e7fe      	b.n	80101e4 <xTaskRemoveFromEventList+0x74>
 80101e6:	bf00      	nop
 80101e8:	2001367c 	.word	0x2001367c
 80101ec:	200136bc 	.word	0x200136bc
 80101f0:	20013208 	.word	0x20013208
 80101f4:	20013700 	.word	0x20013700
 80101f8:	20013684 	.word	0x20013684
 80101fc:	20013214 	.word	0x20013214

08010200 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010200:	4a03      	ldr	r2, [pc, #12]	; (8010210 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010202:	4b04      	ldr	r3, [pc, #16]	; (8010214 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010204:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010206:	681b      	ldr	r3, [r3, #0]
 8010208:	e9c0 2300 	strd	r2, r3, [r0]
}
 801020c:	4770      	bx	lr
 801020e:	bf00      	nop
 8010210:	200136b4 	.word	0x200136b4
 8010214:	200136fc 	.word	0x200136fc

08010218 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8010218:	b328      	cbz	r0, 8010266 <xTaskCheckForTimeOut+0x4e>
{
 801021a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801021c:	460d      	mov	r5, r1
 801021e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 8010220:	b1c1      	cbz	r1, 8010254 <xTaskCheckForTimeOut+0x3c>
 8010222:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8010224:	f7fe f926 	bl	800e474 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 8010228:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 801022a:	4a1d      	ldr	r2, [pc, #116]	; (80102a0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 801022c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 801022e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8010230:	d030      	beq.n	8010294 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8010232:	f8df c070 	ldr.w	ip, [pc, #112]	; 80102a4 <xTaskCheckForTimeOut+0x8c>
 8010236:	e9d4 6000 	ldrd	r6, r0, [r4]
 801023a:	f8dc 7000 	ldr.w	r7, [ip]
 801023e:	42be      	cmp	r6, r7
 8010240:	d01a      	beq.n	8010278 <xTaskCheckForTimeOut+0x60>
 8010242:	4288      	cmp	r0, r1
 8010244:	d818      	bhi.n	8010278 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 8010246:	2001      	movs	r0, #1
 8010248:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 801024a:	f7fe f935 	bl	800e4b8 <vPortExitCritical>
}
 801024e:	9801      	ldr	r0, [sp, #4]
 8010250:	b003      	add	sp, #12
 8010252:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010254:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010258:	f383 8811 	msr	BASEPRI, r3
 801025c:	f3bf 8f6f 	isb	sy
 8010260:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 8010264:	e7fe      	b.n	8010264 <xTaskCheckForTimeOut+0x4c>
 8010266:	f04f 0350 	mov.w	r3, #80	; 0x50
 801026a:	f383 8811 	msr	BASEPRI, r3
 801026e:	f3bf 8f6f 	isb	sy
 8010272:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 8010276:	e7fe      	b.n	8010276 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8010278:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 801027c:	4573      	cmp	r3, lr
 801027e:	d90b      	bls.n	8010298 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8010280:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010282:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010286:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8010288:	4403      	add	r3, r0
 801028a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 801028c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 801028e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8010292:	e7d9      	b.n	8010248 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8010294:	2000      	movs	r0, #0
 8010296:	e7d7      	b.n	8010248 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8010298:	2300      	movs	r3, #0
 801029a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 801029c:	2001      	movs	r0, #1
 801029e:	e7d3      	b.n	8010248 <xTaskCheckForTimeOut+0x30>
 80102a0:	200136fc 	.word	0x200136fc
 80102a4:	200136b4 	.word	0x200136b4

080102a8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80102a8:	4b01      	ldr	r3, [pc, #4]	; (80102b0 <vTaskMissedYield+0x8>)
 80102aa:	2201      	movs	r2, #1
 80102ac:	601a      	str	r2, [r3, #0]
}
 80102ae:	4770      	bx	lr
 80102b0:	20013700 	.word	0x20013700

080102b4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80102b4:	4b05      	ldr	r3, [pc, #20]	; (80102cc <xTaskGetSchedulerState+0x18>)
 80102b6:	681b      	ldr	r3, [r3, #0]
 80102b8:	b133      	cbz	r3, 80102c8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80102ba:	4b05      	ldr	r3, [pc, #20]	; (80102d0 <xTaskGetSchedulerState+0x1c>)
 80102bc:	6818      	ldr	r0, [r3, #0]
 80102be:	fab0 f080 	clz	r0, r0
 80102c2:	0940      	lsrs	r0, r0, #5
 80102c4:	0040      	lsls	r0, r0, #1
 80102c6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 80102c8:	2001      	movs	r0, #1
	}
 80102ca:	4770      	bx	lr
 80102cc:	200136d0 	.word	0x200136d0
 80102d0:	2001367c 	.word	0x2001367c

080102d4 <xTaskPriorityInherit>:
	{
 80102d4:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80102d6:	4604      	mov	r4, r0
	{
 80102d8:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 80102da:	b1c8      	cbz	r0, 8010310 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80102dc:	4d1d      	ldr	r5, [pc, #116]	; (8010354 <xTaskPriorityInherit+0x80>)
 80102de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80102e0:	682a      	ldr	r2, [r5, #0]
 80102e2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80102e4:	4293      	cmp	r3, r2
 80102e6:	d215      	bcs.n	8010314 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80102e8:	6982      	ldr	r2, [r0, #24]
 80102ea:	2a00      	cmp	r2, #0
 80102ec:	db04      	blt.n	80102f8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102ee:	682a      	ldr	r2, [r5, #0]
 80102f0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80102f2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 80102f6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80102f8:	4e17      	ldr	r6, [pc, #92]	; (8010358 <xTaskPriorityInherit+0x84>)
 80102fa:	6962      	ldr	r2, [r4, #20]
 80102fc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010300:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010304:	429a      	cmp	r2, r3
 8010306:	d00e      	beq.n	8010326 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010308:	682b      	ldr	r3, [r5, #0]
 801030a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801030c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 801030e:	2001      	movs	r0, #1
	}
 8010310:	b002      	add	sp, #8
 8010312:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8010314:	682b      	ldr	r3, [r5, #0]
 8010316:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801031a:	4298      	cmp	r0, r3
 801031c:	bf2c      	ite	cs
 801031e:	2000      	movcs	r0, #0
 8010320:	2001      	movcc	r0, #1
	}
 8010322:	b002      	add	sp, #8
 8010324:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8010326:	1d21      	adds	r1, r4, #4
 8010328:	4608      	mov	r0, r1
 801032a:	9101      	str	r1, [sp, #4]
 801032c:	f7fe f824 	bl	800e378 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010330:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010332:	4b0a      	ldr	r3, [pc, #40]	; (801035c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010334:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8010336:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010338:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 801033a:	4290      	cmp	r0, r2
 801033c:	bf88      	it	hi
 801033e:	6018      	strhi	r0, [r3, #0]
 8010340:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8010344:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 8010348:	9901      	ldr	r1, [sp, #4]
 801034a:	f7fd ffed 	bl	800e328 <vListInsertEnd>
				xReturn = pdTRUE;
 801034e:	2001      	movs	r0, #1
 8010350:	e7de      	b.n	8010310 <xTaskPriorityInherit+0x3c>
 8010352:	bf00      	nop
 8010354:	20013208 	.word	0x20013208
 8010358:	20013214 	.word	0x20013214
 801035c:	20013684 	.word	0x20013684

08010360 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 8010360:	b318      	cbz	r0, 80103aa <xTaskPriorityDisinherit+0x4a>
	{
 8010362:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 8010364:	4b1e      	ldr	r3, [pc, #120]	; (80103e0 <xTaskPriorityDisinherit+0x80>)
 8010366:	681c      	ldr	r4, [r3, #0]
 8010368:	4284      	cmp	r4, r0
	{
 801036a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 801036c:	d008      	beq.n	8010380 <xTaskPriorityDisinherit+0x20>
 801036e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010372:	f383 8811 	msr	BASEPRI, r3
 8010376:	f3bf 8f6f 	isb	sy
 801037a:	f3bf 8f4f 	dsb	sy
 801037e:	e7fe      	b.n	801037e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8010380:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010382:	b14b      	cbz	r3, 8010398 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010384:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010386:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8010388:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801038a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 801038c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801038e:	d000      	beq.n	8010392 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8010390:	b16b      	cbz	r3, 80103ae <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8010392:	2000      	movs	r0, #0
	}
 8010394:	b002      	add	sp, #8
 8010396:	bd10      	pop	{r4, pc}
 8010398:	f04f 0350 	mov.w	r3, #80	; 0x50
 801039c:	f383 8811 	msr	BASEPRI, r3
 80103a0:	f3bf 8f6f 	isb	sy
 80103a4:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 80103a8:	e7fe      	b.n	80103a8 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 80103aa:	2000      	movs	r0, #0
	}
 80103ac:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80103ae:	1d21      	adds	r1, r4, #4
 80103b0:	4608      	mov	r0, r1
 80103b2:	9101      	str	r1, [sp, #4]
 80103b4:	f7fd ffe0 	bl	800e378 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80103b8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 80103ba:	4a0a      	ldr	r2, [pc, #40]	; (80103e4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80103bc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80103be:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 80103c2:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80103c4:	6810      	ldr	r0, [r2, #0]
 80103c6:	9901      	ldr	r1, [sp, #4]
 80103c8:	4283      	cmp	r3, r0
 80103ca:	4807      	ldr	r0, [pc, #28]	; (80103e8 <xTaskPriorityDisinherit+0x88>)
 80103cc:	bf88      	it	hi
 80103ce:	6013      	strhi	r3, [r2, #0]
 80103d0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80103d4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 80103d8:	f7fd ffa6 	bl	800e328 <vListInsertEnd>
					xReturn = pdTRUE;
 80103dc:	2001      	movs	r0, #1
		return xReturn;
 80103de:	e7d9      	b.n	8010394 <xTaskPriorityDisinherit+0x34>
 80103e0:	20013208 	.word	0x20013208
 80103e4:	20013684 	.word	0x20013684
 80103e8:	20013214 	.word	0x20013214

080103ec <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 80103ec:	2800      	cmp	r0, #0
 80103ee:	d041      	beq.n	8010474 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 80103f0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 80103f2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 80103f4:	b083      	sub	sp, #12
 80103f6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 80103f8:	b153      	cbz	r3, 8010410 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 80103fa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 80103fc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80103fe:	4281      	cmp	r1, r0
 8010400:	bf38      	it	cc
 8010402:	4601      	movcc	r1, r0
 8010404:	428a      	cmp	r2, r1
 8010406:	d001      	beq.n	801040c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010408:	2b01      	cmp	r3, #1
 801040a:	d00a      	beq.n	8010422 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 801040c:	b003      	add	sp, #12
 801040e:	bd30      	pop	{r4, r5, pc}
 8010410:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010414:	f383 8811 	msr	BASEPRI, r3
 8010418:	f3bf 8f6f 	isb	sy
 801041c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010420:	e7fe      	b.n	8010420 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 8010422:	4b19      	ldr	r3, [pc, #100]	; (8010488 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 8010424:	681b      	ldr	r3, [r3, #0]
 8010426:	42a3      	cmp	r3, r4
 8010428:	d025      	beq.n	8010476 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801042a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 801042c:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 801042e:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010430:	bfa8      	it	ge
 8010432:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8010436:	4d15      	ldr	r5, [pc, #84]	; (801048c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010438:	bfa8      	it	ge
 801043a:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 801043c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8010440:	6961      	ldr	r1, [r4, #20]
 8010442:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 8010446:	4299      	cmp	r1, r3
 8010448:	d1e0      	bne.n	801040c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801044a:	1d21      	adds	r1, r4, #4
 801044c:	4608      	mov	r0, r1
 801044e:	9101      	str	r1, [sp, #4]
 8010450:	f7fd ff92 	bl	800e378 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8010454:	4b0e      	ldr	r3, [pc, #56]	; (8010490 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 8010456:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8010458:	681a      	ldr	r2, [r3, #0]
 801045a:	9901      	ldr	r1, [sp, #4]
 801045c:	4290      	cmp	r0, r2
 801045e:	bf88      	it	hi
 8010460:	6018      	strhi	r0, [r3, #0]
 8010462:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8010466:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 801046a:	b003      	add	sp, #12
 801046c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8010470:	f7fd bf5a 	b.w	800e328 <vListInsertEnd>
 8010474:	4770      	bx	lr
 8010476:	f04f 0350 	mov.w	r3, #80	; 0x50
 801047a:	f383 8811 	msr	BASEPRI, r3
 801047e:	f3bf 8f6f 	isb	sy
 8010482:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8010486:	e7fe      	b.n	8010486 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8010488:	20013208 	.word	0x20013208
 801048c:	20013214 	.word	0x20013214
 8010490:	20013684 	.word	0x20013684

08010494 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8010494:	4b04      	ldr	r3, [pc, #16]	; (80104a8 <pvTaskIncrementMutexHeldCount+0x14>)
 8010496:	681a      	ldr	r2, [r3, #0]
 8010498:	b11a      	cbz	r2, 80104a2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801049a:	6819      	ldr	r1, [r3, #0]
 801049c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801049e:	3201      	adds	r2, #1
 80104a0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80104a2:	6818      	ldr	r0, [r3, #0]
	}
 80104a4:	4770      	bx	lr
 80104a6:	bf00      	nop
 80104a8:	20013208 	.word	0x20013208

080104ac <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 80104ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80104b0:	4e22      	ldr	r6, [pc, #136]	; (801053c <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 80104b2:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8010544 <prvSwitchTimerLists+0x98>
{
 80104b6:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 80104b8:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80104bc:	e00d      	b.n	80104da <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80104be:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80104c0:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80104c2:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80104c4:	1d25      	adds	r5, r4, #4
 80104c6:	4628      	mov	r0, r5
 80104c8:	f7fd ff56 	bl	800e378 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80104cc:	6a23      	ldr	r3, [r4, #32]
 80104ce:	4620      	mov	r0, r4
 80104d0:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80104d2:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80104d6:	075b      	lsls	r3, r3, #29
 80104d8:	d40a      	bmi.n	80104f0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 80104da:	6833      	ldr	r3, [r6, #0]
 80104dc:	681a      	ldr	r2, [r3, #0]
 80104de:	2a00      	cmp	r2, #0
 80104e0:	d1ed      	bne.n	80104be <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 80104e2:	4a17      	ldr	r2, [pc, #92]	; (8010540 <prvSwitchTimerLists+0x94>)
 80104e4:	6811      	ldr	r1, [r2, #0]
 80104e6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 80104e8:	6013      	str	r3, [r2, #0]
}
 80104ea:	b005      	add	sp, #20
 80104ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 80104f0:	69a3      	ldr	r3, [r4, #24]
 80104f2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 80104f4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80104f6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 80104f8:	d205      	bcs.n	8010506 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80104fa:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 80104fc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80104fe:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010500:	f7fd ff22 	bl	800e348 <vListInsert>
 8010504:	e7e9      	b.n	80104da <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8010506:	f8d9 3000 	ldr.w	r3, [r9]
 801050a:	b16b      	cbz	r3, 8010528 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801050c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010510:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010512:	f7ff fecf 	bl	80102b4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010516:	2300      	movs	r3, #0
 8010518:	f8d9 0000 	ldr.w	r0, [r9]
 801051c:	461a      	mov	r2, r3
 801051e:	4669      	mov	r1, sp
 8010520:	f7fe fa9c 	bl	800ea5c <xQueueGenericSend>
				configASSERT( xResult );
 8010524:	2800      	cmp	r0, #0
 8010526:	d1d8      	bne.n	80104da <prvSwitchTimerLists+0x2e>
 8010528:	f04f 0350 	mov.w	r3, #80	; 0x50
 801052c:	f383 8811 	msr	BASEPRI, r3
 8010530:	f3bf 8f6f 	isb	sy
 8010534:	f3bf 8f4f 	dsb	sy
 8010538:	e7fe      	b.n	8010538 <prvSwitchTimerLists+0x8c>
 801053a:	bf00      	nop
 801053c:	20013704 	.word	0x20013704
 8010540:	20013708 	.word	0x20013708
 8010544:	20013828 	.word	0x20013828

08010548 <prvTimerTask>:
{
 8010548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801054c:	4e9b      	ldr	r6, [pc, #620]	; (80107bc <prvTimerTask+0x274>)
 801054e:	4d9c      	ldr	r5, [pc, #624]	; (80107c0 <prvTimerTask+0x278>)
 8010550:	4c9c      	ldr	r4, [pc, #624]	; (80107c4 <prvTimerTask+0x27c>)
 8010552:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 8010554:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 8010558:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 801055c:	6833      	ldr	r3, [r6, #0]
 801055e:	681f      	ldr	r7, [r3, #0]
 8010560:	2f00      	cmp	r7, #0
 8010562:	f000 80a8 	beq.w	80106b6 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010566:	68db      	ldr	r3, [r3, #12]
 8010568:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 801056a:	f7ff fcf9 	bl	800ff60 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801056e:	f7ff fd0f 	bl	800ff90 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010572:	682a      	ldr	r2, [r5, #0]
 8010574:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 8010576:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010578:	f0c0 80ae 	bcc.w	80106d8 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 801057c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 801057e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8010580:	f240 80b4 	bls.w	80106ec <prvTimerTask+0x1a4>
 8010584:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8010586:	6820      	ldr	r0, [r4, #0]
 8010588:	eba7 010a 	sub.w	r1, r7, sl
 801058c:	f7ff f89a 	bl	800f6c4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8010590:	f7ff fcee 	bl	800ff70 <xTaskResumeAll>
 8010594:	b928      	cbnz	r0, 80105a2 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8010596:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801059a:	f3bf 8f4f 	dsb	sy
 801059e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80105a2:	6820      	ldr	r0, [r4, #0]
 80105a4:	2200      	movs	r2, #0
 80105a6:	a902      	add	r1, sp, #8
 80105a8:	f7fe fc94 	bl	800eed4 <xQueueReceive>
 80105ac:	2800      	cmp	r0, #0
 80105ae:	d0d5      	beq.n	801055c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80105b0:	9b02      	ldr	r3, [sp, #8]
 80105b2:	2b00      	cmp	r3, #0
 80105b4:	db76      	blt.n	80106a4 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80105b6:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80105b8:	697b      	ldr	r3, [r7, #20]
 80105ba:	b113      	cbz	r3, 80105c2 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80105bc:	1d38      	adds	r0, r7, #4
 80105be:	f7fd fedb 	bl	800e378 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 80105c2:	f7ff fce5 	bl	800ff90 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80105c6:	682b      	ldr	r3, [r5, #0]
 80105c8:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80105ca:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80105cc:	f0c0 808b 	bcc.w	80106e6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 80105d0:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 80105d2:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 80105d6:	2b09      	cmp	r3, #9
 80105d8:	d8e3      	bhi.n	80105a2 <prvTimerTask+0x5a>
 80105da:	e8df f003 	tbb	[pc, r3]
 80105de:	0505      	.short	0x0505
 80105e0:	5a3d5305 	.word	0x5a3d5305
 80105e4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80105e8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80105ec:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80105ee:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80105f0:	f043 0301 	orr.w	r3, r3, #1
 80105f4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80105f8:	9b03      	ldr	r3, [sp, #12]
 80105fa:	1899      	adds	r1, r3, r2
 80105fc:	bf2c      	ite	cs
 80105fe:	2001      	movcs	r0, #1
 8010600:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010602:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010604:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010606:	f200 808c 	bhi.w	8010722 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801060a:	ebaa 0303 	sub.w	r3, sl, r3
 801060e:	429a      	cmp	r2, r3
 8010610:	d832      	bhi.n	8010678 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010612:	6a3b      	ldr	r3, [r7, #32]
 8010614:	4638      	mov	r0, r7
 8010616:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010618:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801061c:	075b      	lsls	r3, r3, #29
 801061e:	d5c0      	bpl.n	80105a2 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 8010620:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010622:	9903      	ldr	r1, [sp, #12]
 8010624:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 8010626:	b172      	cbz	r2, 8010646 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8010628:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 801062a:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 801062e:	2300      	movs	r3, #0
 8010630:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010632:	f7ff fe3f 	bl	80102b4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010636:	2300      	movs	r3, #0
 8010638:	6820      	ldr	r0, [r4, #0]
 801063a:	461a      	mov	r2, r3
 801063c:	a906      	add	r1, sp, #24
 801063e:	f7fe fa0d 	bl	800ea5c <xQueueGenericSend>
							configASSERT( xResult );
 8010642:	2800      	cmp	r0, #0
 8010644:	d1ad      	bne.n	80105a2 <prvTimerTask+0x5a>
 8010646:	f04f 0350 	mov.w	r3, #80	; 0x50
 801064a:	f383 8811 	msr	BASEPRI, r3
 801064e:	f3bf 8f6f 	isb	sy
 8010652:	f3bf 8f4f 	dsb	sy
 8010656:	e7fe      	b.n	8010656 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010658:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801065c:	f043 0301 	orr.w	r3, r3, #1
 8010660:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8010664:	9b03      	ldr	r3, [sp, #12]
 8010666:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010668:	2b00      	cmp	r3, #0
 801066a:	f000 809d 	beq.w	80107a8 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 801066e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8010670:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010672:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010674:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8010676:	d85e      	bhi.n	8010736 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010678:	4b53      	ldr	r3, [pc, #332]	; (80107c8 <prvTimerTask+0x280>)
 801067a:	1d39      	adds	r1, r7, #4
 801067c:	6818      	ldr	r0, [r3, #0]
 801067e:	f7fd fe63 	bl	800e348 <vListInsert>
	return xProcessTimerNow;
 8010682:	e78e      	b.n	80105a2 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010684:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010688:	f023 0301 	bic.w	r3, r3, #1
 801068c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010690:	e787      	b.n	80105a2 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010692:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010696:	079a      	lsls	r2, r3, #30
 8010698:	d552      	bpl.n	8010740 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801069a:	f023 0301 	bic.w	r3, r3, #1
 801069e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 80106a2:	e77e      	b.n	80105a2 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80106a4:	9b03      	ldr	r3, [sp, #12]
 80106a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80106aa:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80106ac:	9b02      	ldr	r3, [sp, #8]
 80106ae:	2b00      	cmp	r3, #0
 80106b0:	f6ff af77 	blt.w	80105a2 <prvTimerTask+0x5a>
 80106b4:	e77f      	b.n	80105b6 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 80106b6:	f7ff fc53 	bl	800ff60 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80106ba:	f7ff fc69 	bl	800ff90 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80106be:	682a      	ldr	r2, [r5, #0]
 80106c0:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 80106c2:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80106c4:	d808      	bhi.n	80106d8 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80106c6:	4b40      	ldr	r3, [pc, #256]	; (80107c8 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 80106c8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80106cc:	681a      	ldr	r2, [r3, #0]
 80106ce:	6812      	ldr	r2, [r2, #0]
 80106d0:	fab2 f282 	clz	r2, r2
 80106d4:	0952      	lsrs	r2, r2, #5
 80106d6:	e756      	b.n	8010586 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 80106d8:	f7ff fee8 	bl	80104ac <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80106dc:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 80106e0:	f7ff fc46 	bl	800ff70 <xTaskResumeAll>
 80106e4:	e75d      	b.n	80105a2 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 80106e6:	f7ff fee1 	bl	80104ac <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 80106ea:	e771      	b.n	80105d0 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 80106ec:	f7ff fc40 	bl	800ff70 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80106f0:	6832      	ldr	r2, [r6, #0]
 80106f2:	68d2      	ldr	r2, [r2, #12]
 80106f4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80106f8:	f10b 0104 	add.w	r1, fp, #4
 80106fc:	4608      	mov	r0, r1
 80106fe:	9101      	str	r1, [sp, #4]
 8010700:	f7fd fe3a 	bl	800e378 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010704:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010708:	9901      	ldr	r1, [sp, #4]
 801070a:	f010 0f04 	tst.w	r0, #4
 801070e:	d11b      	bne.n	8010748 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010710:	f020 0001 	bic.w	r0, r0, #1
 8010714:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010718:	f8db 3020 	ldr.w	r3, [fp, #32]
 801071c:	4658      	mov	r0, fp
 801071e:	4798      	blx	r3
}
 8010720:	e73f      	b.n	80105a2 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8010722:	4553      	cmp	r3, sl
 8010724:	d902      	bls.n	801072c <prvTimerTask+0x1e4>
 8010726:	2800      	cmp	r0, #0
 8010728:	f43f af73 	beq.w	8010612 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801072c:	6830      	ldr	r0, [r6, #0]
 801072e:	1d39      	adds	r1, r7, #4
 8010730:	f7fd fe0a 	bl	800e348 <vListInsert>
	return xProcessTimerNow;
 8010734:	e735      	b.n	80105a2 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010736:	6830      	ldr	r0, [r6, #0]
 8010738:	1d39      	adds	r1, r7, #4
 801073a:	f7fd fe05 	bl	800e348 <vListInsert>
 801073e:	e730      	b.n	80105a2 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 8010740:	4638      	mov	r0, r7
 8010742:	f7fd fd7d 	bl	800e240 <vPortFree>
 8010746:	e72c      	b.n	80105a2 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010748:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801074c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8010750:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 8010752:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010754:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010758:	d903      	bls.n	8010762 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801075a:	6830      	ldr	r0, [r6, #0]
 801075c:	f7fd fdf4 	bl	800e348 <vListInsert>
	return xProcessTimerNow;
 8010760:	e7da      	b.n	8010718 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8010762:	ebaa 0307 	sub.w	r3, sl, r7
 8010766:	429a      	cmp	r2, r3
 8010768:	d819      	bhi.n	801079e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 801076a:	6823      	ldr	r3, [r4, #0]
 801076c:	b173      	cbz	r3, 801078c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 801076e:	2300      	movs	r3, #0
 8010770:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8010772:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010774:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010778:	f7ff fd9c 	bl	80102b4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801077c:	2300      	movs	r3, #0
 801077e:	6820      	ldr	r0, [r4, #0]
 8010780:	461a      	mov	r2, r3
 8010782:	a906      	add	r1, sp, #24
 8010784:	f7fe f96a 	bl	800ea5c <xQueueGenericSend>
			configASSERT( xResult );
 8010788:	2800      	cmp	r0, #0
 801078a:	d1c5      	bne.n	8010718 <prvTimerTask+0x1d0>
 801078c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010790:	f383 8811 	msr	BASEPRI, r3
 8010794:	f3bf 8f6f 	isb	sy
 8010798:	f3bf 8f4f 	dsb	sy
 801079c:	e7fe      	b.n	801079c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801079e:	4b0a      	ldr	r3, [pc, #40]	; (80107c8 <prvTimerTask+0x280>)
 80107a0:	6818      	ldr	r0, [r3, #0]
 80107a2:	f7fd fdd1 	bl	800e348 <vListInsert>
	return xProcessTimerNow;
 80107a6:	e7b7      	b.n	8010718 <prvTimerTask+0x1d0>
 80107a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80107ac:	f383 8811 	msr	BASEPRI, r3
 80107b0:	f3bf 8f6f 	isb	sy
 80107b4:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80107b8:	e7fe      	b.n	80107b8 <prvTimerTask+0x270>
 80107ba:	bf00      	nop
 80107bc:	20013704 	.word	0x20013704
 80107c0:	200137d4 	.word	0x200137d4
 80107c4:	20013828 	.word	0x20013828
 80107c8:	20013708 	.word	0x20013708

080107cc <xTimerCreateTimerTask>:
{
 80107cc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80107ce:	4c23      	ldr	r4, [pc, #140]	; (801085c <xTimerCreateTimerTask+0x90>)
{
 80107d0:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 80107d2:	f7fd fe4f 	bl	800e474 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80107d6:	6825      	ldr	r5, [r4, #0]
 80107d8:	b335      	cbz	r5, 8010828 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 80107da:	f7fd fe6d 	bl	800e4b8 <vPortExitCritical>
	if( xTimerQueue != NULL )
 80107de:	6823      	ldr	r3, [r4, #0]
 80107e0:	b1cb      	cbz	r3, 8010816 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 80107e2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80107e4:	aa07      	add	r2, sp, #28
 80107e6:	a906      	add	r1, sp, #24
 80107e8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 80107ea:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 80107ee:	f7fd fc5b 	bl	800e0a8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 80107f2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 80107f6:	2302      	movs	r3, #2
 80107f8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80107fc:	9300      	str	r3, [sp, #0]
 80107fe:	9a07      	ldr	r2, [sp, #28]
 8010800:	4917      	ldr	r1, [pc, #92]	; (8010860 <xTimerCreateTimerTask+0x94>)
 8010802:	4818      	ldr	r0, [pc, #96]	; (8010864 <xTimerCreateTimerTask+0x98>)
 8010804:	4623      	mov	r3, r4
 8010806:	f7ff fa6d 	bl	800fce4 <xTaskCreateStatic>
 801080a:	4b17      	ldr	r3, [pc, #92]	; (8010868 <xTimerCreateTimerTask+0x9c>)
 801080c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801080e:	b110      	cbz	r0, 8010816 <xTimerCreateTimerTask+0x4a>
}
 8010810:	2001      	movs	r0, #1
 8010812:	b009      	add	sp, #36	; 0x24
 8010814:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010816:	f04f 0350 	mov.w	r3, #80	; 0x50
 801081a:	f383 8811 	msr	BASEPRI, r3
 801081e:	f3bf 8f6f 	isb	sy
 8010822:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8010826:	e7fe      	b.n	8010826 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 8010828:	4f10      	ldr	r7, [pc, #64]	; (801086c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 801082a:	4e11      	ldr	r6, [pc, #68]	; (8010870 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 801082c:	4638      	mov	r0, r7
 801082e:	f7fd fd6b 	bl	800e308 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8010832:	4630      	mov	r0, r6
 8010834:	f7fd fd68 	bl	800e308 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8010838:	4a0e      	ldr	r2, [pc, #56]	; (8010874 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 801083a:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 801083c:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 801083e:	4a0e      	ldr	r2, [pc, #56]	; (8010878 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010840:	4b0e      	ldr	r3, [pc, #56]	; (801087c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 8010842:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8010844:	2110      	movs	r1, #16
 8010846:	4a0e      	ldr	r2, [pc, #56]	; (8010880 <xTimerCreateTimerTask+0xb4>)
 8010848:	200a      	movs	r0, #10
 801084a:	f7fd ffb1 	bl	800e7b0 <xQueueGenericCreateStatic>
 801084e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 8010850:	2800      	cmp	r0, #0
 8010852:	d0c2      	beq.n	80107da <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8010854:	490b      	ldr	r1, [pc, #44]	; (8010884 <xTimerCreateTimerTask+0xb8>)
 8010856:	f7fe ff0d 	bl	800f674 <vQueueAddToRegistry>
 801085a:	e7be      	b.n	80107da <xTimerCreateTimerTask+0xe>
 801085c:	20013828 	.word	0x20013828
 8010860:	0802f6b4 	.word	0x0802f6b4
 8010864:	08010549 	.word	0x08010549
 8010868:	2001382c 	.word	0x2001382c
 801086c:	200137ac 	.word	0x200137ac
 8010870:	200137c0 	.word	0x200137c0
 8010874:	20013704 	.word	0x20013704
 8010878:	20013708 	.word	0x20013708
 801087c:	200137d8 	.word	0x200137d8
 8010880:	2001370c 	.word	0x2001370c
 8010884:	0802f6ac 	.word	0x0802f6ac

08010888 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010888:	8880      	ldrh	r0, [r0, #4]
 801088a:	4770      	bx	lr

0801088c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801088c:	b570      	push	{r4, r5, r6, lr}
 801088e:	6803      	ldr	r3, [r0, #0]
 8010890:	4605      	mov	r5, r0
 8010892:	460c      	mov	r4, r1
 8010894:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010896:	2100      	movs	r1, #0
 8010898:	4798      	blx	r3
 801089a:	682b      	ldr	r3, [r5, #0]
 801089c:	4606      	mov	r6, r0
 801089e:	6a1b      	ldr	r3, [r3, #32]
 80108a0:	4628      	mov	r0, r5
 80108a2:	4798      	blx	r3
 80108a4:	1ba4      	subs	r4, r4, r6
 80108a6:	b2a4      	uxth	r4, r4
 80108a8:	fbb4 f0f0 	udiv	r0, r4, r0
 80108ac:	bd70      	pop	{r4, r5, r6, pc}

080108ae <_ZN8touchgfx17AbstractPartition5clearEv>:
 80108ae:	2300      	movs	r3, #0
 80108b0:	8083      	strh	r3, [r0, #4]
 80108b2:	4770      	bx	lr

080108b4 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80108b4:	b510      	push	{r4, lr}
 80108b6:	6803      	ldr	r3, [r0, #0]
 80108b8:	8881      	ldrh	r1, [r0, #4]
 80108ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80108bc:	4604      	mov	r4, r0
 80108be:	4798      	blx	r3
 80108c0:	88a3      	ldrh	r3, [r4, #4]
 80108c2:	3301      	adds	r3, #1
 80108c4:	80a3      	strh	r3, [r4, #4]
 80108c6:	bd10      	pop	{r4, pc}

080108c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80108c8:	6803      	ldr	r3, [r0, #0]
 80108ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80108cc:	4718      	bx	r3

080108ce <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80108ce:	4770      	bx	lr

080108d0 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80108d0:	4a02      	ldr	r2, [pc, #8]	; (80108dc <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80108d2:	6002      	str	r2, [r0, #0]
 80108d4:	2200      	movs	r2, #0
 80108d6:	8082      	strh	r2, [r0, #4]
 80108d8:	4770      	bx	lr
 80108da:	bf00      	nop
 80108dc:	0802f6c4 	.word	0x0802f6c4

080108e0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 80108e0:	b510      	push	{r4, lr}
 80108e2:	6803      	ldr	r3, [r0, #0]
 80108e4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80108e8:	4604      	mov	r4, r0
 80108ea:	4798      	blx	r3
 80108ec:	b110      	cbz	r0, 80108f4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 80108ee:	4620      	mov	r0, r4
 80108f0:	f7f1 ff1a 	bl	8002728 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80108f4:	bd10      	pop	{r4, pc}

080108f6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 80108f6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 80108fa:	4770      	bx	lr

080108fc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 80108fc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010900:	4770      	bx	lr

08010902 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010902:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010906:	4770      	bx	lr

08010908 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010908:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801090c:	4770      	bx	lr

0801090e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801090e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010910:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010914:	461e      	mov	r6, r3
 8010916:	6803      	ldr	r3, [r0, #0]
 8010918:	460f      	mov	r7, r1
 801091a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801091e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 8010922:	4604      	mov	r4, r0
 8010924:	4615      	mov	r5, r2
 8010926:	4798      	blx	r3
 8010928:	b93e      	cbnz	r6, 801093a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 801092a:	1bed      	subs	r5, r5, r7
 801092c:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 8010930:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8010934:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8010938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801093a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 801093e:	e7f7      	b.n	8010930 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08010940 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8010940:	b510      	push	{r4, lr}
 8010942:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010946:	600c      	str	r4, [r1, #0]
 8010948:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801094c:	6011      	str	r1, [r2, #0]
 801094e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010952:	801a      	strh	r2, [r3, #0]
 8010954:	9b02      	ldr	r3, [sp, #8]
 8010956:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 801095a:	801a      	strh	r2, [r3, #0]
 801095c:	bd10      	pop	{r4, pc}

0801095e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 801095e:	b510      	push	{r4, lr}
 8010960:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 8010964:	600c      	str	r4, [r1, #0]
 8010966:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801096a:	6011      	str	r1, [r2, #0]
 801096c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010970:	801a      	strh	r2, [r3, #0]
 8010972:	bd10      	pop	{r4, pc}

08010974 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010974:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010978:	600b      	str	r3, [r1, #0]
 801097a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801097e:	6013      	str	r3, [r2, #0]
 8010980:	4770      	bx	lr

08010982 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010982:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010986:	4770      	bx	lr

08010988 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010988:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801098c:	4770      	bx	lr

0801098e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801098e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010992:	4770      	bx	lr

08010994 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010994:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010998:	4770      	bx	lr

0801099a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801099a:	4770      	bx	lr

0801099c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801099c:	b510      	push	{r4, lr}
 801099e:	21b4      	movs	r1, #180	; 0xb4
 80109a0:	4604      	mov	r4, r0
 80109a2:	f01a fb02 	bl	802afaa <_ZdlPvj>
 80109a6:	4620      	mov	r0, r4
 80109a8:	bd10      	pop	{r4, pc}

080109aa <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 80109aa:	b570      	push	{r4, r5, r6, lr}
 80109ac:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 80109b0:	428d      	cmp	r5, r1
 80109b2:	bfb8      	it	lt
 80109b4:	460d      	movlt	r5, r1
 80109b6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80109ba:	428d      	cmp	r5, r1
 80109bc:	4604      	mov	r4, r0
 80109be:	bfa8      	it	ge
 80109c0:	460d      	movge	r5, r1
 80109c2:	4616      	mov	r6, r2
 80109c4:	b99a      	cbnz	r2, 80109ee <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 80109c6:	6803      	ldr	r3, [r0, #0]
 80109c8:	4629      	mov	r1, r5
 80109ca:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80109ce:	4798      	blx	r3
 80109d0:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80109d4:	b368      	cbz	r0, 8010a32 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80109d6:	6803      	ldr	r3, [r0, #0]
 80109d8:	68db      	ldr	r3, [r3, #12]
 80109da:	4798      	blx	r3
 80109dc:	b348      	cbz	r0, 8010a32 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 80109de:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80109e2:	6803      	ldr	r3, [r0, #0]
 80109e4:	4621      	mov	r1, r4
 80109e6:	689b      	ldr	r3, [r3, #8]
 80109e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109ec:	4718      	bx	r3
 80109ee:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80109f2:	2b00      	cmp	r3, #0
 80109f4:	dd08      	ble.n	8010a08 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 80109f6:	f006 fa23 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 80109fa:	4621      	mov	r1, r4
 80109fc:	3004      	adds	r0, #4
 80109fe:	f006 fa6c 	bl	8016eda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010a02:	2300      	movs	r3, #0
 8010a04:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010a08:	6823      	ldr	r3, [r4, #0]
 8010a0a:	4620      	mov	r0, r4
 8010a0c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010a10:	4798      	blx	r3
 8010a12:	2300      	movs	r3, #0
 8010a14:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010a18:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 8010a1c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 8010a20:	f006 fa0e 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8010a24:	4621      	mov	r1, r4
 8010a26:	3004      	adds	r0, #4
 8010a28:	f006 fb00 	bl	801702c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010a2c:	2301      	movs	r3, #1
 8010a2e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010a32:	bd70      	pop	{r4, r5, r6, pc}

08010a34 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8010a34:	b510      	push	{r4, lr}
 8010a36:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010a3a:	4299      	cmp	r1, r3
 8010a3c:	bfb8      	it	lt
 8010a3e:	4619      	movlt	r1, r3
 8010a40:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 8010a44:	4299      	cmp	r1, r3
 8010a46:	bfa8      	it	ge
 8010a48:	4619      	movge	r1, r3
 8010a4a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 8010a4e:	428b      	cmp	r3, r1
 8010a50:	4604      	mov	r4, r0
 8010a52:	d010      	beq.n	8010a76 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010a54:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 8010a58:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 8010a5c:	b158      	cbz	r0, 8010a76 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010a5e:	6803      	ldr	r3, [r0, #0]
 8010a60:	68db      	ldr	r3, [r3, #12]
 8010a62:	4798      	blx	r3
 8010a64:	b138      	cbz	r0, 8010a76 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8010a66:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8010a6a:	6803      	ldr	r3, [r0, #0]
 8010a6c:	4621      	mov	r1, r4
 8010a6e:	689b      	ldr	r3, [r3, #8]
 8010a70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a74:	4718      	bx	r3
 8010a76:	bd10      	pop	{r4, pc}

08010a78 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010a78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a7a:	4604      	mov	r4, r0
 8010a7c:	460d      	mov	r5, r1
 8010a7e:	b1a9      	cbz	r1, 8010aac <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010a80:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010a84:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010a88:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 8010a8c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010a90:	ab01      	add	r3, sp, #4
 8010a92:	1a12      	subs	r2, r2, r0
 8010a94:	1b89      	subs	r1, r1, r6
 8010a96:	1a38      	subs	r0, r7, r0
 8010a98:	f007 fc88 	bl	80183ac <_ZN8touchgfx6muldivElllRl>
 8010a9c:	4629      	mov	r1, r5
 8010a9e:	ab01      	add	r3, sp, #4
 8010aa0:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010aa4:	4430      	add	r0, r6
 8010aa6:	f007 fc81 	bl	80183ac <_ZN8touchgfx6muldivElllRl>
 8010aaa:	b285      	uxth	r5, r0
 8010aac:	4628      	mov	r0, r5
 8010aae:	b003      	add	sp, #12
 8010ab0:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010ab2 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010ab2:	b570      	push	{r4, r5, r6, lr}
 8010ab4:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010ab8:	4604      	mov	r4, r0
 8010aba:	2b00      	cmp	r3, #0
 8010abc:	d035      	beq.n	8010b2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010abe:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010ac2:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010ac6:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 8010aca:	3001      	adds	r0, #1
 8010acc:	1ad2      	subs	r2, r2, r3
 8010ace:	b212      	sxth	r2, r2
 8010ad0:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010ad4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010ad8:	2100      	movs	r1, #0
 8010ada:	b280      	uxth	r0, r0
 8010adc:	47a8      	blx	r5
 8010ade:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010ae2:	6823      	ldr	r3, [r4, #0]
 8010ae4:	4401      	add	r1, r0
 8010ae6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8010aea:	4620      	mov	r0, r4
 8010aec:	4798      	blx	r3
 8010aee:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010af2:	429a      	cmp	r2, r3
 8010af4:	db19      	blt.n	8010b2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010af6:	2500      	movs	r5, #0
 8010af8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010afc:	f006 f9a0 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8010b00:	4621      	mov	r1, r4
 8010b02:	3004      	adds	r0, #4
 8010b04:	f006 f9e9 	bl	8016eda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010b08:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010b0c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010b10:	b158      	cbz	r0, 8010b2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010b12:	6803      	ldr	r3, [r0, #0]
 8010b14:	68db      	ldr	r3, [r3, #12]
 8010b16:	4798      	blx	r3
 8010b18:	b138      	cbz	r0, 8010b2a <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010b1a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010b1e:	6803      	ldr	r3, [r0, #0]
 8010b20:	4621      	mov	r1, r4
 8010b22:	689b      	ldr	r3, [r3, #8]
 8010b24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b28:	4718      	bx	r3
 8010b2a:	bd70      	pop	{r4, r5, r6, pc}

08010b2c <_ZN8touchgfx8DrawableC1Ev>:
 8010b2c:	4a0a      	ldr	r2, [pc, #40]	; (8010b58 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 8010b2e:	6002      	str	r2, [r0, #0]
 8010b30:	2200      	movs	r2, #0
 8010b32:	8082      	strh	r2, [r0, #4]
 8010b34:	80c2      	strh	r2, [r0, #6]
 8010b36:	8102      	strh	r2, [r0, #8]
 8010b38:	8142      	strh	r2, [r0, #10]
 8010b3a:	8182      	strh	r2, [r0, #12]
 8010b3c:	81c2      	strh	r2, [r0, #14]
 8010b3e:	8202      	strh	r2, [r0, #16]
 8010b40:	8242      	strh	r2, [r0, #18]
 8010b42:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010b46:	61c2      	str	r2, [r0, #28]
 8010b48:	8402      	strh	r2, [r0, #32]
 8010b4a:	8442      	strh	r2, [r0, #34]	; 0x22
 8010b4c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010b50:	2201      	movs	r2, #1
 8010b52:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8010b56:	4770      	bx	lr
 8010b58:	08030044 	.word	0x08030044

08010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 8010b5c:	b570      	push	{r4, r5, r6, lr}
 8010b5e:	6803      	ldr	r3, [r0, #0]
 8010b60:	4604      	mov	r4, r0
 8010b62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010b64:	4615      	mov	r5, r2
 8010b66:	4798      	blx	r3
 8010b68:	6823      	ldr	r3, [r4, #0]
 8010b6a:	4629      	mov	r1, r5
 8010b6c:	4620      	mov	r0, r4
 8010b6e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010b70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b74:	4718      	bx	r3

08010b76 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010b76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b7a:	4604      	mov	r4, r0
 8010b7c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010b80:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010b84:	460e      	mov	r6, r1
 8010b86:	4615      	mov	r5, r2
 8010b88:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8010b8c:	4619      	mov	r1, r3
 8010b8e:	463a      	mov	r2, r7
 8010b90:	3058      	adds	r0, #88	; 0x58
 8010b92:	4698      	mov	r8, r3
 8010b94:	f7ff ffe2 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010b98:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010b9c:	4446      	add	r6, r8
 8010b9e:	42b3      	cmp	r3, r6
 8010ba0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010ba4:	bfb8      	it	lt
 8010ba6:	8126      	strhlt	r6, [r4, #8]
 8010ba8:	443d      	add	r5, r7
 8010baa:	42ab      	cmp	r3, r5
 8010bac:	bfb8      	it	lt
 8010bae:	8165      	strhlt	r5, [r4, #10]
 8010bb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010bb4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010bb4:	b510      	push	{r4, lr}
 8010bb6:	4604      	mov	r4, r0
 8010bb8:	302c      	adds	r0, #44	; 0x2c
 8010bba:	f003 fc42 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010bbe:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010bc2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010bc6:	4620      	mov	r0, r4
 8010bc8:	f7ff ffc8 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010bcc:	bd10      	pop	{r4, pc}
	...

08010bd0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010bd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010bd2:	4604      	mov	r4, r0
 8010bd4:	4626      	mov	r6, r4
 8010bd6:	2500      	movs	r5, #0
 8010bd8:	f7ff ffa8 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 8010bdc:	4b23      	ldr	r3, [pc, #140]	; (8010c6c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8010bde:	62a5      	str	r5, [r4, #40]	; 0x28
 8010be0:	f846 3b2c 	str.w	r3, [r6], #44
 8010be4:	2226      	movs	r2, #38	; 0x26
 8010be6:	4629      	mov	r1, r5
 8010be8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010bec:	4630      	mov	r0, r6
 8010bee:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010bf2:	f01b f9f2 	bl	802bfda <memset>
 8010bf6:	4630      	mov	r0, r6
 8010bf8:	f7ff ff98 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 8010bfc:	a902      	add	r1, sp, #8
 8010bfe:	4b1c      	ldr	r3, [pc, #112]	; (8010c70 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010c00:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010c02:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010c06:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8010c0a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8010c0e:	4630      	mov	r0, r6
 8010c10:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010c14:	f003 fc15 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010c18:	4638      	mov	r0, r7
 8010c1a:	f7ff ff87 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 8010c1e:	4b15      	ldr	r3, [pc, #84]	; (8010c74 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010c20:	65a3      	str	r3, [r4, #88]	; 0x58
 8010c22:	2364      	movs	r3, #100	; 0x64
 8010c24:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010c28:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8010c2c:	4b12      	ldr	r3, [pc, #72]	; (8010c78 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8010c2e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010c32:	4629      	mov	r1, r5
 8010c34:	4630      	mov	r0, r6
 8010c36:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8010c3a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010c3e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010c42:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010c46:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8010c4a:	f7f1 fcc9 	bl	80025e0 <_ZN8touchgfx8Drawable4setXEs>
 8010c4e:	4629      	mov	r1, r5
 8010c50:	4630      	mov	r0, r6
 8010c52:	f7f1 fcc7 	bl	80025e4 <_ZN8touchgfx8Drawable4setYEs>
 8010c56:	4631      	mov	r1, r6
 8010c58:	4620      	mov	r0, r4
 8010c5a:	f000 f819 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010c5e:	4620      	mov	r0, r4
 8010c60:	4639      	mov	r1, r7
 8010c62:	f000 f815 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010c66:	4620      	mov	r0, r4
 8010c68:	b003      	add	sp, #12
 8010c6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c6c:	0802f6f8 	.word	0x0802f6f8
 8010c70:	0802ff00 	.word	0x0802ff00
 8010c74:	0802f7cc 	.word	0x0802f7cc
 8010c78:	08018b87 	.word	0x08018b87

08010c7c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8010c7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010c7e:	2000      	movs	r0, #0
 8010c80:	b12b      	cbz	r3, 8010c8e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010c82:	b920      	cbnz	r0, 8010c8e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010c84:	1a5a      	subs	r2, r3, r1
 8010c86:	4250      	negs	r0, r2
 8010c88:	4150      	adcs	r0, r2
 8010c8a:	699b      	ldr	r3, [r3, #24]
 8010c8c:	e7f8      	b.n	8010c80 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8010c8e:	4770      	bx	lr

08010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010c90:	2300      	movs	r3, #0
 8010c92:	6148      	str	r0, [r1, #20]
 8010c94:	618b      	str	r3, [r1, #24]
 8010c96:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010c98:	b913      	cbnz	r3, 8010ca0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010c9a:	6281      	str	r1, [r0, #40]	; 0x28
 8010c9c:	4770      	bx	lr
 8010c9e:	4613      	mov	r3, r2
 8010ca0:	699a      	ldr	r2, [r3, #24]
 8010ca2:	2a00      	cmp	r2, #0
 8010ca4:	d1fb      	bne.n	8010c9e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010ca6:	6199      	str	r1, [r3, #24]
 8010ca8:	4770      	bx	lr

08010caa <_ZN8touchgfx9Container9removeAllEv>:
 8010caa:	2200      	movs	r2, #0
 8010cac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010cae:	b123      	cbz	r3, 8010cba <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010cb0:	6999      	ldr	r1, [r3, #24]
 8010cb2:	6281      	str	r1, [r0, #40]	; 0x28
 8010cb4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010cb8:	e7f8      	b.n	8010cac <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010cba:	4770      	bx	lr

08010cbc <_ZN8touchgfx9Container6unlinkEv>:
 8010cbc:	2300      	movs	r3, #0
 8010cbe:	6283      	str	r3, [r0, #40]	; 0x28
 8010cc0:	4770      	bx	lr

08010cc2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010cc2:	2200      	movs	r2, #0
 8010cc4:	8002      	strh	r2, [r0, #0]
 8010cc6:	8042      	strh	r2, [r0, #2]
 8010cc8:	8082      	strh	r2, [r0, #4]
 8010cca:	80c2      	strh	r2, [r0, #6]
 8010ccc:	4770      	bx	lr

08010cce <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010cce:	b570      	push	{r4, r5, r6, lr}
 8010cd0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010cd2:	460d      	mov	r5, r1
 8010cd4:	4616      	mov	r6, r2
 8010cd6:	b13c      	cbz	r4, 8010ce8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010cd8:	6823      	ldr	r3, [r4, #0]
 8010cda:	4620      	mov	r0, r4
 8010cdc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010cde:	4632      	mov	r2, r6
 8010ce0:	4629      	mov	r1, r5
 8010ce2:	4798      	blx	r3
 8010ce4:	69a4      	ldr	r4, [r4, #24]
 8010ce6:	e7f6      	b.n	8010cd6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010ce8:	bd70      	pop	{r4, r5, r6, pc}

08010cea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010cea:	b538      	push	{r3, r4, r5, lr}
 8010cec:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010cee:	460d      	mov	r5, r1
 8010cf0:	b134      	cbz	r4, 8010d00 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010cf2:	682b      	ldr	r3, [r5, #0]
 8010cf4:	4621      	mov	r1, r4
 8010cf6:	689b      	ldr	r3, [r3, #8]
 8010cf8:	4628      	mov	r0, r5
 8010cfa:	4798      	blx	r3
 8010cfc:	69a4      	ldr	r4, [r4, #24]
 8010cfe:	e7f7      	b.n	8010cf0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010d00:	bd38      	pop	{r3, r4, r5, pc}

08010d02 <_ZN8touchgfx9ContainerD1Ev>:
 8010d02:	4770      	bx	lr

08010d04 <_ZN8touchgfx9ContainerD0Ev>:
 8010d04:	b510      	push	{r4, lr}
 8010d06:	212c      	movs	r1, #44	; 0x2c
 8010d08:	4604      	mov	r4, r0
 8010d0a:	f01a f94e 	bl	802afaa <_ZdlPvj>
 8010d0e:	4620      	mov	r0, r4
 8010d10:	bd10      	pop	{r4, pc}

08010d12 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010d12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010d14:	b19b      	cbz	r3, 8010d3e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010d16:	428b      	cmp	r3, r1
 8010d18:	d109      	bne.n	8010d2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010d1a:	699a      	ldr	r2, [r3, #24]
 8010d1c:	2100      	movs	r1, #0
 8010d1e:	6159      	str	r1, [r3, #20]
 8010d20:	6282      	str	r2, [r0, #40]	; 0x28
 8010d22:	b902      	cbnz	r2, 8010d26 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010d24:	4770      	bx	lr
 8010d26:	6199      	str	r1, [r3, #24]
 8010d28:	4770      	bx	lr
 8010d2a:	4613      	mov	r3, r2
 8010d2c:	b13a      	cbz	r2, 8010d3e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010d2e:	699a      	ldr	r2, [r3, #24]
 8010d30:	428a      	cmp	r2, r1
 8010d32:	d1fa      	bne.n	8010d2a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010d34:	698a      	ldr	r2, [r1, #24]
 8010d36:	619a      	str	r2, [r3, #24]
 8010d38:	2300      	movs	r3, #0
 8010d3a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010d3e:	4770      	bx	lr

08010d40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010d40:	b410      	push	{r4}
 8010d42:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010d44:	4604      	mov	r4, r0
 8010d46:	b92b      	cbnz	r3, 8010d54 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010d48:	6803      	ldr	r3, [r0, #0]
 8010d4a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010d4e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010d50:	4611      	mov	r1, r2
 8010d52:	4718      	bx	r3
 8010d54:	b941      	cbnz	r1, 8010d68 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010d56:	6193      	str	r3, [r2, #24]
 8010d58:	6282      	str	r2, [r0, #40]	; 0x28
 8010d5a:	6154      	str	r4, [r2, #20]
 8010d5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010d60:	4770      	bx	lr
 8010d62:	4603      	mov	r3, r0
 8010d64:	2800      	cmp	r0, #0
 8010d66:	d0f9      	beq.n	8010d5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010d68:	4299      	cmp	r1, r3
 8010d6a:	6998      	ldr	r0, [r3, #24]
 8010d6c:	d1f9      	bne.n	8010d62 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8010d6e:	6190      	str	r0, [r2, #24]
 8010d70:	618a      	str	r2, [r1, #24]
 8010d72:	e7f2      	b.n	8010d5a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010d74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010d74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010d78:	461f      	mov	r7, r3
 8010d7a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010d7e:	460d      	mov	r5, r1
 8010d80:	4616      	mov	r6, r2
 8010d82:	b103      	cbz	r3, 8010d86 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010d84:	6038      	str	r0, [r7, #0]
 8010d86:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010d88:	b314      	cbz	r4, 8010dd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010d8a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010d8e:	b1eb      	cbz	r3, 8010dcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010d90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010d94:	428d      	cmp	r5, r1
 8010d96:	db19      	blt.n	8010dcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010d98:	8923      	ldrh	r3, [r4, #8]
 8010d9a:	b289      	uxth	r1, r1
 8010d9c:	440b      	add	r3, r1
 8010d9e:	b21b      	sxth	r3, r3
 8010da0:	429d      	cmp	r5, r3
 8010da2:	da13      	bge.n	8010dcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010da4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010da8:	4296      	cmp	r6, r2
 8010daa:	db0f      	blt.n	8010dcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010dac:	8963      	ldrh	r3, [r4, #10]
 8010dae:	b292      	uxth	r2, r2
 8010db0:	4413      	add	r3, r2
 8010db2:	b21b      	sxth	r3, r3
 8010db4:	429e      	cmp	r6, r3
 8010db6:	da09      	bge.n	8010dcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010db8:	6823      	ldr	r3, [r4, #0]
 8010dba:	1ab2      	subs	r2, r6, r2
 8010dbc:	1a69      	subs	r1, r5, r1
 8010dbe:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010dc2:	b212      	sxth	r2, r2
 8010dc4:	463b      	mov	r3, r7
 8010dc6:	b209      	sxth	r1, r1
 8010dc8:	4620      	mov	r0, r4
 8010dca:	47c0      	blx	r8
 8010dcc:	69a4      	ldr	r4, [r4, #24]
 8010dce:	e7db      	b.n	8010d88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010dd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010dd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dd8:	4c6e      	ldr	r4, [pc, #440]	; (8010f94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010dda:	b0a1      	sub	sp, #132	; 0x84
 8010ddc:	6824      	ldr	r4, [r4, #0]
 8010dde:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010de0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010de4:	9303      	str	r3, [sp, #12]
 8010de6:	2400      	movs	r4, #0
 8010de8:	802c      	strh	r4, [r5, #0]
 8010dea:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8010dec:	802c      	strh	r4, [r5, #0]
 8010dee:	601c      	str	r4, [r3, #0]
 8010df0:	4606      	mov	r6, r0
 8010df2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010df6:	f7ff ffbd 	bl	8010d74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010dfa:	f1b9 0f03 	cmp.w	r9, #3
 8010dfe:	f340 80c2 	ble.w	8010f86 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010e02:	4631      	mov	r1, r6
 8010e04:	a80c      	add	r0, sp, #48	; 0x30
 8010e06:	f007 f99f 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e0a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010e0e:	9306      	str	r3, [sp, #24]
 8010e10:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010e14:	9307      	str	r3, [sp, #28]
 8010e16:	9b03      	ldr	r3, [sp, #12]
 8010e18:	f8d3 a000 	ldr.w	sl, [r3]
 8010e1c:	f1ba 0f00 	cmp.w	sl, #0
 8010e20:	f000 80b4 	beq.w	8010f8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010e24:	4651      	mov	r1, sl
 8010e26:	a810      	add	r0, sp, #64	; 0x40
 8010e28:	f007 f98e 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010e2c:	9b01      	ldr	r3, [sp, #4]
 8010e2e:	9a06      	ldr	r2, [sp, #24]
 8010e30:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010e34:	189d      	adds	r5, r3, r2
 8010e36:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010e3a:	9a07      	ldr	r2, [sp, #28]
 8010e3c:	2002      	movs	r0, #2
 8010e3e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010e42:	4419      	add	r1, r3
 8010e44:	1a6d      	subs	r5, r5, r1
 8010e46:	9b02      	ldr	r3, [sp, #8]
 8010e48:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010e4c:	4413      	add	r3, r2
 8010e4e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010e52:	fb92 f2f0 	sdiv	r2, r2, r0
 8010e56:	440a      	add	r2, r1
 8010e58:	1a9b      	subs	r3, r3, r2
 8010e5a:	435b      	muls	r3, r3
 8010e5c:	fb05 3505 	mla	r5, r5, r5, r3
 8010e60:	4f4d      	ldr	r7, [pc, #308]	; (8010f98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010e62:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010e64:	ac10      	add	r4, sp, #64	; 0x40
 8010e66:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010e68:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010e6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010e6c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010e6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010e70:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010e74:	f1b9 0f0c 	cmp.w	r9, #12
 8010e78:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010e7c:	f04f 0303 	mov.w	r3, #3
 8010e80:	bfc8      	it	gt
 8010e82:	4698      	movgt	r8, r3
 8010e84:	f8cd 9000 	str.w	r9, [sp]
 8010e88:	f04f 0400 	mov.w	r4, #0
 8010e8c:	bfdc      	itt	le
 8010e8e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010e92:	fb92 f8f3 	sdivle	r8, r2, r3
 8010e96:	1c63      	adds	r3, r4, #1
 8010e98:	aa10      	add	r2, sp, #64	; 0x40
 8010e9a:	f004 0401 	and.w	r4, r4, #1
 8010e9e:	9308      	str	r3, [sp, #32]
 8010ea0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010ea4:	9b00      	ldr	r3, [sp, #0]
 8010ea6:	fb93 f3f8 	sdiv	r3, r3, r8
 8010eaa:	b29b      	uxth	r3, r3
 8010eac:	3404      	adds	r4, #4
 8010eae:	f04f 0b00 	mov.w	fp, #0
 8010eb2:	9304      	str	r3, [sp, #16]
 8010eb4:	9a04      	ldr	r2, [sp, #16]
 8010eb6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010eba:	fb13 f302 	smulbb	r3, r3, r2
 8010ebe:	9a01      	ldr	r2, [sp, #4]
 8010ec0:	b29b      	uxth	r3, r3
 8010ec2:	1899      	adds	r1, r3, r2
 8010ec4:	9305      	str	r3, [sp, #20]
 8010ec6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010eca:	b209      	sxth	r1, r1
 8010ecc:	4299      	cmp	r1, r3
 8010ece:	db4d      	blt.n	8010f6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010ed0:	8932      	ldrh	r2, [r6, #8]
 8010ed2:	4413      	add	r3, r2
 8010ed4:	b21b      	sxth	r3, r3
 8010ed6:	4299      	cmp	r1, r3
 8010ed8:	da48      	bge.n	8010f6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010eda:	9b04      	ldr	r3, [sp, #16]
 8010edc:	6827      	ldr	r7, [r4, #0]
 8010ede:	fb17 f703 	smulbb	r7, r7, r3
 8010ee2:	9b02      	ldr	r3, [sp, #8]
 8010ee4:	b2bf      	uxth	r7, r7
 8010ee6:	18fa      	adds	r2, r7, r3
 8010ee8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010eec:	b212      	sxth	r2, r2
 8010eee:	429a      	cmp	r2, r3
 8010ef0:	db3c      	blt.n	8010f6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010ef2:	8970      	ldrh	r0, [r6, #10]
 8010ef4:	4403      	add	r3, r0
 8010ef6:	b21b      	sxth	r3, r3
 8010ef8:	429a      	cmp	r2, r3
 8010efa:	da37      	bge.n	8010f6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010efc:	2300      	movs	r3, #0
 8010efe:	930b      	str	r3, [sp, #44]	; 0x2c
 8010f00:	4630      	mov	r0, r6
 8010f02:	ab0b      	add	r3, sp, #44	; 0x2c
 8010f04:	f7ff ff36 	bl	8010d74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010f08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010f0a:	b37a      	cbz	r2, 8010f6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010f0c:	4552      	cmp	r2, sl
 8010f0e:	d02d      	beq.n	8010f6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010f10:	4611      	mov	r1, r2
 8010f12:	a80e      	add	r0, sp, #56	; 0x38
 8010f14:	9209      	str	r2, [sp, #36]	; 0x24
 8010f16:	f007 f917 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010f1a:	9a06      	ldr	r2, [sp, #24]
 8010f1c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010f20:	9b01      	ldr	r3, [sp, #4]
 8010f22:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010f26:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010f2a:	4413      	add	r3, r2
 8010f2c:	f04f 0e02 	mov.w	lr, #2
 8010f30:	fb91 f1fe 	sdiv	r1, r1, lr
 8010f34:	4401      	add	r1, r0
 8010f36:	1a58      	subs	r0, r3, r1
 8010f38:	9a07      	ldr	r2, [sp, #28]
 8010f3a:	9b02      	ldr	r3, [sp, #8]
 8010f3c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010f40:	fb9c fcfe 	sdiv	ip, ip, lr
 8010f44:	4413      	add	r3, r2
 8010f46:	448c      	add	ip, r1
 8010f48:	eba3 030c 	sub.w	r3, r3, ip
 8010f4c:	435b      	muls	r3, r3
 8010f4e:	fb00 3300 	mla	r3, r0, r0, r3
 8010f52:	42ab      	cmp	r3, r5
 8010f54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010f56:	d208      	bcs.n	8010f6a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010f58:	9803      	ldr	r0, [sp, #12]
 8010f5a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010f5c:	6001      	str	r1, [r0, #0]
 8010f5e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010f60:	9805      	ldr	r0, [sp, #20]
 8010f62:	8008      	strh	r0, [r1, #0]
 8010f64:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010f66:	461d      	mov	r5, r3
 8010f68:	800f      	strh	r7, [r1, #0]
 8010f6a:	4692      	mov	sl, r2
 8010f6c:	f10b 0b01 	add.w	fp, fp, #1
 8010f70:	f1bb 0f04 	cmp.w	fp, #4
 8010f74:	f104 0408 	add.w	r4, r4, #8
 8010f78:	d19c      	bne.n	8010eb4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010f7a:	9b00      	ldr	r3, [sp, #0]
 8010f7c:	9c08      	ldr	r4, [sp, #32]
 8010f7e:	444b      	add	r3, r9
 8010f80:	4544      	cmp	r4, r8
 8010f82:	9300      	str	r3, [sp, #0]
 8010f84:	d187      	bne.n	8010e96 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010f86:	b021      	add	sp, #132	; 0x84
 8010f88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f8c:	f04f 35ff 	mov.w	r5, #4294967295
 8010f90:	e766      	b.n	8010e60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010f92:	bf00      	nop
 8010f94:	2001383c 	.word	0x2001383c
 8010f98:	0802cce8 	.word	0x0802cce8

08010f9c <_ZN8touchgfx4RectaNERKS0_>:
 8010f9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fa0:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010fa4:	888c      	ldrh	r4, [r1, #4]
 8010fa6:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010faa:	443c      	add	r4, r7
 8010fac:	b2a4      	uxth	r4, r4
 8010fae:	fa0f f884 	sxth.w	r8, r4
 8010fb2:	45c1      	cmp	r9, r8
 8010fb4:	da2f      	bge.n	8011016 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010fb6:	8882      	ldrh	r2, [r0, #4]
 8010fb8:	444a      	add	r2, r9
 8010fba:	b292      	uxth	r2, r2
 8010fbc:	fa0f fe82 	sxth.w	lr, r2
 8010fc0:	4577      	cmp	r7, lr
 8010fc2:	da28      	bge.n	8011016 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010fc4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010fc8:	88cb      	ldrh	r3, [r1, #6]
 8010fca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010fce:	442b      	add	r3, r5
 8010fd0:	b21b      	sxth	r3, r3
 8010fd2:	429e      	cmp	r6, r3
 8010fd4:	da1f      	bge.n	8011016 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010fd6:	88c3      	ldrh	r3, [r0, #6]
 8010fd8:	4433      	add	r3, r6
 8010fda:	b29b      	uxth	r3, r3
 8010fdc:	fa0f fc83 	sxth.w	ip, r3
 8010fe0:	4565      	cmp	r5, ip
 8010fe2:	da18      	bge.n	8011016 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010fe4:	454f      	cmp	r7, r9
 8010fe6:	bfb8      	it	lt
 8010fe8:	464f      	movlt	r7, r9
 8010fea:	42b5      	cmp	r5, r6
 8010fec:	bfb8      	it	lt
 8010fee:	4635      	movlt	r5, r6
 8010ff0:	45f0      	cmp	r8, lr
 8010ff2:	bfd8      	it	le
 8010ff4:	4622      	movle	r2, r4
 8010ff6:	1bd2      	subs	r2, r2, r7
 8010ff8:	8082      	strh	r2, [r0, #4]
 8010ffa:	884a      	ldrh	r2, [r1, #2]
 8010ffc:	88c9      	ldrh	r1, [r1, #6]
 8010ffe:	8007      	strh	r7, [r0, #0]
 8011000:	440a      	add	r2, r1
 8011002:	b292      	uxth	r2, r2
 8011004:	b211      	sxth	r1, r2
 8011006:	458c      	cmp	ip, r1
 8011008:	bfa8      	it	ge
 801100a:	4613      	movge	r3, r2
 801100c:	1b5b      	subs	r3, r3, r5
 801100e:	80c3      	strh	r3, [r0, #6]
 8011010:	8045      	strh	r5, [r0, #2]
 8011012:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011016:	2300      	movs	r3, #0
 8011018:	8003      	strh	r3, [r0, #0]
 801101a:	8043      	strh	r3, [r0, #2]
 801101c:	8083      	strh	r3, [r0, #4]
 801101e:	80c3      	strh	r3, [r0, #6]
 8011020:	e7f7      	b.n	8011012 <_ZN8touchgfx4RectaNERKS0_+0x76>

08011022 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8011022:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011026:	2b00      	cmp	r3, #0
 8011028:	dd06      	ble.n	8011038 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801102a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801102e:	2800      	cmp	r0, #0
 8011030:	bfcc      	ite	gt
 8011032:	2000      	movgt	r0, #0
 8011034:	2001      	movle	r0, #1
 8011036:	4770      	bx	lr
 8011038:	2001      	movs	r0, #1
 801103a:	4770      	bx	lr

0801103c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801103c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011040:	2300      	movs	r3, #0
 8011042:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8011044:	8003      	strh	r3, [r0, #0]
 8011046:	4604      	mov	r4, r0
 8011048:	8043      	strh	r3, [r0, #2]
 801104a:	8083      	strh	r3, [r0, #4]
 801104c:	80c3      	strh	r3, [r0, #6]
 801104e:	2d00      	cmp	r5, #0
 8011050:	d040      	beq.n	80110d4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8011052:	1d28      	adds	r0, r5, #4
 8011054:	f7ff ffe5 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011058:	b988      	cbnz	r0, 801107e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801105a:	4620      	mov	r0, r4
 801105c:	f7ff ffe1 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011060:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011064:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8011068:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801106c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8011070:	b138      	cbz	r0, 8011082 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8011072:	8022      	strh	r2, [r4, #0]
 8011074:	8063      	strh	r3, [r4, #2]
 8011076:	f8a4 e004 	strh.w	lr, [r4, #4]
 801107a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801107e:	69ad      	ldr	r5, [r5, #24]
 8011080:	e7e5      	b.n	801104e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8011082:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011086:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801108a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801108e:	4290      	cmp	r0, r2
 8011090:	4607      	mov	r7, r0
 8011092:	bfa8      	it	ge
 8011094:	4617      	movge	r7, r2
 8011096:	4472      	add	r2, lr
 8011098:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801109c:	8027      	strh	r7, [r4, #0]
 801109e:	4299      	cmp	r1, r3
 80110a0:	460e      	mov	r6, r1
 80110a2:	4440      	add	r0, r8
 80110a4:	bfa8      	it	ge
 80110a6:	461e      	movge	r6, r3
 80110a8:	4471      	add	r1, lr
 80110aa:	4463      	add	r3, ip
 80110ac:	b200      	sxth	r0, r0
 80110ae:	b212      	sxth	r2, r2
 80110b0:	b209      	sxth	r1, r1
 80110b2:	b21b      	sxth	r3, r3
 80110b4:	4290      	cmp	r0, r2
 80110b6:	bfac      	ite	ge
 80110b8:	ebc7 0200 	rsbge	r2, r7, r0
 80110bc:	ebc7 0202 	rsblt	r2, r7, r2
 80110c0:	4299      	cmp	r1, r3
 80110c2:	bfac      	ite	ge
 80110c4:	ebc6 0301 	rsbge	r3, r6, r1
 80110c8:	ebc6 0303 	rsblt	r3, r6, r3
 80110cc:	8066      	strh	r6, [r4, #2]
 80110ce:	80a2      	strh	r2, [r4, #4]
 80110d0:	80e3      	strh	r3, [r4, #6]
 80110d2:	e7d4      	b.n	801107e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80110d4:	4620      	mov	r0, r4
 80110d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080110da <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80110da:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80110de:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80110e2:	b383      	cbz	r3, 8011146 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80110e4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80110e6:	b374      	cbz	r4, 8011146 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80110e8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80110ec:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80110f0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80110f4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80110f8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80110fc:	b303      	cbz	r3, 8011140 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80110fe:	4668      	mov	r0, sp
 8011100:	1d21      	adds	r1, r4, #4
 8011102:	f8ad 5000 	strh.w	r5, [sp]
 8011106:	f8ad 6002 	strh.w	r6, [sp, #2]
 801110a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801110e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8011112:	f7ff ff43 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8011116:	4668      	mov	r0, sp
 8011118:	f7ff ff83 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801111c:	b980      	cbnz	r0, 8011140 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801111e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011122:	88a2      	ldrh	r2, [r4, #4]
 8011124:	1a9b      	subs	r3, r3, r2
 8011126:	f8ad 3000 	strh.w	r3, [sp]
 801112a:	88e2      	ldrh	r2, [r4, #6]
 801112c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011130:	1a9b      	subs	r3, r3, r2
 8011132:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011136:	6823      	ldr	r3, [r4, #0]
 8011138:	4669      	mov	r1, sp
 801113a:	689b      	ldr	r3, [r3, #8]
 801113c:	4620      	mov	r0, r4
 801113e:	4798      	blx	r3
 8011140:	69a4      	ldr	r4, [r4, #24]
 8011142:	2c00      	cmp	r4, #0
 8011144:	d1d8      	bne.n	80110f8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8011146:	b002      	add	sp, #8
 8011148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801114c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801114c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801114e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8011152:	460d      	mov	r5, r1
 8011154:	4616      	mov	r6, r2
 8011156:	b323      	cbz	r3, 80111a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011158:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801115a:	b314      	cbz	r4, 80111a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801115c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011160:	b1eb      	cbz	r3, 801119e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011162:	6828      	ldr	r0, [r5, #0]
 8011164:	6869      	ldr	r1, [r5, #4]
 8011166:	466b      	mov	r3, sp
 8011168:	c303      	stmia	r3!, {r0, r1}
 801116a:	4668      	mov	r0, sp
 801116c:	1d21      	adds	r1, r4, #4
 801116e:	f7ff ff15 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8011172:	4668      	mov	r0, sp
 8011174:	f7ff ff55 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011178:	b988      	cbnz	r0, 801119e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801117a:	f8bd 3000 	ldrh.w	r3, [sp]
 801117e:	88a2      	ldrh	r2, [r4, #4]
 8011180:	1a9b      	subs	r3, r3, r2
 8011182:	f8ad 3000 	strh.w	r3, [sp]
 8011186:	88e2      	ldrh	r2, [r4, #6]
 8011188:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801118c:	1a9b      	subs	r3, r3, r2
 801118e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011192:	6823      	ldr	r3, [r4, #0]
 8011194:	4632      	mov	r2, r6
 8011196:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011198:	4669      	mov	r1, sp
 801119a:	4620      	mov	r0, r4
 801119c:	4798      	blx	r3
 801119e:	69a4      	ldr	r4, [r4, #24]
 80111a0:	e7db      	b.n	801115a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80111a2:	b002      	add	sp, #8
 80111a4:	bd70      	pop	{r4, r5, r6, pc}

080111a6 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 80111a6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80111a8:	4770      	bx	lr
	...

080111ac <_ZN8touchgfx14SwipeContainerD1Ev>:
 80111ac:	4b05      	ldr	r3, [pc, #20]	; (80111c4 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 80111ae:	b510      	push	{r4, lr}
 80111b0:	6003      	str	r3, [r0, #0]
 80111b2:	4604      	mov	r4, r0
 80111b4:	f005 fe44 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 80111b8:	4621      	mov	r1, r4
 80111ba:	3004      	adds	r0, #4
 80111bc:	f005 fe8d 	bl	8016eda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80111c0:	4620      	mov	r0, r4
 80111c2:	bd10      	pop	{r4, pc}
 80111c4:	0802f85c 	.word	0x0802f85c

080111c8 <_ZN8touchgfx14SwipeContainerD0Ev>:
 80111c8:	b510      	push	{r4, lr}
 80111ca:	4604      	mov	r4, r0
 80111cc:	f7ff ffee 	bl	80111ac <_ZN8touchgfx14SwipeContainerD1Ev>
 80111d0:	4620      	mov	r0, r4
 80111d2:	21f4      	movs	r1, #244	; 0xf4
 80111d4:	f019 fee9 	bl	802afaa <_ZdlPvj>
 80111d8:	4620      	mov	r0, r4
 80111da:	bd10      	pop	{r4, pc}

080111dc <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 80111dc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80111e0:	2b04      	cmp	r3, #4
 80111e2:	d117      	bne.n	8011214 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 80111e4:	790b      	ldrb	r3, [r1, #4]
 80111e6:	2b01      	cmp	r3, #1
 80111e8:	d114      	bne.n	8011214 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 80111ea:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 80111ee:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 80111f0:	8643      	strh	r3, [r0, #50]	; 0x32
 80111f2:	2b00      	cmp	r3, #0
 80111f4:	8682      	strh	r2, [r0, #52]	; 0x34
 80111f6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80111fa:	da0e      	bge.n	801121a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 80111fc:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011200:	3a01      	subs	r2, #1
 8011202:	4291      	cmp	r1, r2
 8011204:	d007      	beq.n	8011216 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8011206:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011208:	4252      	negs	r2, r2
 801120a:	4293      	cmp	r3, r2
 801120c:	dc03      	bgt.n	8011216 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801120e:	2302      	movs	r3, #2
 8011210:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011214:	4770      	bx	lr
 8011216:	2300      	movs	r3, #0
 8011218:	e7fa      	b.n	8011210 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 801121a:	d0fb      	beq.n	8011214 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801121c:	b111      	cbz	r1, 8011224 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 801121e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011220:	4293      	cmp	r3, r2
 8011222:	da01      	bge.n	8011228 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8011224:	2301      	movs	r3, #1
 8011226:	e7f3      	b.n	8011210 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8011228:	2303      	movs	r3, #3
 801122a:	e7f1      	b.n	8011210 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

0801122c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 801122c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011230:	2b04      	cmp	r3, #4
 8011232:	d113      	bne.n	801125c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011234:	790b      	ldrb	r3, [r1, #4]
 8011236:	b98b      	cbnz	r3, 801125c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011238:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801123a:	8643      	strh	r3, [r0, #50]	; 0x32
 801123c:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801123e:	8683      	strh	r3, [r0, #52]	; 0x34
 8011240:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011244:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8011248:	2b00      	cmp	r3, #0
 801124a:	da08      	bge.n	801125e <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 801124c:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011250:	3b01      	subs	r3, #1
 8011252:	429a      	cmp	r2, r3
 8011254:	da02      	bge.n	801125c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011256:	2302      	movs	r3, #2
 8011258:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801125c:	4770      	bx	lr
 801125e:	d0fd      	beq.n	801125c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011260:	2a00      	cmp	r2, #0
 8011262:	d0fb      	beq.n	801125c <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8011264:	2303      	movs	r3, #3
 8011266:	e7f7      	b.n	8011258 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08011268 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8011268:	b538      	push	{r3, r4, r5, lr}
 801126a:	2226      	movs	r2, #38	; 0x26
 801126c:	4604      	mov	r4, r0
 801126e:	460d      	mov	r5, r1
 8011270:	2100      	movs	r1, #0
 8011272:	f01a feb2 	bl	802bfda <memset>
 8011276:	4620      	mov	r0, r4
 8011278:	f7ff fc58 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 801127c:	4b06      	ldr	r3, [pc, #24]	; (8011298 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 801127e:	6023      	str	r3, [r4, #0]
 8011280:	882b      	ldrh	r3, [r5, #0]
 8011282:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011284:	23ff      	movs	r3, #255	; 0xff
 8011286:	4620      	mov	r0, r4
 8011288:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 801128c:	4629      	mov	r1, r5
 801128e:	f003 f8d8 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011292:	4620      	mov	r0, r4
 8011294:	bd38      	pop	{r3, r4, r5, pc}
 8011296:	bf00      	nop
 8011298:	0802ff00 	.word	0x0802ff00

0801129c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 801129c:	86c1      	strh	r1, [r0, #54]	; 0x36
 801129e:	4770      	bx	lr

080112a0 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 80112a0:	b508      	push	{r3, lr}
 80112a2:	3068      	adds	r0, #104	; 0x68
 80112a4:	f7f1 fc1e 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80112a8:	bd08      	pop	{r3, pc}

080112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 80112aa:	b508      	push	{r3, lr}
 80112ac:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 80112ae:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80112b2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80112b6:	fb03 2111 	mls	r1, r3, r1, r2
 80112ba:	b209      	sxth	r1, r1
 80112bc:	2200      	movs	r2, #0
 80112be:	3038      	adds	r0, #56	; 0x38
 80112c0:	f7f1 f99b 	bl	80025fa <_ZN8touchgfx8Drawable6moveToEss>
 80112c4:	bd08      	pop	{r3, pc}

080112c6 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 80112c6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80112ca:	2b04      	cmp	r3, #4
 80112cc:	d119      	bne.n	8011302 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 80112ce:	88ca      	ldrh	r2, [r1, #6]
 80112d0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80112d2:	1a9b      	subs	r3, r3, r2
 80112d4:	894a      	ldrh	r2, [r1, #10]
 80112d6:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 80112da:	4413      	add	r3, r2
 80112dc:	b21b      	sxth	r3, r3
 80112de:	8603      	strh	r3, [r0, #48]	; 0x30
 80112e0:	b921      	cbnz	r1, 80112ec <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 80112e2:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 80112e4:	4293      	cmp	r3, r2
 80112e6:	dd01      	ble.n	80112ec <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 80112e8:	8602      	strh	r2, [r0, #48]	; 0x30
 80112ea:	e008      	b.n	80112fe <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 80112ec:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 80112f0:	3a01      	subs	r2, #1
 80112f2:	4291      	cmp	r1, r2
 80112f4:	d103      	bne.n	80112fe <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 80112f6:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 80112f8:	4252      	negs	r2, r2
 80112fa:	4293      	cmp	r3, r2
 80112fc:	dbf4      	blt.n	80112e8 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 80112fe:	f7ff bfd4 	b.w	80112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011302:	4770      	bx	lr

08011304 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8011304:	b538      	push	{r3, r4, r5, lr}
 8011306:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801130a:	2d0e      	cmp	r5, #14
 801130c:	4604      	mov	r4, r0
 801130e:	d813      	bhi.n	8011338 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8011310:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8011312:	4252      	negs	r2, r2
 8011314:	230e      	movs	r3, #14
 8011316:	b212      	sxth	r2, r2
 8011318:	2100      	movs	r1, #0
 801131a:	4628      	mov	r0, r5
 801131c:	f007 fbc2 	bl	8018aa4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8011320:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011322:	4418      	add	r0, r3
 8011324:	8620      	strh	r0, [r4, #48]	; 0x30
 8011326:	4620      	mov	r0, r4
 8011328:	f7ff ffbf 	bl	80112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801132c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011330:	3301      	adds	r3, #1
 8011332:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011336:	bd38      	pop	{r3, r4, r5, pc}
 8011338:	2304      	movs	r3, #4
 801133a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801133e:	2300      	movs	r3, #0
 8011340:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8011344:	8603      	strh	r3, [r0, #48]	; 0x30
 8011346:	e7ef      	b.n	8011328 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08011348 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8011348:	b538      	push	{r3, r4, r5, lr}
 801134a:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801134e:	2d0e      	cmp	r5, #14
 8011350:	4604      	mov	r4, r0
 8011352:	d812      	bhi.n	801137a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8011354:	230e      	movs	r3, #14
 8011356:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 801135a:	2100      	movs	r1, #0
 801135c:	4628      	mov	r0, r5
 801135e:	f007 fba1 	bl	8018aa4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8011362:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011364:	1a18      	subs	r0, r3, r0
 8011366:	8620      	strh	r0, [r4, #48]	; 0x30
 8011368:	4620      	mov	r0, r4
 801136a:	f7ff ff9e 	bl	80112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801136e:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011372:	3301      	adds	r3, #1
 8011374:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011378:	bd38      	pop	{r3, r4, r5, pc}
 801137a:	2304      	movs	r3, #4
 801137c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011380:	2300      	movs	r3, #0
 8011382:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8011386:	8603      	strh	r3, [r0, #48]	; 0x30
 8011388:	e7ef      	b.n	801136a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

0801138c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 801138c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011390:	4604      	mov	r4, r0
 8011392:	4626      	mov	r6, r4
 8011394:	af02      	add	r7, sp, #8
 8011396:	f7ff fbc9 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 801139a:	2500      	movs	r5, #0
 801139c:	4b18      	ldr	r3, [pc, #96]	; (8011400 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 801139e:	62a5      	str	r5, [r4, #40]	; 0x28
 80113a0:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80113a4:	f846 3b2c 	str.w	r3, [r6], #44
 80113a8:	f827 9d04 	strh.w	r9, [r7, #-4]!
 80113ac:	4630      	mov	r0, r6
 80113ae:	4639      	mov	r1, r7
 80113b0:	f7ff ff5a 	bl	8011268 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80113b4:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 80113b8:	4b12      	ldr	r3, [pc, #72]	; (8011404 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 80113ba:	62e3      	str	r3, [r4, #44]	; 0x2c
 80113bc:	4639      	mov	r1, r7
 80113be:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80113c2:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 80113c6:	4640      	mov	r0, r8
 80113c8:	f8ad 9004 	strh.w	r9, [sp, #4]
 80113cc:	f7ff ff4c 	bl	8011268 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80113d0:	462a      	mov	r2, r5
 80113d2:	4629      	mov	r1, r5
 80113d4:	4630      	mov	r0, r6
 80113d6:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 80113da:	f7f1 fb83 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80113de:	462a      	mov	r2, r5
 80113e0:	4629      	mov	r1, r5
 80113e2:	4640      	mov	r0, r8
 80113e4:	f7f1 fb7e 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80113e8:	4631      	mov	r1, r6
 80113ea:	4620      	mov	r0, r4
 80113ec:	f7ff fc50 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80113f0:	4620      	mov	r0, r4
 80113f2:	4641      	mov	r1, r8
 80113f4:	f7ff fc4c 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80113f8:	4620      	mov	r0, r4
 80113fa:	b003      	add	sp, #12
 80113fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011400:	0802d770 	.word	0x0802d770
 8011404:	0802fd1c 	.word	0x0802fd1c

08011408 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8011408:	b570      	push	{r4, r5, r6, lr}
 801140a:	4604      	mov	r4, r0
 801140c:	f7ff fb8e 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 8011410:	4b1a      	ldr	r3, [pc, #104]	; (801147c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8011412:	6023      	str	r3, [r4, #0]
 8011414:	2304      	movs	r3, #4
 8011416:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801141a:	2350      	movs	r3, #80	; 0x50
 801141c:	2500      	movs	r5, #0
 801141e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8011420:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8011424:	231e      	movs	r3, #30
 8011426:	62a5      	str	r5, [r4, #40]	; 0x28
 8011428:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 801142c:	8625      	strh	r5, [r4, #48]	; 0x30
 801142e:	8665      	strh	r5, [r4, #50]	; 0x32
 8011430:	86a5      	strh	r5, [r4, #52]	; 0x34
 8011432:	86e3      	strh	r3, [r4, #54]	; 0x36
 8011434:	4630      	mov	r0, r6
 8011436:	f7ff fb79 	bl	8010b2c <_ZN8touchgfx8DrawableC1Ev>
 801143a:	4b11      	ldr	r3, [pc, #68]	; (8011480 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 801143c:	6625      	str	r5, [r4, #96]	; 0x60
 801143e:	63a3      	str	r3, [r4, #56]	; 0x38
 8011440:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8011444:	2302      	movs	r3, #2
 8011446:	f104 0568 	add.w	r5, r4, #104	; 0x68
 801144a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 801144e:	4628      	mov	r0, r5
 8011450:	f7ff ff9c 	bl	801138c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8011454:	f005 fcf4 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8011458:	4621      	mov	r1, r4
 801145a:	3004      	adds	r0, #4
 801145c:	f005 fde6 	bl	801702c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8011460:	2301      	movs	r3, #1
 8011462:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8011466:	4631      	mov	r1, r6
 8011468:	4620      	mov	r0, r4
 801146a:	f7ff fc11 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801146e:	4620      	mov	r0, r4
 8011470:	4629      	mov	r1, r5
 8011472:	f7ff fc0d 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011476:	4620      	mov	r0, r4
 8011478:	bd70      	pop	{r4, r5, r6, pc}
 801147a:	bf00      	nop
 801147c:	0802f85c 	.word	0x0802f85c
 8011480:	0802f920 	.word	0x0802f920

08011484 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8011484:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011486:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801148a:	428b      	cmp	r3, r1
 801148c:	4604      	mov	r4, r0
 801148e:	460d      	mov	r5, r1
 8011490:	d915      	bls.n	80114be <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8011492:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8011496:	428b      	cmp	r3, r1
 8011498:	d011      	beq.n	80114be <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801149a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801149e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80114a2:	a802      	add	r0, sp, #8
 80114a4:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80114a8:	f009 f91a 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80114ac:	fb15 f100 	smulbb	r1, r5, r0
 80114b0:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 80114b4:	b209      	sxth	r1, r1
 80114b6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80114ba:	f7f1 f89e 	bl	80025fa <_ZN8touchgfx8Drawable6moveToEss>
 80114be:	b003      	add	sp, #12
 80114c0:	bd30      	pop	{r4, r5, pc}

080114c2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 80114c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80114c4:	4604      	mov	r4, r0
 80114c6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80114ca:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 80114ce:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 80114d2:	4293      	cmp	r3, r2
 80114d4:	460d      	mov	r5, r1
 80114d6:	d01e      	beq.n	8011516 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 80114d8:	a802      	add	r0, sp, #8
 80114da:	f820 3d04 	strh.w	r3, [r0, #-4]!
 80114de:	f009 f8ff 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80114e2:	6823      	ldr	r3, [r4, #0]
 80114e4:	fb15 f000 	smulbb	r0, r5, r0
 80114e8:	86a0      	strh	r0, [r4, #52]	; 0x34
 80114ea:	695b      	ldr	r3, [r3, #20]
 80114ec:	4620      	mov	r0, r4
 80114ee:	4798      	blx	r3
 80114f0:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 80114f4:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 80114f8:	4620      	mov	r0, r4
 80114fa:	f7ff fb2f 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80114fe:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8011502:	42a9      	cmp	r1, r5
 8011504:	4620      	mov	r0, r4
 8011506:	bf28      	it	cs
 8011508:	4629      	movcs	r1, r5
 801150a:	f7ff ffbb 	bl	8011484 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801150e:	6823      	ldr	r3, [r4, #0]
 8011510:	4620      	mov	r0, r4
 8011512:	695b      	ldr	r3, [r3, #20]
 8011514:	4798      	blx	r3
 8011516:	b003      	add	sp, #12
 8011518:	bd30      	pop	{r4, r5, pc}

0801151a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801151a:	b538      	push	{r3, r4, r5, lr}
 801151c:	4604      	mov	r4, r0
 801151e:	460d      	mov	r5, r1
 8011520:	305c      	adds	r0, #92	; 0x5c
 8011522:	4611      	mov	r1, r2
 8011524:	f002 ff8d 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011528:	4629      	mov	r1, r5
 801152a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 801152e:	f002 fa53 	bl	80139d8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8011532:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8011536:	b121      	cbz	r1, 8011542 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8011538:	4620      	mov	r0, r4
 801153a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801153e:	f7ff bfc0 	b.w	80114c2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011542:	bd38      	pop	{r3, r4, r5, pc}

08011544 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8011544:	3068      	adds	r0, #104	; 0x68
 8011546:	f7ff bfe8 	b.w	801151a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

0801154a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 801154a:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 801154e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8011552:	3101      	adds	r1, #1
 8011554:	fb91 f3f2 	sdiv	r3, r1, r2
 8011558:	fb02 1113 	mls	r1, r2, r3, r1
 801155c:	b2c9      	uxtb	r1, r1
 801155e:	f7ff bf91 	b.w	8011484 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08011562 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8011562:	b510      	push	{r4, lr}
 8011564:	4604      	mov	r4, r0
 8011566:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 801156a:	280a      	cmp	r0, #10
 801156c:	d813      	bhi.n	8011596 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 801156e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011570:	8922      	ldrh	r2, [r4, #8]
 8011572:	441a      	add	r2, r3
 8011574:	b212      	sxth	r2, r2
 8011576:	230a      	movs	r3, #10
 8011578:	2100      	movs	r1, #0
 801157a:	f007 fad1 	bl	8018b20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 801157e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011580:	1a18      	subs	r0, r3, r0
 8011582:	8620      	strh	r0, [r4, #48]	; 0x30
 8011584:	4620      	mov	r0, r4
 8011586:	f7ff fe90 	bl	80112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801158a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801158e:	3301      	adds	r3, #1
 8011590:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011594:	bd10      	pop	{r4, pc}
 8011596:	2304      	movs	r3, #4
 8011598:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801159c:	2300      	movs	r3, #0
 801159e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80115a2:	8623      	strh	r3, [r4, #48]	; 0x30
 80115a4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80115a8:	f7ff ffcf 	bl	801154a <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 80115ac:	e7ea      	b.n	8011584 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

080115ae <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 80115ae:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80115b2:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80115b6:	4411      	add	r1, r2
 80115b8:	3901      	subs	r1, #1
 80115ba:	fb91 f3f2 	sdiv	r3, r1, r2
 80115be:	fb02 1113 	mls	r1, r2, r3, r1
 80115c2:	b2c9      	uxtb	r1, r1
 80115c4:	f7ff bf5e 	b.w	8011484 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080115c8 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 80115c8:	b510      	push	{r4, lr}
 80115ca:	4604      	mov	r4, r0
 80115cc:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80115d0:	280a      	cmp	r0, #10
 80115d2:	d813      	bhi.n	80115fc <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 80115d4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80115d6:	8922      	ldrh	r2, [r4, #8]
 80115d8:	1ad2      	subs	r2, r2, r3
 80115da:	b212      	sxth	r2, r2
 80115dc:	230a      	movs	r3, #10
 80115de:	2100      	movs	r1, #0
 80115e0:	f007 fa9e 	bl	8018b20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80115e4:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80115e6:	4418      	add	r0, r3
 80115e8:	8620      	strh	r0, [r4, #48]	; 0x30
 80115ea:	4620      	mov	r0, r4
 80115ec:	f7ff fe5d 	bl	80112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80115f0:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80115f4:	3301      	adds	r3, #1
 80115f6:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80115fa:	bd10      	pop	{r4, pc}
 80115fc:	2304      	movs	r3, #4
 80115fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8011602:	2300      	movs	r3, #0
 8011604:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011608:	8623      	strh	r3, [r4, #48]	; 0x30
 801160a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801160e:	f7ff ffce 	bl	80115ae <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8011612:	e7ea      	b.n	80115ea <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08011614 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8011614:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011618:	b90b      	cbnz	r3, 801161e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801161a:	f7ff be73 	b.w	8011304 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801161e:	2b01      	cmp	r3, #1
 8011620:	d101      	bne.n	8011626 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8011622:	f7ff be91 	b.w	8011348 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8011626:	2b02      	cmp	r3, #2
 8011628:	d101      	bne.n	801162e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 801162a:	f7ff bf9a 	b.w	8011562 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 801162e:	2b03      	cmp	r3, #3
 8011630:	d101      	bne.n	8011636 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8011632:	f7ff bfc9 	b.w	80115c8 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8011636:	4770      	bx	lr

08011638 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8011638:	b510      	push	{r4, lr}
 801163a:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 801163e:	428b      	cmp	r3, r1
 8011640:	4604      	mov	r4, r0
 8011642:	d907      	bls.n	8011654 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8011644:	3068      	adds	r0, #104	; 0x68
 8011646:	f7ff ff1d 	bl	8011484 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801164a:	4620      	mov	r0, r4
 801164c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011650:	f7ff be2b 	b.w	80112aa <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011654:	bd10      	pop	{r4, pc}

08011656 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8011656:	b538      	push	{r3, r4, r5, lr}
 8011658:	4604      	mov	r4, r0
 801165a:	3038      	adds	r0, #56	; 0x38
 801165c:	460d      	mov	r5, r1
 801165e:	f000 f963 	bl	8011928 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8011662:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8011666:	3101      	adds	r1, #1
 8011668:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801166c:	b2c9      	uxtb	r1, r1
 801166e:	f7ff ff28 	bl	80114c2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011672:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011676:	4620      	mov	r0, r4
 8011678:	f7ff ffde 	bl	8011638 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801167c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8011680:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8011684:	4620      	mov	r0, r4
 8011686:	f7ff fa69 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801168a:	bd38      	pop	{r3, r4, r5, pc}

0801168c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801168c:	b538      	push	{r3, r4, r5, lr}
 801168e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011692:	4604      	mov	r4, r0
 8011694:	b1e3      	cbz	r3, 80116d0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8011696:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8011698:	b1d3      	cbz	r3, 80116d0 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801169a:	428b      	cmp	r3, r1
 801169c:	d125      	bne.n	80116ea <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801169e:	4619      	mov	r1, r3
 80116a0:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80116a4:	f000 f9c0 	bl	8011a28 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 80116a8:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80116ac:	3901      	subs	r1, #1
 80116ae:	b2c9      	uxtb	r1, r1
 80116b0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80116b4:	f7ff ff05 	bl	80114c2 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80116b8:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 80116bc:	b94d      	cbnz	r5, 80116d2 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 80116be:	6823      	ldr	r3, [r4, #0]
 80116c0:	4620      	mov	r0, r4
 80116c2:	695b      	ldr	r3, [r3, #20]
 80116c4:	4798      	blx	r3
 80116c6:	462a      	mov	r2, r5
 80116c8:	4629      	mov	r1, r5
 80116ca:	4620      	mov	r0, r4
 80116cc:	f7ff fa46 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80116d0:	bd38      	pop	{r3, r4, r5, pc}
 80116d2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80116d6:	3d01      	subs	r5, #1
 80116d8:	42a9      	cmp	r1, r5
 80116da:	bfa8      	it	ge
 80116dc:	4629      	movge	r1, r5
 80116de:	4620      	mov	r0, r4
 80116e0:	b2c9      	uxtb	r1, r1
 80116e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80116e6:	f7ff bfa7 	b.w	8011638 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80116ea:	699b      	ldr	r3, [r3, #24]
 80116ec:	e7d4      	b.n	8011698 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

080116ee <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 80116ee:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80116f2:	4770      	bx	lr

080116f4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 80116f4:	b538      	push	{r3, r4, r5, lr}
 80116f6:	7882      	ldrb	r2, [r0, #2]
 80116f8:	6843      	ldr	r3, [r0, #4]
 80116fa:	4604      	mov	r4, r0
 80116fc:	460d      	mov	r5, r1
 80116fe:	b98a      	cbnz	r2, 8011724 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011700:	4299      	cmp	r1, r3
 8011702:	d101      	bne.n	8011708 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011704:	2301      	movs	r3, #1
 8011706:	7083      	strb	r3, [r0, #2]
 8011708:	6863      	ldr	r3, [r4, #4]
 801170a:	42ab      	cmp	r3, r5
 801170c:	d009      	beq.n	8011722 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801170e:	7a23      	ldrb	r3, [r4, #8]
 8011710:	2b01      	cmp	r3, #1
 8011712:	d11b      	bne.n	801174c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8011714:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011718:	f9b4 2000 	ldrsh.w	r2, [r4]
 801171c:	429a      	cmp	r2, r3
 801171e:	bfb8      	it	lt
 8011720:	8023      	strhlt	r3, [r4, #0]
 8011722:	bd38      	pop	{r3, r4, r5, pc}
 8011724:	7a02      	ldrb	r2, [r0, #8]
 8011726:	2a01      	cmp	r2, #1
 8011728:	d108      	bne.n	801173c <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 801172a:	895b      	ldrh	r3, [r3, #10]
 801172c:	88c9      	ldrh	r1, [r1, #6]
 801172e:	1ac9      	subs	r1, r1, r3
 8011730:	682b      	ldr	r3, [r5, #0]
 8011732:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011734:	b209      	sxth	r1, r1
 8011736:	4628      	mov	r0, r5
 8011738:	4798      	blx	r3
 801173a:	e7e5      	b.n	8011708 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 801173c:	2a02      	cmp	r2, #2
 801173e:	d1e3      	bne.n	8011708 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011740:	891b      	ldrh	r3, [r3, #8]
 8011742:	8889      	ldrh	r1, [r1, #4]
 8011744:	1ac9      	subs	r1, r1, r3
 8011746:	682b      	ldr	r3, [r5, #0]
 8011748:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801174a:	e7f3      	b.n	8011734 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 801174c:	2b02      	cmp	r3, #2
 801174e:	d1e8      	bne.n	8011722 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 8011750:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011754:	e7e0      	b.n	8011718 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

08011756 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 8011756:	4770      	bx	lr

08011758 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 8011758:	4770      	bx	lr

0801175a <_ZN8touchgfx10ListLayoutD1Ev>:
 801175a:	4770      	bx	lr

0801175c <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 801175c:	b430      	push	{r4, r5}
 801175e:	68c5      	ldr	r5, [r0, #12]
 8011760:	6844      	ldr	r4, [r0, #4]
 8011762:	106a      	asrs	r2, r5, #1
 8011764:	4603      	mov	r3, r0
 8011766:	07ed      	lsls	r5, r5, #31
 8011768:	eb04 0002 	add.w	r0, r4, r2
 801176c:	689b      	ldr	r3, [r3, #8]
 801176e:	bf48      	it	mi
 8011770:	58a2      	ldrmi	r2, [r4, r2]
 8011772:	bc30      	pop	{r4, r5}
 8011774:	bf48      	it	mi
 8011776:	58d3      	ldrmi	r3, [r2, r3]
 8011778:	4718      	bx	r3

0801177a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801177a:	6843      	ldr	r3, [r0, #4]
 801177c:	b12b      	cbz	r3, 801178a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801177e:	6883      	ldr	r3, [r0, #8]
 8011780:	b92b      	cbnz	r3, 801178e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8011782:	68c0      	ldr	r0, [r0, #12]
 8011784:	f000 0001 	and.w	r0, r0, #1
 8011788:	4770      	bx	lr
 801178a:	4618      	mov	r0, r3
 801178c:	4770      	bx	lr
 801178e:	2001      	movs	r0, #1
 8011790:	4770      	bx	lr

08011792 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8011792:	b430      	push	{r4, r5}
 8011794:	68c5      	ldr	r5, [r0, #12]
 8011796:	6844      	ldr	r4, [r0, #4]
 8011798:	106a      	asrs	r2, r5, #1
 801179a:	4603      	mov	r3, r0
 801179c:	07ed      	lsls	r5, r5, #31
 801179e:	eb04 0002 	add.w	r0, r4, r2
 80117a2:	689b      	ldr	r3, [r3, #8]
 80117a4:	bf48      	it	mi
 80117a6:	58a2      	ldrmi	r2, [r4, r2]
 80117a8:	bc30      	pop	{r4, r5}
 80117aa:	bf48      	it	mi
 80117ac:	58d3      	ldrmi	r3, [r2, r3]
 80117ae:	4718      	bx	r3

080117b0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 80117b0:	6843      	ldr	r3, [r0, #4]
 80117b2:	b12b      	cbz	r3, 80117c0 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 80117b4:	6883      	ldr	r3, [r0, #8]
 80117b6:	b92b      	cbnz	r3, 80117c4 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 80117b8:	68c0      	ldr	r0, [r0, #12]
 80117ba:	f000 0001 	and.w	r0, r0, #1
 80117be:	4770      	bx	lr
 80117c0:	4618      	mov	r0, r3
 80117c2:	4770      	bx	lr
 80117c4:	2001      	movs	r0, #1
 80117c6:	4770      	bx	lr

080117c8 <_ZN8touchgfx10ListLayoutD0Ev>:
 80117c8:	b510      	push	{r4, lr}
 80117ca:	2130      	movs	r1, #48	; 0x30
 80117cc:	4604      	mov	r4, r0
 80117ce:	f019 fbec 	bl	802afaa <_ZdlPvj>
 80117d2:	4620      	mov	r0, r4
 80117d4:	bd10      	pop	{r4, pc}

080117d6 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 80117d6:	b510      	push	{r4, lr}
 80117d8:	2110      	movs	r1, #16
 80117da:	4604      	mov	r4, r0
 80117dc:	f019 fbe5 	bl	802afaa <_ZdlPvj>
 80117e0:	4620      	mov	r0, r4
 80117e2:	bd10      	pop	{r4, pc}

080117e4 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 80117e4:	b510      	push	{r4, lr}
 80117e6:	2110      	movs	r1, #16
 80117e8:	4604      	mov	r4, r0
 80117ea:	f019 fbde 	bl	802afaa <_ZdlPvj>
 80117ee:	4620      	mov	r0, r4
 80117f0:	bd10      	pop	{r4, pc}

080117f2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 80117f2:	4603      	mov	r3, r0
 80117f4:	4608      	mov	r0, r1
 80117f6:	789a      	ldrb	r2, [r3, #2]
 80117f8:	b992      	cbnz	r2, 8011820 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 80117fa:	685a      	ldr	r2, [r3, #4]
 80117fc:	428a      	cmp	r2, r1
 80117fe:	d102      	bne.n	8011806 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011800:	2201      	movs	r2, #1
 8011802:	709a      	strb	r2, [r3, #2]
 8011804:	4770      	bx	lr
 8011806:	7a1a      	ldrb	r2, [r3, #8]
 8011808:	2a01      	cmp	r2, #1
 801180a:	d104      	bne.n	8011816 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801180c:	88ca      	ldrh	r2, [r1, #6]
 801180e:	8949      	ldrh	r1, [r1, #10]
 8011810:	440a      	add	r2, r1
 8011812:	801a      	strh	r2, [r3, #0]
 8011814:	4770      	bx	lr
 8011816:	2a02      	cmp	r2, #2
 8011818:	d116      	bne.n	8011848 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801181a:	888a      	ldrh	r2, [r1, #4]
 801181c:	8909      	ldrh	r1, [r1, #8]
 801181e:	e7f7      	b.n	8011810 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 8011820:	7a1a      	ldrb	r2, [r3, #8]
 8011822:	2a01      	cmp	r2, #1
 8011824:	d107      	bne.n	8011836 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 8011826:	685b      	ldr	r3, [r3, #4]
 8011828:	8959      	ldrh	r1, [r3, #10]
 801182a:	88c3      	ldrh	r3, [r0, #6]
 801182c:	4419      	add	r1, r3
 801182e:	6803      	ldr	r3, [r0, #0]
 8011830:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011832:	b209      	sxth	r1, r1
 8011834:	4718      	bx	r3
 8011836:	2a02      	cmp	r2, #2
 8011838:	d106      	bne.n	8011848 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801183a:	685b      	ldr	r3, [r3, #4]
 801183c:	8919      	ldrh	r1, [r3, #8]
 801183e:	8883      	ldrh	r3, [r0, #4]
 8011840:	4419      	add	r1, r3
 8011842:	6803      	ldr	r3, [r0, #0]
 8011844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011846:	e7f4      	b.n	8011832 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 8011848:	4770      	bx	lr

0801184a <_ZN8touchgfx10ListLayout9removeAllEv>:
 801184a:	2200      	movs	r2, #0
 801184c:	b510      	push	{r4, lr}
 801184e:	4611      	mov	r1, r2
 8011850:	4604      	mov	r4, r0
 8011852:	85c2      	strh	r2, [r0, #46]	; 0x2e
 8011854:	f7ff f982 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011858:	4620      	mov	r0, r4
 801185a:	f7ff fa26 	bl	8010caa <_ZN8touchgfx9Container9removeAllEv>
 801185e:	6960      	ldr	r0, [r4, #20]
 8011860:	b120      	cbz	r0, 801186c <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 8011862:	6803      	ldr	r3, [r0, #0]
 8011864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011868:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801186a:	4718      	bx	r3
 801186c:	bd10      	pop	{r4, pc}
	...

08011870 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8011870:	b530      	push	{r4, r5, lr}
 8011872:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011876:	428b      	cmp	r3, r1
 8011878:	b085      	sub	sp, #20
 801187a:	4604      	mov	r4, r0
 801187c:	d017      	beq.n	80118ae <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801187e:	2500      	movs	r5, #0
 8011880:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8011884:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8011886:	462a      	mov	r2, r5
 8011888:	4629      	mov	r1, r5
 801188a:	f7ff f967 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801188e:	4b09      	ldr	r3, [pc, #36]	; (80118b4 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8011890:	e9cd 3400 	strd	r3, r4, [sp]
 8011894:	4b08      	ldr	r3, [pc, #32]	; (80118b8 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8011896:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801189a:	6823      	ldr	r3, [r4, #0]
 801189c:	4620      	mov	r0, r4
 801189e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118a0:	4669      	mov	r1, sp
 80118a2:	4798      	blx	r3
 80118a4:	6960      	ldr	r0, [r4, #20]
 80118a6:	b110      	cbz	r0, 80118ae <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80118a8:	6803      	ldr	r3, [r0, #0]
 80118aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80118ac:	4798      	blx	r3
 80118ae:	b005      	add	sp, #20
 80118b0:	bd30      	pop	{r4, r5, pc}
 80118b2:	bf00      	nop
 80118b4:	0802f8f0 	.word	0x0802f8f0
 80118b8:	08011921 	.word	0x08011921

080118bc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 80118bc:	b538      	push	{r3, r4, r5, lr}
 80118be:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80118c2:	2b01      	cmp	r3, #1
 80118c4:	460d      	mov	r5, r1
 80118c6:	4604      	mov	r4, r0
 80118c8:	4611      	mov	r1, r2
 80118ca:	d002      	beq.n	80118d2 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 80118cc:	2b02      	cmp	r3, #2
 80118ce:	d015      	beq.n	80118fc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 80118d0:	bd38      	pop	{r3, r4, r5, pc}
 80118d2:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80118d6:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80118da:	429a      	cmp	r2, r3
 80118dc:	bfb8      	it	lt
 80118de:	8103      	strhlt	r3, [r0, #8]
 80118e0:	896a      	ldrh	r2, [r5, #10]
 80118e2:	8943      	ldrh	r3, [r0, #10]
 80118e4:	4413      	add	r3, r2
 80118e6:	8143      	strh	r3, [r0, #10]
 80118e8:	460a      	mov	r2, r1
 80118ea:	4628      	mov	r0, r5
 80118ec:	2100      	movs	r1, #0
 80118ee:	f7f1 f8f9 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80118f2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80118f4:	896a      	ldrh	r2, [r5, #10]
 80118f6:	4413      	add	r3, r2
 80118f8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80118fa:	e7e9      	b.n	80118d0 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 80118fc:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011900:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011904:	429a      	cmp	r2, r3
 8011906:	bfb8      	it	lt
 8011908:	8143      	strhlt	r3, [r0, #10]
 801190a:	892a      	ldrh	r2, [r5, #8]
 801190c:	8903      	ldrh	r3, [r0, #8]
 801190e:	4413      	add	r3, r2
 8011910:	8103      	strh	r3, [r0, #8]
 8011912:	2200      	movs	r2, #0
 8011914:	4628      	mov	r0, r5
 8011916:	f7f1 f8e5 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 801191a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801191c:	892a      	ldrh	r2, [r5, #8]
 801191e:	e7ea      	b.n	80118f6 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

08011920 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 8011920:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 8011924:	f7ff bfca 	b.w	80118bc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

08011928 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 8011928:	b570      	push	{r4, r5, r6, lr}
 801192a:	4604      	mov	r4, r0
 801192c:	460d      	mov	r5, r1
 801192e:	f7ff fff7 	bl	8011920 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 8011932:	4620      	mov	r0, r4
 8011934:	4629      	mov	r1, r5
 8011936:	f7ff f9ab 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801193a:	6960      	ldr	r0, [r4, #20]
 801193c:	b120      	cbz	r0, 8011948 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 801193e:	6803      	ldr	r3, [r0, #0]
 8011940:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011944:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011946:	4718      	bx	r3
 8011948:	bd70      	pop	{r4, r5, r6, pc}
	...

0801194c <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 801194c:	b530      	push	{r4, r5, lr}
 801194e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011950:	b089      	sub	sp, #36	; 0x24
 8011952:	4604      	mov	r4, r0
 8011954:	4615      	mov	r5, r2
 8011956:	b92b      	cbnz	r3, 8011964 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 8011958:	6803      	ldr	r3, [r0, #0]
 801195a:	4611      	mov	r1, r2
 801195c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801195e:	4798      	blx	r3
 8011960:	b009      	add	sp, #36	; 0x24
 8011962:	bd30      	pop	{r4, r5, pc}
 8011964:	f7ff f9ec 	bl	8010d40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 8011968:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 801196c:	f88d 200c 	strb.w	r2, [sp, #12]
 8011970:	4a0f      	ldr	r2, [pc, #60]	; (80119b0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8011972:	9204      	str	r2, [sp, #16]
 8011974:	aa01      	add	r2, sp, #4
 8011976:	9205      	str	r2, [sp, #20]
 8011978:	4a0e      	ldr	r2, [pc, #56]	; (80119b4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801197a:	9502      	str	r5, [sp, #8]
 801197c:	2300      	movs	r3, #0
 801197e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011982:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011986:	f88d 3006 	strb.w	r3, [sp, #6]
 801198a:	6823      	ldr	r3, [r4, #0]
 801198c:	a904      	add	r1, sp, #16
 801198e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011990:	4620      	mov	r0, r4
 8011992:	4798      	blx	r3
 8011994:	4620      	mov	r0, r4
 8011996:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801199a:	4629      	mov	r1, r5
 801199c:	f7ff ff8e 	bl	80118bc <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 80119a0:	6960      	ldr	r0, [r4, #20]
 80119a2:	2800      	cmp	r0, #0
 80119a4:	d0dc      	beq.n	8011960 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80119a6:	6803      	ldr	r3, [r0, #0]
 80119a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80119aa:	4798      	blx	r3
 80119ac:	e7d8      	b.n	8011960 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 80119ae:	bf00      	nop
 80119b0:	0802f908 	.word	0x0802f908
 80119b4:	080117f3 	.word	0x080117f3

080119b8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 80119b8:	b538      	push	{r3, r4, r5, lr}
 80119ba:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80119be:	2b01      	cmp	r3, #1
 80119c0:	4604      	mov	r4, r0
 80119c2:	460d      	mov	r5, r1
 80119c4:	d002      	beq.n	80119cc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 80119c6:	2b02      	cmp	r3, #2
 80119c8:	d018      	beq.n	80119fc <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 80119ca:	bd38      	pop	{r3, r4, r5, pc}
 80119cc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80119d0:	4293      	cmp	r3, r2
 80119d2:	bfc8      	it	gt
 80119d4:	8102      	strhgt	r2, [r0, #8]
 80119d6:	894a      	ldrh	r2, [r1, #10]
 80119d8:	8943      	ldrh	r3, [r0, #10]
 80119da:	1a9b      	subs	r3, r3, r2
 80119dc:	8143      	strh	r3, [r0, #10]
 80119de:	680b      	ldr	r3, [r1, #0]
 80119e0:	4628      	mov	r0, r5
 80119e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80119e4:	2100      	movs	r1, #0
 80119e6:	4798      	blx	r3
 80119e8:	682b      	ldr	r3, [r5, #0]
 80119ea:	2100      	movs	r1, #0
 80119ec:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80119ee:	4628      	mov	r0, r5
 80119f0:	4798      	blx	r3
 80119f2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80119f4:	896a      	ldrh	r2, [r5, #10]
 80119f6:	1a9b      	subs	r3, r3, r2
 80119f8:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80119fa:	e7e6      	b.n	80119ca <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 80119fc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011a00:	4293      	cmp	r3, r2
 8011a02:	bfc8      	it	gt
 8011a04:	8142      	strhgt	r2, [r0, #10]
 8011a06:	890a      	ldrh	r2, [r1, #8]
 8011a08:	8903      	ldrh	r3, [r0, #8]
 8011a0a:	1a9b      	subs	r3, r3, r2
 8011a0c:	8103      	strh	r3, [r0, #8]
 8011a0e:	680b      	ldr	r3, [r1, #0]
 8011a10:	4628      	mov	r0, r5
 8011a12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a14:	2100      	movs	r1, #0
 8011a16:	4798      	blx	r3
 8011a18:	682b      	ldr	r3, [r5, #0]
 8011a1a:	2100      	movs	r1, #0
 8011a1c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011a1e:	4628      	mov	r0, r5
 8011a20:	4798      	blx	r3
 8011a22:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011a24:	892a      	ldrh	r2, [r5, #8]
 8011a26:	e7e6      	b.n	80119f6 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

08011a28 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 8011a28:	b530      	push	{r4, r5, lr}
 8011a2a:	b089      	sub	sp, #36	; 0x24
 8011a2c:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 8011a30:	f88d 200c 	strb.w	r2, [sp, #12]
 8011a34:	4a13      	ldr	r2, [pc, #76]	; (8011a84 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 8011a36:	9204      	str	r2, [sp, #16]
 8011a38:	aa01      	add	r2, sp, #4
 8011a3a:	9205      	str	r2, [sp, #20]
 8011a3c:	4a12      	ldr	r2, [pc, #72]	; (8011a88 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 8011a3e:	9102      	str	r1, [sp, #8]
 8011a40:	2300      	movs	r3, #0
 8011a42:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011a46:	f88d 3006 	strb.w	r3, [sp, #6]
 8011a4a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011a4e:	6803      	ldr	r3, [r0, #0]
 8011a50:	460d      	mov	r5, r1
 8011a52:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a54:	a904      	add	r1, sp, #16
 8011a56:	4604      	mov	r4, r0
 8011a58:	4798      	blx	r3
 8011a5a:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8011a5e:	b14b      	cbz	r3, 8011a74 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 8011a60:	4629      	mov	r1, r5
 8011a62:	4620      	mov	r0, r4
 8011a64:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8011a68:	f7ff ffa6 	bl	80119b8 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 8011a6c:	4629      	mov	r1, r5
 8011a6e:	4620      	mov	r0, r4
 8011a70:	f7ff f94f 	bl	8010d12 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011a74:	6960      	ldr	r0, [r4, #20]
 8011a76:	b110      	cbz	r0, 8011a7e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8011a78:	6803      	ldr	r3, [r0, #0]
 8011a7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011a7c:	4798      	blx	r3
 8011a7e:	b009      	add	sp, #36	; 0x24
 8011a80:	bd30      	pop	{r4, r5, pc}
 8011a82:	bf00      	nop
 8011a84:	0802f908 	.word	0x0802f908
 8011a88:	080116f5 	.word	0x080116f5

08011a8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8011a8c:	b513      	push	{r0, r1, r4, lr}
 8011a8e:	6803      	ldr	r3, [r0, #0]
 8011a90:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011a94:	2300      	movs	r3, #0
 8011a96:	e9cd 3300 	strd	r3, r3, [sp]
 8011a9a:	466b      	mov	r3, sp
 8011a9c:	47a0      	blx	r4
 8011a9e:	b002      	add	sp, #8
 8011aa0:	bd10      	pop	{r4, pc}

08011aa2 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011aa2:	2301      	movs	r3, #1
 8011aa4:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011aa8:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011aac:	4770      	bx	lr

08011aae <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8011aae:	2301      	movs	r3, #1
 8011ab0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011ab4:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011ab8:	4770      	bx	lr

08011aba <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8011aba:	6843      	ldr	r3, [r0, #4]
 8011abc:	2201      	movs	r2, #1
 8011abe:	725a      	strb	r2, [r3, #9]
 8011ac0:	6840      	ldr	r0, [r0, #4]
 8011ac2:	6803      	ldr	r3, [r0, #0]
 8011ac4:	691b      	ldr	r3, [r3, #16]
 8011ac6:	4718      	bx	r3

08011ac8 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011ac8:	6840      	ldr	r0, [r0, #4]
 8011aca:	6803      	ldr	r3, [r0, #0]
 8011acc:	689b      	ldr	r3, [r3, #8]
 8011ace:	4718      	bx	r3

08011ad0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011ad0:	b530      	push	{r4, r5, lr}
 8011ad2:	b08b      	sub	sp, #44	; 0x2c
 8011ad4:	6804      	ldr	r4, [r0, #0]
 8011ad6:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8011ada:	9509      	str	r5, [sp, #36]	; 0x24
 8011adc:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011ae0:	9508      	str	r5, [sp, #32]
 8011ae2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011ae6:	9507      	str	r5, [sp, #28]
 8011ae8:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8011aec:	9506      	str	r5, [sp, #24]
 8011aee:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011af2:	9505      	str	r5, [sp, #20]
 8011af4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011af8:	9504      	str	r5, [sp, #16]
 8011afa:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8011afe:	9503      	str	r5, [sp, #12]
 8011b00:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011b04:	9502      	str	r5, [sp, #8]
 8011b06:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8011b0a:	e9cd 3500 	strd	r3, r5, [sp]
 8011b0e:	4613      	mov	r3, r2
 8011b10:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011b12:	2200      	movs	r2, #0
 8011b14:	47a0      	blx	r4
 8011b16:	b00b      	add	sp, #44	; 0x2c
 8011b18:	bd30      	pop	{r4, r5, pc}
	...

08011b1c <_ZN8touchgfx3HAL10beginFrameEv>:
 8011b1c:	4b04      	ldr	r3, [pc, #16]	; (8011b30 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8011b1e:	781b      	ldrb	r3, [r3, #0]
 8011b20:	b123      	cbz	r3, 8011b2c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011b22:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 8011b26:	f080 0001 	eor.w	r0, r0, #1
 8011b2a:	4770      	bx	lr
 8011b2c:	2001      	movs	r0, #1
 8011b2e:	4770      	bx	lr
 8011b30:	2001383a 	.word	0x2001383a

08011b34 <_ZN8touchgfx3HAL8endFrameEv>:
 8011b34:	b510      	push	{r4, lr}
 8011b36:	4604      	mov	r4, r0
 8011b38:	6840      	ldr	r0, [r0, #4]
 8011b3a:	6803      	ldr	r3, [r0, #0]
 8011b3c:	689b      	ldr	r3, [r3, #8]
 8011b3e:	4798      	blx	r3
 8011b40:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 8011b44:	b113      	cbz	r3, 8011b4c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8011b46:	2301      	movs	r3, #1
 8011b48:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011b4c:	bd10      	pop	{r4, pc}

08011b4e <_ZN8touchgfx3HAL10initializeEv>:
 8011b4e:	b510      	push	{r4, lr}
 8011b50:	4604      	mov	r4, r0
 8011b52:	f7f0 fb2f 	bl	80021b4 <_ZN8touchgfx10OSWrappers10initializeEv>
 8011b56:	f7f0 fa3b 	bl	8001fd0 <_ZN8touchgfx4GPIO4initEv>
 8011b5a:	6860      	ldr	r0, [r4, #4]
 8011b5c:	6803      	ldr	r3, [r0, #0]
 8011b5e:	68db      	ldr	r3, [r3, #12]
 8011b60:	4798      	blx	r3
 8011b62:	68e0      	ldr	r0, [r4, #12]
 8011b64:	6803      	ldr	r3, [r0, #0]
 8011b66:	689b      	ldr	r3, [r3, #8]
 8011b68:	4798      	blx	r3
 8011b6a:	6823      	ldr	r3, [r4, #0]
 8011b6c:	4620      	mov	r0, r4
 8011b6e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011b70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b74:	4718      	bx	r3
	...

08011b78 <_ZN8touchgfx3HAL4tickEv>:
 8011b78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011b7a:	6803      	ldr	r3, [r0, #0]
 8011b7c:	4d5b      	ldr	r5, [pc, #364]	; (8011cec <_ZN8touchgfx3HAL4tickEv+0x174>)
 8011b7e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011b82:	4604      	mov	r4, r0
 8011b84:	4798      	blx	r3
 8011b86:	2800      	cmp	r0, #0
 8011b88:	f000 8095 	beq.w	8011cb6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8011b8c:	2001      	movs	r0, #1
 8011b8e:	f7f0 f9d1 	bl	8001f34 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011b92:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011b96:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011b9a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8011b9e:	2600      	movs	r6, #0
 8011ba0:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011ba4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011ba8:	b133      	cbz	r3, 8011bb8 <_ZN8touchgfx3HAL4tickEv+0x40>
 8011baa:	6823      	ldr	r3, [r4, #0]
 8011bac:	4620      	mov	r0, r4
 8011bae:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011bb2:	4798      	blx	r3
 8011bb4:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011bb8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8011bbc:	6862      	ldr	r2, [r4, #4]
 8011bbe:	f083 0301 	eor.w	r3, r3, #1
 8011bc2:	7253      	strb	r3, [r2, #9]
 8011bc4:	2601      	movs	r6, #1
 8011bc6:	702e      	strb	r6, [r5, #0]
 8011bc8:	f005 f93a 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8011bcc:	6803      	ldr	r3, [r0, #0]
 8011bce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011bd0:	4798      	blx	r3
 8011bd2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011bd6:	b90b      	cbnz	r3, 8011bdc <_ZN8touchgfx3HAL4tickEv+0x64>
 8011bd8:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8011bdc:	f005 f930 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8011be0:	6803      	ldr	r3, [r0, #0]
 8011be2:	695b      	ldr	r3, [r3, #20]
 8011be4:	4798      	blx	r3
 8011be6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011be8:	6803      	ldr	r3, [r0, #0]
 8011bea:	691b      	ldr	r3, [r3, #16]
 8011bec:	4798      	blx	r3
 8011bee:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011bf2:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011bf6:	3b01      	subs	r3, #1
 8011bf8:	b2db      	uxtb	r3, r3
 8011bfa:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011bfe:	b10a      	cbz	r2, 8011c04 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011c00:	2b00      	cmp	r3, #0
 8011c02:	d1eb      	bne.n	8011bdc <_ZN8touchgfx3HAL4tickEv+0x64>
 8011c04:	4a3a      	ldr	r2, [pc, #232]	; (8011cf0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011c06:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8011c0a:	7813      	ldrb	r3, [r2, #0]
 8011c0c:	3301      	adds	r3, #1
 8011c0e:	b25b      	sxtb	r3, r3
 8011c10:	4299      	cmp	r1, r3
 8011c12:	7013      	strb	r3, [r2, #0]
 8011c14:	dc10      	bgt.n	8011c38 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011c16:	68e0      	ldr	r0, [r4, #12]
 8011c18:	2300      	movs	r3, #0
 8011c1a:	7013      	strb	r3, [r2, #0]
 8011c1c:	6803      	ldr	r3, [r0, #0]
 8011c1e:	aa03      	add	r2, sp, #12
 8011c20:	68db      	ldr	r3, [r3, #12]
 8011c22:	a902      	add	r1, sp, #8
 8011c24:	4798      	blx	r3
 8011c26:	6823      	ldr	r3, [r4, #0]
 8011c28:	2800      	cmp	r0, #0
 8011c2a:	d050      	beq.n	8011cce <_ZN8touchgfx3HAL4tickEv+0x156>
 8011c2c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011c30:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011c34:	4620      	mov	r0, r4
 8011c36:	4798      	blx	r3
 8011c38:	6960      	ldr	r0, [r4, #20]
 8011c3a:	2300      	movs	r3, #0
 8011c3c:	f88d 3007 	strb.w	r3, [sp, #7]
 8011c40:	b158      	cbz	r0, 8011c5a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011c42:	6803      	ldr	r3, [r0, #0]
 8011c44:	f10d 0107 	add.w	r1, sp, #7
 8011c48:	68db      	ldr	r3, [r3, #12]
 8011c4a:	4798      	blx	r3
 8011c4c:	b128      	cbz	r0, 8011c5a <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011c4e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011c50:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011c54:	6803      	ldr	r3, [r0, #0]
 8011c56:	68db      	ldr	r3, [r3, #12]
 8011c58:	4798      	blx	r3
 8011c5a:	f104 001c 	add.w	r0, r4, #28
 8011c5e:	f016 f8c3 	bl	8027de8 <_ZN8touchgfx8Gestures4tickEv>
 8011c62:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011c66:	b30b      	cbz	r3, 8011cac <_ZN8touchgfx3HAL4tickEv+0x134>
 8011c68:	6920      	ldr	r0, [r4, #16]
 8011c6a:	6803      	ldr	r3, [r0, #0]
 8011c6c:	691b      	ldr	r3, [r3, #16]
 8011c6e:	4798      	blx	r3
 8011c70:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011c72:	4606      	mov	r6, r0
 8011c74:	b903      	cbnz	r3, 8011c78 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011c76:	6760      	str	r0, [r4, #116]	; 0x74
 8011c78:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011c7a:	4a1e      	ldr	r2, [pc, #120]	; (8011cf4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011c7c:	1af3      	subs	r3, r6, r3
 8011c7e:	4293      	cmp	r3, r2
 8011c80:	d914      	bls.n	8011cac <_ZN8touchgfx3HAL4tickEv+0x134>
 8011c82:	6920      	ldr	r0, [r4, #16]
 8011c84:	6803      	ldr	r3, [r0, #0]
 8011c86:	699b      	ldr	r3, [r3, #24]
 8011c88:	4798      	blx	r3
 8011c8a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011c8c:	2264      	movs	r2, #100	; 0x64
 8011c8e:	1af3      	subs	r3, r6, r3
 8011c90:	fbb3 f3f2 	udiv	r3, r3, r2
 8011c94:	fbb0 f0f3 	udiv	r0, r0, r3
 8011c98:	2800      	cmp	r0, #0
 8011c9a:	dc1d      	bgt.n	8011cd8 <_ZN8touchgfx3HAL4tickEv+0x160>
 8011c9c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011ca0:	6920      	ldr	r0, [r4, #16]
 8011ca2:	6803      	ldr	r3, [r0, #0]
 8011ca4:	2100      	movs	r1, #0
 8011ca6:	69db      	ldr	r3, [r3, #28]
 8011ca8:	4798      	blx	r3
 8011caa:	6766      	str	r6, [r4, #116]	; 0x74
 8011cac:	f005 f8c8 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8011cb0:	6803      	ldr	r3, [r0, #0]
 8011cb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011cb4:	4798      	blx	r3
 8011cb6:	6823      	ldr	r3, [r4, #0]
 8011cb8:	4620      	mov	r0, r4
 8011cba:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8011cbe:	4798      	blx	r3
 8011cc0:	2001      	movs	r0, #1
 8011cc2:	f7f0 f94f 	bl	8001f64 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011cc6:	2300      	movs	r3, #0
 8011cc8:	702b      	strb	r3, [r5, #0]
 8011cca:	b004      	add	sp, #16
 8011ccc:	bd70      	pop	{r4, r5, r6, pc}
 8011cce:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011cd2:	4620      	mov	r0, r4
 8011cd4:	4798      	blx	r3
 8011cd6:	e7af      	b.n	8011c38 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011cd8:	2863      	cmp	r0, #99	; 0x63
 8011cda:	bfcb      	itete	gt
 8011cdc:	2300      	movgt	r3, #0
 8011cde:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011ce2:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011ce6:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8011cea:	e7d9      	b.n	8011ca0 <_ZN8touchgfx3HAL4tickEv+0x128>
 8011cec:	20013840 	.word	0x20013840
 8011cf0:	20013841 	.word	0x20013841
 8011cf4:	05f5e100 	.word	0x05f5e100

08011cf8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011cf8:	b510      	push	{r4, lr}
 8011cfa:	4604      	mov	r4, r0
 8011cfc:	f7f0 fa8a 	bl	8002214 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011d00:	6863      	ldr	r3, [r4, #4]
 8011d02:	2200      	movs	r2, #0
 8011d04:	729a      	strb	r2, [r3, #10]
 8011d06:	bd10      	pop	{r4, pc}

08011d08 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011d08:	65c1      	str	r1, [r0, #92]	; 0x5c
 8011d0a:	301c      	adds	r0, #28
 8011d0c:	f016 b86a 	b.w	8027de4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011d10 <_ZN8touchgfx3HAL5touchEll>:
 8011d10:	b530      	push	{r4, r5, lr}
 8011d12:	b087      	sub	sp, #28
 8011d14:	4604      	mov	r4, r0
 8011d16:	a804      	add	r0, sp, #16
 8011d18:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011d1c:	f004 fe5c 	bl	80169d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011d20:	9b04      	ldr	r3, [sp, #16]
 8011d22:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011d26:	a906      	add	r1, sp, #24
 8011d28:	9b05      	ldr	r3, [sp, #20]
 8011d2a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011d2e:	a803      	add	r0, sp, #12
 8011d30:	f004 fea4 	bl	8016a7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011d34:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011d38:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011d3c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011d40:	f104 001c 	add.w	r0, r4, #28
 8011d44:	b189      	cbz	r1, 8011d6a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011d46:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8011d4a:	9300      	str	r3, [sp, #0]
 8011d4c:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011d50:	4613      	mov	r3, r2
 8011d52:	462a      	mov	r2, r5
 8011d54:	f016 f856 	bl	8027e04 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011d58:	b128      	cbz	r0, 8011d66 <_ZN8touchgfx3HAL5touchEll+0x56>
 8011d5a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011d5e:	6623      	str	r3, [r4, #96]	; 0x60
 8011d60:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011d64:	6663      	str	r3, [r4, #100]	; 0x64
 8011d66:	b007      	add	sp, #28
 8011d68:	bd30      	pop	{r4, r5, pc}
 8011d6a:	f016 f88b 	bl	8027e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011d6e:	2301      	movs	r3, #1
 8011d70:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011d74:	e7f1      	b.n	8011d5a <_ZN8touchgfx3HAL5touchEll+0x4a>

08011d76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011d76:	b510      	push	{r4, lr}
 8011d78:	2b00      	cmp	r3, #0
 8011d7a:	d046      	beq.n	8011e0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011d7c:	ea81 0002 	eor.w	r0, r1, r2
 8011d80:	07c4      	lsls	r4, r0, #31
 8011d82:	d508      	bpl.n	8011d96 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011d84:	440b      	add	r3, r1
 8011d86:	3a01      	subs	r2, #1
 8011d88:	428b      	cmp	r3, r1
 8011d8a:	d93e      	bls.n	8011e0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011d8c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011d90:	f801 0b01 	strb.w	r0, [r1], #1
 8011d94:	e7f8      	b.n	8011d88 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011d96:	07d0      	lsls	r0, r2, #31
 8011d98:	bf42      	ittt	mi
 8011d9a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011d9e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011da2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011da6:	2b01      	cmp	r3, #1
 8011da8:	d911      	bls.n	8011dce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011daa:	ea81 0402 	eor.w	r4, r1, r2
 8011dae:	07a4      	lsls	r4, r4, #30
 8011db0:	4610      	mov	r0, r2
 8011db2:	d022      	beq.n	8011dfa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011db4:	f023 0401 	bic.w	r4, r3, #1
 8011db8:	440c      	add	r4, r1
 8011dba:	428c      	cmp	r4, r1
 8011dbc:	4602      	mov	r2, r0
 8011dbe:	d904      	bls.n	8011dca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011dc0:	8812      	ldrh	r2, [r2, #0]
 8011dc2:	f821 2b02 	strh.w	r2, [r1], #2
 8011dc6:	3002      	adds	r0, #2
 8011dc8:	e7f7      	b.n	8011dba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011dca:	f003 0301 	and.w	r3, r3, #1
 8011dce:	f023 0003 	bic.w	r0, r3, #3
 8011dd2:	4408      	add	r0, r1
 8011dd4:	4288      	cmp	r0, r1
 8011dd6:	4614      	mov	r4, r2
 8011dd8:	d904      	bls.n	8011de4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011dda:	6824      	ldr	r4, [r4, #0]
 8011ddc:	f841 4b04 	str.w	r4, [r1], #4
 8011de0:	3204      	adds	r2, #4
 8011de2:	e7f7      	b.n	8011dd4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011de4:	f003 0303 	and.w	r3, r3, #3
 8011de8:	440b      	add	r3, r1
 8011dea:	3a01      	subs	r2, #1
 8011dec:	428b      	cmp	r3, r1
 8011dee:	d90c      	bls.n	8011e0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011df0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011df4:	f801 0b01 	strb.w	r0, [r1], #1
 8011df8:	e7f8      	b.n	8011dec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011dfa:	0790      	lsls	r0, r2, #30
 8011dfc:	d0e7      	beq.n	8011dce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011dfe:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011e02:	f821 0b02 	strh.w	r0, [r1], #2
 8011e06:	3b02      	subs	r3, #2
 8011e08:	e7e1      	b.n	8011dce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011e0a:	2001      	movs	r0, #1
 8011e0c:	bd10      	pop	{r4, pc}

08011e0e <_ZN8touchgfx3HAL7noTouchEv>:
 8011e0e:	b510      	push	{r4, lr}
 8011e10:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011e14:	4604      	mov	r4, r0
 8011e16:	b153      	cbz	r3, 8011e2e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011e18:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011e1c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011e20:	2101      	movs	r1, #1
 8011e22:	301c      	adds	r0, #28
 8011e24:	f016 f82e 	bl	8027e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011e28:	2300      	movs	r3, #0
 8011e2a:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011e2e:	bd10      	pop	{r4, pc}

08011e30 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011e30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e34:	b085      	sub	sp, #20
 8011e36:	ad04      	add	r5, sp, #16
 8011e38:	4604      	mov	r4, r0
 8011e3a:	2000      	movs	r0, #0
 8011e3c:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011e40:	69a0      	ldr	r0, [r4, #24]
 8011e42:	6806      	ldr	r6, [r0, #0]
 8011e44:	9501      	str	r5, [sp, #4]
 8011e46:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011e4a:	9500      	str	r5, [sp, #0]
 8011e4c:	6835      	ldr	r5, [r6, #0]
 8011e4e:	4699      	mov	r9, r3
 8011e50:	460f      	mov	r7, r1
 8011e52:	4690      	mov	r8, r2
 8011e54:	47a8      	blx	r5
 8011e56:	4d10      	ldr	r5, [pc, #64]	; (8011e98 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011e58:	4606      	mov	r6, r0
 8011e5a:	f8a5 9000 	strh.w	r9, [r5]
 8011e5e:	f7f2 fdc7 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8011e62:	6803      	ldr	r3, [r0, #0]
 8011e64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e66:	4798      	blx	r3
 8011e68:	b128      	cbz	r0, 8011e76 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011e6a:	2801      	cmp	r0, #1
 8011e6c:	d00b      	beq.n	8011e86 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011e6e:	4630      	mov	r0, r6
 8011e70:	b005      	add	sp, #20
 8011e72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e76:	882b      	ldrh	r3, [r5, #0]
 8011e78:	fb08 7203 	mla	r2, r8, r3, r7
 8011e7c:	9b03      	ldr	r3, [sp, #12]
 8011e7e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011e82:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011e84:	e7f3      	b.n	8011e6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011e86:	882a      	ldrh	r2, [r5, #0]
 8011e88:	9b03      	ldr	r3, [sp, #12]
 8011e8a:	fb08 7202 	mla	r2, r8, r2, r7
 8011e8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011e92:	1a9a      	subs	r2, r3, r2
 8011e94:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011e96:	e7ea      	b.n	8011e6e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011e98:	20013836 	.word	0x20013836

08011e9c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011e9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e9e:	b08b      	sub	sp, #44	; 0x2c
 8011ea0:	4617      	mov	r7, r2
 8011ea2:	4604      	mov	r4, r0
 8011ea4:	460e      	mov	r6, r1
 8011ea6:	461d      	mov	r5, r3
 8011ea8:	f7f2 fda2 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8011eac:	6803      	ldr	r3, [r0, #0]
 8011eae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011eb0:	4798      	blx	r3
 8011eb2:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011eb6:	9007      	str	r0, [sp, #28]
 8011eb8:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011ebc:	4b0d      	ldr	r3, [pc, #52]	; (8011ef4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011ebe:	6822      	ldr	r2, [r4, #0]
 8011ec0:	881b      	ldrh	r3, [r3, #0]
 8011ec2:	9306      	str	r3, [sp, #24]
 8011ec4:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011ec8:	9305      	str	r3, [sp, #20]
 8011eca:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011ece:	9304      	str	r3, [sp, #16]
 8011ed0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011ed4:	9303      	str	r3, [sp, #12]
 8011ed6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011eda:	9302      	str	r3, [sp, #8]
 8011edc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011ee0:	e9cd 5300 	strd	r5, r3, [sp]
 8011ee4:	4631      	mov	r1, r6
 8011ee6:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011ee8:	463b      	mov	r3, r7
 8011eea:	2200      	movs	r2, #0
 8011eec:	4620      	mov	r0, r4
 8011eee:	47a8      	blx	r5
 8011ef0:	b00b      	add	sp, #44	; 0x2c
 8011ef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ef4:	20013836 	.word	0x20013836

08011ef8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011ef8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011efc:	4698      	mov	r8, r3
 8011efe:	6803      	ldr	r3, [r0, #0]
 8011f00:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011f02:	4b15      	ldr	r3, [pc, #84]	; (8011f58 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011f04:	b08b      	sub	sp, #44	; 0x2c
 8011f06:	4617      	mov	r7, r2
 8011f08:	f8b3 9000 	ldrh.w	r9, [r3]
 8011f0c:	460e      	mov	r6, r1
 8011f0e:	4604      	mov	r4, r0
 8011f10:	f7f2 fd6e 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8011f14:	6803      	ldr	r3, [r0, #0]
 8011f16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f18:	4798      	blx	r3
 8011f1a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011f1e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011f22:	2302      	movs	r3, #2
 8011f24:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011f28:	2301      	movs	r3, #1
 8011f2a:	9305      	str	r3, [sp, #20]
 8011f2c:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011f30:	9304      	str	r3, [sp, #16]
 8011f32:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011f36:	9303      	str	r3, [sp, #12]
 8011f38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011f3c:	9302      	str	r3, [sp, #8]
 8011f3e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011f42:	2200      	movs	r2, #0
 8011f44:	e9cd 8300 	strd	r8, r3, [sp]
 8011f48:	4631      	mov	r1, r6
 8011f4a:	463b      	mov	r3, r7
 8011f4c:	4620      	mov	r0, r4
 8011f4e:	47a8      	blx	r5
 8011f50:	b00b      	add	sp, #44	; 0x2c
 8011f52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011f56:	bf00      	nop
 8011f58:	20013836 	.word	0x20013836

08011f5c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011f5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011f60:	4698      	mov	r8, r3
 8011f62:	6803      	ldr	r3, [r0, #0]
 8011f64:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011f66:	4b11      	ldr	r3, [pc, #68]	; (8011fac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011f68:	b087      	sub	sp, #28
 8011f6a:	f8b3 9000 	ldrh.w	r9, [r3]
 8011f6e:	460e      	mov	r6, r1
 8011f70:	4617      	mov	r7, r2
 8011f72:	4604      	mov	r4, r0
 8011f74:	f7f2 fd3c 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8011f78:	6803      	ldr	r3, [r0, #0]
 8011f7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f7c:	4798      	blx	r3
 8011f7e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011f82:	f8cd 900c 	str.w	r9, [sp, #12]
 8011f86:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011f8a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011f8e:	9302      	str	r3, [sp, #8]
 8011f90:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011f94:	9301      	str	r3, [sp, #4]
 8011f96:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011f9a:	9300      	str	r3, [sp, #0]
 8011f9c:	463a      	mov	r2, r7
 8011f9e:	4643      	mov	r3, r8
 8011fa0:	4631      	mov	r1, r6
 8011fa2:	4620      	mov	r0, r4
 8011fa4:	47a8      	blx	r5
 8011fa6:	b007      	add	sp, #28
 8011fa8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011fac:	20013836 	.word	0x20013836

08011fb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011fb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fb4:	4604      	mov	r4, r0
 8011fb6:	b08f      	sub	sp, #60	; 0x3c
 8011fb8:	4610      	mov	r0, r2
 8011fba:	460d      	mov	r5, r1
 8011fbc:	4691      	mov	r9, r2
 8011fbe:	461e      	mov	r6, r3
 8011fc0:	f008 fafa 	bl	801a5b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011fc4:	2800      	cmp	r0, #0
 8011fc6:	f000 809d 	beq.w	8012104 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011fca:	6823      	ldr	r3, [r4, #0]
 8011fcc:	f8df b198 	ldr.w	fp, [pc, #408]	; 8012168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011fd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011fd2:	f8df a198 	ldr.w	sl, [pc, #408]	; 801216c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011fd6:	4f61      	ldr	r7, [pc, #388]	; (801215c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011fd8:	4620      	mov	r0, r4
 8011fda:	4798      	blx	r3
 8011fdc:	6823      	ldr	r3, [r4, #0]
 8011fde:	4620      	mov	r0, r4
 8011fe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fe2:	4798      	blx	r3
 8011fe4:	f8bb 3000 	ldrh.w	r3, [fp]
 8011fe8:	9301      	str	r3, [sp, #4]
 8011fea:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011fee:	f8ba 3000 	ldrh.w	r3, [sl]
 8011ff2:	9302      	str	r3, [sp, #8]
 8011ff4:	883b      	ldrh	r3, [r7, #0]
 8011ff6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011ffa:	9303      	str	r3, [sp, #12]
 8011ffc:	4b58      	ldr	r3, [pc, #352]	; (8012160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011ffe:	9305      	str	r3, [sp, #20]
 8012000:	881a      	ldrh	r2, [r3, #0]
 8012002:	9204      	str	r2, [sp, #16]
 8012004:	4640      	mov	r0, r8
 8012006:	f008 fb6b 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801200a:	8038      	strh	r0, [r7, #0]
 801200c:	4640      	mov	r0, r8
 801200e:	f008 fb9b 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012012:	9b05      	ldr	r3, [sp, #20]
 8012014:	b280      	uxth	r0, r0
 8012016:	8018      	strh	r0, [r3, #0]
 8012018:	4b52      	ldr	r3, [pc, #328]	; (8012164 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801201a:	781b      	ldrb	r3, [r3, #0]
 801201c:	2b00      	cmp	r3, #0
 801201e:	d174      	bne.n	801210a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8012020:	883b      	ldrh	r3, [r7, #0]
 8012022:	f8ab 3000 	strh.w	r3, [fp]
 8012026:	f8aa 0000 	strh.w	r0, [sl]
 801202a:	4648      	mov	r0, r9
 801202c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8012030:	f008 fac2 	bl	801a5b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012034:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8012038:	2200      	movs	r2, #0
 801203a:	4611      	mov	r1, r2
 801203c:	4628      	mov	r0, r5
 801203e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8012042:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8012046:	f7f0 fd4d 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 801204a:	2301      	movs	r3, #1
 801204c:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8012050:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8012054:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012058:	2b00      	cmp	r3, #0
 801205a:	dd5c      	ble.n	8012116 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801205c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012060:	2b00      	cmp	r3, #0
 8012062:	dd58      	ble.n	8012116 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012064:	462a      	mov	r2, r5
 8012066:	ab0a      	add	r3, sp, #40	; 0x28
 8012068:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801206c:	6851      	ldr	r1, [r2, #4]
 801206e:	c303      	stmia	r3!, {r0, r1}
 8012070:	4631      	mov	r1, r6
 8012072:	a80a      	add	r0, sp, #40	; 0x28
 8012074:	f7fe ff92 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8012078:	4b38      	ldr	r3, [pc, #224]	; (801215c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801207a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801207e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8012082:	2100      	movs	r1, #0
 8012084:	aa0a      	add	r2, sp, #40	; 0x28
 8012086:	4b36      	ldr	r3, [pc, #216]	; (8012160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012088:	910c      	str	r1, [sp, #48]	; 0x30
 801208a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801208e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012092:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012096:	ab08      	add	r3, sp, #32
 8012098:	e883 0003 	stmia.w	r3, {r0, r1}
 801209c:	4618      	mov	r0, r3
 801209e:	a90c      	add	r1, sp, #48	; 0x30
 80120a0:	f7fe ff7c 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 80120a4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80120a6:	2b00      	cmp	r3, #0
 80120a8:	d13c      	bne.n	8012124 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80120aa:	2000      	movs	r0, #0
 80120ac:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80120b0:	2600      	movs	r6, #0
 80120b2:	682a      	ldr	r2, [r5, #0]
 80120b4:	696b      	ldr	r3, [r5, #20]
 80120b6:	616e      	str	r6, [r5, #20]
 80120b8:	9305      	str	r3, [sp, #20]
 80120ba:	6892      	ldr	r2, [r2, #8]
 80120bc:	a908      	add	r1, sp, #32
 80120be:	4628      	mov	r0, r5
 80120c0:	4790      	blx	r2
 80120c2:	9b05      	ldr	r3, [sp, #20]
 80120c4:	616b      	str	r3, [r5, #20]
 80120c6:	4652      	mov	r2, sl
 80120c8:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80120cc:	4649      	mov	r1, r9
 80120ce:	4628      	mov	r0, r5
 80120d0:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80120d4:	f7f0 fd06 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 80120d8:	4b23      	ldr	r3, [pc, #140]	; (8012168 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80120da:	9a01      	ldr	r2, [sp, #4]
 80120dc:	801a      	strh	r2, [r3, #0]
 80120de:	4b23      	ldr	r3, [pc, #140]	; (801216c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80120e0:	9a02      	ldr	r2, [sp, #8]
 80120e2:	801a      	strh	r2, [r3, #0]
 80120e4:	4b1d      	ldr	r3, [pc, #116]	; (801215c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80120e6:	9a03      	ldr	r2, [sp, #12]
 80120e8:	801a      	strh	r2, [r3, #0]
 80120ea:	4b1d      	ldr	r3, [pc, #116]	; (8012160 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80120ec:	9a04      	ldr	r2, [sp, #16]
 80120ee:	801a      	strh	r2, [r3, #0]
 80120f0:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80120f4:	6823      	ldr	r3, [r4, #0]
 80120f6:	4620      	mov	r0, r4
 80120f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80120fa:	4798      	blx	r3
 80120fc:	6823      	ldr	r3, [r4, #0]
 80120fe:	4620      	mov	r0, r4
 8012100:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012102:	4798      	blx	r3
 8012104:	b00f      	add	sp, #60	; 0x3c
 8012106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801210a:	883b      	ldrh	r3, [r7, #0]
 801210c:	f8ab 0000 	strh.w	r0, [fp]
 8012110:	f8aa 3000 	strh.w	r3, [sl]
 8012114:	e789      	b.n	801202a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8012116:	462a      	mov	r2, r5
 8012118:	ab0a      	add	r3, sp, #40	; 0x28
 801211a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801211e:	6851      	ldr	r1, [r2, #4]
 8012120:	c303      	stmia	r3!, {r0, r1}
 8012122:	e7a9      	b.n	8012078 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8012124:	a807      	add	r0, sp, #28
 8012126:	f008 fc4b 	bl	801a9c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801212a:	4606      	mov	r6, r0
 801212c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 801212e:	6803      	ldr	r3, [r0, #0]
 8012130:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012132:	4798      	blx	r3
 8012134:	4286      	cmp	r6, r0
 8012136:	d1b8      	bne.n	80120aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012138:	f7f2 fc5a 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 801213c:	6803      	ldr	r3, [r0, #0]
 801213e:	4606      	mov	r6, r0
 8012140:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012142:	9305      	str	r3, [sp, #20]
 8012144:	a807      	add	r0, sp, #28
 8012146:	f008 fc3b 	bl	801a9c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801214a:	9b05      	ldr	r3, [sp, #20]
 801214c:	4601      	mov	r1, r0
 801214e:	4630      	mov	r0, r6
 8012150:	4798      	blx	r3
 8012152:	f080 0001 	eor.w	r0, r0, #1
 8012156:	b2c0      	uxtb	r0, r0
 8012158:	e7a8      	b.n	80120ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801215a:	bf00      	nop
 801215c:	20013830 	.word	0x20013830
 8012160:	20013832 	.word	0x20013832
 8012164:	20013834 	.word	0x20013834
 8012168:	20013836 	.word	0x20013836
 801216c:	20013838 	.word	0x20013838

08012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012170:	b510      	push	{r4, lr}
 8012172:	4b07      	ldr	r3, [pc, #28]	; (8012190 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012174:	781b      	ldrb	r3, [r3, #0]
 8012176:	4604      	mov	r4, r0
 8012178:	b13b      	cbz	r3, 801218a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801217a:	6803      	ldr	r3, [r0, #0]
 801217c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801217e:	4798      	blx	r3
 8012180:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012182:	4283      	cmp	r3, r0
 8012184:	d101      	bne.n	801218a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012186:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012188:	bd10      	pop	{r4, pc}
 801218a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801218c:	e7fc      	b.n	8012188 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801218e:	bf00      	nop
 8012190:	2001383a 	.word	0x2001383a

08012194 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012198:	b08a      	sub	sp, #40	; 0x28
 801219a:	461d      	mov	r5, r3
 801219c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80121a0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80121a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80121a8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80121ac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80121b0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80121b4:	2400      	movs	r4, #0
 80121b6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80121ba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80121be:	f8ad 301c 	strh.w	r3, [sp, #28]
 80121c2:	4690      	mov	r8, r2
 80121c4:	4607      	mov	r7, r0
 80121c6:	9404      	str	r4, [sp, #16]
 80121c8:	f88d 4020 	strb.w	r4, [sp, #32]
 80121cc:	f7ff ffd0 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80121d0:	fb06 8505 	mla	r5, r6, r5, r8
 80121d4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80121d8:	6878      	ldr	r0, [r7, #4]
 80121da:	9505      	str	r5, [sp, #20]
 80121dc:	f8ad 601e 	strh.w	r6, [sp, #30]
 80121e0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80121e4:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80121e8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80121ec:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80121f0:	6803      	ldr	r3, [r0, #0]
 80121f2:	a901      	add	r1, sp, #4
 80121f4:	685b      	ldr	r3, [r3, #4]
 80121f6:	4798      	blx	r3
 80121f8:	b00a      	add	sp, #40	; 0x28
 80121fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080121fe <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80121fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012202:	b08b      	sub	sp, #44	; 0x2c
 8012204:	2400      	movs	r4, #0
 8012206:	461d      	mov	r5, r3
 8012208:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801220c:	4688      	mov	r8, r1
 801220e:	4691      	mov	r9, r2
 8012210:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012214:	9404      	str	r4, [sp, #16]
 8012216:	4607      	mov	r7, r0
 8012218:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801221c:	f7ff ffa8 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012220:	fb06 9505 	mla	r5, r6, r5, r9
 8012224:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012228:	f8ad 3018 	strh.w	r3, [sp, #24]
 801222c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012230:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8012234:	6878      	ldr	r0, [r7, #4]
 8012236:	9505      	str	r5, [sp, #20]
 8012238:	f8ad 301a 	strh.w	r3, [sp, #26]
 801223c:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012240:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012244:	f8cd 8010 	str.w	r8, [sp, #16]
 8012248:	f8ad 4020 	strh.w	r4, [sp, #32]
 801224c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012250:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8012254:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012258:	6803      	ldr	r3, [r0, #0]
 801225a:	a901      	add	r1, sp, #4
 801225c:	685b      	ldr	r3, [r3, #4]
 801225e:	4798      	blx	r3
 8012260:	b00b      	add	sp, #44	; 0x2c
 8012262:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012268 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801226c:	b08a      	sub	sp, #40	; 0x28
 801226e:	4698      	mov	r8, r3
 8012270:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8012274:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8012278:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 801227c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8012280:	2300      	movs	r3, #0
 8012282:	2d0b      	cmp	r5, #11
 8012284:	4606      	mov	r6, r0
 8012286:	9304      	str	r3, [sp, #16]
 8012288:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801228c:	d138      	bne.n	8012300 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801228e:	2380      	movs	r3, #128	; 0x80
 8012290:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012294:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012298:	f8ad 3018 	strh.w	r3, [sp, #24]
 801229c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80122a0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80122a4:	f88d 0020 	strb.w	r0, [sp, #32]
 80122a8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80122ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 80122b0:	4630      	mov	r0, r6
 80122b2:	9203      	str	r2, [sp, #12]
 80122b4:	f7ff ff5c 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80122b8:	2c0b      	cmp	r4, #11
 80122ba:	bf98      	it	ls
 80122bc:	4b1b      	ldrls	r3, [pc, #108]	; (801232c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80122be:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80122c2:	bf98      	it	ls
 80122c4:	5d19      	ldrbls	r1, [r3, r4]
 80122c6:	f8ad 701e 	strh.w	r7, [sp, #30]
 80122ca:	bf88      	it	hi
 80122cc:	2100      	movhi	r1, #0
 80122ce:	fb02 8307 	mla	r3, r2, r7, r8
 80122d2:	10c9      	asrs	r1, r1, #3
 80122d4:	fb01 0003 	mla	r0, r1, r3, r0
 80122d8:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80122dc:	9005      	str	r0, [sp, #20]
 80122de:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80122e2:	6870      	ldr	r0, [r6, #4]
 80122e4:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80122e8:	2300      	movs	r3, #0
 80122ea:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80122ee:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80122f2:	6803      	ldr	r3, [r0, #0]
 80122f4:	a901      	add	r1, sp, #4
 80122f6:	685b      	ldr	r3, [r3, #4]
 80122f8:	4798      	blx	r3
 80122fa:	b00a      	add	sp, #40	; 0x28
 80122fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012300:	2d02      	cmp	r5, #2
 8012302:	d109      	bne.n	8012318 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8012304:	28ff      	cmp	r0, #255	; 0xff
 8012306:	d105      	bne.n	8012314 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8012308:	f1bc 0f00 	cmp.w	ip, #0
 801230c:	bf14      	ite	ne
 801230e:	2340      	movne	r3, #64	; 0x40
 8012310:	2320      	moveq	r3, #32
 8012312:	e7bd      	b.n	8012290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012314:	2340      	movs	r3, #64	; 0x40
 8012316:	e7bb      	b.n	8012290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012318:	28ff      	cmp	r0, #255	; 0xff
 801231a:	d105      	bne.n	8012328 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801231c:	f1bc 0f00 	cmp.w	ip, #0
 8012320:	bf14      	ite	ne
 8012322:	2304      	movne	r3, #4
 8012324:	2301      	moveq	r3, #1
 8012326:	e7b3      	b.n	8012290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012328:	2304      	movs	r3, #4
 801232a:	e7b1      	b.n	8012290 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801232c:	0802f9b0 	.word	0x0802f9b0

08012330 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012334:	b08b      	sub	sp, #44	; 0x2c
 8012336:	461d      	mov	r5, r3
 8012338:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801233c:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8012340:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8012344:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012348:	bf14      	ite	ne
 801234a:	2308      	movne	r3, #8
 801234c:	2302      	moveq	r3, #2
 801234e:	2400      	movs	r4, #0
 8012350:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012354:	4688      	mov	r8, r1
 8012356:	4693      	mov	fp, r2
 8012358:	9404      	str	r4, [sp, #16]
 801235a:	4607      	mov	r7, r0
 801235c:	f7ff ff08 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012360:	2e0b      	cmp	r6, #11
 8012362:	bf98      	it	ls
 8012364:	4b15      	ldrls	r3, [pc, #84]	; (80123bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8012366:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801236a:	bf98      	it	ls
 801236c:	5d9c      	ldrbls	r4, [r3, r6]
 801236e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012372:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012376:	fb05 b50a 	mla	r5, r5, sl, fp
 801237a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801237e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012382:	10e4      	asrs	r4, r4, #3
 8012384:	fb04 0405 	mla	r4, r4, r5, r0
 8012388:	2300      	movs	r3, #0
 801238a:	6878      	ldr	r0, [r7, #4]
 801238c:	9405      	str	r4, [sp, #20]
 801238e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012392:	f8ad a01e 	strh.w	sl, [sp, #30]
 8012396:	f8cd 8010 	str.w	r8, [sp, #16]
 801239a:	f88d 9020 	strb.w	r9, [sp, #32]
 801239e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80123a2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80123a6:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80123aa:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80123ae:	6803      	ldr	r3, [r0, #0]
 80123b0:	a901      	add	r1, sp, #4
 80123b2:	685b      	ldr	r3, [r3, #4]
 80123b4:	4798      	blx	r3
 80123b6:	b00b      	add	sp, #44	; 0x2c
 80123b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123bc:	0802f9b0 	.word	0x0802f9b0

080123c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80123c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123c4:	461e      	mov	r6, r3
 80123c6:	4b0a      	ldr	r3, [pc, #40]	; (80123f0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80123c8:	460f      	mov	r7, r1
 80123ca:	881d      	ldrh	r5, [r3, #0]
 80123cc:	4690      	mov	r8, r2
 80123ce:	f7f2 fb0f 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 80123d2:	6803      	ldr	r3, [r0, #0]
 80123d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123d6:	4798      	blx	r3
 80123d8:	280b      	cmp	r0, #11
 80123da:	bf9a      	itte	ls
 80123dc:	4b05      	ldrls	r3, [pc, #20]	; (80123f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80123de:	5c1c      	ldrbls	r4, [r3, r0]
 80123e0:	2400      	movhi	r4, #0
 80123e2:	fb08 7005 	mla	r0, r8, r5, r7
 80123e6:	10e4      	asrs	r4, r4, #3
 80123e8:	fb04 6000 	mla	r0, r4, r0, r6
 80123ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123f0:	20013836 	.word	0x20013836
 80123f4:	0802f9b0 	.word	0x0802f9b0

080123f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80123f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123fa:	b08b      	sub	sp, #44	; 0x2c
 80123fc:	461f      	mov	r7, r3
 80123fe:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012402:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012406:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801240a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801240e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012412:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012416:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801241a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801241e:	2500      	movs	r5, #0
 8012420:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8012424:	f88d 3020 	strb.w	r3, [sp, #32]
 8012428:	4604      	mov	r4, r0
 801242a:	4616      	mov	r6, r2
 801242c:	9504      	str	r5, [sp, #16]
 801242e:	f7ff fe9f 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012432:	463a      	mov	r2, r7
 8012434:	4631      	mov	r1, r6
 8012436:	4603      	mov	r3, r0
 8012438:	4620      	mov	r0, r4
 801243a:	f7ff ffc1 	bl	80123c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801243e:	4b0e      	ldr	r3, [pc, #56]	; (8012478 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8012440:	9005      	str	r0, [sp, #20]
 8012442:	881b      	ldrh	r3, [r3, #0]
 8012444:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012448:	f7f2 fad2 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 801244c:	6803      	ldr	r3, [r0, #0]
 801244e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012450:	4798      	blx	r3
 8012452:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012454:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8012458:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 801245c:	9304      	str	r3, [sp, #16]
 801245e:	6860      	ldr	r0, [r4, #4]
 8012460:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8012464:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012468:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 801246c:	6803      	ldr	r3, [r0, #0]
 801246e:	a901      	add	r1, sp, #4
 8012470:	685b      	ldr	r3, [r3, #4]
 8012472:	4798      	blx	r3
 8012474:	b00b      	add	sp, #44	; 0x2c
 8012476:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012478:	20013836 	.word	0x20013836

0801247c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801247c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801247e:	b08d      	sub	sp, #52	; 0x34
 8012480:	466b      	mov	r3, sp
 8012482:	e883 0006 	stmia.w	r3, {r1, r2}
 8012486:	2300      	movs	r3, #0
 8012488:	9306      	str	r3, [sp, #24]
 801248a:	6803      	ldr	r3, [r0, #0]
 801248c:	f8bd 6000 	ldrh.w	r6, [sp]
 8012490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012492:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012496:	2501      	movs	r5, #1
 8012498:	9503      	str	r5, [sp, #12]
 801249a:	4604      	mov	r4, r0
 801249c:	4798      	blx	r3
 801249e:	463a      	mov	r2, r7
 80124a0:	4631      	mov	r1, r6
 80124a2:	4603      	mov	r3, r0
 80124a4:	4620      	mov	r0, r4
 80124a6:	f7ff ff8b 	bl	80123c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80124aa:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80124ac:	9307      	str	r3, [sp, #28]
 80124ae:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80124b2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80124b6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80124ba:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80124be:	4b0f      	ldr	r3, [pc, #60]	; (80124fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80124c0:	9004      	str	r0, [sp, #16]
 80124c2:	881b      	ldrh	r3, [r3, #0]
 80124c4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80124c8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80124cc:	f7f2 fa90 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 80124d0:	6803      	ldr	r3, [r0, #0]
 80124d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124d4:	4798      	blx	r3
 80124d6:	23ff      	movs	r3, #255	; 0xff
 80124d8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80124dc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80124e0:	6860      	ldr	r0, [r4, #4]
 80124e2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80124e6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80124ea:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80124ee:	6803      	ldr	r3, [r0, #0]
 80124f0:	a903      	add	r1, sp, #12
 80124f2:	685b      	ldr	r3, [r3, #4]
 80124f4:	4798      	blx	r3
 80124f6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80124f8:	b00d      	add	sp, #52	; 0x34
 80124fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80124fc:	20013836 	.word	0x20013836

08012500 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012500:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012504:	b08c      	sub	sp, #48	; 0x30
 8012506:	461e      	mov	r6, r3
 8012508:	466d      	mov	r5, sp
 801250a:	2300      	movs	r3, #0
 801250c:	e885 0006 	stmia.w	r5, {r1, r2}
 8012510:	9306      	str	r3, [sp, #24]
 8012512:	6803      	ldr	r3, [r0, #0]
 8012514:	f8bd 7000 	ldrh.w	r7, [sp]
 8012518:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801251a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801251e:	2501      	movs	r5, #1
 8012520:	9503      	str	r5, [sp, #12]
 8012522:	4604      	mov	r4, r0
 8012524:	4798      	blx	r3
 8012526:	4642      	mov	r2, r8
 8012528:	4639      	mov	r1, r7
 801252a:	4603      	mov	r3, r0
 801252c:	4620      	mov	r0, r4
 801252e:	f7ff ff47 	bl	80123c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012532:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012536:	f8ad 3020 	strh.w	r3, [sp, #32]
 801253a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801253e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012542:	4b11      	ldr	r3, [pc, #68]	; (8012588 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8012544:	9004      	str	r0, [sp, #16]
 8012546:	881b      	ldrh	r3, [r3, #0]
 8012548:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801254c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801254e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012552:	9607      	str	r6, [sp, #28]
 8012554:	f7f2 fa4c 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 8012558:	6803      	ldr	r3, [r0, #0]
 801255a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801255c:	4798      	blx	r3
 801255e:	23ff      	movs	r3, #255	; 0xff
 8012560:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8012564:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012568:	6860      	ldr	r0, [r4, #4]
 801256a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801256e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8012572:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8012576:	6803      	ldr	r3, [r0, #0]
 8012578:	a903      	add	r1, sp, #12
 801257a:	685b      	ldr	r3, [r3, #4]
 801257c:	4798      	blx	r3
 801257e:	4630      	mov	r0, r6
 8012580:	b00c      	add	sp, #48	; 0x30
 8012582:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012586:	bf00      	nop
 8012588:	20013836 	.word	0x20013836

0801258c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801258c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801258e:	b085      	sub	sp, #20
 8012590:	ac02      	add	r4, sp, #8
 8012592:	e884 0006 	stmia.w	r4, {r1, r2}
 8012596:	4605      	mov	r5, r0
 8012598:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801259c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80125a0:	f7ff fde6 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80125a4:	463a      	mov	r2, r7
 80125a6:	4603      	mov	r3, r0
 80125a8:	4631      	mov	r1, r6
 80125aa:	4628      	mov	r0, r5
 80125ac:	f7ff ff08 	bl	80123c0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80125b0:	4a05      	ldr	r2, [pc, #20]	; (80125c8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80125b2:	682b      	ldr	r3, [r5, #0]
 80125b4:	8812      	ldrh	r2, [r2, #0]
 80125b6:	9200      	str	r2, [sp, #0]
 80125b8:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80125ba:	e894 0006 	ldmia.w	r4, {r1, r2}
 80125be:	4603      	mov	r3, r0
 80125c0:	4628      	mov	r0, r5
 80125c2:	47b0      	blx	r6
 80125c4:	b005      	add	sp, #20
 80125c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80125c8:	20013836 	.word	0x20013836

080125cc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80125cc:	b570      	push	{r4, r5, r6, lr}
 80125ce:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80125d2:	4604      	mov	r4, r0
 80125d4:	b19b      	cbz	r3, 80125fe <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80125d6:	2002      	movs	r0, #2
 80125d8:	f7ef fcdc 	bl	8001f94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80125dc:	2300      	movs	r3, #0
 80125de:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80125e2:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80125e6:	6823      	ldr	r3, [r4, #0]
 80125e8:	4620      	mov	r0, r4
 80125ea:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80125ee:	f7ff fdbf 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80125f2:	462b      	mov	r3, r5
 80125f4:	4601      	mov	r1, r0
 80125f6:	4620      	mov	r0, r4
 80125f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125fc:	4718      	bx	r3
 80125fe:	bd70      	pop	{r4, r5, r6, pc}

08012600 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012600:	b538      	push	{r3, r4, r5, lr}
 8012602:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012606:	428b      	cmp	r3, r1
 8012608:	4604      	mov	r4, r0
 801260a:	460d      	mov	r5, r1
 801260c:	d006      	beq.n	801261c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801260e:	6803      	ldr	r3, [r0, #0]
 8012610:	b929      	cbnz	r1, 801261e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8012612:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012616:	4798      	blx	r3
 8012618:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801261c:	bd38      	pop	{r3, r4, r5, pc}
 801261e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8012622:	e7f8      	b.n	8012616 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08012624 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012624:	b510      	push	{r4, lr}
 8012626:	4b0d      	ldr	r3, [pc, #52]	; (801265c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8012628:	781b      	ldrb	r3, [r3, #0]
 801262a:	4604      	mov	r4, r0
 801262c:	b95b      	cbnz	r3, 8012646 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801262e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8012632:	2b02      	cmp	r3, #2
 8012634:	d007      	beq.n	8012646 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8012636:	6840      	ldr	r0, [r0, #4]
 8012638:	f000 f92c 	bl	8012894 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 801263c:	b118      	cbz	r0, 8012646 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801263e:	6862      	ldr	r2, [r4, #4]
 8012640:	7a53      	ldrb	r3, [r2, #9]
 8012642:	2b00      	cmp	r3, #0
 8012644:	d0fc      	beq.n	8012640 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8012646:	f7ef fddd 	bl	8002204 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801264a:	4620      	mov	r0, r4
 801264c:	2100      	movs	r1, #0
 801264e:	f7ff ffd7 	bl	8012600 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012652:	4620      	mov	r0, r4
 8012654:	f7ff fd8c 	bl	8012170 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012658:	bd10      	pop	{r4, pc}
 801265a:	bf00      	nop
 801265c:	2001383a 	.word	0x2001383a

08012660 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8012660:	b570      	push	{r4, r5, r6, lr}
 8012662:	4604      	mov	r4, r0
 8012664:	6803      	ldr	r3, [r0, #0]
 8012666:	b919      	cbnz	r1, 8012670 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8012668:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801266a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801266e:	4718      	bx	r3
 8012670:	2200      	movs	r2, #0
 8012672:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8012676:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801267a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801267c:	4798      	blx	r3
 801267e:	6863      	ldr	r3, [r4, #4]
 8012680:	2101      	movs	r1, #1
 8012682:	4605      	mov	r5, r0
 8012684:	7299      	strb	r1, [r3, #10]
 8012686:	4620      	mov	r0, r4
 8012688:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801268c:	f7ff ffb8 	bl	8012600 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012690:	4628      	mov	r0, r5
 8012692:	bd70      	pop	{r4, r5, r6, pc}

08012694 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012694:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012698:	1a13      	subs	r3, r2, r0
 801269a:	4258      	negs	r0, r3
 801269c:	4158      	adcs	r0, r3
 801269e:	4770      	bx	lr

080126a0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80126a0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80126a4:	1a9b      	subs	r3, r3, r2
 80126a6:	2b00      	cmp	r3, #0
 80126a8:	bfdc      	itt	le
 80126aa:	6882      	ldrle	r2, [r0, #8]
 80126ac:	189b      	addle	r3, r3, r2
 80126ae:	2b01      	cmp	r3, #1
 80126b0:	bfcc      	ite	gt
 80126b2:	2000      	movgt	r0, #0
 80126b4:	2001      	movle	r0, #1
 80126b6:	4770      	bx	lr

080126b8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80126b8:	6902      	ldr	r2, [r0, #16]
 80126ba:	6843      	ldr	r3, [r0, #4]
 80126bc:	2024      	movs	r0, #36	; 0x24
 80126be:	fb00 3002 	mla	r0, r0, r2, r3
 80126c2:	4770      	bx	lr

080126c4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80126c4:	6803      	ldr	r3, [r0, #0]
 80126c6:	691b      	ldr	r3, [r3, #16]
 80126c8:	4718      	bx	r3

080126ca <_ZN8touchgfx13DMA_Interface7executeEv>:
 80126ca:	b570      	push	{r4, r5, r6, lr}
 80126cc:	2301      	movs	r3, #1
 80126ce:	7203      	strb	r3, [r0, #8]
 80126d0:	4604      	mov	r4, r0
 80126d2:	6840      	ldr	r0, [r0, #4]
 80126d4:	6803      	ldr	r3, [r0, #0]
 80126d6:	699b      	ldr	r3, [r3, #24]
 80126d8:	4798      	blx	r3
 80126da:	6803      	ldr	r3, [r0, #0]
 80126dc:	2b40      	cmp	r3, #64	; 0x40
 80126de:	4605      	mov	r5, r0
 80126e0:	d00c      	beq.n	80126fc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80126e2:	d810      	bhi.n	8012706 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80126e4:	2b04      	cmp	r3, #4
 80126e6:	d01d      	beq.n	8012724 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80126e8:	d804      	bhi.n	80126f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80126ea:	2b01      	cmp	r3, #1
 80126ec:	d006      	beq.n	80126fc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80126ee:	2b02      	cmp	r3, #2
 80126f0:	d02c      	beq.n	801274c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80126f2:	bd70      	pop	{r4, r5, r6, pc}
 80126f4:	2b08      	cmp	r3, #8
 80126f6:	d01d      	beq.n	8012734 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80126f8:	2b20      	cmp	r3, #32
 80126fa:	d1fa      	bne.n	80126f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80126fc:	6823      	ldr	r3, [r4, #0]
 80126fe:	4620      	mov	r0, r4
 8012700:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012702:	4798      	blx	r3
 8012704:	e013      	b.n	801272e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012706:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801270a:	d0f7      	beq.n	80126fc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801270c:	d804      	bhi.n	8012718 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801270e:	2b80      	cmp	r3, #128	; 0x80
 8012710:	d0f4      	beq.n	80126fc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012712:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012716:	e7f0      	b.n	80126fa <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012718:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801271c:	d0ee      	beq.n	80126fc <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801271e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8012722:	e7e5      	b.n	80126f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012724:	6823      	ldr	r3, [r4, #0]
 8012726:	7f01      	ldrb	r1, [r0, #28]
 8012728:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801272a:	4620      	mov	r0, r4
 801272c:	4798      	blx	r3
 801272e:	6823      	ldr	r3, [r4, #0]
 8012730:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012732:	e006      	b.n	8012742 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8012734:	6823      	ldr	r3, [r4, #0]
 8012736:	7f01      	ldrb	r1, [r0, #28]
 8012738:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801273a:	4620      	mov	r0, r4
 801273c:	4798      	blx	r3
 801273e:	6823      	ldr	r3, [r4, #0]
 8012740:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012742:	4629      	mov	r1, r5
 8012744:	4620      	mov	r0, r4
 8012746:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801274a:	4718      	bx	r3
 801274c:	6823      	ldr	r3, [r4, #0]
 801274e:	4620      	mov	r0, r4
 8012750:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012752:	4798      	blx	r3
 8012754:	e7f3      	b.n	801273e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08012756 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8012756:	4770      	bx	lr

08012758 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8012758:	4770      	bx	lr

0801275a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801275a:	4770      	bx	lr

0801275c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 801275c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8012760:	1ad2      	subs	r2, r2, r3
 8012762:	2a00      	cmp	r2, #0
 8012764:	b510      	push	{r4, lr}
 8012766:	bfdc      	itt	le
 8012768:	6884      	ldrle	r4, [r0, #8]
 801276a:	1912      	addle	r2, r2, r4
 801276c:	2a01      	cmp	r2, #1
 801276e:	dd16      	ble.n	801279e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8012770:	6842      	ldr	r2, [r0, #4]
 8012772:	2424      	movs	r4, #36	; 0x24
 8012774:	fb04 2303 	mla	r3, r4, r3, r2
 8012778:	f101 0220 	add.w	r2, r1, #32
 801277c:	f851 4b04 	ldr.w	r4, [r1], #4
 8012780:	f843 4b04 	str.w	r4, [r3], #4
 8012784:	4291      	cmp	r1, r2
 8012786:	d1f9      	bne.n	801277c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8012788:	780a      	ldrb	r2, [r1, #0]
 801278a:	701a      	strb	r2, [r3, #0]
 801278c:	68c3      	ldr	r3, [r0, #12]
 801278e:	6882      	ldr	r2, [r0, #8]
 8012790:	f3bf 8f5b 	dmb	ish
 8012794:	3301      	adds	r3, #1
 8012796:	429a      	cmp	r2, r3
 8012798:	bfd8      	it	le
 801279a:	1a9b      	suble	r3, r3, r2
 801279c:	60c3      	str	r3, [r0, #12]
 801279e:	bd10      	pop	{r4, pc}

080127a0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80127a0:	6903      	ldr	r3, [r0, #16]
 80127a2:	6882      	ldr	r2, [r0, #8]
 80127a4:	f3bf 8f5b 	dmb	ish
 80127a8:	3301      	adds	r3, #1
 80127aa:	429a      	cmp	r2, r3
 80127ac:	bfd8      	it	le
 80127ae:	1a9b      	suble	r3, r3, r2
 80127b0:	6103      	str	r3, [r0, #16]
 80127b2:	4770      	bx	lr

080127b4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80127b4:	b570      	push	{r4, r5, r6, lr}
 80127b6:	4604      	mov	r4, r0
 80127b8:	460e      	mov	r6, r1
 80127ba:	6860      	ldr	r0, [r4, #4]
 80127bc:	6803      	ldr	r3, [r0, #0]
 80127be:	685b      	ldr	r3, [r3, #4]
 80127c0:	4798      	blx	r3
 80127c2:	2800      	cmp	r0, #0
 80127c4:	d1f9      	bne.n	80127ba <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80127c6:	4d0d      	ldr	r5, [pc, #52]	; (80127fc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80127c8:	6828      	ldr	r0, [r5, #0]
 80127ca:	6803      	ldr	r3, [r0, #0]
 80127cc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80127ce:	4798      	blx	r3
 80127d0:	f7ef fd26 	bl	8002220 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80127d4:	6828      	ldr	r0, [r5, #0]
 80127d6:	2101      	movs	r1, #1
 80127d8:	f7ff ff12 	bl	8012600 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80127dc:	6860      	ldr	r0, [r4, #4]
 80127de:	6803      	ldr	r3, [r0, #0]
 80127e0:	4631      	mov	r1, r6
 80127e2:	689b      	ldr	r3, [r3, #8]
 80127e4:	4798      	blx	r3
 80127e6:	6823      	ldr	r3, [r4, #0]
 80127e8:	4620      	mov	r0, r4
 80127ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127ec:	4798      	blx	r3
 80127ee:	6828      	ldr	r0, [r5, #0]
 80127f0:	6803      	ldr	r3, [r0, #0]
 80127f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80127f6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80127f8:	4718      	bx	r3
 80127fa:	bf00      	nop
 80127fc:	2001383c 	.word	0x2001383c

08012800 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012800:	b508      	push	{r3, lr}
 8012802:	f7ef fcff 	bl	8002204 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012806:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801280a:	f7ef bd03 	b.w	8002214 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801280e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801280e:	b510      	push	{r4, lr}
 8012810:	2114      	movs	r1, #20
 8012812:	4604      	mov	r4, r0
 8012814:	f018 fbc9 	bl	802afaa <_ZdlPvj>
 8012818:	4620      	mov	r0, r4
 801281a:	bd10      	pop	{r4, pc}

0801281c <_ZN8touchgfx13DMA_Interface5startEv>:
 801281c:	b510      	push	{r4, lr}
 801281e:	4604      	mov	r4, r0
 8012820:	6840      	ldr	r0, [r0, #4]
 8012822:	6803      	ldr	r3, [r0, #0]
 8012824:	681b      	ldr	r3, [r3, #0]
 8012826:	4798      	blx	r3
 8012828:	b948      	cbnz	r0, 801283e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801282a:	7a63      	ldrb	r3, [r4, #9]
 801282c:	b13b      	cbz	r3, 801283e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801282e:	7a23      	ldrb	r3, [r4, #8]
 8012830:	b92b      	cbnz	r3, 801283e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012832:	6823      	ldr	r3, [r4, #0]
 8012834:	4620      	mov	r0, r4
 8012836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012838:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801283c:	4718      	bx	r3
 801283e:	bd10      	pop	{r4, pc}

08012840 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8012840:	b570      	push	{r4, r5, r6, lr}
 8012842:	4604      	mov	r4, r0
 8012844:	6840      	ldr	r0, [r0, #4]
 8012846:	6803      	ldr	r3, [r0, #0]
 8012848:	681b      	ldr	r3, [r3, #0]
 801284a:	4798      	blx	r3
 801284c:	4605      	mov	r5, r0
 801284e:	b930      	cbnz	r0, 801285e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8012850:	7a23      	ldrb	r3, [r4, #8]
 8012852:	b123      	cbz	r3, 801285e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8012854:	6860      	ldr	r0, [r4, #4]
 8012856:	6803      	ldr	r3, [r0, #0]
 8012858:	695b      	ldr	r3, [r3, #20]
 801285a:	4798      	blx	r3
 801285c:	7225      	strb	r5, [r4, #8]
 801285e:	6860      	ldr	r0, [r4, #4]
 8012860:	6803      	ldr	r3, [r0, #0]
 8012862:	681b      	ldr	r3, [r3, #0]
 8012864:	4798      	blx	r3
 8012866:	b928      	cbnz	r0, 8012874 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8012868:	6823      	ldr	r3, [r4, #0]
 801286a:	4620      	mov	r0, r4
 801286c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801286e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012872:	4718      	bx	r3
 8012874:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012878:	f7ef bcda 	b.w	8002230 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801287c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801287c:	b510      	push	{r4, lr}
 801287e:	4c04      	ldr	r4, [pc, #16]	; (8012890 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8012880:	6082      	str	r2, [r0, #8]
 8012882:	2200      	movs	r2, #0
 8012884:	e9c0 4100 	strd	r4, r1, [r0]
 8012888:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801288c:	bd10      	pop	{r4, pc}
 801288e:	bf00      	nop
 8012890:	0802f9c4 	.word	0x0802f9c4

08012894 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012894:	6840      	ldr	r0, [r0, #4]
 8012896:	6803      	ldr	r3, [r0, #0]
 8012898:	681b      	ldr	r3, [r3, #0]
 801289a:	4718      	bx	r3

0801289c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801289c:	4b06      	ldr	r3, [pc, #24]	; (80128b8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801289e:	60c1      	str	r1, [r0, #12]
 80128a0:	094a      	lsrs	r2, r1, #5
 80128a2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 80128a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80128aa:	4313      	orrs	r3, r2
 80128ac:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80128b0:	4319      	orrs	r1, r3
 80128b2:	8201      	strh	r1, [r0, #16]
 80128b4:	4770      	bx	lr
 80128b6:	bf00      	nop
 80128b8:	fffff800 	.word	0xfffff800

080128bc <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 80128bc:	f1a0 0008 	sub.w	r0, r0, #8
 80128c0:	e7ec      	b.n	801289c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 80128c2:	bf00      	nop

080128c4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80128c4:	b508      	push	{r3, lr}
 80128c6:	4b05      	ldr	r3, [pc, #20]	; (80128dc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80128c8:	6818      	ldr	r0, [r3, #0]
 80128ca:	6803      	ldr	r3, [r0, #0]
 80128cc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80128d0:	4798      	blx	r3
 80128d2:	1e43      	subs	r3, r0, #1
 80128d4:	4258      	negs	r0, r3
 80128d6:	4158      	adcs	r0, r3
 80128d8:	bd08      	pop	{r3, pc}
 80128da:	bf00      	nop
 80128dc:	2001383c 	.word	0x2001383c

080128e0 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80128e0:	4770      	bx	lr

080128e2 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80128e2:	3808      	subs	r0, #8
 80128e4:	4770      	bx	lr

080128e6 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80128e6:	b430      	push	{r4, r5}
 80128e8:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80128ec:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80128f0:	8a02      	ldrh	r2, [r0, #16]
 80128f2:	9202      	str	r2, [sp, #8]
 80128f4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80128f8:	68c2      	ldr	r2, [r0, #12]
 80128fa:	4629      	mov	r1, r5
 80128fc:	4620      	mov	r0, r4
 80128fe:	bc30      	pop	{r4, r5}
 8012900:	f7ef bf5a 	b.w	80027b8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012904 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012904:	f7ef bf56 	b.w	80027b4 <_ZN8touchgfx5paint8tearDownEv>

08012908 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012908:	b510      	push	{r4, lr}
 801290a:	2114      	movs	r1, #20
 801290c:	4604      	mov	r4, r0
 801290e:	f018 fb4c 	bl	802afaa <_ZdlPvj>
 8012912:	4620      	mov	r0, r4
 8012914:	bd10      	pop	{r4, pc}

08012916 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8012916:	f1a0 0008 	sub.w	r0, r0, #8
 801291a:	e7f5      	b.n	8012908 <_ZN8touchgfx13PainterRGB565D0Ev>

0801291c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801291c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801291e:	6803      	ldr	r3, [r0, #0]
 8012920:	460d      	mov	r5, r1
 8012922:	4604      	mov	r4, r0
 8012924:	4601      	mov	r1, r0
 8012926:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012928:	a802      	add	r0, sp, #8
 801292a:	4798      	blx	r3
 801292c:	6828      	ldr	r0, [r5, #0]
 801292e:	6869      	ldr	r1, [r5, #4]
 8012930:	466b      	mov	r3, sp
 8012932:	c303      	stmia	r3!, {r0, r1}
 8012934:	4668      	mov	r0, sp
 8012936:	4619      	mov	r1, r3
 8012938:	f7fe fb30 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801293c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801293e:	b188      	cbz	r0, 8012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012940:	6803      	ldr	r3, [r0, #0]
 8012942:	1d21      	adds	r1, r4, #4
 8012944:	68db      	ldr	r3, [r3, #12]
 8012946:	4798      	blx	r3
 8012948:	b160      	cbz	r0, 8012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801294a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801294e:	2b00      	cmp	r3, #0
 8012950:	dd08      	ble.n	8012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8012952:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8012956:	2d00      	cmp	r5, #0
 8012958:	dd04      	ble.n	8012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801295a:	4a2b      	ldr	r2, [pc, #172]	; (8012a08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 801295c:	7812      	ldrb	r2, [r2, #0]
 801295e:	b11a      	cbz	r2, 8012968 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8012960:	2a01      	cmp	r2, #1
 8012962:	d029      	beq.n	80129b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8012964:	b004      	add	sp, #16
 8012966:	bd70      	pop	{r4, r5, r6, pc}
 8012968:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801296c:	441d      	add	r5, r3
 801296e:	b2ad      	uxth	r5, r5
 8012970:	b22e      	sxth	r6, r5
 8012972:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8012976:	42b3      	cmp	r3, r6
 8012978:	daf4      	bge.n	8012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801297a:	6823      	ldr	r3, [r4, #0]
 801297c:	4669      	mov	r1, sp
 801297e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012980:	4620      	mov	r0, r4
 8012982:	4798      	blx	r3
 8012984:	b940      	cbnz	r0, 8012998 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8012986:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801298a:	2b01      	cmp	r3, #1
 801298c:	d004      	beq.n	8012998 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801298e:	3301      	adds	r3, #1
 8012990:	105b      	asrs	r3, r3, #1
 8012992:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012996:	e7f0      	b.n	801297a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012998:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801299c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80129a0:	4413      	add	r3, r2
 80129a2:	b29b      	uxth	r3, r3
 80129a4:	441a      	add	r2, r3
 80129a6:	b212      	sxth	r2, r2
 80129a8:	4296      	cmp	r6, r2
 80129aa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80129ae:	dae0      	bge.n	8012972 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80129b0:	1aeb      	subs	r3, r5, r3
 80129b2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80129b6:	e7dc      	b.n	8012972 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 80129b8:	f8bd 5000 	ldrh.w	r5, [sp]
 80129bc:	441d      	add	r5, r3
 80129be:	b2ad      	uxth	r5, r5
 80129c0:	b22e      	sxth	r6, r5
 80129c2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80129c6:	42b3      	cmp	r3, r6
 80129c8:	dacc      	bge.n	8012964 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80129ca:	6823      	ldr	r3, [r4, #0]
 80129cc:	4669      	mov	r1, sp
 80129ce:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80129d0:	4620      	mov	r0, r4
 80129d2:	4798      	blx	r3
 80129d4:	b940      	cbnz	r0, 80129e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80129d6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80129da:	2b01      	cmp	r3, #1
 80129dc:	d004      	beq.n	80129e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80129de:	3301      	adds	r3, #1
 80129e0:	105b      	asrs	r3, r3, #1
 80129e2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80129e6:	e7f0      	b.n	80129ca <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80129e8:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80129ec:	f8bd 3000 	ldrh.w	r3, [sp]
 80129f0:	4413      	add	r3, r2
 80129f2:	b29b      	uxth	r3, r3
 80129f4:	441a      	add	r2, r3
 80129f6:	b212      	sxth	r2, r2
 80129f8:	4296      	cmp	r6, r2
 80129fa:	f8ad 3000 	strh.w	r3, [sp]
 80129fe:	dae0      	bge.n	80129c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012a00:	1aeb      	subs	r3, r5, r3
 8012a02:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012a06:	e7dc      	b.n	80129c2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012a08:	20013834 	.word	0x20013834

08012a0c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8012a0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012a0e:	6803      	ldr	r3, [r0, #0]
 8012a10:	4604      	mov	r4, r0
 8012a12:	4601      	mov	r1, r0
 8012a14:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012a16:	4668      	mov	r0, sp
 8012a18:	4798      	blx	r3
 8012a1a:	2100      	movs	r1, #0
 8012a1c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012a20:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012a24:	9102      	str	r1, [sp, #8]
 8012a26:	4668      	mov	r0, sp
 8012a28:	a902      	add	r1, sp, #8
 8012a2a:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012a2e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8012a32:	f7fe fab3 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8012a36:	6823      	ldr	r3, [r4, #0]
 8012a38:	4669      	mov	r1, sp
 8012a3a:	691b      	ldr	r3, [r3, #16]
 8012a3c:	4620      	mov	r0, r4
 8012a3e:	4798      	blx	r3
 8012a40:	b004      	add	sp, #16
 8012a42:	bd10      	pop	{r4, pc}

08012a44 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8012a44:	2101      	movs	r1, #1
 8012a46:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012a4a:	490b      	ldr	r1, [pc, #44]	; (8012a78 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8012a4c:	6001      	str	r1, [r0, #0]
 8012a4e:	2200      	movs	r2, #0
 8012a50:	21ff      	movs	r1, #255	; 0xff
 8012a52:	8082      	strh	r2, [r0, #4]
 8012a54:	80c2      	strh	r2, [r0, #6]
 8012a56:	8102      	strh	r2, [r0, #8]
 8012a58:	8142      	strh	r2, [r0, #10]
 8012a5a:	8182      	strh	r2, [r0, #12]
 8012a5c:	81c2      	strh	r2, [r0, #14]
 8012a5e:	8202      	strh	r2, [r0, #16]
 8012a60:	8242      	strh	r2, [r0, #18]
 8012a62:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012a66:	61c2      	str	r2, [r0, #28]
 8012a68:	8402      	strh	r2, [r0, #32]
 8012a6a:	8442      	strh	r2, [r0, #34]	; 0x22
 8012a6c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012a70:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8012a74:	6282      	str	r2, [r0, #40]	; 0x28
 8012a76:	4770      	bx	lr
 8012a78:	0802fa20 	.word	0x0802fa20

08012a7c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8012a7c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8012a80:	4602      	mov	r2, r0
 8012a82:	cb03      	ldmia	r3!, {r0, r1}
 8012a84:	6010      	str	r0, [r2, #0]
 8012a86:	6051      	str	r1, [r2, #4]
 8012a88:	4610      	mov	r0, r2
 8012a8a:	4770      	bx	lr

08012a8c <_ZN8touchgfx4LineD1Ev>:
 8012a8c:	4770      	bx	lr

08012a8e <_ZN8touchgfx4LineD0Ev>:
 8012a8e:	b510      	push	{r4, lr}
 8012a90:	2170      	movs	r1, #112	; 0x70
 8012a92:	4604      	mov	r4, r0
 8012a94:	f018 fa89 	bl	802afaa <_ZdlPvj>
 8012a98:	4620      	mov	r0, r4
 8012a9a:	bd10      	pop	{r4, pc}

08012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8012a9c:	b507      	push	{r0, r1, r2, lr}
 8012a9e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012aa2:	ab01      	add	r3, sp, #4
 8012aa4:	6809      	ldr	r1, [r1, #0]
 8012aa6:	6800      	ldr	r0, [r0, #0]
 8012aa8:	f005 fc80 	bl	80183ac <_ZN8touchgfx6muldivElllRl>
 8012aac:	b003      	add	sp, #12
 8012aae:	f85d fb04 	ldr.w	pc, [sp], #4

08012ab2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012ab2:	6800      	ldr	r0, [r0, #0]
 8012ab4:	2800      	cmp	r0, #0
 8012ab6:	bfb9      	ittee	lt
 8012ab8:	2320      	movlt	r3, #32
 8012aba:	fb90 f0f3 	sdivlt	r0, r0, r3
 8012abe:	301f      	addge	r0, #31
 8012ac0:	1140      	asrge	r0, r0, #5
 8012ac2:	4770      	bx	lr

08012ac4 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012ac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ac8:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8012acc:	b089      	sub	sp, #36	; 0x24
 8012ace:	4604      	mov	r4, r0
 8012ad0:	b353      	cbz	r3, 8012b28 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012ad2:	6803      	ldr	r3, [r0, #0]
 8012ad4:	4601      	mov	r1, r0
 8012ad6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012ad8:	a802      	add	r0, sp, #8
 8012ada:	4798      	blx	r3
 8012adc:	2220      	movs	r2, #32
 8012ade:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012ae2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012ae4:	fb9a f0f2 	sdiv	r0, sl, r2
 8012ae8:	fb91 f5f2 	sdiv	r5, r1, r2
 8012aec:	1b40      	subs	r0, r0, r5
 8012aee:	2800      	cmp	r0, #0
 8012af0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012af2:	fb93 f6f2 	sdiv	r6, r3, r2
 8012af6:	bfb8      	it	lt
 8012af8:	4240      	neglt	r0, r0
 8012afa:	0076      	lsls	r6, r6, #1
 8012afc:	4286      	cmp	r6, r0
 8012afe:	f8d4 b000 	ldr.w	fp, [r4]
 8012b02:	dc0c      	bgt.n	8012b1e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012b04:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012b06:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8012b0a:	fb95 f0f2 	sdiv	r0, r5, r2
 8012b0e:	fb98 f7f2 	sdiv	r7, r8, r2
 8012b12:	1bc0      	subs	r0, r0, r7
 8012b14:	2800      	cmp	r0, #0
 8012b16:	bfb8      	it	lt
 8012b18:	4240      	neglt	r0, r0
 8012b1a:	4286      	cmp	r6, r0
 8012b1c:	dd07      	ble.n	8012b2e <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8012b1e:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012b22:	a902      	add	r1, sp, #8
 8012b24:	4620      	mov	r0, r4
 8012b26:	4798      	blx	r3
 8012b28:	b009      	add	sp, #36	; 0x24
 8012b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b2e:	3301      	adds	r3, #1
 8012b30:	2002      	movs	r0, #2
 8012b32:	f10d 0920 	add.w	r9, sp, #32
 8012b36:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8012b3a:	4103      	asrs	r3, r0
 8012b3c:	f849 3d08 	str.w	r3, [r9, #-8]!
 8012b40:	eb01 060a 	add.w	r6, r1, sl
 8012b44:	eb08 0705 	add.w	r7, r8, r5
 8012b48:	fb96 f6f0 	sdiv	r6, r6, r0
 8012b4c:	fb97 f7f0 	sdiv	r7, r7, r0
 8012b50:	4648      	mov	r0, r9
 8012b52:	9101      	str	r1, [sp, #4]
 8012b54:	b236      	sxth	r6, r6
 8012b56:	b23f      	sxth	r7, r7
 8012b58:	fb96 f6f2 	sdiv	r6, r6, r2
 8012b5c:	fb97 f7f2 	sdiv	r7, r7, r2
 8012b60:	f7ff ffa7 	bl	8012ab2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012b64:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012b68:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8012b6c:	9901      	ldr	r1, [sp, #4]
 8012b6e:	4293      	cmp	r3, r2
 8012b70:	fa1f fe87 	uxth.w	lr, r7
 8012b74:	fa1f fc86 	uxth.w	ip, r6
 8012b78:	eba1 0a0a 	sub.w	sl, r1, sl
 8012b7c:	b280      	uxth	r0, r0
 8012b7e:	da54      	bge.n	8012c2a <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8012b80:	ebac 0100 	sub.w	r1, ip, r0
 8012b84:	b289      	uxth	r1, r1
 8012b86:	4460      	add	r0, ip
 8012b88:	f1ba 0f00 	cmp.w	sl, #0
 8012b8c:	b20e      	sxth	r6, r1
 8012b8e:	b280      	uxth	r0, r0
 8012b90:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012b94:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012b98:	da29      	bge.n	8012bee <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8012b9a:	eba8 0505 	sub.w	r5, r8, r5
 8012b9e:	2d00      	cmp	r5, #0
 8012ba0:	da2a      	bge.n	8012bf8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012ba2:	fa1f f88a 	uxth.w	r8, sl
 8012ba6:	eba0 0008 	sub.w	r0, r0, r8
 8012baa:	fa1f f58c 	uxth.w	r5, ip
 8012bae:	4443      	add	r3, r8
 8012bb0:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012bb4:	1a59      	subs	r1, r3, r1
 8012bb6:	ebae 0005 	sub.w	r0, lr, r5
 8012bba:	f8ad a010 	strh.w	sl, [sp, #16]
 8012bbe:	f8ad c012 	strh.w	ip, [sp, #18]
 8012bc2:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012bc6:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012bca:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012bce:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012bd2:	442a      	add	r2, r5
 8012bd4:	eba2 0e0e 	sub.w	lr, r2, lr
 8012bd8:	f8ad e01e 	strh.w	lr, [sp, #30]
 8012bdc:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012be0:	a904      	add	r1, sp, #16
 8012be2:	4620      	mov	r0, r4
 8012be4:	4798      	blx	r3
 8012be6:	6823      	ldr	r3, [r4, #0]
 8012be8:	4649      	mov	r1, r9
 8012bea:	691b      	ldr	r3, [r3, #16]
 8012bec:	e79a      	b.n	8012b24 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8012bee:	d003      	beq.n	8012bf8 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012bf0:	eba8 0505 	sub.w	r5, r8, r5
 8012bf4:	2d00      	cmp	r5, #0
 8012bf6:	dcd4      	bgt.n	8012ba2 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012bf8:	fa1f f88a 	uxth.w	r8, sl
 8012bfc:	4443      	add	r3, r8
 8012bfe:	fa1f f58c 	uxth.w	r5, ip
 8012c02:	1a59      	subs	r1, r3, r1
 8012c04:	eba0 0008 	sub.w	r0, r0, r8
 8012c08:	ebae 0305 	sub.w	r3, lr, r5
 8012c0c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012c10:	f8ad c012 	strh.w	ip, [sp, #18]
 8012c14:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012c18:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012c1c:	f8ad a018 	strh.w	sl, [sp, #24]
 8012c20:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012c24:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012c28:	e7d3      	b.n	8012bd2 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8012c2a:	ebae 0100 	sub.w	r1, lr, r0
 8012c2e:	b289      	uxth	r1, r1
 8012c30:	4470      	add	r0, lr
 8012c32:	f1ba 0f00 	cmp.w	sl, #0
 8012c36:	b20f      	sxth	r7, r1
 8012c38:	b280      	uxth	r0, r0
 8012c3a:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8012c3e:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012c42:	da20      	bge.n	8012c86 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8012c44:	eba8 0505 	sub.w	r5, r8, r5
 8012c48:	2d00      	cmp	r5, #0
 8012c4a:	da21      	bge.n	8012c90 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012c4c:	fa1f f88e 	uxth.w	r8, lr
 8012c50:	fa1f f58a 	uxth.w	r5, sl
 8012c54:	4443      	add	r3, r8
 8012c56:	442a      	add	r2, r5
 8012c58:	f8ad e010 	strh.w	lr, [sp, #16]
 8012c5c:	1b40      	subs	r0, r0, r5
 8012c5e:	ebac 0e08 	sub.w	lr, ip, r8
 8012c62:	1a51      	subs	r1, r2, r1
 8012c64:	eba3 0c0c 	sub.w	ip, r3, ip
 8012c68:	f8ad a012 	strh.w	sl, [sp, #18]
 8012c6c:	f8ad e014 	strh.w	lr, [sp, #20]
 8012c70:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012c74:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012c78:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012c7c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012c80:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012c84:	e7aa      	b.n	8012bdc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012c86:	d003      	beq.n	8012c90 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012c88:	eba8 0505 	sub.w	r5, r8, r5
 8012c8c:	2d00      	cmp	r5, #0
 8012c8e:	dcdd      	bgt.n	8012c4c <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012c90:	fa1f f58e 	uxth.w	r5, lr
 8012c94:	fa1f f88a 	uxth.w	r8, sl
 8012c98:	4442      	add	r2, r8
 8012c9a:	442b      	add	r3, r5
 8012c9c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012ca0:	1a51      	subs	r1, r2, r1
 8012ca2:	ebac 0705 	sub.w	r7, ip, r5
 8012ca6:	eba0 0008 	sub.w	r0, r0, r8
 8012caa:	eba3 0c0c 	sub.w	ip, r3, ip
 8012cae:	f8ad e010 	strh.w	lr, [sp, #16]
 8012cb2:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012cb6:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012cba:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012cbe:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012cc2:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012cc6:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012cca:	e787      	b.n	8012bdc <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08012ccc <_ZN8touchgfx7CWRUtil4sineEi>:
 8012ccc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012cd0:	fb90 f2f3 	sdiv	r2, r0, r3
 8012cd4:	fb02 0013 	mls	r0, r2, r3, r0
 8012cd8:	2800      	cmp	r0, #0
 8012cda:	bfb8      	it	lt
 8012cdc:	18c0      	addlt	r0, r0, r3
 8012cde:	285a      	cmp	r0, #90	; 0x5a
 8012ce0:	4b09      	ldr	r3, [pc, #36]	; (8012d08 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012ce2:	dc02      	bgt.n	8012cea <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012ce4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012ce8:	4770      	bx	lr
 8012cea:	28b4      	cmp	r0, #180	; 0xb4
 8012cec:	dc02      	bgt.n	8012cf4 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8012cee:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012cf2:	e7f7      	b.n	8012ce4 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012cf4:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012cf8:	bfd4      	ite	le
 8012cfa:	38b4      	suble	r0, #180	; 0xb4
 8012cfc:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012d00:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012d04:	4240      	negs	r0, r0
 8012d06:	4770      	bx	lr
 8012d08:	0802faec 	.word	0x0802faec

08012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8012d0c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012d10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012d12:	fb90 f2f3 	sdiv	r2, r0, r3
 8012d16:	fb02 0013 	mls	r0, r2, r3, r0
 8012d1a:	2800      	cmp	r0, #0
 8012d1c:	bfb8      	it	lt
 8012d1e:	18c0      	addlt	r0, r0, r3
 8012d20:	1144      	asrs	r4, r0, #5
 8012d22:	f000 061f 	and.w	r6, r0, #31
 8012d26:	4620      	mov	r0, r4
 8012d28:	f7ff ffd0 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 8012d2c:	4605      	mov	r5, r0
 8012d2e:	b90e      	cbnz	r6, 8012d34 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012d30:	b002      	add	sp, #8
 8012d32:	bd70      	pop	{r4, r5, r6, pc}
 8012d34:	1c60      	adds	r0, r4, #1
 8012d36:	f7ff ffc9 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 8012d3a:	ab01      	add	r3, sp, #4
 8012d3c:	2220      	movs	r2, #32
 8012d3e:	4631      	mov	r1, r6
 8012d40:	1b40      	subs	r0, r0, r5
 8012d42:	f005 fb33 	bl	80183ac <_ZN8touchgfx6muldivElllRl>
 8012d46:	4428      	add	r0, r5
 8012d48:	e7f2      	b.n	8012d30 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08012d4a <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8012d4a:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8012d4e:	bf2c      	ite	cs
 8012d50:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8012d54:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012d58:	2300      	movs	r3, #0
 8012d5a:	1899      	adds	r1, r3, r2
 8012d5c:	4288      	cmp	r0, r1
 8012d5e:	bf24      	itt	cs
 8012d60:	1853      	addcs	r3, r2, r1
 8012d62:	1a40      	subcs	r0, r0, r1
 8012d64:	0892      	lsrs	r2, r2, #2
 8012d66:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8012d6a:	d1f6      	bne.n	8012d5a <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8012d6c:	4618      	mov	r0, r3
 8012d6e:	4770      	bx	lr

08012d70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012d70:	b510      	push	{r4, lr}
 8012d72:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012d76:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8012d7a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8012d7e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012d82:	13a4      	asrs	r4, r4, #14
 8012d84:	139b      	asrs	r3, r3, #14
 8012d86:	429c      	cmp	r4, r3
 8012d88:	bfb8      	it	lt
 8012d8a:	461c      	movlt	r4, r3
 8012d8c:	2c01      	cmp	r4, #1
 8012d8e:	dd07      	ble.n	8012da0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012d90:	fb91 f1f4 	sdiv	r1, r1, r4
 8012d94:	fb90 f0f4 	sdiv	r0, r0, r4
 8012d98:	f7ff ffea 	bl	8012d70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012d9c:	4360      	muls	r0, r4
 8012d9e:	bd10      	pop	{r4, pc}
 8012da0:	4340      	muls	r0, r0
 8012da2:	fb01 0001 	mla	r0, r1, r1, r0
 8012da6:	f7ff ffd0 	bl	8012d4a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012daa:	e7f8      	b.n	8012d9e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012dac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012dac:	2800      	cmp	r0, #0
 8012dae:	b508      	push	{r3, lr}
 8012db0:	da05      	bge.n	8012dbe <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012db2:	4240      	negs	r0, r0
 8012db4:	f7ff fffa 	bl	8012dac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012db8:	4240      	negs	r0, r0
 8012dba:	b240      	sxtb	r0, r0
 8012dbc:	bd08      	pop	{r3, pc}
 8012dbe:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012dc2:	dc11      	bgt.n	8012de8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012dc4:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012dc8:	dd09      	ble.n	8012dde <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012dca:	4340      	muls	r0, r0
 8012dcc:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012dd0:	f7ff ffbb 	bl	8012d4a <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012dd4:	f7ff ffea 	bl	8012dac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012dd8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012ddc:	e7ed      	b.n	8012dba <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012dde:	3003      	adds	r0, #3
 8012de0:	10c0      	asrs	r0, r0, #3
 8012de2:	4b02      	ldr	r3, [pc, #8]	; (8012dec <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012de4:	5618      	ldrsb	r0, [r3, r0]
 8012de6:	e7e9      	b.n	8012dbc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012de8:	2000      	movs	r0, #0
 8012dea:	e7e7      	b.n	8012dbc <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012dec:	0802fa90 	.word	0x0802fa90

08012df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012df0:	4281      	cmp	r1, r0
 8012df2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012df4:	460c      	mov	r4, r1
 8012df6:	4615      	mov	r5, r2
 8012df8:	dd07      	ble.n	8012e0a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8012dfa:	4601      	mov	r1, r0
 8012dfc:	4620      	mov	r0, r4
 8012dfe:	f7ff fff7 	bl	8012df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012e02:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012e06:	b003      	add	sp, #12
 8012e08:	bd30      	pop	{r4, r5, pc}
 8012e0a:	f7ff ffb1 	bl	8012d70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012e0e:	6028      	str	r0, [r5, #0]
 8012e10:	2800      	cmp	r0, #0
 8012e12:	d0f8      	beq.n	8012e06 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012e14:	4602      	mov	r2, r0
 8012e16:	ab01      	add	r3, sp, #4
 8012e18:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012e1c:	4620      	mov	r0, r4
 8012e1e:	f005 fac5 	bl	80183ac <_ZN8touchgfx6muldivElllRl>
 8012e22:	f7ff ffc3 	bl	8012dac <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012e26:	e7ee      	b.n	8012e06 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012e28 <_ZN8touchgfx4LineC1Ev>:
 8012e28:	b510      	push	{r4, lr}
 8012e2a:	4604      	mov	r4, r0
 8012e2c:	f7ff fe0a 	bl	8012a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012e30:	4b0c      	ldr	r3, [pc, #48]	; (8012e64 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012e32:	6023      	str	r3, [r4, #0]
 8012e34:	2220      	movs	r2, #32
 8012e36:	2300      	movs	r3, #0
 8012e38:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012e3a:	2212      	movs	r2, #18
 8012e3c:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012e40:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012e44:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012e48:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012e4c:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012e50:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012e54:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012e58:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012e5c:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012e5e:	60a3      	str	r3, [r4, #8]
 8012e60:	4620      	mov	r0, r4
 8012e62:	bd10      	pop	{r4, pc}
 8012e64:	0802fbac 	.word	0x0802fbac

08012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012e68:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012e6c:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012e6e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012e70:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012e72:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012e74:	1aff      	subs	r7, r7, r3
 8012e76:	4604      	mov	r4, r0
 8012e78:	eba5 0502 	sub.w	r5, r5, r2
 8012e7c:	d142      	bne.n	8012f04 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012e7e:	b955      	cbnz	r5, 8012e96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012e80:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012e84:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012e88:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012e8c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012e90:	b002      	add	sp, #8
 8012e92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012e96:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012e9a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012e9e:	4629      	mov	r1, r5
 8012ea0:	4642      	mov	r2, r8
 8012ea2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012ea4:	f005 faa1 	bl	80183ea <_ZN8touchgfx6muldivElll>
 8012ea8:	2502      	movs	r5, #2
 8012eaa:	4642      	mov	r2, r8
 8012eac:	fb90 f6f5 	sdiv	r6, r0, r5
 8012eb0:	4639      	mov	r1, r7
 8012eb2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012eb4:	f005 fa99 	bl	80183ea <_ZN8touchgfx6muldivElll>
 8012eb8:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012ebc:	fb90 f5f5 	sdiv	r5, r0, r5
 8012ec0:	f1b9 0f00 	cmp.w	r9, #0
 8012ec4:	d067      	beq.n	8012f96 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012ec6:	f1b9 0f02 	cmp.w	r9, #2
 8012eca:	d878      	bhi.n	8012fbe <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012ecc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012ece:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012ed0:	1b93      	subs	r3, r2, r6
 8012ed2:	1b5b      	subs	r3, r3, r5
 8012ed4:	6463      	str	r3, [r4, #68]	; 0x44
 8012ed6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012ed8:	18e9      	adds	r1, r5, r3
 8012eda:	1b89      	subs	r1, r1, r6
 8012edc:	6561      	str	r1, [r4, #84]	; 0x54
 8012ede:	1b81      	subs	r1, r0, r6
 8012ee0:	4429      	add	r1, r5
 8012ee2:	64a1      	str	r1, [r4, #72]	; 0x48
 8012ee4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012ee6:	4430      	add	r0, r6
 8012ee8:	186f      	adds	r7, r5, r1
 8012eea:	4432      	add	r2, r6
 8012eec:	1b49      	subs	r1, r1, r5
 8012eee:	4437      	add	r7, r6
 8012ef0:	4428      	add	r0, r5
 8012ef2:	4431      	add	r1, r6
 8012ef4:	1b52      	subs	r2, r2, r5
 8012ef6:	1b5b      	subs	r3, r3, r5
 8012ef8:	65a7      	str	r7, [r4, #88]	; 0x58
 8012efa:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012efc:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012efe:	6522      	str	r2, [r4, #80]	; 0x50
 8012f00:	1b9b      	subs	r3, r3, r6
 8012f02:	e05b      	b.n	8012fbc <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012f04:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012f08:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012f0c:	2d00      	cmp	r5, #0
 8012f0e:	d0c6      	beq.n	8012e9e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012f10:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012f14:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012f18:	fb93 f2f8 	sdiv	r2, r3, r8
 8012f1c:	fb08 3312 	mls	r3, r8, r2, r3
 8012f20:	b353      	cbz	r3, 8012f78 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012f22:	fb98 f2f3 	sdiv	r2, r8, r3
 8012f26:	fb03 8812 	mls	r8, r3, r2, r8
 8012f2a:	f1b8 0f00 	cmp.w	r8, #0
 8012f2e:	d1f3      	bne.n	8012f18 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012f30:	2b01      	cmp	r3, #1
 8012f32:	bf1c      	itt	ne
 8012f34:	fb95 f5f3 	sdivne	r5, r5, r3
 8012f38:	fb97 f7f3 	sdivne	r7, r7, r3
 8012f3c:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012f40:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012f44:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012f48:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012f4c:	428b      	cmp	r3, r1
 8012f4e:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012f52:	4608      	mov	r0, r1
 8012f54:	dd01      	ble.n	8012f5a <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012f56:	428a      	cmp	r2, r1
 8012f58:	dc10      	bgt.n	8012f7c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012f5a:	fb90 f3f3 	sdiv	r3, r0, r3
 8012f5e:	fb90 f2f2 	sdiv	r2, r0, r2
 8012f62:	4293      	cmp	r3, r2
 8012f64:	bfa8      	it	ge
 8012f66:	4613      	movge	r3, r2
 8012f68:	435f      	muls	r7, r3
 8012f6a:	435d      	muls	r5, r3
 8012f6c:	4629      	mov	r1, r5
 8012f6e:	4638      	mov	r0, r7
 8012f70:	f7ff fefe 	bl	8012d70 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012f74:	4680      	mov	r8, r0
 8012f76:	e792      	b.n	8012e9e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012f78:	4643      	mov	r3, r8
 8012f7a:	e7d9      	b.n	8012f30 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012f7c:	fb93 f3f1 	sdiv	r3, r3, r1
 8012f80:	fb92 f2f1 	sdiv	r2, r2, r1
 8012f84:	4293      	cmp	r3, r2
 8012f86:	bfcc      	ite	gt
 8012f88:	3301      	addgt	r3, #1
 8012f8a:	1c53      	addle	r3, r2, #1
 8012f8c:	fb97 f7f3 	sdiv	r7, r7, r3
 8012f90:	fb95 f5f3 	sdiv	r5, r5, r3
 8012f94:	e7ea      	b.n	8012f6c <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012f96:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012f98:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012f9a:	1b93      	subs	r3, r2, r6
 8012f9c:	6463      	str	r3, [r4, #68]	; 0x44
 8012f9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012fa0:	18e9      	adds	r1, r5, r3
 8012fa2:	6561      	str	r1, [r4, #84]	; 0x54
 8012fa4:	1b81      	subs	r1, r0, r6
 8012fa6:	64a1      	str	r1, [r4, #72]	; 0x48
 8012fa8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012faa:	4430      	add	r0, r6
 8012fac:	186f      	adds	r7, r5, r1
 8012fae:	4432      	add	r2, r6
 8012fb0:	1b49      	subs	r1, r1, r5
 8012fb2:	65a7      	str	r7, [r4, #88]	; 0x58
 8012fb4:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012fb6:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012fb8:	6522      	str	r2, [r4, #80]	; 0x50
 8012fba:	1b5b      	subs	r3, r3, r5
 8012fbc:	6623      	str	r3, [r4, #96]	; 0x60
 8012fbe:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012fc0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012fc2:	9200      	str	r2, [sp, #0]
 8012fc4:	9301      	str	r3, [sp, #4]
 8012fc6:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012fca:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012fce:	680f      	ldr	r7, [r1, #0]
 8012fd0:	9800      	ldr	r0, [sp, #0]
 8012fd2:	42ba      	cmp	r2, r7
 8012fd4:	bfa8      	it	ge
 8012fd6:	463a      	movge	r2, r7
 8012fd8:	4287      	cmp	r7, r0
 8012fda:	bfc8      	it	gt
 8012fdc:	9700      	strgt	r7, [sp, #0]
 8012fde:	690f      	ldr	r7, [r1, #16]
 8012fe0:	9801      	ldr	r0, [sp, #4]
 8012fe2:	42bb      	cmp	r3, r7
 8012fe4:	bfa8      	it	ge
 8012fe6:	463b      	movge	r3, r7
 8012fe8:	3104      	adds	r1, #4
 8012fea:	4287      	cmp	r7, r0
 8012fec:	bfc8      	it	gt
 8012fee:	9701      	strgt	r7, [sp, #4]
 8012ff0:	458c      	cmp	ip, r1
 8012ff2:	d1ec      	bne.n	8012fce <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012ff4:	4668      	mov	r0, sp
 8012ff6:	2720      	movs	r7, #32
 8012ff8:	fb92 f8f7 	sdiv	r8, r2, r7
 8012ffc:	fb93 f7f7 	sdiv	r7, r3, r7
 8013000:	f7ff fd57 	bl	8012ab2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8013004:	4682      	mov	sl, r0
 8013006:	a801      	add	r0, sp, #4
 8013008:	f7ff fd53 	bl	8012ab2 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801300c:	ebaa 0208 	sub.w	r2, sl, r8
 8013010:	1bc0      	subs	r0, r0, r7
 8013012:	f1b9 0f01 	cmp.w	r9, #1
 8013016:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 801301a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 801301e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8013022:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8013026:	f47f af33 	bne.w	8012e90 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 801302a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 801302c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801302e:	1b83      	subs	r3, r0, r6
 8013030:	6463      	str	r3, [r4, #68]	; 0x44
 8013032:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8013034:	18ea      	adds	r2, r5, r3
 8013036:	6562      	str	r2, [r4, #84]	; 0x54
 8013038:	1b8a      	subs	r2, r1, r6
 801303a:	64a2      	str	r2, [r4, #72]	; 0x48
 801303c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801303e:	4431      	add	r1, r6
 8013040:	18af      	adds	r7, r5, r2
 8013042:	4406      	add	r6, r0
 8013044:	1b52      	subs	r2, r2, r5
 8013046:	1b5d      	subs	r5, r3, r5
 8013048:	65a7      	str	r7, [r4, #88]	; 0x58
 801304a:	64e1      	str	r1, [r4, #76]	; 0x4c
 801304c:	65e2      	str	r2, [r4, #92]	; 0x5c
 801304e:	6526      	str	r6, [r4, #80]	; 0x50
 8013050:	6625      	str	r5, [r4, #96]	; 0x60
 8013052:	e71d      	b.n	8012e90 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08013054 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8013054:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013056:	428b      	cmp	r3, r1
 8013058:	d102      	bne.n	8013060 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 801305a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801305c:	4293      	cmp	r3, r2
 801305e:	d003      	beq.n	8013068 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8013060:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8013064:	f7ff bf00 	b.w	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8013068:	4770      	bx	lr

0801306a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 801306a:	6b43      	ldr	r3, [r0, #52]	; 0x34
 801306c:	428b      	cmp	r3, r1
 801306e:	d102      	bne.n	8013076 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8013070:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013072:	4293      	cmp	r3, r2
 8013074:	d003      	beq.n	801307e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8013076:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 801307a:	f7ff bef5 	b.w	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801307e:	4770      	bx	lr

08013080 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8013080:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8013084:	f7ff bef0 	b.w	8012e68 <_ZN8touchgfx4Line17updateCachedShapeEv>

08013088 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8013088:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801308c:	b0a0      	sub	sp, #128	; 0x80
 801308e:	4604      	mov	r4, r0
 8013090:	460a      	mov	r2, r1
 8013092:	4601      	mov	r1, r0
 8013094:	a804      	add	r0, sp, #16
 8013096:	f015 f845 	bl	8028124 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801309a:	2300      	movs	r3, #0
 801309c:	9301      	str	r3, [sp, #4]
 801309e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80130a2:	2b01      	cmp	r3, #1
 80130a4:	d17c      	bne.n	80131a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 80130a6:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80130a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80130aa:	6d61      	ldr	r1, [r4, #84]	; 0x54
 80130ac:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80130ae:	1ac0      	subs	r0, r0, r3
 80130b0:	eba1 0102 	sub.w	r1, r1, r2
 80130b4:	d437      	bmi.n	8013126 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80130b6:	2900      	cmp	r1, #0
 80130b8:	aa01      	add	r2, sp, #4
 80130ba:	db2e      	blt.n	801311a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80130bc:	f7ff fe98 	bl	8012df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80130c0:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80130c4:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80130c6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80130c8:	a804      	add	r0, sp, #16
 80130ca:	f015 f9ab 	bl	8028424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80130ce:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80130d0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80130d2:	a804      	add	r0, sp, #16
 80130d4:	f015 f9f3 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80130d8:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80130da:	2db3      	cmp	r5, #179	; 0xb3
 80130dc:	dc33      	bgt.n	8013146 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80130de:	eba6 0805 	sub.w	r8, r6, r5
 80130e2:	4640      	mov	r0, r8
 80130e4:	f7ff fdf2 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 80130e8:	a902      	add	r1, sp, #8
 80130ea:	9002      	str	r0, [sp, #8]
 80130ec:	a801      	add	r0, sp, #4
 80130ee:	f7ff fcd5 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80130f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80130f4:	1847      	adds	r7, r0, r1
 80130f6:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80130fa:	f7ff fde7 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 80130fe:	a903      	add	r1, sp, #12
 8013100:	9003      	str	r0, [sp, #12]
 8013102:	a801      	add	r0, sp, #4
 8013104:	f7ff fcca 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013108:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801310a:	4639      	mov	r1, r7
 801310c:	1a12      	subs	r2, r2, r0
 801310e:	a804      	add	r0, sp, #16
 8013110:	f015 f9d5 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013114:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8013116:	441d      	add	r5, r3
 8013118:	e7df      	b.n	80130da <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 801311a:	4249      	negs	r1, r1
 801311c:	f7ff fe68 	bl	8012df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013120:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8013124:	e7ce      	b.n	80130c4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013126:	2900      	cmp	r1, #0
 8013128:	f1c0 0000 	rsb	r0, r0, #0
 801312c:	aa01      	add	r2, sp, #4
 801312e:	db04      	blt.n	801313a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8013130:	f7ff fe5e 	bl	8012df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013134:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8013138:	e7c4      	b.n	80130c4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801313a:	4249      	negs	r1, r1
 801313c:	f7ff fe58 	bl	8012df0 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8013140:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8013144:	e7be      	b.n	80130c4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8013146:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013148:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 801314a:	a804      	add	r0, sp, #16
 801314c:	f015 f9b7 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013150:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013152:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013154:	a804      	add	r0, sp, #16
 8013156:	f015 f9b2 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801315a:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 801315c:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8013160:	2d00      	cmp	r5, #0
 8013162:	dd31      	ble.n	80131c8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8013164:	eb05 0806 	add.w	r8, r5, r6
 8013168:	4640      	mov	r0, r8
 801316a:	f7ff fdaf 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 801316e:	a902      	add	r1, sp, #8
 8013170:	9002      	str	r0, [sp, #8]
 8013172:	a801      	add	r0, sp, #4
 8013174:	f7ff fc92 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013178:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801317a:	1847      	adds	r7, r0, r1
 801317c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013180:	f7ff fda4 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 8013184:	a903      	add	r1, sp, #12
 8013186:	9003      	str	r0, [sp, #12]
 8013188:	a801      	add	r0, sp, #4
 801318a:	f7ff fc87 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801318e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013190:	4639      	mov	r1, r7
 8013192:	1a12      	subs	r2, r2, r0
 8013194:	a804      	add	r0, sp, #16
 8013196:	f015 f992 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801319a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801319c:	1aed      	subs	r5, r5, r3
 801319e:	e7df      	b.n	8013160 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80131a0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80131a2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80131a4:	a804      	add	r0, sp, #16
 80131a6:	f015 f93d 	bl	8028424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80131aa:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80131ac:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80131ae:	a804      	add	r0, sp, #16
 80131b0:	f015 f985 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80131b4:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80131b6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80131b8:	a804      	add	r0, sp, #16
 80131ba:	f015 f980 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80131be:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80131c0:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80131c2:	a804      	add	r0, sp, #16
 80131c4:	f015 f97b 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80131c8:	21ff      	movs	r1, #255	; 0xff
 80131ca:	a804      	add	r0, sp, #16
 80131cc:	f015 f866 	bl	802829c <_ZN8touchgfx6Canvas6renderEh>
 80131d0:	4b04      	ldr	r3, [pc, #16]	; (80131e4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80131d2:	9304      	str	r3, [sp, #16]
 80131d4:	4604      	mov	r4, r0
 80131d6:	a80c      	add	r0, sp, #48	; 0x30
 80131d8:	f001 fa98 	bl	801470c <_ZN8touchgfx7OutlineD1Ev>
 80131dc:	4620      	mov	r0, r4
 80131de:	b020      	add	sp, #128	; 0x80
 80131e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80131e4:	08030458 	.word	0x08030458

080131e8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80131e8:	2000      	movs	r0, #0
 80131ea:	4770      	bx	lr

080131ec <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80131ec:	4b07      	ldr	r3, [pc, #28]	; (801320c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80131ee:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80131f0:	881b      	ldrh	r3, [r3, #0]
 80131f2:	4293      	cmp	r3, r2
 80131f4:	bf81      	itttt	hi
 80131f6:	4b06      	ldrhi	r3, [pc, #24]	; (8013210 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80131f8:	681b      	ldrhi	r3, [r3, #0]
 80131fa:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80131fe:	7858      	ldrbhi	r0, [r3, #1]
 8013200:	bf8c      	ite	hi
 8013202:	f000 0003 	andhi.w	r0, r0, #3
 8013206:	2000      	movls	r0, #0
 8013208:	4770      	bx	lr
 801320a:	bf00      	nop
 801320c:	20013898 	.word	0x20013898
 8013210:	20013894 	.word	0x20013894

08013214 <_ZN8touchgfx8TextAreaD1Ev>:
 8013214:	4770      	bx	lr
	...

08013218 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801321c:	4b10      	ldr	r3, [pc, #64]	; (8013260 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801321e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013220:	881b      	ldrh	r3, [r3, #0]
 8013222:	428b      	cmp	r3, r1
 8013224:	4604      	mov	r4, r0
 8013226:	d918      	bls.n	801325a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8013228:	6803      	ldr	r3, [r0, #0]
 801322a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801322c:	4b0d      	ldr	r3, [pc, #52]	; (8013264 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801322e:	6818      	ldr	r0, [r3, #0]
 8013230:	f7f5 fc5c 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8013234:	6823      	ldr	r3, [r4, #0]
 8013236:	4606      	mov	r6, r0
 8013238:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801323a:	4620      	mov	r0, r4
 801323c:	4798      	blx	r3
 801323e:	6823      	ldr	r3, [r4, #0]
 8013240:	4607      	mov	r7, r0
 8013242:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013246:	4620      	mov	r0, r4
 8013248:	4798      	blx	r3
 801324a:	463a      	mov	r2, r7
 801324c:	4603      	mov	r3, r0
 801324e:	4631      	mov	r1, r6
 8013250:	4620      	mov	r0, r4
 8013252:	46ac      	mov	ip, r5
 8013254:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013258:	4760      	bx	ip
 801325a:	2000      	movs	r0, #0
 801325c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013260:	20013898 	.word	0x20013898
 8013264:	200138a0 	.word	0x200138a0

08013268 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8013268:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801326c:	4b17      	ldr	r3, [pc, #92]	; (80132cc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801326e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013270:	881b      	ldrh	r3, [r3, #0]
 8013272:	428b      	cmp	r3, r1
 8013274:	4604      	mov	r4, r0
 8013276:	d926      	bls.n	80132c6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8013278:	4b15      	ldr	r3, [pc, #84]	; (80132d0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801327a:	681b      	ldr	r3, [r3, #0]
 801327c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013280:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013284:	4b13      	ldr	r3, [pc, #76]	; (80132d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8013286:	7855      	ldrb	r5, [r2, #1]
 8013288:	681b      	ldr	r3, [r3, #0]
 801328a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801328e:	6833      	ldr	r3, [r6, #0]
 8013290:	69df      	ldr	r7, [r3, #28]
 8013292:	4b11      	ldr	r3, [pc, #68]	; (80132d8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013294:	6818      	ldr	r0, [r3, #0]
 8013296:	f7f5 fc29 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 801329a:	6823      	ldr	r3, [r4, #0]
 801329c:	4680      	mov	r8, r0
 801329e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80132a0:	4620      	mov	r0, r4
 80132a2:	4798      	blx	r3
 80132a4:	6823      	ldr	r3, [r4, #0]
 80132a6:	4681      	mov	r9, r0
 80132a8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80132ac:	4620      	mov	r0, r4
 80132ae:	4798      	blx	r3
 80132b0:	f3c5 0581 	ubfx	r5, r5, #2, #2
 80132b4:	9000      	str	r0, [sp, #0]
 80132b6:	464b      	mov	r3, r9
 80132b8:	4642      	mov	r2, r8
 80132ba:	4629      	mov	r1, r5
 80132bc:	4630      	mov	r0, r6
 80132be:	47b8      	blx	r7
 80132c0:	b003      	add	sp, #12
 80132c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80132c6:	2000      	movs	r0, #0
 80132c8:	e7fa      	b.n	80132c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 80132ca:	bf00      	nop
 80132cc:	20013898 	.word	0x20013898
 80132d0:	20013894 	.word	0x20013894
 80132d4:	2001389c 	.word	0x2001389c
 80132d8:	200138a0 	.word	0x200138a0

080132dc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80132dc:	b40e      	push	{r1, r2, r3}
 80132de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132e2:	4b2f      	ldr	r3, [pc, #188]	; (80133a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80132e4:	881a      	ldrh	r2, [r3, #0]
 80132e6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80132e8:	429a      	cmp	r2, r3
 80132ea:	b09d      	sub	sp, #116	; 0x74
 80132ec:	4604      	mov	r4, r0
 80132ee:	d954      	bls.n	801339a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80132f0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80133a4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80132f4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80133a8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80132f8:	aa26      	add	r2, sp, #152	; 0x98
 80132fa:	9202      	str	r2, [sp, #8]
 80132fc:	f8d9 2000 	ldr.w	r2, [r9]
 8013300:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013304:	f8d8 3000 	ldr.w	r3, [r8]
 8013308:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801330c:	682b      	ldr	r3, [r5, #0]
 801330e:	4628      	mov	r0, r5
 8013310:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013312:	4798      	blx	r3
 8013314:	b207      	sxth	r7, r0
 8013316:	4606      	mov	r6, r0
 8013318:	a803      	add	r0, sp, #12
 801331a:	f005 fc61 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 801331e:	682b      	ldr	r3, [r5, #0]
 8013320:	4628      	mov	r0, r5
 8013322:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013324:	4798      	blx	r3
 8013326:	682b      	ldr	r3, [r5, #0]
 8013328:	4682      	mov	sl, r0
 801332a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801332c:	4628      	mov	r0, r5
 801332e:	4798      	blx	r3
 8013330:	4653      	mov	r3, sl
 8013332:	9000      	str	r0, [sp, #0]
 8013334:	9a02      	ldr	r2, [sp, #8]
 8013336:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013338:	a803      	add	r0, sp, #12
 801333a:	f005 fcac 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801333e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013340:	f8d9 3000 	ldr.w	r3, [r9]
 8013344:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8013348:	8925      	ldrh	r5, [r4, #8]
 801334a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801334e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8013352:	eba5 050c 	sub.w	r5, r5, ip
 8013356:	784a      	ldrb	r2, [r1, #1]
 8013358:	f8d8 3000 	ldr.w	r3, [r8]
 801335c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8013360:	b22d      	sxth	r5, r5
 8013362:	9500      	str	r5, [sp, #0]
 8013364:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8013368:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801336c:	a803      	add	r0, sp, #12
 801336e:	f003 f8b9 	bl	80164e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8013372:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8013376:	18b9      	adds	r1, r7, r2
 8013378:	2900      	cmp	r1, #0
 801337a:	b203      	sxth	r3, r0
 801337c:	dd0b      	ble.n	8013396 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801337e:	3b01      	subs	r3, #1
 8013380:	fb13 f302 	smulbb	r3, r3, r2
 8013384:	fb16 3300 	smlabb	r3, r6, r0, r3
 8013388:	b21f      	sxth	r7, r3
 801338a:	4638      	mov	r0, r7
 801338c:	b01d      	add	sp, #116	; 0x74
 801338e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013392:	b003      	add	sp, #12
 8013394:	4770      	bx	lr
 8013396:	2b00      	cmp	r3, #0
 8013398:	dcf7      	bgt.n	801338a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801339a:	2700      	movs	r7, #0
 801339c:	e7f5      	b.n	801338a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801339e:	bf00      	nop
 80133a0:	20013898 	.word	0x20013898
 80133a4:	20013894 	.word	0x20013894
 80133a8:	2001389c 	.word	0x2001389c

080133ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 80133ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133b0:	4bbc      	ldr	r3, [pc, #752]	; (80136a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 80133b2:	460c      	mov	r4, r1
 80133b4:	881b      	ldrh	r3, [r3, #0]
 80133b6:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 80133b8:	428b      	cmp	r3, r1
 80133ba:	b0a9      	sub	sp, #164	; 0xa4
 80133bc:	4680      	mov	r8, r0
 80133be:	d809      	bhi.n	80133d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 80133c0:	2300      	movs	r3, #0
 80133c2:	f04f 32ff 	mov.w	r2, #4294967295
 80133c6:	e9c0 3200 	strd	r3, r2, [r0]
 80133ca:	6083      	str	r3, [r0, #8]
 80133cc:	4640      	mov	r0, r8
 80133ce:	b029      	add	sp, #164	; 0xa4
 80133d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80133d4:	4eb4      	ldr	r6, [pc, #720]	; (80136a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 80133d6:	6833      	ldr	r3, [r6, #0]
 80133d8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80133dc:	4bb3      	ldr	r3, [pc, #716]	; (80136ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 80133de:	681b      	ldr	r3, [r3, #0]
 80133e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80133e4:	4bb2      	ldr	r3, [pc, #712]	; (80136b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80133e6:	6818      	ldr	r0, [r3, #0]
 80133e8:	f7f5 fb80 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 80133ec:	682b      	ldr	r3, [r5, #0]
 80133ee:	4681      	mov	r9, r0
 80133f0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80133f2:	4628      	mov	r0, r5
 80133f4:	4798      	blx	r3
 80133f6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80133f8:	b203      	sxth	r3, r0
 80133fa:	4407      	add	r7, r0
 80133fc:	9304      	str	r3, [sp, #16]
 80133fe:	b2bb      	uxth	r3, r7
 8013400:	9303      	str	r3, [sp, #12]
 8013402:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013406:	4682      	mov	sl, r0
 8013408:	a80f      	add	r0, sp, #60	; 0x3c
 801340a:	2b00      	cmp	r3, #0
 801340c:	f040 80a6 	bne.w	801355c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8013410:	f005 fbe6 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 8013414:	682b      	ldr	r3, [r5, #0]
 8013416:	4628      	mov	r0, r5
 8013418:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801341a:	4798      	blx	r3
 801341c:	682b      	ldr	r3, [r5, #0]
 801341e:	4606      	mov	r6, r0
 8013420:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8013422:	4628      	mov	r0, r5
 8013424:	4798      	blx	r3
 8013426:	6823      	ldr	r3, [r4, #0]
 8013428:	4607      	mov	r7, r0
 801342a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801342c:	4620      	mov	r0, r4
 801342e:	4798      	blx	r3
 8013430:	6823      	ldr	r3, [r4, #0]
 8013432:	4683      	mov	fp, r0
 8013434:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013438:	4620      	mov	r0, r4
 801343a:	4798      	blx	r3
 801343c:	463b      	mov	r3, r7
 801343e:	e9cd b000 	strd	fp, r0, [sp]
 8013442:	4649      	mov	r1, r9
 8013444:	4632      	mov	r2, r6
 8013446:	a80f      	add	r0, sp, #60	; 0x3c
 8013448:	f005 fc3a 	bl	8018cc0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801344c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013450:	f8df b254 	ldr.w	fp, [pc, #596]	; 80136a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8013454:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013458:	f04f 0600 	mov.w	r6, #0
 801345c:	bf0c      	ite	eq
 801345e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8013462:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8013466:	4637      	mov	r7, r6
 8013468:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801346a:	f8db 3000 	ldr.w	r3, [fp]
 801346e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013472:	4629      	mov	r1, r5
 8013474:	785b      	ldrb	r3, [r3, #1]
 8013476:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801347a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801347e:	a80f      	add	r0, sp, #60	; 0x3c
 8013480:	f002 fd4b 	bl	8015f1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013484:	9b03      	ldr	r3, [sp, #12]
 8013486:	4286      	cmp	r6, r0
 8013488:	bfb8      	it	lt
 801348a:	4606      	movlt	r6, r0
 801348c:	3701      	adds	r7, #1
 801348e:	eba9 0903 	sub.w	r9, r9, r3
 8013492:	a80f      	add	r0, sp, #60	; 0x3c
 8013494:	b236      	sxth	r6, r6
 8013496:	b2bf      	uxth	r7, r7
 8013498:	fa0f f989 	sxth.w	r9, r9
 801349c:	f005 fbc7 	bl	8018c2e <_ZN8touchgfx12TextProvider11endOfStringEv>
 80134a0:	b918      	cbnz	r0, 80134aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80134a2:	7a2b      	ldrb	r3, [r5, #8]
 80134a4:	444b      	add	r3, r9
 80134a6:	2b00      	cmp	r3, #0
 80134a8:	dcde      	bgt.n	8013468 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 80134aa:	9b03      	ldr	r3, [sp, #12]
 80134ac:	9a04      	ldr	r2, [sp, #16]
 80134ae:	f895 9009 	ldrb.w	r9, [r5, #9]
 80134b2:	fb13 f707 	smulbb	r7, r3, r7
 80134b6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80134b8:	1aff      	subs	r7, r7, r3
 80134ba:	b2bf      	uxth	r7, r7
 80134bc:	b23b      	sxth	r3, r7
 80134be:	429a      	cmp	r2, r3
 80134c0:	bfa8      	it	ge
 80134c2:	4657      	movge	r7, sl
 80134c4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80134c8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80134cc:	6823      	ldr	r3, [r4, #0]
 80134ce:	bf08      	it	eq
 80134d0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 80134d4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80134d6:	bf18      	it	ne
 80134d8:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 80134dc:	4620      	mov	r0, r4
 80134de:	4798      	blx	r3
 80134e0:	444f      	add	r7, r9
 80134e2:	fa1f f987 	uxth.w	r9, r7
 80134e6:	2801      	cmp	r0, #1
 80134e8:	fa0f f789 	sxth.w	r7, r9
 80134ec:	b2b3      	uxth	r3, r6
 80134ee:	f000 80e1 	beq.w	80136b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80134f2:	2802      	cmp	r0, #2
 80134f4:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80134f8:	f000 80e2 	beq.w	80136c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80134fc:	7aea      	ldrb	r2, [r5, #11]
 80134fe:	7b2d      	ldrb	r5, [r5, #12]
 8013500:	b236      	sxth	r6, r6
 8013502:	1ab6      	subs	r6, r6, r2
 8013504:	442a      	add	r2, r5
 8013506:	4413      	add	r3, r2
 8013508:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801350c:	fa1f fa86 	uxth.w	sl, r6
 8013510:	b29b      	uxth	r3, r3
 8013512:	2a02      	cmp	r2, #2
 8013514:	fa0f fb8a 	sxth.w	fp, sl
 8013518:	b21e      	sxth	r6, r3
 801351a:	f000 80d5 	beq.w	80136c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801351e:	2a03      	cmp	r2, #3
 8013520:	f000 80dd 	beq.w	80136de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8013524:	2a01      	cmp	r2, #1
 8013526:	f040 80e5 	bne.w	80136f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 801352a:	8925      	ldrh	r5, [r4, #8]
 801352c:	4633      	mov	r3, r6
 801352e:	eba5 0909 	sub.w	r9, r5, r9
 8013532:	463e      	mov	r6, r7
 8013534:	465d      	mov	r5, fp
 8013536:	461f      	mov	r7, r3
 8013538:	fa0f fb89 	sxth.w	fp, r9
 801353c:	4b5c      	ldr	r3, [pc, #368]	; (80136b0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801353e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013540:	6818      	ldr	r0, [r3, #0]
 8013542:	f7f5 fad3 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8013546:	f8a8 b000 	strh.w	fp, [r8]
 801354a:	f8a8 5002 	strh.w	r5, [r8, #2]
 801354e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8013552:	f8a8 7006 	strh.w	r7, [r8, #6]
 8013556:	f8c8 0008 	str.w	r0, [r8, #8]
 801355a:	e737      	b.n	80133cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801355c:	f005 fb40 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 8013560:	682b      	ldr	r3, [r5, #0]
 8013562:	4628      	mov	r0, r5
 8013564:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013566:	4798      	blx	r3
 8013568:	682b      	ldr	r3, [r5, #0]
 801356a:	4607      	mov	r7, r0
 801356c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801356e:	4628      	mov	r0, r5
 8013570:	4798      	blx	r3
 8013572:	6823      	ldr	r3, [r4, #0]
 8013574:	4683      	mov	fp, r0
 8013576:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013578:	4620      	mov	r0, r4
 801357a:	4798      	blx	r3
 801357c:	6822      	ldr	r2, [r4, #0]
 801357e:	9005      	str	r0, [sp, #20]
 8013580:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8013584:	4620      	mov	r0, r4
 8013586:	4790      	blx	r2
 8013588:	9b05      	ldr	r3, [sp, #20]
 801358a:	9001      	str	r0, [sp, #4]
 801358c:	463a      	mov	r2, r7
 801358e:	4649      	mov	r1, r9
 8013590:	9300      	str	r3, [sp, #0]
 8013592:	a80f      	add	r0, sp, #60	; 0x3c
 8013594:	465b      	mov	r3, fp
 8013596:	f005 fb93 	bl	8018cc0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801359a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801359e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 80135a2:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80135a4:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 80135a8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80135ac:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80135b0:	bf0a      	itet	eq
 80135b2:	464a      	moveq	r2, r9
 80135b4:	461a      	movne	r2, r3
 80135b6:	4699      	moveq	r9, r3
 80135b8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 80135bc:	1ad2      	subs	r2, r2, r3
 80135be:	6833      	ldr	r3, [r6, #0]
 80135c0:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 80135c4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80135c8:	af0f      	add	r7, sp, #60	; 0x3c
 80135ca:	7859      	ldrb	r1, [r3, #1]
 80135cc:	9707      	str	r7, [sp, #28]
 80135ce:	2300      	movs	r3, #0
 80135d0:	f3c1 0181 	ubfx	r1, r1, #2, #2
 80135d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 80135d8:	f88d 1020 	strb.w	r1, [sp, #32]
 80135dc:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80135e0:	9509      	str	r5, [sp, #36]	; 0x24
 80135e2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80135e6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 80135ea:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 80135ee:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80135f2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80135f6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80135fa:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80135fe:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013602:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013606:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801360a:	b350      	cbz	r0, 8013662 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801360c:	682b      	ldr	r3, [r5, #0]
 801360e:	4628      	mov	r0, r5
 8013610:	695b      	ldr	r3, [r3, #20]
 8013612:	4798      	blx	r3
 8013614:	4607      	mov	r7, r0
 8013616:	b320      	cbz	r0, 8013662 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013618:	9809      	ldr	r0, [sp, #36]	; 0x24
 801361a:	6803      	ldr	r3, [r0, #0]
 801361c:	4639      	mov	r1, r7
 801361e:	68db      	ldr	r3, [r3, #12]
 8013620:	4798      	blx	r3
 8013622:	4606      	mov	r6, r0
 8013624:	b1e8      	cbz	r0, 8013662 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013626:	7b43      	ldrb	r3, [r0, #13]
 8013628:	7a82      	ldrb	r2, [r0, #10]
 801362a:	005b      	lsls	r3, r3, #1
 801362c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013630:	4313      	orrs	r3, r2
 8013632:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013636:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 801363a:	2b06      	cmp	r3, #6
 801363c:	d111      	bne.n	8013662 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801363e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013640:	6803      	ldr	r3, [r0, #0]
 8013642:	4632      	mov	r2, r6
 8013644:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013646:	4639      	mov	r1, r7
 8013648:	4798      	blx	r3
 801364a:	7b73      	ldrb	r3, [r6, #13]
 801364c:	005b      	lsls	r3, r3, #1
 801364e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013652:	7ab3      	ldrb	r3, [r6, #10]
 8013654:	4313      	orrs	r3, r2
 8013656:	4418      	add	r0, r3
 8013658:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801365c:	4418      	add	r0, r3
 801365e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8013662:	2600      	movs	r6, #0
 8013664:	4637      	mov	r7, r6
 8013666:	a806      	add	r0, sp, #24
 8013668:	f002 fe38 	bl	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801366c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8013670:	9b03      	ldr	r3, [sp, #12]
 8013672:	4286      	cmp	r6, r0
 8013674:	eba9 0903 	sub.w	r9, r9, r3
 8013678:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801367c:	bfb8      	it	lt
 801367e:	4606      	movlt	r6, r0
 8013680:	3701      	adds	r7, #1
 8013682:	b236      	sxth	r6, r6
 8013684:	b2bf      	uxth	r7, r7
 8013686:	fa0f f989 	sxth.w	r9, r9
 801368a:	2b00      	cmp	r3, #0
 801368c:	f43f af0d 	beq.w	80134aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013690:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8013694:	2b00      	cmp	r3, #0
 8013696:	f47f af08 	bne.w	80134aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801369a:	7a2b      	ldrb	r3, [r5, #8]
 801369c:	444b      	add	r3, r9
 801369e:	2b00      	cmp	r3, #0
 80136a0:	dce1      	bgt.n	8013666 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80136a2:	e702      	b.n	80134aa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80136a4:	20013898 	.word	0x20013898
 80136a8:	20013894 	.word	0x20013894
 80136ac:	2001389c 	.word	0x2001389c
 80136b0:	200138a0 	.word	0x200138a0
 80136b4:	ebaa 0606 	sub.w	r6, sl, r6
 80136b8:	2002      	movs	r0, #2
 80136ba:	fb96 f6f0 	sdiv	r6, r6, r0
 80136be:	e71d      	b.n	80134fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80136c0:	441e      	add	r6, r3
 80136c2:	ebaa 0606 	sub.w	r6, sl, r6
 80136c6:	e719      	b.n	80134fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 80136c8:	8925      	ldrh	r5, [r4, #8]
 80136ca:	1aed      	subs	r5, r5, r3
 80136cc:	eba5 050a 	sub.w	r5, r5, sl
 80136d0:	fa0f fb85 	sxth.w	fp, r5
 80136d4:	8965      	ldrh	r5, [r4, #10]
 80136d6:	eba5 0509 	sub.w	r5, r5, r9
 80136da:	b22d      	sxth	r5, r5
 80136dc:	e72e      	b.n	801353c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80136de:	8965      	ldrh	r5, [r4, #10]
 80136e0:	1aed      	subs	r5, r5, r3
 80136e2:	eba5 050a 	sub.w	r5, r5, sl
 80136e6:	4633      	mov	r3, r6
 80136e8:	b22d      	sxth	r5, r5
 80136ea:	463e      	mov	r6, r7
 80136ec:	f04f 0b00 	mov.w	fp, #0
 80136f0:	461f      	mov	r7, r3
 80136f2:	e723      	b.n	801353c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 80136f4:	2500      	movs	r5, #0
 80136f6:	e721      	b.n	801353c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

080136f8 <_ZN8touchgfx8TextAreaD0Ev>:
 80136f8:	b510      	push	{r4, lr}
 80136fa:	2148      	movs	r1, #72	; 0x48
 80136fc:	4604      	mov	r4, r0
 80136fe:	f017 fc54 	bl	802afaa <_ZdlPvj>
 8013702:	4620      	mov	r0, r4
 8013704:	bd10      	pop	{r4, pc}
	...

08013708 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013708:	b513      	push	{r0, r1, r4, lr}
 801370a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801370e:	4604      	mov	r4, r0
 8013710:	b1fb      	cbz	r3, 8013752 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013712:	4b16      	ldr	r3, [pc, #88]	; (801376c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013714:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013716:	881b      	ldrh	r3, [r3, #0]
 8013718:	428b      	cmp	r3, r1
 801371a:	d91a      	bls.n	8013752 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801371c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013720:	2b00      	cmp	r3, #0
 8013722:	dd16      	ble.n	8013752 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013724:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013728:	2b00      	cmp	r3, #0
 801372a:	dd12      	ble.n	8013752 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801372c:	4b10      	ldr	r3, [pc, #64]	; (8013770 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801372e:	6818      	ldr	r0, [r3, #0]
 8013730:	f7f5 f9dc 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8013734:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8013738:	6822      	ldr	r2, [r4, #0]
 801373a:	2b00      	cmp	r3, #0
 801373c:	db06      	blt.n	801374c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801373e:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013742:	2b00      	cmp	r3, #0
 8013744:	db02      	blt.n	801374c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8013746:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8013748:	4298      	cmp	r0, r3
 801374a:	d004      	beq.n	8013756 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801374c:	6953      	ldr	r3, [r2, #20]
 801374e:	4620      	mov	r0, r4
 8013750:	4798      	blx	r3
 8013752:	b002      	add	sp, #8
 8013754:	bd10      	pop	{r4, pc}
 8013756:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801375a:	c903      	ldmia	r1, {r0, r1}
 801375c:	466b      	mov	r3, sp
 801375e:	e883 0003 	stmia.w	r3, {r0, r1}
 8013762:	6912      	ldr	r2, [r2, #16]
 8013764:	4619      	mov	r1, r3
 8013766:	4620      	mov	r0, r4
 8013768:	4790      	blx	r2
 801376a:	e7f2      	b.n	8013752 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801376c:	20013898 	.word	0x20013898
 8013770:	200138a0 	.word	0x200138a0

08013774 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8013774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013778:	4b44      	ldr	r3, [pc, #272]	; (801388c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801377a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801377c:	881b      	ldrh	r3, [r3, #0]
 801377e:	4293      	cmp	r3, r2
 8013780:	b08e      	sub	sp, #56	; 0x38
 8013782:	4604      	mov	r4, r0
 8013784:	d97e      	bls.n	8013884 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013786:	6808      	ldr	r0, [r1, #0]
 8013788:	4d41      	ldr	r5, [pc, #260]	; (8013890 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801378a:	6849      	ldr	r1, [r1, #4]
 801378c:	ab05      	add	r3, sp, #20
 801378e:	c303      	stmia	r3!, {r0, r1}
 8013790:	4611      	mov	r1, r2
 8013792:	6828      	ldr	r0, [r5, #0]
 8013794:	f7f5 f9aa 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8013798:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801379c:	2b00      	cmp	r3, #0
 801379e:	db11      	blt.n	80137c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80137a0:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80137a4:	2b00      	cmp	r3, #0
 80137a6:	db0d      	blt.n	80137c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80137a8:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80137aa:	4298      	cmp	r0, r3
 80137ac:	d10a      	bne.n	80137c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80137ae:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80137b2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80137b6:	ab09      	add	r3, sp, #36	; 0x24
 80137b8:	e883 0003 	stmia.w	r3, {r0, r1}
 80137bc:	4619      	mov	r1, r3
 80137be:	a805      	add	r0, sp, #20
 80137c0:	f7fd fbec 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 80137c4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80137c8:	2b00      	cmp	r3, #0
 80137ca:	dd5b      	ble.n	8013884 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80137cc:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80137d0:	2b00      	cmp	r3, #0
 80137d2:	dd57      	ble.n	8013884 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80137d4:	4f2f      	ldr	r7, [pc, #188]	; (8013894 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 80137d6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80137d8:	683b      	ldr	r3, [r7, #0]
 80137da:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80137de:	4b2e      	ldr	r3, [pc, #184]	; (8013898 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 80137e0:	681b      	ldr	r3, [r3, #0]
 80137e2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80137e6:	2e00      	cmp	r6, #0
 80137e8:	d04c      	beq.n	8013884 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80137ea:	6823      	ldr	r3, [r4, #0]
 80137ec:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 80137f0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80137f2:	4620      	mov	r0, r4
 80137f4:	4798      	blx	r3
 80137f6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80137f8:	683b      	ldr	r3, [r7, #0]
 80137fa:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 80137fe:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013802:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013806:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013808:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801380c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013810:	785b      	ldrb	r3, [r3, #1]
 8013812:	9609      	str	r6, [sp, #36]	; 0x24
 8013814:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013818:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801381c:	4b1f      	ldr	r3, [pc, #124]	; (801389c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801381e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8013822:	681b      	ldr	r3, [r3, #0]
 8013824:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8013828:	910b      	str	r1, [sp, #44]	; 0x2c
 801382a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801382e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8013832:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8013836:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801383a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801383e:	b10a      	cbz	r2, 8013844 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8013840:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8013842:	b906      	cbnz	r6, 8013846 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8013844:	689e      	ldr	r6, [r3, #8]
 8013846:	af07      	add	r7, sp, #28
 8013848:	4621      	mov	r1, r4
 801384a:	4638      	mov	r0, r7
 801384c:	f004 fc7c 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013850:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013852:	6828      	ldr	r0, [r5, #0]
 8013854:	f7f5 f94a 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8013858:	6823      	ldr	r3, [r4, #0]
 801385a:	4605      	mov	r5, r0
 801385c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801385e:	4620      	mov	r0, r4
 8013860:	4798      	blx	r3
 8013862:	6823      	ldr	r3, [r4, #0]
 8013864:	4680      	mov	r8, r0
 8013866:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801386a:	4620      	mov	r0, r4
 801386c:	4798      	blx	r3
 801386e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013872:	ab09      	add	r3, sp, #36	; 0x24
 8013874:	9300      	str	r3, [sp, #0]
 8013876:	9501      	str	r5, [sp, #4]
 8013878:	ab05      	add	r3, sp, #20
 801387a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801387e:	4630      	mov	r0, r6
 8013880:	f7f5 f8e6 	bl	8008a50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013884:	b00e      	add	sp, #56	; 0x38
 8013886:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801388a:	bf00      	nop
 801388c:	20013898 	.word	0x20013898
 8013890:	200138a0 	.word	0x200138a0
 8013894:	20013894 	.word	0x20013894
 8013898:	2001389c 	.word	0x2001389c
 801389c:	2001383c 	.word	0x2001383c

080138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80138a0:	b538      	push	{r3, r4, r5, lr}
 80138a2:	4b0e      	ldr	r3, [pc, #56]	; (80138dc <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80138a4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80138a6:	881b      	ldrh	r3, [r3, #0]
 80138a8:	429a      	cmp	r2, r3
 80138aa:	4604      	mov	r4, r0
 80138ac:	d214      	bcs.n	80138d8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80138ae:	6803      	ldr	r3, [r0, #0]
 80138b0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80138b2:	4798      	blx	r3
 80138b4:	6823      	ldr	r3, [r4, #0]
 80138b6:	4605      	mov	r5, r0
 80138b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80138ba:	4620      	mov	r0, r4
 80138bc:	4798      	blx	r3
 80138be:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80138c2:	b22d      	sxth	r5, r5
 80138c4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80138c8:	4601      	mov	r1, r0
 80138ca:	bf06      	itte	eq
 80138cc:	4602      	moveq	r2, r0
 80138ce:	4629      	moveq	r1, r5
 80138d0:	462a      	movne	r2, r5
 80138d2:	4620      	mov	r0, r4
 80138d4:	f7fd f942 	bl	8010b5c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80138d8:	bd38      	pop	{r3, r4, r5, pc}
 80138da:	bf00      	nop
 80138dc:	20013898 	.word	0x20013898

080138e0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80138e0:	b530      	push	{r4, r5, lr}
 80138e2:	888b      	ldrh	r3, [r1, #4]
 80138e4:	8583      	strh	r3, [r0, #44]	; 0x2c
 80138e6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80138ea:	b085      	sub	sp, #20
 80138ec:	4604      	mov	r4, r0
 80138ee:	b923      	cbnz	r3, 80138fa <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80138f0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80138f4:	b90b      	cbnz	r3, 80138fa <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80138f6:	f7ff ffd3 	bl	80138a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80138fa:	6823      	ldr	r3, [r4, #0]
 80138fc:	466d      	mov	r5, sp
 80138fe:	4621      	mov	r1, r4
 8013900:	4628      	mov	r0, r5
 8013902:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013906:	4798      	blx	r3
 8013908:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801390c:	343c      	adds	r4, #60	; 0x3c
 801390e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013912:	b005      	add	sp, #20
 8013914:	bd30      	pop	{r4, r5, pc}

08013916 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013916:	2300      	movs	r3, #0
 8013918:	8083      	strh	r3, [r0, #4]
 801391a:	80c3      	strh	r3, [r0, #6]
 801391c:	8003      	strh	r3, [r0, #0]
 801391e:	8043      	strh	r3, [r0, #2]
 8013920:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8013924:	2bff      	cmp	r3, #255	; 0xff
 8013926:	bf01      	itttt	eq
 8013928:	890b      	ldrheq	r3, [r1, #8]
 801392a:	8083      	strheq	r3, [r0, #4]
 801392c:	894b      	ldrheq	r3, [r1, #10]
 801392e:	80c3      	strheq	r3, [r0, #6]
 8013930:	4770      	bx	lr
	...

08013934 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013934:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013936:	4604      	mov	r4, r0
 8013938:	6808      	ldr	r0, [r1, #0]
 801393a:	6849      	ldr	r1, [r1, #4]
 801393c:	466b      	mov	r3, sp
 801393e:	c303      	stmia	r3!, {r0, r1}
 8013940:	6823      	ldr	r3, [r4, #0]
 8013942:	4669      	mov	r1, sp
 8013944:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013946:	4620      	mov	r0, r4
 8013948:	4798      	blx	r3
 801394a:	4b08      	ldr	r3, [pc, #32]	; (801396c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801394c:	681b      	ldr	r3, [r3, #0]
 801394e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013952:	b10a      	cbz	r2, 8013958 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013954:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013956:	b900      	cbnz	r0, 801395a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013958:	6898      	ldr	r0, [r3, #8]
 801395a:	6803      	ldr	r3, [r0, #0]
 801395c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801395e:	6a1d      	ldr	r5, [r3, #32]
 8013960:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8013964:	4669      	mov	r1, sp
 8013966:	47a8      	blx	r5
 8013968:	b003      	add	sp, #12
 801396a:	bd30      	pop	{r4, r5, pc}
 801396c:	2001383c 	.word	0x2001383c

08013970 <_ZN8touchgfx3BoxD1Ev>:
 8013970:	4770      	bx	lr

08013972 <_ZN8touchgfx3BoxD0Ev>:
 8013972:	b510      	push	{r4, lr}
 8013974:	212c      	movs	r1, #44	; 0x2c
 8013976:	4604      	mov	r4, r0
 8013978:	f017 fb17 	bl	802afaa <_ZdlPvj>
 801397c:	4620      	mov	r0, r4
 801397e:	bd10      	pop	{r4, pc}

08013980 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013980:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8013984:	b12a      	cbz	r2, 8013992 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013986:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801398a:	b112      	cbz	r2, 8013992 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801398c:	6803      	ldr	r3, [r0, #0]
 801398e:	695b      	ldr	r3, [r3, #20]
 8013990:	4718      	bx	r3
 8013992:	4770      	bx	lr

08013994 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8013994:	b570      	push	{r4, r5, r6, lr}
 8013996:	6803      	ldr	r3, [r0, #0]
 8013998:	4604      	mov	r4, r0
 801399a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801399c:	4615      	mov	r5, r2
 801399e:	4798      	blx	r3
 80139a0:	6823      	ldr	r3, [r4, #0]
 80139a2:	4629      	mov	r1, r5
 80139a4:	4620      	mov	r0, r4
 80139a6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80139a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80139ac:	4718      	bx	r3

080139ae <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 80139ae:	b570      	push	{r4, r5, r6, lr}
 80139b0:	6803      	ldr	r3, [r0, #0]
 80139b2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80139b4:	4604      	mov	r4, r0
 80139b6:	460e      	mov	r6, r1
 80139b8:	4615      	mov	r5, r2
 80139ba:	4798      	blx	r3
 80139bc:	8030      	strh	r0, [r6, #0]
 80139be:	6823      	ldr	r3, [r4, #0]
 80139c0:	4620      	mov	r0, r4
 80139c2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80139c4:	4798      	blx	r3
 80139c6:	8028      	strh	r0, [r5, #0]
 80139c8:	bd70      	pop	{r4, r5, r6, pc}

080139ca <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 80139ca:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 80139ce:	4770      	bx	lr

080139d0 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 80139d0:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 80139d4:	4770      	bx	lr

080139d6 <_ZN8touchgfx10TiledImageD1Ev>:
 80139d6:	4770      	bx	lr

080139d8 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 80139d8:	b510      	push	{r4, lr}
 80139da:	4604      	mov	r4, r0
 80139dc:	f000 fd31 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80139e0:	6823      	ldr	r3, [r4, #0]
 80139e2:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80139e6:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 80139ea:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80139ec:	4620      	mov	r0, r4
 80139ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80139f2:	4718      	bx	r3

080139f4 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 80139f4:	b538      	push	{r3, r4, r5, lr}
 80139f6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80139fa:	4604      	mov	r4, r0
 80139fc:	8541      	strh	r1, [r0, #42]	; 0x2a
 80139fe:	4628      	mov	r0, r5
 8013a00:	f006 fe6e 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a04:	b188      	cbz	r0, 8013a2a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013a06:	4628      	mov	r0, r5
 8013a08:	f006 fe6a 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a0c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8013a10:	fb92 f3f0 	sdiv	r3, r2, r0
 8013a14:	fb03 2010 	mls	r0, r3, r0, r2
 8013a18:	2800      	cmp	r0, #0
 8013a1a:	8560      	strh	r0, [r4, #42]	; 0x2a
 8013a1c:	da05      	bge.n	8013a2a <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013a1e:	4628      	mov	r0, r5
 8013a20:	f006 fe5e 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a24:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8013a26:	4418      	add	r0, r3
 8013a28:	8560      	strh	r0, [r4, #42]	; 0x2a
 8013a2a:	bd38      	pop	{r3, r4, r5, pc}

08013a2c <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 8013a2c:	b538      	push	{r3, r4, r5, lr}
 8013a2e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8013a32:	4604      	mov	r4, r0
 8013a34:	8581      	strh	r1, [r0, #44]	; 0x2c
 8013a36:	4628      	mov	r0, r5
 8013a38:	f006 fe86 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a3c:	b188      	cbz	r0, 8013a62 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8013a3e:	4628      	mov	r0, r5
 8013a40:	f006 fe82 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a44:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013a48:	fb92 f3f0 	sdiv	r3, r2, r0
 8013a4c:	fb03 2010 	mls	r0, r3, r0, r2
 8013a50:	2800      	cmp	r0, #0
 8013a52:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8013a54:	da05      	bge.n	8013a62 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 8013a56:	4628      	mov	r0, r5
 8013a58:	f006 fe76 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a5c:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 8013a5e:	4418      	add	r0, r3
 8013a60:	85a0      	strh	r0, [r4, #44]	; 0x2c
 8013a62:	bd38      	pop	{r3, r4, r5, pc}

08013a64 <_ZN8touchgfx10TiledImageD0Ev>:
 8013a64:	b510      	push	{r4, lr}
 8013a66:	2130      	movs	r1, #48	; 0x30
 8013a68:	4604      	mov	r4, r0
 8013a6a:	f017 fa9e 	bl	802afaa <_ZdlPvj>
 8013a6e:	4620      	mov	r0, r4
 8013a70:	bd10      	pop	{r4, pc}
	...

08013a74 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8013a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a78:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 8013a7c:	b093      	sub	sp, #76	; 0x4c
 8013a7e:	4607      	mov	r7, r0
 8013a80:	4658      	mov	r0, fp
 8013a82:	460e      	mov	r6, r1
 8013a84:	f006 fe2c 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a88:	4681      	mov	r9, r0
 8013a8a:	4658      	mov	r0, fp
 8013a8c:	f006 fe5c 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a90:	4605      	mov	r5, r0
 8013a92:	f1b9 0f00 	cmp.w	r9, #0
 8013a96:	f000 80c4 	beq.w	8013c22 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013a9a:	2800      	cmp	r0, #0
 8013a9c:	f000 80c1 	beq.w	8013c22 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013aa0:	2300      	movs	r3, #0
 8013aa2:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013aa6:	683b      	ldr	r3, [r7, #0]
 8013aa8:	a90e      	add	r1, sp, #56	; 0x38
 8013aaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013aac:	4638      	mov	r0, r7
 8013aae:	4798      	blx	r3
 8013ab0:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013ab4:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013ab8:	88b1      	ldrh	r1, [r6, #4]
 8013aba:	fa1f f889 	uxth.w	r8, r9
 8013abe:	189c      	adds	r4, r3, r2
 8013ac0:	440b      	add	r3, r1
 8013ac2:	fa02 f383 	sxtah	r3, r2, r3
 8013ac6:	fb94 f4f9 	sdiv	r4, r4, r9
 8013aca:	fb14 f408 	smulbb	r4, r4, r8
 8013ace:	1aa4      	subs	r4, r4, r2
 8013ad0:	3b01      	subs	r3, #1
 8013ad2:	b2aa      	uxth	r2, r5
 8013ad4:	fb93 f3f9 	sdiv	r3, r3, r9
 8013ad8:	fb13 f308 	smulbb	r3, r3, r8
 8013adc:	b21b      	sxth	r3, r3
 8013ade:	9205      	str	r2, [sp, #20]
 8013ae0:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013ae4:	9805      	ldr	r0, [sp, #20]
 8013ae6:	930b      	str	r3, [sp, #44]	; 0x2c
 8013ae8:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8013aec:	185a      	adds	r2, r3, r1
 8013aee:	fb92 f2f5 	sdiv	r2, r2, r5
 8013af2:	fb12 f200 	smulbb	r2, r2, r0
 8013af6:	1a52      	subs	r2, r2, r1
 8013af8:	b212      	sxth	r2, r2
 8013afa:	920c      	str	r2, [sp, #48]	; 0x30
 8013afc:	88f2      	ldrh	r2, [r6, #6]
 8013afe:	4413      	add	r3, r2
 8013b00:	fa01 f383 	sxtah	r3, r1, r3
 8013b04:	3b01      	subs	r3, #1
 8013b06:	fb93 f3f5 	sdiv	r3, r3, r5
 8013b0a:	fb13 f300 	smulbb	r3, r3, r0
 8013b0e:	b2a4      	uxth	r4, r4
 8013b10:	b21b      	sxth	r3, r3
 8013b12:	930d      	str	r3, [sp, #52]	; 0x34
 8013b14:	eb08 0504 	add.w	r5, r8, r4
 8013b18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013b1a:	b223      	sxth	r3, r4
 8013b1c:	4293      	cmp	r3, r2
 8013b1e:	b2ad      	uxth	r5, r5
 8013b20:	9306      	str	r3, [sp, #24]
 8013b22:	dc7e      	bgt.n	8013c22 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013b24:	b22b      	sxth	r3, r5
 8013b26:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8013b2a:	930a      	str	r3, [sp, #40]	; 0x28
 8013b2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b2e:	4599      	cmp	r9, r3
 8013b30:	dd03      	ble.n	8013b3a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 8013b32:	4444      	add	r4, r8
 8013b34:	b2a4      	uxth	r4, r4
 8013b36:	4445      	add	r5, r8
 8013b38:	e7ee      	b.n	8013b18 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 8013b3a:	f9b6 c000 	ldrsh.w	ip, [r6]
 8013b3e:	88b2      	ldrh	r2, [r6, #4]
 8013b40:	9806      	ldr	r0, [sp, #24]
 8013b42:	9905      	ldr	r1, [sp, #20]
 8013b44:	4462      	add	r2, ip
 8013b46:	b292      	uxth	r2, r2
 8013b48:	b213      	sxth	r3, r2
 8013b4a:	9308      	str	r3, [sp, #32]
 8013b4c:	fa1f f389 	uxth.w	r3, r9
 8013b50:	4419      	add	r1, r3
 8013b52:	9307      	str	r3, [sp, #28]
 8013b54:	4603      	mov	r3, r0
 8013b56:	9808      	ldr	r0, [sp, #32]
 8013b58:	b289      	uxth	r1, r1
 8013b5a:	4283      	cmp	r3, r0
 8013b5c:	fa0f fa81 	sxth.w	sl, r1
 8013b60:	da5b      	bge.n	8013c1a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013b62:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013b64:	4584      	cmp	ip, r0
 8013b66:	da58      	bge.n	8013c1a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013b68:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 8013b6c:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8013b70:	4486      	add	lr, r0
 8013b72:	fa1f fe8e 	uxth.w	lr, lr
 8013b76:	fa0f f38e 	sxth.w	r3, lr
 8013b7a:	4599      	cmp	r9, r3
 8013b7c:	9309      	str	r3, [sp, #36]	; 0x24
 8013b7e:	da4c      	bge.n	8013c1a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013b80:	4550      	cmp	r0, sl
 8013b82:	da4a      	bge.n	8013c1a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013b84:	9b06      	ldr	r3, [sp, #24]
 8013b86:	459c      	cmp	ip, r3
 8013b88:	bfb8      	it	lt
 8013b8a:	469c      	movlt	ip, r3
 8013b8c:	9b08      	ldr	r3, [sp, #32]
 8013b8e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8013b92:	4548      	cmp	r0, r9
 8013b94:	bfb8      	it	lt
 8013b96:	4648      	movlt	r0, r9
 8013b98:	4699      	mov	r9, r3
 8013b9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013b9c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013ba0:	4599      	cmp	r9, r3
 8013ba2:	bfc8      	it	gt
 8013ba4:	462a      	movgt	r2, r5
 8013ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ba8:	4553      	cmp	r3, sl
 8013baa:	bfd8      	it	le
 8013bac:	4671      	movle	r1, lr
 8013bae:	eba2 020c 	sub.w	r2, r2, ip
 8013bb2:	1a09      	subs	r1, r1, r0
 8013bb4:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013bb8:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 8013bbc:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013bc0:	9b07      	ldr	r3, [sp, #28]
 8013bc2:	1b12      	subs	r2, r2, r4
 8013bc4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013bc8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013bcc:	1ad2      	subs	r2, r2, r3
 8013bce:	4b16      	ldr	r3, [pc, #88]	; (8013c28 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013bd0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013bd4:	681a      	ldr	r2, [r3, #0]
 8013bd6:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 8013bda:	b109      	cbz	r1, 8013be0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8013bdc:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8013bde:	b900      	cbnz	r0, 8013be2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013be0:	6890      	ldr	r0, [r2, #8]
 8013be2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013be6:	9b07      	ldr	r3, [sp, #28]
 8013be8:	6801      	ldr	r1, [r0, #0]
 8013bea:	f04f 0c01 	mov.w	ip, #1
 8013bee:	f8cd c008 	str.w	ip, [sp, #8]
 8013bf2:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013bf6:	f8cd c004 	str.w	ip, [sp, #4]
 8013bfa:	4413      	add	r3, r2
 8013bfc:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013c00:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013c04:	f8cd c000 	str.w	ip, [sp]
 8013c08:	4422      	add	r2, r4
 8013c0a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8013c0e:	b21b      	sxth	r3, r3
 8013c10:	b212      	sxth	r2, r2
 8013c12:	4659      	mov	r1, fp
 8013c14:	47c8      	blx	r9
 8013c16:	46d1      	mov	r9, sl
 8013c18:	e788      	b.n	8013b2c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8013c1a:	2300      	movs	r3, #0
 8013c1c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8013c20:	e7cc      	b.n	8013bbc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8013c22:	b013      	add	sp, #76	; 0x4c
 8013c24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c28:	2001383c 	.word	0x2001383c

08013c2c <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8013c2c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c30:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013c34:	2bff      	cmp	r3, #255	; 0xff
 8013c36:	4606      	mov	r6, r0
 8013c38:	4689      	mov	r9, r1
 8013c3a:	d008      	beq.n	8013c4e <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8013c3c:	2300      	movs	r3, #0
 8013c3e:	8003      	strh	r3, [r0, #0]
 8013c40:	8043      	strh	r3, [r0, #2]
 8013c42:	8083      	strh	r3, [r0, #4]
 8013c44:	4630      	mov	r0, r6
 8013c46:	80f3      	strh	r3, [r6, #6]
 8013c48:	b003      	add	sp, #12
 8013c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c4e:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8013c52:	4659      	mov	r1, fp
 8013c54:	4668      	mov	r0, sp
 8013c56:	f006 fdab 	bl	801a7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013c5a:	4658      	mov	r0, fp
 8013c5c:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8013c60:	f9bd 7000 	ldrsh.w	r7, [sp]
 8013c64:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8013c68:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 8013c6c:	f006 fd38 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013c70:	4284      	cmp	r4, r0
 8013c72:	d10d      	bne.n	8013c90 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013c74:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013c78:	4658      	mov	r0, fp
 8013c7a:	f006 fd65 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013c7e:	4580      	cmp	r8, r0
 8013c80:	d129      	bne.n	8013cd6 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8013c82:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8013c86:	8037      	strh	r7, [r6, #0]
 8013c88:	f8a6 a002 	strh.w	sl, [r6, #2]
 8013c8c:	80b5      	strh	r5, [r6, #4]
 8013c8e:	e7d9      	b.n	8013c44 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013c90:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013c94:	4658      	mov	r0, fp
 8013c96:	f006 fd23 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013c9a:	1b7f      	subs	r7, r7, r5
 8013c9c:	b2bd      	uxth	r5, r7
 8013c9e:	b22f      	sxth	r7, r5
 8013ca0:	4428      	add	r0, r5
 8013ca2:	2f00      	cmp	r7, #0
 8013ca4:	b2a3      	uxth	r3, r4
 8013ca6:	b280      	uxth	r0, r0
 8013ca8:	bfb8      	it	lt
 8013caa:	18ed      	addlt	r5, r5, r3
 8013cac:	4403      	add	r3, r0
 8013cae:	b29b      	uxth	r3, r3
 8013cb0:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013cb4:	bfb8      	it	lt
 8013cb6:	b22d      	sxthlt	r5, r5
 8013cb8:	b219      	sxth	r1, r3
 8013cba:	bfae      	itee	ge
 8013cbc:	4625      	movge	r5, r4
 8013cbe:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013cc2:	2700      	movlt	r7, #0
 8013cc4:	4291      	cmp	r1, r2
 8013cc6:	bfc4      	itt	gt
 8013cc8:	1a9c      	subgt	r4, r3, r2
 8013cca:	b224      	sxthgt	r4, r4
 8013ccc:	42ac      	cmp	r4, r5
 8013cce:	bfc4      	itt	gt
 8013cd0:	b207      	sxthgt	r7, r0
 8013cd2:	4625      	movgt	r5, r4
 8013cd4:	e7d0      	b.n	8013c78 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013cd6:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 8013cda:	4658      	mov	r0, fp
 8013cdc:	f006 fd34 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ce0:	ebaa 0404 	sub.w	r4, sl, r4
 8013ce4:	b2a4      	uxth	r4, r4
 8013ce6:	fa0f fa84 	sxth.w	sl, r4
 8013cea:	4420      	add	r0, r4
 8013cec:	f1ba 0f00 	cmp.w	sl, #0
 8013cf0:	fa1f f288 	uxth.w	r2, r8
 8013cf4:	b280      	uxth	r0, r0
 8013cf6:	bfb8      	it	lt
 8013cf8:	18a3      	addlt	r3, r4, r2
 8013cfa:	4402      	add	r2, r0
 8013cfc:	b292      	uxth	r2, r2
 8013cfe:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013d02:	bfb8      	it	lt
 8013d04:	b21b      	sxthlt	r3, r3
 8013d06:	b214      	sxth	r4, r2
 8013d08:	bfae      	itee	ge
 8013d0a:	4643      	movge	r3, r8
 8013d0c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013d10:	f04f 0a00 	movlt.w	sl, #0
 8013d14:	428c      	cmp	r4, r1
 8013d16:	bfc4      	itt	gt
 8013d18:	eba2 0801 	subgt.w	r8, r2, r1
 8013d1c:	fa0f f888 	sxthgt.w	r8, r8
 8013d20:	4598      	cmp	r8, r3
 8013d22:	bfc4      	itt	gt
 8013d24:	fa0f fa80 	sxthgt.w	sl, r0
 8013d28:	4643      	movgt	r3, r8
 8013d2a:	e7ac      	b.n	8013c86 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

08013d2c <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013d2c:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013d30:	b12a      	cbz	r2, 8013d3e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013d32:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013d36:	b112      	cbz	r2, 8013d3e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013d38:	6803      	ldr	r3, [r0, #0]
 8013d3a:	695b      	ldr	r3, [r3, #20]
 8013d3c:	4718      	bx	r3
 8013d3e:	4770      	bx	lr

08013d40 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8013d40:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8013d44:	600b      	str	r3, [r1, #0]
 8013d46:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8013d4a:	6013      	str	r3, [r2, #0]
 8013d4c:	4770      	bx	lr

08013d4e <_ZN8touchgfx5Gauge8setWidthEs>:
 8013d4e:	8101      	strh	r1, [r0, #8]
 8013d50:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8013d54:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8013d58:	4770      	bx	lr

08013d5a <_ZN8touchgfx5Gauge9setHeightEs>:
 8013d5a:	8141      	strh	r1, [r0, #10]
 8013d5c:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8013d60:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8013d64:	4770      	bx	lr

08013d66 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8013d66:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8013d6a:	4770      	bx	lr

08013d6c <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8013d6c:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013d70:	4770      	bx	lr

08013d72 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013d72:	4770      	bx	lr

08013d74 <_ZN8touchgfx5GaugeD1Ev>:
 8013d74:	4770      	bx	lr

08013d76 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013d76:	b538      	push	{r3, r4, r5, lr}
 8013d78:	4604      	mov	r4, r0
 8013d7a:	460d      	mov	r5, r1
 8013d7c:	f7fc fe07 	bl	801098e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013d80:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013d84:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8013d88:	bd38      	pop	{r3, r4, r5, pc}

08013d8a <_ZN8touchgfx5GaugeD0Ev>:
 8013d8a:	b510      	push	{r4, lr}
 8013d8c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013d90:	4604      	mov	r4, r0
 8013d92:	f017 f90a 	bl	802afaa <_ZdlPvj>
 8013d96:	4620      	mov	r0, r4
 8013d98:	bd10      	pop	{r4, pc}

08013d9a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8013d9a:	b510      	push	{r4, lr}
 8013d9c:	6803      	ldr	r3, [r0, #0]
 8013d9e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013da2:	4604      	mov	r4, r0
 8013da4:	4798      	blx	r3
 8013da6:	b170      	cbz	r0, 8013dc6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013da8:	6823      	ldr	r3, [r4, #0]
 8013daa:	4620      	mov	r0, r4
 8013dac:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013db0:	4798      	blx	r3
 8013db2:	b140      	cbz	r0, 8013dc6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013db4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013db8:	b12b      	cbz	r3, 8013dc6 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013dba:	6823      	ldr	r3, [r4, #0]
 8013dbc:	4620      	mov	r0, r4
 8013dbe:	695b      	ldr	r3, [r3, #20]
 8013dc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013dc4:	4718      	bx	r3
 8013dc6:	bd10      	pop	{r4, pc}

08013dc8 <_ZN8touchgfx5GaugeC1Ev>:
 8013dc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013dca:	4604      	mov	r4, r0
 8013dcc:	4626      	mov	r6, r4
 8013dce:	f7fc feff 	bl	8010bd0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013dd2:	4b18      	ldr	r3, [pc, #96]	; (8013e34 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013dd4:	f846 3bb4 	str.w	r3, [r6], #180
 8013dd8:	a902      	add	r1, sp, #8
 8013dda:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013dde:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013de2:	4630      	mov	r0, r6
 8013de4:	f015 f9a4 	bl	8029130 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013de8:	2500      	movs	r5, #0
 8013dea:	2301      	movs	r3, #1
 8013dec:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013df0:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013df4:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013df8:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8013dfc:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013e00:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013e04:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013e08:	4638      	mov	r0, r7
 8013e0a:	f014 fbd5 	bl	80285b8 <_ZN8touchgfx6CircleC1Ev>
 8013e0e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8013e12:	4620      	mov	r0, r4
 8013e14:	f7fc ff7d 	bl	8010d12 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013e18:	4639      	mov	r1, r7
 8013e1a:	4620      	mov	r0, r4
 8013e1c:	f7fc ff38 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013e20:	4620      	mov	r0, r4
 8013e22:	4631      	mov	r1, r6
 8013e24:	f7fc ff34 	bl	8010c90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013e28:	4620      	mov	r0, r4
 8013e2a:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8013e2e:	b003      	add	sp, #12
 8013e30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e32:	bf00      	nop
 8013e34:	0802fda0 	.word	0x0802fda0

08013e38 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013e38:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8013e3c:	4770      	bx	lr

08013e3e <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013e3e:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8013e42:	4770      	bx	lr

08013e44 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8013e44:	b538      	push	{r3, r4, r5, lr}
 8013e46:	8902      	ldrh	r2, [r0, #8]
 8013e48:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013e4c:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8013e50:	4604      	mov	r4, r0
 8013e52:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8013e56:	2200      	movs	r2, #0
 8013e58:	4611      	mov	r1, r2
 8013e5a:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8013e5e:	4628      	mov	r0, r5
 8013e60:	f7ee fe40 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 8013e64:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8013e68:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013e6c:	1a9b      	subs	r3, r3, r2
 8013e6e:	ee07 3a90 	vmov	s15, r3
 8013e72:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013e76:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8013e7a:	1a9b      	subs	r3, r3, r2
 8013e7c:	ee07 3a10 	vmov	s14, r3
 8013e80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013e88:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8013e8c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013e90:	4628      	mov	r0, r5
 8013e92:	f015 f999 	bl	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013e96:	4b16      	ldr	r3, [pc, #88]	; (8013ef0 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013e98:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8013e9c:	4628      	mov	r0, r5
 8013e9e:	f015 f993 	bl	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013ea2:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013ea6:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8013eaa:	ee07 3a90 	vmov	s15, r3
 8013eae:	ee07 2a10 	vmov	s14, r2
 8013eb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013eb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013eba:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8013ebe:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013ec2:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013ec6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8013eca:	4628      	mov	r0, r5
 8013ecc:	f015 f97c 	bl	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013ed0:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013ed4:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013ed8:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8013edc:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013ee0:	4628      	mov	r0, r5
 8013ee2:	f015 f971 	bl	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013ee6:	2301      	movs	r3, #1
 8013ee8:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013eec:	bd38      	pop	{r3, r4, r5, pc}
 8013eee:	bf00      	nop
 8013ef0:	43960000 	.word	0x43960000

08013ef4 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013ef4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013ef6:	4604      	mov	r4, r0
 8013ef8:	a802      	add	r0, sp, #8
 8013efa:	4616      	mov	r6, r2
 8013efc:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013f00:	461d      	mov	r5, r3
 8013f02:	4601      	mov	r1, r0
 8013f04:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013f08:	f015 fab4 	bl	8029474 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8013f0c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013f10:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013f14:	4620      	mov	r0, r4
 8013f16:	f7ff ff95 	bl	8013e44 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013f1a:	b002      	add	sp, #8
 8013f1c:	bd70      	pop	{r4, r5, r6, pc}

08013f1e <_ZN8touchgfx5Gauge9setCenterEii>:
 8013f1e:	b570      	push	{r4, r5, r6, lr}
 8013f20:	4606      	mov	r6, r0
 8013f22:	460d      	mov	r5, r1
 8013f24:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8013f28:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8013f2c:	4614      	mov	r4, r2
 8013f2e:	f7ff ff89 	bl	8013e44 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013f32:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8013f36:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8013f3a:	1aa4      	subs	r4, r4, r2
 8013f3c:	1a6d      	subs	r5, r5, r1
 8013f3e:	0164      	lsls	r4, r4, #5
 8013f40:	016d      	lsls	r5, r5, #5
 8013f42:	3410      	adds	r4, #16
 8013f44:	3510      	adds	r5, #16
 8013f46:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8013f4a:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8013f4e:	bd70      	pop	{r4, r5, r6, pc}

08013f50 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013f50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013f52:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013f54:	0149      	lsls	r1, r1, #5
 8013f56:	4299      	cmp	r1, r3
 8013f58:	4604      	mov	r4, r0
 8013f5a:	9101      	str	r1, [sp, #4]
 8013f5c:	d00b      	beq.n	8013f76 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8013f5e:	4601      	mov	r1, r0
 8013f60:	aa01      	add	r2, sp, #4
 8013f62:	a802      	add	r0, sp, #8
 8013f64:	f014 fd26 	bl	80289b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8013f68:	9b01      	ldr	r3, [sp, #4]
 8013f6a:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013f6c:	6823      	ldr	r3, [r4, #0]
 8013f6e:	a902      	add	r1, sp, #8
 8013f70:	691b      	ldr	r3, [r3, #16]
 8013f72:	4620      	mov	r0, r4
 8013f74:	4798      	blx	r3
 8013f76:	b004      	add	sp, #16
 8013f78:	bd10      	pop	{r4, pc}
	...

08013f7c <_ZN8touchgfx5Gauge8setValueEi>:
 8013f7c:	b570      	push	{r4, r5, r6, lr}
 8013f7e:	4604      	mov	r4, r0
 8013f80:	f7fc fd58 	bl	8010a34 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013f84:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8013f88:	429a      	cmp	r2, r3
 8013f8a:	bfac      	ite	ge
 8013f8c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013f90:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013f94:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013f98:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8013f9c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013fa0:	1ac9      	subs	r1, r1, r3
 8013fa2:	2900      	cmp	r1, #0
 8013fa4:	bfb8      	it	lt
 8013fa6:	4249      	neglt	r1, r1
 8013fa8:	b289      	uxth	r1, r1
 8013faa:	4620      	mov	r0, r4
 8013fac:	f7fc fd64 	bl	8010a78 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013fb0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013fb4:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013fb8:	eddf 6a19 	vldr	s13, [pc, #100]	; 8014020 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8013fbc:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8014024 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013fc0:	429a      	cmp	r2, r3
 8013fc2:	4605      	mov	r5, r0
 8013fc4:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013fc8:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013fcc:	da15      	bge.n	8013ffa <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8013fce:	1b5b      	subs	r3, r3, r5
 8013fd0:	ee07 3a90 	vmov	s15, r3
 8013fd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013fd8:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013fdc:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013fe0:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013fe4:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013fe8:	f015 f85d 	bl	80290a6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013fec:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013ff0:	1b49      	subs	r1, r1, r5
 8013ff2:	4630      	mov	r0, r6
 8013ff4:	f7ff ffac 	bl	8013f50 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013ff8:	bd70      	pop	{r4, r5, r6, pc}
 8013ffa:	442b      	add	r3, r5
 8013ffc:	ee07 3a90 	vmov	s15, r3
 8014000:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014004:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8014008:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801400c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8014010:	ee21 1a07 	vmul.f32	s2, s2, s14
 8014014:	f015 f847 	bl	80290a6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8014018:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801401c:	4429      	add	r1, r5
 801401e:	e7e8      	b.n	8013ff2 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8014020:	43340000 	.word	0x43340000
 8014024:	40490fdb 	.word	0x40490fdb

08014028 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8014028:	b510      	push	{r4, lr}
 801402a:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801402e:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8014032:	0149      	lsls	r1, r1, #5
 8014034:	0152      	lsls	r2, r2, #5
 8014036:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 801403a:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801403e:	4604      	mov	r4, r0
 8014040:	f7fc fca2 	bl	8010988 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8014044:	4601      	mov	r1, r0
 8014046:	4620      	mov	r0, r4
 8014048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801404c:	f7ff bf96 	b.w	8013f7c <_ZN8touchgfx5Gauge8setValueEi>

08014050 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8014050:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8014054:	4770      	bx	lr

08014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8014056:	b570      	push	{r4, r5, r6, lr}
 8014058:	880b      	ldrh	r3, [r1, #0]
 801405a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801405c:	4605      	mov	r5, r0
 801405e:	8813      	ldrh	r3, [r2, #0]
 8014060:	f825 3f30 	strh.w	r3, [r5, #48]!
 8014064:	4604      	mov	r4, r0
 8014066:	4628      	mov	r0, r5
 8014068:	f006 fb3a 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801406c:	4606      	mov	r6, r0
 801406e:	4628      	mov	r0, r5
 8014070:	f006 fb6a 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014074:	6823      	ldr	r3, [r4, #0]
 8014076:	4605      	mov	r5, r0
 8014078:	4631      	mov	r1, r6
 801407a:	4620      	mov	r0, r4
 801407c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801407e:	4798      	blx	r3
 8014080:	6823      	ldr	r3, [r4, #0]
 8014082:	4629      	mov	r1, r5
 8014084:	4620      	mov	r0, r4
 8014086:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014088:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801408c:	4718      	bx	r3

0801408e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801408e:	b510      	push	{r4, lr}
 8014090:	4604      	mov	r4, r0
 8014092:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014094:	b150      	cbz	r0, 80140ac <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8014096:	6803      	ldr	r3, [r0, #0]
 8014098:	68db      	ldr	r3, [r3, #12]
 801409a:	4798      	blx	r3
 801409c:	b130      	cbz	r0, 80140ac <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801409e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80140a0:	6803      	ldr	r3, [r0, #0]
 80140a2:	4621      	mov	r1, r4
 80140a4:	689b      	ldr	r3, [r3, #8]
 80140a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80140aa:	4718      	bx	r3
 80140ac:	bd10      	pop	{r4, pc}

080140ae <_ZNK8touchgfx6Button12getSolidRectEv>:
 80140ae:	b510      	push	{r4, lr}
 80140b0:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80140b4:	2bff      	cmp	r3, #255	; 0xff
 80140b6:	4604      	mov	r4, r0
 80140b8:	d006      	beq.n	80140c8 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80140ba:	2300      	movs	r3, #0
 80140bc:	8003      	strh	r3, [r0, #0]
 80140be:	8043      	strh	r3, [r0, #2]
 80140c0:	8083      	strh	r3, [r0, #4]
 80140c2:	80c3      	strh	r3, [r0, #6]
 80140c4:	4620      	mov	r0, r4
 80140c6:	bd10      	pop	{r4, pc}
 80140c8:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80140cc:	b11b      	cbz	r3, 80140d6 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80140ce:	3130      	adds	r1, #48	; 0x30
 80140d0:	f006 fb6e 	bl	801a7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80140d4:	e7f6      	b.n	80140c4 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80140d6:	312e      	adds	r1, #46	; 0x2e
 80140d8:	e7fa      	b.n	80140d0 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080140dc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80140dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80140e0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80140e4:	b08a      	sub	sp, #40	; 0x28
 80140e6:	4604      	mov	r4, r0
 80140e8:	4688      	mov	r8, r1
 80140ea:	2b00      	cmp	r3, #0
 80140ec:	d066      	beq.n	80141bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80140ee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80140f0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80140f4:	a805      	add	r0, sp, #20
 80140f6:	f006 faf3 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80140fa:	4607      	mov	r7, r0
 80140fc:	a805      	add	r0, sp, #20
 80140fe:	f006 fb23 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014102:	f9b8 6000 	ldrsh.w	r6, [r8]
 8014106:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801410a:	4432      	add	r2, r6
 801410c:	b292      	uxth	r2, r2
 801410e:	2300      	movs	r3, #0
 8014110:	fa0f fc82 	sxth.w	ip, r2
 8014114:	459c      	cmp	ip, r3
 8014116:	9306      	str	r3, [sp, #24]
 8014118:	dd52      	ble.n	80141c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801411a:	42b7      	cmp	r7, r6
 801411c:	dd50      	ble.n	80141c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801411e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8014122:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8014126:	442b      	add	r3, r5
 8014128:	b29b      	uxth	r3, r3
 801412a:	b219      	sxth	r1, r3
 801412c:	2900      	cmp	r1, #0
 801412e:	dd47      	ble.n	80141c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014130:	42a8      	cmp	r0, r5
 8014132:	dd45      	ble.n	80141c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8014134:	4567      	cmp	r7, ip
 8014136:	bfb8      	it	lt
 8014138:	b2ba      	uxthlt	r2, r7
 801413a:	4288      	cmp	r0, r1
 801413c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8014140:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8014144:	bfb8      	it	lt
 8014146:	b283      	uxthlt	r3, r0
 8014148:	1b92      	subs	r2, r2, r6
 801414a:	1b5b      	subs	r3, r3, r5
 801414c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014150:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014154:	f8ad 6018 	strh.w	r6, [sp, #24]
 8014158:	f8ad 501a 	strh.w	r5, [sp, #26]
 801415c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014160:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014164:	429a      	cmp	r2, r3
 8014166:	d026      	beq.n	80141b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014168:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801416c:	2b00      	cmp	r3, #0
 801416e:	dd22      	ble.n	80141b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014170:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014174:	2b00      	cmp	r3, #0
 8014176:	dd1e      	ble.n	80141b6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8014178:	2300      	movs	r3, #0
 801417a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801417e:	6823      	ldr	r3, [r4, #0]
 8014180:	a908      	add	r1, sp, #32
 8014182:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014184:	4620      	mov	r0, r4
 8014186:	4798      	blx	r3
 8014188:	4b0f      	ldr	r3, [pc, #60]	; (80141c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801418a:	681b      	ldr	r3, [r3, #0]
 801418c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014190:	b10a      	cbz	r2, 8014196 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8014192:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014194:	b900      	cbnz	r0, 8014198 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8014196:	6898      	ldr	r0, [r3, #8]
 8014198:	6801      	ldr	r1, [r0, #0]
 801419a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801419e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80141a2:	2501      	movs	r5, #1
 80141a4:	9502      	str	r5, [sp, #8]
 80141a6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80141aa:	9401      	str	r4, [sp, #4]
 80141ac:	ac06      	add	r4, sp, #24
 80141ae:	9400      	str	r4, [sp, #0]
 80141b0:	688c      	ldr	r4, [r1, #8]
 80141b2:	a905      	add	r1, sp, #20
 80141b4:	47a0      	blx	r4
 80141b6:	b00a      	add	sp, #40	; 0x28
 80141b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80141bc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80141be:	e797      	b.n	80140f0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80141c0:	2300      	movs	r3, #0
 80141c2:	9307      	str	r3, [sp, #28]
 80141c4:	e7ca      	b.n	801415c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80141c6:	bf00      	nop
 80141c8:	2001383c 	.word	0x2001383c

080141cc <_ZNK8touchgfx6Button17invalidateContentEv>:
 80141cc:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80141d0:	b12a      	cbz	r2, 80141de <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80141d2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80141d6:	b112      	cbz	r2, 80141de <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80141d8:	6803      	ldr	r3, [r0, #0]
 80141da:	695b      	ldr	r3, [r3, #20]
 80141dc:	4718      	bx	r3
 80141de:	4770      	bx	lr

080141e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80141e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80141e4:	4b2f      	ldr	r3, [pc, #188]	; (80142a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80141e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80141e8:	881b      	ldrh	r3, [r3, #0]
 80141ea:	4293      	cmp	r3, r2
 80141ec:	b08d      	sub	sp, #52	; 0x34
 80141ee:	4604      	mov	r4, r0
 80141f0:	460f      	mov	r7, r1
 80141f2:	d954      	bls.n	801429e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80141f4:	4b2c      	ldr	r3, [pc, #176]	; (80142a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80141f6:	6819      	ldr	r1, [r3, #0]
 80141f8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80141fc:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014200:	4a2a      	ldr	r2, [pc, #168]	; (80142ac <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014202:	6812      	ldr	r2, [r2, #0]
 8014204:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8014208:	2900      	cmp	r1, #0
 801420a:	d048      	beq.n	801429e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801420c:	785a      	ldrb	r2, [r3, #1]
 801420e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014212:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014216:	4b26      	ldr	r3, [pc, #152]	; (80142b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8014218:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801421c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8014220:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8014224:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8014226:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801422a:	9107      	str	r1, [sp, #28]
 801422c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8014230:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8014234:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8014238:	681a      	ldr	r2, [r3, #0]
 801423a:	f88d 8020 	strb.w	r8, [sp, #32]
 801423e:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8014242:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8014246:	9609      	str	r6, [sp, #36]	; 0x24
 8014248:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801424c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8014250:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8014254:	b10b      	cbz	r3, 801425a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8014256:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8014258:	b905      	cbnz	r5, 801425c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801425a:	6895      	ldr	r5, [r2, #8]
 801425c:	ae05      	add	r6, sp, #20
 801425e:	4621      	mov	r1, r4
 8014260:	4630      	mov	r0, r6
 8014262:	f003 ff71 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8014266:	4b13      	ldr	r3, [pc, #76]	; (80142b4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8014268:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801426a:	6818      	ldr	r0, [r3, #0]
 801426c:	f7f4 fc3e 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8014270:	6823      	ldr	r3, [r4, #0]
 8014272:	4680      	mov	r8, r0
 8014274:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8014276:	4620      	mov	r0, r4
 8014278:	4798      	blx	r3
 801427a:	6823      	ldr	r3, [r4, #0]
 801427c:	4681      	mov	r9, r0
 801427e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014282:	4620      	mov	r0, r4
 8014284:	4798      	blx	r3
 8014286:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801428a:	ab07      	add	r3, sp, #28
 801428c:	9300      	str	r3, [sp, #0]
 801428e:	f8cd 8004 	str.w	r8, [sp, #4]
 8014292:	463b      	mov	r3, r7
 8014294:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014298:	4628      	mov	r0, r5
 801429a:	f7f4 fbd9 	bl	8008a50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801429e:	b00d      	add	sp, #52	; 0x34
 80142a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80142a4:	20013898 	.word	0x20013898
 80142a8:	20013894 	.word	0x20013894
 80142ac:	2001389c 	.word	0x2001389c
 80142b0:	2001383c 	.word	0x2001383c
 80142b4:	200138a0 	.word	0x200138a0

080142b8 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80142b8:	4770      	bx	lr

080142ba <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80142ba:	4770      	bx	lr

080142bc <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80142bc:	b510      	push	{r4, lr}
 80142be:	213c      	movs	r1, #60	; 0x3c
 80142c0:	4604      	mov	r4, r0
 80142c2:	f016 fe72 	bl	802afaa <_ZdlPvj>
 80142c6:	4620      	mov	r0, r4
 80142c8:	bd10      	pop	{r4, pc}

080142ca <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80142ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80142ce:	461c      	mov	r4, r3
 80142d0:	4606      	mov	r6, r0
 80142d2:	9f06      	ldr	r7, [sp, #24]
 80142d4:	f7ff febf 	bl	8014056 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80142d8:	8823      	ldrh	r3, [r4, #0]
 80142da:	86b3      	strh	r3, [r6, #52]	; 0x34
 80142dc:	883b      	ldrh	r3, [r7, #0]
 80142de:	86f3      	strh	r3, [r6, #54]	; 0x36
 80142e0:	4638      	mov	r0, r7
 80142e2:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80142e6:	f006 f9fb 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80142ea:	f04f 0802 	mov.w	r8, #2
 80142ee:	fb95 f5f8 	sdiv	r5, r5, r8
 80142f2:	b2ad      	uxth	r5, r5
 80142f4:	fb90 f0f8 	sdiv	r0, r0, r8
 80142f8:	1a2d      	subs	r5, r5, r0
 80142fa:	8735      	strh	r5, [r6, #56]	; 0x38
 80142fc:	4638      	mov	r0, r7
 80142fe:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8014302:	fb94 f4f8 	sdiv	r4, r4, r8
 8014306:	f006 fa1f 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801430a:	b2a4      	uxth	r4, r4
 801430c:	fb90 f0f8 	sdiv	r0, r0, r8
 8014310:	1a24      	subs	r4, r4, r0
 8014312:	8774      	strh	r4, [r6, #58]	; 0x3a
 8014314:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014318 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8014318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801431c:	4604      	mov	r4, r0
 801431e:	b08c      	sub	sp, #48	; 0x30
 8014320:	460d      	mov	r5, r1
 8014322:	f7ff fedb 	bl	80140dc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8014326:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801432a:	2b00      	cmp	r3, #0
 801432c:	d05d      	beq.n	80143ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801432e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8014330:	f8ad 3014 	strh.w	r3, [sp, #20]
 8014334:	a805      	add	r0, sp, #20
 8014336:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 801433a:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801433e:	f006 f9cf 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014342:	4606      	mov	r6, r0
 8014344:	a805      	add	r0, sp, #20
 8014346:	f006 f9ff 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801434a:	6869      	ldr	r1, [r5, #4]
 801434c:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014350:	6828      	ldr	r0, [r5, #0]
 8014352:	f8ad 8018 	strh.w	r8, [sp, #24]
 8014356:	ab08      	add	r3, sp, #32
 8014358:	ad08      	add	r5, sp, #32
 801435a:	c303      	stmia	r3!, {r0, r1}
 801435c:	a906      	add	r1, sp, #24
 801435e:	4628      	mov	r0, r5
 8014360:	f8ad 701a 	strh.w	r7, [sp, #26]
 8014364:	f8ad 601c 	strh.w	r6, [sp, #28]
 8014368:	f7fc fe18 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801436c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8014370:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014374:	429a      	cmp	r2, r3
 8014376:	d035      	beq.n	80143e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014378:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801437c:	2b00      	cmp	r3, #0
 801437e:	dd31      	ble.n	80143e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014380:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8014384:	2b00      	cmp	r3, #0
 8014386:	dd2d      	ble.n	80143e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014388:	2300      	movs	r3, #0
 801438a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801438e:	6823      	ldr	r3, [r4, #0]
 8014390:	a90a      	add	r1, sp, #40	; 0x28
 8014392:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014394:	4620      	mov	r0, r4
 8014396:	4798      	blx	r3
 8014398:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801439c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801439e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80143a2:	1a9b      	subs	r3, r3, r2
 80143a4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80143a8:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80143aa:	1ac9      	subs	r1, r1, r3
 80143ac:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80143b0:	490f      	ldr	r1, [pc, #60]	; (80143f0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80143b2:	6809      	ldr	r1, [r1, #0]
 80143b4:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80143b8:	b108      	cbz	r0, 80143be <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80143ba:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80143bc:	b900      	cbnz	r0, 80143c0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80143be:	6888      	ldr	r0, [r1, #8]
 80143c0:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80143c4:	440b      	add	r3, r1
 80143c6:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80143ca:	2601      	movs	r6, #1
 80143cc:	440a      	add	r2, r1
 80143ce:	6801      	ldr	r1, [r0, #0]
 80143d0:	9602      	str	r6, [sp, #8]
 80143d2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80143d6:	e9cd 5400 	strd	r5, r4, [sp]
 80143da:	b21b      	sxth	r3, r3
 80143dc:	688c      	ldr	r4, [r1, #8]
 80143de:	b212      	sxth	r2, r2
 80143e0:	a905      	add	r1, sp, #20
 80143e2:	47a0      	blx	r4
 80143e4:	b00c      	add	sp, #48	; 0x30
 80143e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143ea:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80143ec:	e7a0      	b.n	8014330 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80143ee:	bf00      	nop
 80143f0:	2001383c 	.word	0x2001383c

080143f4 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80143f4:	b510      	push	{r4, lr}
 80143f6:	2101      	movs	r1, #1
 80143f8:	2200      	movs	r2, #0
 80143fa:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80143fe:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014402:	4c0e      	ldr	r4, [pc, #56]	; (801443c <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8014404:	8082      	strh	r2, [r0, #4]
 8014406:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801440a:	80c2      	strh	r2, [r0, #6]
 801440c:	8102      	strh	r2, [r0, #8]
 801440e:	8142      	strh	r2, [r0, #10]
 8014410:	8182      	strh	r2, [r0, #12]
 8014412:	81c2      	strh	r2, [r0, #14]
 8014414:	8202      	strh	r2, [r0, #16]
 8014416:	8242      	strh	r2, [r0, #18]
 8014418:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801441c:	61c2      	str	r2, [r0, #28]
 801441e:	8402      	strh	r2, [r0, #32]
 8014420:	8442      	strh	r2, [r0, #34]	; 0x22
 8014422:	6282      	str	r2, [r0, #40]	; 0x28
 8014424:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014428:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801442a:	8601      	strh	r1, [r0, #48]	; 0x30
 801442c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014430:	6004      	str	r4, [r0, #0]
 8014432:	8681      	strh	r1, [r0, #52]	; 0x34
 8014434:	86c1      	strh	r1, [r0, #54]	; 0x36
 8014436:	8702      	strh	r2, [r0, #56]	; 0x38
 8014438:	8742      	strh	r2, [r0, #58]	; 0x3a
 801443a:	bd10      	pop	{r4, pc}
 801443c:	0802fe88 	.word	0x0802fe88

08014440 <_ZN8touchgfx5ImageD1Ev>:
 8014440:	4770      	bx	lr

08014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8014442:	b570      	push	{r4, r5, r6, lr}
 8014444:	880b      	ldrh	r3, [r1, #0]
 8014446:	84c3      	strh	r3, [r0, #38]	; 0x26
 8014448:	4604      	mov	r4, r0
 801444a:	4608      	mov	r0, r1
 801444c:	460d      	mov	r5, r1
 801444e:	f006 f947 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014452:	4606      	mov	r6, r0
 8014454:	4628      	mov	r0, r5
 8014456:	f006 f977 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801445a:	6823      	ldr	r3, [r4, #0]
 801445c:	4605      	mov	r5, r0
 801445e:	4631      	mov	r1, r6
 8014460:	4620      	mov	r0, r4
 8014462:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014464:	4798      	blx	r3
 8014466:	6823      	ldr	r3, [r4, #0]
 8014468:	4629      	mov	r1, r5
 801446a:	4620      	mov	r0, r4
 801446c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801446e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014472:	4718      	bx	r3

08014474 <_ZN8touchgfx5ImageD0Ev>:
 8014474:	b510      	push	{r4, lr}
 8014476:	212c      	movs	r1, #44	; 0x2c
 8014478:	4604      	mov	r4, r0
 801447a:	f016 fd96 	bl	802afaa <_ZdlPvj>
 801447e:	4620      	mov	r0, r4
 8014480:	bd10      	pop	{r4, pc}

08014482 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8014482:	b510      	push	{r4, lr}
 8014484:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014488:	2bff      	cmp	r3, #255	; 0xff
 801448a:	4604      	mov	r4, r0
 801448c:	d006      	beq.n	801449c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801448e:	2300      	movs	r3, #0
 8014490:	8003      	strh	r3, [r0, #0]
 8014492:	8043      	strh	r3, [r0, #2]
 8014494:	8083      	strh	r3, [r0, #4]
 8014496:	80c3      	strh	r3, [r0, #6]
 8014498:	4620      	mov	r0, r4
 801449a:	bd10      	pop	{r4, pc}
 801449c:	3126      	adds	r1, #38	; 0x26
 801449e:	f006 f987 	bl	801a7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80144a2:	e7f9      	b.n	8014498 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080144a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80144a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80144a8:	4604      	mov	r4, r0
 80144aa:	b088      	sub	sp, #32
 80144ac:	f854 3b26 	ldr.w	r3, [r4], #38
 80144b0:	2500      	movs	r5, #0
 80144b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80144b4:	460f      	mov	r7, r1
 80144b6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80144ba:	a904      	add	r1, sp, #16
 80144bc:	4606      	mov	r6, r0
 80144be:	4798      	blx	r3
 80144c0:	4620      	mov	r0, r4
 80144c2:	f006 f90d 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80144c6:	4680      	mov	r8, r0
 80144c8:	4620      	mov	r0, r4
 80144ca:	f006 f93d 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80144ce:	9506      	str	r5, [sp, #24]
 80144d0:	ad06      	add	r5, sp, #24
 80144d2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80144d6:	4639      	mov	r1, r7
 80144d8:	4628      	mov	r0, r5
 80144da:	f8ad 801c 	strh.w	r8, [sp, #28]
 80144de:	f7fc fd5d 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 80144e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80144e6:	2b00      	cmp	r3, #0
 80144e8:	dd19      	ble.n	801451e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80144ea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80144ee:	2b00      	cmp	r3, #0
 80144f0:	dd15      	ble.n	801451e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80144f2:	4b0c      	ldr	r3, [pc, #48]	; (8014524 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80144f4:	681b      	ldr	r3, [r3, #0]
 80144f6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80144fa:	b10a      	cbz	r2, 8014500 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80144fc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80144fe:	b900      	cbnz	r0, 8014502 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014500:	6898      	ldr	r0, [r3, #8]
 8014502:	6801      	ldr	r1, [r0, #0]
 8014504:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014508:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801450c:	2701      	movs	r7, #1
 801450e:	9702      	str	r7, [sp, #8]
 8014510:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8014514:	e9cd 5600 	strd	r5, r6, [sp]
 8014518:	688d      	ldr	r5, [r1, #8]
 801451a:	4621      	mov	r1, r4
 801451c:	47a8      	blx	r5
 801451e:	b008      	add	sp, #32
 8014520:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014524:	2001383c 	.word	0x2001383c

08014528 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8014528:	4770      	bx	lr

0801452a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801452a:	b510      	push	{r4, lr}
 801452c:	2148      	movs	r1, #72	; 0x48
 801452e:	4604      	mov	r4, r0
 8014530:	f016 fd3b 	bl	802afaa <_ZdlPvj>
 8014534:	4620      	mov	r0, r4
 8014536:	bd10      	pop	{r4, pc}

08014538 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8014538:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801453c:	b08d      	sub	sp, #52	; 0x34
 801453e:	4604      	mov	r4, r0
 8014540:	460f      	mov	r7, r1
 8014542:	f7ff fdcb 	bl	80140dc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8014546:	4a55      	ldr	r2, [pc, #340]	; (801469c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8014548:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801454a:	8812      	ldrh	r2, [r2, #0]
 801454c:	429a      	cmp	r2, r3
 801454e:	f240 8082 	bls.w	8014656 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014552:	4d53      	ldr	r5, [pc, #332]	; (80146a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8014554:	682a      	ldr	r2, [r5, #0]
 8014556:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801455a:	4b52      	ldr	r3, [pc, #328]	; (80146a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801455c:	681b      	ldr	r3, [r3, #0]
 801455e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8014562:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8014566:	2200      	movs	r2, #0
 8014568:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801456c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8014570:	2a03      	cmp	r2, #3
 8014572:	d811      	bhi.n	8014598 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8014574:	e8df f002 	tbb	[pc, r2]
 8014578:	89727902 	.word	0x89727902
 801457c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014580:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014584:	1ad2      	subs	r2, r2, r3
 8014586:	2002      	movs	r0, #2
 8014588:	f8ad 1010 	strh.w	r1, [sp, #16]
 801458c:	fb92 f2f0 	sdiv	r2, r2, r0
 8014590:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014594:	f8ad 200e 	strh.w	r2, [sp, #14]
 8014598:	f10d 080c 	add.w	r8, sp, #12
 801459c:	e898 0003 	ldmia.w	r8, {r0, r1}
 80145a0:	f10d 0914 	add.w	r9, sp, #20
 80145a4:	e889 0003 	stmia.w	r9, {r0, r1}
 80145a8:	4639      	mov	r1, r7
 80145aa:	4648      	mov	r0, r9
 80145ac:	f7fc fcf6 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 80145b0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80145b4:	2b00      	cmp	r3, #0
 80145b6:	dd4e      	ble.n	8014656 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80145b8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80145bc:	2b00      	cmp	r3, #0
 80145be:	dd4a      	ble.n	8014656 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80145c0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80145c4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80145c8:	1a9b      	subs	r3, r3, r2
 80145ca:	f8ad 3014 	strh.w	r3, [sp, #20]
 80145ce:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80145d2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80145d6:	1a9b      	subs	r3, r3, r2
 80145d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80145dc:	6823      	ldr	r3, [r4, #0]
 80145de:	4641      	mov	r1, r8
 80145e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80145e2:	4620      	mov	r0, r4
 80145e4:	4798      	blx	r3
 80145e6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80145ea:	2b00      	cmp	r3, #0
 80145ec:	d053      	beq.n	8014696 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80145ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80145f0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80145f2:	682b      	ldr	r3, [r5, #0]
 80145f4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80145f8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80145fc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014600:	785b      	ldrb	r3, [r3, #1]
 8014602:	9209      	str	r2, [sp, #36]	; 0x24
 8014604:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8014608:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801460c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8014610:	2300      	movs	r3, #0
 8014612:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8014616:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801461a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801461e:	4b22      	ldr	r3, [pc, #136]	; (80146a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8014620:	9607      	str	r6, [sp, #28]
 8014622:	681b      	ldr	r3, [r3, #0]
 8014624:	f88d 5020 	strb.w	r5, [sp, #32]
 8014628:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801462c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8014630:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8014634:	b10a      	cbz	r2, 801463a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8014636:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8014638:	b904      	cbnz	r4, 801463c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801463a:	689c      	ldr	r4, [r3, #8]
 801463c:	4b1b      	ldr	r3, [pc, #108]	; (80146ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801463e:	6818      	ldr	r0, [r3, #0]
 8014640:	f7f4 fa54 	bl	8008aec <_ZNK8touchgfx5Texts7getTextEt>
 8014644:	ab07      	add	r3, sp, #28
 8014646:	9001      	str	r0, [sp, #4]
 8014648:	9300      	str	r3, [sp, #0]
 801464a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801464e:	464b      	mov	r3, r9
 8014650:	4620      	mov	r0, r4
 8014652:	f7f4 f9fd 	bl	8008a50 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8014656:	b00d      	add	sp, #52	; 0x34
 8014658:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801465c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014660:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014664:	1ad2      	subs	r2, r2, r3
 8014666:	3201      	adds	r2, #1
 8014668:	e78d      	b.n	8014586 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801466a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801466e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014672:	1ad2      	subs	r2, r2, r3
 8014674:	3201      	adds	r2, #1
 8014676:	2002      	movs	r0, #2
 8014678:	f8ad 3010 	strh.w	r3, [sp, #16]
 801467c:	fb92 f2f0 	sdiv	r2, r2, r0
 8014680:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014684:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014688:	e786      	b.n	8014598 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801468a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801468e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014692:	1ad2      	subs	r2, r2, r3
 8014694:	e7ef      	b.n	8014676 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8014696:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8014698:	e7aa      	b.n	80145f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801469a:	bf00      	nop
 801469c:	20013898 	.word	0x20013898
 80146a0:	20013894 	.word	0x20013894
 80146a4:	2001389c 	.word	0x2001389c
 80146a8:	2001383c 	.word	0x2001383c
 80146ac:	200138a0 	.word	0x200138a0

080146b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80146b0:	b510      	push	{r4, lr}
 80146b2:	2101      	movs	r1, #1
 80146b4:	4c13      	ldr	r4, [pc, #76]	; (8014704 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80146b6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80146ba:	2200      	movs	r2, #0
 80146bc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80146c0:	6004      	str	r4, [r0, #0]
 80146c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80146c6:	4c10      	ldr	r4, [pc, #64]	; (8014708 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80146c8:	8082      	strh	r2, [r0, #4]
 80146ca:	80c2      	strh	r2, [r0, #6]
 80146cc:	8102      	strh	r2, [r0, #8]
 80146ce:	8142      	strh	r2, [r0, #10]
 80146d0:	8182      	strh	r2, [r0, #12]
 80146d2:	81c2      	strh	r2, [r0, #14]
 80146d4:	8202      	strh	r2, [r0, #16]
 80146d6:	8242      	strh	r2, [r0, #18]
 80146d8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80146dc:	61c2      	str	r2, [r0, #28]
 80146de:	8402      	strh	r2, [r0, #32]
 80146e0:	8442      	strh	r2, [r0, #34]	; 0x22
 80146e2:	6282      	str	r2, [r0, #40]	; 0x28
 80146e4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80146e8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80146ea:	8601      	strh	r1, [r0, #48]	; 0x30
 80146ec:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80146f0:	6344      	str	r4, [r0, #52]	; 0x34
 80146f2:	8701      	strh	r1, [r0, #56]	; 0x38
 80146f4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80146f8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80146fc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8014700:	bd10      	pop	{r4, pc}
 8014702:	bf00      	nop
 8014704:	0802ff6c 	.word	0x0802ff6c
 8014708:	0802d760 	.word	0x0802d760

0801470c <_ZN8touchgfx7OutlineD1Ev>:
 801470c:	4770      	bx	lr

0801470e <_ZN8touchgfx7OutlineD0Ev>:
 801470e:	b510      	push	{r4, lr}
 8014710:	2130      	movs	r1, #48	; 0x30
 8014712:	4604      	mov	r4, r0
 8014714:	f016 fc49 	bl	802afaa <_ZdlPvj>
 8014718:	4620      	mov	r0, r4
 801471a:	bd10      	pop	{r4, pc}

0801471c <_ZN8touchgfx7Outline5resetEv>:
 801471c:	b510      	push	{r4, lr}
 801471e:	4604      	mov	r4, r0
 8014720:	f000 fe96 	bl	8015450 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8014724:	60e0      	str	r0, [r4, #12]
 8014726:	f000 fe99 	bl	801545c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801472a:	68e3      	ldr	r3, [r4, #12]
 801472c:	6123      	str	r3, [r4, #16]
 801472e:	08c0      	lsrs	r0, r0, #3
 8014730:	2200      	movs	r2, #0
 8014732:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8014736:	3801      	subs	r0, #1
 8014738:	6060      	str	r0, [r4, #4]
 801473a:	60a2      	str	r2, [r4, #8]
 801473c:	8019      	strh	r1, [r3, #0]
 801473e:	8059      	strh	r1, [r3, #2]
 8014740:	809a      	strh	r2, [r3, #4]
 8014742:	80da      	strh	r2, [r3, #6]
 8014744:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014746:	f023 0301 	bic.w	r3, r3, #1
 801474a:	f043 0302 	orr.w	r3, r3, #2
 801474e:	6263      	str	r3, [r4, #36]	; 0x24
 8014750:	bd10      	pop	{r4, pc}
	...

08014754 <_ZN8touchgfx7OutlineC1Ev>:
 8014754:	b510      	push	{r4, lr}
 8014756:	4b0a      	ldr	r3, [pc, #40]	; (8014780 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8014758:	6003      	str	r3, [r0, #0]
 801475a:	2300      	movs	r3, #0
 801475c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8014760:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8014764:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8014768:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801476c:	6243      	str	r3, [r0, #36]	; 0x24
 801476e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8014772:	4604      	mov	r4, r0
 8014774:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8014778:	f7ff ffd0 	bl	801471c <_ZN8touchgfx7Outline5resetEv>
 801477c:	4620      	mov	r0, r4
 801477e:	bd10      	pop	{r4, pc}
 8014780:	0802ffe0 	.word	0x0802ffe0

08014784 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014788:	b093      	sub	sp, #76	; 0x4c
 801478a:	1156      	asrs	r6, r2, #5
 801478c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801478e:	9305      	str	r3, [sp, #20]
 8014790:	f004 051f 	and.w	r5, r4, #31
 8014794:	1153      	asrs	r3, r2, #5
 8014796:	9504      	str	r5, [sp, #16]
 8014798:	1165      	asrs	r5, r4, #5
 801479a:	9303      	str	r3, [sp, #12]
 801479c:	42ae      	cmp	r6, r5
 801479e:	ea4f 1364 	mov.w	r3, r4, asr #5
 80147a2:	9306      	str	r3, [sp, #24]
 80147a4:	f002 031f 	and.w	r3, r2, #31
 80147a8:	f040 80f8 	bne.w	801499c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80147ac:	9c04      	ldr	r4, [sp, #16]
 80147ae:	9a05      	ldr	r2, [sp, #20]
 80147b0:	42a3      	cmp	r3, r4
 80147b2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80147b6:	6902      	ldr	r2, [r0, #16]
 80147b8:	d125      	bne.n	8014806 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80147ba:	f9b2 3000 	ldrsh.w	r3, [r2]
 80147be:	459e      	cmp	lr, r3
 80147c0:	d103      	bne.n	80147ca <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80147c2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80147c6:	429e      	cmp	r6, r3
 80147c8:	d035      	beq.n	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80147ca:	88d1      	ldrh	r1, [r2, #6]
 80147cc:	8893      	ldrh	r3, [r2, #4]
 80147ce:	430b      	orrs	r3, r1
 80147d0:	d010      	beq.n	80147f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80147d2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80147d6:	2b00      	cmp	r3, #0
 80147d8:	db0c      	blt.n	80147f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80147da:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80147dc:	428b      	cmp	r3, r1
 80147de:	da09      	bge.n	80147f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80147e0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80147e4:	428b      	cmp	r3, r1
 80147e6:	bf38      	it	cc
 80147e8:	3208      	addcc	r2, #8
 80147ea:	f103 0301 	add.w	r3, r3, #1
 80147ee:	bf38      	it	cc
 80147f0:	6102      	strcc	r2, [r0, #16]
 80147f2:	6083      	str	r3, [r0, #8]
 80147f4:	6903      	ldr	r3, [r0, #16]
 80147f6:	9a03      	ldr	r2, [sp, #12]
 80147f8:	f8a3 e000 	strh.w	lr, [r3]
 80147fc:	805a      	strh	r2, [r3, #2]
 80147fe:	2200      	movs	r2, #0
 8014800:	809a      	strh	r2, [r3, #4]
 8014802:	80da      	strh	r2, [r3, #6]
 8014804:	e017      	b.n	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014806:	9c05      	ldr	r4, [sp, #20]
 8014808:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801480c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014810:	f004 041f 	and.w	r4, r4, #31
 8014814:	114e      	asrs	r6, r1, #5
 8014816:	9402      	str	r4, [sp, #8]
 8014818:	9c04      	ldr	r4, [sp, #16]
 801481a:	4576      	cmp	r6, lr
 801481c:	f001 0c1f 	and.w	ip, r1, #31
 8014820:	eba4 0403 	sub.w	r4, r4, r3
 8014824:	d10a      	bne.n	801483c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8014826:	9b02      	ldr	r3, [sp, #8]
 8014828:	449c      	add	ip, r3
 801482a:	44a0      	add	r8, r4
 801482c:	fb04 a40c 	mla	r4, r4, ip, sl
 8014830:	f8a2 8004 	strh.w	r8, [r2, #4]
 8014834:	80d4      	strh	r4, [r2, #6]
 8014836:	b013      	add	sp, #76	; 0x4c
 8014838:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801483c:	9d05      	ldr	r5, [sp, #20]
 801483e:	1a69      	subs	r1, r5, r1
 8014840:	bf5b      	ittet	pl
 8014842:	f1cc 0520 	rsbpl	r5, ip, #32
 8014846:	436c      	mulpl	r4, r5
 8014848:	2500      	movmi	r5, #0
 801484a:	2520      	movpl	r5, #32
 801484c:	bf44      	itt	mi
 801484e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014852:	4249      	negmi	r1, r1
 8014854:	9501      	str	r5, [sp, #4]
 8014856:	9f01      	ldr	r7, [sp, #4]
 8014858:	fb94 f5f1 	sdiv	r5, r4, r1
 801485c:	fb01 4415 	mls	r4, r1, r5, r4
 8014860:	bf54      	ite	pl
 8014862:	f04f 0901 	movpl.w	r9, #1
 8014866:	f04f 39ff 	movmi.w	r9, #4294967295
 801486a:	2c00      	cmp	r4, #0
 801486c:	bfb8      	it	lt
 801486e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014872:	44bc      	add	ip, r7
 8014874:	44a8      	add	r8, r5
 8014876:	fb05 ac0c 	mla	ip, r5, ip, sl
 801487a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801487e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014882:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014886:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801488a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801488e:	bfb8      	it	lt
 8014890:	1864      	addlt	r4, r4, r1
 8014892:	ea58 0202 	orrs.w	r2, r8, r2
 8014896:	444e      	add	r6, r9
 8014898:	d011      	beq.n	80148be <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801489a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801489e:	f1b8 0f00 	cmp.w	r8, #0
 80148a2:	db0c      	blt.n	80148be <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80148a4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80148a6:	4590      	cmp	r8, r2
 80148a8:	da09      	bge.n	80148be <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80148aa:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80148ae:	4590      	cmp	r8, r2
 80148b0:	bf3c      	itt	cc
 80148b2:	f10c 0208 	addcc.w	r2, ip, #8
 80148b6:	6102      	strcc	r2, [r0, #16]
 80148b8:	f108 0201 	add.w	r2, r8, #1
 80148bc:	6082      	str	r2, [r0, #8]
 80148be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80148c2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80148c6:	f8ac 6000 	strh.w	r6, [ip]
 80148ca:	2700      	movs	r7, #0
 80148cc:	45b6      	cmp	lr, r6
 80148ce:	f8ac 2002 	strh.w	r2, [ip, #2]
 80148d2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80148d6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80148da:	442b      	add	r3, r5
 80148dc:	d04d      	beq.n	801497a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80148de:	9f04      	ldr	r7, [sp, #16]
 80148e0:	1aff      	subs	r7, r7, r3
 80148e2:	443d      	add	r5, r7
 80148e4:	016d      	lsls	r5, r5, #5
 80148e6:	fb95 f8f1 	sdiv	r8, r5, r1
 80148ea:	fb01 5518 	mls	r5, r1, r8, r5
 80148ee:	2d00      	cmp	r5, #0
 80148f0:	bfb8      	it	lt
 80148f2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80148f6:	f108 0701 	add.w	r7, r8, #1
 80148fa:	bfb8      	it	lt
 80148fc:	186d      	addlt	r5, r5, r1
 80148fe:	1a64      	subs	r4, r4, r1
 8014900:	9703      	str	r7, [sp, #12]
 8014902:	f04f 0a00 	mov.w	sl, #0
 8014906:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801490a:	1964      	adds	r4, r4, r5
 801490c:	bf58      	it	pl
 801490e:	9f03      	ldrpl	r7, [sp, #12]
 8014910:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014914:	bf48      	it	mi
 8014916:	4647      	movmi	r7, r8
 8014918:	44bb      	add	fp, r7
 801491a:	f8ac b004 	strh.w	fp, [ip, #4]
 801491e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014922:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014926:	f8ac b006 	strh.w	fp, [ip, #6]
 801492a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801492e:	443b      	add	r3, r7
 8014930:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014934:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014938:	bf58      	it	pl
 801493a:	1a64      	subpl	r4, r4, r1
 801493c:	ea5b 0707 	orrs.w	r7, fp, r7
 8014940:	444e      	add	r6, r9
 8014942:	d011      	beq.n	8014968 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014944:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014948:	f1bb 0f00 	cmp.w	fp, #0
 801494c:	db0c      	blt.n	8014968 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801494e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014950:	45bb      	cmp	fp, r7
 8014952:	da09      	bge.n	8014968 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8014954:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014958:	45bb      	cmp	fp, r7
 801495a:	bf3c      	itt	cc
 801495c:	f10c 0708 	addcc.w	r7, ip, #8
 8014960:	6107      	strcc	r7, [r0, #16]
 8014962:	f10b 0701 	add.w	r7, fp, #1
 8014966:	6087      	str	r7, [r0, #8]
 8014968:	6907      	ldr	r7, [r0, #16]
 801496a:	45b6      	cmp	lr, r6
 801496c:	803e      	strh	r6, [r7, #0]
 801496e:	807a      	strh	r2, [r7, #2]
 8014970:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014974:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014978:	d1c5      	bne.n	8014906 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801497a:	9a04      	ldr	r2, [sp, #16]
 801497c:	1ad3      	subs	r3, r2, r3
 801497e:	6902      	ldr	r2, [r0, #16]
 8014980:	8891      	ldrh	r1, [r2, #4]
 8014982:	88d6      	ldrh	r6, [r2, #6]
 8014984:	4419      	add	r1, r3
 8014986:	8091      	strh	r1, [r2, #4]
 8014988:	9902      	ldr	r1, [sp, #8]
 801498a:	f101 0c20 	add.w	ip, r1, #32
 801498e:	9901      	ldr	r1, [sp, #4]
 8014990:	ebac 0c01 	sub.w	ip, ip, r1
 8014994:	fb03 630c 	mla	r3, r3, ip, r6
 8014998:	80d3      	strh	r3, [r2, #6]
 801499a:	e74c      	b.n	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801499c:	9d05      	ldr	r5, [sp, #20]
 801499e:	1aa2      	subs	r2, r4, r2
 80149a0:	eba5 0501 	sub.w	r5, r5, r1
 80149a4:	9508      	str	r5, [sp, #32]
 80149a6:	9202      	str	r2, [sp, #8]
 80149a8:	f140 8128 	bpl.w	8014bfc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80149ac:	9a03      	ldr	r2, [sp, #12]
 80149ae:	2a00      	cmp	r2, #0
 80149b0:	f6ff af41 	blt.w	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80149b4:	9a02      	ldr	r2, [sp, #8]
 80149b6:	4252      	negs	r2, r2
 80149b8:	9202      	str	r2, [sp, #8]
 80149ba:	9a06      	ldr	r2, [sp, #24]
 80149bc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80149c0:	f04f 34ff 	mov.w	r4, #4294967295
 80149c4:	9206      	str	r2, [sp, #24]
 80149c6:	462a      	mov	r2, r5
 80149c8:	940b      	str	r4, [sp, #44]	; 0x2c
 80149ca:	435a      	muls	r2, r3
 80149cc:	2400      	movs	r4, #0
 80149ce:	9d02      	ldr	r5, [sp, #8]
 80149d0:	9401      	str	r4, [sp, #4]
 80149d2:	9c02      	ldr	r4, [sp, #8]
 80149d4:	fb92 f4f4 	sdiv	r4, r2, r4
 80149d8:	fb05 2214 	mls	r2, r5, r4, r2
 80149dc:	2a00      	cmp	r2, #0
 80149de:	9207      	str	r2, [sp, #28]
 80149e0:	bfbc      	itt	lt
 80149e2:	1952      	addlt	r2, r2, r5
 80149e4:	9207      	strlt	r2, [sp, #28]
 80149e6:	9a01      	ldr	r2, [sp, #4]
 80149e8:	6905      	ldr	r5, [r0, #16]
 80149ea:	bfb8      	it	lt
 80149ec:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80149f0:	eb04 0901 	add.w	r9, r4, r1
 80149f4:	429a      	cmp	r2, r3
 80149f6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80149fa:	f040 8112 	bne.w	8014c22 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80149fe:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014a02:	429e      	cmp	r6, r3
 8014a04:	d104      	bne.n	8014a10 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014a06:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014a0a:	9a03      	ldr	r2, [sp, #12]
 8014a0c:	429a      	cmp	r2, r3
 8014a0e:	d01b      	beq.n	8014a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014a10:	88ea      	ldrh	r2, [r5, #6]
 8014a12:	88ab      	ldrh	r3, [r5, #4]
 8014a14:	4313      	orrs	r3, r2
 8014a16:	d010      	beq.n	8014a3a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014a18:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014a1c:	2a00      	cmp	r2, #0
 8014a1e:	db0c      	blt.n	8014a3a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014a20:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014a22:	429a      	cmp	r2, r3
 8014a24:	da09      	bge.n	8014a3a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014a26:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8014a2a:	429a      	cmp	r2, r3
 8014a2c:	bf38      	it	cc
 8014a2e:	3508      	addcc	r5, #8
 8014a30:	f102 0201 	add.w	r2, r2, #1
 8014a34:	bf38      	it	cc
 8014a36:	6105      	strcc	r5, [r0, #16]
 8014a38:	6082      	str	r2, [r0, #8]
 8014a3a:	6903      	ldr	r3, [r0, #16]
 8014a3c:	9a03      	ldr	r2, [sp, #12]
 8014a3e:	805a      	strh	r2, [r3, #2]
 8014a40:	2200      	movs	r2, #0
 8014a42:	801e      	strh	r6, [r3, #0]
 8014a44:	809a      	strh	r2, [r3, #4]
 8014a46:	80da      	strh	r2, [r3, #6]
 8014a48:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014a4a:	9a03      	ldr	r2, [sp, #12]
 8014a4c:	6901      	ldr	r1, [r0, #16]
 8014a4e:	441a      	add	r2, r3
 8014a50:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014a54:	42b3      	cmp	r3, r6
 8014a56:	d103      	bne.n	8014a60 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8014a58:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014a5c:	429a      	cmp	r2, r3
 8014a5e:	d01a      	beq.n	8014a96 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8014a60:	88cc      	ldrh	r4, [r1, #6]
 8014a62:	888b      	ldrh	r3, [r1, #4]
 8014a64:	4323      	orrs	r3, r4
 8014a66:	d010      	beq.n	8014a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014a68:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014a6c:	2c00      	cmp	r4, #0
 8014a6e:	db0c      	blt.n	8014a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014a70:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014a72:	429c      	cmp	r4, r3
 8014a74:	da09      	bge.n	8014a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014a76:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014a7a:	429c      	cmp	r4, r3
 8014a7c:	bf38      	it	cc
 8014a7e:	3108      	addcc	r1, #8
 8014a80:	f104 0401 	add.w	r4, r4, #1
 8014a84:	bf38      	it	cc
 8014a86:	6101      	strcc	r1, [r0, #16]
 8014a88:	6084      	str	r4, [r0, #8]
 8014a8a:	6903      	ldr	r3, [r0, #16]
 8014a8c:	2100      	movs	r1, #0
 8014a8e:	801e      	strh	r6, [r3, #0]
 8014a90:	805a      	strh	r2, [r3, #2]
 8014a92:	8099      	strh	r1, [r3, #4]
 8014a94:	80d9      	strh	r1, [r3, #6]
 8014a96:	9b06      	ldr	r3, [sp, #24]
 8014a98:	4293      	cmp	r3, r2
 8014a9a:	f000 8082 	beq.w	8014ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8014a9e:	9b08      	ldr	r3, [sp, #32]
 8014aa0:	9c02      	ldr	r4, [sp, #8]
 8014aa2:	9902      	ldr	r1, [sp, #8]
 8014aa4:	015b      	lsls	r3, r3, #5
 8014aa6:	fb93 f1f1 	sdiv	r1, r3, r1
 8014aaa:	fb04 3311 	mls	r3, r4, r1, r3
 8014aae:	2b00      	cmp	r3, #0
 8014ab0:	9103      	str	r1, [sp, #12]
 8014ab2:	9308      	str	r3, [sp, #32]
 8014ab4:	da04      	bge.n	8014ac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014ab6:	1e4b      	subs	r3, r1, #1
 8014ab8:	9303      	str	r3, [sp, #12]
 8014aba:	9b08      	ldr	r3, [sp, #32]
 8014abc:	4423      	add	r3, r4
 8014abe:	9308      	str	r3, [sp, #32]
 8014ac0:	9b07      	ldr	r3, [sp, #28]
 8014ac2:	9902      	ldr	r1, [sp, #8]
 8014ac4:	1a5b      	subs	r3, r3, r1
 8014ac6:	9307      	str	r3, [sp, #28]
 8014ac8:	9b01      	ldr	r3, [sp, #4]
 8014aca:	f1c3 0320 	rsb	r3, r3, #32
 8014ace:	930e      	str	r3, [sp, #56]	; 0x38
 8014ad0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014ad2:	9b01      	ldr	r3, [sp, #4]
 8014ad4:	1a5b      	subs	r3, r3, r1
 8014ad6:	464f      	mov	r7, r9
 8014ad8:	930a      	str	r3, [sp, #40]	; 0x28
 8014ada:	2600      	movs	r6, #0
 8014adc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014ae0:	185b      	adds	r3, r3, r1
 8014ae2:	bf58      	it	pl
 8014ae4:	9902      	ldrpl	r1, [sp, #8]
 8014ae6:	9307      	str	r3, [sp, #28]
 8014ae8:	bf5d      	ittte	pl
 8014aea:	1a5b      	subpl	r3, r3, r1
 8014aec:	9307      	strpl	r3, [sp, #28]
 8014aee:	9b03      	ldrpl	r3, [sp, #12]
 8014af0:	9903      	ldrmi	r1, [sp, #12]
 8014af2:	bf58      	it	pl
 8014af4:	1c59      	addpl	r1, r3, #1
 8014af6:	4489      	add	r9, r1
 8014af8:	2a00      	cmp	r2, #0
 8014afa:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8014afe:	db2e      	blt.n	8014b5e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014b00:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014b02:	4293      	cmp	r3, r2
 8014b04:	dd2b      	ble.n	8014b5e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014b06:	9c01      	ldr	r4, [sp, #4]
 8014b08:	6905      	ldr	r5, [r0, #16]
 8014b0a:	46a0      	mov	r8, r4
 8014b0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014b0e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8014b12:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014b16:	45a0      	cmp	r8, r4
 8014b18:	f040 814f 	bne.w	8014dba <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8014b1c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8014b20:	4551      	cmp	r1, sl
 8014b22:	d103      	bne.n	8014b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8014b24:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014b28:	4291      	cmp	r1, r2
 8014b2a:	d018      	beq.n	8014b5e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014b2c:	ea5c 010e 	orrs.w	r1, ip, lr
 8014b30:	d00f      	beq.n	8014b52 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014b32:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014b36:	2900      	cmp	r1, #0
 8014b38:	db0b      	blt.n	8014b52 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014b3a:	428b      	cmp	r3, r1
 8014b3c:	dd09      	ble.n	8014b52 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8014b3e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8014b42:	4299      	cmp	r1, r3
 8014b44:	bf38      	it	cc
 8014b46:	3508      	addcc	r5, #8
 8014b48:	f101 0101 	add.w	r1, r1, #1
 8014b4c:	bf38      	it	cc
 8014b4e:	6105      	strcc	r5, [r0, #16]
 8014b50:	6081      	str	r1, [r0, #8]
 8014b52:	6903      	ldr	r3, [r0, #16]
 8014b54:	f8a3 a000 	strh.w	sl, [r3]
 8014b58:	805a      	strh	r2, [r3, #2]
 8014b5a:	809e      	strh	r6, [r3, #4]
 8014b5c:	80de      	strh	r6, [r3, #6]
 8014b5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014b60:	6901      	ldr	r1, [r0, #16]
 8014b62:	441a      	add	r2, r3
 8014b64:	88cc      	ldrh	r4, [r1, #6]
 8014b66:	888b      	ldrh	r3, [r1, #4]
 8014b68:	4323      	orrs	r3, r4
 8014b6a:	d010      	beq.n	8014b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014b6c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014b70:	2c00      	cmp	r4, #0
 8014b72:	db0c      	blt.n	8014b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014b74:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014b76:	429c      	cmp	r4, r3
 8014b78:	da09      	bge.n	8014b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014b7a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8014b7e:	429c      	cmp	r4, r3
 8014b80:	bf38      	it	cc
 8014b82:	3108      	addcc	r1, #8
 8014b84:	f104 0401 	add.w	r4, r4, #1
 8014b88:	bf38      	it	cc
 8014b8a:	6101      	strcc	r1, [r0, #16]
 8014b8c:	6084      	str	r4, [r0, #8]
 8014b8e:	6903      	ldr	r3, [r0, #16]
 8014b90:	f8a3 a000 	strh.w	sl, [r3]
 8014b94:	805a      	strh	r2, [r3, #2]
 8014b96:	809e      	strh	r6, [r3, #4]
 8014b98:	80de      	strh	r6, [r3, #6]
 8014b9a:	9b06      	ldr	r3, [sp, #24]
 8014b9c:	4293      	cmp	r3, r2
 8014b9e:	464f      	mov	r7, r9
 8014ba0:	d19c      	bne.n	8014adc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014ba2:	9b01      	ldr	r3, [sp, #4]
 8014ba4:	6907      	ldr	r7, [r0, #16]
 8014ba6:	f1c3 0620 	rsb	r6, r3, #32
 8014baa:	9b05      	ldr	r3, [sp, #20]
 8014bac:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014bb0:	9b04      	ldr	r3, [sp, #16]
 8014bb2:	429e      	cmp	r6, r3
 8014bb4:	f040 81cc 	bne.w	8014f50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014bb8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014bbc:	459e      	cmp	lr, r3
 8014bbe:	d104      	bne.n	8014bca <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014bc0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014bc4:	429a      	cmp	r2, r3
 8014bc6:	f43f ae36 	beq.w	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014bca:	88f9      	ldrh	r1, [r7, #6]
 8014bcc:	88bb      	ldrh	r3, [r7, #4]
 8014bce:	430b      	orrs	r3, r1
 8014bd0:	d010      	beq.n	8014bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014bd2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014bd6:	2b00      	cmp	r3, #0
 8014bd8:	db0c      	blt.n	8014bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014bda:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014bdc:	428b      	cmp	r3, r1
 8014bde:	da09      	bge.n	8014bf4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014be0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014be4:	428b      	cmp	r3, r1
 8014be6:	bf38      	it	cc
 8014be8:	3708      	addcc	r7, #8
 8014bea:	f103 0301 	add.w	r3, r3, #1
 8014bee:	bf38      	it	cc
 8014bf0:	6107      	strcc	r7, [r0, #16]
 8014bf2:	6083      	str	r3, [r0, #8]
 8014bf4:	6903      	ldr	r3, [r0, #16]
 8014bf6:	f8a3 e000 	strh.w	lr, [r3]
 8014bfa:	e5ff      	b.n	80147fc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8014bfc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014bfe:	9c03      	ldr	r4, [sp, #12]
 8014c00:	42a2      	cmp	r2, r4
 8014c02:	f6ff ae18 	blt.w	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014c06:	9c06      	ldr	r4, [sp, #24]
 8014c08:	42a2      	cmp	r2, r4
 8014c0a:	bfb8      	it	lt
 8014c0c:	3201      	addlt	r2, #1
 8014c0e:	9c08      	ldr	r4, [sp, #32]
 8014c10:	bfb8      	it	lt
 8014c12:	9206      	strlt	r2, [sp, #24]
 8014c14:	f1c3 0220 	rsb	r2, r3, #32
 8014c18:	4362      	muls	r2, r4
 8014c1a:	2401      	movs	r4, #1
 8014c1c:	940b      	str	r4, [sp, #44]	; 0x2c
 8014c1e:	2420      	movs	r4, #32
 8014c20:	e6d5      	b.n	80149ce <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8014c22:	f009 021f 	and.w	r2, r9, #31
 8014c26:	ea4f 1861 	mov.w	r8, r1, asr #5
 8014c2a:	920c      	str	r2, [sp, #48]	; 0x30
 8014c2c:	9a01      	ldr	r2, [sp, #4]
 8014c2e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014c32:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8014c36:	45b0      	cmp	r8, r6
 8014c38:	f001 011f 	and.w	r1, r1, #31
 8014c3c:	eba2 0203 	sub.w	r2, r2, r3
 8014c40:	d108      	bne.n	8014c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8014c42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c44:	4419      	add	r1, r3
 8014c46:	4496      	add	lr, r2
 8014c48:	fb02 a101 	mla	r1, r2, r1, sl
 8014c4c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014c50:	80e9      	strh	r1, [r5, #6]
 8014c52:	e6f9      	b.n	8014a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014c54:	2c00      	cmp	r4, #0
 8014c56:	f2c0 80a9 	blt.w	8014dac <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8014c5a:	2701      	movs	r7, #1
 8014c5c:	f1c1 0c20 	rsb	ip, r1, #32
 8014c60:	970a      	str	r7, [sp, #40]	; 0x28
 8014c62:	fb02 f20c 	mul.w	r2, r2, ip
 8014c66:	2720      	movs	r7, #32
 8014c68:	9709      	str	r7, [sp, #36]	; 0x24
 8014c6a:	fb92 fcf4 	sdiv	ip, r2, r4
 8014c6e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014c70:	fb04 221c 	mls	r2, r4, ip, r2
 8014c74:	2a00      	cmp	r2, #0
 8014c76:	bfb8      	it	lt
 8014c78:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014c7c:	4439      	add	r1, r7
 8014c7e:	fb0c a101 	mla	r1, ip, r1, sl
 8014c82:	80e9      	strh	r1, [r5, #6]
 8014c84:	44e6      	add	lr, ip
 8014c86:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014c88:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014c8c:	eb08 0501 	add.w	r5, r8, r1
 8014c90:	6901      	ldr	r1, [r0, #16]
 8014c92:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014c96:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014c9a:	bfb8      	it	lt
 8014c9c:	1912      	addlt	r2, r2, r4
 8014c9e:	ea58 070e 	orrs.w	r7, r8, lr
 8014ca2:	d010      	beq.n	8014cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014ca4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014ca8:	f1be 0f00 	cmp.w	lr, #0
 8014cac:	db0b      	blt.n	8014cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014cae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014cb0:	45be      	cmp	lr, r7
 8014cb2:	da08      	bge.n	8014cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014cb4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014cb8:	45be      	cmp	lr, r7
 8014cba:	bf3c      	itt	cc
 8014cbc:	3108      	addcc	r1, #8
 8014cbe:	6101      	strcc	r1, [r0, #16]
 8014cc0:	f10e 0101 	add.w	r1, lr, #1
 8014cc4:	6081      	str	r1, [r0, #8]
 8014cc6:	6901      	ldr	r1, [r0, #16]
 8014cc8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014ccc:	800d      	strh	r5, [r1, #0]
 8014cce:	f04f 0e00 	mov.w	lr, #0
 8014cd2:	42ae      	cmp	r6, r5
 8014cd4:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014cd8:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014cdc:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014ce0:	4463      	add	r3, ip
 8014ce2:	d054      	beq.n	8014d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014ce4:	9901      	ldr	r1, [sp, #4]
 8014ce6:	1ac9      	subs	r1, r1, r3
 8014ce8:	4461      	add	r1, ip
 8014cea:	0149      	lsls	r1, r1, #5
 8014cec:	fb91 fef4 	sdiv	lr, r1, r4
 8014cf0:	fb04 111e 	mls	r1, r4, lr, r1
 8014cf4:	2900      	cmp	r1, #0
 8014cf6:	bfb8      	it	lt
 8014cf8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014cfc:	f10e 0701 	add.w	r7, lr, #1
 8014d00:	bfb8      	it	lt
 8014d02:	1909      	addlt	r1, r1, r4
 8014d04:	1b12      	subs	r2, r2, r4
 8014d06:	970d      	str	r7, [sp, #52]	; 0x34
 8014d08:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8014d0c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8014d0e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014d12:	1852      	adds	r2, r2, r1
 8014d14:	bf54      	ite	pl
 8014d16:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8014d1a:	46f4      	movmi	ip, lr
 8014d1c:	44e3      	add	fp, ip
 8014d1e:	f8aa b004 	strh.w	fp, [sl, #4]
 8014d22:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014d26:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8014d2a:	f8aa b006 	strh.w	fp, [sl, #6]
 8014d2e:	4463      	add	r3, ip
 8014d30:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014d34:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014d38:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014d3c:	bf58      	it	pl
 8014d3e:	1b12      	subpl	r2, r2, r4
 8014d40:	443d      	add	r5, r7
 8014d42:	ea5b 070a 	orrs.w	r7, fp, sl
 8014d46:	d014      	beq.n	8014d72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014d48:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014d4c:	f1ba 0f00 	cmp.w	sl, #0
 8014d50:	db0f      	blt.n	8014d72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014d52:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014d54:	45ba      	cmp	sl, r7
 8014d56:	da0c      	bge.n	8014d72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014d58:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014d5c:	45ba      	cmp	sl, r7
 8014d5e:	bf38      	it	cc
 8014d60:	f10c 0c08 	addcc.w	ip, ip, #8
 8014d64:	f10a 0a01 	add.w	sl, sl, #1
 8014d68:	bf38      	it	cc
 8014d6a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014d6e:	f8c0 a008 	str.w	sl, [r0, #8]
 8014d72:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014d76:	f04f 0700 	mov.w	r7, #0
 8014d7a:	42ae      	cmp	r6, r5
 8014d7c:	f8ac 5000 	strh.w	r5, [ip]
 8014d80:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014d84:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014d88:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014d8c:	d1bc      	bne.n	8014d08 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014d8e:	6904      	ldr	r4, [r0, #16]
 8014d90:	9a01      	ldr	r2, [sp, #4]
 8014d92:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014d94:	1ad3      	subs	r3, r2, r3
 8014d96:	88a2      	ldrh	r2, [r4, #4]
 8014d98:	441a      	add	r2, r3
 8014d9a:	80a2      	strh	r2, [r4, #4]
 8014d9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014d9e:	3120      	adds	r1, #32
 8014da0:	1a89      	subs	r1, r1, r2
 8014da2:	88e2      	ldrh	r2, [r4, #6]
 8014da4:	fb03 2301 	mla	r3, r3, r1, r2
 8014da8:	80e3      	strh	r3, [r4, #6]
 8014daa:	e64d      	b.n	8014a48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014dac:	f04f 37ff 	mov.w	r7, #4294967295
 8014db0:	970a      	str	r7, [sp, #40]	; 0x28
 8014db2:	434a      	muls	r2, r1
 8014db4:	4264      	negs	r4, r4
 8014db6:	2700      	movs	r7, #0
 8014db8:	e756      	b.n	8014c68 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8014dba:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014dbe:	f009 031f 	and.w	r3, r9, #31
 8014dc2:	45d0      	cmp	r8, sl
 8014dc4:	f007 071f 	and.w	r7, r7, #31
 8014dc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8014dca:	fa1f fc8c 	uxth.w	ip, ip
 8014dce:	fa1f fe8e 	uxth.w	lr, lr
 8014dd2:	d10a      	bne.n	8014dea <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014dd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014dd6:	449c      	add	ip, r3
 8014dd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014dda:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014dde:	441f      	add	r7, r3
 8014de0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014de2:	fb03 e707 	mla	r7, r3, r7, lr
 8014de6:	80ef      	strh	r7, [r5, #6]
 8014de8:	e6b9      	b.n	8014b5e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014dea:	2900      	cmp	r1, #0
 8014dec:	f2c0 80a8 	blt.w	8014f40 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014df0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014df2:	f1c7 0320 	rsb	r3, r7, #32
 8014df6:	4363      	muls	r3, r4
 8014df8:	2401      	movs	r4, #1
 8014dfa:	940d      	str	r4, [sp, #52]	; 0x34
 8014dfc:	2420      	movs	r4, #32
 8014dfe:	940c      	str	r4, [sp, #48]	; 0x30
 8014e00:	fb93 f4f1 	sdiv	r4, r3, r1
 8014e04:	fb01 3b14 	mls	fp, r1, r4, r3
 8014e08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e0a:	f1bb 0f00 	cmp.w	fp, #0
 8014e0e:	bfb8      	it	lt
 8014e10:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014e14:	441f      	add	r7, r3
 8014e16:	fb04 e707 	mla	r7, r4, r7, lr
 8014e1a:	44a4      	add	ip, r4
 8014e1c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014e20:	80ef      	strh	r7, [r5, #6]
 8014e22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014e26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014e28:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8014e2c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014e30:	bfb8      	it	lt
 8014e32:	448b      	addlt	fp, r1
 8014e34:	eb08 0503 	add.w	r5, r8, r3
 8014e38:	ea5e 0307 	orrs.w	r3, lr, r7
 8014e3c:	d011      	beq.n	8014e62 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014e3e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014e42:	f1be 0f00 	cmp.w	lr, #0
 8014e46:	db0c      	blt.n	8014e62 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014e48:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014e4a:	45be      	cmp	lr, r7
 8014e4c:	da09      	bge.n	8014e62 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014e4e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014e52:	45be      	cmp	lr, r7
 8014e54:	bf3c      	itt	cc
 8014e56:	f10c 0708 	addcc.w	r7, ip, #8
 8014e5a:	6107      	strcc	r7, [r0, #16]
 8014e5c:	f10e 0701 	add.w	r7, lr, #1
 8014e60:	6087      	str	r7, [r0, #8]
 8014e62:	6907      	ldr	r7, [r0, #16]
 8014e64:	b213      	sxth	r3, r2
 8014e66:	9310      	str	r3, [sp, #64]	; 0x40
 8014e68:	807b      	strh	r3, [r7, #2]
 8014e6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e6c:	803d      	strh	r5, [r7, #0]
 8014e6e:	4555      	cmp	r5, sl
 8014e70:	80be      	strh	r6, [r7, #4]
 8014e72:	80fe      	strh	r6, [r7, #6]
 8014e74:	eb04 0c03 	add.w	ip, r4, r3
 8014e78:	d051      	beq.n	8014f1e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8014e7a:	9b01      	ldr	r3, [sp, #4]
 8014e7c:	eba3 070c 	sub.w	r7, r3, ip
 8014e80:	443c      	add	r4, r7
 8014e82:	0164      	lsls	r4, r4, #5
 8014e84:	fb94 f8f1 	sdiv	r8, r4, r1
 8014e88:	fb01 4418 	mls	r4, r1, r8, r4
 8014e8c:	2c00      	cmp	r4, #0
 8014e8e:	bfb8      	it	lt
 8014e90:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014e94:	ebab 0301 	sub.w	r3, fp, r1
 8014e98:	f108 0701 	add.w	r7, r8, #1
 8014e9c:	bfb8      	it	lt
 8014e9e:	1864      	addlt	r4, r4, r1
 8014ea0:	9309      	str	r3, [sp, #36]	; 0x24
 8014ea2:	9711      	str	r7, [sp, #68]	; 0x44
 8014ea4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ea6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014eaa:	191b      	adds	r3, r3, r4
 8014eac:	bf58      	it	pl
 8014eae:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014eb0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014eb4:	9309      	str	r3, [sp, #36]	; 0x24
 8014eb6:	bf48      	it	mi
 8014eb8:	4647      	movmi	r7, r8
 8014eba:	44bb      	add	fp, r7
 8014ebc:	f8ae b004 	strh.w	fp, [lr, #4]
 8014ec0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014ec4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014ec8:	f8ae b006 	strh.w	fp, [lr, #6]
 8014ecc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014ed0:	44bc      	add	ip, r7
 8014ed2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014ed4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014ed8:	443d      	add	r5, r7
 8014eda:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014ede:	bf5c      	itt	pl
 8014ee0:	1a5b      	subpl	r3, r3, r1
 8014ee2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014ee4:	ea5b 0307 	orrs.w	r3, fp, r7
 8014ee8:	d011      	beq.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014eea:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014eee:	f1bb 0f00 	cmp.w	fp, #0
 8014ef2:	db0c      	blt.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014ef4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014ef6:	45bb      	cmp	fp, r7
 8014ef8:	da09      	bge.n	8014f0e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014efa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014efe:	45bb      	cmp	fp, r7
 8014f00:	bf3c      	itt	cc
 8014f02:	f10e 0708 	addcc.w	r7, lr, #8
 8014f06:	6107      	strcc	r7, [r0, #16]
 8014f08:	f10b 0701 	add.w	r7, fp, #1
 8014f0c:	6087      	str	r7, [r0, #8]
 8014f0e:	6907      	ldr	r7, [r0, #16]
 8014f10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f12:	803d      	strh	r5, [r7, #0]
 8014f14:	4555      	cmp	r5, sl
 8014f16:	807b      	strh	r3, [r7, #2]
 8014f18:	80be      	strh	r6, [r7, #4]
 8014f1a:	80fe      	strh	r6, [r7, #6]
 8014f1c:	d1c2      	bne.n	8014ea4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014f1e:	9b01      	ldr	r3, [sp, #4]
 8014f20:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014f22:	eba3 0c0c 	sub.w	ip, r3, ip
 8014f26:	6903      	ldr	r3, [r0, #16]
 8014f28:	8899      	ldrh	r1, [r3, #4]
 8014f2a:	4461      	add	r1, ip
 8014f2c:	8099      	strh	r1, [r3, #4]
 8014f2e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014f30:	3720      	adds	r7, #32
 8014f32:	1a7f      	subs	r7, r7, r1
 8014f34:	88d9      	ldrh	r1, [r3, #6]
 8014f36:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014f3a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014f3e:	e60e      	b.n	8014b5e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014f40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f42:	f04f 34ff 	mov.w	r4, #4294967295
 8014f46:	940d      	str	r4, [sp, #52]	; 0x34
 8014f48:	437b      	muls	r3, r7
 8014f4a:	4249      	negs	r1, r1
 8014f4c:	2400      	movs	r4, #0
 8014f4e:	e756      	b.n	8014dfe <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014f50:	9905      	ldr	r1, [sp, #20]
 8014f52:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014f56:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014f5a:	f001 011f 	and.w	r1, r1, #31
 8014f5e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014f62:	9102      	str	r1, [sp, #8]
 8014f64:	9904      	ldr	r1, [sp, #16]
 8014f66:	45f3      	cmp	fp, lr
 8014f68:	f009 0c1f 	and.w	ip, r9, #31
 8014f6c:	eba1 0406 	sub.w	r4, r1, r6
 8014f70:	d108      	bne.n	8014f84 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014f72:	9b02      	ldr	r3, [sp, #8]
 8014f74:	449c      	add	ip, r3
 8014f76:	44a0      	add	r8, r4
 8014f78:	fb04 a40c 	mla	r4, r4, ip, sl
 8014f7c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014f80:	80fc      	strh	r4, [r7, #6]
 8014f82:	e458      	b.n	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014f84:	9905      	ldr	r1, [sp, #20]
 8014f86:	ebb1 0109 	subs.w	r1, r1, r9
 8014f8a:	bf5b      	ittet	pl
 8014f8c:	f1cc 0520 	rsbpl	r5, ip, #32
 8014f90:	436c      	mulpl	r4, r5
 8014f92:	2500      	movmi	r5, #0
 8014f94:	2520      	movpl	r5, #32
 8014f96:	bf44      	itt	mi
 8014f98:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014f9c:	4249      	negmi	r1, r1
 8014f9e:	9501      	str	r5, [sp, #4]
 8014fa0:	9b01      	ldr	r3, [sp, #4]
 8014fa2:	fb94 f5f1 	sdiv	r5, r4, r1
 8014fa6:	fb01 4415 	mls	r4, r1, r5, r4
 8014faa:	bf54      	ite	pl
 8014fac:	f04f 0901 	movpl.w	r9, #1
 8014fb0:	f04f 39ff 	movmi.w	r9, #4294967295
 8014fb4:	2c00      	cmp	r4, #0
 8014fb6:	bfb8      	it	lt
 8014fb8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014fbc:	449c      	add	ip, r3
 8014fbe:	44a8      	add	r8, r5
 8014fc0:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014fc4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014fc8:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014fcc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014fd0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014fd4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014fd8:	bfb8      	it	lt
 8014fda:	1864      	addlt	r4, r4, r1
 8014fdc:	ea58 0707 	orrs.w	r7, r8, r7
 8014fe0:	eb0b 0309 	add.w	r3, fp, r9
 8014fe4:	d011      	beq.n	801500a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014fe6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014fea:	f1b8 0f00 	cmp.w	r8, #0
 8014fee:	db0c      	blt.n	801500a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014ff0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014ff2:	45b8      	cmp	r8, r7
 8014ff4:	da09      	bge.n	801500a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014ff6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014ffa:	45b8      	cmp	r8, r7
 8014ffc:	bf3c      	itt	cc
 8014ffe:	f10c 0708 	addcc.w	r7, ip, #8
 8015002:	6107      	strcc	r7, [r0, #16]
 8015004:	f108 0701 	add.w	r7, r8, #1
 8015008:	6087      	str	r7, [r0, #8]
 801500a:	6907      	ldr	r7, [r0, #16]
 801500c:	f04f 0c00 	mov.w	ip, #0
 8015010:	b212      	sxth	r2, r2
 8015012:	459e      	cmp	lr, r3
 8015014:	803b      	strh	r3, [r7, #0]
 8015016:	807a      	strh	r2, [r7, #2]
 8015018:	f8a7 c004 	strh.w	ip, [r7, #4]
 801501c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8015020:	442e      	add	r6, r5
 8015022:	d04d      	beq.n	80150c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8015024:	9f04      	ldr	r7, [sp, #16]
 8015026:	1bbf      	subs	r7, r7, r6
 8015028:	443d      	add	r5, r7
 801502a:	016d      	lsls	r5, r5, #5
 801502c:	fb95 f8f1 	sdiv	r8, r5, r1
 8015030:	fb01 5518 	mls	r5, r1, r8, r5
 8015034:	4565      	cmp	r5, ip
 8015036:	bfb8      	it	lt
 8015038:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801503c:	f108 0701 	add.w	r7, r8, #1
 8015040:	bfb8      	it	lt
 8015042:	186d      	addlt	r5, r5, r1
 8015044:	1a64      	subs	r4, r4, r1
 8015046:	9703      	str	r7, [sp, #12]
 8015048:	f04f 0a00 	mov.w	sl, #0
 801504c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015050:	1964      	adds	r4, r4, r5
 8015052:	bf58      	it	pl
 8015054:	9f03      	ldrpl	r7, [sp, #12]
 8015056:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801505a:	bf48      	it	mi
 801505c:	4647      	movmi	r7, r8
 801505e:	44bb      	add	fp, r7
 8015060:	f8ac b004 	strh.w	fp, [ip, #4]
 8015064:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8015068:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801506c:	f8ac b006 	strh.w	fp, [ip, #6]
 8015070:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8015074:	443e      	add	r6, r7
 8015076:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801507a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801507e:	bf58      	it	pl
 8015080:	1a64      	subpl	r4, r4, r1
 8015082:	ea5b 0707 	orrs.w	r7, fp, r7
 8015086:	444b      	add	r3, r9
 8015088:	d011      	beq.n	80150ae <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801508a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801508e:	f1bb 0f00 	cmp.w	fp, #0
 8015092:	db0c      	blt.n	80150ae <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8015094:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8015096:	45bb      	cmp	fp, r7
 8015098:	da09      	bge.n	80150ae <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801509a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801509e:	45bb      	cmp	fp, r7
 80150a0:	bf3c      	itt	cc
 80150a2:	f10c 0708 	addcc.w	r7, ip, #8
 80150a6:	6107      	strcc	r7, [r0, #16]
 80150a8:	f10b 0701 	add.w	r7, fp, #1
 80150ac:	6087      	str	r7, [r0, #8]
 80150ae:	6907      	ldr	r7, [r0, #16]
 80150b0:	459e      	cmp	lr, r3
 80150b2:	803b      	strh	r3, [r7, #0]
 80150b4:	807a      	strh	r2, [r7, #2]
 80150b6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80150ba:	f8a7 a006 	strh.w	sl, [r7, #6]
 80150be:	d1c5      	bne.n	801504c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 80150c0:	9b04      	ldr	r3, [sp, #16]
 80150c2:	1b9e      	subs	r6, r3, r6
 80150c4:	6903      	ldr	r3, [r0, #16]
 80150c6:	889a      	ldrh	r2, [r3, #4]
 80150c8:	4432      	add	r2, r6
 80150ca:	809a      	strh	r2, [r3, #4]
 80150cc:	9a02      	ldr	r2, [sp, #8]
 80150ce:	f102 0c20 	add.w	ip, r2, #32
 80150d2:	9a01      	ldr	r2, [sp, #4]
 80150d4:	ebac 0c02 	sub.w	ip, ip, r2
 80150d8:	88da      	ldrh	r2, [r3, #6]
 80150da:	fb06 260c 	mla	r6, r6, ip, r2
 80150de:	80de      	strh	r6, [r3, #6]
 80150e0:	f7ff bba9 	b.w	8014836 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

080150e4 <_ZN8touchgfx7Outline6lineToEii>:
 80150e4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80150e6:	079b      	lsls	r3, r3, #30
 80150e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80150ea:	460e      	mov	r6, r1
 80150ec:	4615      	mov	r5, r2
 80150ee:	d511      	bpl.n	8015114 <_ZN8touchgfx7Outline6lineToEii+0x30>
 80150f0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 80150f4:	ea86 0701 	eor.w	r7, r6, r1
 80150f8:	ea85 0302 	eor.w	r3, r5, r2
 80150fc:	433b      	orrs	r3, r7
 80150fe:	d009      	beq.n	8015114 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8015100:	4633      	mov	r3, r6
 8015102:	9500      	str	r5, [sp, #0]
 8015104:	f7ff fb3e 	bl	8014784 <_ZN8touchgfx7Outline10renderLineEiiii>
 8015108:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801510a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801510e:	f043 0301 	orr.w	r3, r3, #1
 8015112:	6243      	str	r3, [r0, #36]	; 0x24
 8015114:	b003      	add	sp, #12
 8015116:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015118 <_ZN8touchgfx7Outline6moveToEii>:
 8015118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801511a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801511c:	4615      	mov	r5, r2
 801511e:	079a      	lsls	r2, r3, #30
 8015120:	4604      	mov	r4, r0
 8015122:	460e      	mov	r6, r1
 8015124:	d401      	bmi.n	801512a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8015126:	f7ff faf9 	bl	801471c <_ZN8touchgfx7Outline5resetEv>
 801512a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801512c:	07db      	lsls	r3, r3, #31
 801512e:	d504      	bpl.n	801513a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8015130:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8015134:	4620      	mov	r0, r4
 8015136:	f7ff ffd5 	bl	80150e4 <_ZN8touchgfx7Outline6lineToEii>
 801513a:	6923      	ldr	r3, [r4, #16]
 801513c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015140:	1170      	asrs	r0, r6, #5
 8015142:	4290      	cmp	r0, r2
 8015144:	ea4f 1165 	mov.w	r1, r5, asr #5
 8015148:	d103      	bne.n	8015152 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801514a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801514e:	4291      	cmp	r1, r2
 8015150:	d01a      	beq.n	8015188 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8015152:	88df      	ldrh	r7, [r3, #6]
 8015154:	889a      	ldrh	r2, [r3, #4]
 8015156:	433a      	orrs	r2, r7
 8015158:	d010      	beq.n	801517c <_ZN8touchgfx7Outline6moveToEii+0x64>
 801515a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801515e:	2a00      	cmp	r2, #0
 8015160:	db0c      	blt.n	801517c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8015162:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8015164:	42ba      	cmp	r2, r7
 8015166:	da09      	bge.n	801517c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8015168:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801516c:	42ba      	cmp	r2, r7
 801516e:	bf38      	it	cc
 8015170:	3308      	addcc	r3, #8
 8015172:	f102 0201 	add.w	r2, r2, #1
 8015176:	bf38      	it	cc
 8015178:	6123      	strcc	r3, [r4, #16]
 801517a:	60a2      	str	r2, [r4, #8]
 801517c:	6923      	ldr	r3, [r4, #16]
 801517e:	2200      	movs	r2, #0
 8015180:	8018      	strh	r0, [r3, #0]
 8015182:	8059      	strh	r1, [r3, #2]
 8015184:	809a      	strh	r2, [r3, #4]
 8015186:	80da      	strh	r2, [r3, #6]
 8015188:	6166      	str	r6, [r4, #20]
 801518a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801518e:	6225      	str	r5, [r4, #32]
 8015190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015192 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8015192:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015196:	b0d0      	sub	sp, #320	; 0x140
 8015198:	466c      	mov	r4, sp
 801519a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801519e:	4627      	mov	r7, r4
 80151a0:	1a0d      	subs	r5, r1, r0
 80151a2:	2d48      	cmp	r5, #72	; 0x48
 80151a4:	f100 0308 	add.w	r3, r0, #8
 80151a8:	f340 80d5 	ble.w	8015356 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80151ac:	112d      	asrs	r5, r5, #4
 80151ae:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80151b2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80151b6:	6816      	ldr	r6, [r2, #0]
 80151b8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80151bc:	6006      	str	r6, [r0, #0]
 80151be:	6856      	ldr	r6, [r2, #4]
 80151c0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80151c4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80151c8:	6046      	str	r6, [r0, #4]
 80151ca:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80151ce:	f8a2 8002 	strh.w	r8, [r2, #2]
 80151d2:	f8a2 e004 	strh.w	lr, [r2, #4]
 80151d6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80151da:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80151de:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 80151e2:	4565      	cmp	r5, ip
 80151e4:	f1a1 0208 	sub.w	r2, r1, #8
 80151e8:	db06      	blt.n	80151f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 80151ea:	d119      	bne.n	8015220 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80151ec:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 80151f0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 80151f4:	42ae      	cmp	r6, r5
 80151f6:	dd13      	ble.n	8015220 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 80151f8:	460e      	mov	r6, r1
 80151fa:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80151fe:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015202:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8015206:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801520a:	601d      	str	r5, [r3, #0]
 801520c:	6875      	ldr	r5, [r6, #4]
 801520e:	605d      	str	r5, [r3, #4]
 8015210:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015214:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015218:	f821 8c04 	strh.w	r8, [r1, #-4]
 801521c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015220:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8015224:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8015228:	42ae      	cmp	r6, r5
 801522a:	db06      	blt.n	801523a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801522c:	d116      	bne.n	801525c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801522e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8015232:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8015236:	45ac      	cmp	ip, r5
 8015238:	da10      	bge.n	801525c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801523a:	681d      	ldr	r5, [r3, #0]
 801523c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015240:	6005      	str	r5, [r0, #0]
 8015242:	685d      	ldr	r5, [r3, #4]
 8015244:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015248:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801524c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8015250:	6045      	str	r5, [r0, #4]
 8015252:	8146      	strh	r6, [r0, #10]
 8015254:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8015258:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801525c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8015260:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015264:	4565      	cmp	r5, ip
 8015266:	db06      	blt.n	8015276 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8015268:	d119      	bne.n	801529e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801526a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801526e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015272:	42ae      	cmp	r6, r5
 8015274:	da13      	bge.n	801529e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015276:	460e      	mov	r6, r1
 8015278:	f9b0 9000 	ldrsh.w	r9, [r0]
 801527c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015280:	6005      	str	r5, [r0, #0]
 8015282:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8015286:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801528a:	6875      	ldr	r5, [r6, #4]
 801528c:	6045      	str	r5, [r0, #4]
 801528e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015292:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015296:	f821 8c04 	strh.w	r8, [r1, #-4]
 801529a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801529e:	3308      	adds	r3, #8
 80152a0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80152a4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80152a8:	45e6      	cmp	lr, ip
 80152aa:	dbf8      	blt.n	801529e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80152ac:	d105      	bne.n	80152ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80152ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 80152b2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80152b6:	42ae      	cmp	r6, r5
 80152b8:	dbf1      	blt.n	801529e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80152ba:	4615      	mov	r5, r2
 80152bc:	3a08      	subs	r2, #8
 80152be:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80152c2:	45b4      	cmp	ip, r6
 80152c4:	dbf9      	blt.n	80152ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80152c6:	d105      	bne.n	80152d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80152c8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80152cc:	f9b2 6000 	ldrsh.w	r6, [r2]
 80152d0:	45b0      	cmp	r8, r6
 80152d2:	dbf2      	blt.n	80152ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80152d4:	4293      	cmp	r3, r2
 80152d6:	f1a5 0608 	sub.w	r6, r5, #8
 80152da:	d816      	bhi.n	801530a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80152dc:	f8d6 c000 	ldr.w	ip, [r6]
 80152e0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80152e4:	f8c3 c000 	str.w	ip, [r3]
 80152e8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80152ec:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80152f0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80152f4:	f8c3 c004 	str.w	ip, [r3, #4]
 80152f8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80152fc:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015300:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015304:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015308:	e7c9      	b.n	801529e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801530a:	f8d6 e000 	ldr.w	lr, [r6]
 801530e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8015312:	f8c0 e000 	str.w	lr, [r0]
 8015316:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801531a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801531e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8015322:	f8c0 e004 	str.w	lr, [r0, #4]
 8015326:	f825 ac08 	strh.w	sl, [r5, #-8]
 801532a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801532e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015332:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015336:	1acd      	subs	r5, r1, r3
 8015338:	1a16      	subs	r6, r2, r0
 801533a:	10ed      	asrs	r5, r5, #3
 801533c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8015340:	bfb5      	itete	lt
 8015342:	e9c4 0200 	strdlt	r0, r2, [r4]
 8015346:	e9c4 3100 	strdge	r3, r1, [r4]
 801534a:	460a      	movlt	r2, r1
 801534c:	4603      	movge	r3, r0
 801534e:	3408      	adds	r4, #8
 8015350:	4618      	mov	r0, r3
 8015352:	4611      	mov	r1, r2
 8015354:	e724      	b.n	80151a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015356:	4299      	cmp	r1, r3
 8015358:	d928      	bls.n	80153ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801535a:	f1a3 0210 	sub.w	r2, r3, #16
 801535e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8015362:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8015366:	45ac      	cmp	ip, r5
 8015368:	db06      	blt.n	8015378 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801536a:	d11d      	bne.n	80153a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801536c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8015370:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8015374:	42ae      	cmp	r6, r5
 8015376:	da17      	bge.n	80153a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8015378:	4615      	mov	r5, r2
 801537a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801537e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8015382:	6116      	str	r6, [r2, #16]
 8015384:	686e      	ldr	r6, [r5, #4]
 8015386:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801538a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801538e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8015392:	42a8      	cmp	r0, r5
 8015394:	6156      	str	r6, [r2, #20]
 8015396:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801539a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801539e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80153a2:	f1a2 0208 	sub.w	r2, r2, #8
 80153a6:	d1da      	bne.n	801535e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80153a8:	3308      	adds	r3, #8
 80153aa:	e7d4      	b.n	8015356 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80153ac:	42bc      	cmp	r4, r7
 80153ae:	d903      	bls.n	80153b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80153b0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80153b4:	3c08      	subs	r4, #8
 80153b6:	e6f3      	b.n	80151a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80153b8:	b050      	add	sp, #320	; 0x140
 80153ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080153be <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80153be:	b510      	push	{r4, lr}
 80153c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80153c2:	07da      	lsls	r2, r3, #31
 80153c4:	4604      	mov	r4, r0
 80153c6:	d507      	bpl.n	80153d8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80153c8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80153cc:	f7ff fe8a 	bl	80150e4 <_ZN8touchgfx7Outline6lineToEii>
 80153d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80153d2:	f023 0301 	bic.w	r3, r3, #1
 80153d6:	6243      	str	r3, [r0, #36]	; 0x24
 80153d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80153da:	079b      	lsls	r3, r3, #30
 80153dc:	d521      	bpl.n	8015422 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80153de:	6923      	ldr	r3, [r4, #16]
 80153e0:	88d9      	ldrh	r1, [r3, #6]
 80153e2:	889a      	ldrh	r2, [r3, #4]
 80153e4:	430a      	orrs	r2, r1
 80153e6:	d010      	beq.n	801540a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80153e8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80153ec:	2a00      	cmp	r2, #0
 80153ee:	db0c      	blt.n	801540a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80153f0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80153f2:	428a      	cmp	r2, r1
 80153f4:	da09      	bge.n	801540a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80153f6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80153fa:	4291      	cmp	r1, r2
 80153fc:	bf88      	it	hi
 80153fe:	3308      	addhi	r3, #8
 8015400:	f102 0201 	add.w	r2, r2, #1
 8015404:	bf88      	it	hi
 8015406:	6123      	strhi	r3, [r4, #16]
 8015408:	60a2      	str	r2, [r4, #8]
 801540a:	68a1      	ldr	r1, [r4, #8]
 801540c:	b129      	cbz	r1, 801541a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801540e:	6863      	ldr	r3, [r4, #4]
 8015410:	4299      	cmp	r1, r3
 8015412:	d802      	bhi.n	801541a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015414:	68e0      	ldr	r0, [r4, #12]
 8015416:	f7ff febc 	bl	8015192 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801541a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801541c:	f023 0302 	bic.w	r3, r3, #2
 8015420:	6263      	str	r3, [r4, #36]	; 0x24
 8015422:	68e0      	ldr	r0, [r4, #12]
 8015424:	bd10      	pop	{r4, pc}
	...

08015428 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8015428:	4b02      	ldr	r3, [pc, #8]	; (8015434 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801542a:	6018      	str	r0, [r3, #0]
 801542c:	4b02      	ldr	r3, [pc, #8]	; (8015438 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801542e:	6019      	str	r1, [r3, #0]
 8015430:	4770      	bx	lr
 8015432:	bf00      	nop
 8015434:	20013844 	.word	0x20013844
 8015438:	20013848 	.word	0x20013848

0801543c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801543c:	4a02      	ldr	r2, [pc, #8]	; (8015448 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801543e:	2300      	movs	r3, #0
 8015440:	6013      	str	r3, [r2, #0]
 8015442:	4a02      	ldr	r2, [pc, #8]	; (801544c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8015444:	6013      	str	r3, [r2, #0]
 8015446:	4770      	bx	lr
 8015448:	20013844 	.word	0x20013844
 801544c:	20013848 	.word	0x20013848

08015450 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8015450:	4b01      	ldr	r3, [pc, #4]	; (8015458 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8015452:	6818      	ldr	r0, [r3, #0]
 8015454:	4770      	bx	lr
 8015456:	bf00      	nop
 8015458:	20013844 	.word	0x20013844

0801545c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801545c:	4b01      	ldr	r3, [pc, #4]	; (8015464 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801545e:	6818      	ldr	r0, [r3, #0]
 8015460:	4770      	bx	lr
 8015462:	bf00      	nop
 8015464:	20013848 	.word	0x20013848

08015468 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8015468:	b510      	push	{r4, lr}
 801546a:	6803      	ldr	r3, [r0, #0]
 801546c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801546e:	460c      	mov	r4, r1
 8015470:	4798      	blx	r3
 8015472:	1b03      	subs	r3, r0, r4
 8015474:	4258      	negs	r0, r3
 8015476:	4158      	adcs	r0, r3
 8015478:	bd10      	pop	{r4, pc}
	...

0801547c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801547c:	4b01      	ldr	r3, [pc, #4]	; (8015484 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801547e:	6019      	str	r1, [r3, #0]
 8015480:	4770      	bx	lr
 8015482:	bf00      	nop
 8015484:	2001384c 	.word	0x2001384c

08015488 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801548c:	4696      	mov	lr, r2
 801548e:	4605      	mov	r5, r0
 8015490:	4614      	mov	r4, r2
 8015492:	460e      	mov	r6, r1
 8015494:	461f      	mov	r7, r3
 8015496:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801549a:	b097      	sub	sp, #92	; 0x5c
 801549c:	f10d 0c1c 	add.w	ip, sp, #28
 80154a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80154a4:	f8de 3000 	ldr.w	r3, [lr]
 80154a8:	f8cc 3000 	str.w	r3, [ip]
 80154ac:	f104 0e14 	add.w	lr, r4, #20
 80154b0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80154b4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80154b8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80154bc:	f8de 3000 	ldr.w	r3, [lr]
 80154c0:	f8cc 3000 	str.w	r3, [ip]
 80154c4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80154c8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80154cc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80154d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80154d4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80154d8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80154dc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80154e0:	f8de 3000 	ldr.w	r3, [lr]
 80154e4:	f8cc 3000 	str.w	r3, [ip]
 80154e8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80154ea:	682b      	ldr	r3, [r5, #0]
 80154ec:	9201      	str	r2, [sp, #4]
 80154ee:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80154f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80154f4:	9200      	str	r2, [sp, #0]
 80154f6:	f8cd 8008 	str.w	r8, [sp, #8]
 80154fa:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80154fe:	aa07      	add	r2, sp, #28
 8015500:	463b      	mov	r3, r7
 8015502:	4631      	mov	r1, r6
 8015504:	4628      	mov	r0, r5
 8015506:	47d8      	blx	fp
 8015508:	46a6      	mov	lr, r4
 801550a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801550e:	f10d 0c1c 	add.w	ip, sp, #28
 8015512:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015516:	f8de 3000 	ldr.w	r3, [lr]
 801551a:	f8cc 3000 	str.w	r3, [ip]
 801551e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015522:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015526:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801552a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801552e:	343c      	adds	r4, #60	; 0x3c
 8015530:	f8de 3000 	ldr.w	r3, [lr]
 8015534:	f8cc 3000 	str.w	r3, [ip]
 8015538:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801553a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801553e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015542:	6823      	ldr	r3, [r4, #0]
 8015544:	f8cc 3000 	str.w	r3, [ip]
 8015548:	682b      	ldr	r3, [r5, #0]
 801554a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801554e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015550:	9201      	str	r2, [sp, #4]
 8015552:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015554:	9200      	str	r2, [sp, #0]
 8015556:	f8cd 8008 	str.w	r8, [sp, #8]
 801555a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801555c:	aa07      	add	r2, sp, #28
 801555e:	463b      	mov	r3, r7
 8015560:	4631      	mov	r1, r6
 8015562:	4628      	mov	r0, r5
 8015564:	47a0      	blx	r4
 8015566:	b017      	add	sp, #92	; 0x5c
 8015568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801556c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801556c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015570:	b08d      	sub	sp, #52	; 0x34
 8015572:	4688      	mov	r8, r1
 8015574:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015576:	f8d3 c000 	ldr.w	ip, [r3]
 801557a:	680f      	ldr	r7, [r1, #0]
 801557c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8015580:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8015584:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8015588:	edd3 6a07 	vldr	s13, [r3, #28]
 801558c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801558e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8015592:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015596:	f9ba 1000 	ldrsh.w	r1, [sl]
 801559a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801559e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80155a2:	eba7 070c 	sub.w	r7, r7, ip
 80155a6:	42bc      	cmp	r4, r7
 80155a8:	bfa8      	it	ge
 80155aa:	463c      	movge	r4, r7
 80155ac:	ee07 4a90 	vmov	s15, r4
 80155b0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80155b4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80155b8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80155bc:	ee65 4a24 	vmul.f32	s9, s10, s9
 80155c0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80155c4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80155c8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80155cc:	eb09 0e0c 	add.w	lr, r9, ip
 80155d0:	4571      	cmp	r1, lr
 80155d2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80155d6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80155da:	ee36 0a84 	vadd.f32	s0, s13, s8
 80155de:	ee61 1a87 	vmul.f32	s3, s3, s14
 80155e2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80155e6:	f340 808d 	ble.w	8015704 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80155ea:	eba1 060e 	sub.w	r6, r1, lr
 80155ee:	fb96 f5f4 	sdiv	r5, r6, r4
 80155f2:	ee07 5a10 	vmov	s14, r5
 80155f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80155fa:	2d00      	cmp	r5, #0
 80155fc:	fb04 6615 	mls	r6, r4, r5, r6
 8015600:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015604:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015608:	eea7 1a05 	vfma.f32	s2, s14, s10
 801560c:	dd13      	ble.n	8015636 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801560e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015612:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015616:	eef5 6a40 	vcmp.f32	s13, #0.0
 801561a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801561e:	bf18      	it	ne
 8015620:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015624:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015628:	bf08      	it	eq
 801562a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801562e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015632:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015636:	fb05 f204 	mul.w	r2, r5, r4
 801563a:	1abf      	subs	r7, r7, r2
 801563c:	4494      	add	ip, r2
 801563e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8015642:	4411      	add	r1, r2
 8015644:	eb09 020c 	add.w	r2, r9, ip
 8015648:	443a      	add	r2, r7
 801564a:	b209      	sxth	r1, r1
 801564c:	428a      	cmp	r2, r1
 801564e:	bfc4      	itt	gt
 8015650:	eba1 0209 	subgt.w	r2, r1, r9
 8015654:	eba2 070c 	subgt.w	r7, r2, ip
 8015658:	2f00      	cmp	r7, #0
 801565a:	dd50      	ble.n	80156fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801565c:	fb97 f1f4 	sdiv	r1, r7, r4
 8015660:	fb04 7211 	mls	r2, r4, r1, r7
 8015664:	b90a      	cbnz	r2, 801566a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8015666:	3901      	subs	r1, #1
 8015668:	4622      	mov	r2, r4
 801566a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801566e:	6840      	ldr	r0, [r0, #4]
 8015670:	900b      	str	r0, [sp, #44]	; 0x2c
 8015672:	f8d0 a000 	ldr.w	sl, [r0]
 8015676:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8015678:	9008      	str	r0, [sp, #32]
 801567a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801567e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015680:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8015684:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8015688:	695b      	ldr	r3, [r3, #20]
 801568a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801568c:	445b      	add	r3, fp
 801568e:	eef0 6a42 	vmov.f32	s13, s4
 8015692:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015696:	ee21 3a23 	vmul.f32	s6, s2, s7
 801569a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801569e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156a2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80156a6:	9307      	str	r3, [sp, #28]
 80156a8:	ee17 7a90 	vmov	r7, s15
 80156ac:	ee73 7a42 	vsub.f32	s15, s6, s4
 80156b0:	eeb0 7a61 	vmov.f32	s14, s3
 80156b4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80156b8:	ee16 3a90 	vmov	r3, s13
 80156bc:	fb97 f7f4 	sdiv	r7, r7, r4
 80156c0:	ee17 ca90 	vmov	ip, s15
 80156c4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80156c8:	fb9c fcf4 	sdiv	ip, ip, r4
 80156cc:	fb0c 3306 	mla	r3, ip, r6, r3
 80156d0:	9302      	str	r3, [sp, #8]
 80156d2:	ee17 3a10 	vmov	r3, s14
 80156d6:	44b6      	add	lr, r6
 80156d8:	fb04 e505 	mla	r5, r4, r5, lr
 80156dc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80156e0:	fb07 3706 	mla	r7, r7, r6, r3
 80156e4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80156e8:	e9cd 4700 	strd	r4, r7, [sp]
 80156ec:	2900      	cmp	r1, #0
 80156ee:	bfcc      	ite	gt
 80156f0:	46a1      	movgt	r9, r4
 80156f2:	4691      	movle	r9, r2
 80156f4:	eba9 0306 	sub.w	r3, r9, r6
 80156f8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80156fc:	47a0      	blx	r4
 80156fe:	b00d      	add	sp, #52	; 0x34
 8015700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015704:	2500      	movs	r5, #0
 8015706:	462e      	mov	r6, r5
 8015708:	e799      	b.n	801563e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801570c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801570c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015710:	b0db      	sub	sp, #364	; 0x16c
 8015712:	461d      	mov	r5, r3
 8015714:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8015718:	930a      	str	r3, [sp, #40]	; 0x28
 801571a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801571e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015720:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8015724:	9310      	str	r3, [sp, #64]	; 0x40
 8015726:	6803      	ldr	r3, [r0, #0]
 8015728:	910f      	str	r1, [sp, #60]	; 0x3c
 801572a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801572c:	9009      	str	r0, [sp, #36]	; 0x24
 801572e:	4614      	mov	r4, r2
 8015730:	4629      	mov	r1, r5
 8015732:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8015736:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801573a:	47b8      	blx	r7
 801573c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801573e:	6058      	str	r0, [r3, #4]
 8015740:	2800      	cmp	r0, #0
 8015742:	f000 83a1 	beq.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015746:	682b      	ldr	r3, [r5, #0]
 8015748:	9314      	str	r3, [sp, #80]	; 0x50
 801574a:	686b      	ldr	r3, [r5, #4]
 801574c:	9315      	str	r3, [sp, #84]	; 0x54
 801574e:	4bc4      	ldr	r3, [pc, #784]	; (8015a60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8015750:	ed94 7a02 	vldr	s14, [r4, #8]
 8015754:	7819      	ldrb	r1, [r3, #0]
 8015756:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801575a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801575e:	2900      	cmp	r1, #0
 8015760:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015764:	bf16      	itet	ne
 8015766:	4619      	movne	r1, r3
 8015768:	4611      	moveq	r1, r2
 801576a:	4613      	movne	r3, r2
 801576c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015770:	9116      	str	r1, [sp, #88]	; 0x58
 8015772:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8015776:	f240 8387 	bls.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801577a:	ed94 7a07 	vldr	s14, [r4, #28]
 801577e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015786:	f240 837f 	bls.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801578a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801578e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015796:	f240 8377 	bls.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801579a:	6822      	ldr	r2, [r4, #0]
 801579c:	4bb1      	ldr	r3, [pc, #708]	; (8015a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801579e:	429a      	cmp	r2, r3
 80157a0:	f2c0 8372 	blt.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157a4:	49b0      	ldr	r1, [pc, #704]	; (8015a68 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80157a6:	6963      	ldr	r3, [r4, #20]
 80157a8:	428a      	cmp	r2, r1
 80157aa:	f300 836d 	bgt.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157ae:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80157b2:	48ae      	ldr	r0, [pc, #696]	; (8015a6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80157b4:	33ff      	adds	r3, #255	; 0xff
 80157b6:	4283      	cmp	r3, r0
 80157b8:	f200 8366 	bhi.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157bc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80157be:	4dac      	ldr	r5, [pc, #688]	; (8015a70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80157c0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80157c4:	33ff      	adds	r3, #255	; 0xff
 80157c6:	42ab      	cmp	r3, r5
 80157c8:	f200 835e 	bhi.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157cc:	6862      	ldr	r2, [r4, #4]
 80157ce:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80157d2:	33ff      	adds	r3, #255	; 0xff
 80157d4:	4283      	cmp	r3, r0
 80157d6:	f200 8357 	bhi.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157da:	69a1      	ldr	r1, [r4, #24]
 80157dc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80157e0:	33ff      	adds	r3, #255	; 0xff
 80157e2:	4283      	cmp	r3, r0
 80157e4:	f200 8350 	bhi.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80157ea:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80157ee:	30ff      	adds	r0, #255	; 0xff
 80157f0:	42a8      	cmp	r0, r5
 80157f2:	f200 8349 	bhi.w	8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80157f6:	428a      	cmp	r2, r1
 80157f8:	f280 8110 	bge.w	8015a1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80157fc:	429a      	cmp	r2, r3
 80157fe:	f300 8119 	bgt.w	8015a34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015802:	4299      	cmp	r1, r3
 8015804:	f280 811d 	bge.w	8015a42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015808:	2502      	movs	r5, #2
 801580a:	2701      	movs	r7, #1
 801580c:	46a9      	mov	r9, r5
 801580e:	46b8      	mov	r8, r7
 8015810:	f04f 0a00 	mov.w	sl, #0
 8015814:	4621      	mov	r1, r4
 8015816:	a849      	add	r0, sp, #292	; 0x124
 8015818:	f003 ff2a 	bl	8019670 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801581c:	4622      	mov	r2, r4
 801581e:	4653      	mov	r3, sl
 8015820:	a949      	add	r1, sp, #292	; 0x124
 8015822:	f8cd 9000 	str.w	r9, [sp]
 8015826:	a819      	add	r0, sp, #100	; 0x64
 8015828:	f004 f852 	bl	80198d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801582c:	4622      	mov	r2, r4
 801582e:	4653      	mov	r3, sl
 8015830:	a949      	add	r1, sp, #292	; 0x124
 8015832:	f8cd 8000 	str.w	r8, [sp]
 8015836:	a829      	add	r0, sp, #164	; 0xa4
 8015838:	f004 f84a 	bl	80198d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801583c:	4643      	mov	r3, r8
 801583e:	4622      	mov	r2, r4
 8015840:	a949      	add	r1, sp, #292	; 0x124
 8015842:	f8cd 9000 	str.w	r9, [sp]
 8015846:	a839      	add	r0, sp, #228	; 0xe4
 8015848:	f004 f842 	bl	80198d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801584c:	42af      	cmp	r7, r5
 801584e:	bfb5      	itete	lt
 8015850:	2300      	movlt	r3, #0
 8015852:	2301      	movge	r3, #1
 8015854:	930e      	strlt	r3, [sp, #56]	; 0x38
 8015856:	930e      	strge	r3, [sp, #56]	; 0x38
 8015858:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801585a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801585e:	af12      	add	r7, sp, #72	; 0x48
 8015860:	bfb9      	ittee	lt
 8015862:	ad29      	addlt	r5, sp, #164	; 0xa4
 8015864:	ac19      	addlt	r4, sp, #100	; 0x64
 8015866:	ad19      	addge	r5, sp, #100	; 0x64
 8015868:	ac29      	addge	r4, sp, #164	; 0xa4
 801586a:	e887 0003 	stmia.w	r7, {r0, r1}
 801586e:	b928      	cbnz	r0, 801587c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015870:	4b80      	ldr	r3, [pc, #512]	; (8015a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015872:	6818      	ldr	r0, [r3, #0]
 8015874:	6803      	ldr	r3, [r0, #0]
 8015876:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015878:	4798      	blx	r3
 801587a:	6038      	str	r0, [r7, #0]
 801587c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801587e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015882:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015886:	930c      	str	r3, [sp, #48]	; 0x30
 8015888:	990c      	ldr	r1, [sp, #48]	; 0x30
 801588a:	6963      	ldr	r3, [r4, #20]
 801588c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801588e:	440b      	add	r3, r1
 8015890:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015894:	4408      	add	r0, r1
 8015896:	b200      	sxth	r0, r0
 8015898:	4283      	cmp	r3, r0
 801589a:	900d      	str	r0, [sp, #52]	; 0x34
 801589c:	f280 80dd 	bge.w	8015a5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80158a0:	428b      	cmp	r3, r1
 80158a2:	da08      	bge.n	80158b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80158a4:	2a00      	cmp	r2, #0
 80158a6:	dd06      	ble.n	80158b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80158a8:	1acb      	subs	r3, r1, r3
 80158aa:	429a      	cmp	r2, r3
 80158ac:	f2c0 80e4 	blt.w	8015a78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80158b0:	2b00      	cmp	r3, #0
 80158b2:	f300 80e2 	bgt.w	8015a7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80158b6:	6967      	ldr	r7, [r4, #20]
 80158b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80158ba:	443b      	add	r3, r7
 80158bc:	461f      	mov	r7, r3
 80158be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80158c0:	1bdf      	subs	r7, r3, r7
 80158c2:	4297      	cmp	r7, r2
 80158c4:	bfa8      	it	ge
 80158c6:	4617      	movge	r7, r2
 80158c8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80158cc:	2f00      	cmp	r7, #0
 80158ce:	f340 8166 	ble.w	8015b9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80158d2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80158d4:	6829      	ldr	r1, [r5, #0]
 80158d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158da:	f9bb 3000 	ldrsh.w	r3, [fp]
 80158de:	6820      	ldr	r0, [r4, #0]
 80158e0:	4411      	add	r1, r2
 80158e2:	4299      	cmp	r1, r3
 80158e4:	dd1a      	ble.n	801591c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80158e6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80158ea:	440b      	add	r3, r1
 80158ec:	4402      	add	r2, r0
 80158ee:	b21b      	sxth	r3, r3
 80158f0:	429a      	cmp	r2, r3
 80158f2:	dc13      	bgt.n	801591c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80158f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80158f8:	681b      	ldr	r3, [r3, #0]
 80158fa:	9206      	str	r2, [sp, #24]
 80158fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80158fe:	9205      	str	r2, [sp, #20]
 8015900:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015902:	9500      	str	r5, [sp, #0]
 8015904:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015908:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801590a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801590c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015910:	a912      	add	r1, sp, #72	; 0x48
 8015912:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015916:	aa49      	add	r2, sp, #292	; 0x124
 8015918:	4623      	mov	r3, r4
 801591a:	47c8      	blx	r9
 801591c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015920:	441a      	add	r2, r3
 8015922:	6963      	ldr	r3, [r4, #20]
 8015924:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015928:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801592c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015930:	68a1      	ldr	r1, [r4, #8]
 8015932:	ed94 6a08 	vldr	s12, [r4, #32]
 8015936:	6022      	str	r2, [r4, #0]
 8015938:	3301      	adds	r3, #1
 801593a:	6163      	str	r3, [r4, #20]
 801593c:	69a3      	ldr	r3, [r4, #24]
 801593e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015942:	3b01      	subs	r3, #1
 8015944:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015948:	61a3      	str	r3, [r4, #24]
 801594a:	6923      	ldr	r3, [r4, #16]
 801594c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015950:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015954:	edd4 6a07 	vldr	s13, [r4, #28]
 8015958:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801595c:	440b      	add	r3, r1
 801595e:	68e1      	ldr	r1, [r4, #12]
 8015960:	6123      	str	r3, [r4, #16]
 8015962:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015966:	428b      	cmp	r3, r1
 8015968:	edc4 6a07 	vstr	s13, [r4, #28]
 801596c:	db15      	blt.n	801599a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801596e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015972:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015976:	3201      	adds	r2, #1
 8015978:	edc4 6a07 	vstr	s13, [r4, #28]
 801597c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015980:	6022      	str	r2, [r4, #0]
 8015982:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015986:	1a5b      	subs	r3, r3, r1
 8015988:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801598c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015990:	6123      	str	r3, [r4, #16]
 8015992:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015996:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801599a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801599e:	441a      	add	r2, r3
 80159a0:	696b      	ldr	r3, [r5, #20]
 80159a2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80159a6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80159aa:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80159ae:	68a9      	ldr	r1, [r5, #8]
 80159b0:	ed95 6a08 	vldr	s12, [r5, #32]
 80159b4:	602a      	str	r2, [r5, #0]
 80159b6:	3301      	adds	r3, #1
 80159b8:	616b      	str	r3, [r5, #20]
 80159ba:	69ab      	ldr	r3, [r5, #24]
 80159bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80159c0:	3b01      	subs	r3, #1
 80159c2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80159c6:	61ab      	str	r3, [r5, #24]
 80159c8:	692b      	ldr	r3, [r5, #16]
 80159ca:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80159ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80159d2:	edd5 6a07 	vldr	s13, [r5, #28]
 80159d6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80159da:	440b      	add	r3, r1
 80159dc:	68e9      	ldr	r1, [r5, #12]
 80159de:	612b      	str	r3, [r5, #16]
 80159e0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80159e4:	428b      	cmp	r3, r1
 80159e6:	edc5 6a07 	vstr	s13, [r5, #28]
 80159ea:	db15      	blt.n	8015a18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80159ec:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80159f0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80159f4:	3201      	adds	r2, #1
 80159f6:	edc5 6a07 	vstr	s13, [r5, #28]
 80159fa:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80159fe:	602a      	str	r2, [r5, #0]
 8015a00:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015a04:	1a5b      	subs	r3, r3, r1
 8015a06:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015a0a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015a0e:	612b      	str	r3, [r5, #16]
 8015a10:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015a14:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015a18:	3f01      	subs	r7, #1
 8015a1a:	e757      	b.n	80158cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015a1c:	4299      	cmp	r1, r3
 8015a1e:	dc13      	bgt.n	8015a48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015a20:	429a      	cmp	r2, r3
 8015a22:	da14      	bge.n	8015a4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015a24:	2502      	movs	r5, #2
 8015a26:	2703      	movs	r7, #3
 8015a28:	46a9      	mov	r9, r5
 8015a2a:	f04f 0800 	mov.w	r8, #0
 8015a2e:	f04f 0a01 	mov.w	sl, #1
 8015a32:	e6ef      	b.n	8015814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015a34:	2501      	movs	r5, #1
 8015a36:	2700      	movs	r7, #0
 8015a38:	46a9      	mov	r9, r5
 8015a3a:	46b8      	mov	r8, r7
 8015a3c:	f04f 0a02 	mov.w	sl, #2
 8015a40:	e6e8      	b.n	8015814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015a42:	2501      	movs	r5, #1
 8015a44:	2702      	movs	r7, #2
 8015a46:	e6e1      	b.n	801580c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8015a48:	2500      	movs	r5, #0
 8015a4a:	2701      	movs	r7, #1
 8015a4c:	e7f4      	b.n	8015a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8015a4e:	2702      	movs	r7, #2
 8015a50:	2503      	movs	r5, #3
 8015a52:	f04f 0900 	mov.w	r9, #0
 8015a56:	46b8      	mov	r8, r7
 8015a58:	e7e9      	b.n	8015a2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8015a5a:	4613      	mov	r3, r2
 8015a5c:	e728      	b.n	80158b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8015a5e:	bf00      	nop
 8015a60:	20013834 	.word	0x20013834
 8015a64:	fffd8f01 	.word	0xfffd8f01
 8015a68:	00027100 	.word	0x00027100
 8015a6c:	0004e1ff 	.word	0x0004e1ff
 8015a70:	0004e1fe 	.word	0x0004e1fe
 8015a74:	2001383c 	.word	0x2001383c
 8015a78:	4613      	mov	r3, r2
 8015a7a:	992b      	ldr	r1, [sp, #172]	; 0xac
 8015a7c:	9111      	str	r1, [sp, #68]	; 0x44
 8015a7e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015a82:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015a86:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015a88:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8015a8c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015a90:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015a94:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015a98:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8015a9c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015aa0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015aa4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015aa8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8015aac:	469e      	mov	lr, r3
 8015aae:	469c      	mov	ip, r3
 8015ab0:	f04f 0900 	mov.w	r9, #0
 8015ab4:	f1bc 0f00 	cmp.w	ip, #0
 8015ab8:	d147      	bne.n	8015b4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8015aba:	eb03 0c07 	add.w	ip, r3, r7
 8015abe:	1ad7      	subs	r7, r2, r3
 8015ac0:	f1b9 0f00 	cmp.w	r9, #0
 8015ac4:	d009      	beq.n	8015ada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015ac6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8015aca:	9029      	str	r0, [sp, #164]	; 0xa4
 8015acc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015ad0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015ad4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015ad8:	912d      	str	r1, [sp, #180]	; 0xb4
 8015ada:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015adc:	9111      	str	r1, [sp, #68]	; 0x44
 8015ade:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015ae2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015ae6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015aea:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015aee:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015af2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015af6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015afa:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015afe:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015b02:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015b06:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015b0a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015b0e:	f04f 0800 	mov.w	r8, #0
 8015b12:	f1be 0f00 	cmp.w	lr, #0
 8015b16:	d031      	beq.n	8015b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015b18:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015b1a:	4431      	add	r1, r6
 8015b1c:	4549      	cmp	r1, r9
 8015b1e:	4450      	add	r0, sl
 8015b20:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015b24:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015b28:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015b2c:	db08      	blt.n	8015b40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8015b2e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015b32:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015b36:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015b3a:	3001      	adds	r0, #1
 8015b3c:	eba1 0109 	sub.w	r1, r1, r9
 8015b40:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015b44:	f04f 0801 	mov.w	r8, #1
 8015b48:	e7e3      	b.n	8015b12 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8015b4a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8015b4c:	4431      	add	r1, r6
 8015b4e:	4541      	cmp	r1, r8
 8015b50:	4450      	add	r0, sl
 8015b52:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015b56:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015b5a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015b5e:	db08      	blt.n	8015b72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8015b60:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015b64:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015b68:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015b6c:	3001      	adds	r0, #1
 8015b6e:	eba1 0108 	sub.w	r1, r1, r8
 8015b72:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015b76:	f04f 0901 	mov.w	r9, #1
 8015b7a:	e79b      	b.n	8015ab4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8015b7c:	449c      	add	ip, r3
 8015b7e:	1aff      	subs	r7, r7, r3
 8015b80:	f1b8 0f00 	cmp.w	r8, #0
 8015b84:	d009      	beq.n	8015b9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015b86:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015b8a:	9019      	str	r0, [sp, #100]	; 0x64
 8015b8c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015b90:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015b94:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015b98:	911d      	str	r1, [sp, #116]	; 0x74
 8015b9a:	1ad2      	subs	r2, r2, r3
 8015b9c:	e68b      	b.n	80158b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015b9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ba0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015ba2:	2b00      	cmp	r3, #0
 8015ba4:	f000 80d1 	beq.w	8015d4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015ba8:	ad19      	add	r5, sp, #100	; 0x64
 8015baa:	ac39      	add	r4, sp, #228	; 0xe4
 8015bac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015bae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015bb2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015bb6:	930c      	str	r3, [sp, #48]	; 0x30
 8015bb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015bba:	6963      	ldr	r3, [r4, #20]
 8015bbc:	440b      	add	r3, r1
 8015bbe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015bc2:	4408      	add	r0, r1
 8015bc4:	b200      	sxth	r0, r0
 8015bc6:	4283      	cmp	r3, r0
 8015bc8:	900d      	str	r0, [sp, #52]	; 0x34
 8015bca:	f280 80c1 	bge.w	8015d50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015bce:	428b      	cmp	r3, r1
 8015bd0:	da08      	bge.n	8015be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015bd2:	2a00      	cmp	r2, #0
 8015bd4:	dd06      	ble.n	8015be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015bd6:	1acb      	subs	r3, r1, r3
 8015bd8:	429a      	cmp	r2, r3
 8015bda:	f2c0 80bb 	blt.w	8015d54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015bde:	2b00      	cmp	r3, #0
 8015be0:	f300 80b9 	bgt.w	8015d56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015be4:	6967      	ldr	r7, [r4, #20]
 8015be6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015be8:	443b      	add	r3, r7
 8015bea:	461f      	mov	r7, r3
 8015bec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015bee:	1bdf      	subs	r7, r3, r7
 8015bf0:	4297      	cmp	r7, r2
 8015bf2:	bfa8      	it	ge
 8015bf4:	4617      	movge	r7, r2
 8015bf6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015bfa:	2f00      	cmp	r7, #0
 8015bfc:	f340 813c 	ble.w	8015e78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015c00:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015c02:	6829      	ldr	r1, [r5, #0]
 8015c04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015c08:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015c0c:	6820      	ldr	r0, [r4, #0]
 8015c0e:	4411      	add	r1, r2
 8015c10:	4299      	cmp	r1, r3
 8015c12:	dd1a      	ble.n	8015c4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015c14:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015c18:	440b      	add	r3, r1
 8015c1a:	4402      	add	r2, r0
 8015c1c:	b21b      	sxth	r3, r3
 8015c1e:	429a      	cmp	r2, r3
 8015c20:	dc13      	bgt.n	8015c4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015c22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015c26:	681b      	ldr	r3, [r3, #0]
 8015c28:	9206      	str	r2, [sp, #24]
 8015c2a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015c2c:	9205      	str	r2, [sp, #20]
 8015c2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015c30:	9500      	str	r5, [sp, #0]
 8015c32:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015c36:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015c38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015c3a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015c3e:	a912      	add	r1, sp, #72	; 0x48
 8015c40:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015c44:	aa49      	add	r2, sp, #292	; 0x124
 8015c46:	4623      	mov	r3, r4
 8015c48:	47c8      	blx	r9
 8015c4a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015c4e:	441a      	add	r2, r3
 8015c50:	6963      	ldr	r3, [r4, #20]
 8015c52:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015c56:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015c5a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015c5e:	68a1      	ldr	r1, [r4, #8]
 8015c60:	ed94 6a08 	vldr	s12, [r4, #32]
 8015c64:	6022      	str	r2, [r4, #0]
 8015c66:	3301      	adds	r3, #1
 8015c68:	6163      	str	r3, [r4, #20]
 8015c6a:	69a3      	ldr	r3, [r4, #24]
 8015c6c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015c70:	3b01      	subs	r3, #1
 8015c72:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015c76:	61a3      	str	r3, [r4, #24]
 8015c78:	6923      	ldr	r3, [r4, #16]
 8015c7a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015c7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015c82:	edd4 6a07 	vldr	s13, [r4, #28]
 8015c86:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015c8a:	440b      	add	r3, r1
 8015c8c:	68e1      	ldr	r1, [r4, #12]
 8015c8e:	6123      	str	r3, [r4, #16]
 8015c90:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015c94:	428b      	cmp	r3, r1
 8015c96:	edc4 6a07 	vstr	s13, [r4, #28]
 8015c9a:	db15      	blt.n	8015cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015c9c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015ca0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015ca4:	3201      	adds	r2, #1
 8015ca6:	edc4 6a07 	vstr	s13, [r4, #28]
 8015caa:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015cae:	6022      	str	r2, [r4, #0]
 8015cb0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015cb4:	1a5b      	subs	r3, r3, r1
 8015cb6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015cba:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015cbe:	6123      	str	r3, [r4, #16]
 8015cc0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015cc4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015cc8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015ccc:	441a      	add	r2, r3
 8015cce:	696b      	ldr	r3, [r5, #20]
 8015cd0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015cd4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015cd8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015cdc:	68a9      	ldr	r1, [r5, #8]
 8015cde:	ed95 6a08 	vldr	s12, [r5, #32]
 8015ce2:	602a      	str	r2, [r5, #0]
 8015ce4:	3301      	adds	r3, #1
 8015ce6:	616b      	str	r3, [r5, #20]
 8015ce8:	69ab      	ldr	r3, [r5, #24]
 8015cea:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015cee:	3b01      	subs	r3, #1
 8015cf0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015cf4:	61ab      	str	r3, [r5, #24]
 8015cf6:	692b      	ldr	r3, [r5, #16]
 8015cf8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015cfc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015d00:	edd5 6a07 	vldr	s13, [r5, #28]
 8015d04:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015d08:	440b      	add	r3, r1
 8015d0a:	68e9      	ldr	r1, [r5, #12]
 8015d0c:	612b      	str	r3, [r5, #16]
 8015d0e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015d12:	428b      	cmp	r3, r1
 8015d14:	edc5 6a07 	vstr	s13, [r5, #28]
 8015d18:	db15      	blt.n	8015d46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015d1a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015d1e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015d22:	3201      	adds	r2, #1
 8015d24:	edc5 6a07 	vstr	s13, [r5, #28]
 8015d28:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015d2c:	602a      	str	r2, [r5, #0]
 8015d2e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015d32:	1a5b      	subs	r3, r3, r1
 8015d34:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015d38:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015d3c:	612b      	str	r3, [r5, #16]
 8015d3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015d42:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015d46:	3f01      	subs	r7, #1
 8015d48:	e757      	b.n	8015bfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015d4a:	ad39      	add	r5, sp, #228	; 0xe4
 8015d4c:	ac19      	add	r4, sp, #100	; 0x64
 8015d4e:	e72d      	b.n	8015bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015d50:	4613      	mov	r3, r2
 8015d52:	e744      	b.n	8015bde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015d54:	4613      	mov	r3, r2
 8015d56:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015d5a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015d5c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015d60:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015d64:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015d68:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015d6c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015d70:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015d74:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015d78:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015d7a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8015d7e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015d82:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015d86:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8015d8a:	960e      	str	r6, [sp, #56]	; 0x38
 8015d8c:	469e      	mov	lr, r3
 8015d8e:	461f      	mov	r7, r3
 8015d90:	f04f 0900 	mov.w	r9, #0
 8015d94:	2f00      	cmp	r7, #0
 8015d96:	d146      	bne.n	8015e26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015d98:	449c      	add	ip, r3
 8015d9a:	1ad7      	subs	r7, r2, r3
 8015d9c:	f1b9 0f00 	cmp.w	r9, #0
 8015da0:	d009      	beq.n	8015db6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015da2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015da6:	9039      	str	r0, [sp, #228]	; 0xe4
 8015da8:	913d      	str	r1, [sp, #244]	; 0xf4
 8015daa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8015dae:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015db2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015db6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015db8:	910e      	str	r1, [sp, #56]	; 0x38
 8015dba:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015dbe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015dc2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015dc6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015dca:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015dce:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015dd2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015dd6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015dda:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015dde:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015de2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015de6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015dea:	f04f 0800 	mov.w	r8, #0
 8015dee:	f1be 0f00 	cmp.w	lr, #0
 8015df2:	d030      	beq.n	8015e56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015df4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015df6:	4431      	add	r1, r6
 8015df8:	4549      	cmp	r1, r9
 8015dfa:	4450      	add	r0, sl
 8015dfc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015e00:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015e04:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015e08:	db08      	blt.n	8015e1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015e0a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015e0e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015e12:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015e16:	3001      	adds	r0, #1
 8015e18:	eba1 0109 	sub.w	r1, r1, r9
 8015e1c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015e20:	f04f 0801 	mov.w	r8, #1
 8015e24:	e7e3      	b.n	8015dee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015e26:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015e28:	4431      	add	r1, r6
 8015e2a:	4541      	cmp	r1, r8
 8015e2c:	4450      	add	r0, sl
 8015e2e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015e32:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015e36:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015e3a:	db08      	blt.n	8015e4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015e3c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015e40:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015e44:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015e48:	3001      	adds	r0, #1
 8015e4a:	eba1 0108 	sub.w	r1, r1, r8
 8015e4e:	3f01      	subs	r7, #1
 8015e50:	f04f 0901 	mov.w	r9, #1
 8015e54:	e79e      	b.n	8015d94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015e56:	449c      	add	ip, r3
 8015e58:	1aff      	subs	r7, r7, r3
 8015e5a:	f1b8 0f00 	cmp.w	r8, #0
 8015e5e:	d009      	beq.n	8015e74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015e60:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015e64:	9019      	str	r0, [sp, #100]	; 0x64
 8015e66:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015e6a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015e6e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015e72:	911d      	str	r1, [sp, #116]	; 0x74
 8015e74:	1ad2      	subs	r2, r2, r3
 8015e76:	e6b5      	b.n	8015be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015e78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015e7a:	681b      	ldr	r3, [r3, #0]
 8015e7c:	b923      	cbnz	r3, 8015e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015e7e:	4b04      	ldr	r3, [pc, #16]	; (8015e90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015e80:	6818      	ldr	r0, [r3, #0]
 8015e82:	6803      	ldr	r3, [r0, #0]
 8015e84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e86:	4798      	blx	r3
 8015e88:	b05b      	add	sp, #364	; 0x16c
 8015e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e8e:	bf00      	nop
 8015e90:	2001383c 	.word	0x2001383c

08015e94 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015e94:	b570      	push	{r4, r5, r6, lr}
 8015e96:	4604      	mov	r4, r0
 8015e98:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015e9c:	9805      	ldr	r0, [sp, #20]
 8015e9e:	6061      	str	r1, [r4, #4]
 8015ea0:	2500      	movs	r5, #0
 8015ea2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015ea6:	8263      	strh	r3, [r4, #18]
 8015ea8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015eac:	8025      	strh	r5, [r4, #0]
 8015eae:	7221      	strb	r1, [r4, #8]
 8015eb0:	7266      	strb	r6, [r4, #9]
 8015eb2:	60e0      	str	r0, [r4, #12]
 8015eb4:	8222      	strh	r2, [r4, #16]
 8015eb6:	82a3      	strh	r3, [r4, #20]
 8015eb8:	82e5      	strh	r5, [r4, #22]
 8015eba:	8325      	strh	r5, [r4, #24]
 8015ebc:	8365      	strh	r5, [r4, #26]
 8015ebe:	83a5      	strh	r5, [r4, #28]
 8015ec0:	83e5      	strh	r5, [r4, #30]
 8015ec2:	8425      	strh	r5, [r4, #32]
 8015ec4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015ec8:	b32e      	cbz	r6, 8015f16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015eca:	6803      	ldr	r3, [r0, #0]
 8015ecc:	695b      	ldr	r3, [r3, #20]
 8015ece:	4798      	blx	r3
 8015ed0:	4606      	mov	r6, r0
 8015ed2:	b300      	cbz	r0, 8015f16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015ed4:	68e0      	ldr	r0, [r4, #12]
 8015ed6:	6803      	ldr	r3, [r0, #0]
 8015ed8:	4631      	mov	r1, r6
 8015eda:	68db      	ldr	r3, [r3, #12]
 8015edc:	4798      	blx	r3
 8015ede:	4605      	mov	r5, r0
 8015ee0:	b1c8      	cbz	r0, 8015f16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015ee2:	7b43      	ldrb	r3, [r0, #13]
 8015ee4:	7a82      	ldrb	r2, [r0, #10]
 8015ee6:	005b      	lsls	r3, r3, #1
 8015ee8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015eec:	4313      	orrs	r3, r2
 8015eee:	8423      	strh	r3, [r4, #32]
 8015ef0:	7a63      	ldrb	r3, [r4, #9]
 8015ef2:	2b06      	cmp	r3, #6
 8015ef4:	d10f      	bne.n	8015f16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015ef6:	68e0      	ldr	r0, [r4, #12]
 8015ef8:	6803      	ldr	r3, [r0, #0]
 8015efa:	462a      	mov	r2, r5
 8015efc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015efe:	4631      	mov	r1, r6
 8015f00:	4798      	blx	r3
 8015f02:	7b6b      	ldrb	r3, [r5, #13]
 8015f04:	005b      	lsls	r3, r3, #1
 8015f06:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015f0a:	7aab      	ldrb	r3, [r5, #10]
 8015f0c:	4313      	orrs	r3, r2
 8015f0e:	4418      	add	r0, r3
 8015f10:	8c23      	ldrh	r3, [r4, #32]
 8015f12:	4418      	add	r0, r3
 8015f14:	8420      	strh	r0, [r4, #32]
 8015f16:	4620      	mov	r0, r4
 8015f18:	bd70      	pop	{r4, r5, r6, pc}

08015f1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015f1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f1e:	2400      	movs	r4, #0
 8015f20:	b085      	sub	sp, #20
 8015f22:	4681      	mov	r9, r0
 8015f24:	4688      	mov	r8, r1
 8015f26:	4692      	mov	sl, r2
 8015f28:	469b      	mov	fp, r3
 8015f2a:	4627      	mov	r7, r4
 8015f2c:	4625      	mov	r5, r4
 8015f2e:	4626      	mov	r6, r4
 8015f30:	4554      	cmp	r4, sl
 8015f32:	da2a      	bge.n	8015f8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015f34:	2300      	movs	r3, #0
 8015f36:	9303      	str	r3, [sp, #12]
 8015f38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015f3c:	429d      	cmp	r5, r3
 8015f3e:	d004      	beq.n	8015f4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015f40:	f242 030b 	movw	r3, #8203	; 0x200b
 8015f44:	429d      	cmp	r5, r3
 8015f46:	bf18      	it	ne
 8015f48:	462f      	movne	r7, r5
 8015f4a:	ab03      	add	r3, sp, #12
 8015f4c:	4642      	mov	r2, r8
 8015f4e:	4659      	mov	r1, fp
 8015f50:	4648      	mov	r0, r9
 8015f52:	f003 f9a3 	bl	801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015f56:	4605      	mov	r5, r0
 8015f58:	b1b8      	cbz	r0, 8015f8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015f5a:	280a      	cmp	r0, #10
 8015f5c:	d015      	beq.n	8015f8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015f5e:	9a03      	ldr	r2, [sp, #12]
 8015f60:	b18a      	cbz	r2, 8015f86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015f62:	7b50      	ldrb	r0, [r2, #13]
 8015f64:	7a93      	ldrb	r3, [r2, #10]
 8015f66:	8895      	ldrh	r5, [r2, #4]
 8015f68:	0040      	lsls	r0, r0, #1
 8015f6a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015f6e:	4303      	orrs	r3, r0
 8015f70:	9301      	str	r3, [sp, #4]
 8015f72:	f8d8 3000 	ldr.w	r3, [r8]
 8015f76:	4639      	mov	r1, r7
 8015f78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015f7a:	4640      	mov	r0, r8
 8015f7c:	4798      	blx	r3
 8015f7e:	9b01      	ldr	r3, [sp, #4]
 8015f80:	4418      	add	r0, r3
 8015f82:	4406      	add	r6, r0
 8015f84:	b2b6      	uxth	r6, r6
 8015f86:	3401      	adds	r4, #1
 8015f88:	e7d2      	b.n	8015f30 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015f8a:	4630      	mov	r0, r6
 8015f8c:	b005      	add	sp, #20
 8015f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015f92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015f92:	2a02      	cmp	r2, #2
 8015f94:	b530      	push	{r4, r5, lr}
 8015f96:	d011      	beq.n	8015fbc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015f98:	2a03      	cmp	r2, #3
 8015f9a:	d01c      	beq.n	8015fd6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015f9c:	2a01      	cmp	r2, #1
 8015f9e:	d10c      	bne.n	8015fba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015fa0:	888b      	ldrh	r3, [r1, #4]
 8015fa2:	8801      	ldrh	r1, [r0, #0]
 8015fa4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015fa8:	8844      	ldrh	r4, [r0, #2]
 8015faa:	8004      	strh	r4, [r0, #0]
 8015fac:	1a5b      	subs	r3, r3, r1
 8015fae:	1a9b      	subs	r3, r3, r2
 8015fb0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015fb4:	8043      	strh	r3, [r0, #2]
 8015fb6:	8081      	strh	r1, [r0, #4]
 8015fb8:	80c2      	strh	r2, [r0, #6]
 8015fba:	bd30      	pop	{r4, r5, pc}
 8015fbc:	88cb      	ldrh	r3, [r1, #6]
 8015fbe:	8842      	ldrh	r2, [r0, #2]
 8015fc0:	1a9b      	subs	r3, r3, r2
 8015fc2:	88c2      	ldrh	r2, [r0, #6]
 8015fc4:	1a9b      	subs	r3, r3, r2
 8015fc6:	888a      	ldrh	r2, [r1, #4]
 8015fc8:	8801      	ldrh	r1, [r0, #0]
 8015fca:	8043      	strh	r3, [r0, #2]
 8015fcc:	1a52      	subs	r2, r2, r1
 8015fce:	8881      	ldrh	r1, [r0, #4]
 8015fd0:	1a52      	subs	r2, r2, r1
 8015fd2:	8002      	strh	r2, [r0, #0]
 8015fd4:	e7f1      	b.n	8015fba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015fd6:	88cb      	ldrh	r3, [r1, #6]
 8015fd8:	8841      	ldrh	r1, [r0, #2]
 8015fda:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015fde:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015fe2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015fe6:	8045      	strh	r5, [r0, #2]
 8015fe8:	1a5b      	subs	r3, r3, r1
 8015fea:	1a9b      	subs	r3, r3, r2
 8015fec:	8003      	strh	r3, [r0, #0]
 8015fee:	8082      	strh	r2, [r0, #4]
 8015ff0:	80c4      	strh	r4, [r0, #6]
 8015ff2:	e7e2      	b.n	8015fba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ff8:	b09f      	sub	sp, #124	; 0x7c
 8015ffa:	9116      	str	r1, [sp, #88]	; 0x58
 8015ffc:	9317      	str	r3, [sp, #92]	; 0x5c
 8015ffe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016000:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016002:	8809      	ldrh	r1, [r1, #0]
 8016004:	889b      	ldrh	r3, [r3, #4]
 8016006:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801600a:	9212      	str	r2, [sp, #72]	; 0x48
 801600c:	440b      	add	r3, r1
 801600e:	b21b      	sxth	r3, r3
 8016010:	9310      	str	r3, [sp, #64]	; 0x40
 8016012:	f8d8 3000 	ldr.w	r3, [r8]
 8016016:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801601a:	7b19      	ldrb	r1, [r3, #12]
 801601c:	7adb      	ldrb	r3, [r3, #11]
 801601e:	9011      	str	r0, [sp, #68]	; 0x44
 8016020:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8016024:	9114      	str	r1, [sp, #80]	; 0x50
 8016026:	9315      	str	r3, [sp, #84]	; 0x54
 8016028:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801602c:	2a00      	cmp	r2, #0
 801602e:	d06a      	beq.n	8016106 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8016030:	f898 3010 	ldrb.w	r3, [r8, #16]
 8016034:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016036:	2b06      	cmp	r3, #6
 8016038:	bf14      	ite	ne
 801603a:	2301      	movne	r3, #1
 801603c:	2302      	moveq	r3, #2
 801603e:	4413      	add	r3, r2
 8016040:	f04f 0900 	mov.w	r9, #0
 8016044:	930f      	str	r3, [sp, #60]	; 0x3c
 8016046:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801604a:	464c      	mov	r4, r9
 801604c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8016050:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8016054:	4293      	cmp	r3, r2
 8016056:	f280 808f 	bge.w	8016178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801605a:	2300      	movs	r3, #0
 801605c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8016060:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8016064:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016068:	429c      	cmp	r4, r3
 801606a:	d006      	beq.n	801607a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801606c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801606e:	f242 020b 	movw	r2, #8203	; 0x200b
 8016072:	4294      	cmp	r4, r2
 8016074:	bf18      	it	ne
 8016076:	4623      	movne	r3, r4
 8016078:	930d      	str	r3, [sp, #52]	; 0x34
 801607a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801607c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801607e:	f8d8 2000 	ldr.w	r2, [r8]
 8016082:	428b      	cmp	r3, r1
 8016084:	db41      	blt.n	801610a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8016086:	6813      	ldr	r3, [r2, #0]
 8016088:	4610      	mov	r0, r2
 801608a:	695b      	ldr	r3, [r3, #20]
 801608c:	4798      	blx	r3
 801608e:	4604      	mov	r4, r0
 8016090:	f8d8 0000 	ldr.w	r0, [r8]
 8016094:	6803      	ldr	r3, [r0, #0]
 8016096:	aa1d      	add	r2, sp, #116	; 0x74
 8016098:	689d      	ldr	r5, [r3, #8]
 801609a:	4621      	mov	r1, r4
 801609c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80160a0:	47a8      	blx	r5
 80160a2:	901c      	str	r0, [sp, #112]	; 0x70
 80160a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80160a8:	429c      	cmp	r4, r3
 80160aa:	f000 80eb 	beq.w	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80160ae:	f242 030b 	movw	r3, #8203	; 0x200b
 80160b2:	429c      	cmp	r4, r3
 80160b4:	f000 80e6 	beq.w	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80160b8:	2c00      	cmp	r4, #0
 80160ba:	f000 80f8 	beq.w	80162ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80160be:	2c0a      	cmp	r4, #10
 80160c0:	d060      	beq.n	8016184 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80160c2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80160c4:	b36a      	cbz	r2, 8016122 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80160c6:	8894      	ldrh	r4, [r2, #4]
 80160c8:	f1bb 0f00 	cmp.w	fp, #0
 80160cc:	d03b      	beq.n	8016146 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80160ce:	f892 900d 	ldrb.w	r9, [r2, #13]
 80160d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80160d6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80160da:	f892 900a 	ldrb.w	r9, [r2, #10]
 80160de:	f1bb 0f01 	cmp.w	fp, #1
 80160e2:	ea49 0903 	orr.w	r9, r9, r3
 80160e6:	d134      	bne.n	8016152 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80160e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80160ea:	eba6 0609 	sub.w	r6, r6, r9
 80160ee:	2b00      	cmp	r3, #0
 80160f0:	d14f      	bne.n	8016192 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80160f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80160f4:	eb09 0306 	add.w	r3, r9, r6
 80160f8:	4413      	add	r3, r2
 80160fa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80160fc:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016100:	4293      	cmp	r3, r2
 8016102:	da51      	bge.n	80161a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8016104:	e038      	b.n	8016178 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8016106:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016108:	e79a      	b.n	8016040 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801610a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801610e:	9301      	str	r3, [sp, #4]
 8016110:	ab1d      	add	r3, sp, #116	; 0x74
 8016112:	9300      	str	r3, [sp, #0]
 8016114:	4659      	mov	r1, fp
 8016116:	ab1c      	add	r3, sp, #112	; 0x70
 8016118:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801611a:	f003 f908 	bl	801932e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801611e:	4604      	mov	r4, r0
 8016120:	e7c0      	b.n	80160a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8016122:	f8d8 0000 	ldr.w	r0, [r8]
 8016126:	6803      	ldr	r3, [r0, #0]
 8016128:	691b      	ldr	r3, [r3, #16]
 801612a:	4798      	blx	r3
 801612c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016130:	4298      	cmp	r0, r3
 8016132:	f000 80a7 	beq.w	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016136:	f242 030b 	movw	r3, #8203	; 0x200b
 801613a:	4298      	cmp	r0, r3
 801613c:	f000 80a2 	beq.w	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016140:	f1bb 0f00 	cmp.w	fp, #0
 8016144:	d100      	bne.n	8016148 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8016146:	444e      	add	r6, r9
 8016148:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801614a:	2a00      	cmp	r2, #0
 801614c:	d1bf      	bne.n	80160ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801614e:	4691      	mov	r9, r2
 8016150:	e098      	b.n	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016152:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016154:	2b00      	cmp	r3, #0
 8016156:	f000 80ac 	beq.w	80162b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801615a:	f1bb 0f00 	cmp.w	fp, #0
 801615e:	d118      	bne.n	8016192 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8016160:	f8d8 0000 	ldr.w	r0, [r8]
 8016164:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016166:	6803      	ldr	r3, [r0, #0]
 8016168:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801616a:	4798      	blx	r3
 801616c:	4406      	add	r6, r0
 801616e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016170:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016172:	1af3      	subs	r3, r6, r3
 8016174:	4293      	cmp	r3, r2
 8016176:	dd17      	ble.n	80161a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8016178:	2c00      	cmp	r4, #0
 801617a:	f000 8098 	beq.w	80162ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801617e:	2c0a      	cmp	r4, #10
 8016180:	f040 8086 	bne.w	8016290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8016184:	240a      	movs	r4, #10
 8016186:	fab4 f084 	clz	r0, r4
 801618a:	0940      	lsrs	r0, r0, #5
 801618c:	b01f      	add	sp, #124	; 0x7c
 801618e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016192:	f8d8 0000 	ldr.w	r0, [r8]
 8016196:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016198:	6803      	ldr	r3, [r0, #0]
 801619a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801619c:	4798      	blx	r3
 801619e:	f1bb 0f01 	cmp.w	fp, #1
 80161a2:	eba6 0600 	sub.w	r6, r6, r0
 80161a6:	d0a4      	beq.n	80160f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80161a8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80161aa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80161ac:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80161b0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80161b4:	7b43      	ldrb	r3, [r0, #13]
 80161b6:	015b      	lsls	r3, r3, #5
 80161b8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80161bc:	7983      	ldrb	r3, [r0, #6]
 80161be:	4431      	add	r1, r6
 80161c0:	4313      	orrs	r3, r2
 80161c2:	440b      	add	r3, r1
 80161c4:	42bb      	cmp	r3, r7
 80161c6:	db5d      	blt.n	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80161c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80161ca:	4299      	cmp	r1, r3
 80161cc:	da5a      	bge.n	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80161ce:	f8d8 0000 	ldr.w	r0, [r8]
 80161d2:	6803      	ldr	r3, [r0, #0]
 80161d4:	42b7      	cmp	r7, r6
 80161d6:	bfc8      	it	gt
 80161d8:	1bbf      	subgt	r7, r7, r6
 80161da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80161dc:	bfcc      	ite	gt
 80161de:	b2bf      	uxthgt	r7, r7
 80161e0:	2700      	movle	r7, #0
 80161e2:	4798      	blx	r3
 80161e4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80161e6:	7b5a      	ldrb	r2, [r3, #13]
 80161e8:	00d1      	lsls	r1, r2, #3
 80161ea:	f401 7580 	and.w	r5, r1, #256	; 0x100
 80161ee:	7a19      	ldrb	r1, [r3, #8]
 80161f0:	4329      	orrs	r1, r5
 80161f2:	0655      	lsls	r5, r2, #25
 80161f4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80161f6:	bf44      	itt	mi
 80161f8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80161fc:	b209      	sxthmi	r1, r1
 80161fe:	1945      	adds	r5, r0, r5
 8016200:	1a6d      	subs	r5, r5, r1
 8016202:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016204:	b2ad      	uxth	r5, r5
 8016206:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801620a:	fa0f fa85 	sxth.w	sl, r5
 801620e:	4551      	cmp	r1, sl
 8016210:	dd3c      	ble.n	801628c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8016212:	0112      	lsls	r2, r2, #4
 8016214:	79d8      	ldrb	r0, [r3, #7]
 8016216:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801621a:	4302      	orrs	r2, r0
 801621c:	4492      	add	sl, r2
 801621e:	4551      	cmp	r1, sl
 8016220:	dc30      	bgt.n	8016284 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016222:	1b4d      	subs	r5, r1, r5
 8016224:	b22d      	sxth	r5, r5
 8016226:	468a      	mov	sl, r1
 8016228:	9319      	str	r3, [sp, #100]	; 0x64
 801622a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801622c:	f8d8 0000 	ldr.w	r0, [r8]
 8016230:	681a      	ldr	r2, [r3, #0]
 8016232:	6801      	ldr	r1, [r0, #0]
 8016234:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8016236:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8016238:	9313      	str	r3, [sp, #76]	; 0x4c
 801623a:	9218      	str	r2, [sp, #96]	; 0x60
 801623c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801623e:	4788      	blx	r1
 8016240:	f898 1006 	ldrb.w	r1, [r8, #6]
 8016244:	910b      	str	r1, [sp, #44]	; 0x2c
 8016246:	f898 100e 	ldrb.w	r1, [r8, #14]
 801624a:	910a      	str	r1, [sp, #40]	; 0x28
 801624c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8016250:	9109      	str	r1, [sp, #36]	; 0x24
 8016252:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8016256:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016258:	9305      	str	r3, [sp, #20]
 801625a:	b2ad      	uxth	r5, r5
 801625c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8016260:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8016264:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016266:	9304      	str	r3, [sp, #16]
 8016268:	4437      	add	r7, r6
 801626a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801626c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801626e:	9206      	str	r2, [sp, #24]
 8016270:	b23f      	sxth	r7, r7
 8016272:	f8cd a004 	str.w	sl, [sp, #4]
 8016276:	9700      	str	r7, [sp, #0]
 8016278:	681a      	ldr	r2, [r3, #0]
 801627a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801627c:	685b      	ldr	r3, [r3, #4]
 801627e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016280:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016282:	47a8      	blx	r5
 8016284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016286:	3301      	adds	r3, #1
 8016288:	930e      	str	r3, [sp, #56]	; 0x38
 801628a:	e6e1      	b.n	8016050 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801628c:	2500      	movs	r5, #0
 801628e:	e7cb      	b.n	8016228 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8016290:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016292:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016294:	3501      	adds	r5, #1
 8016296:	429d      	cmp	r5, r3
 8016298:	f6bf af75 	bge.w	8016186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801629c:	4659      	mov	r1, fp
 801629e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80162a0:	f7f2 fb92 	bl	80089c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80162a4:	4604      	mov	r4, r0
 80162a6:	b110      	cbz	r0, 80162ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80162a8:	280a      	cmp	r0, #10
 80162aa:	d1f2      	bne.n	8016292 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80162ac:	e76a      	b.n	8016184 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80162ae:	2400      	movs	r4, #0
 80162b0:	e769      	b.n	8016186 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80162b2:	f1bb 0f00 	cmp.w	fp, #0
 80162b6:	f43f af5a 	beq.w	801616e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80162ba:	e775      	b.n	80161a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080162bc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80162bc:	b530      	push	{r4, r5, lr}
 80162be:	8ac4      	ldrh	r4, [r0, #22]
 80162c0:	8b45      	ldrh	r5, [r0, #26]
 80162c2:	8343      	strh	r3, [r0, #26]
 80162c4:	442c      	add	r4, r5
 80162c6:	1ae4      	subs	r4, r4, r3
 80162c8:	82c4      	strh	r4, [r0, #22]
 80162ca:	8b83      	ldrh	r3, [r0, #28]
 80162cc:	8b04      	ldrh	r4, [r0, #24]
 80162ce:	4422      	add	r2, r4
 80162d0:	440c      	add	r4, r1
 80162d2:	1a59      	subs	r1, r3, r1
 80162d4:	83c2      	strh	r2, [r0, #30]
 80162d6:	8304      	strh	r4, [r0, #24]
 80162d8:	8381      	strh	r1, [r0, #28]
 80162da:	bd30      	pop	{r4, r5, pc}

080162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80162dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162e0:	4604      	mov	r4, r0
 80162e2:	8a47      	ldrh	r7, [r0, #18]
 80162e4:	68c0      	ldr	r0, [r0, #12]
 80162e6:	6803      	ldr	r3, [r0, #0]
 80162e8:	b085      	sub	sp, #20
 80162ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80162ec:	4798      	blx	r3
 80162ee:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80162f2:	7a63      	ldrb	r3, [r4, #9]
 80162f4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80162f8:	42b7      	cmp	r7, r6
 80162fa:	f103 33ff 	add.w	r3, r3, #4294967295
 80162fe:	bfac      	ite	ge
 8016300:	f04f 0900 	movge.w	r9, #0
 8016304:	f04f 0901 	movlt.w	r9, #1
 8016308:	2b05      	cmp	r3, #5
 801630a:	d804      	bhi.n	8016316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801630c:	e8df f003 	tbb	[pc, r3]
 8016310:	470e0854 	.word	0x470e0854
 8016314:	4c4c      	.short	0x4c4c
 8016316:	2500      	movs	r5, #0
 8016318:	46a9      	mov	r9, r5
 801631a:	462e      	mov	r6, r5
 801631c:	462f      	mov	r7, r5
 801631e:	e00d      	b.n	801633c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016320:	42b7      	cmp	r7, r6
 8016322:	bfb4      	ite	lt
 8016324:	2600      	movlt	r6, #0
 8016326:	2601      	movge	r6, #1
 8016328:	2500      	movs	r5, #0
 801632a:	e7f7      	b.n	801631c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801632c:	42b7      	cmp	r7, r6
 801632e:	464d      	mov	r5, r9
 8016330:	f04f 0900 	mov.w	r9, #0
 8016334:	bfb4      	ite	lt
 8016336:	2600      	movlt	r6, #0
 8016338:	2601      	movge	r6, #1
 801633a:	464f      	mov	r7, r9
 801633c:	f04f 0800 	mov.w	r8, #0
 8016340:	f8a4 8016 	strh.w	r8, [r4, #22]
 8016344:	f8a4 8018 	strh.w	r8, [r4, #24]
 8016348:	f8cd 8004 	str.w	r8, [sp, #4]
 801634c:	2300      	movs	r3, #0
 801634e:	9303      	str	r3, [sp, #12]
 8016350:	8823      	ldrh	r3, [r4, #0]
 8016352:	2b20      	cmp	r3, #32
 8016354:	d034      	beq.n	80163c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8016356:	f242 010b 	movw	r1, #8203	; 0x200b
 801635a:	1a5a      	subs	r2, r3, r1
 801635c:	f1d2 0a00 	rsbs	sl, r2, #0
 8016360:	eb4a 0a02 	adc.w	sl, sl, r2
 8016364:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016368:	4293      	cmp	r3, r2
 801636a:	d009      	beq.n	8016380 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801636c:	428b      	cmp	r3, r1
 801636e:	9a01      	ldr	r2, [sp, #4]
 8016370:	bf18      	it	ne
 8016372:	461a      	movne	r2, r3
 8016374:	9201      	str	r2, [sp, #4]
 8016376:	bf0c      	ite	eq
 8016378:	f04f 0a01 	moveq.w	sl, #1
 801637c:	f04f 0a00 	movne.w	sl, #0
 8016380:	ab03      	add	r3, sp, #12
 8016382:	68e2      	ldr	r2, [r4, #12]
 8016384:	7a21      	ldrb	r1, [r4, #8]
 8016386:	6860      	ldr	r0, [r4, #4]
 8016388:	f002 ff88 	bl	801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801638c:	8020      	strh	r0, [r4, #0]
 801638e:	b9d8      	cbnz	r0, 80163c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8016390:	8ba2      	ldrh	r2, [r4, #28]
 8016392:	2300      	movs	r3, #0
 8016394:	4611      	mov	r1, r2
 8016396:	4620      	mov	r0, r4
 8016398:	f7ff ff90 	bl	80162bc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801639c:	e06e      	b.n	801647c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801639e:	2500      	movs	r5, #0
 80163a0:	46a9      	mov	r9, r5
 80163a2:	462e      	mov	r6, r5
 80163a4:	2701      	movs	r7, #1
 80163a6:	e7c9      	b.n	801633c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80163a8:	42b7      	cmp	r7, r6
 80163aa:	f04f 0500 	mov.w	r5, #0
 80163ae:	bfb4      	ite	lt
 80163b0:	2700      	movlt	r7, #0
 80163b2:	2701      	movge	r7, #1
 80163b4:	462e      	mov	r6, r5
 80163b6:	e7c1      	b.n	801633c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80163b8:	2500      	movs	r5, #0
 80163ba:	46a9      	mov	r9, r5
 80163bc:	2601      	movs	r6, #1
 80163be:	e7ad      	b.n	801631c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80163c0:	9301      	str	r3, [sp, #4]
 80163c2:	f04f 0a01 	mov.w	sl, #1
 80163c6:	e7db      	b.n	8016380 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80163c8:	8b63      	ldrh	r3, [r4, #26]
 80163ca:	280a      	cmp	r0, #10
 80163cc:	f103 0301 	add.w	r3, r3, #1
 80163d0:	8363      	strh	r3, [r4, #26]
 80163d2:	d0dd      	beq.n	8016390 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80163d4:	9a03      	ldr	r2, [sp, #12]
 80163d6:	bb62      	cbnz	r2, 8016432 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80163d8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80163dc:	4298      	cmp	r0, r3
 80163de:	d003      	beq.n	80163e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80163e0:	f242 030b 	movw	r3, #8203	; 0x200b
 80163e4:	4298      	cmp	r0, r3
 80163e6:	d1b1      	bne.n	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80163e8:	8823      	ldrh	r3, [r4, #0]
 80163ea:	8ba1      	ldrh	r1, [r4, #28]
 80163ec:	2b20      	cmp	r3, #32
 80163ee:	d003      	beq.n	80163f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80163f0:	f242 000b 	movw	r0, #8203	; 0x200b
 80163f4:	4283      	cmp	r3, r0
 80163f6:	d131      	bne.n	801645c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80163f8:	f1ba 0f00 	cmp.w	sl, #0
 80163fc:	bf0a      	itet	eq
 80163fe:	4688      	moveq	r8, r1
 8016400:	4650      	movne	r0, sl
 8016402:	2001      	moveq	r0, #1
 8016404:	440a      	add	r2, r1
 8016406:	8b23      	ldrh	r3, [r4, #24]
 8016408:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801640c:	b292      	uxth	r2, r2
 801640e:	83a2      	strh	r2, [r4, #28]
 8016410:	4413      	add	r3, r2
 8016412:	f1b9 0f00 	cmp.w	r9, #0
 8016416:	d102      	bne.n	801641e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8016418:	2d00      	cmp	r5, #0
 801641a:	d042      	beq.n	80164a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801641c:	b300      	cbz	r0, 8016460 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801641e:	8c21      	ldrh	r1, [r4, #32]
 8016420:	4419      	add	r1, r3
 8016422:	458c      	cmp	ip, r1
 8016424:	da37      	bge.n	8016496 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8016426:	8ae1      	ldrh	r1, [r4, #22]
 8016428:	2900      	cmp	r1, #0
 801642a:	d034      	beq.n	8016496 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801642c:	4563      	cmp	r3, ip
 801642e:	dd8d      	ble.n	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016430:	e01d      	b.n	801646e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8016432:	8893      	ldrh	r3, [r2, #4]
 8016434:	8023      	strh	r3, [r4, #0]
 8016436:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801643a:	9901      	ldr	r1, [sp, #4]
 801643c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8016440:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8016444:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8016448:	ea4b 0b00 	orr.w	fp, fp, r0
 801644c:	68e0      	ldr	r0, [r4, #12]
 801644e:	6803      	ldr	r3, [r0, #0]
 8016450:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016452:	4798      	blx	r3
 8016454:	eb0b 0200 	add.w	r2, fp, r0
 8016458:	b292      	uxth	r2, r2
 801645a:	e7c5      	b.n	80163e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801645c:	2000      	movs	r0, #0
 801645e:	e7d1      	b.n	8016404 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8016460:	4563      	cmp	r3, ip
 8016462:	f77f af73 	ble.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016466:	8ae3      	ldrh	r3, [r4, #22]
 8016468:	2b00      	cmp	r3, #0
 801646a:	f43f af6f 	beq.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801646e:	2301      	movs	r3, #1
 8016470:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8016474:	8c22      	ldrh	r2, [r4, #32]
 8016476:	8be3      	ldrh	r3, [r4, #30]
 8016478:	4413      	add	r3, r2
 801647a:	83e3      	strh	r3, [r4, #30]
 801647c:	68e0      	ldr	r0, [r4, #12]
 801647e:	6803      	ldr	r3, [r0, #0]
 8016480:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016482:	4798      	blx	r3
 8016484:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8016488:	4418      	add	r0, r3
 801648a:	8a63      	ldrh	r3, [r4, #18]
 801648c:	1a18      	subs	r0, r3, r0
 801648e:	8260      	strh	r0, [r4, #18]
 8016490:	b005      	add	sp, #20
 8016492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016496:	2300      	movs	r3, #0
 8016498:	4611      	mov	r1, r2
 801649a:	4620      	mov	r0, r4
 801649c:	f7ff ff0e 	bl	80162bc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80164a0:	e754      	b.n	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80164a2:	4563      	cmp	r3, ip
 80164a4:	dd14      	ble.n	80164d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80164a6:	b117      	cbz	r7, 80164ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80164a8:	2301      	movs	r3, #1
 80164aa:	460a      	mov	r2, r1
 80164ac:	e772      	b.n	8016394 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80164ae:	2e00      	cmp	r6, #0
 80164b0:	f43f af4c 	beq.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80164b4:	2800      	cmp	r0, #0
 80164b6:	f47f af49 	bne.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80164ba:	f1ba 0f00 	cmp.w	sl, #0
 80164be:	d002      	beq.n	80164c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80164c0:	2301      	movs	r3, #1
 80164c2:	4642      	mov	r2, r8
 80164c4:	e767      	b.n	8016396 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80164c6:	8ae3      	ldrh	r3, [r4, #22]
 80164c8:	2b00      	cmp	r3, #0
 80164ca:	f43f af3f 	beq.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80164ce:	e7d5      	b.n	801647c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80164d0:	2800      	cmp	r0, #0
 80164d2:	f47f af3b 	bne.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80164d6:	f1ba 0f00 	cmp.w	sl, #0
 80164da:	f43f af37 	beq.w	801634c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80164de:	2301      	movs	r3, #1
 80164e0:	4642      	mov	r2, r8
 80164e2:	e7da      	b.n	801649a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080164e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80164e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80164e6:	4605      	mov	r5, r0
 80164e8:	b08f      	sub	sp, #60	; 0x3c
 80164ea:	4617      	mov	r7, r2
 80164ec:	461c      	mov	r4, r3
 80164ee:	460e      	mov	r6, r1
 80164f0:	b1d1      	cbz	r1, 8016528 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80164f2:	681b      	ldr	r3, [r3, #0]
 80164f4:	4620      	mov	r0, r4
 80164f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80164f8:	4798      	blx	r3
 80164fa:	4240      	negs	r0, r0
 80164fc:	b200      	sxth	r0, r0
 80164fe:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8016502:	9603      	str	r6, [sp, #12]
 8016504:	9700      	str	r7, [sp, #0]
 8016506:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801650a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801650e:	4629      	mov	r1, r5
 8016510:	a805      	add	r0, sp, #20
 8016512:	f7ff fcbf 	bl	8015e94 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8016516:	2401      	movs	r4, #1
 8016518:	a805      	add	r0, sp, #20
 801651a:	f7ff fedf 	bl	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801651e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8016522:	b163      	cbz	r3, 801653e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8016524:	3401      	adds	r4, #1
 8016526:	e7f7      	b.n	8016518 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8016528:	f002 ff86 	bl	8019438 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801652c:	2401      	movs	r4, #1
 801652e:	280a      	cmp	r0, #10
 8016530:	4628      	mov	r0, r5
 8016532:	bf08      	it	eq
 8016534:	3401      	addeq	r4, #1
 8016536:	f002 ff7f 	bl	8019438 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801653a:	2800      	cmp	r0, #0
 801653c:	d1f7      	bne.n	801652e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801653e:	b2a0      	uxth	r0, r4
 8016540:	b00f      	add	sp, #60	; 0x3c
 8016542:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016544 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8016544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016548:	b0e3      	sub	sp, #396	; 0x18c
 801654a:	461c      	mov	r4, r3
 801654c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801654e:	4683      	mov	fp, r0
 8016550:	4688      	mov	r8, r1
 8016552:	2b00      	cmp	r3, #0
 8016554:	f000 8112 	beq.w	801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016558:	6823      	ldr	r3, [r4, #0]
 801655a:	2b00      	cmp	r3, #0
 801655c:	f000 810e 	beq.w	801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016560:	7ba3      	ldrb	r3, [r4, #14]
 8016562:	2b00      	cmp	r3, #0
 8016564:	f000 810a 	beq.w	801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016568:	6810      	ldr	r0, [r2, #0]
 801656a:	6851      	ldr	r1, [r2, #4]
 801656c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8016570:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8016574:	ad0a      	add	r5, sp, #40	; 0x28
 8016576:	462b      	mov	r3, r5
 8016578:	c303      	stmia	r3!, {r0, r1}
 801657a:	2100      	movs	r1, #0
 801657c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8016580:	910c      	str	r1, [sp, #48]	; 0x30
 8016582:	79a2      	ldrb	r2, [r4, #6]
 8016584:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016588:	a90c      	add	r1, sp, #48	; 0x30
 801658a:	4628      	mov	r0, r5
 801658c:	f7ff fd01 	bl	8015f92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016590:	a90c      	add	r1, sp, #48	; 0x30
 8016592:	4608      	mov	r0, r1
 8016594:	79a2      	ldrb	r2, [r4, #6]
 8016596:	f7ff fcfc 	bl	8015f92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801659a:	a817      	add	r0, sp, #92	; 0x5c
 801659c:	f002 fb20 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 80165a0:	6820      	ldr	r0, [r4, #0]
 80165a2:	6803      	ldr	r3, [r0, #0]
 80165a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80165a6:	4798      	blx	r3
 80165a8:	4606      	mov	r6, r0
 80165aa:	6820      	ldr	r0, [r4, #0]
 80165ac:	6803      	ldr	r3, [r0, #0]
 80165ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80165b0:	4798      	blx	r3
 80165b2:	4633      	mov	r3, r6
 80165b4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80165b6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80165b8:	9000      	str	r0, [sp, #0]
 80165ba:	a817      	add	r0, sp, #92	; 0x5c
 80165bc:	f002 fb6b 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80165c0:	6820      	ldr	r0, [r4, #0]
 80165c2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80165c6:	6803      	ldr	r3, [r0, #0]
 80165c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80165ca:	4798      	blx	r3
 80165cc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80165d0:	6823      	ldr	r3, [r4, #0]
 80165d2:	4607      	mov	r7, r0
 80165d4:	4406      	add	r6, r0
 80165d6:	a830      	add	r0, sp, #192	; 0xc0
 80165d8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80165dc:	f002 fb00 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 80165e0:	7c23      	ldrb	r3, [r4, #16]
 80165e2:	b17b      	cbz	r3, 8016604 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80165e4:	6820      	ldr	r0, [r4, #0]
 80165e6:	6803      	ldr	r3, [r0, #0]
 80165e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80165ea:	4798      	blx	r3
 80165ec:	9009      	str	r0, [sp, #36]	; 0x24
 80165ee:	6820      	ldr	r0, [r4, #0]
 80165f0:	6802      	ldr	r2, [r0, #0]
 80165f2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80165f4:	4790      	blx	r2
 80165f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165f8:	9000      	str	r0, [sp, #0]
 80165fa:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80165fc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80165fe:	a830      	add	r0, sp, #192	; 0xc0
 8016600:	f002 fb49 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016604:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016608:	7be2      	ldrb	r2, [r4, #15]
 801660a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801660e:	1a8a      	subs	r2, r1, r2
 8016610:	7c21      	ldrb	r1, [r4, #16]
 8016612:	9103      	str	r1, [sp, #12]
 8016614:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8016618:	9102      	str	r1, [sp, #8]
 801661a:	6821      	ldr	r1, [r4, #0]
 801661c:	9101      	str	r1, [sp, #4]
 801661e:	7961      	ldrb	r1, [r4, #5]
 8016620:	9100      	str	r1, [sp, #0]
 8016622:	b292      	uxth	r2, r2
 8016624:	a930      	add	r1, sp, #192	; 0xc0
 8016626:	a80e      	add	r0, sp, #56	; 0x38
 8016628:	f7ff fc34 	bl	8015e94 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801662c:	2e00      	cmp	r6, #0
 801662e:	dc5b      	bgt.n	80166e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8016630:	af17      	add	r7, sp, #92	; 0x5c
 8016632:	f04f 0900 	mov.w	r9, #0
 8016636:	7c23      	ldrb	r3, [r4, #16]
 8016638:	2b00      	cmp	r3, #0
 801663a:	f000 80b1 	beq.w	80167a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801663e:	a80e      	add	r0, sp, #56	; 0x38
 8016640:	f7ff fe4c 	bl	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016644:	f1ba 0f00 	cmp.w	sl, #0
 8016648:	f000 80a5 	beq.w	8016796 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801664c:	7c23      	ldrb	r3, [r4, #16]
 801664e:	9309      	str	r3, [sp, #36]	; 0x24
 8016650:	2264      	movs	r2, #100	; 0x64
 8016652:	4639      	mov	r1, r7
 8016654:	a849      	add	r0, sp, #292	; 0x124
 8016656:	f015 fde6 	bl	802c226 <memcpy>
 801665a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801665c:	2b00      	cmp	r3, #0
 801665e:	f000 80a7 	beq.w	80167b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8016662:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8016666:	7922      	ldrb	r2, [r4, #4]
 8016668:	2a01      	cmp	r2, #1
 801666a:	f040 808a 	bne.w	8016782 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801666e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8016672:	1ac0      	subs	r0, r0, r3
 8016674:	2302      	movs	r3, #2
 8016676:	fb90 f0f3 	sdiv	r0, r0, r3
 801667a:	b200      	sxth	r0, r0
 801667c:	7c23      	ldrb	r3, [r4, #16]
 801667e:	2b00      	cmp	r3, #0
 8016680:	f000 808b 	beq.w	801679a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016684:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8016688:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801668c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016690:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016694:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8016698:	4410      	add	r0, r2
 801669a:	b200      	sxth	r0, r0
 801669c:	9000      	str	r0, [sp, #0]
 801669e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80166a2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80166a6:	4642      	mov	r2, r8
 80166a8:	2100      	movs	r1, #0
 80166aa:	4658      	mov	r0, fp
 80166ac:	f7ff fca2 	bl	8015ff4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80166b0:	2800      	cmp	r0, #0
 80166b2:	d163      	bne.n	801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80166b4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80166b8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80166bc:	b2b2      	uxth	r2, r6
 80166be:	4413      	add	r3, r2
 80166c0:	1a8a      	subs	r2, r1, r2
 80166c2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80166c6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80166ca:	b21b      	sxth	r3, r3
 80166cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80166d0:	2a00      	cmp	r2, #0
 80166d2:	d153      	bne.n	801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80166d4:	6822      	ldr	r2, [r4, #0]
 80166d6:	8869      	ldrh	r1, [r5, #2]
 80166d8:	7a12      	ldrb	r2, [r2, #8]
 80166da:	1a9b      	subs	r3, r3, r2
 80166dc:	88ea      	ldrh	r2, [r5, #6]
 80166de:	440a      	add	r2, r1
 80166e0:	b212      	sxth	r2, r2
 80166e2:	4293      	cmp	r3, r2
 80166e4:	dda7      	ble.n	8016636 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80166e6:	e049      	b.n	801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80166e8:	7c23      	ldrb	r3, [r4, #16]
 80166ea:	444f      	add	r7, r9
 80166ec:	b1c3      	cbz	r3, 8016720 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80166ee:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80166f2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80166f6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80166fa:	443b      	add	r3, r7
 80166fc:	4293      	cmp	r3, r2
 80166fe:	da97      	bge.n	8016630 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016700:	a80e      	add	r0, sp, #56	; 0x38
 8016702:	f7ff fdeb 	bl	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016706:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801670a:	3b01      	subs	r3, #1
 801670c:	b29b      	uxth	r3, r3
 801670e:	454b      	cmp	r3, r9
 8016710:	9309      	str	r3, [sp, #36]	; 0x24
 8016712:	d021      	beq.n	8016758 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8016714:	7961      	ldrb	r1, [r4, #5]
 8016716:	a817      	add	r0, sp, #92	; 0x5c
 8016718:	f7f2 f956 	bl	80089c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801671c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801671e:	e7f4      	b.n	801670a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8016720:	fa1f f986 	uxth.w	r9, r6
 8016724:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016728:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801672c:	443b      	add	r3, r7
 801672e:	4293      	cmp	r3, r2
 8016730:	f6bf af7e 	bge.w	8016630 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016734:	a817      	add	r0, sp, #92	; 0x5c
 8016736:	f002 fe7f 	bl	8019438 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801673a:	b1f8      	cbz	r0, 801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801673c:	280a      	cmp	r0, #10
 801673e:	d1f1      	bne.n	8016724 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016740:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016744:	444b      	add	r3, r9
 8016746:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801674a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801674e:	eba3 0309 	sub.w	r3, r3, r9
 8016752:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016756:	e7e5      	b.n	8016724 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8016758:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801675c:	b2b3      	uxth	r3, r6
 801675e:	441a      	add	r2, r3
 8016760:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8016764:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8016768:	1ad3      	subs	r3, r2, r3
 801676a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801676e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016772:	b11b      	cbz	r3, 801677c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016774:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8016778:	2b00      	cmp	r3, #0
 801677a:	d0ba      	beq.n	80166f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801677c:	b063      	add	sp, #396	; 0x18c
 801677e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016782:	2a02      	cmp	r2, #2
 8016784:	d105      	bne.n	8016792 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8016786:	7be2      	ldrb	r2, [r4, #15]
 8016788:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801678c:	1a80      	subs	r0, r0, r2
 801678e:	1ac0      	subs	r0, r0, r3
 8016790:	e773      	b.n	801667a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016792:	2000      	movs	r0, #0
 8016794:	e772      	b.n	801667c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016796:	7be0      	ldrb	r0, [r4, #15]
 8016798:	e770      	b.n	801667c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801679a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801679e:	e773      	b.n	8016688 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80167a0:	f1ba 0f00 	cmp.w	sl, #0
 80167a4:	d0f7      	beq.n	8016796 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80167a6:	2264      	movs	r2, #100	; 0x64
 80167a8:	4639      	mov	r1, r7
 80167aa:	a849      	add	r0, sp, #292	; 0x124
 80167ac:	f015 fd3b 	bl	802c226 <memcpy>
 80167b0:	2300      	movs	r3, #0
 80167b2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80167b6:	6821      	ldr	r1, [r4, #0]
 80167b8:	a849      	add	r0, sp, #292	; 0x124
 80167ba:	f7ff fbae 	bl	8015f1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80167be:	b203      	sxth	r3, r0
 80167c0:	e751      	b.n	8016666 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080167c2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80167c2:	2b03      	cmp	r3, #3
 80167c4:	d818      	bhi.n	80167f8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80167c6:	e8df f003 	tbb	[pc, r3]
 80167ca:	0602      	.short	0x0602
 80167cc:	130d      	.short	0x130d
 80167ce:	f9b0 2000 	ldrsh.w	r2, [r0]
 80167d2:	1850      	adds	r0, r2, r1
 80167d4:	4770      	bx	lr
 80167d6:	8803      	ldrh	r3, [r0, #0]
 80167d8:	8880      	ldrh	r0, [r0, #4]
 80167da:	4418      	add	r0, r3
 80167dc:	b200      	sxth	r0, r0
 80167de:	1a80      	subs	r0, r0, r2
 80167e0:	3801      	subs	r0, #1
 80167e2:	4770      	bx	lr
 80167e4:	8803      	ldrh	r3, [r0, #0]
 80167e6:	8880      	ldrh	r0, [r0, #4]
 80167e8:	4418      	add	r0, r3
 80167ea:	b200      	sxth	r0, r0
 80167ec:	1a40      	subs	r0, r0, r1
 80167ee:	e7f7      	b.n	80167e0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80167f0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80167f4:	4410      	add	r0, r2
 80167f6:	4770      	bx	lr
 80167f8:	2000      	movs	r0, #0
 80167fa:	4770      	bx	lr

080167fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80167fc:	2b03      	cmp	r3, #3
 80167fe:	d817      	bhi.n	8016830 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016800:	e8df f003 	tbb	[pc, r3]
 8016804:	10090602 	.word	0x10090602
 8016808:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801680c:	1850      	adds	r0, r2, r1
 801680e:	4770      	bx	lr
 8016810:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016814:	e7fa      	b.n	801680c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8016816:	8843      	ldrh	r3, [r0, #2]
 8016818:	88c0      	ldrh	r0, [r0, #6]
 801681a:	4418      	add	r0, r3
 801681c:	b200      	sxth	r0, r0
 801681e:	1a80      	subs	r0, r0, r2
 8016820:	3801      	subs	r0, #1
 8016822:	4770      	bx	lr
 8016824:	8843      	ldrh	r3, [r0, #2]
 8016826:	88c0      	ldrh	r0, [r0, #6]
 8016828:	4418      	add	r0, r3
 801682a:	b200      	sxth	r0, r0
 801682c:	1a40      	subs	r0, r0, r1
 801682e:	e7f7      	b.n	8016820 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8016830:	2000      	movs	r0, #0
 8016832:	4770      	bx	lr

08016834 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8016834:	4b01      	ldr	r3, [pc, #4]	; (801683c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8016836:	2200      	movs	r2, #0
 8016838:	601a      	str	r2, [r3, #0]
 801683a:	4770      	bx	lr
 801683c:	2001384c 	.word	0x2001384c

08016840 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8016840:	4603      	mov	r3, r0
 8016842:	b1c8      	cbz	r0, 8016878 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8016844:	0c02      	lsrs	r2, r0, #16
 8016846:	0412      	lsls	r2, r2, #16
 8016848:	b9a2      	cbnz	r2, 8016874 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801684a:	0403      	lsls	r3, r0, #16
 801684c:	2010      	movs	r0, #16
 801684e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016852:	bf04      	itt	eq
 8016854:	021b      	lsleq	r3, r3, #8
 8016856:	3008      	addeq	r0, #8
 8016858:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801685c:	bf04      	itt	eq
 801685e:	011b      	lsleq	r3, r3, #4
 8016860:	3004      	addeq	r0, #4
 8016862:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016866:	bf04      	itt	eq
 8016868:	009b      	lsleq	r3, r3, #2
 801686a:	3002      	addeq	r0, #2
 801686c:	2b00      	cmp	r3, #0
 801686e:	db04      	blt.n	801687a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016870:	3001      	adds	r0, #1
 8016872:	4770      	bx	lr
 8016874:	2000      	movs	r0, #0
 8016876:	e7ea      	b.n	801684e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016878:	2020      	movs	r0, #32
 801687a:	4770      	bx	lr

0801687c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801687c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016880:	b087      	sub	sp, #28
 8016882:	460d      	mov	r5, r1
 8016884:	4616      	mov	r6, r2
 8016886:	4698      	mov	r8, r3
 8016888:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801688c:	4601      	mov	r1, r0
 801688e:	b120      	cbz	r0, 801689a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016890:	b11a      	cbz	r2, 801689a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016892:	2d1f      	cmp	r5, #31
 8016894:	d801      	bhi.n	801689a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016896:	2b1f      	cmp	r3, #31
 8016898:	d904      	bls.n	80168a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801689a:	2000      	movs	r0, #0
 801689c:	6038      	str	r0, [r7, #0]
 801689e:	b007      	add	sp, #28
 80168a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80168a4:	b97d      	cbnz	r5, 80168c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80168a6:	b143      	cbz	r3, 80168ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80168a8:	4602      	mov	r2, r0
 80168aa:	e9cd 4700 	strd	r4, r7, [sp]
 80168ae:	462b      	mov	r3, r5
 80168b0:	4641      	mov	r1, r8
 80168b2:	4630      	mov	r0, r6
 80168b4:	f7ff ffe2 	bl	801687c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80168b8:	e7f1      	b.n	801689e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80168ba:	f04f 33ff 	mov.w	r3, #4294967295
 80168be:	603b      	str	r3, [r7, #0]
 80168c0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80168c4:	e7eb      	b.n	801689e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80168c6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80168ca:	d106      	bne.n	80168da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80168cc:	4346      	muls	r6, r0
 80168ce:	fbb6 f0f4 	udiv	r0, r6, r4
 80168d2:	fb04 6610 	mls	r6, r4, r0, r6
 80168d6:	603e      	str	r6, [r7, #0]
 80168d8:	e7e1      	b.n	801689e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80168da:	2201      	movs	r2, #1
 80168dc:	40aa      	lsls	r2, r5
 80168de:	3a01      	subs	r2, #1
 80168e0:	4016      	ands	r6, r2
 80168e2:	fa00 fb05 	lsl.w	fp, r0, r5
 80168e6:	4630      	mov	r0, r6
 80168e8:	fbbb f9f4 	udiv	r9, fp, r4
 80168ec:	fb0a f309 	mul.w	r3, sl, r9
 80168f0:	9303      	str	r3, [sp, #12]
 80168f2:	f7ff ffa5 	bl	8016840 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80168f6:	462b      	mov	r3, r5
 80168f8:	460a      	mov	r2, r1
 80168fa:	e9cd 4700 	strd	r4, r7, [sp]
 80168fe:	4601      	mov	r1, r0
 8016900:	4630      	mov	r0, r6
 8016902:	f7ff ffbb 	bl	801687c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016906:	fb04 b919 	mls	r9, r4, r9, fp
 801690a:	4606      	mov	r6, r0
 801690c:	4648      	mov	r0, r9
 801690e:	eb05 0108 	add.w	r1, r5, r8
 8016912:	f7ff ff95 	bl	8016840 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016916:	ab05      	add	r3, sp, #20
 8016918:	e9cd 4300 	strd	r4, r3, [sp]
 801691c:	464a      	mov	r2, r9
 801691e:	4603      	mov	r3, r0
 8016920:	4650      	mov	r0, sl
 8016922:	f7ff ffab 	bl	801687c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016926:	6839      	ldr	r1, [r7, #0]
 8016928:	9a05      	ldr	r2, [sp, #20]
 801692a:	9b03      	ldr	r3, [sp, #12]
 801692c:	4411      	add	r1, r2
 801692e:	fbb1 f2f4 	udiv	r2, r1, r4
 8016932:	18d3      	adds	r3, r2, r3
 8016934:	441e      	add	r6, r3
 8016936:	fb04 1412 	mls	r4, r4, r2, r1
 801693a:	4430      	add	r0, r6
 801693c:	603c      	str	r4, [r7, #0]
 801693e:	e7ae      	b.n	801689e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8016940:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016944:	b085      	sub	sp, #20
 8016946:	f1b0 0900 	subs.w	r9, r0, #0
 801694a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801694c:	461d      	mov	r5, r3
 801694e:	bfbf      	itttt	lt
 8016950:	6823      	ldrlt	r3, [r4, #0]
 8016952:	425b      	neglt	r3, r3
 8016954:	f1c9 0900 	rsblt	r9, r9, #0
 8016958:	6023      	strlt	r3, [r4, #0]
 801695a:	bfb4      	ite	lt
 801695c:	f04f 36ff 	movlt.w	r6, #4294967295
 8016960:	2601      	movge	r6, #1
 8016962:	2a00      	cmp	r2, #0
 8016964:	4617      	mov	r7, r2
 8016966:	da04      	bge.n	8016972 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8016968:	6823      	ldr	r3, [r4, #0]
 801696a:	425b      	negs	r3, r3
 801696c:	4257      	negs	r7, r2
 801696e:	4276      	negs	r6, r6
 8016970:	6023      	str	r3, [r4, #0]
 8016972:	2d00      	cmp	r5, #0
 8016974:	4638      	mov	r0, r7
 8016976:	bfba      	itte	lt
 8016978:	426d      	neglt	r5, r5
 801697a:	f04f 38ff 	movlt.w	r8, #4294967295
 801697e:	f04f 0801 	movge.w	r8, #1
 8016982:	f7ff ff5d 	bl	8016840 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016986:	ab03      	add	r3, sp, #12
 8016988:	e9cd 5300 	strd	r5, r3, [sp]
 801698c:	463a      	mov	r2, r7
 801698e:	4603      	mov	r3, r0
 8016990:	4648      	mov	r0, r9
 8016992:	f7ff ff73 	bl	801687c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016996:	6823      	ldr	r3, [r4, #0]
 8016998:	9a03      	ldr	r2, [sp, #12]
 801699a:	4546      	cmp	r6, r8
 801699c:	441a      	add	r2, r3
 801699e:	fb92 f3f5 	sdiv	r3, r2, r5
 80169a2:	4418      	add	r0, r3
 80169a4:	bf18      	it	ne
 80169a6:	4240      	negne	r0, r0
 80169a8:	fb05 2313 	mls	r3, r5, r3, r2
 80169ac:	1c72      	adds	r2, r6, #1
 80169ae:	6023      	str	r3, [r4, #0]
 80169b0:	d105      	bne.n	80169be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80169b2:	2b00      	cmp	r3, #0
 80169b4:	f1c3 0200 	rsb	r2, r3, #0
 80169b8:	db0b      	blt.n	80169d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80169ba:	6022      	str	r2, [r4, #0]
 80169bc:	e006      	b.n	80169cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80169be:	2e01      	cmp	r6, #1
 80169c0:	d104      	bne.n	80169cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80169c2:	2b00      	cmp	r3, #0
 80169c4:	da02      	bge.n	80169cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80169c6:	442b      	add	r3, r5
 80169c8:	3801      	subs	r0, #1
 80169ca:	6023      	str	r3, [r4, #0]
 80169cc:	b005      	add	sp, #20
 80169ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80169d2:	3801      	subs	r0, #1
 80169d4:	1b52      	subs	r2, r2, r5
 80169d6:	e7f0      	b.n	80169ba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080169d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80169d8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80169dc:	4c1c      	ldr	r4, [pc, #112]	; (8016a50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80169de:	6807      	ldr	r7, [r0, #0]
 80169e0:	69a3      	ldr	r3, [r4, #24]
 80169e2:	4605      	mov	r5, r0
 80169e4:	b92b      	cbnz	r3, 80169f2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80169e6:	6840      	ldr	r0, [r0, #4]
 80169e8:	e9c5 7000 	strd	r7, r0, [r5]
 80169ec:	b004      	add	sp, #16
 80169ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80169f2:	68a2      	ldr	r2, [r4, #8]
 80169f4:	6820      	ldr	r0, [r4, #0]
 80169f6:	ae04      	add	r6, sp, #16
 80169f8:	f04f 0802 	mov.w	r8, #2
 80169fc:	fb93 f1f8 	sdiv	r1, r3, r8
 8016a00:	440a      	add	r2, r1
 8016a02:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016a06:	69e1      	ldr	r1, [r4, #28]
 8016a08:	9600      	str	r6, [sp, #0]
 8016a0a:	463a      	mov	r2, r7
 8016a0c:	f7ff ff98 	bl	8016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016a10:	69a3      	ldr	r3, [r4, #24]
 8016a12:	686a      	ldr	r2, [r5, #4]
 8016a14:	6a21      	ldr	r1, [r4, #32]
 8016a16:	9600      	str	r6, [sp, #0]
 8016a18:	4607      	mov	r7, r0
 8016a1a:	6860      	ldr	r0, [r4, #4]
 8016a1c:	f7ff ff90 	bl	8016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016a20:	6962      	ldr	r2, [r4, #20]
 8016a22:	69a3      	ldr	r3, [r4, #24]
 8016a24:	fb93 f8f8 	sdiv	r8, r3, r8
 8016a28:	4442      	add	r2, r8
 8016a2a:	9203      	str	r2, [sp, #12]
 8016a2c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8016a2e:	682a      	ldr	r2, [r5, #0]
 8016a30:	9600      	str	r6, [sp, #0]
 8016a32:	4407      	add	r7, r0
 8016a34:	68e0      	ldr	r0, [r4, #12]
 8016a36:	f7ff ff83 	bl	8016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016a3a:	9600      	str	r6, [sp, #0]
 8016a3c:	4680      	mov	r8, r0
 8016a3e:	69a3      	ldr	r3, [r4, #24]
 8016a40:	686a      	ldr	r2, [r5, #4]
 8016a42:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8016a44:	6920      	ldr	r0, [r4, #16]
 8016a46:	f7ff ff7b 	bl	8016940 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016a4a:	4440      	add	r0, r8
 8016a4c:	e7cc      	b.n	80169e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8016a4e:	bf00      	nop
 8016a50:	20013850 	.word	0x20013850

08016a54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8016a54:	4b07      	ldr	r3, [pc, #28]	; (8016a74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8016a56:	781b      	ldrb	r3, [r3, #0]
 8016a58:	2b01      	cmp	r3, #1
 8016a5a:	d109      	bne.n	8016a70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8016a5c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016a60:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016a64:	8003      	strh	r3, [r0, #0]
 8016a66:	4b04      	ldr	r3, [pc, #16]	; (8016a78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8016a68:	881b      	ldrh	r3, [r3, #0]
 8016a6a:	3b01      	subs	r3, #1
 8016a6c:	1a9b      	subs	r3, r3, r2
 8016a6e:	800b      	strh	r3, [r1, #0]
 8016a70:	4770      	bx	lr
 8016a72:	bf00      	nop
 8016a74:	20013834 	.word	0x20013834
 8016a78:	20013830 	.word	0x20013830

08016a7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8016a7c:	b510      	push	{r4, lr}
 8016a7e:	4b07      	ldr	r3, [pc, #28]	; (8016a9c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016a80:	781b      	ldrb	r3, [r3, #0]
 8016a82:	2b01      	cmp	r3, #1
 8016a84:	d108      	bne.n	8016a98 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016a86:	4b06      	ldr	r3, [pc, #24]	; (8016aa0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016a88:	880c      	ldrh	r4, [r1, #0]
 8016a8a:	881b      	ldrh	r3, [r3, #0]
 8016a8c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016a90:	3b01      	subs	r3, #1
 8016a92:	1b1b      	subs	r3, r3, r4
 8016a94:	8003      	strh	r3, [r0, #0]
 8016a96:	800a      	strh	r2, [r1, #0]
 8016a98:	bd10      	pop	{r4, pc}
 8016a9a:	bf00      	nop
 8016a9c:	20013834 	.word	0x20013834
 8016aa0:	20013830 	.word	0x20013830

08016aa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016aa4:	b510      	push	{r4, lr}
 8016aa6:	4b0a      	ldr	r3, [pc, #40]	; (8016ad0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016aa8:	781b      	ldrb	r3, [r3, #0]
 8016aaa:	2b01      	cmp	r3, #1
 8016aac:	d10e      	bne.n	8016acc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8016aae:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016ab2:	8843      	ldrh	r3, [r0, #2]
 8016ab4:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016ab8:	8044      	strh	r4, [r0, #2]
 8016aba:	18ca      	adds	r2, r1, r3
 8016abc:	4b05      	ldr	r3, [pc, #20]	; (8016ad4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8016abe:	881b      	ldrh	r3, [r3, #0]
 8016ac0:	1a9b      	subs	r3, r3, r2
 8016ac2:	8003      	strh	r3, [r0, #0]
 8016ac4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016ac8:	80c3      	strh	r3, [r0, #6]
 8016aca:	8081      	strh	r1, [r0, #4]
 8016acc:	bd10      	pop	{r4, pc}
 8016ace:	bf00      	nop
 8016ad0:	20013834 	.word	0x20013834
 8016ad4:	20013830 	.word	0x20013830

08016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016ad8:	4b08      	ldr	r3, [pc, #32]	; (8016afc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8016ada:	781b      	ldrb	r3, [r3, #0]
 8016adc:	2b01      	cmp	r3, #1
 8016ade:	d10c      	bne.n	8016afa <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016ae0:	8803      	ldrh	r3, [r0, #0]
 8016ae2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016ae6:	8842      	ldrh	r2, [r0, #2]
 8016ae8:	8002      	strh	r2, [r0, #0]
 8016aea:	185a      	adds	r2, r3, r1
 8016aec:	4b04      	ldr	r3, [pc, #16]	; (8016b00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8016aee:	881b      	ldrh	r3, [r3, #0]
 8016af0:	1a9b      	subs	r3, r3, r2
 8016af2:	8043      	strh	r3, [r0, #2]
 8016af4:	88c3      	ldrh	r3, [r0, #6]
 8016af6:	8083      	strh	r3, [r0, #4]
 8016af8:	80c1      	strh	r1, [r0, #6]
 8016afa:	4770      	bx	lr
 8016afc:	20013834 	.word	0x20013834
 8016b00:	20013830 	.word	0x20013830

08016b04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016b04:	b510      	push	{r4, lr}
 8016b06:	4b07      	ldr	r3, [pc, #28]	; (8016b24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016b08:	781b      	ldrb	r3, [r3, #0]
 8016b0a:	2b01      	cmp	r3, #1
 8016b0c:	d108      	bne.n	8016b20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8016b0e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016b12:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016b16:	8003      	strh	r3, [r0, #0]
 8016b18:	8893      	ldrh	r3, [r2, #4]
 8016b1a:	3b01      	subs	r3, #1
 8016b1c:	1b1b      	subs	r3, r3, r4
 8016b1e:	800b      	strh	r3, [r1, #0]
 8016b20:	bd10      	pop	{r4, pc}
 8016b22:	bf00      	nop
 8016b24:	20013834 	.word	0x20013834

08016b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8016b28:	4b0b      	ldr	r3, [pc, #44]	; (8016b58 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8016b2a:	781b      	ldrb	r3, [r3, #0]
 8016b2c:	2b01      	cmp	r3, #1
 8016b2e:	d111      	bne.n	8016b54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8016b30:	680b      	ldr	r3, [r1, #0]
 8016b32:	ed90 7a00 	vldr	s14, [r0]
 8016b36:	6003      	str	r3, [r0, #0]
 8016b38:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8016b3c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8016b5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8016b40:	ee07 3a90 	vmov	s15, r3
 8016b44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8016b4c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8016b50:	edc1 7a00 	vstr	s15, [r1]
 8016b54:	4770      	bx	lr
 8016b56:	bf00      	nop
 8016b58:	20013834 	.word	0x20013834
 8016b5c:	38d1b717 	.word	0x38d1b717

08016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8016b60:	b510      	push	{r4, lr}
 8016b62:	4b0a      	ldr	r3, [pc, #40]	; (8016b8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8016b64:	781b      	ldrb	r3, [r3, #0]
 8016b66:	2b01      	cmp	r3, #1
 8016b68:	460a      	mov	r2, r1
 8016b6a:	d10d      	bne.n	8016b88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8016b6c:	8881      	ldrh	r1, [r0, #4]
 8016b6e:	8803      	ldrh	r3, [r0, #0]
 8016b70:	440b      	add	r3, r1
 8016b72:	4601      	mov	r1, r0
 8016b74:	3b01      	subs	r3, #1
 8016b76:	f821 3b02 	strh.w	r3, [r1], #2
 8016b7a:	f7ff ffc3 	bl	8016b04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8016b7e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016b82:	88c2      	ldrh	r2, [r0, #6]
 8016b84:	8082      	strh	r2, [r0, #4]
 8016b86:	80c3      	strh	r3, [r0, #6]
 8016b88:	bd10      	pop	{r4, pc}
 8016b8a:	bf00      	nop
 8016b8c:	20013834 	.word	0x20013834

08016b90 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016b90:	4b06      	ldr	r3, [pc, #24]	; (8016bac <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016b92:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b96:	4b06      	ldr	r3, [pc, #24]	; (8016bb0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016b98:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8016b9c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016ba0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016ba4:	2100      	movs	r1, #0
 8016ba6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8016baa:	4770      	bx	lr
 8016bac:	20013830 	.word	0x20013830
 8016bb0:	20013832 	.word	0x20013832

08016bb4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016bb4:	4b03      	ldr	r3, [pc, #12]	; (8016bc4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016bb6:	6818      	ldr	r0, [r3, #0]
 8016bb8:	b110      	cbz	r0, 8016bc0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016bba:	6803      	ldr	r3, [r0, #0]
 8016bbc:	699b      	ldr	r3, [r3, #24]
 8016bbe:	4718      	bx	r3
 8016bc0:	4770      	bx	lr
 8016bc2:	bf00      	nop
 8016bc4:	20013880 	.word	0x20013880

08016bc8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016bc8:	4770      	bx	lr
	...

08016bcc <_ZN8touchgfx11Application4drawEv>:
 8016bcc:	b507      	push	{r0, r1, r2, lr}
 8016bce:	4b09      	ldr	r3, [pc, #36]	; (8016bf4 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016bd0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016bd4:	4b08      	ldr	r3, [pc, #32]	; (8016bf8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016bd6:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016bda:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016bde:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016be2:	6803      	ldr	r3, [r0, #0]
 8016be4:	2100      	movs	r1, #0
 8016be6:	9100      	str	r1, [sp, #0]
 8016be8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016bea:	4669      	mov	r1, sp
 8016bec:	4798      	blx	r3
 8016bee:	b003      	add	sp, #12
 8016bf0:	f85d fb04 	ldr.w	pc, [sp], #4
 8016bf4:	20013830 	.word	0x20013830
 8016bf8:	20013832 	.word	0x20013832

08016bfc <_ZN8touchgfx11Application10invalidateEv>:
 8016bfc:	4b09      	ldr	r3, [pc, #36]	; (8016c24 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016bfe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016c02:	4b09      	ldr	r3, [pc, #36]	; (8016c28 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016c04:	b082      	sub	sp, #8
 8016c06:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016c0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016c0e:	2100      	movs	r1, #0
 8016c10:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016c14:	9100      	str	r1, [sp, #0]
 8016c16:	6803      	ldr	r3, [r0, #0]
 8016c18:	aa02      	add	r2, sp, #8
 8016c1a:	e912 0006 	ldmdb	r2, {r1, r2}
 8016c1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016c20:	b002      	add	sp, #8
 8016c22:	4718      	bx	r3
 8016c24:	20013830 	.word	0x20013830
 8016c28:	20013832 	.word	0x20013832

08016c2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8016c2c:	4b03      	ldr	r3, [pc, #12]	; (8016c3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8016c2e:	6818      	ldr	r0, [r3, #0]
 8016c30:	b110      	cbz	r0, 8016c38 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016c32:	6803      	ldr	r3, [r0, #0]
 8016c34:	69db      	ldr	r3, [r3, #28]
 8016c36:	4718      	bx	r3
 8016c38:	4770      	bx	lr
 8016c3a:	bf00      	nop
 8016c3c:	20013880 	.word	0x20013880

08016c40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016c40:	4b03      	ldr	r3, [pc, #12]	; (8016c50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016c42:	6818      	ldr	r0, [r3, #0]
 8016c44:	b110      	cbz	r0, 8016c4c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016c46:	6803      	ldr	r3, [r0, #0]
 8016c48:	6a1b      	ldr	r3, [r3, #32]
 8016c4a:	4718      	bx	r3
 8016c4c:	4770      	bx	lr
 8016c4e:	bf00      	nop
 8016c50:	20013880 	.word	0x20013880

08016c54 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016c54:	2300      	movs	r3, #0
 8016c56:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8016c5a:	4770      	bx	lr

08016c5c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016c5c:	4b03      	ldr	r3, [pc, #12]	; (8016c6c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016c5e:	6818      	ldr	r0, [r3, #0]
 8016c60:	b110      	cbz	r0, 8016c68 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016c62:	6803      	ldr	r3, [r0, #0]
 8016c64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016c66:	4718      	bx	r3
 8016c68:	4770      	bx	lr
 8016c6a:	bf00      	nop
 8016c6c:	20013880 	.word	0x20013880

08016c70 <_ZN8touchgfx11ApplicationD1Ev>:
 8016c70:	4770      	bx	lr

08016c72 <_ZN8touchgfx11ApplicationD0Ev>:
 8016c72:	b510      	push	{r4, lr}
 8016c74:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016c78:	4604      	mov	r4, r0
 8016c7a:	f014 f996 	bl	802afaa <_ZdlPvj>
 8016c7e:	4620      	mov	r0, r4
 8016c80:	bd10      	pop	{r4, pc}

08016c82 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016c82:	b510      	push	{r4, lr}
 8016c84:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016c88:	888a      	ldrh	r2, [r1, #4]
 8016c8a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016c8e:	4422      	add	r2, r4
 8016c90:	b212      	sxth	r2, r2
 8016c92:	4293      	cmp	r3, r2
 8016c94:	da15      	bge.n	8016cc2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016c96:	8882      	ldrh	r2, [r0, #4]
 8016c98:	4413      	add	r3, r2
 8016c9a:	b21b      	sxth	r3, r3
 8016c9c:	429c      	cmp	r4, r3
 8016c9e:	da10      	bge.n	8016cc2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016ca0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016ca4:	88c9      	ldrh	r1, [r1, #6]
 8016ca6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016caa:	4419      	add	r1, r3
 8016cac:	b209      	sxth	r1, r1
 8016cae:	428a      	cmp	r2, r1
 8016cb0:	da07      	bge.n	8016cc2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016cb2:	88c0      	ldrh	r0, [r0, #6]
 8016cb4:	4410      	add	r0, r2
 8016cb6:	b200      	sxth	r0, r0
 8016cb8:	4283      	cmp	r3, r0
 8016cba:	bfac      	ite	ge
 8016cbc:	2000      	movge	r0, #0
 8016cbe:	2001      	movlt	r0, #1
 8016cc0:	bd10      	pop	{r4, pc}
 8016cc2:	2000      	movs	r0, #0
 8016cc4:	e7fc      	b.n	8016cc0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016cc6 <_ZN8touchgfx4Rect10restrictToEss>:
 8016cc6:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016cca:	2b00      	cmp	r3, #0
 8016ccc:	b510      	push	{r4, lr}
 8016cce:	da04      	bge.n	8016cda <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016cd0:	8884      	ldrh	r4, [r0, #4]
 8016cd2:	4423      	add	r3, r4
 8016cd4:	8083      	strh	r3, [r0, #4]
 8016cd6:	2300      	movs	r3, #0
 8016cd8:	8003      	strh	r3, [r0, #0]
 8016cda:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016cde:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016ce2:	1b09      	subs	r1, r1, r4
 8016ce4:	428b      	cmp	r3, r1
 8016ce6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016cea:	bfc8      	it	gt
 8016cec:	8081      	strhgt	r1, [r0, #4]
 8016cee:	2b00      	cmp	r3, #0
 8016cf0:	da04      	bge.n	8016cfc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016cf2:	88c1      	ldrh	r1, [r0, #6]
 8016cf4:	440b      	add	r3, r1
 8016cf6:	80c3      	strh	r3, [r0, #6]
 8016cf8:	2300      	movs	r3, #0
 8016cfa:	8043      	strh	r3, [r0, #2]
 8016cfc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016d00:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016d04:	1a52      	subs	r2, r2, r1
 8016d06:	4293      	cmp	r3, r2
 8016d08:	bfc8      	it	gt
 8016d0a:	80c2      	strhgt	r2, [r0, #6]
 8016d0c:	bd10      	pop	{r4, pc}
	...

08016d10 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016d10:	b510      	push	{r4, lr}
 8016d12:	4b10      	ldr	r3, [pc, #64]	; (8016d54 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016d14:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016d18:	4b0f      	ldr	r3, [pc, #60]	; (8016d58 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8016d1a:	460c      	mov	r4, r1
 8016d1c:	4620      	mov	r0, r4
 8016d1e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016d22:	f7ff ffd0 	bl	8016cc6 <_ZN8touchgfx4Rect10restrictToEss>
 8016d26:	4b0d      	ldr	r3, [pc, #52]	; (8016d5c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016d28:	6818      	ldr	r0, [r3, #0]
 8016d2a:	b190      	cbz	r0, 8016d52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016d2c:	6803      	ldr	r3, [r0, #0]
 8016d2e:	4621      	mov	r1, r4
 8016d30:	689b      	ldr	r3, [r3, #8]
 8016d32:	4798      	blx	r3
 8016d34:	4b0a      	ldr	r3, [pc, #40]	; (8016d60 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016d36:	6818      	ldr	r0, [r3, #0]
 8016d38:	b118      	cbz	r0, 8016d42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016d3a:	6803      	ldr	r3, [r0, #0]
 8016d3c:	4621      	mov	r1, r4
 8016d3e:	689b      	ldr	r3, [r3, #8]
 8016d40:	4798      	blx	r3
 8016d42:	4b08      	ldr	r3, [pc, #32]	; (8016d64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016d44:	6818      	ldr	r0, [r3, #0]
 8016d46:	6803      	ldr	r3, [r0, #0]
 8016d48:	4621      	mov	r1, r4
 8016d4a:	69db      	ldr	r3, [r3, #28]
 8016d4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016d50:	4718      	bx	r3
 8016d52:	bd10      	pop	{r4, pc}
 8016d54:	20013832 	.word	0x20013832
 8016d58:	20013830 	.word	0x20013830
 8016d5c:	20013880 	.word	0x20013880
 8016d60:	2001387c 	.word	0x2001387c
 8016d64:	2001383c 	.word	0x2001383c

08016d68 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016d6a:	4606      	mov	r6, r0
 8016d6c:	4608      	mov	r0, r1
 8016d6e:	460f      	mov	r7, r1
 8016d70:	f7fa f957 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016d74:	b9e8      	cbnz	r0, 8016db2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016d76:	f9b7 5000 	ldrsh.w	r5, [r7]
 8016d7a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016d7e:	42a5      	cmp	r5, r4
 8016d80:	db17      	blt.n	8016db2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016d82:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016d86:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8016d8a:	429a      	cmp	r2, r3
 8016d8c:	db11      	blt.n	8016db2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016d8e:	88b9      	ldrh	r1, [r7, #4]
 8016d90:	440d      	add	r5, r1
 8016d92:	88b1      	ldrh	r1, [r6, #4]
 8016d94:	440c      	add	r4, r1
 8016d96:	b22d      	sxth	r5, r5
 8016d98:	b224      	sxth	r4, r4
 8016d9a:	42a5      	cmp	r5, r4
 8016d9c:	dc09      	bgt.n	8016db2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016d9e:	88f8      	ldrh	r0, [r7, #6]
 8016da0:	4410      	add	r0, r2
 8016da2:	88f2      	ldrh	r2, [r6, #6]
 8016da4:	4413      	add	r3, r2
 8016da6:	b200      	sxth	r0, r0
 8016da8:	b21b      	sxth	r3, r3
 8016daa:	4298      	cmp	r0, r3
 8016dac:	bfcc      	ite	gt
 8016dae:	2000      	movgt	r0, #0
 8016db0:	2001      	movle	r0, #1
 8016db2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016db4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016db6:	4604      	mov	r4, r0
 8016db8:	4608      	mov	r0, r1
 8016dba:	460d      	mov	r5, r1
 8016dbc:	f7fa f931 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016dc0:	b978      	cbnz	r0, 8016de2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016dc2:	4620      	mov	r0, r4
 8016dc4:	f7fa f92d 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016dc8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016dcc:	b150      	cbz	r0, 8016de4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016dce:	8026      	strh	r6, [r4, #0]
 8016dd0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016dd4:	8063      	strh	r3, [r4, #2]
 8016dd6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8016dda:	80a3      	strh	r3, [r4, #4]
 8016ddc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016de0:	80e3      	strh	r3, [r4, #6]
 8016de2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016de4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016de8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016dec:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016df0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016df4:	88ed      	ldrh	r5, [r5, #6]
 8016df6:	42b1      	cmp	r1, r6
 8016df8:	460f      	mov	r7, r1
 8016dfa:	bfa8      	it	ge
 8016dfc:	4637      	movge	r7, r6
 8016dfe:	4293      	cmp	r3, r2
 8016e00:	4618      	mov	r0, r3
 8016e02:	4466      	add	r6, ip
 8016e04:	bfa8      	it	ge
 8016e06:	4610      	movge	r0, r2
 8016e08:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016e0c:	8027      	strh	r7, [r4, #0]
 8016e0e:	442a      	add	r2, r5
 8016e10:	88e5      	ldrh	r5, [r4, #6]
 8016e12:	8060      	strh	r0, [r4, #2]
 8016e14:	4461      	add	r1, ip
 8016e16:	442b      	add	r3, r5
 8016e18:	b236      	sxth	r6, r6
 8016e1a:	b209      	sxth	r1, r1
 8016e1c:	b212      	sxth	r2, r2
 8016e1e:	b21b      	sxth	r3, r3
 8016e20:	428e      	cmp	r6, r1
 8016e22:	bfac      	ite	ge
 8016e24:	ebc7 0106 	rsbge	r1, r7, r6
 8016e28:	ebc7 0101 	rsblt	r1, r7, r1
 8016e2c:	429a      	cmp	r2, r3
 8016e2e:	bfac      	ite	ge
 8016e30:	ebc0 0202 	rsbge	r2, r0, r2
 8016e34:	ebc0 0203 	rsblt	r2, r0, r3
 8016e38:	80a1      	strh	r1, [r4, #4]
 8016e3a:	80e2      	strh	r2, [r4, #6]
 8016e3c:	e7d1      	b.n	8016de2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016e40 <_ZN8touchgfx11Application11getInstanceEv>:
 8016e40:	4b01      	ldr	r3, [pc, #4]	; (8016e48 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8016e42:	6818      	ldr	r0, [r3, #0]
 8016e44:	4770      	bx	lr
 8016e46:	bf00      	nop
 8016e48:	20013890 	.word	0x20013890

08016e4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016e4e:	4b10      	ldr	r3, [pc, #64]	; (8016e90 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016e50:	781b      	ldrb	r3, [r3, #0]
 8016e52:	4605      	mov	r5, r0
 8016e54:	b1d3      	cbz	r3, 8016e8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8016e56:	4b0f      	ldr	r3, [pc, #60]	; (8016e94 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016e58:	4f0f      	ldr	r7, [pc, #60]	; (8016e98 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8016e5a:	881c      	ldrh	r4, [r3, #0]
 8016e5c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8016e60:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8016e64:	42a3      	cmp	r3, r4
 8016e66:	d90e      	bls.n	8016e86 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016e68:	683b      	ldr	r3, [r7, #0]
 8016e6a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016e6e:	b10a      	cbz	r2, 8016e74 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016e70:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016e72:	b900      	cbnz	r0, 8016e76 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016e74:	6898      	ldr	r0, [r3, #8]
 8016e76:	6803      	ldr	r3, [r0, #0]
 8016e78:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016e7c:	69db      	ldr	r3, [r3, #28]
 8016e7e:	3401      	adds	r4, #1
 8016e80:	4798      	blx	r3
 8016e82:	b2a4      	uxth	r4, r4
 8016e84:	e7ec      	b.n	8016e60 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016e86:	2300      	movs	r3, #0
 8016e88:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8016e8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016e8e:	bf00      	nop
 8016e90:	2001383a 	.word	0x2001383a
 8016e94:	2000008c 	.word	0x2000008c
 8016e98:	2001383c 	.word	0x2001383c

08016e9c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016e9c:	b510      	push	{r4, lr}
 8016e9e:	2300      	movs	r3, #0
 8016ea0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016ea4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016ea8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016eac:	4604      	mov	r4, r0
 8016eae:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016eb2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016eb6:	429a      	cmp	r2, r3
 8016eb8:	d90e      	bls.n	8016ed8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016eba:	18e2      	adds	r2, r4, r3
 8016ebc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016ec0:	b122      	cbz	r2, 8016ecc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016ec2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016ec6:	6803      	ldr	r3, [r0, #0]
 8016ec8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016eca:	4798      	blx	r3
 8016ecc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016ed0:	3301      	adds	r3, #1
 8016ed2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016ed6:	e7ea      	b.n	8016eae <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016ed8:	bd10      	pop	{r4, pc}

08016eda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8016eda:	b530      	push	{r4, r5, lr}
 8016edc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016ee0:	2200      	movs	r2, #0
 8016ee2:	b293      	uxth	r3, r2
 8016ee4:	429d      	cmp	r5, r3
 8016ee6:	d90e      	bls.n	8016f06 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016ee8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016eec:	428b      	cmp	r3, r1
 8016eee:	d10b      	bne.n	8016f08 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016ef0:	1884      	adds	r4, r0, r2
 8016ef2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016ef6:	b13b      	cbz	r3, 8016f08 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016ef8:	3b01      	subs	r3, #1
 8016efa:	b2db      	uxtb	r3, r3
 8016efc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016f00:	b90b      	cbnz	r3, 8016f06 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016f02:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016f06:	bd30      	pop	{r4, r5, pc}
 8016f08:	3201      	adds	r2, #1
 8016f0a:	e7ea      	b.n	8016ee2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016f0c:	2300      	movs	r3, #0
 8016f0e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016f12:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8016f16:	30a4      	adds	r0, #164	; 0xa4
 8016f18:	f802 3b01 	strb.w	r3, [r2], #1
 8016f1c:	4282      	cmp	r2, r0
 8016f1e:	d1fb      	bne.n	8016f18 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016f20:	4770      	bx	lr
	...

08016f24 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016f24:	b570      	push	{r4, r5, r6, lr}
 8016f26:	4c0b      	ldr	r4, [pc, #44]	; (8016f54 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016f28:	4605      	mov	r5, r0
 8016f2a:	6820      	ldr	r0, [r4, #0]
 8016f2c:	460e      	mov	r6, r1
 8016f2e:	b110      	cbz	r0, 8016f36 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016f30:	6803      	ldr	r3, [r0, #0]
 8016f32:	695b      	ldr	r3, [r3, #20]
 8016f34:	4798      	blx	r3
 8016f36:	1d28      	adds	r0, r5, #4
 8016f38:	f7ff ffe8 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016f3c:	6026      	str	r6, [r4, #0]
 8016f3e:	6833      	ldr	r3, [r6, #0]
 8016f40:	4630      	mov	r0, r6
 8016f42:	68db      	ldr	r3, [r3, #12]
 8016f44:	4798      	blx	r3
 8016f46:	682b      	ldr	r3, [r5, #0]
 8016f48:	4628      	mov	r0, r5
 8016f4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016f4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016f50:	4718      	bx	r3
 8016f52:	bf00      	nop
 8016f54:	20013880 	.word	0x20013880

08016f58 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016f58:	2300      	movs	r3, #0
 8016f5a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016f5e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8016f62:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016f64:	461a      	mov	r2, r3
 8016f66:	461c      	mov	r4, r3
 8016f68:	461d      	mov	r5, r3
 8016f6a:	459c      	cmp	ip, r3
 8016f6c:	dd1a      	ble.n	8016fa4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8016f6e:	18c6      	adds	r6, r0, r3
 8016f70:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016f74:	b16e      	cbz	r6, 8016f92 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016f76:	429a      	cmp	r2, r3
 8016f78:	d008      	beq.n	8016f8c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016f7a:	fa1f fe82 	uxth.w	lr, r2
 8016f7e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016f82:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016f86:	1887      	adds	r7, r0, r2
 8016f88:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8016f8c:	3201      	adds	r2, #1
 8016f8e:	3301      	adds	r3, #1
 8016f90:	e7eb      	b.n	8016f6a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016f92:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016f96:	4299      	cmp	r1, r3
 8016f98:	bfa8      	it	ge
 8016f9a:	3501      	addge	r5, #1
 8016f9c:	429e      	cmp	r6, r3
 8016f9e:	bfc8      	it	gt
 8016fa0:	3401      	addgt	r4, #1
 8016fa2:	e7f4      	b.n	8016f8e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016fa4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016fa8:	1b49      	subs	r1, r1, r5
 8016faa:	1b1b      	subs	r3, r3, r4
 8016fac:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016fb0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016fb4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016fb8:	4293      	cmp	r3, r2
 8016fba:	dd03      	ble.n	8016fc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016fbc:	3b01      	subs	r3, #1
 8016fbe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016fc2:	e7f7      	b.n	8016fb4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016fc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016fc8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016fc8:	b570      	push	{r4, r5, r6, lr}
 8016fca:	4d16      	ldr	r5, [pc, #88]	; (8017024 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016fcc:	4604      	mov	r4, r0
 8016fce:	6828      	ldr	r0, [r5, #0]
 8016fd0:	b140      	cbz	r0, 8016fe4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016fd2:	7a03      	ldrb	r3, [r0, #8]
 8016fd4:	b933      	cbnz	r3, 8016fe4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016fd6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016fda:	6803      	ldr	r3, [r0, #0]
 8016fdc:	689b      	ldr	r3, [r3, #8]
 8016fde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016fe2:	4718      	bx	r3
 8016fe4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016fe8:	4e0f      	ldr	r6, [pc, #60]	; (8017028 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016fea:	b973      	cbnz	r3, 801700a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016fec:	b168      	cbz	r0, 801700a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016fee:	7a03      	ldrb	r3, [r0, #8]
 8016ff0:	b15b      	cbz	r3, 801700a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016ff2:	6830      	ldr	r0, [r6, #0]
 8016ff4:	b110      	cbz	r0, 8016ffc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016ff6:	6803      	ldr	r3, [r0, #0]
 8016ff8:	691b      	ldr	r3, [r3, #16]
 8016ffa:	4798      	blx	r3
 8016ffc:	6828      	ldr	r0, [r5, #0]
 8016ffe:	6803      	ldr	r3, [r0, #0]
 8017000:	68db      	ldr	r3, [r3, #12]
 8017002:	4798      	blx	r3
 8017004:	2301      	movs	r3, #1
 8017006:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801700a:	3404      	adds	r4, #4
 801700c:	4620      	mov	r0, r4
 801700e:	f7ff ff45 	bl	8016e9c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8017012:	4620      	mov	r0, r4
 8017014:	f7ff ffa0 	bl	8016f58 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017018:	6830      	ldr	r0, [r6, #0]
 801701a:	b110      	cbz	r0, 8017022 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801701c:	6803      	ldr	r3, [r0, #0]
 801701e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017020:	e7dd      	b.n	8016fde <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8017022:	bd70      	pop	{r4, r5, r6, pc}
 8017024:	20013884 	.word	0x20013884
 8017028:	20013880 	.word	0x20013880

0801702c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801702c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801702e:	2300      	movs	r3, #0
 8017030:	4604      	mov	r4, r0
 8017032:	460d      	mov	r5, r1
 8017034:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8017038:	4618      	mov	r0, r3
 801703a:	b29a      	uxth	r2, r3
 801703c:	4291      	cmp	r1, r2
 801703e:	d911      	bls.n	8017064 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8017040:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8017044:	18e6      	adds	r6, r4, r3
 8017046:	42af      	cmp	r7, r5
 8017048:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801704c:	d105      	bne.n	801705a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801704e:	2aff      	cmp	r2, #255	; 0xff
 8017050:	d002      	beq.n	8017058 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8017052:	3201      	adds	r2, #1
 8017054:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8017058:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801705a:	2a00      	cmp	r2, #0
 801705c:	bf08      	it	eq
 801705e:	2001      	moveq	r0, #1
 8017060:	3301      	adds	r3, #1
 8017062:	e7ea      	b.n	801703a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8017064:	b120      	cbz	r0, 8017070 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8017066:	2920      	cmp	r1, #32
 8017068:	d102      	bne.n	8017070 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 801706a:	4620      	mov	r0, r4
 801706c:	f7ff ff74 	bl	8016f58 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8017070:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8017074:	2b1f      	cmp	r3, #31
 8017076:	d8ef      	bhi.n	8017058 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8017078:	18e2      	adds	r2, r4, r3
 801707a:	2101      	movs	r1, #1
 801707c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8017080:	185a      	adds	r2, r3, r1
 8017082:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8017086:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801708a:	e7e5      	b.n	8017058 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801708c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801708c:	4603      	mov	r3, r0
 801708e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8017092:	2200      	movs	r2, #0
 8017094:	801a      	strh	r2, [r3, #0]
 8017096:	805a      	strh	r2, [r3, #2]
 8017098:	809a      	strh	r2, [r3, #4]
 801709a:	80da      	strh	r2, [r3, #6]
 801709c:	3308      	adds	r3, #8
 801709e:	428b      	cmp	r3, r1
 80170a0:	d1f8      	bne.n	8017094 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80170a2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80170a6:	4770      	bx	lr

080170a8 <_ZN8touchgfx11ApplicationC1Ev>:
 80170a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80170aa:	4606      	mov	r6, r0
 80170ac:	4b1c      	ldr	r3, [pc, #112]	; (8017120 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80170ae:	f846 3b04 	str.w	r3, [r6], #4
 80170b2:	4604      	mov	r4, r0
 80170b4:	2500      	movs	r5, #0
 80170b6:	22a8      	movs	r2, #168	; 0xa8
 80170b8:	2100      	movs	r1, #0
 80170ba:	4630      	mov	r0, r6
 80170bc:	f014 ff8d 	bl	802bfda <memset>
 80170c0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 80170c4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80170c8:	f7ff ffe0 	bl	801708c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80170cc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80170d0:	f7ff ffdc 	bl	801708c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80170d4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80170d8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80170dc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 80170e0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 80170e4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 80170e8:	490e      	ldr	r1, [pc, #56]	; (8017124 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80170ea:	480f      	ldr	r0, [pc, #60]	; (8017128 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80170ec:	4f0f      	ldr	r7, [pc, #60]	; (801712c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80170ee:	f010 fe27 	bl	8027d40 <CRC_Lock>
 80170f2:	4b0f      	ldr	r3, [pc, #60]	; (8017130 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80170f4:	b158      	cbz	r0, 801710e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80170f6:	801d      	strh	r5, [r3, #0]
 80170f8:	4a0e      	ldr	r2, [pc, #56]	; (8017134 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80170fa:	2300      	movs	r3, #0
 80170fc:	6013      	str	r3, [r2, #0]
 80170fe:	4a0e      	ldr	r2, [pc, #56]	; (8017138 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8017100:	603b      	str	r3, [r7, #0]
 8017102:	4630      	mov	r0, r6
 8017104:	6013      	str	r3, [r2, #0]
 8017106:	f7ff ff01 	bl	8016f0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801710a:	4620      	mov	r0, r4
 801710c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801710e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8017112:	2002      	movs	r0, #2
 8017114:	801a      	strh	r2, [r3, #0]
 8017116:	6038      	str	r0, [r7, #0]
 8017118:	f001 fb4a 	bl	80187b0 <_ZN8touchgfx6Screen4drawEv>
 801711c:	e7ec      	b.n	80170f8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801711e:	bf00      	nop
 8017120:	0802fff0 	.word	0x0802fff0
 8017124:	b5e8b5cd 	.word	0xb5e8b5cd
 8017128:	f407a5c2 	.word	0xf407a5c2
 801712c:	20013880 	.word	0x20013880
 8017130:	2000008c 	.word	0x2000008c
 8017134:	20013890 	.word	0x20013890
 8017138:	20013884 	.word	0x20013884

0801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801713c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8017140:	3b01      	subs	r3, #1
 8017142:	b29b      	uxth	r3, r3
 8017144:	428b      	cmp	r3, r1
 8017146:	b510      	push	{r4, lr}
 8017148:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801714c:	d908      	bls.n	8017160 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801714e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8017152:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8017156:	681a      	ldr	r2, [r3, #0]
 8017158:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801715c:	685a      	ldr	r2, [r3, #4]
 801715e:	6062      	str	r2, [r4, #4]
 8017160:	bd10      	pop	{r4, pc}
	...

08017164 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8017164:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017168:	4b8f      	ldr	r3, [pc, #572]	; (80173a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 801716a:	b08f      	sub	sp, #60	; 0x3c
 801716c:	ac0a      	add	r4, sp, #40	; 0x28
 801716e:	e884 0006 	stmia.w	r4, {r1, r2}
 8017172:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017176:	4b8d      	ldr	r3, [pc, #564]	; (80173ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8017178:	4683      	mov	fp, r0
 801717a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801717e:	4620      	mov	r0, r4
 8017180:	f7ff fda1 	bl	8016cc6 <_ZN8touchgfx4Rect10restrictToEss>
 8017184:	4620      	mov	r0, r4
 8017186:	f7f9 ff4c 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801718a:	2800      	cmp	r0, #0
 801718c:	d16a      	bne.n	8017264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801718e:	9403      	str	r4, [sp, #12]
 8017190:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017194:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8017198:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801719c:	35a4      	adds	r5, #164	; 0xa4
 801719e:	9301      	str	r3, [sp, #4]
 80171a0:	b15c      	cbz	r4, 80171ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80171a2:	4629      	mov	r1, r5
 80171a4:	9803      	ldr	r0, [sp, #12]
 80171a6:	f7ff fddf 	bl	8016d68 <_ZNK8touchgfx4Rect8includesERKS0_>
 80171aa:	3c01      	subs	r4, #1
 80171ac:	b118      	cbz	r0, 80171b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80171ae:	b2a1      	uxth	r1, r4
 80171b0:	9801      	ldr	r0, [sp, #4]
 80171b2:	f7ff ffc3 	bl	801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80171b6:	3d08      	subs	r5, #8
 80171b8:	e7f2      	b.n	80171a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80171ba:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80171be:	f8cd a010 	str.w	sl, [sp, #16]
 80171c2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80171c6:	9302      	str	r3, [sp, #8]
 80171c8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80171cc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 80171d0:	9306      	str	r3, [sp, #24]
 80171d2:	445c      	add	r4, fp
 80171d4:	2500      	movs	r5, #0
 80171d6:	4626      	mov	r6, r4
 80171d8:	f8cd a014 	str.w	sl, [sp, #20]
 80171dc:	462f      	mov	r7, r5
 80171de:	9b05      	ldr	r3, [sp, #20]
 80171e0:	2b00      	cmp	r3, #0
 80171e2:	d073      	beq.n	80172cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80171e4:	9903      	ldr	r1, [sp, #12]
 80171e6:	4630      	mov	r0, r6
 80171e8:	f7ff fd4b 	bl	8016c82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80171ec:	b350      	cbz	r0, 8017244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80171ee:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80171f2:	f9b6 c000 	ldrsh.w	ip, [r6]
 80171f6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 80171fa:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80171fe:	45e6      	cmp	lr, ip
 8017200:	db33      	blt.n	801726a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017202:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017206:	88b3      	ldrh	r3, [r6, #4]
 8017208:	4472      	add	r2, lr
 801720a:	4463      	add	r3, ip
 801720c:	b212      	sxth	r2, r2
 801720e:	b21b      	sxth	r3, r3
 8017210:	429a      	cmp	r2, r3
 8017212:	dc2a      	bgt.n	801726a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017214:	88f3      	ldrh	r3, [r6, #6]
 8017216:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801721a:	fa1f f289 	uxth.w	r2, r9
 801721e:	4413      	add	r3, r2
 8017220:	b29b      	uxth	r3, r3
 8017222:	45c8      	cmp	r8, r9
 8017224:	fa1f fc88 	uxth.w	ip, r8
 8017228:	fa0f fe83 	sxth.w	lr, r3
 801722c:	db0f      	blt.n	801724e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801722e:	eba3 030c 	sub.w	r3, r3, ip
 8017232:	1ac9      	subs	r1, r1, r3
 8017234:	b209      	sxth	r1, r1
 8017236:	2900      	cmp	r1, #0
 8017238:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801723c:	dd12      	ble.n	8017264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801723e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8017242:	4605      	mov	r5, r0
 8017244:	9b05      	ldr	r3, [sp, #20]
 8017246:	3b01      	subs	r3, #1
 8017248:	9305      	str	r3, [sp, #20]
 801724a:	3e08      	subs	r6, #8
 801724c:	e7c7      	b.n	80171de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801724e:	4461      	add	r1, ip
 8017250:	b209      	sxth	r1, r1
 8017252:	4571      	cmp	r1, lr
 8017254:	dc38      	bgt.n	80172c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017256:	eba2 020c 	sub.w	r2, r2, ip
 801725a:	b212      	sxth	r2, r2
 801725c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017260:	2a00      	cmp	r2, #0
 8017262:	dcee      	bgt.n	8017242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017264:	b00f      	add	sp, #60	; 0x3c
 8017266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801726a:	45c8      	cmp	r8, r9
 801726c:	db2c      	blt.n	80172c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801726e:	88f3      	ldrh	r3, [r6, #6]
 8017270:	4499      	add	r9, r3
 8017272:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8017276:	4498      	add	r8, r3
 8017278:	fa0f f989 	sxth.w	r9, r9
 801727c:	fa0f f888 	sxth.w	r8, r8
 8017280:	45c1      	cmp	r9, r8
 8017282:	db21      	blt.n	80172c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017284:	88b3      	ldrh	r3, [r6, #4]
 8017286:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801728a:	fa1f f28c 	uxth.w	r2, ip
 801728e:	4413      	add	r3, r2
 8017290:	b29b      	uxth	r3, r3
 8017292:	45e6      	cmp	lr, ip
 8017294:	fa1f f88e 	uxth.w	r8, lr
 8017298:	fa0f f983 	sxth.w	r9, r3
 801729c:	db0a      	blt.n	80172b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801729e:	eba3 0308 	sub.w	r3, r3, r8
 80172a2:	1ac9      	subs	r1, r1, r3
 80172a4:	b209      	sxth	r1, r1
 80172a6:	2900      	cmp	r1, #0
 80172a8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80172ac:	ddda      	ble.n	8017264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80172ae:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80172b2:	e7c6      	b.n	8017242 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80172b4:	4441      	add	r1, r8
 80172b6:	b209      	sxth	r1, r1
 80172b8:	4549      	cmp	r1, r9
 80172ba:	dc05      	bgt.n	80172c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80172bc:	eba2 0208 	sub.w	r2, r2, r8
 80172c0:	b212      	sxth	r2, r2
 80172c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80172c6:	e7cb      	b.n	8017260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80172c8:	4607      	mov	r7, r0
 80172ca:	e7bb      	b.n	8017244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80172cc:	2d00      	cmp	r5, #0
 80172ce:	d181      	bne.n	80171d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80172d0:	2f00      	cmp	r7, #0
 80172d2:	f000 81dd 	beq.w	8017690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80172d6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80172da:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80172de:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80172e2:	b2b3      	uxth	r3, r6
 80172e4:	9305      	str	r3, [sp, #20]
 80172e6:	9a05      	ldr	r2, [sp, #20]
 80172e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80172ec:	4413      	add	r3, r2
 80172ee:	b2ba      	uxth	r2, r7
 80172f0:	4492      	add	sl, r2
 80172f2:	b29b      	uxth	r3, r3
 80172f4:	fa1f fa8a 	uxth.w	sl, sl
 80172f8:	fa0f f883 	sxth.w	r8, r3
 80172fc:	fa0f f98a 	sxth.w	r9, sl
 8017300:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8017304:	9b04      	ldr	r3, [sp, #16]
 8017306:	2b00      	cmp	r3, #0
 8017308:	d052      	beq.n	80173b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801730a:	9903      	ldr	r1, [sp, #12]
 801730c:	4620      	mov	r0, r4
 801730e:	f7ff fcb8 	bl	8016c82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017312:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8017316:	b1c0      	cbz	r0, 801734a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017318:	f9b4 e000 	ldrsh.w	lr, [r4]
 801731c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8017320:	4576      	cmp	r6, lr
 8017322:	dc22      	bgt.n	801736a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017324:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8017328:	44f4      	add	ip, lr
 801732a:	fa0f fc8c 	sxth.w	ip, ip
 801732e:	45e0      	cmp	r8, ip
 8017330:	db1b      	blt.n	801736a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8017332:	428f      	cmp	r7, r1
 8017334:	fa1f fc81 	uxth.w	ip, r1
 8017338:	88e1      	ldrh	r1, [r4, #6]
 801733a:	dc0d      	bgt.n	8017358 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801733c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8017340:	eba1 010c 	sub.w	r1, r1, ip
 8017344:	f8a4 9002 	strh.w	r9, [r4, #2]
 8017348:	80e1      	strh	r1, [r4, #6]
 801734a:	4628      	mov	r0, r5
 801734c:	9904      	ldr	r1, [sp, #16]
 801734e:	3901      	subs	r1, #1
 8017350:	9104      	str	r1, [sp, #16]
 8017352:	3c08      	subs	r4, #8
 8017354:	4605      	mov	r5, r0
 8017356:	e7d3      	b.n	8017300 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8017358:	4461      	add	r1, ip
 801735a:	b209      	sxth	r1, r1
 801735c:	4549      	cmp	r1, r9
 801735e:	dcf5      	bgt.n	801734c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8017360:	eba2 0c0c 	sub.w	ip, r2, ip
 8017364:	f8a4 c006 	strh.w	ip, [r4, #6]
 8017368:	e7ef      	b.n	801734a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801736a:	428f      	cmp	r7, r1
 801736c:	dcee      	bgt.n	801734c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801736e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8017372:	4461      	add	r1, ip
 8017374:	b209      	sxth	r1, r1
 8017376:	4589      	cmp	r9, r1
 8017378:	dbe8      	blt.n	801734c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801737a:	4576      	cmp	r6, lr
 801737c:	fa1f fc8e 	uxth.w	ip, lr
 8017380:	88a1      	ldrh	r1, [r4, #4]
 8017382:	dc07      	bgt.n	8017394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8017384:	eba3 0c0c 	sub.w	ip, r3, ip
 8017388:	eba1 010c 	sub.w	r1, r1, ip
 801738c:	f8a4 8000 	strh.w	r8, [r4]
 8017390:	80a1      	strh	r1, [r4, #4]
 8017392:	e7da      	b.n	801734a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017394:	4461      	add	r1, ip
 8017396:	b209      	sxth	r1, r1
 8017398:	4588      	cmp	r8, r1
 801739a:	dbd7      	blt.n	801734c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801739c:	9905      	ldr	r1, [sp, #20]
 801739e:	eba1 0c0c 	sub.w	ip, r1, ip
 80173a2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80173a6:	e7d0      	b.n	801734a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80173a8:	20013832 	.word	0x20013832
 80173ac:	20013830 	.word	0x20013830
 80173b0:	2d00      	cmp	r5, #0
 80173b2:	f000 816d 	beq.w	8017690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80173b6:	9b06      	ldr	r3, [sp, #24]
 80173b8:	445b      	add	r3, fp
 80173ba:	461c      	mov	r4, r3
 80173bc:	9b02      	ldr	r3, [sp, #8]
 80173be:	3301      	adds	r3, #1
 80173c0:	f000 8166 	beq.w	8017690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80173c4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80173c8:	4629      	mov	r1, r5
 80173ca:	9803      	ldr	r0, [sp, #12]
 80173cc:	f7ff fccc 	bl	8016d68 <_ZNK8touchgfx4Rect8includesERKS0_>
 80173d0:	b120      	cbz	r0, 80173dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80173d2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80173d6:	9801      	ldr	r0, [sp, #4]
 80173d8:	f7ff feb0 	bl	801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80173dc:	9903      	ldr	r1, [sp, #12]
 80173de:	4628      	mov	r0, r5
 80173e0:	f7ff fc4f 	bl	8016c82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80173e4:	2800      	cmp	r0, #0
 80173e6:	f000 809c 	beq.w	8017522 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80173ea:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80173ee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80173f2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80173f6:	9309      	str	r3, [sp, #36]	; 0x24
 80173f8:	fa1f f189 	uxth.w	r1, r9
 80173fc:	eb01 0c03 	add.w	ip, r1, r3
 8017400:	fa1f fa8c 	uxth.w	sl, ip
 8017404:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017408:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801740c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8017410:	b283      	uxth	r3, r0
 8017412:	eb03 050c 	add.w	r5, r3, ip
 8017416:	b2ad      	uxth	r5, r5
 8017418:	9505      	str	r5, [sp, #20]
 801741a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801741e:	9504      	str	r5, [sp, #16]
 8017420:	4548      	cmp	r0, r9
 8017422:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8017426:	f340 8099 	ble.w	801755c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801742a:	1a5b      	subs	r3, r3, r1
 801742c:	b29b      	uxth	r3, r3
 801742e:	4596      	cmp	lr, r2
 8017430:	fa0f f08a 	sxth.w	r0, sl
 8017434:	b21e      	sxth	r6, r3
 8017436:	dd2e      	ble.n	8017496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8017438:	9f02      	ldr	r7, [sp, #8]
 801743a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801743e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8017442:	9f04      	ldr	r7, [sp, #16]
 8017444:	1a3f      	subs	r7, r7, r0
 8017446:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801744a:	fa1f fe8e 	uxth.w	lr, lr
 801744e:	b292      	uxth	r2, r2
 8017450:	ebae 0102 	sub.w	r1, lr, r2
 8017454:	44a6      	add	lr, r4
 8017456:	4402      	add	r2, r0
 8017458:	b289      	uxth	r1, r1
 801745a:	fa0f fe8e 	sxth.w	lr, lr
 801745e:	b212      	sxth	r2, r2
 8017460:	b20d      	sxth	r5, r1
 8017462:	ebae 0202 	sub.w	r2, lr, r2
 8017466:	436f      	muls	r7, r5
 8017468:	4372      	muls	r2, r6
 801746a:	4297      	cmp	r7, r2
 801746c:	db09      	blt.n	8017482 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801746e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8017472:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8017476:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801747a:	449c      	add	ip, r3
 801747c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8017480:	e686      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017482:	4421      	add	r1, r4
 8017484:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8017488:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801748c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017490:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017494:	e67c      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017496:	9f04      	ldr	r7, [sp, #16]
 8017498:	42b8      	cmp	r0, r7
 801749a:	da27      	bge.n	80174ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801749c:	9902      	ldr	r1, [sp, #8]
 801749e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80174a2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80174a6:	eb05 010e 	add.w	r1, r5, lr
 80174aa:	fa1f f881 	uxth.w	r8, r1
 80174ae:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80174b2:	4411      	add	r1, r2
 80174b4:	eba1 0108 	sub.w	r1, r1, r8
 80174b8:	b289      	uxth	r1, r1
 80174ba:	fa0f f988 	sxth.w	r9, r8
 80174be:	eba2 020e 	sub.w	r2, r2, lr
 80174c2:	fa0f f881 	sxth.w	r8, r1
 80174c6:	1a3f      	subs	r7, r7, r0
 80174c8:	4372      	muls	r2, r6
 80174ca:	fb08 f707 	mul.w	r7, r8, r7
 80174ce:	42ba      	cmp	r2, r7
 80174d0:	dc06      	bgt.n	80174e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80174d2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80174d6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80174da:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80174de:	e7ca      	b.n	8017476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80174e0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80174e4:	4429      	add	r1, r5
 80174e6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80174ea:	e651      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80174ec:	9805      	ldr	r0, [sp, #20]
 80174ee:	ebaa 0000 	sub.w	r0, sl, r0
 80174f2:	b280      	uxth	r0, r0
 80174f4:	2d06      	cmp	r5, #6
 80174f6:	fa0f fe80 	sxth.w	lr, r0
 80174fa:	d817      	bhi.n	801752c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80174fc:	9b04      	ldr	r3, [sp, #16]
 80174fe:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8017502:	1c6b      	adds	r3, r5, #1
 8017504:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8017508:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801750c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8017510:	9b01      	ldr	r3, [sp, #4]
 8017512:	9801      	ldr	r0, [sp, #4]
 8017514:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017518:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801751c:	805a      	strh	r2, [r3, #2]
 801751e:	809e      	strh	r6, [r3, #4]
 8017520:	80d9      	strh	r1, [r3, #6]
 8017522:	9b02      	ldr	r3, [sp, #8]
 8017524:	3b01      	subs	r3, #1
 8017526:	9302      	str	r3, [sp, #8]
 8017528:	3c08      	subs	r4, #8
 801752a:	e747      	b.n	80173bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801752c:	9a02      	ldr	r2, [sp, #8]
 801752e:	45b6      	cmp	lr, r6
 8017530:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8017534:	db0d      	blt.n	8017552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8017536:	449c      	add	ip, r3
 8017538:	fa1f fc8c 	uxth.w	ip, ip
 801753c:	445a      	add	r2, fp
 801753e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8017542:	448c      	add	ip, r1
 8017544:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8017548:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801754c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8017550:	e61e      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017552:	445a      	add	r2, fp
 8017554:	4484      	add	ip, r0
 8017556:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801755a:	e78f      	b.n	801747c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801755c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8017560:	fa1f f18e 	uxth.w	r1, lr
 8017564:	eb01 0806 	add.w	r8, r1, r6
 8017568:	b293      	uxth	r3, r2
 801756a:	fa1f f888 	uxth.w	r8, r8
 801756e:	9306      	str	r3, [sp, #24]
 8017570:	fa0f f388 	sxth.w	r3, r8
 8017574:	9307      	str	r3, [sp, #28]
 8017576:	9f06      	ldr	r7, [sp, #24]
 8017578:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801757c:	443b      	add	r3, r7
 801757e:	b29b      	uxth	r3, r3
 8017580:	4596      	cmp	lr, r2
 8017582:	9308      	str	r3, [sp, #32]
 8017584:	da24      	bge.n	80175d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8017586:	9905      	ldr	r1, [sp, #20]
 8017588:	eba3 0308 	sub.w	r3, r3, r8
 801758c:	ebaa 0401 	sub.w	r4, sl, r1
 8017590:	b2a4      	uxth	r4, r4
 8017592:	b29b      	uxth	r3, r3
 8017594:	b225      	sxth	r5, r4
 8017596:	b219      	sxth	r1, r3
 8017598:	eba2 020e 	sub.w	r2, r2, lr
 801759c:	eba9 0000 	sub.w	r0, r9, r0
 80175a0:	436a      	muls	r2, r5
 80175a2:	4348      	muls	r0, r1
 80175a4:	4282      	cmp	r2, r0
 80175a6:	9a02      	ldr	r2, [sp, #8]
 80175a8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80175ac:	445a      	add	r2, fp
 80175ae:	dc06      	bgt.n	80175be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80175b0:	9b07      	ldr	r3, [sp, #28]
 80175b2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80175b6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80175ba:	44a4      	add	ip, r4
 80175bc:	e75e      	b.n	801747c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80175be:	9904      	ldr	r1, [sp, #16]
 80175c0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80175c4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80175c8:	4433      	add	r3, r6
 80175ca:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80175ce:	e5df      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80175d0:	9f06      	ldr	r7, [sp, #24]
 80175d2:	9b04      	ldr	r3, [sp, #16]
 80175d4:	1bc9      	subs	r1, r1, r7
 80175d6:	fa0f f78a 	sxth.w	r7, sl
 80175da:	b289      	uxth	r1, r1
 80175dc:	429f      	cmp	r7, r3
 80175de:	fa0f fe81 	sxth.w	lr, r1
 80175e2:	dd23      	ble.n	801762c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80175e4:	9a05      	ldr	r2, [sp, #20]
 80175e6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80175ea:	9d07      	ldr	r5, [sp, #28]
 80175ec:	ebaa 0202 	sub.w	r2, sl, r2
 80175f0:	b292      	uxth	r2, r2
 80175f2:	eba5 0a03 	sub.w	sl, r5, r3
 80175f6:	b214      	sxth	r4, r2
 80175f8:	eba9 0000 	sub.w	r0, r9, r0
 80175fc:	9b02      	ldr	r3, [sp, #8]
 80175fe:	fb0e f000 	mul.w	r0, lr, r0
 8017602:	fb04 fa0a 	mul.w	sl, r4, sl
 8017606:	00db      	lsls	r3, r3, #3
 8017608:	4550      	cmp	r0, sl
 801760a:	445b      	add	r3, fp
 801760c:	db03      	blt.n	8017616 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801760e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8017612:	4494      	add	ip, r2
 8017614:	e732      	b.n	801747c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017616:	9a04      	ldr	r2, [sp, #16]
 8017618:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801761c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8017620:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8017624:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017628:	4431      	add	r1, r6
 801762a:	e75c      	b.n	80174e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801762c:	9b08      	ldr	r3, [sp, #32]
 801762e:	eba3 0308 	sub.w	r3, r3, r8
 8017632:	b29b      	uxth	r3, r3
 8017634:	2d06      	cmp	r5, #6
 8017636:	b218      	sxth	r0, r3
 8017638:	d813      	bhi.n	8017662 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801763a:	9b07      	ldr	r3, [sp, #28]
 801763c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8017640:	1c6b      	adds	r3, r5, #1
 8017642:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8017646:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801764a:	9b01      	ldr	r3, [sp, #4]
 801764c:	9901      	ldr	r1, [sp, #4]
 801764e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017652:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8017656:	805a      	strh	r2, [r3, #2]
 8017658:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801765a:	809a      	strh	r2, [r3, #4]
 801765c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8017660:	e75f      	b.n	8017522 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8017662:	9c02      	ldr	r4, [sp, #8]
 8017664:	4570      	cmp	r0, lr
 8017666:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801766a:	db0d      	blt.n	8017688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801766c:	4431      	add	r1, r6
 801766e:	9b06      	ldr	r3, [sp, #24]
 8017670:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017674:	b289      	uxth	r1, r1
 8017676:	445c      	add	r4, fp
 8017678:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801767c:	4419      	add	r1, r3
 801767e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8017682:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8017686:	e583      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017688:	445c      	add	r4, fp
 801768a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801768e:	e79b      	b.n	80175c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017690:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017694:	1e65      	subs	r5, r4, #1
 8017696:	b2ad      	uxth	r5, r5
 8017698:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801769c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80176a0:	42b5      	cmp	r5, r6
 80176a2:	d044      	beq.n	801772e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80176a4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80176a8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80176ac:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80176b0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80176b4:	4282      	cmp	r2, r0
 80176b6:	d11f      	bne.n	80176f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80176b8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80176bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80176c0:	459c      	cmp	ip, r3
 80176c2:	d119      	bne.n	80176f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80176c4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80176c8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80176cc:	19d8      	adds	r0, r3, r7
 80176ce:	b200      	sxth	r0, r0
 80176d0:	4288      	cmp	r0, r1
 80176d2:	d109      	bne.n	80176e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80176d4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80176d8:	4413      	add	r3, r2
 80176da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80176de:	4629      	mov	r1, r5
 80176e0:	9801      	ldr	r0, [sp, #4]
 80176e2:	f7ff fd2b 	bl	801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80176e6:	e003      	b.n	80176f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80176e8:	4411      	add	r1, r2
 80176ea:	b209      	sxth	r1, r1
 80176ec:	42b9      	cmp	r1, r7
 80176ee:	d0f3      	beq.n	80176d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80176f0:	3d01      	subs	r5, #1
 80176f2:	b2ad      	uxth	r5, r5
 80176f4:	3c08      	subs	r4, #8
 80176f6:	e7d3      	b.n	80176a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80176f8:	42b9      	cmp	r1, r7
 80176fa:	d1f9      	bne.n	80176f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80176fc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017700:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017704:	4299      	cmp	r1, r3
 8017706:	d1f3      	bne.n	80176f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017708:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801770c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017710:	181f      	adds	r7, r3, r0
 8017712:	b23f      	sxth	r7, r7
 8017714:	42ba      	cmp	r2, r7
 8017716:	d105      	bne.n	8017724 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8017718:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801771c:	440b      	add	r3, r1
 801771e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8017722:	e7dc      	b.n	80176de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8017724:	440a      	add	r2, r1
 8017726:	b212      	sxth	r2, r2
 8017728:	4290      	cmp	r0, r2
 801772a:	d1e1      	bne.n	80176f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801772c:	e7f6      	b.n	801771c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801772e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8017732:	2e07      	cmp	r6, #7
 8017734:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8017738:	d812      	bhi.n	8017760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801773a:	1c75      	adds	r5, r6, #1
 801773c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8017740:	9d01      	ldr	r5, [sp, #4]
 8017742:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8017746:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801774a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801774e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8017752:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8017756:	442c      	add	r4, r5
 8017758:	8061      	strh	r1, [r4, #2]
 801775a:	80a2      	strh	r2, [r4, #4]
 801775c:	80e3      	strh	r3, [r4, #6]
 801775e:	e581      	b.n	8017264 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8017760:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8017764:	3e01      	subs	r6, #1
 8017766:	445c      	add	r4, fp
 8017768:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801776c:	f04f 37ff 	mov.w	r7, #4294967295
 8017770:	2500      	movs	r5, #0
 8017772:	9305      	str	r3, [sp, #20]
 8017774:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017778:	9302      	str	r3, [sp, #8]
 801777a:	1e72      	subs	r2, r6, #1
 801777c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017780:	9304      	str	r3, [sp, #16]
 8017782:	4691      	mov	r9, r2
 8017784:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8017788:	f1b9 3fff 	cmp.w	r9, #4294967295
 801778c:	bf14      	ite	ne
 801778e:	9905      	ldrne	r1, [sp, #20]
 8017790:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017794:	6818      	ldr	r0, [r3, #0]
 8017796:	9207      	str	r2, [sp, #28]
 8017798:	bf18      	it	ne
 801779a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801779e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80177a2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80177a6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80177aa:	9306      	str	r3, [sp, #24]
 80177ac:	fb18 f801 	smulbb	r8, r8, r1
 80177b0:	6859      	ldr	r1, [r3, #4]
 80177b2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80177b6:	4671      	mov	r1, lr
 80177b8:	a80c      	add	r0, sp, #48	; 0x30
 80177ba:	f7ff fafb 	bl	8016db4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80177be:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80177c2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80177c6:	9b04      	ldr	r3, [sp, #16]
 80177c8:	9a02      	ldr	r2, [sp, #8]
 80177ca:	fb10 f001 	smulbb	r0, r0, r1
 80177ce:	fb02 8803 	mla	r8, r2, r3, r8
 80177d2:	eba0 0108 	sub.w	r1, r0, r8
 80177d6:	f04f 0c08 	mov.w	ip, #8
 80177da:	fb90 f0fc 	sdiv	r0, r0, ip
 80177de:	4288      	cmp	r0, r1
 80177e0:	dc20      	bgt.n	8017824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80177e2:	4551      	cmp	r1, sl
 80177e4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80177e8:	da03      	bge.n	80177f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80177ea:	b1d9      	cbz	r1, 8017824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80177ec:	468a      	mov	sl, r1
 80177ee:	464f      	mov	r7, r9
 80177f0:	4635      	mov	r5, r6
 80177f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80177f6:	f119 0f02 	cmn.w	r9, #2
 80177fa:	d1c5      	bne.n	8017788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80177fc:	4616      	mov	r6, r2
 80177fe:	3201      	adds	r2, #1
 8017800:	f1a4 0408 	sub.w	r4, r4, #8
 8017804:	d1b6      	bne.n	8017774 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017806:	9b01      	ldr	r3, [sp, #4]
 8017808:	b2ac      	uxth	r4, r5
 801780a:	00ed      	lsls	r5, r5, #3
 801780c:	1958      	adds	r0, r3, r5
 801780e:	1c7b      	adds	r3, r7, #1
 8017810:	d10b      	bne.n	801782a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8017812:	4601      	mov	r1, r0
 8017814:	9803      	ldr	r0, [sp, #12]
 8017816:	f7ff facd 	bl	8016db4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801781a:	4621      	mov	r1, r4
 801781c:	9801      	ldr	r0, [sp, #4]
 801781e:	f7ff fc8d 	bl	801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017822:	e4b5      	b.n	8017190 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017824:	464f      	mov	r7, r9
 8017826:	4635      	mov	r5, r6
 8017828:	e7ed      	b.n	8017806 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801782a:	9b01      	ldr	r3, [sp, #4]
 801782c:	00ff      	lsls	r7, r7, #3
 801782e:	19d9      	adds	r1, r3, r7
 8017830:	f7ff fac0 	bl	8016db4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8017834:	9b03      	ldr	r3, [sp, #12]
 8017836:	cb03      	ldmia	r3!, {r0, r1}
 8017838:	445f      	add	r7, fp
 801783a:	445d      	add	r5, fp
 801783c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8017840:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8017844:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8017848:	9b03      	ldr	r3, [sp, #12]
 801784a:	6869      	ldr	r1, [r5, #4]
 801784c:	c303      	stmia	r3!, {r0, r1}
 801784e:	e7e4      	b.n	801781a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08017850 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8017850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017854:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8017858:	b09b      	sub	sp, #108	; 0x6c
 801785a:	4604      	mov	r4, r0
 801785c:	4630      	mov	r0, r6
 801785e:	f7f9 fbe0 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017862:	4605      	mov	r5, r0
 8017864:	b948      	cbnz	r0, 801787a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8017866:	6823      	ldr	r3, [r4, #0]
 8017868:	e896 0006 	ldmia.w	r6, {r1, r2}
 801786c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801786e:	4620      	mov	r0, r4
 8017870:	4798      	blx	r3
 8017872:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8017876:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801787a:	4bc6      	ldr	r3, [pc, #792]	; (8017b94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801787c:	681b      	ldr	r3, [r3, #0]
 801787e:	2b00      	cmp	r3, #0
 8017880:	d03f      	beq.n	8017902 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017882:	4dc5      	ldr	r5, [pc, #788]	; (8017b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017884:	4628      	mov	r0, r5
 8017886:	f7f9 fbcc 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801788a:	4606      	mov	r6, r0
 801788c:	2800      	cmp	r0, #0
 801788e:	d138      	bne.n	8017902 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017890:	4628      	mov	r0, r5
 8017892:	f7ff f907 	bl	8016aa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017896:	6823      	ldr	r3, [r4, #0]
 8017898:	6829      	ldr	r1, [r5, #0]
 801789a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801789c:	686a      	ldr	r2, [r5, #4]
 801789e:	4620      	mov	r0, r4
 80178a0:	4798      	blx	r3
 80178a2:	802e      	strh	r6, [r5, #0]
 80178a4:	806e      	strh	r6, [r5, #2]
 80178a6:	80ae      	strh	r6, [r5, #4]
 80178a8:	80ee      	strh	r6, [r5, #6]
 80178aa:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80178ae:	4dbb      	ldr	r5, [pc, #748]	; (8017b9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80178b0:	4640      	mov	r0, r8
 80178b2:	f7ff fbeb 	bl	801708c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80178b6:	882e      	ldrh	r6, [r5, #0]
 80178b8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80178bc:	4633      	mov	r3, r6
 80178be:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80178c2:	42bb      	cmp	r3, r7
 80178c4:	d224      	bcs.n	8017910 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80178c6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80178ca:	2907      	cmp	r1, #7
 80178cc:	d816      	bhi.n	80178fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80178ce:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80178d2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80178d6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80178da:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80178de:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80178e2:	1c4a      	adds	r2, r1, #1
 80178e4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80178e8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80178ec:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80178f0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80178f4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80178f8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80178fc:	3301      	adds	r3, #1
 80178fe:	b29b      	uxth	r3, r3
 8017900:	e7df      	b.n	80178c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017902:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017906:	2b00      	cmp	r3, #0
 8017908:	d1cf      	bne.n	80178aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801790a:	b01b      	add	sp, #108	; 0x6c
 801790c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017910:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8017914:	42b3      	cmp	r3, r6
 8017916:	d90c      	bls.n	8017932 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8017918:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801791c:	6822      	ldr	r2, [r4, #0]
 801791e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8017922:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8017924:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8017928:	4620      	mov	r0, r4
 801792a:	3601      	adds	r6, #1
 801792c:	47b8      	blx	r7
 801792e:	b2b6      	uxth	r6, r6
 8017930:	e7ee      	b.n	8017910 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017932:	4a9b      	ldr	r2, [pc, #620]	; (8017ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017934:	6813      	ldr	r3, [r2, #0]
 8017936:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801793a:	2b01      	cmp	r3, #1
 801793c:	4691      	mov	r9, r2
 801793e:	f040 80e2 	bne.w	8017b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8017942:	8829      	ldrh	r1, [r5, #0]
 8017944:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8017948:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801794c:	33ae      	adds	r3, #174	; 0xae
 801794e:	2600      	movs	r6, #0
 8017950:	428f      	cmp	r7, r1
 8017952:	f103 0308 	add.w	r3, r3, #8
 8017956:	dd0a      	ble.n	801796e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8017958:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801795c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8017960:	4402      	add	r2, r0
 8017962:	b212      	sxth	r2, r2
 8017964:	4296      	cmp	r6, r2
 8017966:	bfb8      	it	lt
 8017968:	4616      	movlt	r6, r2
 801796a:	3101      	adds	r1, #1
 801796c:	e7f0      	b.n	8017950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801796e:	4b8d      	ldr	r3, [pc, #564]	; (8017ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017970:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8017974:	881b      	ldrh	r3, [r3, #0]
 8017976:	2b0f      	cmp	r3, #15
 8017978:	bf88      	it	hi
 801797a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801797e:	f04f 0300 	mov.w	r3, #0
 8017982:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017986:	bf98      	it	ls
 8017988:	f04f 0b01 	movls.w	fp, #1
 801798c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017990:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017994:	4b82      	ldr	r3, [pc, #520]	; (8017ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017996:	4438      	add	r0, r7
 8017998:	b207      	sxth	r7, r0
 801799a:	6818      	ldr	r0, [r3, #0]
 801799c:	42b7      	cmp	r7, r6
 801799e:	6803      	ldr	r3, [r0, #0]
 80179a0:	f280 8083 	bge.w	8017aaa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80179a4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80179a8:	4798      	blx	r3
 80179aa:	eb07 030b 	add.w	r3, r7, fp
 80179ae:	4298      	cmp	r0, r3
 80179b0:	da07      	bge.n	80179c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80179b2:	42b0      	cmp	r0, r6
 80179b4:	da05      	bge.n	80179c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80179b6:	4287      	cmp	r7, r0
 80179b8:	dd6c      	ble.n	8017a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80179ba:	2f00      	cmp	r7, #0
 80179bc:	dd6a      	ble.n	8017a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80179be:	4630      	mov	r0, r6
 80179c0:	e004      	b.n	80179cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80179c2:	4287      	cmp	r7, r0
 80179c4:	dcfb      	bgt.n	80179be <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80179c6:	42b0      	cmp	r0, r6
 80179c8:	bfa8      	it	ge
 80179ca:	4630      	movge	r0, r6
 80179cc:	4b76      	ldr	r3, [pc, #472]	; (8017ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80179ce:	f8ad 7016 	strh.w	r7, [sp, #22]
 80179d2:	1bc0      	subs	r0, r0, r7
 80179d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80179d8:	882f      	ldrh	r7, [r5, #0]
 80179da:	f8ad 3018 	strh.w	r3, [sp, #24]
 80179de:	2200      	movs	r2, #0
 80179e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80179e4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80179e8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80179ec:	42bb      	cmp	r3, r7
 80179ee:	d9cd      	bls.n	801798c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80179f0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80179f4:	ab07      	add	r3, sp, #28
 80179f6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80179fa:	6851      	ldr	r1, [r2, #4]
 80179fc:	c303      	stmia	r3!, {r0, r1}
 80179fe:	a905      	add	r1, sp, #20
 8017a00:	a807      	add	r0, sp, #28
 8017a02:	f7ff f93e 	bl	8016c82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017a06:	2800      	cmp	r0, #0
 8017a08:	d04c      	beq.n	8017aa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8017a0a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8017a0e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017a12:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8017a16:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8017a1a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017a1e:	9302      	str	r3, [sp, #8]
 8017a20:	4686      	mov	lr, r0
 8017a22:	4290      	cmp	r0, r2
 8017a24:	4450      	add	r0, sl
 8017a26:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8017a2a:	bfb8      	it	lt
 8017a2c:	4696      	movlt	lr, r2
 8017a2e:	4452      	add	r2, sl
 8017a30:	4299      	cmp	r1, r3
 8017a32:	b280      	uxth	r0, r0
 8017a34:	b292      	uxth	r2, r2
 8017a36:	468c      	mov	ip, r1
 8017a38:	fa0f fa82 	sxth.w	sl, r2
 8017a3c:	bfb8      	it	lt
 8017a3e:	469c      	movlt	ip, r3
 8017a40:	b203      	sxth	r3, r0
 8017a42:	4553      	cmp	r3, sl
 8017a44:	bfb8      	it	lt
 8017a46:	4602      	movlt	r2, r0
 8017a48:	eba2 020e 	sub.w	r2, r2, lr
 8017a4c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017a50:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017a54:	9b02      	ldr	r3, [sp, #8]
 8017a56:	f8ad e01c 	strh.w	lr, [sp, #28]
 8017a5a:	4411      	add	r1, r2
 8017a5c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017a60:	f8ad c01e 	strh.w	ip, [sp, #30]
 8017a64:	4413      	add	r3, r2
 8017a66:	b289      	uxth	r1, r1
 8017a68:	b29b      	uxth	r3, r3
 8017a6a:	b208      	sxth	r0, r1
 8017a6c:	b21a      	sxth	r2, r3
 8017a6e:	4290      	cmp	r0, r2
 8017a70:	bfb8      	it	lt
 8017a72:	460b      	movlt	r3, r1
 8017a74:	eba3 030c 	sub.w	r3, r3, ip
 8017a78:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017a7c:	a807      	add	r0, sp, #28
 8017a7e:	f7f9 fad0 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a82:	b920      	cbnz	r0, 8017a8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017a84:	6823      	ldr	r3, [r4, #0]
 8017a86:	a907      	add	r1, sp, #28
 8017a88:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017a8a:	4620      	mov	r0, r4
 8017a8c:	4798      	blx	r3
 8017a8e:	3701      	adds	r7, #1
 8017a90:	b2bf      	uxth	r7, r7
 8017a92:	e7a9      	b.n	80179e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017a94:	f8d9 0000 	ldr.w	r0, [r9]
 8017a98:	6803      	ldr	r3, [r0, #0]
 8017a9a:	2101      	movs	r1, #1
 8017a9c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017aa0:	4798      	blx	r3
 8017aa2:	e773      	b.n	801798c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017aa4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017aa8:	e7e8      	b.n	8017a7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8017aaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017aac:	4798      	blx	r3
 8017aae:	4b3f      	ldr	r3, [pc, #252]	; (8017bac <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017ab0:	781b      	ldrb	r3, [r3, #0]
 8017ab2:	2b00      	cmp	r3, #0
 8017ab4:	f43f af29 	beq.w	801790a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017ab8:	2300      	movs	r3, #0
 8017aba:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8017abe:	882b      	ldrh	r3, [r5, #0]
 8017ac0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017ac4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017ac8:	42ab      	cmp	r3, r5
 8017aca:	f4bf af1e 	bcs.w	801790a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017ace:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017ad2:	2907      	cmp	r1, #7
 8017ad4:	d814      	bhi.n	8017b00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017ad6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8017ada:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8017ade:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017ae2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017ae6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8017aea:	1c4a      	adds	r2, r1, #1
 8017aec:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017af0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017af4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017af8:	f8a2 c002 	strh.w	ip, [r2, #2]
 8017afc:	8097      	strh	r7, [r2, #4]
 8017afe:	80d6      	strh	r6, [r2, #6]
 8017b00:	3301      	adds	r3, #1
 8017b02:	b29b      	uxth	r3, r3
 8017b04:	e7e0      	b.n	8017ac8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017b06:	2b02      	cmp	r3, #2
 8017b08:	f040 8133 	bne.w	8017d72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8017b0c:	4b28      	ldr	r3, [pc, #160]	; (8017bb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8017b0e:	781b      	ldrb	r3, [r3, #0]
 8017b10:	2b01      	cmp	r3, #1
 8017b12:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8017b16:	f000 8098 	beq.w	8017c4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017b1a:	882a      	ldrh	r2, [r5, #0]
 8017b1c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8017b20:	3201      	adds	r2, #1
 8017b22:	b292      	uxth	r2, r2
 8017b24:	2900      	cmp	r1, #0
 8017b26:	d0c2      	beq.n	8017aae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017b28:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8017b2c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8017b30:	441e      	add	r6, r3
 8017b32:	b236      	sxth	r6, r6
 8017b34:	4694      	mov	ip, r2
 8017b36:	f04f 0900 	mov.w	r9, #0
 8017b3a:	fa1f f38c 	uxth.w	r3, ip
 8017b3e:	4299      	cmp	r1, r3
 8017b40:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8017b44:	f240 80bf 	bls.w	8017cc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8017b48:	4427      	add	r7, r4
 8017b4a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8017b4e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8017b52:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8017b56:	4283      	cmp	r3, r0
 8017b58:	f340 80a1 	ble.w	8017c9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8017b5c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8017b60:	4406      	add	r6, r0
 8017b62:	b236      	sxth	r6, r6
 8017b64:	429e      	cmp	r6, r3
 8017b66:	bfa8      	it	ge
 8017b68:	461e      	movge	r6, r3
 8017b6a:	46e1      	mov	r9, ip
 8017b6c:	f10c 0c01 	add.w	ip, ip, #1
 8017b70:	e7e3      	b.n	8017b3a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8017b72:	d10a      	bne.n	8017b8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017b74:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8017b78:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8017b7c:	4562      	cmp	r2, ip
 8017b7e:	bfb8      	it	lt
 8017b80:	4662      	movlt	r2, ip
 8017b82:	4288      	cmp	r0, r1
 8017b84:	bfb8      	it	lt
 8017b86:	461f      	movlt	r7, r3
 8017b88:	e087      	b.n	8017c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017b8a:	428a      	cmp	r2, r1
 8017b8c:	bfb8      	it	lt
 8017b8e:	460a      	movlt	r2, r1
 8017b90:	e083      	b.n	8017c9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017b92:	bf00      	nop
 8017b94:	2001387c 	.word	0x2001387c
 8017b98:	20013888 	.word	0x20013888
 8017b9c:	2000008c 	.word	0x2000008c
 8017ba0:	2001383c 	.word	0x2001383c
 8017ba4:	20013832 	.word	0x20013832
 8017ba8:	20013830 	.word	0x20013830
 8017bac:	2001383a 	.word	0x2001383a
 8017bb0:	20013834 	.word	0x20013834
 8017bb4:	19a1      	adds	r1, r4, r6
 8017bb6:	ab07      	add	r3, sp, #28
 8017bb8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017bbc:	6849      	ldr	r1, [r1, #4]
 8017bbe:	c303      	stmia	r3!, {r0, r1}
 8017bc0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017bc4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017bc8:	2b13      	cmp	r3, #19
 8017bca:	bfd8      	it	le
 8017bcc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017bd0:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017bd4:	440b      	add	r3, r1
 8017bd6:	1a9b      	subs	r3, r3, r2
 8017bd8:	a807      	add	r0, sp, #28
 8017bda:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017bde:	f7fe ff7b 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017be2:	a807      	add	r0, sp, #28
 8017be4:	f7f9 fa1d 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017be8:	bb78      	cbnz	r0, 8017c4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017bea:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8017bee:	f8d9 0000 	ldr.w	r0, [r9]
 8017bf2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017bf6:	f8d0 e000 	ldr.w	lr, [r0]
 8017bfa:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8017bfe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017c02:	f1bc 0f14 	cmp.w	ip, #20
 8017c06:	bfa8      	it	ge
 8017c08:	f04f 0c14 	movge.w	ip, #20
 8017c0c:	fa1f fc8c 	uxth.w	ip, ip
 8017c10:	f8cd c000 	str.w	ip, [sp]
 8017c14:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8017c18:	47d8      	blx	fp
 8017c1a:	4683      	mov	fp, r0
 8017c1c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017c20:	a807      	add	r0, sp, #28
 8017c22:	f7fe ff3f 	bl	8016aa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017c26:	6823      	ldr	r3, [r4, #0]
 8017c28:	4426      	add	r6, r4
 8017c2a:	4620      	mov	r0, r4
 8017c2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017c2e:	a907      	add	r1, sp, #28
 8017c30:	4798      	blx	r3
 8017c32:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017c36:	eba0 000b 	sub.w	r0, r0, fp
 8017c3a:	b200      	sxth	r0, r0
 8017c3c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017c40:	b918      	cbnz	r0, 8017c4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017c42:	b2b9      	uxth	r1, r7
 8017c44:	4650      	mov	r0, sl
 8017c46:	f7ff fa79 	bl	801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017c4a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8017c4e:	f1bb 0f00 	cmp.w	fp, #0
 8017c52:	f43f af2c 	beq.w	8017aae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017c56:	882b      	ldrh	r3, [r5, #0]
 8017c58:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8017c5c:	3301      	adds	r3, #1
 8017c5e:	b29b      	uxth	r3, r3
 8017c60:	2700      	movs	r7, #0
 8017c62:	b299      	uxth	r1, r3
 8017c64:	458b      	cmp	fp, r1
 8017c66:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8017c6a:	d9a3      	bls.n	8017bb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8017c6c:	4426      	add	r6, r4
 8017c6e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017c72:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017c76:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017c7a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8017c7e:	4408      	add	r0, r1
 8017c80:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8017c84:	4461      	add	r1, ip
 8017c86:	b200      	sxth	r0, r0
 8017c88:	b209      	sxth	r1, r1
 8017c8a:	4288      	cmp	r0, r1
 8017c8c:	f6bf af71 	bge.w	8017b72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017c90:	4584      	cmp	ip, r0
 8017c92:	4662      	mov	r2, ip
 8017c94:	461f      	mov	r7, r3
 8017c96:	bfb8      	it	lt
 8017c98:	4602      	movlt	r2, r0
 8017c9a:	3301      	adds	r3, #1
 8017c9c:	e7e1      	b.n	8017c62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8017c9e:	d10e      	bne.n	8017cbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017ca0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017ca4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017ca8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8017cac:	4473      	add	r3, lr
 8017cae:	b21b      	sxth	r3, r3
 8017cb0:	429e      	cmp	r6, r3
 8017cb2:	bfa8      	it	ge
 8017cb4:	461e      	movge	r6, r3
 8017cb6:	4287      	cmp	r7, r0
 8017cb8:	bfb8      	it	lt
 8017cba:	46e1      	movlt	r9, ip
 8017cbc:	e756      	b.n	8017b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017cbe:	4286      	cmp	r6, r0
 8017cc0:	bfa8      	it	ge
 8017cc2:	4606      	movge	r6, r0
 8017cc4:	e752      	b.n	8017b6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017cc6:	eb0a 0007 	add.w	r0, sl, r7
 8017cca:	4427      	add	r7, r4
 8017ccc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017cd0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017cd4:	f1bb 0f13 	cmp.w	fp, #19
 8017cd8:	bfde      	ittt	le
 8017cda:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8017cde:	445e      	addle	r6, fp
 8017ce0:	b236      	sxthle	r6, r6
 8017ce2:	f7f9 f99e 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017ce6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8017cea:	2800      	cmp	r0, #0
 8017cec:	f47f af1a 	bne.w	8017b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017cf0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017cf4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017cf8:	482a      	ldr	r0, [pc, #168]	; (8017da4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8017cfa:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8017cfe:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017d02:	6800      	ldr	r0, [r0, #0]
 8017d04:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017d08:	1ab6      	subs	r6, r6, r2
 8017d0a:	2e14      	cmp	r6, #20
 8017d0c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017d10:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017d14:	bfa8      	it	ge
 8017d16:	2614      	movge	r6, #20
 8017d18:	f8d0 c000 	ldr.w	ip, [r0]
 8017d1c:	b2b6      	uxth	r6, r6
 8017d1e:	fa1f fb8b 	uxth.w	fp, fp
 8017d22:	455e      	cmp	r6, fp
 8017d24:	bf94      	ite	ls
 8017d26:	9600      	strls	r6, [sp, #0]
 8017d28:	f8cd b000 	strhi.w	fp, [sp]
 8017d2c:	b292      	uxth	r2, r2
 8017d2e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8017d32:	b29b      	uxth	r3, r3
 8017d34:	b289      	uxth	r1, r1
 8017d36:	47b0      	blx	r6
 8017d38:	6823      	ldr	r3, [r4, #0]
 8017d3a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017d3e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017d40:	a907      	add	r1, sp, #28
 8017d42:	4620      	mov	r0, r4
 8017d44:	4798      	blx	r3
 8017d46:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017d4a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8017d4e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8017d52:	1a5b      	subs	r3, r3, r1
 8017d54:	440a      	add	r2, r1
 8017d56:	b21b      	sxth	r3, r3
 8017d58:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8017d5c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017d60:	2b00      	cmp	r3, #0
 8017d62:	f47f aeda 	bne.w	8017b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017d66:	fa1f f189 	uxth.w	r1, r9
 8017d6a:	4650      	mov	r0, sl
 8017d6c:	f7ff f9e6 	bl	801713c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017d70:	e6d3      	b.n	8017b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017d72:	882e      	ldrh	r6, [r5, #0]
 8017d74:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017d78:	42b3      	cmp	r3, r6
 8017d7a:	f67f ae98 	bls.w	8017aae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017d7e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017d82:	ab07      	add	r3, sp, #28
 8017d84:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017d88:	6851      	ldr	r1, [r2, #4]
 8017d8a:	c303      	stmia	r3!, {r0, r1}
 8017d8c:	a807      	add	r0, sp, #28
 8017d8e:	f7f9 f948 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017d92:	b920      	cbnz	r0, 8017d9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017d94:	6823      	ldr	r3, [r4, #0]
 8017d96:	a907      	add	r1, sp, #28
 8017d98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017d9a:	4620      	mov	r0, r4
 8017d9c:	4798      	blx	r3
 8017d9e:	3601      	adds	r6, #1
 8017da0:	b2b6      	uxth	r6, r6
 8017da2:	e7e7      	b.n	8017d74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017da4:	2001383c 	.word	0x2001383c

08017da8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017da8:	4b03      	ldr	r3, [pc, #12]	; (8017db8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017daa:	2200      	movs	r2, #0
 8017dac:	801a      	strh	r2, [r3, #0]
 8017dae:	805a      	strh	r2, [r3, #2]
 8017db0:	809a      	strh	r2, [r3, #4]
 8017db2:	80da      	strh	r2, [r3, #6]
 8017db4:	4770      	bx	lr
 8017db6:	bf00      	nop
 8017db8:	20013888 	.word	0x20013888

08017dbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dc0:	4606      	mov	r6, r0
 8017dc2:	b09d      	sub	sp, #116	; 0x74
 8017dc4:	a803      	add	r0, sp, #12
 8017dc6:	4614      	mov	r4, r2
 8017dc8:	468a      	mov	sl, r1
 8017dca:	461d      	mov	r5, r3
 8017dcc:	f000 ff08 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 8017dd0:	6833      	ldr	r3, [r6, #0]
 8017dd2:	4630      	mov	r0, r6
 8017dd4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017dd6:	4798      	blx	r3
 8017dd8:	6833      	ldr	r3, [r6, #0]
 8017dda:	4607      	mov	r7, r0
 8017ddc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017dde:	4630      	mov	r0, r6
 8017de0:	4798      	blx	r3
 8017de2:	462a      	mov	r2, r5
 8017de4:	9000      	str	r0, [sp, #0]
 8017de6:	4621      	mov	r1, r4
 8017de8:	463b      	mov	r3, r7
 8017dea:	a803      	add	r0, sp, #12
 8017dec:	f000 ff53 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017df0:	2500      	movs	r5, #0
 8017df2:	462c      	mov	r4, r5
 8017df4:	46a9      	mov	r9, r5
 8017df6:	46a8      	mov	r8, r5
 8017df8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017dfc:	2300      	movs	r3, #0
 8017dfe:	9302      	str	r3, [sp, #8]
 8017e00:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017e04:	429c      	cmp	r4, r3
 8017e06:	d002      	beq.n	8017e0e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017e08:	455c      	cmp	r4, fp
 8017e0a:	bf18      	it	ne
 8017e0c:	4625      	movne	r5, r4
 8017e0e:	ab02      	add	r3, sp, #8
 8017e10:	4632      	mov	r2, r6
 8017e12:	4651      	mov	r1, sl
 8017e14:	a803      	add	r0, sp, #12
 8017e16:	f001 fa41 	bl	801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e1a:	4604      	mov	r4, r0
 8017e1c:	b108      	cbz	r0, 8017e22 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8017e1e:	280a      	cmp	r0, #10
 8017e20:	d10a      	bne.n	8017e38 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017e22:	45c1      	cmp	r9, r8
 8017e24:	bf38      	it	cc
 8017e26:	46c1      	movcc	r9, r8
 8017e28:	f04f 0800 	mov.w	r8, #0
 8017e2c:	2c00      	cmp	r4, #0
 8017e2e:	d1e5      	bne.n	8017dfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017e30:	4648      	mov	r0, r9
 8017e32:	b01d      	add	sp, #116	; 0x74
 8017e34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e38:	9a02      	ldr	r2, [sp, #8]
 8017e3a:	2a00      	cmp	r2, #0
 8017e3c:	d0de      	beq.n	8017dfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017e3e:	7b57      	ldrb	r7, [r2, #13]
 8017e40:	6833      	ldr	r3, [r6, #0]
 8017e42:	8894      	ldrh	r4, [r2, #4]
 8017e44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017e46:	007f      	lsls	r7, r7, #1
 8017e48:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8017e4c:	7a97      	ldrb	r7, [r2, #10]
 8017e4e:	4629      	mov	r1, r5
 8017e50:	4307      	orrs	r7, r0
 8017e52:	4630      	mov	r0, r6
 8017e54:	4798      	blx	r3
 8017e56:	4438      	add	r0, r7
 8017e58:	4480      	add	r8, r0
 8017e5a:	fa1f f888 	uxth.w	r8, r8
 8017e5e:	e7e5      	b.n	8017e2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017e60 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017e60:	b508      	push	{r3, lr}
 8017e62:	6803      	ldr	r3, [r0, #0]
 8017e64:	68db      	ldr	r3, [r3, #12]
 8017e66:	4798      	blx	r3
 8017e68:	b128      	cbz	r0, 8017e76 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8017e6a:	7b43      	ldrb	r3, [r0, #13]
 8017e6c:	7a80      	ldrb	r0, [r0, #10]
 8017e6e:	005b      	lsls	r3, r3, #1
 8017e70:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017e74:	4318      	orrs	r0, r3
 8017e76:	bd08      	pop	{r3, pc}

08017e78 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017e78:	b40e      	push	{r1, r2, r3}
 8017e7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e7c:	b09e      	sub	sp, #120	; 0x78
 8017e7e:	ab23      	add	r3, sp, #140	; 0x8c
 8017e80:	4605      	mov	r5, r0
 8017e82:	f853 4b04 	ldr.w	r4, [r3], #4
 8017e86:	9303      	str	r3, [sp, #12]
 8017e88:	a805      	add	r0, sp, #20
 8017e8a:	f000 fea9 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 8017e8e:	682b      	ldr	r3, [r5, #0]
 8017e90:	4628      	mov	r0, r5
 8017e92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017e94:	4798      	blx	r3
 8017e96:	682b      	ldr	r3, [r5, #0]
 8017e98:	4606      	mov	r6, r0
 8017e9a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017e9c:	4628      	mov	r0, r5
 8017e9e:	4798      	blx	r3
 8017ea0:	4633      	mov	r3, r6
 8017ea2:	ae1e      	add	r6, sp, #120	; 0x78
 8017ea4:	4621      	mov	r1, r4
 8017ea6:	9000      	str	r0, [sp, #0]
 8017ea8:	9a03      	ldr	r2, [sp, #12]
 8017eaa:	2400      	movs	r4, #0
 8017eac:	a805      	add	r0, sp, #20
 8017eae:	f000 fef2 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017eb2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017eb6:	462a      	mov	r2, r5
 8017eb8:	4633      	mov	r3, r6
 8017eba:	4621      	mov	r1, r4
 8017ebc:	a805      	add	r0, sp, #20
 8017ebe:	f001 f9ed 	bl	801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017ec2:	b1f0      	cbz	r0, 8017f02 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017ec4:	280a      	cmp	r0, #10
 8017ec6:	d018      	beq.n	8017efa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017ec8:	9f04      	ldr	r7, [sp, #16]
 8017eca:	b1b7      	cbz	r7, 8017efa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017ecc:	7b78      	ldrb	r0, [r7, #13]
 8017ece:	7a3b      	ldrb	r3, [r7, #8]
 8017ed0:	88ea      	ldrh	r2, [r5, #6]
 8017ed2:	00c1      	lsls	r1, r0, #3
 8017ed4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017ed8:	4319      	orrs	r1, r3
 8017eda:	0643      	lsls	r3, r0, #25
 8017edc:	bf44      	itt	mi
 8017ede:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017ee2:	b219      	sxthmi	r1, r3
 8017ee4:	0100      	lsls	r0, r0, #4
 8017ee6:	79fb      	ldrb	r3, [r7, #7]
 8017ee8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017eec:	4303      	orrs	r3, r0
 8017eee:	4413      	add	r3, r2
 8017ef0:	1a5b      	subs	r3, r3, r1
 8017ef2:	b21b      	sxth	r3, r3
 8017ef4:	429c      	cmp	r4, r3
 8017ef6:	bfb8      	it	lt
 8017ef8:	461c      	movlt	r4, r3
 8017efa:	4633      	mov	r3, r6
 8017efc:	462a      	mov	r2, r5
 8017efe:	2100      	movs	r1, #0
 8017f00:	e7dc      	b.n	8017ebc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017f02:	b2a0      	uxth	r0, r4
 8017f04:	b01e      	add	sp, #120	; 0x78
 8017f06:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017f0a:	b003      	add	sp, #12
 8017f0c:	4770      	bx	lr

08017f0e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017f0e:	7a43      	ldrb	r3, [r0, #9]
 8017f10:	8880      	ldrh	r0, [r0, #4]
 8017f12:	4418      	add	r0, r3
 8017f14:	b280      	uxth	r0, r0
 8017f16:	4770      	bx	lr

08017f18 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017f18:	6803      	ldr	r3, [r0, #0]
 8017f1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017f1c:	4718      	bx	r3

08017f1e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017f1e:	b40e      	push	{r1, r2, r3}
 8017f20:	b570      	push	{r4, r5, r6, lr}
 8017f22:	b09d      	sub	sp, #116	; 0x74
 8017f24:	ab21      	add	r3, sp, #132	; 0x84
 8017f26:	4604      	mov	r4, r0
 8017f28:	f853 5b04 	ldr.w	r5, [r3], #4
 8017f2c:	9302      	str	r3, [sp, #8]
 8017f2e:	a803      	add	r0, sp, #12
 8017f30:	f000 fe56 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 8017f34:	6823      	ldr	r3, [r4, #0]
 8017f36:	4620      	mov	r0, r4
 8017f38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017f3a:	4798      	blx	r3
 8017f3c:	6823      	ldr	r3, [r4, #0]
 8017f3e:	4606      	mov	r6, r0
 8017f40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017f42:	4620      	mov	r0, r4
 8017f44:	4798      	blx	r3
 8017f46:	4633      	mov	r3, r6
 8017f48:	9000      	str	r0, [sp, #0]
 8017f4a:	9a02      	ldr	r2, [sp, #8]
 8017f4c:	4629      	mov	r1, r5
 8017f4e:	a803      	add	r0, sp, #12
 8017f50:	f000 fea1 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017f54:	a803      	add	r0, sp, #12
 8017f56:	f001 fa6f 	bl	8019438 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017f5a:	2401      	movs	r4, #1
 8017f5c:	b2a3      	uxth	r3, r4
 8017f5e:	b140      	cbz	r0, 8017f72 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017f60:	280a      	cmp	r0, #10
 8017f62:	bf08      	it	eq
 8017f64:	3301      	addeq	r3, #1
 8017f66:	a803      	add	r0, sp, #12
 8017f68:	bf08      	it	eq
 8017f6a:	b21c      	sxtheq	r4, r3
 8017f6c:	f001 fa64 	bl	8019438 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017f70:	e7f4      	b.n	8017f5c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017f72:	4618      	mov	r0, r3
 8017f74:	b01d      	add	sp, #116	; 0x74
 8017f76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f7a:	b003      	add	sp, #12
 8017f7c:	4770      	bx	lr

08017f7e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017f7e:	b40e      	push	{r1, r2, r3}
 8017f80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f82:	b09e      	sub	sp, #120	; 0x78
 8017f84:	ab23      	add	r3, sp, #140	; 0x8c
 8017f86:	4604      	mov	r4, r0
 8017f88:	f853 5b04 	ldr.w	r5, [r3], #4
 8017f8c:	9303      	str	r3, [sp, #12]
 8017f8e:	a805      	add	r0, sp, #20
 8017f90:	f000 fe26 	bl	8018be0 <_ZN8touchgfx12TextProviderC1Ev>
 8017f94:	6823      	ldr	r3, [r4, #0]
 8017f96:	4620      	mov	r0, r4
 8017f98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017f9a:	4798      	blx	r3
 8017f9c:	6823      	ldr	r3, [r4, #0]
 8017f9e:	4606      	mov	r6, r0
 8017fa0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017fa2:	4620      	mov	r0, r4
 8017fa4:	4798      	blx	r3
 8017fa6:	4633      	mov	r3, r6
 8017fa8:	4629      	mov	r1, r5
 8017faa:	9000      	str	r0, [sp, #0]
 8017fac:	9a03      	ldr	r2, [sp, #12]
 8017fae:	a805      	add	r0, sp, #20
 8017fb0:	ad1e      	add	r5, sp, #120	; 0x78
 8017fb2:	f000 fe70 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017fb6:	2100      	movs	r1, #0
 8017fb8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017fbc:	4622      	mov	r2, r4
 8017fbe:	462b      	mov	r3, r5
 8017fc0:	a805      	add	r0, sp, #20
 8017fc2:	f001 f96b 	bl	801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017fc6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017fca:	b1d8      	cbz	r0, 8018004 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017fcc:	280a      	cmp	r0, #10
 8017fce:	d012      	beq.n	8017ff6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017fd0:	9804      	ldr	r0, [sp, #16]
 8017fd2:	b180      	cbz	r0, 8017ff6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017fd4:	7b47      	ldrb	r7, [r0, #13]
 8017fd6:	88e2      	ldrh	r2, [r4, #6]
 8017fd8:	00fb      	lsls	r3, r7, #3
 8017fda:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017fde:	7a03      	ldrb	r3, [r0, #8]
 8017fe0:	430b      	orrs	r3, r1
 8017fe2:	0679      	lsls	r1, r7, #25
 8017fe4:	bf44      	itt	mi
 8017fe6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017fea:	b21b      	sxthmi	r3, r3
 8017fec:	1ad3      	subs	r3, r2, r3
 8017fee:	b21b      	sxth	r3, r3
 8017ff0:	429e      	cmp	r6, r3
 8017ff2:	bfa8      	it	ge
 8017ff4:	461e      	movge	r6, r3
 8017ff6:	462b      	mov	r3, r5
 8017ff8:	4622      	mov	r2, r4
 8017ffa:	2100      	movs	r1, #0
 8017ffc:	a805      	add	r0, sp, #20
 8017ffe:	f001 f94d 	bl	801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8018002:	e7e2      	b.n	8017fca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8018004:	4630      	mov	r0, r6
 8018006:	b01e      	add	sp, #120	; 0x78
 8018008:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801800c:	b003      	add	sp, #12
 801800e:	4770      	bx	lr

08018010 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8018010:	b513      	push	{r0, r1, r4, lr}
 8018012:	6803      	ldr	r3, [r0, #0]
 8018014:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8018018:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801801c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018020:	2400      	movs	r4, #0
 8018022:	9400      	str	r4, [sp, #0]
 8018024:	f8ad 2006 	strh.w	r2, [sp, #6]
 8018028:	691b      	ldr	r3, [r3, #16]
 801802a:	4669      	mov	r1, sp
 801802c:	4798      	blx	r3
 801802e:	b002      	add	sp, #8
 8018030:	bd10      	pop	{r4, pc}

08018032 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8018032:	b538      	push	{r3, r4, r5, lr}
 8018034:	680b      	ldr	r3, [r1, #0]
 8018036:	460c      	mov	r4, r1
 8018038:	68db      	ldr	r3, [r3, #12]
 801803a:	4605      	mov	r5, r0
 801803c:	4798      	blx	r3
 801803e:	6823      	ldr	r3, [r4, #0]
 8018040:	4620      	mov	r0, r4
 8018042:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018044:	4629      	mov	r1, r5
 8018046:	4798      	blx	r3
 8018048:	4628      	mov	r0, r5
 801804a:	bd38      	pop	{r3, r4, r5, pc}

0801804c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801804c:	b410      	push	{r4}
 801804e:	880a      	ldrh	r2, [r1, #0]
 8018050:	8884      	ldrh	r4, [r0, #4]
 8018052:	4422      	add	r2, r4
 8018054:	800a      	strh	r2, [r1, #0]
 8018056:	88c4      	ldrh	r4, [r0, #6]
 8018058:	884a      	ldrh	r2, [r1, #2]
 801805a:	4422      	add	r2, r4
 801805c:	804a      	strh	r2, [r1, #2]
 801805e:	6940      	ldr	r0, [r0, #20]
 8018060:	b120      	cbz	r0, 801806c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8018062:	6803      	ldr	r3, [r0, #0]
 8018064:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018068:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801806a:	4718      	bx	r3
 801806c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018070:	4770      	bx	lr

08018072 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8018072:	b570      	push	{r4, r5, r6, lr}
 8018074:	8882      	ldrh	r2, [r0, #4]
 8018076:	880b      	ldrh	r3, [r1, #0]
 8018078:	4413      	add	r3, r2
 801807a:	800b      	strh	r3, [r1, #0]
 801807c:	88c2      	ldrh	r2, [r0, #6]
 801807e:	884b      	ldrh	r3, [r1, #2]
 8018080:	460c      	mov	r4, r1
 8018082:	4413      	add	r3, r2
 8018084:	804b      	strh	r3, [r1, #2]
 8018086:	4605      	mov	r5, r0
 8018088:	1d01      	adds	r1, r0, #4
 801808a:	4620      	mov	r0, r4
 801808c:	f7f8 ff86 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8018090:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8018094:	2b00      	cmp	r3, #0
 8018096:	dd0b      	ble.n	80180b0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8018098:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801809c:	2b00      	cmp	r3, #0
 801809e:	dd07      	ble.n	80180b0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80180a0:	6968      	ldr	r0, [r5, #20]
 80180a2:	b128      	cbz	r0, 80180b0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80180a4:	6803      	ldr	r3, [r0, #0]
 80180a6:	4621      	mov	r1, r4
 80180a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80180aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80180ae:	4718      	bx	r3
 80180b0:	bd70      	pop	{r4, r5, r6, pc}
	...

080180b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80180b4:	b570      	push	{r4, r5, r6, lr}
 80180b6:	8882      	ldrh	r2, [r0, #4]
 80180b8:	880b      	ldrh	r3, [r1, #0]
 80180ba:	4413      	add	r3, r2
 80180bc:	800b      	strh	r3, [r1, #0]
 80180be:	88c2      	ldrh	r2, [r0, #6]
 80180c0:	884b      	ldrh	r3, [r1, #2]
 80180c2:	460c      	mov	r4, r1
 80180c4:	4413      	add	r3, r2
 80180c6:	804b      	strh	r3, [r1, #2]
 80180c8:	4605      	mov	r5, r0
 80180ca:	1d01      	adds	r1, r0, #4
 80180cc:	4620      	mov	r0, r4
 80180ce:	f7f8 ff65 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 80180d2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80180d6:	2b00      	cmp	r3, #0
 80180d8:	dd19      	ble.n	801810e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80180da:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80180de:	2b00      	cmp	r3, #0
 80180e0:	dd15      	ble.n	801810e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80180e2:	6968      	ldr	r0, [r5, #20]
 80180e4:	b128      	cbz	r0, 80180f2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80180e6:	6803      	ldr	r3, [r0, #0]
 80180e8:	4621      	mov	r1, r4
 80180ea:	691b      	ldr	r3, [r3, #16]
 80180ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80180f0:	4718      	bx	r3
 80180f2:	4b07      	ldr	r3, [pc, #28]	; (8018110 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80180f4:	681b      	ldr	r3, [r3, #0]
 80180f6:	3304      	adds	r3, #4
 80180f8:	429d      	cmp	r5, r3
 80180fa:	d108      	bne.n	801810e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80180fc:	f7fe fea0 	bl	8016e40 <_ZN8touchgfx11Application11getInstanceEv>
 8018100:	6803      	ldr	r3, [r0, #0]
 8018102:	6821      	ldr	r1, [r4, #0]
 8018104:	6862      	ldr	r2, [r4, #4]
 8018106:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8018108:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801810c:	4718      	bx	r3
 801810e:	bd70      	pop	{r4, r5, r6, pc}
 8018110:	20013880 	.word	0x20013880

08018114 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8018114:	b570      	push	{r4, r5, r6, lr}
 8018116:	4604      	mov	r4, r0
 8018118:	4616      	mov	r6, r2
 801811a:	460d      	mov	r5, r1
 801811c:	b901      	cbnz	r1, 8018120 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801811e:	b192      	cbz	r2, 8018146 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8018120:	6823      	ldr	r3, [r4, #0]
 8018122:	4620      	mov	r0, r4
 8018124:	699b      	ldr	r3, [r3, #24]
 8018126:	4798      	blx	r3
 8018128:	88e2      	ldrh	r2, [r4, #6]
 801812a:	88a1      	ldrh	r1, [r4, #4]
 801812c:	4432      	add	r2, r6
 801812e:	4429      	add	r1, r5
 8018130:	4620      	mov	r0, r4
 8018132:	b212      	sxth	r2, r2
 8018134:	b209      	sxth	r1, r1
 8018136:	f7ea fcd5 	bl	8002ae4 <_ZN8touchgfx8Drawable5setXYEss>
 801813a:	6823      	ldr	r3, [r4, #0]
 801813c:	4620      	mov	r0, r4
 801813e:	699b      	ldr	r3, [r3, #24]
 8018140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018144:	4718      	bx	r3
 8018146:	bd70      	pop	{r4, r5, r6, pc}

08018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8018148:	b510      	push	{r4, lr}
 801814a:	4604      	mov	r4, r0
 801814c:	4608      	mov	r0, r1
 801814e:	2300      	movs	r3, #0
 8018150:	8023      	strh	r3, [r4, #0]
 8018152:	8063      	strh	r3, [r4, #2]
 8018154:	6803      	ldr	r3, [r0, #0]
 8018156:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801815a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801815e:	80a1      	strh	r1, [r4, #4]
 8018160:	80e2      	strh	r2, [r4, #6]
 8018162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018164:	4621      	mov	r1, r4
 8018166:	4798      	blx	r3
 8018168:	4620      	mov	r0, r4
 801816a:	bd10      	pop	{r4, pc}

0801816c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801816c:	b530      	push	{r4, r5, lr}
 801816e:	8083      	strh	r3, [r0, #4]
 8018170:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8018174:	80c3      	strh	r3, [r0, #6]
 8018176:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801817a:	7203      	strb	r3, [r0, #8]
 801817c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018180:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8018184:	7243      	strb	r3, [r0, #9]
 8018186:	7a83      	ldrb	r3, [r0, #10]
 8018188:	6141      	str	r1, [r0, #20]
 801818a:	f365 0306 	bfi	r3, r5, #0, #7
 801818e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8018192:	8302      	strh	r2, [r0, #24]
 8018194:	f365 13c7 	bfi	r3, r5, #7, #1
 8018198:	7283      	strb	r3, [r0, #10]
 801819a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801819e:	72c3      	strb	r3, [r0, #11]
 80181a0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80181a4:	7303      	strb	r3, [r0, #12]
 80181a6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80181aa:	81c3      	strh	r3, [r0, #14]
 80181ac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80181b0:	8203      	strh	r3, [r0, #16]
 80181b2:	4b01      	ldr	r3, [pc, #4]	; (80181b8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80181b4:	6003      	str	r3, [r0, #0]
 80181b6:	bd30      	pop	{r4, r5, pc}
 80181b8:	080300ac 	.word	0x080300ac

080181bc <_ZNK8touchgfx9ConstFont4findEt>:
 80181bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80181be:	6944      	ldr	r4, [r0, #20]
 80181c0:	b3bc      	cbz	r4, 8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80181c2:	88a3      	ldrh	r3, [r4, #4]
 80181c4:	8b02      	ldrh	r2, [r0, #24]
 80181c6:	1acb      	subs	r3, r1, r3
 80181c8:	f102 32ff 	add.w	r2, r2, #4294967295
 80181cc:	d431      	bmi.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80181ce:	4293      	cmp	r3, r2
 80181d0:	dd0c      	ble.n	80181ec <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80181d2:	230e      	movs	r3, #14
 80181d4:	fb03 4302 	mla	r3, r3, r2, r4
 80181d8:	889b      	ldrh	r3, [r3, #4]
 80181da:	1a5b      	subs	r3, r3, r1
 80181dc:	1ad3      	subs	r3, r2, r3
 80181de:	429a      	cmp	r2, r3
 80181e0:	db27      	blt.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80181e2:	2b00      	cmp	r3, #0
 80181e4:	bfbc      	itt	lt
 80181e6:	2302      	movlt	r3, #2
 80181e8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80181ec:	2500      	movs	r5, #0
 80181ee:	260e      	movs	r6, #14
 80181f0:	4295      	cmp	r5, r2
 80181f2:	dc1e      	bgt.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80181f4:	fb06 4003 	mla	r0, r6, r3, r4
 80181f8:	8887      	ldrh	r7, [r0, #4]
 80181fa:	42b9      	cmp	r1, r7
 80181fc:	d01a      	beq.n	8018234 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80181fe:	d20d      	bcs.n	801821c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018200:	1e5a      	subs	r2, r3, #1
 8018202:	4295      	cmp	r5, r2
 8018204:	dc15      	bgt.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018206:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801820a:	1a5b      	subs	r3, r3, r1
 801820c:	1ad3      	subs	r3, r2, r3
 801820e:	429a      	cmp	r2, r3
 8018210:	db0f      	blt.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018212:	429d      	cmp	r5, r3
 8018214:	ddec      	ble.n	80181f0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018216:	1953      	adds	r3, r2, r5
 8018218:	105b      	asrs	r3, r3, #1
 801821a:	e7e9      	b.n	80181f0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801821c:	1c5d      	adds	r5, r3, #1
 801821e:	42aa      	cmp	r2, r5
 8018220:	db07      	blt.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018222:	8a43      	ldrh	r3, [r0, #18]
 8018224:	1acb      	subs	r3, r1, r3
 8018226:	442b      	add	r3, r5
 8018228:	429d      	cmp	r5, r3
 801822a:	dc02      	bgt.n	8018232 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801822c:	429a      	cmp	r2, r3
 801822e:	dadf      	bge.n	80181f0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018230:	e7f1      	b.n	8018216 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8018232:	2000      	movs	r0, #0
 8018234:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018236 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8018236:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018238:	4604      	mov	r4, r0
 801823a:	4617      	mov	r7, r2
 801823c:	461e      	mov	r6, r3
 801823e:	b911      	cbnz	r1, 8018246 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8018240:	2500      	movs	r5, #0
 8018242:	4628      	mov	r0, r5
 8018244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018246:	290a      	cmp	r1, #10
 8018248:	d0fa      	beq.n	8018240 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801824a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801824e:	4291      	cmp	r1, r2
 8018250:	d0f6      	beq.n	8018240 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018252:	f242 020b 	movw	r2, #8203	; 0x200b
 8018256:	4291      	cmp	r1, r2
 8018258:	d0f2      	beq.n	8018240 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801825a:	f7ff ffaf 	bl	80181bc <_ZNK8touchgfx9ConstFont4findEt>
 801825e:	4605      	mov	r5, r0
 8018260:	b950      	cbnz	r0, 8018278 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8018262:	6823      	ldr	r3, [r4, #0]
 8018264:	4620      	mov	r0, r4
 8018266:	691b      	ldr	r3, [r3, #16]
 8018268:	4798      	blx	r3
 801826a:	4601      	mov	r1, r0
 801826c:	4620      	mov	r0, r4
 801826e:	f7ff ffa5 	bl	80181bc <_ZNK8touchgfx9ConstFont4findEt>
 8018272:	4605      	mov	r5, r0
 8018274:	2800      	cmp	r0, #0
 8018276:	d0e3      	beq.n	8018240 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8018278:	6823      	ldr	r3, [r4, #0]
 801827a:	4629      	mov	r1, r5
 801827c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801827e:	4620      	mov	r0, r4
 8018280:	4798      	blx	r3
 8018282:	6038      	str	r0, [r7, #0]
 8018284:	6823      	ldr	r3, [r4, #0]
 8018286:	4620      	mov	r0, r4
 8018288:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801828a:	4798      	blx	r3
 801828c:	7030      	strb	r0, [r6, #0]
 801828e:	e7d8      	b.n	8018242 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08018290 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8018290:	b538      	push	{r3, r4, r5, lr}
 8018292:	4605      	mov	r5, r0
 8018294:	f002 fb94 	bl	801a9c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018298:	4604      	mov	r4, r0
 801829a:	4628      	mov	r0, r5
 801829c:	f002 fad4 	bl	801a848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80182a0:	2800      	cmp	r0, #0
 80182a2:	bf14      	ite	ne
 80182a4:	2002      	movne	r0, #2
 80182a6:	2000      	moveq	r0, #0
 80182a8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80182ac:	b280      	uxth	r0, r0
 80182ae:	bd38      	pop	{r3, r4, r5, pc}

080182b0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80182b0:	b538      	push	{r3, r4, r5, lr}
 80182b2:	4605      	mov	r5, r0
 80182b4:	f002 fb84 	bl	801a9c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80182b8:	4604      	mov	r4, r0
 80182ba:	4628      	mov	r0, r5
 80182bc:	f002 fac4 	bl	801a848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80182c0:	2800      	cmp	r0, #0
 80182c2:	bf14      	ite	ne
 80182c4:	2002      	movne	r0, #2
 80182c6:	2000      	moveq	r0, #0
 80182c8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80182cc:	f040 0001 	orr.w	r0, r0, #1
 80182d0:	b280      	uxth	r0, r0
 80182d2:	bd38      	pop	{r3, r4, r5, pc}

080182d4 <_ZN8touchgfx4clzuEm>:
 80182d4:	4603      	mov	r3, r0
 80182d6:	b1c8      	cbz	r0, 801830c <_ZN8touchgfx4clzuEm+0x38>
 80182d8:	0c02      	lsrs	r2, r0, #16
 80182da:	0412      	lsls	r2, r2, #16
 80182dc:	b9a2      	cbnz	r2, 8018308 <_ZN8touchgfx4clzuEm+0x34>
 80182de:	0403      	lsls	r3, r0, #16
 80182e0:	2010      	movs	r0, #16
 80182e2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80182e6:	bf04      	itt	eq
 80182e8:	021b      	lsleq	r3, r3, #8
 80182ea:	3008      	addeq	r0, #8
 80182ec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80182f0:	bf04      	itt	eq
 80182f2:	011b      	lsleq	r3, r3, #4
 80182f4:	3004      	addeq	r0, #4
 80182f6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80182fa:	bf04      	itt	eq
 80182fc:	009b      	lsleq	r3, r3, #2
 80182fe:	3002      	addeq	r0, #2
 8018300:	2b00      	cmp	r3, #0
 8018302:	db04      	blt.n	801830e <_ZN8touchgfx4clzuEm+0x3a>
 8018304:	3001      	adds	r0, #1
 8018306:	4770      	bx	lr
 8018308:	2000      	movs	r0, #0
 801830a:	e7ea      	b.n	80182e2 <_ZN8touchgfx4clzuEm+0xe>
 801830c:	2020      	movs	r0, #32
 801830e:	4770      	bx	lr

08018310 <_ZN8touchgfx7muldivuEmmmRm>:
 8018310:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8018314:	460f      	mov	r7, r1
 8018316:	4615      	mov	r5, r2
 8018318:	461e      	mov	r6, r3
 801831a:	4601      	mov	r1, r0
 801831c:	b100      	cbz	r0, 8018320 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801831e:	b927      	cbnz	r7, 801832a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8018320:	2000      	movs	r0, #0
 8018322:	6030      	str	r0, [r6, #0]
 8018324:	b002      	add	sp, #8
 8018326:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801832a:	f7ff ffd3 	bl	80182d4 <_ZN8touchgfx4clzuEm>
 801832e:	b980      	cbnz	r0, 8018352 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8018330:	4638      	mov	r0, r7
 8018332:	f7ff ffcf 	bl	80182d4 <_ZN8touchgfx4clzuEm>
 8018336:	2800      	cmp	r0, #0
 8018338:	dd05      	ble.n	8018346 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801833a:	4633      	mov	r3, r6
 801833c:	462a      	mov	r2, r5
 801833e:	4638      	mov	r0, r7
 8018340:	f7ff ffe6 	bl	8018310 <_ZN8touchgfx7muldivuEmmmRm>
 8018344:	e7ee      	b.n	8018324 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018346:	f04f 33ff 	mov.w	r3, #4294967295
 801834a:	6033      	str	r3, [r6, #0]
 801834c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8018350:	e7e8      	b.n	8018324 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018352:	fa37 f800 	lsrs.w	r8, r7, r0
 8018356:	fb07 f301 	mul.w	r3, r7, r1
 801835a:	d105      	bne.n	8018368 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801835c:	fbb3 f0f5 	udiv	r0, r3, r5
 8018360:	fb05 3510 	mls	r5, r5, r0, r3
 8018364:	6035      	str	r5, [r6, #0]
 8018366:	e7dd      	b.n	8018324 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8018368:	2301      	movs	r3, #1
 801836a:	fa01 fa00 	lsl.w	sl, r1, r0
 801836e:	fa03 f000 	lsl.w	r0, r3, r0
 8018372:	3801      	subs	r0, #1
 8018374:	462a      	mov	r2, r5
 8018376:	4633      	mov	r3, r6
 8018378:	4038      	ands	r0, r7
 801837a:	f7ff ffc9 	bl	8018310 <_ZN8touchgfx7muldivuEmmmRm>
 801837e:	fbba f9f5 	udiv	r9, sl, r5
 8018382:	462a      	mov	r2, r5
 8018384:	4607      	mov	r7, r0
 8018386:	ab01      	add	r3, sp, #4
 8018388:	fb05 a119 	mls	r1, r5, r9, sl
 801838c:	4640      	mov	r0, r8
 801838e:	f7ff ffbf 	bl	8018310 <_ZN8touchgfx7muldivuEmmmRm>
 8018392:	9b01      	ldr	r3, [sp, #4]
 8018394:	6832      	ldr	r2, [r6, #0]
 8018396:	fb08 f409 	mul.w	r4, r8, r9
 801839a:	441a      	add	r2, r3
 801839c:	fbb2 f3f5 	udiv	r3, r2, r5
 80183a0:	441c      	add	r4, r3
 80183a2:	443c      	add	r4, r7
 80183a4:	4420      	add	r0, r4
 80183a6:	fb05 2513 	mls	r5, r5, r3, r2
 80183aa:	e7db      	b.n	8018364 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080183ac <_ZN8touchgfx6muldivElllRl>:
 80183ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80183ae:	2800      	cmp	r0, #0
 80183b0:	bfba      	itte	lt
 80183b2:	4240      	neglt	r0, r0
 80183b4:	f04f 34ff 	movlt.w	r4, #4294967295
 80183b8:	2401      	movge	r4, #1
 80183ba:	2900      	cmp	r1, #0
 80183bc:	bfbc      	itt	lt
 80183be:	4249      	neglt	r1, r1
 80183c0:	4264      	neglt	r4, r4
 80183c2:	2a00      	cmp	r2, #0
 80183c4:	bfb6      	itet	lt
 80183c6:	4265      	neglt	r5, r4
 80183c8:	4625      	movge	r5, r4
 80183ca:	4252      	neglt	r2, r2
 80183cc:	4288      	cmp	r0, r1
 80183ce:	461e      	mov	r6, r3
 80183d0:	bfc2      	ittt	gt
 80183d2:	4603      	movgt	r3, r0
 80183d4:	4608      	movgt	r0, r1
 80183d6:	4619      	movgt	r1, r3
 80183d8:	ab01      	add	r3, sp, #4
 80183da:	f7ff ff99 	bl	8018310 <_ZN8touchgfx7muldivuEmmmRm>
 80183de:	9b01      	ldr	r3, [sp, #4]
 80183e0:	4368      	muls	r0, r5
 80183e2:	435c      	muls	r4, r3
 80183e4:	6034      	str	r4, [r6, #0]
 80183e6:	b002      	add	sp, #8
 80183e8:	bd70      	pop	{r4, r5, r6, pc}

080183ea <_ZN8touchgfx6muldivElll>:
 80183ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80183ec:	4606      	mov	r6, r0
 80183ee:	ab01      	add	r3, sp, #4
 80183f0:	460d      	mov	r5, r1
 80183f2:	4614      	mov	r4, r2
 80183f4:	f7ff ffda 	bl	80183ac <_ZN8touchgfx6muldivElllRl>
 80183f8:	2e00      	cmp	r6, #0
 80183fa:	db20      	blt.n	801843e <_ZN8touchgfx6muldivElll+0x54>
 80183fc:	bf14      	ite	ne
 80183fe:	2301      	movne	r3, #1
 8018400:	2300      	moveq	r3, #0
 8018402:	2d00      	cmp	r5, #0
 8018404:	db1e      	blt.n	8018444 <_ZN8touchgfx6muldivElll+0x5a>
 8018406:	bf14      	ite	ne
 8018408:	2201      	movne	r2, #1
 801840a:	2200      	moveq	r2, #0
 801840c:	2c00      	cmp	r4, #0
 801840e:	fb03 f202 	mul.w	r2, r3, r2
 8018412:	db1a      	blt.n	801844a <_ZN8touchgfx6muldivElll+0x60>
 8018414:	bf14      	ite	ne
 8018416:	2301      	movne	r3, #1
 8018418:	2300      	moveq	r3, #0
 801841a:	4353      	muls	r3, r2
 801841c:	2b01      	cmp	r3, #1
 801841e:	d117      	bne.n	8018450 <_ZN8touchgfx6muldivElll+0x66>
 8018420:	9b01      	ldr	r3, [sp, #4]
 8018422:	2c00      	cmp	r4, #0
 8018424:	bfb8      	it	lt
 8018426:	4264      	neglt	r4, r4
 8018428:	2b00      	cmp	r3, #0
 801842a:	f104 0401 	add.w	r4, r4, #1
 801842e:	bfb8      	it	lt
 8018430:	425b      	neglt	r3, r3
 8018432:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018436:	db00      	blt.n	801843a <_ZN8touchgfx6muldivElll+0x50>
 8018438:	3001      	adds	r0, #1
 801843a:	b002      	add	sp, #8
 801843c:	bd70      	pop	{r4, r5, r6, pc}
 801843e:	f04f 33ff 	mov.w	r3, #4294967295
 8018442:	e7de      	b.n	8018402 <_ZN8touchgfx6muldivElll+0x18>
 8018444:	f04f 32ff 	mov.w	r2, #4294967295
 8018448:	e7e0      	b.n	801840c <_ZN8touchgfx6muldivElll+0x22>
 801844a:	f04f 33ff 	mov.w	r3, #4294967295
 801844e:	e7e4      	b.n	801841a <_ZN8touchgfx6muldivElll+0x30>
 8018450:	3301      	adds	r3, #1
 8018452:	d1f2      	bne.n	801843a <_ZN8touchgfx6muldivElll+0x50>
 8018454:	9b01      	ldr	r3, [sp, #4]
 8018456:	2c00      	cmp	r4, #0
 8018458:	bfb8      	it	lt
 801845a:	4264      	neglt	r4, r4
 801845c:	2b00      	cmp	r3, #0
 801845e:	bfb8      	it	lt
 8018460:	425b      	neglt	r3, r3
 8018462:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8018466:	bfc8      	it	gt
 8018468:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801846c:	e7e5      	b.n	801843a <_ZN8touchgfx6muldivElll+0x50>

0801846e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801846e:	2000      	movs	r0, #0
 8018470:	4770      	bx	lr

08018472 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8018472:	2001      	movs	r0, #1
 8018474:	4770      	bx	lr

08018476 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8018476:	2002      	movs	r0, #2
 8018478:	4770      	bx	lr

0801847a <_ZN8touchgfx6ScreenD1Ev>:
 801847a:	4770      	bx	lr

0801847c <_ZN8touchgfx12GestureEventD1Ev>:
 801847c:	4770      	bx	lr

0801847e <_ZN8touchgfx9DragEventD1Ev>:
 801847e:	4770      	bx	lr

08018480 <_ZN8touchgfx10ClickEventD1Ev>:
 8018480:	4770      	bx	lr

08018482 <_ZN8touchgfx10ClickEventD0Ev>:
 8018482:	b510      	push	{r4, lr}
 8018484:	210c      	movs	r1, #12
 8018486:	4604      	mov	r4, r0
 8018488:	f012 fd8f 	bl	802afaa <_ZdlPvj>
 801848c:	4620      	mov	r0, r4
 801848e:	bd10      	pop	{r4, pc}

08018490 <_ZN8touchgfx9DragEventD0Ev>:
 8018490:	b510      	push	{r4, lr}
 8018492:	2110      	movs	r1, #16
 8018494:	4604      	mov	r4, r0
 8018496:	f012 fd88 	bl	802afaa <_ZdlPvj>
 801849a:	4620      	mov	r0, r4
 801849c:	bd10      	pop	{r4, pc}

0801849e <_ZN8touchgfx12GestureEventD0Ev>:
 801849e:	b510      	push	{r4, lr}
 80184a0:	210c      	movs	r1, #12
 80184a2:	4604      	mov	r4, r0
 80184a4:	f012 fd81 	bl	802afaa <_ZdlPvj>
 80184a8:	4620      	mov	r0, r4
 80184aa:	bd10      	pop	{r4, pc}

080184ac <_ZN8touchgfx6ScreenD0Ev>:
 80184ac:	b510      	push	{r4, lr}
 80184ae:	213c      	movs	r1, #60	; 0x3c
 80184b0:	4604      	mov	r4, r0
 80184b2:	f012 fd7a 	bl	802afaa <_ZdlPvj>
 80184b6:	4620      	mov	r0, r4
 80184b8:	bd10      	pop	{r4, pc}
	...

080184bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80184bc:	b530      	push	{r4, r5, lr}
 80184be:	460d      	mov	r5, r1
 80184c0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80184c2:	b087      	sub	sp, #28
 80184c4:	4604      	mov	r4, r0
 80184c6:	b301      	cbz	r1, 801850a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80184c8:	a801      	add	r0, sp, #4
 80184ca:	f7ff fe3d 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80184ce:	892a      	ldrh	r2, [r5, #8]
 80184d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80184d4:	7928      	ldrb	r0, [r5, #4]
 80184d6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80184da:	f88d 0010 	strb.w	r0, [sp, #16]
 80184de:	1ad2      	subs	r2, r2, r3
 80184e0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80184e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80184e4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80184e8:	441a      	add	r2, r3
 80184ea:	896b      	ldrh	r3, [r5, #10]
 80184ec:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80184f0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80184f4:	1b5b      	subs	r3, r3, r5
 80184f6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80184f8:	442b      	add	r3, r5
 80184fa:	4d05      	ldr	r5, [pc, #20]	; (8018510 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80184fc:	9503      	str	r5, [sp, #12]
 80184fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018502:	6803      	ldr	r3, [r0, #0]
 8018504:	a903      	add	r1, sp, #12
 8018506:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018508:	4798      	blx	r3
 801850a:	b007      	add	sp, #28
 801850c:	bd30      	pop	{r4, r5, pc}
 801850e:	bf00      	nop
 8018510:	08030134 	.word	0x08030134

08018514 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8018514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018518:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801851a:	b08a      	sub	sp, #40	; 0x28
 801851c:	4604      	mov	r4, r0
 801851e:	460d      	mov	r5, r1
 8018520:	b113      	cbz	r3, 8018528 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8018522:	790b      	ldrb	r3, [r1, #4]
 8018524:	2b00      	cmp	r3, #0
 8018526:	d044      	beq.n	80185b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018528:	f104 0804 	add.w	r8, r4, #4
 801852c:	4641      	mov	r1, r8
 801852e:	a803      	add	r0, sp, #12
 8018530:	f7ff fe0a 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018534:	792b      	ldrb	r3, [r5, #4]
 8018536:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801853a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801853e:	b983      	cbnz	r3, 8018562 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8018540:	892a      	ldrh	r2, [r5, #8]
 8018542:	88e9      	ldrh	r1, [r5, #6]
 8018544:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8018548:	1b92      	subs	r2, r2, r6
 801854a:	1bc9      	subs	r1, r1, r7
 801854c:	9301      	str	r3, [sp, #4]
 801854e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8018552:	9300      	str	r3, [sp, #0]
 8018554:	b212      	sxth	r2, r2
 8018556:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801855a:	b209      	sxth	r1, r1
 801855c:	4640      	mov	r0, r8
 801855e:	f7f8 fc39 	bl	8010dd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8018562:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8018564:	b329      	cbz	r1, 80185b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8018566:	a805      	add	r0, sp, #20
 8018568:	f7ff fdee 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801856c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8018570:	792b      	ldrb	r3, [r5, #4]
 8018572:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018574:	f88d 3020 	strb.w	r3, [sp, #32]
 8018578:	1abf      	subs	r7, r7, r2
 801857a:	88ea      	ldrh	r2, [r5, #6]
 801857c:	4417      	add	r7, r2
 801857e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8018580:	4417      	add	r7, r2
 8018582:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8018586:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801858a:	1ab6      	subs	r6, r6, r2
 801858c:	892a      	ldrh	r2, [r5, #8]
 801858e:	4416      	add	r6, r2
 8018590:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018592:	4416      	add	r6, r2
 8018594:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8018598:	4a07      	ldr	r2, [pc, #28]	; (80185b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801859a:	9207      	str	r2, [sp, #28]
 801859c:	2600      	movs	r6, #0
 801859e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80185a2:	6803      	ldr	r3, [r0, #0]
 80185a4:	a907      	add	r1, sp, #28
 80185a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80185a8:	4798      	blx	r3
 80185aa:	792b      	ldrb	r3, [r5, #4]
 80185ac:	b10b      	cbz	r3, 80185b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80185ae:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80185b2:	b00a      	add	sp, #40	; 0x28
 80185b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80185b8:	0803010c 	.word	0x0803010c

080185bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80185bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80185c0:	460c      	mov	r4, r1
 80185c2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80185c4:	b088      	sub	sp, #32
 80185c6:	4605      	mov	r5, r0
 80185c8:	2900      	cmp	r1, #0
 80185ca:	d06d      	beq.n	80186a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80185cc:	4668      	mov	r0, sp
 80185ce:	f7ff fdbb 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80185d2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80185d4:	88e3      	ldrh	r3, [r4, #6]
 80185d6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80185da:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80185de:	440b      	add	r3, r1
 80185e0:	b21b      	sxth	r3, r3
 80185e2:	4543      	cmp	r3, r8
 80185e4:	db31      	blt.n	801864a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80185e6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80185ea:	44c4      	add	ip, r8
 80185ec:	fa0f fc8c 	sxth.w	ip, ip
 80185f0:	4563      	cmp	r3, ip
 80185f2:	da2a      	bge.n	801864a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80185f4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80185f6:	8926      	ldrh	r6, [r4, #8]
 80185f8:	4416      	add	r6, r2
 80185fa:	b236      	sxth	r6, r6
 80185fc:	42be      	cmp	r6, r7
 80185fe:	db24      	blt.n	801864a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018600:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018604:	4438      	add	r0, r7
 8018606:	b200      	sxth	r0, r0
 8018608:	4286      	cmp	r6, r0
 801860a:	da1e      	bge.n	801864a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801860c:	8963      	ldrh	r3, [r4, #10]
 801860e:	4419      	add	r1, r3
 8018610:	b209      	sxth	r1, r1
 8018612:	4541      	cmp	r1, r8
 8018614:	db08      	blt.n	8018628 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018616:	4561      	cmp	r1, ip
 8018618:	da06      	bge.n	8018628 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801861a:	89a3      	ldrh	r3, [r4, #12]
 801861c:	441a      	add	r2, r3
 801861e:	b212      	sxth	r2, r2
 8018620:	42ba      	cmp	r2, r7
 8018622:	db01      	blt.n	8018628 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018624:	4282      	cmp	r2, r0
 8018626:	db10      	blt.n	801864a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018628:	4b21      	ldr	r3, [pc, #132]	; (80186b0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801862a:	9304      	str	r3, [sp, #16]
 801862c:	2302      	movs	r3, #2
 801862e:	f88d 3014 	strb.w	r3, [sp, #20]
 8018632:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018634:	2300      	movs	r3, #0
 8018636:	f8ad 3016 	strh.w	r3, [sp, #22]
 801863a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801863e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018642:	6803      	ldr	r3, [r0, #0]
 8018644:	a904      	add	r1, sp, #16
 8018646:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018648:	4798      	blx	r3
 801864a:	1d29      	adds	r1, r5, #4
 801864c:	a802      	add	r0, sp, #8
 801864e:	f7ff fd7b 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018652:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8018656:	88e0      	ldrh	r0, [r4, #6]
 8018658:	7921      	ldrb	r1, [r4, #4]
 801865a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801865e:	8922      	ldrh	r2, [r4, #8]
 8018660:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8018662:	f88d 1014 	strb.w	r1, [sp, #20]
 8018666:	eba3 0808 	sub.w	r8, r3, r8
 801866a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801866e:	1bdf      	subs	r7, r3, r7
 8018670:	b2bb      	uxth	r3, r7
 8018672:	fa1f f888 	uxth.w	r8, r8
 8018676:	8967      	ldrh	r7, [r4, #10]
 8018678:	89a4      	ldrh	r4, [r4, #12]
 801867a:	4440      	add	r0, r8
 801867c:	4460      	add	r0, ip
 801867e:	441a      	add	r2, r3
 8018680:	44b8      	add	r8, r7
 8018682:	4423      	add	r3, r4
 8018684:	f8ad 0016 	strh.w	r0, [sp, #22]
 8018688:	4433      	add	r3, r6
 801868a:	4432      	add	r2, r6
 801868c:	44e0      	add	r8, ip
 801868e:	4c09      	ldr	r4, [pc, #36]	; (80186b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018690:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018692:	9404      	str	r4, [sp, #16]
 8018694:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018698:	f8ad 801a 	strh.w	r8, [sp, #26]
 801869c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80186a0:	6803      	ldr	r3, [r0, #0]
 80186a2:	a904      	add	r1, sp, #16
 80186a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80186a6:	4798      	blx	r3
 80186a8:	b008      	add	sp, #32
 80186aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80186ae:	bf00      	nop
 80186b0:	0803010c 	.word	0x0803010c
 80186b4:	08030120 	.word	0x08030120

080186b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80186b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80186ba:	4604      	mov	r4, r0
 80186bc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80186c0:	3201      	adds	r2, #1
 80186c2:	d112      	bne.n	80186ea <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80186c4:	6803      	ldr	r3, [r0, #0]
 80186c6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80186ca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80186ce:	f8ad 1004 	strh.w	r1, [sp, #4]
 80186d2:	2500      	movs	r5, #0
 80186d4:	9500      	str	r5, [sp, #0]
 80186d6:	466d      	mov	r5, sp
 80186d8:	4629      	mov	r1, r5
 80186da:	f8ad 2006 	strh.w	r2, [sp, #6]
 80186de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80186e0:	4798      	blx	r3
 80186e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80186e6:	e884 0003 	stmia.w	r4, {r0, r1}
 80186ea:	4620      	mov	r0, r4
 80186ec:	b003      	add	sp, #12
 80186ee:	bd30      	pop	{r4, r5, pc}

080186f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80186f0:	b513      	push	{r0, r1, r4, lr}
 80186f2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80186f6:	3301      	adds	r3, #1
 80186f8:	4604      	mov	r4, r0
 80186fa:	d109      	bne.n	8018710 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80186fc:	4601      	mov	r1, r0
 80186fe:	4668      	mov	r0, sp
 8018700:	f7ff fd22 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018704:	f8bd 3000 	ldrh.w	r3, [sp]
 8018708:	8423      	strh	r3, [r4, #32]
 801870a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801870e:	8463      	strh	r3, [r4, #34]	; 0x22
 8018710:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018714:	b002      	add	sp, #8
 8018716:	bd10      	pop	{r4, pc}

08018718 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018718:	b513      	push	{r0, r1, r4, lr}
 801871a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801871e:	3301      	adds	r3, #1
 8018720:	4604      	mov	r4, r0
 8018722:	d109      	bne.n	8018738 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8018724:	4601      	mov	r1, r0
 8018726:	4668      	mov	r0, sp
 8018728:	f7ff fd0e 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801872c:	f8bd 3000 	ldrh.w	r3, [sp]
 8018730:	8423      	strh	r3, [r4, #32]
 8018732:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018736:	8463      	strh	r3, [r4, #34]	; 0x22
 8018738:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801873c:	b002      	add	sp, #8
 801873e:	bd10      	pop	{r4, pc}

08018740 <_ZN8touchgfx6ScreenC1Ev>:
 8018740:	b570      	push	{r4, r5, r6, lr}
 8018742:	4605      	mov	r5, r0
 8018744:	4b16      	ldr	r3, [pc, #88]	; (80187a0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8018746:	f845 3b04 	str.w	r3, [r5], #4
 801874a:	2300      	movs	r3, #0
 801874c:	8103      	strh	r3, [r0, #8]
 801874e:	8143      	strh	r3, [r0, #10]
 8018750:	8183      	strh	r3, [r0, #12]
 8018752:	81c3      	strh	r3, [r0, #14]
 8018754:	8203      	strh	r3, [r0, #16]
 8018756:	8243      	strh	r3, [r0, #18]
 8018758:	8283      	strh	r3, [r0, #20]
 801875a:	82c3      	strh	r3, [r0, #22]
 801875c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8018760:	6203      	str	r3, [r0, #32]
 8018762:	8483      	strh	r3, [r0, #36]	; 0x24
 8018764:	84c3      	strh	r3, [r0, #38]	; 0x26
 8018766:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801876a:	4a0e      	ldr	r2, [pc, #56]	; (80187a4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801876c:	6343      	str	r3, [r0, #52]	; 0x34
 801876e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8018772:	4b0d      	ldr	r3, [pc, #52]	; (80187a8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8018774:	6042      	str	r2, [r0, #4]
 8018776:	f9b3 6000 	ldrsh.w	r6, [r3]
 801877a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801877c:	4a0b      	ldr	r2, [pc, #44]	; (80187ac <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801877e:	4604      	mov	r4, r0
 8018780:	2101      	movs	r1, #1
 8018782:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8018786:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801878a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801878e:	4628      	mov	r0, r5
 8018790:	4798      	blx	r3
 8018792:	6863      	ldr	r3, [r4, #4]
 8018794:	4628      	mov	r0, r5
 8018796:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018798:	4631      	mov	r1, r6
 801879a:	4798      	blx	r3
 801879c:	4620      	mov	r0, r4
 801879e:	bd70      	pop	{r4, r5, r6, pc}
 80187a0:	08030148 	.word	0x08030148
 80187a4:	0802f7cc 	.word	0x0802f7cc
 80187a8:	20013832 	.word	0x20013832
 80187ac:	20013830 	.word	0x20013830

080187b0 <_ZN8touchgfx6Screen4drawEv>:
 80187b0:	b507      	push	{r0, r1, r2, lr}
 80187b2:	4b09      	ldr	r3, [pc, #36]	; (80187d8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80187b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80187b8:	4b08      	ldr	r3, [pc, #32]	; (80187dc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80187ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 80187be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80187c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80187c6:	6803      	ldr	r3, [r0, #0]
 80187c8:	2100      	movs	r1, #0
 80187ca:	9100      	str	r1, [sp, #0]
 80187cc:	689b      	ldr	r3, [r3, #8]
 80187ce:	4669      	mov	r1, sp
 80187d0:	4798      	blx	r3
 80187d2:	b003      	add	sp, #12
 80187d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80187d8:	20013830 	.word	0x20013830
 80187dc:	20013832 	.word	0x20013832

080187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80187e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187e4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80187e8:	2b00      	cmp	r3, #0
 80187ea:	b089      	sub	sp, #36	; 0x24
 80187ec:	4680      	mov	r8, r0
 80187ee:	460c      	mov	r4, r1
 80187f0:	4615      	mov	r5, r2
 80187f2:	dd0e      	ble.n	8018812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80187f4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80187f8:	2b00      	cmp	r3, #0
 80187fa:	dd0a      	ble.n	8018812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80187fc:	4628      	mov	r0, r5
 80187fe:	f7ff ff5b 	bl	80186b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018802:	4621      	mov	r1, r4
 8018804:	f7fe fa3d 	bl	8016c82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018808:	69eb      	ldr	r3, [r5, #28]
 801880a:	b928      	cbnz	r0, 8018818 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801880c:	461d      	mov	r5, r3
 801880e:	2b00      	cmp	r3, #0
 8018810:	d1f4      	bne.n	80187fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018812:	b009      	add	sp, #36	; 0x24
 8018814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018818:	ae04      	add	r6, sp, #16
 801881a:	2b00      	cmp	r3, #0
 801881c:	f000 80b5 	beq.w	801898a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8018820:	682b      	ldr	r3, [r5, #0]
 8018822:	4629      	mov	r1, r5
 8018824:	68db      	ldr	r3, [r3, #12]
 8018826:	a802      	add	r0, sp, #8
 8018828:	4798      	blx	r3
 801882a:	4628      	mov	r0, r5
 801882c:	f7ff ff60 	bl	80186f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8018830:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8018834:	4407      	add	r7, r0
 8018836:	4628      	mov	r0, r5
 8018838:	f7ff ff6e 	bl	8018718 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801883c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018840:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8018844:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018848:	4418      	add	r0, r3
 801884a:	4621      	mov	r1, r4
 801884c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8018850:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018854:	b23f      	sxth	r7, r7
 8018856:	4630      	mov	r0, r6
 8018858:	f8ad 3016 	strh.w	r3, [sp, #22]
 801885c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8018860:	f7f8 fb9c 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8018864:	4628      	mov	r0, r5
 8018866:	f7ff ff27 	bl	80186b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801886a:	4602      	mov	r2, r0
 801886c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018870:	ab06      	add	r3, sp, #24
 8018872:	e883 0003 	stmia.w	r3, {r0, r1}
 8018876:	4611      	mov	r1, r2
 8018878:	4618      	mov	r0, r3
 801887a:	f7f8 fb8f 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801887e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018882:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018886:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801888a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801888e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018892:	4299      	cmp	r1, r3
 8018894:	d10b      	bne.n	80188ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018896:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801889a:	4552      	cmp	r2, sl
 801889c:	d107      	bne.n	80188ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801889e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80188a2:	455a      	cmp	r2, fp
 80188a4:	d103      	bne.n	80188ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80188a6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80188aa:	454a      	cmp	r2, r9
 80188ac:	d06d      	beq.n	801898a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80188ae:	f1bb 0f00 	cmp.w	fp, #0
 80188b2:	dd65      	ble.n	8018980 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80188b4:	f1b9 0f00 	cmp.w	r9, #0
 80188b8:	dd62      	ble.n	8018980 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80188ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80188be:	fa1f f08a 	uxth.w	r0, sl
 80188c2:	4552      	cmp	r2, sl
 80188c4:	9000      	str	r0, [sp, #0]
 80188c6:	da12      	bge.n	80188ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80188c8:	9301      	str	r3, [sp, #4]
 80188ca:	9b00      	ldr	r3, [sp, #0]
 80188cc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80188d0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80188d4:	1a9a      	subs	r2, r3, r2
 80188d6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80188da:	f8ad 0014 	strh.w	r0, [sp, #20]
 80188de:	f8ad 2016 	strh.w	r2, [sp, #22]
 80188e2:	69ea      	ldr	r2, [r5, #28]
 80188e4:	4631      	mov	r1, r6
 80188e6:	4640      	mov	r0, r8
 80188e8:	f7ff ff7a 	bl	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80188ec:	9b01      	ldr	r3, [sp, #4]
 80188ee:	f9b4 2000 	ldrsh.w	r2, [r4]
 80188f2:	429a      	cmp	r2, r3
 80188f4:	b29f      	uxth	r7, r3
 80188f6:	da0d      	bge.n	8018914 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80188f8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80188fc:	1aba      	subs	r2, r7, r2
 80188fe:	f8ad a012 	strh.w	sl, [sp, #18]
 8018902:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018906:	f8ad 9016 	strh.w	r9, [sp, #22]
 801890a:	69ea      	ldr	r2, [r5, #28]
 801890c:	4631      	mov	r1, r6
 801890e:	4640      	mov	r0, r8
 8018910:	f7ff ff66 	bl	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018914:	8822      	ldrh	r2, [r4, #0]
 8018916:	88a3      	ldrh	r3, [r4, #4]
 8018918:	445f      	add	r7, fp
 801891a:	4413      	add	r3, r2
 801891c:	b29b      	uxth	r3, r3
 801891e:	b2bf      	uxth	r7, r7
 8018920:	b23a      	sxth	r2, r7
 8018922:	b219      	sxth	r1, r3
 8018924:	4291      	cmp	r1, r2
 8018926:	dd0d      	ble.n	8018944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8018928:	1bdb      	subs	r3, r3, r7
 801892a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801892e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018932:	f8ad 3014 	strh.w	r3, [sp, #20]
 8018936:	f8ad 9016 	strh.w	r9, [sp, #22]
 801893a:	69ea      	ldr	r2, [r5, #28]
 801893c:	4631      	mov	r1, r6
 801893e:	4640      	mov	r0, r8
 8018940:	f7ff ff4e 	bl	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018944:	88e2      	ldrh	r2, [r4, #6]
 8018946:	8863      	ldrh	r3, [r4, #2]
 8018948:	4413      	add	r3, r2
 801894a:	9a00      	ldr	r2, [sp, #0]
 801894c:	444a      	add	r2, r9
 801894e:	b29b      	uxth	r3, r3
 8018950:	fa1f f982 	uxth.w	r9, r2
 8018954:	fa0f f289 	sxth.w	r2, r9
 8018958:	b219      	sxth	r1, r3
 801895a:	428a      	cmp	r2, r1
 801895c:	da15      	bge.n	801898a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801895e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018962:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018966:	f8ad 1014 	strh.w	r1, [sp, #20]
 801896a:	eba3 0309 	sub.w	r3, r3, r9
 801896e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018972:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018976:	f8ad 3016 	strh.w	r3, [sp, #22]
 801897a:	69ea      	ldr	r2, [r5, #28]
 801897c:	4631      	mov	r1, r6
 801897e:	e001      	b.n	8018984 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018980:	69ea      	ldr	r2, [r5, #28]
 8018982:	4621      	mov	r1, r4
 8018984:	4640      	mov	r0, r8
 8018986:	f7ff ff2b 	bl	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801898a:	4628      	mov	r0, r5
 801898c:	f7ff fe94 	bl	80186b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018990:	6861      	ldr	r1, [r4, #4]
 8018992:	4602      	mov	r2, r0
 8018994:	6820      	ldr	r0, [r4, #0]
 8018996:	4633      	mov	r3, r6
 8018998:	c303      	stmia	r3!, {r0, r1}
 801899a:	4611      	mov	r1, r2
 801899c:	4630      	mov	r0, r6
 801899e:	f7f8 fafd 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 80189a2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80189a6:	2b00      	cmp	r3, #0
 80189a8:	f77f af33 	ble.w	8018812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80189ac:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80189b0:	2b00      	cmp	r3, #0
 80189b2:	f77f af2e 	ble.w	8018812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80189b6:	4628      	mov	r0, r5
 80189b8:	f7ff fe9a 	bl	80186f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80189bc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80189c0:	1a18      	subs	r0, r3, r0
 80189c2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80189c6:	4628      	mov	r0, r5
 80189c8:	f7ff fea6 	bl	8018718 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80189cc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80189d0:	1a18      	subs	r0, r3, r0
 80189d2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80189d6:	682b      	ldr	r3, [r5, #0]
 80189d8:	4631      	mov	r1, r6
 80189da:	689b      	ldr	r3, [r3, #8]
 80189dc:	4628      	mov	r0, r5
 80189de:	4798      	blx	r3
 80189e0:	e717      	b.n	8018812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080189e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80189e2:	b570      	push	{r4, r5, r6, lr}
 80189e4:	460c      	mov	r4, r1
 80189e6:	b086      	sub	sp, #24
 80189e8:	1d06      	adds	r6, r0, #4
 80189ea:	2300      	movs	r3, #0
 80189ec:	4631      	mov	r1, r6
 80189ee:	4605      	mov	r5, r0
 80189f0:	a802      	add	r0, sp, #8
 80189f2:	9301      	str	r3, [sp, #4]
 80189f4:	f7ff fba8 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80189f8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80189fc:	8822      	ldrh	r2, [r4, #0]
 80189fe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018a02:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018a06:	f8ad 0014 	strh.w	r0, [sp, #20]
 8018a0a:	1ad2      	subs	r2, r2, r3
 8018a0c:	8863      	ldrh	r3, [r4, #2]
 8018a0e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018a12:	1a5b      	subs	r3, r3, r1
 8018a14:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018a18:	f8ad 1016 	strh.w	r1, [sp, #22]
 8018a1c:	aa01      	add	r2, sp, #4
 8018a1e:	a904      	add	r1, sp, #16
 8018a20:	4630      	mov	r0, r6
 8018a22:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018a26:	f7f8 fb91 	bl	801114c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8018a2a:	9a01      	ldr	r2, [sp, #4]
 8018a2c:	b11a      	cbz	r2, 8018a36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8018a2e:	4621      	mov	r1, r4
 8018a30:	4628      	mov	r0, r5
 8018a32:	f7ff fed5 	bl	80187e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018a36:	b006      	add	sp, #24
 8018a38:	bd70      	pop	{r4, r5, r6, pc}

08018a3a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8018a3a:	b530      	push	{r4, r5, lr}
 8018a3c:	4602      	mov	r2, r0
 8018a3e:	4604      	mov	r4, r0
 8018a40:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8018a44:	b085      	sub	sp, #20
 8018a46:	460d      	mov	r5, r1
 8018a48:	6851      	ldr	r1, [r2, #4]
 8018a4a:	466b      	mov	r3, sp
 8018a4c:	c303      	stmia	r3!, {r0, r1}
 8018a4e:	4629      	mov	r1, r5
 8018a50:	4668      	mov	r0, sp
 8018a52:	f7f8 faa3 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 8018a56:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8018a5a:	b12b      	cbz	r3, 8018a68 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8018a5c:	4669      	mov	r1, sp
 8018a5e:	4620      	mov	r0, r4
 8018a60:	f7ff ffbf 	bl	80189e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8018a64:	b005      	add	sp, #20
 8018a66:	bd30      	pop	{r4, r5, pc}
 8018a68:	3404      	adds	r4, #4
 8018a6a:	4621      	mov	r1, r4
 8018a6c:	a802      	add	r0, sp, #8
 8018a6e:	f7ff fb6b 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018a72:	f8bd 3000 	ldrh.w	r3, [sp]
 8018a76:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8018a7a:	1a9b      	subs	r3, r3, r2
 8018a7c:	f8ad 3000 	strh.w	r3, [sp]
 8018a80:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018a84:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018a88:	4669      	mov	r1, sp
 8018a8a:	1a9b      	subs	r3, r3, r2
 8018a8c:	4620      	mov	r0, r4
 8018a8e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018a92:	f7f8 fb22 	bl	80110da <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018a96:	e7e5      	b.n	8018a64 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018a98 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018a98:	680a      	ldr	r2, [r1, #0]
 8018a9a:	460b      	mov	r3, r1
 8018a9c:	6992      	ldr	r2, [r2, #24]
 8018a9e:	1d01      	adds	r1, r0, #4
 8018aa0:	4618      	mov	r0, r3
 8018aa2:	4710      	bx	r2

08018aa4 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018aa4:	4298      	cmp	r0, r3
 8018aa6:	d200      	bcs.n	8018aaa <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018aa8:	b913      	cbnz	r3, 8018ab0 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 8018aaa:	440a      	add	r2, r1
 8018aac:	b210      	sxth	r0, r2
 8018aae:	4770      	bx	lr
 8018ab0:	ee07 0a90 	vmov	s15, r0
 8018ab4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018ab8:	ee07 3a90 	vmov	s15, r3
 8018abc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018ac0:	eddf 4a15 	vldr	s9, [pc, #84]	; 8018b18 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018ac4:	eddf 5a15 	vldr	s11, [pc, #84]	; 8018b1c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018ac8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018acc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018ad0:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018ad4:	ee07 2a90 	vmov	s15, r2
 8018ad8:	eee7 5a24 	vfma.f32	s11, s14, s9
 8018adc:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018ae0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018ae4:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018ae8:	ee07 1a90 	vmov	s15, r1
 8018aec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018af0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018af4:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018af8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018afc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b00:	bfcc      	ite	gt
 8018b02:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018b06:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018b0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018b0e:	ee17 3a90 	vmov	r3, s15
 8018b12:	b218      	sxth	r0, r3
 8018b14:	4770      	bx	lr
 8018b16:	bf00      	nop
 8018b18:	402ce6b0 	.word	0x402ce6b0
 8018b1c:	3fd9cd60 	.word	0x3fd9cd60

08018b20 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8018b20:	4298      	cmp	r0, r3
 8018b22:	d200      	bcs.n	8018b26 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8018b24:	b913      	cbnz	r3, 8018b2c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8018b26:	440a      	add	r2, r1
 8018b28:	b210      	sxth	r0, r2
 8018b2a:	4770      	bx	lr
 8018b2c:	ee07 0a90 	vmov	s15, r0
 8018b30:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018b34:	ee07 3a90 	vmov	s15, r3
 8018b38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018b3c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8018b40:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018b44:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018b48:	ee07 2a90 	vmov	s15, r2
 8018b4c:	ee67 5a07 	vmul.f32	s11, s14, s14
 8018b50:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018b54:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018b58:	ee07 1a90 	vmov	s15, r1
 8018b5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018b60:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018b64:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018b68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018b6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b70:	bfcc      	ite	gt
 8018b72:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018b76:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018b7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018b7e:	ee17 3a90 	vmov	r3, s15
 8018b82:	b218      	sxth	r0, r3
 8018b84:	4770      	bx	lr

08018b86 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8018b86:	4298      	cmp	r0, r3
 8018b88:	d200      	bcs.n	8018b8c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8018b8a:	b913      	cbnz	r3, 8018b92 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8018b8c:	440a      	add	r2, r1
 8018b8e:	b210      	sxth	r0, r2
 8018b90:	4770      	bx	lr
 8018b92:	ee07 2a90 	vmov	s15, r2
 8018b96:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018b9a:	ee07 0a90 	vmov	s15, r0
 8018b9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018ba2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018ba6:	ee07 3a10 	vmov	s14, r3
 8018baa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018bae:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018bb2:	ee07 1a90 	vmov	s15, r1
 8018bb6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018bba:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018bbe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018bc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018bca:	bfcc      	ite	gt
 8018bcc:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018bd0:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018bd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018bd8:	ee17 3a90 	vmov	r3, s15
 8018bdc:	b218      	sxth	r0, r3
 8018bde:	4770      	bx	lr

08018be0 <_ZN8touchgfx12TextProviderC1Ev>:
 8018be0:	b538      	push	{r3, r4, r5, lr}
 8018be2:	2500      	movs	r5, #0
 8018be4:	2302      	movs	r3, #2
 8018be6:	4604      	mov	r4, r0
 8018be8:	e9c0 5500 	strd	r5, r5, [r0]
 8018bec:	7403      	strb	r3, [r0, #16]
 8018bee:	6145      	str	r5, [r0, #20]
 8018bf0:	7605      	strb	r5, [r0, #24]
 8018bf2:	83c5      	strh	r5, [r0, #30]
 8018bf4:	8405      	strh	r5, [r0, #32]
 8018bf6:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018bf8:	8705      	strh	r5, [r0, #56]	; 0x38
 8018bfa:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8018bfc:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018c00:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018c04:	220e      	movs	r2, #14
 8018c06:	4629      	mov	r1, r5
 8018c08:	304c      	adds	r0, #76	; 0x4c
 8018c0a:	f013 f9e6 	bl	802bfda <memset>
 8018c0e:	2301      	movs	r3, #1
 8018c10:	4620      	mov	r0, r4
 8018c12:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018c16:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018c1a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8018c1e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018c22:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8018c26:	f7ef ff11 	bl	8008a4c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8018c2a:	4620      	mov	r0, r4
 8018c2c:	bd38      	pop	{r3, r4, r5, pc}

08018c2e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8018c2e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018c30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018c34:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8018c36:	fab0 f080 	clz	r0, r0
 8018c3a:	0940      	lsrs	r0, r0, #5
 8018c3c:	4770      	bx	lr

08018c3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018c3e:	b530      	push	{r4, r5, lr}
 8018c40:	2500      	movs	r5, #0
 8018c42:	2401      	movs	r4, #1
 8018c44:	6843      	ldr	r3, [r0, #4]
 8018c46:	b913      	cbnz	r3, 8018c4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018c48:	6803      	ldr	r3, [r0, #0]
 8018c4a:	b313      	cbz	r3, 8018c92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018c4c:	6043      	str	r3, [r0, #4]
 8018c4e:	7e03      	ldrb	r3, [r0, #24]
 8018c50:	b143      	cbz	r3, 8018c64 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018c52:	6943      	ldr	r3, [r0, #20]
 8018c54:	b12b      	cbz	r3, 8018c62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018c56:	881a      	ldrh	r2, [r3, #0]
 8018c58:	b11a      	cbz	r2, 8018c62 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018c5a:	1c9a      	adds	r2, r3, #2
 8018c5c:	6142      	str	r2, [r0, #20]
 8018c5e:	8818      	ldrh	r0, [r3, #0]
 8018c60:	bd30      	pop	{r4, r5, pc}
 8018c62:	7605      	strb	r5, [r0, #24]
 8018c64:	6843      	ldr	r3, [r0, #4]
 8018c66:	8819      	ldrh	r1, [r3, #0]
 8018c68:	b199      	cbz	r1, 8018c92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018c6a:	1c9a      	adds	r2, r3, #2
 8018c6c:	2902      	cmp	r1, #2
 8018c6e:	6042      	str	r2, [r0, #4]
 8018c70:	d1f5      	bne.n	8018c5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018c72:	7c03      	ldrb	r3, [r0, #16]
 8018c74:	2b01      	cmp	r3, #1
 8018c76:	d8e5      	bhi.n	8018c44 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018c78:	1c5a      	adds	r2, r3, #1
 8018c7a:	3302      	adds	r3, #2
 8018c7c:	7402      	strb	r2, [r0, #16]
 8018c7e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018c82:	6143      	str	r3, [r0, #20]
 8018c84:	2b00      	cmp	r3, #0
 8018c86:	d0dd      	beq.n	8018c44 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018c88:	881b      	ldrh	r3, [r3, #0]
 8018c8a:	2b00      	cmp	r3, #0
 8018c8c:	d0da      	beq.n	8018c44 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018c8e:	7604      	strb	r4, [r0, #24]
 8018c90:	e7d8      	b.n	8018c44 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018c92:	2000      	movs	r0, #0
 8018c94:	e7e4      	b.n	8018c60 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018c96:	b430      	push	{r4, r5}
 8018c98:	6001      	str	r1, [r0, #0]
 8018c9a:	2100      	movs	r1, #0
 8018c9c:	6041      	str	r1, [r0, #4]
 8018c9e:	6815      	ldr	r5, [r2, #0]
 8018ca0:	6085      	str	r5, [r0, #8]
 8018ca2:	6852      	ldr	r2, [r2, #4]
 8018ca4:	6443      	str	r3, [r0, #68]	; 0x44
 8018ca6:	9b02      	ldr	r3, [sp, #8]
 8018ca8:	60c2      	str	r2, [r0, #12]
 8018caa:	7401      	strb	r1, [r0, #16]
 8018cac:	6141      	str	r1, [r0, #20]
 8018cae:	7601      	strb	r1, [r0, #24]
 8018cb0:	8701      	strh	r1, [r0, #56]	; 0x38
 8018cb2:	8401      	strh	r1, [r0, #32]
 8018cb4:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018cb8:	6483      	str	r3, [r0, #72]	; 0x48
 8018cba:	bc30      	pop	{r4, r5}
 8018cbc:	f7ef bec6 	b.w	8008a4c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018cc0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018cc0:	b408      	push	{r3}
 8018cc2:	b510      	push	{r4, lr}
 8018cc4:	b085      	sub	sp, #20
 8018cc6:	ac07      	add	r4, sp, #28
 8018cc8:	f854 3b04 	ldr.w	r3, [r4], #4
 8018ccc:	9300      	str	r3, [sp, #0]
 8018cce:	4613      	mov	r3, r2
 8018cd0:	4622      	mov	r2, r4
 8018cd2:	9403      	str	r4, [sp, #12]
 8018cd4:	f7ff ffdf 	bl	8018c96 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018cd8:	b005      	add	sp, #20
 8018cda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018cde:	b001      	add	sp, #4
 8018ce0:	4770      	bx	lr

08018ce2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018ce2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018ce4:	4605      	mov	r5, r0
 8018ce6:	4608      	mov	r0, r1
 8018ce8:	b1e9      	cbz	r1, 8018d26 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018cea:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8018cee:	460b      	mov	r3, r1
 8018cf0:	f101 0708 	add.w	r7, r1, #8
 8018cf4:	4622      	mov	r2, r4
 8018cf6:	6818      	ldr	r0, [r3, #0]
 8018cf8:	6859      	ldr	r1, [r3, #4]
 8018cfa:	4626      	mov	r6, r4
 8018cfc:	c603      	stmia	r6!, {r0, r1}
 8018cfe:	3308      	adds	r3, #8
 8018d00:	42bb      	cmp	r3, r7
 8018d02:	4634      	mov	r4, r6
 8018d04:	d1f7      	bne.n	8018cf6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018d06:	6818      	ldr	r0, [r3, #0]
 8018d08:	6030      	str	r0, [r6, #0]
 8018d0a:	889b      	ldrh	r3, [r3, #4]
 8018d0c:	80b3      	strh	r3, [r6, #4]
 8018d0e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018d12:	015b      	lsls	r3, r3, #5
 8018d14:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018d18:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8018d1c:	430b      	orrs	r3, r1
 8018d1e:	425b      	negs	r3, r3
 8018d20:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018d24:	4610      	mov	r0, r2
 8018d26:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018d28 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018d28:	b538      	push	{r3, r4, r5, lr}
 8018d2a:	460c      	mov	r4, r1
 8018d2c:	6811      	ldr	r1, [r2, #0]
 8018d2e:	4610      	mov	r0, r2
 8018d30:	68cd      	ldr	r5, [r1, #12]
 8018d32:	4619      	mov	r1, r3
 8018d34:	47a8      	blx	r5
 8018d36:	2800      	cmp	r0, #0
 8018d38:	bf08      	it	eq
 8018d3a:	4620      	moveq	r0, r4
 8018d3c:	bd38      	pop	{r3, r4, r5, pc}
	...

08018d40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018d42:	4604      	mov	r4, r0
 8018d44:	4615      	mov	r5, r2
 8018d46:	4608      	mov	r0, r1
 8018d48:	b93a      	cbnz	r2, 8018d5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8018d4a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018d4e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8018d52:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8018d56:	4628      	mov	r0, r5
 8018d58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018d5a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018d5e:	8893      	ldrh	r3, [r2, #4]
 8018d60:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018d64:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018d68:	79ee      	ldrb	r6, [r5, #7]
 8018d6a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018d6e:	4316      	orrs	r6, r2
 8018d70:	19da      	adds	r2, r3, r7
 8018d72:	b291      	uxth	r1, r2
 8018d74:	291d      	cmp	r1, #29
 8018d76:	b2b7      	uxth	r7, r6
 8018d78:	d87a      	bhi.n	8018e70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018d7a:	2201      	movs	r2, #1
 8018d7c:	408a      	lsls	r2, r1
 8018d7e:	4975      	ldr	r1, [pc, #468]	; (8018f54 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018d80:	420a      	tst	r2, r1
 8018d82:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018d86:	d12d      	bne.n	8018de4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018d88:	f412 7f60 	tst.w	r2, #896	; 0x380
 8018d8c:	d070      	beq.n	8018e70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018d8e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018d92:	462b      	mov	r3, r5
 8018d94:	f105 0e08 	add.w	lr, r5, #8
 8018d98:	4615      	mov	r5, r2
 8018d9a:	6818      	ldr	r0, [r3, #0]
 8018d9c:	6859      	ldr	r1, [r3, #4]
 8018d9e:	4694      	mov	ip, r2
 8018da0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018da4:	3308      	adds	r3, #8
 8018da6:	4573      	cmp	r3, lr
 8018da8:	4662      	mov	r2, ip
 8018daa:	d1f6      	bne.n	8018d9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018dac:	6818      	ldr	r0, [r3, #0]
 8018dae:	f8cc 0000 	str.w	r0, [ip]
 8018db2:	889b      	ldrh	r3, [r3, #4]
 8018db4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018db8:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018dbc:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018dc0:	b2b3      	uxth	r3, r6
 8018dc2:	1aca      	subs	r2, r1, r3
 8018dc4:	b292      	uxth	r2, r2
 8018dc6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018dca:	10d2      	asrs	r2, r2, #3
 8018dcc:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018dd0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018dd4:	4302      	orrs	r2, r0
 8018dd6:	1bcf      	subs	r7, r1, r7
 8018dd8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8018ddc:	1afb      	subs	r3, r7, r3
 8018dde:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018de2:	e7b8      	b.n	8018d56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018de4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018de6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018dea:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8018dec:	f640 6333 	movw	r3, #3635	; 0xe33
 8018df0:	4299      	cmp	r1, r3
 8018df2:	d110      	bne.n	8018e16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018df4:	6803      	ldr	r3, [r0, #0]
 8018df6:	68db      	ldr	r3, [r3, #12]
 8018df8:	4798      	blx	r3
 8018dfa:	7b41      	ldrb	r1, [r0, #13]
 8018dfc:	00cb      	lsls	r3, r1, #3
 8018dfe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018e02:	7a03      	ldrb	r3, [r0, #8]
 8018e04:	0648      	lsls	r0, r1, #25
 8018e06:	ea43 0302 	orr.w	r3, r3, r2
 8018e0a:	bf44      	itt	mi
 8018e0c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018e10:	b21b      	sxthmi	r3, r3
 8018e12:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018e16:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8018e1a:	443b      	add	r3, r7
 8018e1c:	4433      	add	r3, r6
 8018e1e:	b29b      	uxth	r3, r3
 8018e20:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018e24:	462a      	mov	r2, r5
 8018e26:	f105 0c08 	add.w	ip, r5, #8
 8018e2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018e2e:	4635      	mov	r5, r6
 8018e30:	6810      	ldr	r0, [r2, #0]
 8018e32:	6851      	ldr	r1, [r2, #4]
 8018e34:	4637      	mov	r7, r6
 8018e36:	c703      	stmia	r7!, {r0, r1}
 8018e38:	3208      	adds	r2, #8
 8018e3a:	4562      	cmp	r2, ip
 8018e3c:	463e      	mov	r6, r7
 8018e3e:	d1f7      	bne.n	8018e30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018e40:	6810      	ldr	r0, [r2, #0]
 8018e42:	6038      	str	r0, [r7, #0]
 8018e44:	8892      	ldrh	r2, [r2, #4]
 8018e46:	80ba      	strh	r2, [r7, #4]
 8018e48:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018e4c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018e50:	10db      	asrs	r3, r3, #3
 8018e52:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018e56:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018e5a:	4313      	orrs	r3, r2
 8018e5c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018e60:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018e64:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018e68:	1a9b      	subs	r3, r3, r2
 8018e6a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018e6e:	e772      	b.n	8018d56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018e70:	f023 0204 	bic.w	r2, r3, #4
 8018e74:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018e78:	428a      	cmp	r2, r1
 8018e7a:	d003      	beq.n	8018e84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8018e7c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018e80:	4293      	cmp	r3, r2
 8018e82:	d120      	bne.n	8018ec6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8018e84:	3b01      	subs	r3, #1
 8018e86:	4602      	mov	r2, r0
 8018e88:	b29b      	uxth	r3, r3
 8018e8a:	4629      	mov	r1, r5
 8018e8c:	4620      	mov	r0, r4
 8018e8e:	f7ff ff4b 	bl	8018d28 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018e92:	7b41      	ldrb	r1, [r0, #13]
 8018e94:	00cb      	lsls	r3, r1, #3
 8018e96:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018e9a:	7a03      	ldrb	r3, [r0, #8]
 8018e9c:	0649      	lsls	r1, r1, #25
 8018e9e:	ea43 0302 	orr.w	r3, r3, r2
 8018ea2:	bf44      	itt	mi
 8018ea4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ea8:	b21b      	sxthmi	r3, r3
 8018eaa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018eae:	7b6b      	ldrb	r3, [r5, #13]
 8018eb0:	7aaa      	ldrb	r2, [r5, #10]
 8018eb2:	005b      	lsls	r3, r3, #1
 8018eb4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018eb8:	4313      	orrs	r3, r2
 8018eba:	115a      	asrs	r2, r3, #5
 8018ebc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018ec0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018ec4:	e036      	b.n	8018f34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018ec6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018eca:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018ece:	7a2a      	ldrb	r2, [r5, #8]
 8018ed0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018ed4:	ea42 0201 	orr.w	r2, r2, r1
 8018ed8:	bf1c      	itt	ne
 8018eda:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8018ede:	b212      	sxthne	r2, r2
 8018ee0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018ee4:	f640 6109 	movw	r1, #3593	; 0xe09
 8018ee8:	f023 0210 	bic.w	r2, r3, #16
 8018eec:	428a      	cmp	r2, r1
 8018eee:	d003      	beq.n	8018ef8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018ef0:	f640 6213 	movw	r2, #3603	; 0xe13
 8018ef4:	4293      	cmp	r3, r2
 8018ef6:	d12a      	bne.n	8018f4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018ef8:	7b6e      	ldrb	r6, [r5, #13]
 8018efa:	0076      	lsls	r6, r6, #1
 8018efc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018f00:	7aae      	ldrb	r6, [r5, #10]
 8018f02:	4316      	orrs	r6, r2
 8018f04:	f640 6213 	movw	r2, #3603	; 0xe13
 8018f08:	4293      	cmp	r3, r2
 8018f0a:	bf18      	it	ne
 8018f0c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018f10:	4602      	mov	r2, r0
 8018f12:	bf14      	ite	ne
 8018f14:	b29b      	uxthne	r3, r3
 8018f16:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8018f1a:	4629      	mov	r1, r5
 8018f1c:	4620      	mov	r0, r4
 8018f1e:	f7ff ff03 	bl	8018d28 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018f22:	7b43      	ldrb	r3, [r0, #13]
 8018f24:	7a82      	ldrb	r2, [r0, #10]
 8018f26:	005b      	lsls	r3, r3, #1
 8018f28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018f2c:	4313      	orrs	r3, r2
 8018f2e:	1af6      	subs	r6, r6, r3
 8018f30:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018f34:	7b69      	ldrb	r1, [r5, #13]
 8018f36:	00cb      	lsls	r3, r1, #3
 8018f38:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018f3c:	7a2b      	ldrb	r3, [r5, #8]
 8018f3e:	4313      	orrs	r3, r2
 8018f40:	064a      	lsls	r2, r1, #25
 8018f42:	bf44      	itt	mi
 8018f44:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018f48:	b21b      	sxthmi	r3, r3
 8018f4a:	1bdb      	subs	r3, r3, r7
 8018f4c:	e747      	b.n	8018dde <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018f4e:	2300      	movs	r3, #0
 8018f50:	e7b6      	b.n	8018ec0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8018f52:	bf00      	nop
 8018f54:	3fc00079 	.word	0x3fc00079

08018f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018f58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018f5c:	4604      	mov	r4, r0
 8018f5e:	b942      	cbnz	r2, 8018f72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018f60:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018f64:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018f68:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018f6c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018f70:	e047      	b.n	8019002 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018f72:	7b51      	ldrb	r1, [r2, #13]
 8018f74:	8893      	ldrh	r3, [r2, #4]
 8018f76:	010d      	lsls	r5, r1, #4
 8018f78:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8018f7c:	79d5      	ldrb	r5, [r2, #7]
 8018f7e:	4305      	orrs	r5, r0
 8018f80:	2d04      	cmp	r5, #4
 8018f82:	bfcc      	ite	gt
 8018f84:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018f88:	f04f 0e01 	movle.w	lr, #1
 8018f8c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018f90:	f200 80ab 	bhi.w	80190ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018f94:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018f98:	4283      	cmp	r3, r0
 8018f9a:	d216      	bcs.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f9c:	f240 605b 	movw	r0, #1627	; 0x65b
 8018fa0:	4283      	cmp	r3, r0
 8018fa2:	d859      	bhi.n	8019058 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018fa4:	f240 6057 	movw	r0, #1623	; 0x657
 8018fa8:	4283      	cmp	r3, r0
 8018faa:	d20e      	bcs.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fac:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018fb0:	d24a      	bcs.n	8019048 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018fb2:	f240 604e 	movw	r0, #1614	; 0x64e
 8018fb6:	4283      	cmp	r3, r0
 8018fb8:	d207      	bcs.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fba:	f240 601a 	movw	r0, #1562	; 0x61a
 8018fbe:	4283      	cmp	r3, r0
 8018fc0:	d02a      	beq.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fc2:	d821      	bhi.n	8019008 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018fc4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018fc8:	d35b      	bcc.n	8019082 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018fca:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018fce:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018fd2:	f040 80d0 	bne.w	8019176 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018fd6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018fda:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018fde:	f040 80ca 	bne.w	8019176 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018fe2:	00cb      	lsls	r3, r1, #3
 8018fe4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018fe8:	7a13      	ldrb	r3, [r2, #8]
 8018fea:	0649      	lsls	r1, r1, #25
 8018fec:	ea43 0300 	orr.w	r3, r3, r0
 8018ff0:	bf44      	itt	mi
 8018ff2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ff6:	b21b      	sxthmi	r3, r3
 8018ff8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018ffc:	1b5d      	subs	r5, r3, r5
 8018ffe:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8019002:	4610      	mov	r0, r2
 8019004:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019008:	f240 604b 	movw	r0, #1611	; 0x64b
 801900c:	4283      	cmp	r3, r0
 801900e:	d338      	bcc.n	8019082 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019010:	f240 604c 	movw	r0, #1612	; 0x64c
 8019014:	4283      	cmp	r3, r0
 8019016:	d9d8      	bls.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019018:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 801901c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8019020:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019024:	f040 80f2 	bne.w	801920c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019028:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801902c:	f040 80ee 	bne.w	801920c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8019030:	00cb      	lsls	r3, r1, #3
 8019032:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019036:	7a13      	ldrb	r3, [r2, #8]
 8019038:	064e      	lsls	r6, r1, #25
 801903a:	ea43 0300 	orr.w	r3, r3, r0
 801903e:	bf44      	itt	mi
 8019040:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019044:	b21b      	sxthmi	r3, r3
 8019046:	e7d9      	b.n	8018ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8019048:	f240 6054 	movw	r0, #1620	; 0x654
 801904c:	4283      	cmp	r3, r0
 801904e:	d8e3      	bhi.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019050:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8019054:	d9e0      	bls.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019056:	e7b8      	b.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019058:	f240 6074 	movw	r0, #1652	; 0x674
 801905c:	4283      	cmp	r3, r0
 801905e:	d0b4      	beq.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019060:	d82d      	bhi.n	80190be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8019062:	f240 605e 	movw	r0, #1630	; 0x65e
 8019066:	4283      	cmp	r3, r0
 8019068:	d804      	bhi.n	8019074 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801906a:	f240 605d 	movw	r0, #1629	; 0x65d
 801906e:	4283      	cmp	r3, r0
 8019070:	d3d2      	bcc.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019072:	e7aa      	b.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019074:	f240 605f 	movw	r0, #1631	; 0x65f
 8019078:	4283      	cmp	r3, r0
 801907a:	d0cd      	beq.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801907c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8019080:	d0a3      	beq.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019082:	00cb      	lsls	r3, r1, #3
 8019084:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8019088:	7a13      	ldrb	r3, [r2, #8]
 801908a:	0649      	lsls	r1, r1, #25
 801908c:	ea43 0300 	orr.w	r3, r3, r0
 8019090:	bf44      	itt	mi
 8019092:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019096:	b21b      	sxthmi	r3, r3
 8019098:	1b5d      	subs	r5, r3, r5
 801909a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801909e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80190a2:	7b53      	ldrb	r3, [r2, #13]
 80190a4:	015b      	lsls	r3, r3, #5
 80190a6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80190aa:	7993      	ldrb	r3, [r2, #6]
 80190ac:	430b      	orrs	r3, r1
 80190ae:	005b      	lsls	r3, r3, #1
 80190b0:	2105      	movs	r1, #5
 80190b2:	fb93 f3f1 	sdiv	r3, r3, r1
 80190b6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80190ba:	440b      	add	r3, r1
 80190bc:	e756      	b.n	8018f6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80190be:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80190c2:	4283      	cmp	r3, r0
 80190c4:	d809      	bhi.n	80190da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80190c6:	f240 60df 	movw	r0, #1759	; 0x6df
 80190ca:	4283      	cmp	r3, r0
 80190cc:	f4bf af7d 	bcs.w	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80190d0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80190d4:	2b05      	cmp	r3, #5
 80190d6:	d8d4      	bhi.n	8019082 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80190d8:	e777      	b.n	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80190da:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80190de:	4283      	cmp	r3, r0
 80190e0:	d09a      	beq.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80190e2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80190e6:	4283      	cmp	r3, r0
 80190e8:	e7ca      	b.n	8019080 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80190ea:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80190ee:	d22b      	bcs.n	8019148 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80190f0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80190f4:	4283      	cmp	r3, r0
 80190f6:	d28f      	bcs.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80190f8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80190fc:	4283      	cmp	r3, r0
 80190fe:	d816      	bhi.n	801912e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8019100:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8019104:	4283      	cmp	r3, r0
 8019106:	f4bf af60 	bcs.w	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801910a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801910e:	4283      	cmp	r3, r0
 8019110:	d80a      	bhi.n	8019128 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8019112:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8019116:	4283      	cmp	r3, r0
 8019118:	f4bf af57 	bcs.w	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801911c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8019120:	4283      	cmp	r3, r0
 8019122:	f43f af79 	beq.w	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019126:	e7ac      	b.n	8019082 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8019128:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801912c:	e7f8      	b.n	8019120 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801912e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8019132:	4283      	cmp	r3, r0
 8019134:	d802      	bhi.n	801913c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8019136:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801913a:	e798      	b.n	801906e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801913c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8019140:	4283      	cmp	r3, r0
 8019142:	f47f af42 	bne.w	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8019146:	e767      	b.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019148:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801914c:	4283      	cmp	r3, r0
 801914e:	f43f af63 	beq.w	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8019152:	d802      	bhi.n	801915a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8019154:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8019158:	e7f2      	b.n	8019140 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801915a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801915e:	4283      	cmp	r3, r0
 8019160:	d805      	bhi.n	801916e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8019162:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8019166:	4283      	cmp	r3, r0
 8019168:	f4ff af2f 	bcc.w	8018fca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801916c:	e754      	b.n	8019018 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801916e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8019172:	4283      	cmp	r3, r0
 8019174:	e7af      	b.n	80190d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8019176:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801917a:	4617      	mov	r7, r2
 801917c:	f102 0808 	add.w	r8, r2, #8
 8019180:	4666      	mov	r6, ip
 8019182:	6838      	ldr	r0, [r7, #0]
 8019184:	6879      	ldr	r1, [r7, #4]
 8019186:	46e6      	mov	lr, ip
 8019188:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801918c:	3708      	adds	r7, #8
 801918e:	4547      	cmp	r7, r8
 8019190:	46f4      	mov	ip, lr
 8019192:	d1f6      	bne.n	8019182 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8019194:	6838      	ldr	r0, [r7, #0]
 8019196:	f8ce 0000 	str.w	r0, [lr]
 801919a:	88b9      	ldrh	r1, [r7, #4]
 801919c:	f8ae 1004 	strh.w	r1, [lr, #4]
 80191a0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80191a4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80191a8:	d009      	beq.n	80191be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80191aa:	7b51      	ldrb	r1, [r2, #13]
 80191ac:	7992      	ldrb	r2, [r2, #6]
 80191ae:	0149      	lsls	r1, r1, #5
 80191b0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80191b4:	4311      	orrs	r1, r2
 80191b6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80191ba:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80191be:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80191c2:	b2ad      	uxth	r5, r5
 80191c4:	d00d      	beq.n	80191e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80191c6:	442b      	add	r3, r5
 80191c8:	b29b      	uxth	r3, r3
 80191ca:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80191ce:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80191d2:	10db      	asrs	r3, r3, #3
 80191d4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80191d8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80191dc:	4313      	orrs	r3, r2
 80191de:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80191e2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80191e6:	00cb      	lsls	r3, r1, #3
 80191e8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80191ec:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80191f0:	064f      	lsls	r7, r1, #25
 80191f2:	ea43 0302 	orr.w	r3, r3, r2
 80191f6:	bf44      	itt	mi
 80191f8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80191fc:	b21b      	sxthmi	r3, r3
 80191fe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019202:	1b5b      	subs	r3, r3, r5
 8019204:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019208:	4632      	mov	r2, r6
 801920a:	e6fa      	b.n	8019002 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801920c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019210:	4617      	mov	r7, r2
 8019212:	f102 0908 	add.w	r9, r2, #8
 8019216:	4666      	mov	r6, ip
 8019218:	6838      	ldr	r0, [r7, #0]
 801921a:	6879      	ldr	r1, [r7, #4]
 801921c:	46e0      	mov	r8, ip
 801921e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8019222:	3708      	adds	r7, #8
 8019224:	454f      	cmp	r7, r9
 8019226:	46c4      	mov	ip, r8
 8019228:	d1f6      	bne.n	8019218 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801922a:	6838      	ldr	r0, [r7, #0]
 801922c:	f8c8 0000 	str.w	r0, [r8]
 8019230:	88b9      	ldrh	r1, [r7, #4]
 8019232:	f8a8 1004 	strh.w	r1, [r8, #4]
 8019236:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 801923a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801923e:	d009      	beq.n	8019254 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8019240:	7b51      	ldrb	r1, [r2, #13]
 8019242:	7992      	ldrb	r2, [r2, #6]
 8019244:	0149      	lsls	r1, r1, #5
 8019246:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801924a:	4311      	orrs	r1, r2
 801924c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8019250:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8019254:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019258:	d00e      	beq.n	8019278 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801925a:	eba3 030e 	sub.w	r3, r3, lr
 801925e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8019262:	b29b      	uxth	r3, r3
 8019264:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019268:	10db      	asrs	r3, r3, #3
 801926a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801926e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019272:	4313      	orrs	r3, r2
 8019274:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019278:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 801927c:	00cb      	lsls	r3, r1, #3
 801927e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019282:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019286:	0648      	lsls	r0, r1, #25
 8019288:	ea43 0302 	orr.w	r3, r3, r2
 801928c:	bf44      	itt	mi
 801928e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019292:	b21b      	sxthmi	r3, r3
 8019294:	1b5d      	subs	r5, r3, r5
 8019296:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801929a:	e7b5      	b.n	8019208 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801929c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801929c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80192a0:	461e      	mov	r6, r3
 80192a2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80192a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80192a8:	4604      	mov	r4, r0
 80192aa:	4617      	mov	r7, r2
 80192ac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80192b0:	f7ef fb8a 	bl	80089c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80192b4:	4605      	mov	r5, r0
 80192b6:	b918      	cbnz	r0, 80192c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80192b8:	6030      	str	r0, [r6, #0]
 80192ba:	4628      	mov	r0, r5
 80192bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80192c0:	683b      	ldr	r3, [r7, #0]
 80192c2:	4601      	mov	r1, r0
 80192c4:	68db      	ldr	r3, [r3, #12]
 80192c6:	4638      	mov	r0, r7
 80192c8:	4798      	blx	r3
 80192ca:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80192ce:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80192d2:	4602      	mov	r2, r0
 80192d4:	6030      	str	r0, [r6, #0]
 80192d6:	d213      	bcs.n	8019300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80192d8:	4643      	mov	r3, r8
 80192da:	4639      	mov	r1, r7
 80192dc:	4620      	mov	r0, r4
 80192de:	f7ff fe3b 	bl	8018f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80192e2:	6030      	str	r0, [r6, #0]
 80192e4:	6833      	ldr	r3, [r6, #0]
 80192e6:	b143      	cbz	r3, 80192fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80192e8:	7b5a      	ldrb	r2, [r3, #13]
 80192ea:	7a9b      	ldrb	r3, [r3, #10]
 80192ec:	0052      	lsls	r2, r2, #1
 80192ee:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80192f2:	4313      	orrs	r3, r2
 80192f4:	bf0c      	ite	eq
 80192f6:	2301      	moveq	r3, #1
 80192f8:	2300      	movne	r3, #0
 80192fa:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80192fe:	e7dc      	b.n	80192ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019300:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019304:	b29b      	uxth	r3, r3
 8019306:	2b7f      	cmp	r3, #127	; 0x7f
 8019308:	d804      	bhi.n	8019314 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801930a:	4639      	mov	r1, r7
 801930c:	4620      	mov	r0, r4
 801930e:	f7ff fd17 	bl	8018d40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019312:	e7e6      	b.n	80192e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8019314:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019318:	2b00      	cmp	r3, #0
 801931a:	d0e3      	beq.n	80192e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801931c:	f640 1302 	movw	r3, #2306	; 0x902
 8019320:	429d      	cmp	r5, r3
 8019322:	d1df      	bne.n	80192e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8019324:	4601      	mov	r1, r0
 8019326:	4620      	mov	r0, r4
 8019328:	f7ff fcdb 	bl	8018ce2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801932c:	e7d9      	b.n	80192e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801932e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801932e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019332:	461e      	mov	r6, r3
 8019334:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019336:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801933a:	4604      	mov	r4, r0
 801933c:	4617      	mov	r7, r2
 801933e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019342:	f7ef fb41 	bl	80089c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019346:	4605      	mov	r5, r0
 8019348:	b918      	cbnz	r0, 8019352 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801934a:	6030      	str	r0, [r6, #0]
 801934c:	4628      	mov	r0, r5
 801934e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8019352:	683b      	ldr	r3, [r7, #0]
 8019354:	4601      	mov	r1, r0
 8019356:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801935a:	4638      	mov	r0, r7
 801935c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8019360:	47c8      	blx	r9
 8019362:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8019366:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801936a:	4602      	mov	r2, r0
 801936c:	6030      	str	r0, [r6, #0]
 801936e:	d213      	bcs.n	8019398 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8019370:	4643      	mov	r3, r8
 8019372:	4639      	mov	r1, r7
 8019374:	4620      	mov	r0, r4
 8019376:	f7ff fdef 	bl	8018f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801937a:	6030      	str	r0, [r6, #0]
 801937c:	6833      	ldr	r3, [r6, #0]
 801937e:	b143      	cbz	r3, 8019392 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8019380:	7b5a      	ldrb	r2, [r3, #13]
 8019382:	7a9b      	ldrb	r3, [r3, #10]
 8019384:	0052      	lsls	r2, r2, #1
 8019386:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801938a:	4313      	orrs	r3, r2
 801938c:	bf0c      	ite	eq
 801938e:	2301      	moveq	r3, #1
 8019390:	2300      	movne	r3, #0
 8019392:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8019396:	e7d9      	b.n	801934c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8019398:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801939c:	b29b      	uxth	r3, r3
 801939e:	2b7f      	cmp	r3, #127	; 0x7f
 80193a0:	d804      	bhi.n	80193ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80193a2:	4639      	mov	r1, r7
 80193a4:	4620      	mov	r0, r4
 80193a6:	f7ff fccb 	bl	8018d40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80193aa:	e7e6      	b.n	801937a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80193ac:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80193b0:	2b00      	cmp	r3, #0
 80193b2:	d0e3      	beq.n	801937c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80193b4:	f640 1302 	movw	r3, #2306	; 0x902
 80193b8:	429d      	cmp	r5, r3
 80193ba:	d1df      	bne.n	801937c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80193bc:	4601      	mov	r1, r0
 80193be:	4620      	mov	r0, r4
 80193c0:	f7ff fc8f 	bl	8018ce2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80193c4:	e7d9      	b.n	801937a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080193c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80193c6:	b510      	push	{r4, lr}
 80193c8:	4604      	mov	r4, r0
 80193ca:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80193ce:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80193d0:	b1f1      	cbz	r1, 8019410 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80193d2:	2b0a      	cmp	r3, #10
 80193d4:	d02f      	beq.n	8019436 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80193d6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80193d8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80193dc:	3901      	subs	r1, #1
 80193de:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80193e0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80193e4:	1c51      	adds	r1, r2, #1
 80193e6:	b289      	uxth	r1, r1
 80193e8:	2901      	cmp	r1, #1
 80193ea:	bf84      	itt	hi
 80193ec:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80193f0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80193f2:	f103 0201 	add.w	r2, r3, #1
 80193f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80193f8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80193fa:	bf98      	it	ls
 80193fc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80193fe:	4413      	add	r3, r2
 8019400:	b29b      	uxth	r3, r3
 8019402:	2b09      	cmp	r3, #9
 8019404:	bf88      	it	hi
 8019406:	3b0a      	subhi	r3, #10
 8019408:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801940c:	8458      	strh	r0, [r3, #34]	; 0x22
 801940e:	e7dc      	b.n	80193ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8019410:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019412:	2b0a      	cmp	r3, #10
 8019414:	d00f      	beq.n	8019436 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019416:	4620      	mov	r0, r4
 8019418:	f7ff fc11 	bl	8018c3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801941c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801941e:	1c5a      	adds	r2, r3, #1
 8019420:	8722      	strh	r2, [r4, #56]	; 0x38
 8019422:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8019424:	4413      	add	r3, r2
 8019426:	b29b      	uxth	r3, r3
 8019428:	2b09      	cmp	r3, #9
 801942a:	bf88      	it	hi
 801942c:	3b0a      	subhi	r3, #10
 801942e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019432:	8458      	strh	r0, [r3, #34]	; 0x22
 8019434:	e7ec      	b.n	8019410 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019436:	bd10      	pop	{r4, pc}

08019438 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8019438:	b538      	push	{r3, r4, r5, lr}
 801943a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801943c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8019440:	4604      	mov	r4, r0
 8019442:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8019444:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8019446:	3a01      	subs	r2, #1
 8019448:	8702      	strh	r2, [r0, #56]	; 0x38
 801944a:	1c5a      	adds	r2, r3, #1
 801944c:	b292      	uxth	r2, r2
 801944e:	2a09      	cmp	r2, #9
 8019450:	bf86      	itte	hi
 8019452:	3b09      	subhi	r3, #9
 8019454:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8019456:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8019458:	f7ff ffb5 	bl	80193c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801945c:	8c23      	ldrh	r3, [r4, #32]
 801945e:	2b01      	cmp	r3, #1
 8019460:	bf9c      	itt	ls
 8019462:	3301      	addls	r3, #1
 8019464:	8423      	strhls	r3, [r4, #32]
 8019466:	8be3      	ldrh	r3, [r4, #30]
 8019468:	b90b      	cbnz	r3, 801946e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801946a:	2302      	movs	r3, #2
 801946c:	83e3      	strh	r3, [r4, #30]
 801946e:	8be3      	ldrh	r3, [r4, #30]
 8019470:	3b01      	subs	r3, #1
 8019472:	b29b      	uxth	r3, r3
 8019474:	83e3      	strh	r3, [r4, #30]
 8019476:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801947a:	4628      	mov	r0, r5
 801947c:	8365      	strh	r5, [r4, #26]
 801947e:	bd38      	pop	{r3, r4, r5, pc}

08019480 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8019480:	428a      	cmp	r2, r1
 8019482:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019486:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8019488:	d931      	bls.n	80194ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801948a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801948c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8019490:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8019494:	19ee      	adds	r6, r5, r7
 8019496:	1a54      	subs	r4, r2, r1
 8019498:	3e01      	subs	r6, #1
 801949a:	fa1f fe84 	uxth.w	lr, r4
 801949e:	b2b4      	uxth	r4, r6
 80194a0:	eba4 090e 	sub.w	r9, r4, lr
 80194a4:	fa1f f989 	uxth.w	r9, r9
 80194a8:	2c09      	cmp	r4, #9
 80194aa:	4626      	mov	r6, r4
 80194ac:	bf88      	it	hi
 80194ae:	f1a4 060a 	subhi.w	r6, r4, #10
 80194b2:	f1bc 0f00 	cmp.w	ip, #0
 80194b6:	bf08      	it	eq
 80194b8:	f04f 0c02 	moveq.w	ip, #2
 80194bc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80194c0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80194c4:	fa1f fc8c 	uxth.w	ip, ip
 80194c8:	3c01      	subs	r4, #1
 80194ca:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80194ce:	b2a4      	uxth	r4, r4
 80194d0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80194d4:	454c      	cmp	r4, r9
 80194d6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80194da:	d1e5      	bne.n	80194a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80194dc:	eba5 050e 	sub.w	r5, r5, lr
 80194e0:	eb0e 0408 	add.w	r4, lr, r8
 80194e4:	8705      	strh	r5, [r0, #56]	; 0x38
 80194e6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80194ea:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80194ee:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80194f0:	1a64      	subs	r4, r4, r1
 80194f2:	4439      	add	r1, r7
 80194f4:	b289      	uxth	r1, r1
 80194f6:	2909      	cmp	r1, #9
 80194f8:	bf88      	it	hi
 80194fa:	390a      	subhi	r1, #10
 80194fc:	8704      	strh	r4, [r0, #56]	; 0x38
 80194fe:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019500:	250a      	movs	r5, #10
 8019502:	b18a      	cbz	r2, 8019528 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8019504:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8019506:	3a01      	subs	r2, #1
 8019508:	b292      	uxth	r2, r2
 801950a:	3101      	adds	r1, #1
 801950c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8019510:	8701      	strh	r1, [r0, #56]	; 0x38
 8019512:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8019514:	b901      	cbnz	r1, 8019518 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8019516:	86c5      	strh	r5, [r0, #54]	; 0x36
 8019518:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801951a:	3901      	subs	r1, #1
 801951c:	b289      	uxth	r1, r1
 801951e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019520:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8019524:	844c      	strh	r4, [r1, #34]	; 0x22
 8019526:	e7ec      	b.n	8019502 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8019528:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801952c:	f7ff bf4b 	b.w	80193c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08019530 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8019530:	b570      	push	{r4, r5, r6, lr}
 8019532:	2500      	movs	r5, #0
 8019534:	4295      	cmp	r5, r2
 8019536:	d011      	beq.n	801955c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8019538:	8bc4      	ldrh	r4, [r0, #30]
 801953a:	f831 6b02 	ldrh.w	r6, [r1], #2
 801953e:	4414      	add	r4, r2
 8019540:	3c01      	subs	r4, #1
 8019542:	1b64      	subs	r4, r4, r5
 8019544:	b2a4      	uxth	r4, r4
 8019546:	2c01      	cmp	r4, #1
 8019548:	bf88      	it	hi
 801954a:	3c02      	subhi	r4, #2
 801954c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019550:	8b64      	ldrh	r4, [r4, #26]
 8019552:	42b4      	cmp	r4, r6
 8019554:	d117      	bne.n	8019586 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8019556:	3501      	adds	r5, #1
 8019558:	b2ad      	uxth	r5, r5
 801955a:	e7eb      	b.n	8019534 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801955c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019560:	2400      	movs	r4, #0
 8019562:	4413      	add	r3, r2
 8019564:	b2a2      	uxth	r2, r4
 8019566:	429a      	cmp	r2, r3
 8019568:	da0f      	bge.n	801958a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801956a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 801956c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8019570:	4432      	add	r2, r6
 8019572:	b292      	uxth	r2, r2
 8019574:	2a09      	cmp	r2, #9
 8019576:	bf88      	it	hi
 8019578:	3a0a      	subhi	r2, #10
 801957a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801957e:	3401      	adds	r4, #1
 8019580:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8019582:	42aa      	cmp	r2, r5
 8019584:	d0ee      	beq.n	8019564 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8019586:	2000      	movs	r0, #0
 8019588:	bd70      	pop	{r4, r5, r6, pc}
 801958a:	2001      	movs	r0, #1
 801958c:	e7fc      	b.n	8019588 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801958e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801958e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019592:	4605      	mov	r5, r0
 8019594:	4616      	mov	r6, r2
 8019596:	1c8c      	adds	r4, r1, #2
 8019598:	8809      	ldrh	r1, [r1, #0]
 801959a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801959e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80195a2:	42b3      	cmp	r3, r6
 80195a4:	d124      	bne.n	80195f0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80195a6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80195aa:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80195ae:	f001 070f 	and.w	r7, r1, #15
 80195b2:	f8cd 8000 	str.w	r8, [sp]
 80195b6:	464b      	mov	r3, r9
 80195b8:	4652      	mov	r2, sl
 80195ba:	4621      	mov	r1, r4
 80195bc:	4628      	mov	r0, r5
 80195be:	f7ff ffb7 	bl	8019530 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80195c2:	4683      	mov	fp, r0
 80195c4:	b168      	cbz	r0, 80195e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80195c6:	eb0a 0109 	add.w	r1, sl, r9
 80195ca:	4441      	add	r1, r8
 80195cc:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80195d0:	463a      	mov	r2, r7
 80195d2:	4649      	mov	r1, r9
 80195d4:	4628      	mov	r0, r5
 80195d6:	f7ff ff53 	bl	8019480 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80195da:	4658      	mov	r0, fp
 80195dc:	b003      	add	sp, #12
 80195de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195e2:	eb07 010a 	add.w	r1, r7, sl
 80195e6:	4449      	add	r1, r9
 80195e8:	4441      	add	r1, r8
 80195ea:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80195ee:	e7d2      	b.n	8019596 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80195f0:	f04f 0b00 	mov.w	fp, #0
 80195f4:	e7f1      	b.n	80195da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080195f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80195f6:	b570      	push	{r4, r5, r6, lr}
 80195f8:	8810      	ldrh	r0, [r2, #0]
 80195fa:	4298      	cmp	r0, r3
 80195fc:	d817      	bhi.n	801962e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80195fe:	1e48      	subs	r0, r1, #1
 8019600:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019604:	4298      	cmp	r0, r3
 8019606:	d312      	bcc.n	801962e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019608:	2400      	movs	r4, #0
 801960a:	428c      	cmp	r4, r1
 801960c:	d20f      	bcs.n	801962e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801960e:	1860      	adds	r0, r4, r1
 8019610:	1040      	asrs	r0, r0, #1
 8019612:	0085      	lsls	r5, r0, #2
 8019614:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8019618:	42b3      	cmp	r3, r6
 801961a:	d902      	bls.n	8019622 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801961c:	3001      	adds	r0, #1
 801961e:	b284      	uxth	r4, r0
 8019620:	e7f3      	b.n	801960a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019622:	d201      	bcs.n	8019628 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8019624:	b281      	uxth	r1, r0
 8019626:	e7f0      	b.n	801960a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8019628:	442a      	add	r2, r5
 801962a:	8850      	ldrh	r0, [r2, #2]
 801962c:	bd70      	pop	{r4, r5, r6, pc}
 801962e:	2000      	movs	r0, #0
 8019630:	e7fc      	b.n	801962c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08019632 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8019632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019636:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8019638:	886f      	ldrh	r7, [r5, #2]
 801963a:	4604      	mov	r4, r0
 801963c:	087f      	lsrs	r7, r7, #1
 801963e:	260b      	movs	r6, #11
 8019640:	3e01      	subs	r6, #1
 8019642:	d013      	beq.n	801966c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8019644:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8019646:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801964a:	462a      	mov	r2, r5
 801964c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019650:	4639      	mov	r1, r7
 8019652:	4643      	mov	r3, r8
 8019654:	4620      	mov	r0, r4
 8019656:	f7ff ffce 	bl	80195f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801965a:	b138      	cbz	r0, 801966c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801965c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8019660:	4642      	mov	r2, r8
 8019662:	4620      	mov	r0, r4
 8019664:	f7ff ff93 	bl	801958e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8019668:	2800      	cmp	r0, #0
 801966a:	d1e9      	bne.n	8019640 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801966c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019670 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8019670:	b570      	push	{r4, r5, r6, lr}
 8019672:	694a      	ldr	r2, [r1, #20]
 8019674:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8019676:	684b      	ldr	r3, [r1, #4]
 8019678:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801967a:	1b54      	subs	r4, r2, r5
 801967c:	f000 8106 	beq.w	801988c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019680:	1b9b      	subs	r3, r3, r6
 8019682:	d003      	beq.n	801968c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019684:	4363      	muls	r3, r4
 8019686:	2210      	movs	r2, #16
 8019688:	fb93 f3f2 	sdiv	r3, r3, r2
 801968c:	680c      	ldr	r4, [r1, #0]
 801968e:	698a      	ldr	r2, [r1, #24]
 8019690:	1b65      	subs	r5, r4, r5
 8019692:	f000 80fd 	beq.w	8019890 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019696:	1b92      	subs	r2, r2, r6
 8019698:	d003      	beq.n	80196a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801969a:	436a      	muls	r2, r5
 801969c:	2410      	movs	r4, #16
 801969e:	fb92 f2f4 	sdiv	r2, r2, r4
 80196a2:	1a9b      	subs	r3, r3, r2
 80196a4:	ee07 3a90 	vmov	s15, r3
 80196a8:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80198cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80196ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80196b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80196b4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80196b8:	460a      	mov	r2, r1
 80196ba:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80196be:	4603      	mov	r3, r0
 80196c0:	f100 040c 	add.w	r4, r0, #12
 80196c4:	eeb1 6a43 	vneg.f32	s12, s6
 80196c8:	edd2 7a02 	vldr	s15, [r2, #8]
 80196cc:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80196d0:	3214      	adds	r2, #20
 80196d2:	ece3 6a01 	vstmia	r3!, {s13}
 80196d6:	ed52 7a02 	vldr	s15, [r2, #-8]
 80196da:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80196de:	429c      	cmp	r4, r3
 80196e0:	edc3 7a02 	vstr	s15, [r3, #8]
 80196e4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80196e8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80196ec:	edc3 7a05 	vstr	s15, [r3, #20]
 80196f0:	d1ea      	bne.n	80196c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80196f2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80196f4:	698b      	ldr	r3, [r1, #24]
 80196f6:	edd0 4a02 	vldr	s9, [r0, #8]
 80196fa:	edd0 3a00 	vldr	s7, [r0]
 80196fe:	edd0 6a01 	vldr	s13, [r0, #4]
 8019702:	ed90 5a05 	vldr	s10, [r0, #20]
 8019706:	ed90 2a03 	vldr	s4, [r0, #12]
 801970a:	edd0 5a04 	vldr	s11, [r0, #16]
 801970e:	ed90 1a07 	vldr	s2, [r0, #28]
 8019712:	edd0 2a06 	vldr	s5, [r0, #24]
 8019716:	1a9b      	subs	r3, r3, r2
 8019718:	ee07 3a90 	vmov	s15, r3
 801971c:	684b      	ldr	r3, [r1, #4]
 801971e:	1a9b      	subs	r3, r3, r2
 8019720:	ee07 3a10 	vmov	s14, r3
 8019724:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019728:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801972c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019730:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8019734:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019738:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801973c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019740:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8019744:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019748:	ee32 5a45 	vsub.f32	s10, s4, s10
 801974c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8019750:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8019754:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8019756:	694a      	ldr	r2, [r1, #20]
 8019758:	1b13      	subs	r3, r2, r4
 801975a:	ee07 3a10 	vmov	s14, r3
 801975e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019762:	680b      	ldr	r3, [r1, #0]
 8019764:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019768:	1b1b      	subs	r3, r3, r4
 801976a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801976e:	ee07 3a10 	vmov	s14, r3
 8019772:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019776:	ee27 7a04 	vmul.f32	s14, s14, s8
 801977a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801977e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019782:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8019786:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019788:	698b      	ldr	r3, [r1, #24]
 801978a:	1a9b      	subs	r3, r3, r2
 801978c:	ee06 3a90 	vmov	s13, r3
 8019790:	684b      	ldr	r3, [r1, #4]
 8019792:	1a9b      	subs	r3, r3, r2
 8019794:	ee07 3a10 	vmov	s14, r3
 8019798:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801979c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80197a0:	ee66 6a84 	vmul.f32	s13, s13, s8
 80197a4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80197a8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80197ac:	eee5 6a87 	vfma.f32	s13, s11, s14
 80197b0:	ee66 6a83 	vmul.f32	s13, s13, s6
 80197b4:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80197b8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80197ba:	694a      	ldr	r2, [r1, #20]
 80197bc:	1b13      	subs	r3, r2, r4
 80197be:	ee07 3a10 	vmov	s14, r3
 80197c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80197c6:	680b      	ldr	r3, [r1, #0]
 80197c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80197cc:	1b1b      	subs	r3, r3, r4
 80197ce:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80197d2:	ee07 3a10 	vmov	s14, r3
 80197d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80197da:	ee27 7a04 	vmul.f32	s14, s14, s8
 80197de:	eea5 5a87 	vfma.f32	s10, s11, s14
 80197e2:	edd0 5a08 	vldr	s11, [r0, #32]
 80197e6:	ee25 5a06 	vmul.f32	s10, s10, s12
 80197ea:	ee31 1a65 	vsub.f32	s2, s2, s11
 80197ee:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80197f2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80197f4:	698b      	ldr	r3, [r1, #24]
 80197f6:	1a9b      	subs	r3, r3, r2
 80197f8:	ee07 3a10 	vmov	s14, r3
 80197fc:	684b      	ldr	r3, [r1, #4]
 80197fe:	1a9b      	subs	r3, r3, r2
 8019800:	ee01 3a90 	vmov	s3, r3
 8019804:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019808:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801980c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019810:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8019814:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8019818:	ee61 1a84 	vmul.f32	s3, s3, s8
 801981c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8019820:	ee27 7a03 	vmul.f32	s14, s14, s6
 8019824:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019828:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801982a:	694a      	ldr	r2, [r1, #20]
 801982c:	1b13      	subs	r3, r2, r4
 801982e:	ee03 3a10 	vmov	s6, r3
 8019832:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8019836:	680b      	ldr	r3, [r1, #0]
 8019838:	ee23 3a04 	vmul.f32	s6, s6, s8
 801983c:	1b1b      	subs	r3, r3, r4
 801983e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8019842:	ee03 3a10 	vmov	s6, r3
 8019846:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801984a:	ee23 4a04 	vmul.f32	s8, s6, s8
 801984e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8019852:	ee25 6a86 	vmul.f32	s12, s11, s12
 8019856:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801985a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801985e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8019862:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8019866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801986a:	dd13      	ble.n	8019894 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801986c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019870:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019874:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019876:	eee3 7a87 	vfma.f32	s15, s7, s14
 801987a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801987e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019882:	dd15      	ble.n	80198b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019884:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019888:	6403      	str	r3, [r0, #64]	; 0x40
 801988a:	bd70      	pop	{r4, r5, r6, pc}
 801988c:	4623      	mov	r3, r4
 801988e:	e6fd      	b.n	801968c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019890:	462a      	mov	r2, r5
 8019892:	e706      	b.n	80196a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019894:	d502      	bpl.n	801989c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019896:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801989a:	e7e9      	b.n	8019870 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801989c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80198a0:	eea3 2a85 	vfma.f32	s4, s7, s10
 80198a4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80198a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198ac:	dade      	bge.n	801986c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80198ae:	e7f2      	b.n	8019896 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80198b0:	d502      	bpl.n	80198b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80198b2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80198b6:	e7e7      	b.n	8019888 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80198b8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80198bc:	eee3 4a86 	vfma.f32	s9, s7, s12
 80198c0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80198c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80198c8:	dadc      	bge.n	8019884 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80198ca:	e7f2      	b.n	80198b2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80198cc:	3d800000 	.word	0x3d800000

080198d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80198d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80198d4:	2714      	movs	r7, #20
 80198d6:	435f      	muls	r7, r3
 80198d8:	eb02 0c07 	add.w	ip, r2, r7
 80198dc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80198e0:	f115 0e0f 	adds.w	lr, r5, #15
 80198e4:	f100 80a2 	bmi.w	8019a2c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80198e8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80198ec:	9c08      	ldr	r4, [sp, #32]
 80198ee:	f8c0 e014 	str.w	lr, [r0, #20]
 80198f2:	2614      	movs	r6, #20
 80198f4:	4366      	muls	r6, r4
 80198f6:	eb02 0806 	add.w	r8, r2, r6
 80198fa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80198fe:	f115 040f 	adds.w	r4, r5, #15
 8019902:	f100 809f 	bmi.w	8019a44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019906:	1124      	asrs	r4, r4, #4
 8019908:	eba4 040e 	sub.w	r4, r4, lr
 801990c:	6184      	str	r4, [r0, #24]
 801990e:	2c00      	cmp	r4, #0
 8019910:	f000 808a 	beq.w	8019a28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8019914:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8019918:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801991c:	5995      	ldr	r5, [r2, r6]
 801991e:	eba4 0809 	sub.w	r8, r4, r9
 8019922:	59d4      	ldr	r4, [r2, r7]
 8019924:	eba5 0a04 	sub.w	sl, r5, r4
 8019928:	ea4f 150a 	mov.w	r5, sl, lsl #4
 801992c:	fb0e fe05 	mul.w	lr, lr, r5
 8019930:	fb0a ee19 	mls	lr, sl, r9, lr
 8019934:	fb08 e404 	mla	r4, r8, r4, lr
 8019938:	ea4f 1608 	mov.w	r6, r8, lsl #4
 801993c:	3c01      	subs	r4, #1
 801993e:	19a4      	adds	r4, r4, r6
 8019940:	f100 808c 	bmi.w	8019a5c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8019944:	fb94 fef6 	sdiv	lr, r4, r6
 8019948:	f8c0 e000 	str.w	lr, [r0]
 801994c:	fb06 441e 	mls	r4, r6, lr, r4
 8019950:	6104      	str	r4, [r0, #16]
 8019952:	2d00      	cmp	r5, #0
 8019954:	f2c0 8095 	blt.w	8019a82 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8019958:	fb95 f4f6 	sdiv	r4, r5, r6
 801995c:	6044      	str	r4, [r0, #4]
 801995e:	fb06 5514 	mls	r5, r6, r4, r5
 8019962:	6085      	str	r5, [r0, #8]
 8019964:	60c6      	str	r6, [r0, #12]
 8019966:	f8dc 4004 	ldr.w	r4, [ip, #4]
 801996a:	6945      	ldr	r5, [r0, #20]
 801996c:	59d2      	ldr	r2, [r2, r7]
 801996e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019aa4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019972:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019976:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801997a:	ee07 4a10 	vmov	s14, r4
 801997e:	6804      	ldr	r4, [r0, #0]
 8019980:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019984:	ee07 2a90 	vmov	s15, r2
 8019988:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801998c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019990:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019994:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019998:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801999c:	edd3 6a00 	vldr	s13, [r3]
 80199a0:	eee6 6a07 	vfma.f32	s13, s12, s14
 80199a4:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80199a8:	eee6 6a27 	vfma.f32	s13, s12, s15
 80199ac:	edc0 6a07 	vstr	s13, [r0, #28]
 80199b0:	edd0 6a01 	vldr	s13, [r0, #4]
 80199b4:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80199b8:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80199bc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80199c0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80199c4:	ed80 6a08 	vstr	s12, [r0, #32]
 80199c8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80199ca:	6242      	str	r2, [r0, #36]	; 0x24
 80199cc:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80199d0:	ed93 6a03 	vldr	s12, [r3, #12]
 80199d4:	eea5 6a87 	vfma.f32	s12, s11, s14
 80199d8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80199dc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80199e0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80199e4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80199e8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80199ec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80199f0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80199f4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80199f6:	6302      	str	r2, [r0, #48]	; 0x30
 80199f8:	ed93 6a06 	vldr	s12, [r3, #24]
 80199fc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019a00:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019a04:	eeb0 7a46 	vmov.f32	s14, s12
 8019a08:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8019a0c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019a10:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019a14:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8019a18:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8019a1c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8019a20:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8019a24:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8019a26:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019a28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019a2c:	f1c5 0501 	rsb	r5, r5, #1
 8019a30:	f015 050f 	ands.w	r5, r5, #15
 8019a34:	bf18      	it	ne
 8019a36:	2501      	movne	r5, #1
 8019a38:	2410      	movs	r4, #16
 8019a3a:	fb9e fef4 	sdiv	lr, lr, r4
 8019a3e:	ebae 0e05 	sub.w	lr, lr, r5
 8019a42:	e753      	b.n	80198ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8019a44:	f1c5 0501 	rsb	r5, r5, #1
 8019a48:	f015 050f 	ands.w	r5, r5, #15
 8019a4c:	bf18      	it	ne
 8019a4e:	2501      	movne	r5, #1
 8019a50:	f04f 0910 	mov.w	r9, #16
 8019a54:	fb94 f4f9 	sdiv	r4, r4, r9
 8019a58:	1b64      	subs	r4, r4, r5
 8019a5a:	e755      	b.n	8019908 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8019a5c:	4264      	negs	r4, r4
 8019a5e:	fb94 fef6 	sdiv	lr, r4, r6
 8019a62:	f1ce 0800 	rsb	r8, lr, #0
 8019a66:	fb06 441e 	mls	r4, r6, lr, r4
 8019a6a:	f8c0 8000 	str.w	r8, [r0]
 8019a6e:	6104      	str	r4, [r0, #16]
 8019a70:	2c00      	cmp	r4, #0
 8019a72:	f43f af6e 	beq.w	8019952 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019a76:	ea6f 0e0e 	mvn.w	lr, lr
 8019a7a:	f8c0 e000 	str.w	lr, [r0]
 8019a7e:	1b34      	subs	r4, r6, r4
 8019a80:	e766      	b.n	8019950 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019a82:	426d      	negs	r5, r5
 8019a84:	fb95 f4f6 	sdiv	r4, r5, r6
 8019a88:	f1c4 0e00 	rsb	lr, r4, #0
 8019a8c:	fb06 5514 	mls	r5, r6, r4, r5
 8019a90:	f8c0 e004 	str.w	lr, [r0, #4]
 8019a94:	6085      	str	r5, [r0, #8]
 8019a96:	2d00      	cmp	r5, #0
 8019a98:	f43f af64 	beq.w	8019964 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8019a9c:	43e4      	mvns	r4, r4
 8019a9e:	6044      	str	r4, [r0, #4]
 8019aa0:	1b75      	subs	r5, r6, r5
 8019aa2:	e75e      	b.n	8019962 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019aa4:	3d800000 	.word	0x3d800000

08019aa8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019aa8:	4602      	mov	r2, r0
 8019aaa:	b148      	cbz	r0, 8019ac0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8019aac:	2300      	movs	r3, #0
 8019aae:	b298      	uxth	r0, r3
 8019ab0:	3301      	adds	r3, #1
 8019ab2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019ab6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8019aba:	2900      	cmp	r1, #0
 8019abc:	d1f7      	bne.n	8019aae <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8019abe:	4770      	bx	lr
 8019ac0:	4770      	bx	lr

08019ac2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019ac2:	b530      	push	{r4, r5, lr}
 8019ac4:	4604      	mov	r4, r0
 8019ac6:	b159      	cbz	r1, 8019ae0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019ac8:	b148      	cbz	r0, 8019ade <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019aca:	2300      	movs	r3, #0
 8019acc:	b298      	uxth	r0, r3
 8019ace:	4282      	cmp	r2, r0
 8019ad0:	d905      	bls.n	8019ade <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019ad2:	5ccd      	ldrb	r5, [r1, r3]
 8019ad4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019ad8:	3301      	adds	r3, #1
 8019ada:	2d00      	cmp	r5, #0
 8019adc:	d1f6      	bne.n	8019acc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8019ade:	bd30      	pop	{r4, r5, pc}
 8019ae0:	4608      	mov	r0, r1
 8019ae2:	e7fc      	b.n	8019ade <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019ae4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019ae4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019ae6:	b08b      	sub	sp, #44	; 0x2c
 8019ae8:	468c      	mov	ip, r1
 8019aea:	2100      	movs	r1, #0
 8019aec:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019af0:	4604      	mov	r4, r0
 8019af2:	261f      	movs	r6, #31
 8019af4:	af01      	add	r7, sp, #4
 8019af6:	fb94 fef3 	sdiv	lr, r4, r3
 8019afa:	fb03 441e 	mls	r4, r3, lr, r4
 8019afe:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019b02:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019b06:	b2ec      	uxtb	r4, r5
 8019b08:	2d09      	cmp	r5, #9
 8019b0a:	bfd4      	ite	le
 8019b0c:	3430      	addle	r4, #48	; 0x30
 8019b0e:	3457      	addgt	r4, #87	; 0x57
 8019b10:	b2e4      	uxtb	r4, r4
 8019b12:	55bc      	strb	r4, [r7, r6]
 8019b14:	4674      	mov	r4, lr
 8019b16:	1e71      	subs	r1, r6, #1
 8019b18:	b974      	cbnz	r4, 8019b38 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8019b1a:	2800      	cmp	r0, #0
 8019b1c:	da05      	bge.n	8019b2a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8019b1e:	ab0a      	add	r3, sp, #40	; 0x28
 8019b20:	4419      	add	r1, r3
 8019b22:	232d      	movs	r3, #45	; 0x2d
 8019b24:	f801 3c24 	strb.w	r3, [r1, #-36]
 8019b28:	1eb1      	subs	r1, r6, #2
 8019b2a:	3101      	adds	r1, #1
 8019b2c:	4439      	add	r1, r7
 8019b2e:	4660      	mov	r0, ip
 8019b30:	f7ff ffc7 	bl	8019ac2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019b34:	b00b      	add	sp, #44	; 0x2c
 8019b36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019b38:	460e      	mov	r6, r1
 8019b3a:	e7dc      	b.n	8019af6 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08019b3c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8019b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019b3e:	b08b      	sub	sp, #44	; 0x2c
 8019b40:	468c      	mov	ip, r1
 8019b42:	2100      	movs	r1, #0
 8019b44:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019b48:	ae01      	add	r6, sp, #4
 8019b4a:	211f      	movs	r1, #31
 8019b4c:	fbb0 f7f3 	udiv	r7, r0, r3
 8019b50:	fb03 0517 	mls	r5, r3, r7, r0
 8019b54:	b2ec      	uxtb	r4, r5
 8019b56:	2d09      	cmp	r5, #9
 8019b58:	bfd4      	ite	le
 8019b5a:	3430      	addle	r4, #48	; 0x30
 8019b5c:	3457      	addgt	r4, #87	; 0x57
 8019b5e:	b2e4      	uxtb	r4, r4
 8019b60:	558c      	strb	r4, [r1, r6]
 8019b62:	4638      	mov	r0, r7
 8019b64:	1e4c      	subs	r4, r1, #1
 8019b66:	b92f      	cbnz	r7, 8019b74 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8019b68:	4431      	add	r1, r6
 8019b6a:	4660      	mov	r0, ip
 8019b6c:	f7ff ffa9 	bl	8019ac2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019b70:	b00b      	add	sp, #44	; 0x2c
 8019b72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019b74:	4621      	mov	r1, r4
 8019b76:	e7e9      	b.n	8019b4c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019b78 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8019b78:	b410      	push	{r4}
 8019b7a:	b131      	cbz	r1, 8019b8a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019b7c:	1e9c      	subs	r4, r3, #2
 8019b7e:	2c22      	cmp	r4, #34	; 0x22
 8019b80:	d803      	bhi.n	8019b8a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019b82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019b86:	f7ff bfad 	b.w	8019ae4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019b8a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019b8e:	4770      	bx	lr

08019b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b94:	4691      	mov	r9, r2
 8019b96:	b085      	sub	sp, #20
 8019b98:	6802      	ldr	r2, [r0, #0]
 8019b9a:	9201      	str	r2, [sp, #4]
 8019b9c:	4688      	mov	r8, r1
 8019b9e:	4683      	mov	fp, r0
 8019ba0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019ba4:	9103      	str	r1, [sp, #12]
 8019ba6:	4610      	mov	r0, r2
 8019ba8:	461c      	mov	r4, r3
 8019baa:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8019bae:	9302      	str	r3, [sp, #8]
 8019bb0:	f7ff ff7a 	bl	8019aa8 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019bb4:	f1b8 0f00 	cmp.w	r8, #0
 8019bb8:	bf0c      	ite	eq
 8019bba:	4684      	moveq	ip, r0
 8019bbc:	f100 0c01 	addne.w	ip, r0, #1
 8019bc0:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019bc4:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019bc8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019bca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019bcc:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019bd0:	9903      	ldr	r1, [sp, #12]
 8019bd2:	fa1f fc8c 	uxth.w	ip, ip
 8019bd6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8019bda:	d041      	beq.n	8019c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019bdc:	d834      	bhi.n	8019c48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019bde:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019be2:	d059      	beq.n	8019c98 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019be4:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019be8:	d03a      	beq.n	8019c60 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019bea:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8019bee:	d034      	beq.n	8019c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019bf0:	2400      	movs	r4, #0
 8019bf2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019bf6:	3a01      	subs	r2, #1
 8019bf8:	b169      	cbz	r1, 8019c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019bfa:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019bfc:	458c      	cmp	ip, r1
 8019bfe:	da09      	bge.n	8019c14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019c00:	eba1 010c 	sub.w	r1, r1, ip
 8019c04:	b289      	uxth	r1, r1
 8019c06:	b933      	cbnz	r3, 8019c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019c08:	2e00      	cmp	r6, #0
 8019c0a:	d051      	beq.n	8019cb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019c0c:	2800      	cmp	r0, #0
 8019c0e:	d04f      	beq.n	8019cb0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019c10:	440c      	add	r4, r1
 8019c12:	b2a4      	uxth	r4, r4
 8019c14:	2100      	movs	r1, #0
 8019c16:	682b      	ldr	r3, [r5, #0]
 8019c18:	4293      	cmp	r3, r2
 8019c1a:	da07      	bge.n	8019c2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019c1c:	f1b8 0f00 	cmp.w	r8, #0
 8019c20:	d004      	beq.n	8019c2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019c22:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019c26:	682b      	ldr	r3, [r5, #0]
 8019c28:	3301      	adds	r3, #1
 8019c2a:	602b      	str	r3, [r5, #0]
 8019c2c:	2730      	movs	r7, #48	; 0x30
 8019c2e:	2c00      	cmp	r4, #0
 8019c30:	d04e      	beq.n	8019cd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019c32:	682e      	ldr	r6, [r5, #0]
 8019c34:	3c01      	subs	r4, #1
 8019c36:	42b2      	cmp	r2, r6
 8019c38:	b2a4      	uxth	r4, r4
 8019c3a:	dd49      	ble.n	8019cd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019c3c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019c40:	682b      	ldr	r3, [r5, #0]
 8019c42:	3301      	adds	r3, #1
 8019c44:	602b      	str	r3, [r5, #0]
 8019c46:	e7f2      	b.n	8019c2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019c48:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8019c4c:	d01d      	beq.n	8019c8a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019c4e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8019c52:	d002      	beq.n	8019c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019c54:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019c58:	e7c9      	b.n	8019bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019c5a:	4684      	mov	ip, r0
 8019c5c:	f04f 0800 	mov.w	r8, #0
 8019c60:	2c00      	cmp	r4, #0
 8019c62:	d0c6      	beq.n	8019bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019c64:	b947      	cbnz	r7, 8019c78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019c66:	2801      	cmp	r0, #1
 8019c68:	d106      	bne.n	8019c78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019c6a:	8814      	ldrh	r4, [r2, #0]
 8019c6c:	2c30      	cmp	r4, #48	; 0x30
 8019c6e:	bf02      	ittt	eq
 8019c70:	3202      	addeq	r2, #2
 8019c72:	f8cb 2000 	streq.w	r2, [fp]
 8019c76:	4638      	moveq	r0, r7
 8019c78:	45bc      	cmp	ip, r7
 8019c7a:	da14      	bge.n	8019ca6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019c7c:	b2bf      	uxth	r7, r7
 8019c7e:	eba7 040c 	sub.w	r4, r7, ip
 8019c82:	b2a4      	uxth	r4, r4
 8019c84:	46bc      	mov	ip, r7
 8019c86:	2600      	movs	r6, #0
 8019c88:	e7b3      	b.n	8019bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019c8a:	4684      	mov	ip, r0
 8019c8c:	b16c      	cbz	r4, 8019caa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019c8e:	42b8      	cmp	r0, r7
 8019c90:	dd00      	ble.n	8019c94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019c92:	b2b8      	uxth	r0, r7
 8019c94:	2400      	movs	r4, #0
 8019c96:	e003      	b.n	8019ca0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019c98:	f04f 0c01 	mov.w	ip, #1
 8019c9c:	2400      	movs	r4, #0
 8019c9e:	4660      	mov	r0, ip
 8019ca0:	4626      	mov	r6, r4
 8019ca2:	46a0      	mov	r8, r4
 8019ca4:	e7a5      	b.n	8019bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019ca6:	2400      	movs	r4, #0
 8019ca8:	e7ed      	b.n	8019c86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019caa:	4626      	mov	r6, r4
 8019cac:	46a0      	mov	r8, r4
 8019cae:	e7a0      	b.n	8019bf2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019cb0:	2900      	cmp	r1, #0
 8019cb2:	d0b0      	beq.n	8019c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019cb4:	2720      	movs	r7, #32
 8019cb6:	682e      	ldr	r6, [r5, #0]
 8019cb8:	2900      	cmp	r1, #0
 8019cba:	d0ac      	beq.n	8019c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019cbc:	3901      	subs	r1, #1
 8019cbe:	4296      	cmp	r6, r2
 8019cc0:	b289      	uxth	r1, r1
 8019cc2:	daa7      	bge.n	8019c14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019cc4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019cc8:	682b      	ldr	r3, [r5, #0]
 8019cca:	3301      	adds	r3, #1
 8019ccc:	602b      	str	r3, [r5, #0]
 8019cce:	e7f2      	b.n	8019cb6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019cd0:	b188      	cbz	r0, 8019cf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019cd2:	682b      	ldr	r3, [r5, #0]
 8019cd4:	3801      	subs	r0, #1
 8019cd6:	429a      	cmp	r2, r3
 8019cd8:	b280      	uxth	r0, r0
 8019cda:	dd0c      	ble.n	8019cf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019cdc:	f8db 3000 	ldr.w	r3, [fp]
 8019ce0:	1c9c      	adds	r4, r3, #2
 8019ce2:	f8cb 4000 	str.w	r4, [fp]
 8019ce6:	881c      	ldrh	r4, [r3, #0]
 8019ce8:	682b      	ldr	r3, [r5, #0]
 8019cea:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019cee:	682b      	ldr	r3, [r5, #0]
 8019cf0:	3301      	adds	r3, #1
 8019cf2:	602b      	str	r3, [r5, #0]
 8019cf4:	e7ec      	b.n	8019cd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019cf6:	2620      	movs	r6, #32
 8019cf8:	b151      	cbz	r1, 8019d10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019cfa:	6828      	ldr	r0, [r5, #0]
 8019cfc:	3901      	subs	r1, #1
 8019cfe:	4282      	cmp	r2, r0
 8019d00:	b289      	uxth	r1, r1
 8019d02:	dd05      	ble.n	8019d10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019d04:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019d08:	682b      	ldr	r3, [r5, #0]
 8019d0a:	3301      	adds	r3, #1
 8019d0c:	602b      	str	r3, [r5, #0]
 8019d0e:	e7f3      	b.n	8019cf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019d10:	b005      	add	sp, #20
 8019d12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019d16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019d1a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019d1e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019d22:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8019d26:	2400      	movs	r4, #0
 8019d28:	8014      	strh	r4, [r2, #0]
 8019d2a:	701c      	strb	r4, [r3, #0]
 8019d2c:	f888 4000 	strb.w	r4, [r8]
 8019d30:	f88c 4000 	strb.w	r4, [ip]
 8019d34:	f88e 4000 	strb.w	r4, [lr]
 8019d38:	703c      	strb	r4, [r7, #0]
 8019d3a:	6804      	ldr	r4, [r0, #0]
 8019d3c:	b1a4      	cbz	r4, 8019d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019d3e:	8824      	ldrh	r4, [r4, #0]
 8019d40:	f04f 0901 	mov.w	r9, #1
 8019d44:	b314      	cbz	r4, 8019d8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019d46:	2c2b      	cmp	r4, #43	; 0x2b
 8019d48:	d001      	beq.n	8019d4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019d4a:	2c20      	cmp	r4, #32
 8019d4c:	d110      	bne.n	8019d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019d4e:	8014      	strh	r4, [r2, #0]
 8019d50:	6804      	ldr	r4, [r0, #0]
 8019d52:	b10c      	cbz	r4, 8019d58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8019d54:	3402      	adds	r4, #2
 8019d56:	6004      	str	r4, [r0, #0]
 8019d58:	680c      	ldr	r4, [r1, #0]
 8019d5a:	b10c      	cbz	r4, 8019d60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019d5c:	3401      	adds	r4, #1
 8019d5e:	600c      	str	r4, [r1, #0]
 8019d60:	6804      	ldr	r4, [r0, #0]
 8019d62:	b17c      	cbz	r4, 8019d84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8019d64:	8824      	ldrh	r4, [r4, #0]
 8019d66:	e7ed      	b.n	8019d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019d68:	680c      	ldr	r4, [r1, #0]
 8019d6a:	b17c      	cbz	r4, 8019d8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019d6c:	7824      	ldrb	r4, [r4, #0]
 8019d6e:	e7e7      	b.n	8019d40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019d70:	2c2d      	cmp	r4, #45	; 0x2d
 8019d72:	d102      	bne.n	8019d7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019d74:	f883 9000 	strb.w	r9, [r3]
 8019d78:	e7ea      	b.n	8019d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019d7a:	2c23      	cmp	r4, #35	; 0x23
 8019d7c:	d107      	bne.n	8019d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019d7e:	f888 9000 	strb.w	r9, [r8]
 8019d82:	e7e5      	b.n	8019d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019d84:	680c      	ldr	r4, [r1, #0]
 8019d86:	b10c      	cbz	r4, 8019d8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019d88:	7824      	ldrb	r4, [r4, #0]
 8019d8a:	e7db      	b.n	8019d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019d8c:	2400      	movs	r4, #0
 8019d8e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019d92:	2b09      	cmp	r3, #9
 8019d94:	d901      	bls.n	8019d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019d96:	2c2a      	cmp	r4, #42	; 0x2a
 8019d98:	d122      	bne.n	8019de0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019d9a:	2301      	movs	r3, #1
 8019d9c:	2c30      	cmp	r4, #48	; 0x30
 8019d9e:	f88e 3000 	strb.w	r3, [lr]
 8019da2:	d10d      	bne.n	8019dc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019da4:	f88c 3000 	strb.w	r3, [ip]
 8019da8:	6803      	ldr	r3, [r0, #0]
 8019daa:	b10b      	cbz	r3, 8019db0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019dac:	3302      	adds	r3, #2
 8019dae:	6003      	str	r3, [r0, #0]
 8019db0:	680b      	ldr	r3, [r1, #0]
 8019db2:	b10b      	cbz	r3, 8019db8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019db4:	3301      	adds	r3, #1
 8019db6:	600b      	str	r3, [r1, #0]
 8019db8:	6803      	ldr	r3, [r0, #0]
 8019dba:	2b00      	cmp	r3, #0
 8019dbc:	d02f      	beq.n	8019e1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019dbe:	881c      	ldrh	r4, [r3, #0]
 8019dc0:	2c2a      	cmp	r4, #42	; 0x2a
 8019dc2:	d135      	bne.n	8019e30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019dc4:	f04f 33ff 	mov.w	r3, #4294967295
 8019dc8:	6033      	str	r3, [r6, #0]
 8019dca:	6803      	ldr	r3, [r0, #0]
 8019dcc:	b10b      	cbz	r3, 8019dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019dce:	3302      	adds	r3, #2
 8019dd0:	6003      	str	r3, [r0, #0]
 8019dd2:	680b      	ldr	r3, [r1, #0]
 8019dd4:	b10b      	cbz	r3, 8019dda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019dd6:	3301      	adds	r3, #1
 8019dd8:	600b      	str	r3, [r1, #0]
 8019dda:	6803      	ldr	r3, [r0, #0]
 8019ddc:	b31b      	cbz	r3, 8019e26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019dde:	881c      	ldrh	r4, [r3, #0]
 8019de0:	2c2e      	cmp	r4, #46	; 0x2e
 8019de2:	d11a      	bne.n	8019e1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019de4:	2301      	movs	r3, #1
 8019de6:	703b      	strb	r3, [r7, #0]
 8019de8:	6803      	ldr	r3, [r0, #0]
 8019dea:	b10b      	cbz	r3, 8019df0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019dec:	3302      	adds	r3, #2
 8019dee:	6003      	str	r3, [r0, #0]
 8019df0:	680b      	ldr	r3, [r1, #0]
 8019df2:	b10b      	cbz	r3, 8019df8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019df4:	3301      	adds	r3, #1
 8019df6:	600b      	str	r3, [r1, #0]
 8019df8:	6803      	ldr	r3, [r0, #0]
 8019dfa:	2b00      	cmp	r3, #0
 8019dfc:	d036      	beq.n	8019e6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019dfe:	881b      	ldrh	r3, [r3, #0]
 8019e00:	2b2a      	cmp	r3, #42	; 0x2a
 8019e02:	d137      	bne.n	8019e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019e04:	f04f 33ff 	mov.w	r3, #4294967295
 8019e08:	602b      	str	r3, [r5, #0]
 8019e0a:	6803      	ldr	r3, [r0, #0]
 8019e0c:	b10b      	cbz	r3, 8019e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019e0e:	3302      	adds	r3, #2
 8019e10:	6003      	str	r3, [r0, #0]
 8019e12:	680b      	ldr	r3, [r1, #0]
 8019e14:	b10b      	cbz	r3, 8019e1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019e16:	3301      	adds	r3, #1
 8019e18:	600b      	str	r3, [r1, #0]
 8019e1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019e1e:	680c      	ldr	r4, [r1, #0]
 8019e20:	b134      	cbz	r4, 8019e30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019e22:	7824      	ldrb	r4, [r4, #0]
 8019e24:	e7cc      	b.n	8019dc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019e26:	680b      	ldr	r3, [r1, #0]
 8019e28:	2b00      	cmp	r3, #0
 8019e2a:	d0f6      	beq.n	8019e1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019e2c:	781c      	ldrb	r4, [r3, #0]
 8019e2e:	e7d7      	b.n	8019de0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019e30:	2300      	movs	r3, #0
 8019e32:	6033      	str	r3, [r6, #0]
 8019e34:	220a      	movs	r2, #10
 8019e36:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019e3a:	fa1f f38c 	uxth.w	r3, ip
 8019e3e:	2b09      	cmp	r3, #9
 8019e40:	d8ce      	bhi.n	8019de0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019e42:	6833      	ldr	r3, [r6, #0]
 8019e44:	fb02 c303 	mla	r3, r2, r3, ip
 8019e48:	6033      	str	r3, [r6, #0]
 8019e4a:	6803      	ldr	r3, [r0, #0]
 8019e4c:	b10b      	cbz	r3, 8019e52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019e4e:	3302      	adds	r3, #2
 8019e50:	6003      	str	r3, [r0, #0]
 8019e52:	680b      	ldr	r3, [r1, #0]
 8019e54:	b10b      	cbz	r3, 8019e5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8019e56:	3301      	adds	r3, #1
 8019e58:	600b      	str	r3, [r1, #0]
 8019e5a:	6803      	ldr	r3, [r0, #0]
 8019e5c:	b10b      	cbz	r3, 8019e62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019e5e:	881c      	ldrh	r4, [r3, #0]
 8019e60:	e7e9      	b.n	8019e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019e62:	680c      	ldr	r4, [r1, #0]
 8019e64:	2c00      	cmp	r4, #0
 8019e66:	d0e6      	beq.n	8019e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019e68:	7824      	ldrb	r4, [r4, #0]
 8019e6a:	e7e4      	b.n	8019e36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019e6c:	680b      	ldr	r3, [r1, #0]
 8019e6e:	b10b      	cbz	r3, 8019e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019e70:	781b      	ldrb	r3, [r3, #0]
 8019e72:	e7c5      	b.n	8019e00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019e74:	2200      	movs	r2, #0
 8019e76:	602a      	str	r2, [r5, #0]
 8019e78:	240a      	movs	r4, #10
 8019e7a:	3b30      	subs	r3, #48	; 0x30
 8019e7c:	b29e      	uxth	r6, r3
 8019e7e:	2e09      	cmp	r6, #9
 8019e80:	682a      	ldr	r2, [r5, #0]
 8019e82:	d813      	bhi.n	8019eac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019e84:	fb04 3302 	mla	r3, r4, r2, r3
 8019e88:	602b      	str	r3, [r5, #0]
 8019e8a:	6803      	ldr	r3, [r0, #0]
 8019e8c:	b10b      	cbz	r3, 8019e92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019e8e:	3302      	adds	r3, #2
 8019e90:	6003      	str	r3, [r0, #0]
 8019e92:	680b      	ldr	r3, [r1, #0]
 8019e94:	b10b      	cbz	r3, 8019e9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019e96:	3301      	adds	r3, #1
 8019e98:	600b      	str	r3, [r1, #0]
 8019e9a:	6803      	ldr	r3, [r0, #0]
 8019e9c:	b10b      	cbz	r3, 8019ea2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019e9e:	881b      	ldrh	r3, [r3, #0]
 8019ea0:	e7eb      	b.n	8019e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019ea2:	680b      	ldr	r3, [r1, #0]
 8019ea4:	2b00      	cmp	r3, #0
 8019ea6:	d0e8      	beq.n	8019e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019ea8:	781b      	ldrb	r3, [r3, #0]
 8019eaa:	e7e6      	b.n	8019e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019eac:	2a06      	cmp	r2, #6
 8019eae:	bfa8      	it	ge
 8019eb0:	2206      	movge	r2, #6
 8019eb2:	602a      	str	r2, [r5, #0]
 8019eb4:	e7b1      	b.n	8019e1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019eb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019eba:	b0a3      	sub	sp, #140	; 0x8c
 8019ebc:	2600      	movs	r6, #0
 8019ebe:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019ec2:	4607      	mov	r7, r0
 8019ec4:	4688      	mov	r8, r1
 8019ec6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019eca:	4631      	mov	r1, r6
 8019ecc:	2242      	movs	r2, #66	; 0x42
 8019ece:	4648      	mov	r0, r9
 8019ed0:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019ed2:	960d      	str	r6, [sp, #52]	; 0x34
 8019ed4:	f012 f881 	bl	802bfda <memset>
 8019ed8:	b15f      	cbz	r7, 8019ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019eda:	f108 3aff 	add.w	sl, r8, #4294967295
 8019ede:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019ee0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019ee2:	b152      	cbz	r2, 8019efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019ee4:	8812      	ldrh	r2, [r2, #0]
 8019ee6:	b10a      	cbz	r2, 8019eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019ee8:	459a      	cmp	sl, r3
 8019eea:	dc2e      	bgt.n	8019f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019eec:	2200      	movs	r2, #0
 8019eee:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019ef2:	4638      	mov	r0, r7
 8019ef4:	b023      	add	sp, #140	; 0x8c
 8019ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019efa:	9a08      	ldr	r2, [sp, #32]
 8019efc:	2a00      	cmp	r2, #0
 8019efe:	d0f5      	beq.n	8019eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019f00:	7812      	ldrb	r2, [r2, #0]
 8019f02:	e7f0      	b.n	8019ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019f04:	2d00      	cmp	r5, #0
 8019f06:	d0ea      	beq.n	8019ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f08:	782a      	ldrb	r2, [r5, #0]
 8019f0a:	b142      	cbz	r2, 8019f1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019f0c:	2a25      	cmp	r2, #37	; 0x25
 8019f0e:	d001      	beq.n	8019f14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019f10:	459a      	cmp	sl, r3
 8019f12:	dc08      	bgt.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019f14:	f1bb 0f00 	cmp.w	fp, #0
 8019f18:	d121      	bne.n	8019f5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019f1a:	2d00      	cmp	r5, #0
 8019f1c:	d0df      	beq.n	8019ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f1e:	782a      	ldrb	r2, [r5, #0]
 8019f20:	f04f 0b00 	mov.w	fp, #0
 8019f24:	e01d      	b.n	8019f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8019f26:	f1bb 0f00 	cmp.w	fp, #0
 8019f2a:	d078      	beq.n	801a01e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019f2c:	f8bb 2000 	ldrh.w	r2, [fp]
 8019f30:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019f34:	f1bb 0f00 	cmp.w	fp, #0
 8019f38:	d002      	beq.n	8019f40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019f3a:	f10b 0202 	add.w	r2, fp, #2
 8019f3e:	9209      	str	r2, [sp, #36]	; 0x24
 8019f40:	b10d      	cbz	r5, 8019f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8019f42:	3501      	adds	r5, #1
 8019f44:	9508      	str	r5, [sp, #32]
 8019f46:	3301      	adds	r3, #1
 8019f48:	930d      	str	r3, [sp, #52]	; 0x34
 8019f4a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019f4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019f50:	f1bb 0f00 	cmp.w	fp, #0
 8019f54:	d0d6      	beq.n	8019f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8019f56:	f8bb 2000 	ldrh.w	r2, [fp]
 8019f5a:	2a00      	cmp	r2, #0
 8019f5c:	d1d6      	bne.n	8019f0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019f5e:	f8bb 2000 	ldrh.w	r2, [fp]
 8019f62:	2a00      	cmp	r2, #0
 8019f64:	d0bb      	beq.n	8019ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f66:	459a      	cmp	sl, r3
 8019f68:	ddb9      	ble.n	8019ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f6a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019f6e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019f72:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019f76:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8019f7a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8019f7e:	960e      	str	r6, [sp, #56]	; 0x38
 8019f80:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019f84:	960f      	str	r6, [sp, #60]	; 0x3c
 8019f86:	f1bb 0f00 	cmp.w	fp, #0
 8019f8a:	d002      	beq.n	8019f92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019f8c:	f10b 0302 	add.w	r3, fp, #2
 8019f90:	9309      	str	r3, [sp, #36]	; 0x24
 8019f92:	b10d      	cbz	r5, 8019f98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019f94:	1c6b      	adds	r3, r5, #1
 8019f96:	9308      	str	r3, [sp, #32]
 8019f98:	ab0f      	add	r3, sp, #60	; 0x3c
 8019f9a:	9305      	str	r3, [sp, #20]
 8019f9c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019fa0:	9304      	str	r3, [sp, #16]
 8019fa2:	ab0e      	add	r3, sp, #56	; 0x38
 8019fa4:	9303      	str	r3, [sp, #12]
 8019fa6:	ab0c      	add	r3, sp, #48	; 0x30
 8019fa8:	9302      	str	r3, [sp, #8]
 8019faa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019fae:	9301      	str	r3, [sp, #4]
 8019fb0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019fb4:	9300      	str	r3, [sp, #0]
 8019fb6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019fba:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019fbe:	a908      	add	r1, sp, #32
 8019fc0:	a809      	add	r0, sp, #36	; 0x24
 8019fc2:	f7ff fea8 	bl	8019d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019fc6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fc8:	2b00      	cmp	r3, #0
 8019fca:	bfbe      	ittt	lt
 8019fcc:	6823      	ldrlt	r3, [r4, #0]
 8019fce:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019fd2:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019fd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019fd6:	bfb8      	it	lt
 8019fd8:	3404      	addlt	r4, #4
 8019fda:	2b00      	cmp	r3, #0
 8019fdc:	bfb8      	it	lt
 8019fde:	6823      	ldrlt	r3, [r4, #0]
 8019fe0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019fe4:	bfbe      	ittt	lt
 8019fe6:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019fea:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019fec:	3404      	addlt	r4, #4
 8019fee:	b1d9      	cbz	r1, 801a028 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019ff0:	880b      	ldrh	r3, [r1, #0]
 8019ff2:	2b69      	cmp	r3, #105	; 0x69
 8019ff4:	d01f      	beq.n	801a036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ff6:	d82f      	bhi.n	801a058 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019ff8:	2b58      	cmp	r3, #88	; 0x58
 8019ffa:	d01c      	beq.n	801a036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ffc:	d818      	bhi.n	801a030 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019ffe:	2b25      	cmp	r3, #37	; 0x25
 801a000:	d034      	beq.n	801a06c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 801a002:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801a006:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a008:	f1bb 0f00 	cmp.w	fp, #0
 801a00c:	f000 80b8 	beq.w	801a180 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 801a010:	f8bb 5000 	ldrh.w	r5, [fp]
 801a014:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801a018:	3301      	adds	r3, #1
 801a01a:	930d      	str	r3, [sp, #52]	; 0x34
 801a01c:	e029      	b.n	801a072 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a01e:	b10d      	cbz	r5, 801a024 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801a020:	782a      	ldrb	r2, [r5, #0]
 801a022:	e785      	b.n	8019f30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a024:	462a      	mov	r2, r5
 801a026:	e783      	b.n	8019f30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801a028:	2a00      	cmp	r2, #0
 801a02a:	d0ea      	beq.n	801a002 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a02c:	7813      	ldrb	r3, [r2, #0]
 801a02e:	e7e0      	b.n	8019ff2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801a030:	3b63      	subs	r3, #99	; 0x63
 801a032:	2b01      	cmp	r3, #1
 801a034:	d8e5      	bhi.n	801a002 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a036:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801a03a:	b329      	cbz	r1, 801a088 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801a03c:	880b      	ldrh	r3, [r1, #0]
 801a03e:	2b69      	cmp	r3, #105	; 0x69
 801a040:	d063      	beq.n	801a10a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a042:	d825      	bhi.n	801a090 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 801a044:	2b63      	cmp	r3, #99	; 0x63
 801a046:	d038      	beq.n	801a0ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801a048:	2b64      	cmp	r3, #100	; 0x64
 801a04a:	d05e      	beq.n	801a10a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801a04c:	2b58      	cmp	r3, #88	; 0x58
 801a04e:	d07b      	beq.n	801a148 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801a050:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801a054:	4625      	mov	r5, r4
 801a056:	e036      	b.n	801a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a058:	2b73      	cmp	r3, #115	; 0x73
 801a05a:	d0ec      	beq.n	801a036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a05c:	d802      	bhi.n	801a064 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801a05e:	2b6f      	cmp	r3, #111	; 0x6f
 801a060:	d1cf      	bne.n	801a002 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801a062:	e7e8      	b.n	801a036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a064:	2b75      	cmp	r3, #117	; 0x75
 801a066:	d0e6      	beq.n	801a036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801a068:	2b78      	cmp	r3, #120	; 0x78
 801a06a:	e7f9      	b.n	801a060 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801a06c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a06e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801a072:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a074:	b10b      	cbz	r3, 801a07a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 801a076:	3302      	adds	r3, #2
 801a078:	9309      	str	r3, [sp, #36]	; 0x24
 801a07a:	9b08      	ldr	r3, [sp, #32]
 801a07c:	2b00      	cmp	r3, #0
 801a07e:	f43f af2e 	beq.w	8019ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a082:	3301      	adds	r3, #1
 801a084:	9308      	str	r3, [sp, #32]
 801a086:	e72a      	b.n	8019ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801a088:	2a00      	cmp	r2, #0
 801a08a:	d0e1      	beq.n	801a050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a08c:	7813      	ldrb	r3, [r2, #0]
 801a08e:	e7d6      	b.n	801a03e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801a090:	2b73      	cmp	r3, #115	; 0x73
 801a092:	d036      	beq.n	801a102 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 801a094:	d807      	bhi.n	801a0a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 801a096:	2b6f      	cmp	r3, #111	; 0x6f
 801a098:	d1da      	bne.n	801a050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a09a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a09c:	1d25      	adds	r5, r4, #4
 801a09e:	eba8 0202 	sub.w	r2, r8, r2
 801a0a2:	2308      	movs	r3, #8
 801a0a4:	e04a      	b.n	801a13c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a0a6:	2b75      	cmp	r3, #117	; 0x75
 801a0a8:	d043      	beq.n	801a132 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801a0aa:	2b78      	cmp	r3, #120	; 0x78
 801a0ac:	d1d0      	bne.n	801a050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801a0ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a0b0:	1d25      	adds	r5, r4, #4
 801a0b2:	eba8 0202 	sub.w	r2, r8, r2
 801a0b6:	2310      	movs	r3, #16
 801a0b8:	e040      	b.n	801a13c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801a0ba:	6823      	ldr	r3, [r4, #0]
 801a0bc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801a0c0:	1d25      	adds	r5, r4, #4
 801a0c2:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801a0c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0c8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801a0cc:	2b00      	cmp	r3, #0
 801a0ce:	d052      	beq.n	801a176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801a0d0:	881a      	ldrh	r2, [r3, #0]
 801a0d2:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a0d6:	a80d      	add	r0, sp, #52	; 0x34
 801a0d8:	9005      	str	r0, [sp, #20]
 801a0da:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801a0de:	9004      	str	r0, [sp, #16]
 801a0e0:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a0e2:	9003      	str	r0, [sp, #12]
 801a0e4:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801a0e8:	9002      	str	r0, [sp, #8]
 801a0ea:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a0ec:	9001      	str	r0, [sp, #4]
 801a0ee:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801a0f2:	9000      	str	r0, [sp, #0]
 801a0f4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801a0f8:	a810      	add	r0, sp, #64	; 0x40
 801a0fa:	f7ff fd49 	bl	8019b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a0fe:	462c      	mov	r4, r5
 801a100:	e7b7      	b.n	801a072 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801a102:	6823      	ldr	r3, [r4, #0]
 801a104:	1d25      	adds	r5, r4, #4
 801a106:	9310      	str	r3, [sp, #64]	; 0x40
 801a108:	e7dd      	b.n	801a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a10a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a10c:	6820      	ldr	r0, [r4, #0]
 801a10e:	eba8 0202 	sub.w	r2, r8, r2
 801a112:	230a      	movs	r3, #10
 801a114:	b292      	uxth	r2, r2
 801a116:	4649      	mov	r1, r9
 801a118:	f7ff fce4 	bl	8019ae4 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801a11c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801a120:	2b2d      	cmp	r3, #45	; 0x2d
 801a122:	f104 0504 	add.w	r5, r4, #4
 801a126:	d1ce      	bne.n	801a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a128:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a12c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a12e:	3302      	adds	r3, #2
 801a130:	e7e9      	b.n	801a106 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801a132:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a134:	1d25      	adds	r5, r4, #4
 801a136:	eba8 0202 	sub.w	r2, r8, r2
 801a13a:	230a      	movs	r3, #10
 801a13c:	b292      	uxth	r2, r2
 801a13e:	4649      	mov	r1, r9
 801a140:	6820      	ldr	r0, [r4, #0]
 801a142:	f7ff fcfb 	bl	8019b3c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801a146:	e7be      	b.n	801a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a148:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a14a:	6820      	ldr	r0, [r4, #0]
 801a14c:	eba8 0202 	sub.w	r2, r8, r2
 801a150:	b292      	uxth	r2, r2
 801a152:	2310      	movs	r3, #16
 801a154:	4649      	mov	r1, r9
 801a156:	f7ff fcf1 	bl	8019b3c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801a15a:	1d25      	adds	r5, r4, #4
 801a15c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801a160:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801a164:	2b00      	cmp	r3, #0
 801a166:	d0ae      	beq.n	801a0c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801a168:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801a16c:	2919      	cmp	r1, #25
 801a16e:	d8f7      	bhi.n	801a160 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a170:	3b20      	subs	r3, #32
 801a172:	8013      	strh	r3, [r2, #0]
 801a174:	e7f4      	b.n	801a160 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801a176:	9a08      	ldr	r2, [sp, #32]
 801a178:	2a00      	cmp	r2, #0
 801a17a:	d0aa      	beq.n	801a0d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a17c:	7812      	ldrb	r2, [r2, #0]
 801a17e:	e7a8      	b.n	801a0d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a180:	2d00      	cmp	r5, #0
 801a182:	f43f af47 	beq.w	801a014 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801a186:	782d      	ldrb	r5, [r5, #0]
 801a188:	e744      	b.n	801a014 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801a18a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801a18a:	b507      	push	{r0, r1, r2, lr}
 801a18c:	9300      	str	r3, [sp, #0]
 801a18e:	4613      	mov	r3, r2
 801a190:	2200      	movs	r2, #0
 801a192:	f7ff fe90 	bl	8019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801a196:	b003      	add	sp, #12
 801a198:	f85d fb04 	ldr.w	pc, [sp], #4

0801a19c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801a19c:	b40c      	push	{r2, r3}
 801a19e:	b507      	push	{r0, r1, r2, lr}
 801a1a0:	ab04      	add	r3, sp, #16
 801a1a2:	f853 2b04 	ldr.w	r2, [r3], #4
 801a1a6:	9301      	str	r3, [sp, #4]
 801a1a8:	f7ff ffef 	bl	801a18a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801a1ac:	b003      	add	sp, #12
 801a1ae:	f85d eb04 	ldr.w	lr, [sp], #4
 801a1b2:	b002      	add	sp, #8
 801a1b4:	4770      	bx	lr
	...

0801a1b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801a1b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1bc:	b0c5      	sub	sp, #276	; 0x114
 801a1be:	2400      	movs	r4, #0
 801a1c0:	af11      	add	r7, sp, #68	; 0x44
 801a1c2:	4606      	mov	r6, r0
 801a1c4:	468a      	mov	sl, r1
 801a1c6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a1ca:	4621      	mov	r1, r4
 801a1cc:	22c8      	movs	r2, #200	; 0xc8
 801a1ce:	4638      	mov	r0, r7
 801a1d0:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801a1d4:	940d      	str	r4, [sp, #52]	; 0x34
 801a1d6:	f011 ff00 	bl	802bfda <memset>
 801a1da:	b16e      	cbz	r6, 801a1f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801a1dc:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801a480 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801a1e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a1e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1e4:	b162      	cbz	r2, 801a200 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801a1e6:	8812      	ldrh	r2, [r2, #0]
 801a1e8:	b11a      	cbz	r2, 801a1f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a1ea:	f10a 31ff 	add.w	r1, sl, #4294967295
 801a1ee:	4299      	cmp	r1, r3
 801a1f0:	dc2e      	bgt.n	801a250 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801a1f2:	2200      	movs	r2, #0
 801a1f4:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a1f8:	4630      	mov	r0, r6
 801a1fa:	b045      	add	sp, #276	; 0x114
 801a1fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a200:	9a08      	ldr	r2, [sp, #32]
 801a202:	2a00      	cmp	r2, #0
 801a204:	d0f5      	beq.n	801a1f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a206:	7812      	ldrb	r2, [r2, #0]
 801a208:	e7ee      	b.n	801a1e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801a20a:	2d00      	cmp	r5, #0
 801a20c:	d0e8      	beq.n	801a1e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a20e:	782a      	ldrb	r2, [r5, #0]
 801a210:	b142      	cbz	r2, 801a224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801a212:	2a25      	cmp	r2, #37	; 0x25
 801a214:	d001      	beq.n	801a21a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801a216:	4299      	cmp	r1, r3
 801a218:	dc08      	bgt.n	801a22c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801a21a:	f1b8 0f00 	cmp.w	r8, #0
 801a21e:	d121      	bne.n	801a264 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801a220:	2d00      	cmp	r5, #0
 801a222:	d0dd      	beq.n	801a1e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a224:	782a      	ldrb	r2, [r5, #0]
 801a226:	f04f 0800 	mov.w	r8, #0
 801a22a:	e01d      	b.n	801a268 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801a22c:	f1b8 0f00 	cmp.w	r8, #0
 801a230:	d07f      	beq.n	801a332 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801a232:	f8b8 2000 	ldrh.w	r2, [r8]
 801a236:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a23a:	f1b8 0f00 	cmp.w	r8, #0
 801a23e:	d002      	beq.n	801a246 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801a240:	f108 0202 	add.w	r2, r8, #2
 801a244:	9209      	str	r2, [sp, #36]	; 0x24
 801a246:	b10d      	cbz	r5, 801a24c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801a248:	3501      	adds	r5, #1
 801a24a:	9508      	str	r5, [sp, #32]
 801a24c:	3301      	adds	r3, #1
 801a24e:	930d      	str	r3, [sp, #52]	; 0x34
 801a250:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801a254:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a256:	f1b8 0f00 	cmp.w	r8, #0
 801a25a:	d0d6      	beq.n	801a20a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801a25c:	f8b8 2000 	ldrh.w	r2, [r8]
 801a260:	2a00      	cmp	r2, #0
 801a262:	d1d6      	bne.n	801a212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801a264:	f8b8 2000 	ldrh.w	r2, [r8]
 801a268:	2a00      	cmp	r2, #0
 801a26a:	d0b9      	beq.n	801a1e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a26c:	4299      	cmp	r1, r3
 801a26e:	ddb7      	ble.n	801a1e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a270:	2300      	movs	r3, #0
 801a272:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a276:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801a27a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801a27e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801a282:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801a286:	930e      	str	r3, [sp, #56]	; 0x38
 801a288:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a28c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a28e:	f1b8 0f00 	cmp.w	r8, #0
 801a292:	d002      	beq.n	801a29a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801a294:	f108 0302 	add.w	r3, r8, #2
 801a298:	9309      	str	r3, [sp, #36]	; 0x24
 801a29a:	b10d      	cbz	r5, 801a2a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801a29c:	1c6b      	adds	r3, r5, #1
 801a29e:	9308      	str	r3, [sp, #32]
 801a2a0:	ab0f      	add	r3, sp, #60	; 0x3c
 801a2a2:	9305      	str	r3, [sp, #20]
 801a2a4:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801a2a8:	9304      	str	r3, [sp, #16]
 801a2aa:	ab0e      	add	r3, sp, #56	; 0x38
 801a2ac:	9303      	str	r3, [sp, #12]
 801a2ae:	ab0c      	add	r3, sp, #48	; 0x30
 801a2b0:	9302      	str	r3, [sp, #8]
 801a2b2:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801a2b6:	9301      	str	r3, [sp, #4]
 801a2b8:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801a2bc:	9300      	str	r3, [sp, #0]
 801a2be:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801a2c2:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801a2c6:	a908      	add	r1, sp, #32
 801a2c8:	a809      	add	r0, sp, #36	; 0x24
 801a2ca:	f7ff fd24 	bl	8019d16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a2ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2d0:	2b00      	cmp	r3, #0
 801a2d2:	da0b      	bge.n	801a2ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801a2d4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a2d8:	edd3 7a00 	vldr	s15, [r3]
 801a2dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a2e0:	3401      	adds	r4, #1
 801a2e2:	ee17 3a90 	vmov	r3, s15
 801a2e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2ea:	930e      	str	r3, [sp, #56]	; 0x38
 801a2ec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a2ee:	2b00      	cmp	r3, #0
 801a2f0:	da0b      	bge.n	801a30a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801a2f2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a2f6:	edd3 7a00 	vldr	s15, [r3]
 801a2fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a2fe:	3401      	adds	r4, #1
 801a300:	ee17 3a90 	vmov	r3, s15
 801a304:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a308:	930f      	str	r3, [sp, #60]	; 0x3c
 801a30a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a30c:	b1b3      	cbz	r3, 801a33c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801a30e:	881a      	ldrh	r2, [r3, #0]
 801a310:	2a25      	cmp	r2, #37	; 0x25
 801a312:	d018      	beq.n	801a346 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801a314:	2a66      	cmp	r2, #102	; 0x66
 801a316:	d01c      	beq.n	801a352 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801a318:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801a31c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a31e:	f1b8 0f00 	cmp.w	r8, #0
 801a322:	f000 8121 	beq.w	801a568 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801a326:	f8b8 5000 	ldrh.w	r5, [r8]
 801a32a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801a32e:	3301      	adds	r3, #1
 801a330:	e00d      	b.n	801a34e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801a332:	b10d      	cbz	r5, 801a338 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801a334:	782a      	ldrb	r2, [r5, #0]
 801a336:	e77e      	b.n	801a236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a338:	462a      	mov	r2, r5
 801a33a:	e77c      	b.n	801a236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a33c:	9b08      	ldr	r3, [sp, #32]
 801a33e:	2b00      	cmp	r3, #0
 801a340:	d0ea      	beq.n	801a318 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801a342:	781a      	ldrb	r2, [r3, #0]
 801a344:	e7e4      	b.n	801a310 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801a346:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a348:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a34c:	3302      	adds	r3, #2
 801a34e:	930d      	str	r3, [sp, #52]	; 0x34
 801a350:	e041      	b.n	801a3d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801a352:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a356:	edd3 7a00 	vldr	s15, [r3]
 801a35a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a35e:	9710      	str	r7, [sp, #64]	; 0x40
 801a360:	3401      	adds	r4, #1
 801a362:	b923      	cbnz	r3, 801a36e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801a364:	2301      	movs	r3, #1
 801a366:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a36a:	2306      	movs	r3, #6
 801a36c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a36e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a376:	bf48      	it	mi
 801a378:	eef1 7a67 	vnegmi.f32	s15, s15
 801a37c:	eeb0 7ae7 	vabs.f32	s14, s15
 801a380:	bf48      	it	mi
 801a382:	232d      	movmi	r3, #45	; 0x2d
 801a384:	eeb4 7a45 	vcmp.f32	s14, s10
 801a388:	bf48      	it	mi
 801a38a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801a38e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a392:	dd2b      	ble.n	801a3ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801a394:	4b3b      	ldr	r3, [pc, #236]	; (801a484 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801a396:	9311      	str	r3, [sp, #68]	; 0x44
 801a398:	2366      	movs	r3, #102	; 0x66
 801a39a:	9312      	str	r3, [sp, #72]	; 0x48
 801a39c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a39e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801a3a2:	2b00      	cmp	r3, #0
 801a3a4:	f000 80da 	beq.w	801a55c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801a3a8:	881a      	ldrh	r2, [r3, #0]
 801a3aa:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a3ae:	a80d      	add	r0, sp, #52	; 0x34
 801a3b0:	9005      	str	r0, [sp, #20]
 801a3b2:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801a3b6:	9004      	str	r0, [sp, #16]
 801a3b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a3ba:	9003      	str	r0, [sp, #12]
 801a3bc:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801a3c0:	9002      	str	r0, [sp, #8]
 801a3c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a3c4:	9001      	str	r0, [sp, #4]
 801a3c6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801a3ca:	9000      	str	r0, [sp, #0]
 801a3cc:	e9cd a606 	strd	sl, r6, [sp, #24]
 801a3d0:	a810      	add	r0, sp, #64	; 0x40
 801a3d2:	f7ff fbdd 	bl	8019b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a3d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a3d8:	b10b      	cbz	r3, 801a3de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801a3da:	3302      	adds	r3, #2
 801a3dc:	9309      	str	r3, [sp, #36]	; 0x24
 801a3de:	9b08      	ldr	r3, [sp, #32]
 801a3e0:	2b00      	cmp	r3, #0
 801a3e2:	f43f aefd 	beq.w	801a1e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a3e6:	3301      	adds	r3, #1
 801a3e8:	9308      	str	r3, [sp, #32]
 801a3ea:	e6f9      	b.n	801a1e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a3ec:	eef4 7a67 	vcmp.f32	s15, s15
 801a3f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a3f4:	d63a      	bvs.n	801a46c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801a3f6:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801a3fa:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801a3fe:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801a402:	eeb0 6a67 	vmov.f32	s12, s15
 801a406:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a40a:	eef0 5a47 	vmov.f32	s11, s14
 801a40e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a412:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a416:	da2d      	bge.n	801a474 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801a418:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a41a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801a41e:	2100      	movs	r1, #0
 801a420:	eef0 4a46 	vmov.f32	s9, s12
 801a424:	ebaa 0202 	sub.w	r2, sl, r2
 801a428:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a42c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a430:	b28d      	uxth	r5, r1
 801a432:	db2c      	blt.n	801a48e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a434:	1a53      	subs	r3, r2, r1
 801a436:	2b00      	cmp	r3, #0
 801a438:	dd29      	ble.n	801a48e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a43a:	3101      	adds	r1, #1
 801a43c:	2964      	cmp	r1, #100	; 0x64
 801a43e:	d025      	beq.n	801a48c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801a440:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a444:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801a448:	ee17 3a10 	vmov	r3, s14
 801a44c:	2b09      	cmp	r3, #9
 801a44e:	bfa8      	it	ge
 801a450:	2309      	movge	r3, #9
 801a452:	ee07 3a10 	vmov	s14, r3
 801a456:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a45a:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801a45e:	eee7 7a66 	vfms.f32	s15, s14, s13
 801a462:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801a466:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801a46a:	e7dd      	b.n	801a428 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801a46c:	4b06      	ldr	r3, [pc, #24]	; (801a488 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801a46e:	9311      	str	r3, [sp, #68]	; 0x44
 801a470:	236e      	movs	r3, #110	; 0x6e
 801a472:	e792      	b.n	801a39a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801a474:	ee66 6a87 	vmul.f32	s13, s13, s14
 801a478:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801a47c:	e7c7      	b.n	801a40e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801a47e:	bf00      	nop
 801a480:	7f7fffff 	.word	0x7f7fffff
 801a484:	006e0069 	.word	0x006e0069
 801a488:	0061006e 	.word	0x0061006e
 801a48c:	2563      	movs	r5, #99	; 0x63
 801a48e:	2a63      	cmp	r2, #99	; 0x63
 801a490:	bfd4      	ite	le
 801a492:	ebc5 0202 	rsble	r2, r5, r2
 801a496:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801a49a:	2a00      	cmp	r2, #0
 801a49c:	dd43      	ble.n	801a526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a49e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a4a0:	2b00      	cmp	r3, #0
 801a4a2:	dd40      	ble.n	801a526 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a4a4:	f04f 0901 	mov.w	r9, #1
 801a4a8:	210a      	movs	r1, #10
 801a4aa:	f113 33ff 	adds.w	r3, r3, #4294967295
 801a4ae:	d30c      	bcc.n	801a4ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801a4b0:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801a4b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801a4b8:	ee17 0a10 	vmov	r0, s14
 801a4bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a4c0:	fb01 0909 	mla	r9, r1, r9, r0
 801a4c4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a4c8:	e7ef      	b.n	801a4aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801a4ca:	3501      	adds	r5, #1
 801a4cc:	930f      	str	r3, [sp, #60]	; 0x3c
 801a4ce:	b292      	uxth	r2, r2
 801a4d0:	230a      	movs	r3, #10
 801a4d2:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801a4d6:	4648      	mov	r0, r9
 801a4d8:	f7ff fb4e 	bl	8019b78 <_ZN8touchgfx7Unicode4itoaElPtti>
 801a4dc:	f1b9 0f01 	cmp.w	r9, #1
 801a4e0:	dc1f      	bgt.n	801a522 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801a4e2:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801a4e6:	2b00      	cmp	r3, #0
 801a4e8:	bf0c      	ite	eq
 801a4ea:	2300      	moveq	r3, #0
 801a4ec:	232e      	movne	r3, #46	; 0x2e
 801a4ee:	aa44      	add	r2, sp, #272	; 0x110
 801a4f0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a4f4:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a4f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a4fc:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801a500:	f6ff af4c 	blt.w	801a39c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a504:	2300      	movs	r3, #0
 801a506:	f838 2b02 	ldrh.w	r2, [r8], #2
 801a50a:	1c59      	adds	r1, r3, #1
 801a50c:	b98a      	cbnz	r2, 801a532 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801a50e:	b29b      	uxth	r3, r3
 801a510:	2130      	movs	r1, #48	; 0x30
 801a512:	b983      	cbnz	r3, 801a536 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801a514:	2331      	movs	r3, #49	; 0x31
 801a516:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801a51a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a51c:	3b02      	subs	r3, #2
 801a51e:	9310      	str	r3, [sp, #64]	; 0x40
 801a520:	e73c      	b.n	801a39c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a522:	232e      	movs	r3, #46	; 0x2e
 801a524:	e7e3      	b.n	801a4ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801a526:	ab44      	add	r3, sp, #272	; 0x110
 801a528:	3501      	adds	r5, #1
 801a52a:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a52e:	2300      	movs	r3, #0
 801a530:	e7e0      	b.n	801a4f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801a532:	460b      	mov	r3, r1
 801a534:	e7e7      	b.n	801a506 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801a536:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801a53a:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801a53e:	2808      	cmp	r0, #8
 801a540:	d806      	bhi.n	801a550 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801a542:	a944      	add	r1, sp, #272	; 0x110
 801a544:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801a548:	3201      	adds	r2, #1
 801a54a:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801a54e:	e725      	b.n	801a39c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a550:	2a39      	cmp	r2, #57	; 0x39
 801a552:	bf08      	it	eq
 801a554:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801a558:	3b01      	subs	r3, #1
 801a55a:	e7da      	b.n	801a512 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801a55c:	9a08      	ldr	r2, [sp, #32]
 801a55e:	2a00      	cmp	r2, #0
 801a560:	f43f af23 	beq.w	801a3aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a564:	7812      	ldrb	r2, [r2, #0]
 801a566:	e720      	b.n	801a3aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a568:	2d00      	cmp	r5, #0
 801a56a:	f43f aede 	beq.w	801a32a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a56e:	782d      	ldrb	r5, [r5, #0]
 801a570:	e6db      	b.n	801a32a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a572:	bf00      	nop

0801a574 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801a574:	b507      	push	{r0, r1, r2, lr}
 801a576:	9300      	str	r3, [sp, #0]
 801a578:	4613      	mov	r3, r2
 801a57a:	2200      	movs	r2, #0
 801a57c:	f7ff fe1c 	bl	801a1b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801a580:	b003      	add	sp, #12
 801a582:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801a588 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801a588:	4b01      	ldr	r3, [pc, #4]	; (801a590 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801a58a:	6018      	str	r0, [r3, #0]
 801a58c:	4770      	bx	lr
 801a58e:	bf00      	nop
 801a590:	200138a4 	.word	0x200138a4

0801a594 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a594:	4b06      	ldr	r3, [pc, #24]	; (801a5b0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a596:	881a      	ldrh	r2, [r3, #0]
 801a598:	4282      	cmp	r2, r0
 801a59a:	d807      	bhi.n	801a5ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a59c:	4b05      	ldr	r3, [pc, #20]	; (801a5b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a59e:	881b      	ldrh	r3, [r3, #0]
 801a5a0:	4413      	add	r3, r2
 801a5a2:	4298      	cmp	r0, r3
 801a5a4:	bfac      	ite	ge
 801a5a6:	2000      	movge	r0, #0
 801a5a8:	2001      	movlt	r0, #1
 801a5aa:	4770      	bx	lr
 801a5ac:	2000      	movs	r0, #0
 801a5ae:	4770      	bx	lr
 801a5b0:	200138c4 	.word	0x200138c4
 801a5b4:	200138c8 	.word	0x200138c8

0801a5b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a5b8:	b508      	push	{r3, lr}
 801a5ba:	4601      	mov	r1, r0
 801a5bc:	f7ff ffea 	bl	801a594 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a5c0:	b118      	cbz	r0, 801a5ca <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a5c2:	4b02      	ldr	r3, [pc, #8]	; (801a5cc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a5c4:	681b      	ldr	r3, [r3, #0]
 801a5c6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a5ca:	bd08      	pop	{r3, pc}
 801a5cc:	200138a8 	.word	0x200138a8

0801a5d0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a5d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a5d2:	4c24      	ldr	r4, [pc, #144]	; (801a664 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a5d4:	6823      	ldr	r3, [r4, #0]
 801a5d6:	2b00      	cmp	r3, #0
 801a5d8:	d042      	beq.n	801a660 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a5da:	4a23      	ldr	r2, [pc, #140]	; (801a668 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a5dc:	4d23      	ldr	r5, [pc, #140]	; (801a66c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a5de:	8811      	ldrh	r1, [r2, #0]
 801a5e0:	f8b5 c000 	ldrh.w	ip, [r5]
 801a5e4:	4822      	ldr	r0, [pc, #136]	; (801a670 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a5e6:	4461      	add	r1, ip
 801a5e8:	1c4a      	adds	r2, r1, #1
 801a5ea:	f022 0201 	bic.w	r2, r2, #1
 801a5ee:	008f      	lsls	r7, r1, #2
 801a5f0:	0412      	lsls	r2, r2, #16
 801a5f2:	19de      	adds	r6, r3, r7
 801a5f4:	0c12      	lsrs	r2, r2, #16
 801a5f6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a5fa:	6006      	str	r6, [r0, #0]
 801a5fc:	4e1d      	ldr	r6, [pc, #116]	; (801a674 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a5fe:	19da      	adds	r2, r3, r7
 801a600:	6032      	str	r2, [r6, #0]
 801a602:	220e      	movs	r2, #14
 801a604:	fb02 f20c 	mul.w	r2, r2, ip
 801a608:	3203      	adds	r2, #3
 801a60a:	f022 0203 	bic.w	r2, r2, #3
 801a60e:	443a      	add	r2, r7
 801a610:	4f19      	ldr	r7, [pc, #100]	; (801a678 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a612:	4413      	add	r3, r2
 801a614:	603b      	str	r3, [r7, #0]
 801a616:	4f19      	ldr	r7, [pc, #100]	; (801a67c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a618:	2300      	movs	r3, #0
 801a61a:	803b      	strh	r3, [r7, #0]
 801a61c:	4f18      	ldr	r7, [pc, #96]	; (801a680 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a61e:	683f      	ldr	r7, [r7, #0]
 801a620:	1aba      	subs	r2, r7, r2
 801a622:	4f18      	ldr	r7, [pc, #96]	; (801a684 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a624:	603a      	str	r2, [r7, #0]
 801a626:	4a18      	ldr	r2, [pc, #96]	; (801a688 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a628:	469c      	mov	ip, r3
 801a62a:	8013      	strh	r3, [r2, #0]
 801a62c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801a630:	428b      	cmp	r3, r1
 801a632:	d10d      	bne.n	801a650 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a634:	882d      	ldrh	r5, [r5, #0]
 801a636:	6830      	ldr	r0, [r6, #0]
 801a638:	2300      	movs	r3, #0
 801a63a:	240e      	movs	r4, #14
 801a63c:	429d      	cmp	r5, r3
 801a63e:	d90f      	bls.n	801a660 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a640:	fb04 0203 	mla	r2, r4, r3, r0
 801a644:	3301      	adds	r3, #1
 801a646:	7b11      	ldrb	r1, [r2, #12]
 801a648:	f36f 1145 	bfc	r1, #5, #1
 801a64c:	7311      	strb	r1, [r2, #12]
 801a64e:	e7f5      	b.n	801a63c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a650:	6822      	ldr	r2, [r4, #0]
 801a652:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a656:	6802      	ldr	r2, [r0, #0]
 801a658:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a65c:	3301      	adds	r3, #1
 801a65e:	e7e7      	b.n	801a630 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a660:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a662:	bf00      	nop
 801a664:	200138a8 	.word	0x200138a8
 801a668:	200138c4 	.word	0x200138c4
 801a66c:	200138c8 	.word	0x200138c8
 801a670:	200138bc 	.word	0x200138bc
 801a674:	200138ac 	.word	0x200138ac
 801a678:	200138b4 	.word	0x200138b4
 801a67c:	200138c6 	.word	0x200138c6
 801a680:	200138b0 	.word	0x200138b0
 801a684:	200138c0 	.word	0x200138c0
 801a688:	200138b8 	.word	0x200138b8

0801a68c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a68c:	4b06      	ldr	r3, [pc, #24]	; (801a6a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a68e:	681b      	ldr	r3, [r3, #0]
 801a690:	b943      	cbnz	r3, 801a6a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a692:	b139      	cbz	r1, 801a6a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a694:	4b05      	ldr	r3, [pc, #20]	; (801a6ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a696:	801a      	strh	r2, [r3, #0]
 801a698:	4b05      	ldr	r3, [pc, #20]	; (801a6b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a69a:	6019      	str	r1, [r3, #0]
 801a69c:	4b05      	ldr	r3, [pc, #20]	; (801a6b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a69e:	6018      	str	r0, [r3, #0]
 801a6a0:	f7ff bf96 	b.w	801a5d0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a6a4:	4770      	bx	lr
 801a6a6:	bf00      	nop
 801a6a8:	200138b4 	.word	0x200138b4
 801a6ac:	200138c8 	.word	0x200138c8
 801a6b0:	200138b0 	.word	0x200138b0
 801a6b4:	200138a8 	.word	0x200138a8

0801a6b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a6b8:	b470      	push	{r4, r5, r6}
 801a6ba:	4c07      	ldr	r4, [pc, #28]	; (801a6d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a6bc:	6826      	ldr	r6, [r4, #0]
 801a6be:	4605      	mov	r5, r0
 801a6c0:	4610      	mov	r0, r2
 801a6c2:	9a03      	ldr	r2, [sp, #12]
 801a6c4:	b936      	cbnz	r6, 801a6d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a6c6:	6025      	str	r5, [r4, #0]
 801a6c8:	4c04      	ldr	r4, [pc, #16]	; (801a6dc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a6ca:	8021      	strh	r1, [r4, #0]
 801a6cc:	bc70      	pop	{r4, r5, r6}
 801a6ce:	4619      	mov	r1, r3
 801a6d0:	f7ff bfdc 	b.w	801a68c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a6d4:	bc70      	pop	{r4, r5, r6}
 801a6d6:	4770      	bx	lr
 801a6d8:	200138cc 	.word	0x200138cc
 801a6dc:	200138c4 	.word	0x200138c4

0801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a6e0:	4a12      	ldr	r2, [pc, #72]	; (801a72c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a6e2:	8803      	ldrh	r3, [r0, #0]
 801a6e4:	8812      	ldrh	r2, [r2, #0]
 801a6e6:	4293      	cmp	r3, r2
 801a6e8:	d207      	bcs.n	801a6fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a6ea:	4a11      	ldr	r2, [pc, #68]	; (801a730 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a6ec:	6812      	ldr	r2, [r2, #0]
 801a6ee:	2114      	movs	r1, #20
 801a6f0:	fb01 2303 	mla	r3, r1, r3, r2
 801a6f4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a6f8:	4770      	bx	lr
 801a6fa:	490e      	ldr	r1, [pc, #56]	; (801a734 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a6fc:	8809      	ldrh	r1, [r1, #0]
 801a6fe:	4411      	add	r1, r2
 801a700:	428b      	cmp	r3, r1
 801a702:	da04      	bge.n	801a70e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a704:	1a9b      	subs	r3, r3, r2
 801a706:	4a0c      	ldr	r2, [pc, #48]	; (801a738 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a708:	210e      	movs	r1, #14
 801a70a:	6812      	ldr	r2, [r2, #0]
 801a70c:	e7f0      	b.n	801a6f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a70e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a712:	4293      	cmp	r3, r2
 801a714:	d108      	bne.n	801a728 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a716:	4b09      	ldr	r3, [pc, #36]	; (801a73c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a718:	781b      	ldrb	r3, [r3, #0]
 801a71a:	b91b      	cbnz	r3, 801a724 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a71c:	4b08      	ldr	r3, [pc, #32]	; (801a740 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a71e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a722:	4770      	bx	lr
 801a724:	4b07      	ldr	r3, [pc, #28]	; (801a744 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a726:	e7fa      	b.n	801a71e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a728:	2000      	movs	r0, #0
 801a72a:	4770      	bx	lr
 801a72c:	200138c4 	.word	0x200138c4
 801a730:	200138cc 	.word	0x200138cc
 801a734:	200138c8 	.word	0x200138c8
 801a738:	200138ac 	.word	0x200138ac
 801a73c:	20013834 	.word	0x20013834
 801a740:	20013836 	.word	0x20013836
 801a744:	20013838 	.word	0x20013838

0801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a748:	4a12      	ldr	r2, [pc, #72]	; (801a794 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a74a:	8803      	ldrh	r3, [r0, #0]
 801a74c:	8812      	ldrh	r2, [r2, #0]
 801a74e:	4293      	cmp	r3, r2
 801a750:	d207      	bcs.n	801a762 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a752:	4a11      	ldr	r2, [pc, #68]	; (801a798 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a754:	6812      	ldr	r2, [r2, #0]
 801a756:	2114      	movs	r1, #20
 801a758:	fb01 2303 	mla	r3, r1, r3, r2
 801a75c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a760:	4770      	bx	lr
 801a762:	490e      	ldr	r1, [pc, #56]	; (801a79c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a764:	8809      	ldrh	r1, [r1, #0]
 801a766:	4411      	add	r1, r2
 801a768:	428b      	cmp	r3, r1
 801a76a:	da04      	bge.n	801a776 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a76c:	1a9b      	subs	r3, r3, r2
 801a76e:	4a0c      	ldr	r2, [pc, #48]	; (801a7a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a770:	210e      	movs	r1, #14
 801a772:	6812      	ldr	r2, [r2, #0]
 801a774:	e7f0      	b.n	801a758 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a776:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a77a:	4293      	cmp	r3, r2
 801a77c:	d108      	bne.n	801a790 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a77e:	4b09      	ldr	r3, [pc, #36]	; (801a7a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a780:	781b      	ldrb	r3, [r3, #0]
 801a782:	b91b      	cbnz	r3, 801a78c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a784:	4b08      	ldr	r3, [pc, #32]	; (801a7a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a786:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a78a:	4770      	bx	lr
 801a78c:	4b07      	ldr	r3, [pc, #28]	; (801a7ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a78e:	e7fa      	b.n	801a786 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a790:	2000      	movs	r0, #0
 801a792:	4770      	bx	lr
 801a794:	200138c4 	.word	0x200138c4
 801a798:	200138cc 	.word	0x200138cc
 801a79c:	200138c8 	.word	0x200138c8
 801a7a0:	200138ac 	.word	0x200138ac
 801a7a4:	20013834 	.word	0x20013834
 801a7a8:	20013838 	.word	0x20013838
 801a7ac:	20013836 	.word	0x20013836

0801a7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a7b0:	b510      	push	{r4, lr}
 801a7b2:	4a1f      	ldr	r2, [pc, #124]	; (801a830 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a7b4:	880b      	ldrh	r3, [r1, #0]
 801a7b6:	8812      	ldrh	r2, [r2, #0]
 801a7b8:	4293      	cmp	r3, r2
 801a7ba:	d213      	bcs.n	801a7e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a7bc:	4a1d      	ldr	r2, [pc, #116]	; (801a834 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a7be:	6812      	ldr	r2, [r2, #0]
 801a7c0:	2114      	movs	r1, #20
 801a7c2:	fb01 2303 	mla	r3, r1, r3, r2
 801a7c6:	8a1a      	ldrh	r2, [r3, #16]
 801a7c8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a7cc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a7d0:	8a5b      	ldrh	r3, [r3, #18]
 801a7d2:	8004      	strh	r4, [r0, #0]
 801a7d4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a7d8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a7dc:	8041      	strh	r1, [r0, #2]
 801a7de:	8082      	strh	r2, [r0, #4]
 801a7e0:	80c3      	strh	r3, [r0, #6]
 801a7e2:	e00e      	b.n	801a802 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a7e4:	4914      	ldr	r1, [pc, #80]	; (801a838 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a7e6:	8809      	ldrh	r1, [r1, #0]
 801a7e8:	4411      	add	r1, r2
 801a7ea:	428b      	cmp	r3, r1
 801a7ec:	da0a      	bge.n	801a804 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a7ee:	1a9b      	subs	r3, r3, r2
 801a7f0:	4a12      	ldr	r2, [pc, #72]	; (801a83c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a7f2:	6812      	ldr	r2, [r2, #0]
 801a7f4:	210e      	movs	r1, #14
 801a7f6:	fb01 2303 	mla	r3, r1, r3, r2
 801a7fa:	681a      	ldr	r2, [r3, #0]
 801a7fc:	6002      	str	r2, [r0, #0]
 801a7fe:	685a      	ldr	r2, [r3, #4]
 801a800:	6042      	str	r2, [r0, #4]
 801a802:	bd10      	pop	{r4, pc}
 801a804:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a808:	4293      	cmp	r3, r2
 801a80a:	d10b      	bne.n	801a824 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a80c:	4b0c      	ldr	r3, [pc, #48]	; (801a840 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a80e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a812:	4b0c      	ldr	r3, [pc, #48]	; (801a844 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a814:	8081      	strh	r1, [r0, #4]
 801a816:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a81a:	80c2      	strh	r2, [r0, #6]
 801a81c:	2300      	movs	r3, #0
 801a81e:	8003      	strh	r3, [r0, #0]
 801a820:	8043      	strh	r3, [r0, #2]
 801a822:	e7ee      	b.n	801a802 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a824:	2300      	movs	r3, #0
 801a826:	8003      	strh	r3, [r0, #0]
 801a828:	8043      	strh	r3, [r0, #2]
 801a82a:	8083      	strh	r3, [r0, #4]
 801a82c:	e7d8      	b.n	801a7e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a82e:	bf00      	nop
 801a830:	200138c4 	.word	0x200138c4
 801a834:	200138cc 	.word	0x200138cc
 801a838:	200138c8 	.word	0x200138c8
 801a83c:	200138ac 	.word	0x200138ac
 801a840:	20013830 	.word	0x20013830
 801a844:	20013832 	.word	0x20013832

0801a848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a848:	4a17      	ldr	r2, [pc, #92]	; (801a8a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a84a:	8803      	ldrh	r3, [r0, #0]
 801a84c:	8812      	ldrh	r2, [r2, #0]
 801a84e:	4293      	cmp	r3, r2
 801a850:	d213      	bcs.n	801a87a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a852:	4a16      	ldr	r2, [pc, #88]	; (801a8ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a854:	6812      	ldr	r2, [r2, #0]
 801a856:	2114      	movs	r1, #20
 801a858:	fb01 2303 	mla	r3, r1, r3, r2
 801a85c:	8a1a      	ldrh	r2, [r3, #16]
 801a85e:	8919      	ldrh	r1, [r3, #8]
 801a860:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a864:	428a      	cmp	r2, r1
 801a866:	db1d      	blt.n	801a8a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a868:	8a58      	ldrh	r0, [r3, #18]
 801a86a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a86e:	895b      	ldrh	r3, [r3, #10]
 801a870:	4298      	cmp	r0, r3
 801a872:	bfac      	ite	ge
 801a874:	2000      	movge	r0, #0
 801a876:	2001      	movlt	r0, #1
 801a878:	4770      	bx	lr
 801a87a:	490d      	ldr	r1, [pc, #52]	; (801a8b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a87c:	8809      	ldrh	r1, [r1, #0]
 801a87e:	4411      	add	r1, r2
 801a880:	428b      	cmp	r3, r1
 801a882:	da0d      	bge.n	801a8a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a884:	1a9b      	subs	r3, r3, r2
 801a886:	4a0b      	ldr	r2, [pc, #44]	; (801a8b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a888:	6812      	ldr	r2, [r2, #0]
 801a88a:	210e      	movs	r1, #14
 801a88c:	fb01 2303 	mla	r3, r1, r3, r2
 801a890:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a894:	891a      	ldrh	r2, [r3, #8]
 801a896:	4291      	cmp	r1, r2
 801a898:	db04      	blt.n	801a8a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a89a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a89e:	e7e6      	b.n	801a86e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a8a0:	2000      	movs	r0, #0
 801a8a2:	4770      	bx	lr
 801a8a4:	2001      	movs	r0, #1
 801a8a6:	4770      	bx	lr
 801a8a8:	200138c4 	.word	0x200138c4
 801a8ac:	200138cc 	.word	0x200138cc
 801a8b0:	200138c8 	.word	0x200138c8
 801a8b4:	200138ac 	.word	0x200138ac

0801a8b8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a8b8:	4a12      	ldr	r2, [pc, #72]	; (801a904 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a8ba:	8803      	ldrh	r3, [r0, #0]
 801a8bc:	8811      	ldrh	r1, [r2, #0]
 801a8be:	428b      	cmp	r3, r1
 801a8c0:	d20b      	bcs.n	801a8da <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a8c2:	4a11      	ldr	r2, [pc, #68]	; (801a908 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a8c4:	6812      	ldr	r2, [r2, #0]
 801a8c6:	b112      	cbz	r2, 801a8ce <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a8c8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a8cc:	b9c0      	cbnz	r0, 801a900 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a8ce:	4a0f      	ldr	r2, [pc, #60]	; (801a90c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a8d0:	6811      	ldr	r1, [r2, #0]
 801a8d2:	2214      	movs	r2, #20
 801a8d4:	4353      	muls	r3, r2
 801a8d6:	58c8      	ldr	r0, [r1, r3]
 801a8d8:	4770      	bx	lr
 801a8da:	4a0d      	ldr	r2, [pc, #52]	; (801a910 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a8dc:	8812      	ldrh	r2, [r2, #0]
 801a8de:	440a      	add	r2, r1
 801a8e0:	4293      	cmp	r3, r2
 801a8e2:	da04      	bge.n	801a8ee <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a8e4:	4a08      	ldr	r2, [pc, #32]	; (801a908 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a8e6:	6812      	ldr	r2, [r2, #0]
 801a8e8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a8ec:	4770      	bx	lr
 801a8ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a8f2:	4293      	cmp	r3, r2
 801a8f4:	d103      	bne.n	801a8fe <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a8f6:	4b07      	ldr	r3, [pc, #28]	; (801a914 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a8f8:	681b      	ldr	r3, [r3, #0]
 801a8fa:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a8fc:	4770      	bx	lr
 801a8fe:	2000      	movs	r0, #0
 801a900:	4770      	bx	lr
 801a902:	bf00      	nop
 801a904:	200138c4 	.word	0x200138c4
 801a908:	200138a8 	.word	0x200138a8
 801a90c:	200138cc 	.word	0x200138cc
 801a910:	200138c8 	.word	0x200138c8
 801a914:	2001383c 	.word	0x2001383c

0801a918 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a918:	4b24      	ldr	r3, [pc, #144]	; (801a9ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a91a:	8802      	ldrh	r2, [r0, #0]
 801a91c:	8818      	ldrh	r0, [r3, #0]
 801a91e:	4282      	cmp	r2, r0
 801a920:	d221      	bcs.n	801a966 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a922:	4b23      	ldr	r3, [pc, #140]	; (801a9b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a924:	6819      	ldr	r1, [r3, #0]
 801a926:	2314      	movs	r3, #20
 801a928:	fb03 1302 	mla	r3, r3, r2, r1
 801a92c:	6858      	ldr	r0, [r3, #4]
 801a92e:	2800      	cmp	r0, #0
 801a930:	d03a      	beq.n	801a9a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a932:	4920      	ldr	r1, [pc, #128]	; (801a9b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a934:	6809      	ldr	r1, [r1, #0]
 801a936:	2900      	cmp	r1, #0
 801a938:	d036      	beq.n	801a9a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a93a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a93e:	2900      	cmp	r1, #0
 801a940:	d032      	beq.n	801a9a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a942:	891a      	ldrh	r2, [r3, #8]
 801a944:	8958      	ldrh	r0, [r3, #10]
 801a946:	4350      	muls	r0, r2
 801a948:	7c5a      	ldrb	r2, [r3, #17]
 801a94a:	7cdb      	ldrb	r3, [r3, #19]
 801a94c:	0952      	lsrs	r2, r2, #5
 801a94e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a952:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a956:	2b0b      	cmp	r3, #11
 801a958:	bf18      	it	ne
 801a95a:	0040      	lslne	r0, r0, #1
 801a95c:	3003      	adds	r0, #3
 801a95e:	f020 0003 	bic.w	r0, r0, #3
 801a962:	4408      	add	r0, r1
 801a964:	4770      	bx	lr
 801a966:	4b14      	ldr	r3, [pc, #80]	; (801a9b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a968:	881b      	ldrh	r3, [r3, #0]
 801a96a:	4403      	add	r3, r0
 801a96c:	429a      	cmp	r2, r3
 801a96e:	da1a      	bge.n	801a9a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a970:	4b12      	ldr	r3, [pc, #72]	; (801a9bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a972:	681b      	ldr	r3, [r3, #0]
 801a974:	1a10      	subs	r0, r2, r0
 801a976:	210e      	movs	r1, #14
 801a978:	fb01 3000 	mla	r0, r1, r0, r3
 801a97c:	7b03      	ldrb	r3, [r0, #12]
 801a97e:	f003 031f 	and.w	r3, r3, #31
 801a982:	2b0b      	cmp	r3, #11
 801a984:	d10b      	bne.n	801a99e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a986:	8903      	ldrh	r3, [r0, #8]
 801a988:	8940      	ldrh	r0, [r0, #10]
 801a98a:	4358      	muls	r0, r3
 801a98c:	4b09      	ldr	r3, [pc, #36]	; (801a9b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a98e:	6819      	ldr	r1, [r3, #0]
 801a990:	3003      	adds	r0, #3
 801a992:	f020 0303 	bic.w	r3, r0, #3
 801a996:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a99a:	4418      	add	r0, r3
 801a99c:	4770      	bx	lr
 801a99e:	2b0d      	cmp	r3, #13
 801a9a0:	d101      	bne.n	801a9a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a9a2:	300d      	adds	r0, #13
 801a9a4:	4770      	bx	lr
 801a9a6:	2000      	movs	r0, #0
 801a9a8:	4770      	bx	lr
 801a9aa:	bf00      	nop
 801a9ac:	200138c4 	.word	0x200138c4
 801a9b0:	200138cc 	.word	0x200138cc
 801a9b4:	200138a8 	.word	0x200138a8
 801a9b8:	200138c8 	.word	0x200138c8
 801a9bc:	200138ac 	.word	0x200138ac

0801a9c0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a9c0:	b510      	push	{r4, lr}
 801a9c2:	4a17      	ldr	r2, [pc, #92]	; (801aa20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a9c4:	8803      	ldrh	r3, [r0, #0]
 801a9c6:	8812      	ldrh	r2, [r2, #0]
 801a9c8:	4293      	cmp	r3, r2
 801a9ca:	d20c      	bcs.n	801a9e6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a9cc:	4a15      	ldr	r2, [pc, #84]	; (801aa24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a9ce:	6812      	ldr	r2, [r2, #0]
 801a9d0:	2114      	movs	r1, #20
 801a9d2:	fb01 2303 	mla	r3, r1, r3, r2
 801a9d6:	7c58      	ldrb	r0, [r3, #17]
 801a9d8:	0942      	lsrs	r2, r0, #5
 801a9da:	7cd8      	ldrb	r0, [r3, #19]
 801a9dc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a9e0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a9e4:	bd10      	pop	{r4, pc}
 801a9e6:	4910      	ldr	r1, [pc, #64]	; (801aa28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a9e8:	8809      	ldrh	r1, [r1, #0]
 801a9ea:	4411      	add	r1, r2
 801a9ec:	428b      	cmp	r3, r1
 801a9ee:	da09      	bge.n	801aa04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a9f0:	1a9b      	subs	r3, r3, r2
 801a9f2:	4a0e      	ldr	r2, [pc, #56]	; (801aa2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a9f4:	6812      	ldr	r2, [r2, #0]
 801a9f6:	210e      	movs	r1, #14
 801a9f8:	fb01 2303 	mla	r3, r1, r3, r2
 801a9fc:	7b18      	ldrb	r0, [r3, #12]
 801a9fe:	f000 001f 	and.w	r0, r0, #31
 801aa02:	e7ef      	b.n	801a9e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801aa04:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801aa08:	4293      	cmp	r3, r2
 801aa0a:	d106      	bne.n	801aa1a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801aa0c:	f7e9 fff0 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 801aa10:	6803      	ldr	r3, [r0, #0]
 801aa12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aa16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aa18:	4718      	bx	r3
 801aa1a:	2000      	movs	r0, #0
 801aa1c:	e7e2      	b.n	801a9e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801aa1e:	bf00      	nop
 801aa20:	200138c4 	.word	0x200138c4
 801aa24:	200138cc 	.word	0x200138cc
 801aa28:	200138c8 	.word	0x200138c8
 801aa2c:	200138ac 	.word	0x200138ac

0801aa30 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801aa30:	2010      	movs	r0, #16
 801aa32:	4770      	bx	lr

0801aa34 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801aa34:	2000      	movs	r0, #0
 801aa36:	4770      	bx	lr

0801aa38 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801aa38:	4b02      	ldr	r3, [pc, #8]	; (801aa44 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801aa3a:	8818      	ldrh	r0, [r3, #0]
 801aa3c:	0040      	lsls	r0, r0, #1
 801aa3e:	b280      	uxth	r0, r0
 801aa40:	4770      	bx	lr
 801aa42:	bf00      	nop
 801aa44:	20013836 	.word	0x20013836

0801aa48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801aa48:	2bff      	cmp	r3, #255	; 0xff
 801aa4a:	d050      	beq.n	801aaee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801aa4c:	2a0b      	cmp	r2, #11
 801aa4e:	d04a      	beq.n	801aae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801aa50:	d80e      	bhi.n	801aa70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801aa52:	2a03      	cmp	r2, #3
 801aa54:	d03f      	beq.n	801aad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801aa56:	d804      	bhi.n	801aa62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801aa58:	2a01      	cmp	r2, #1
 801aa5a:	d03e      	beq.n	801aada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801aa5c:	d93f      	bls.n	801aade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801aa5e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801aa60:	4770      	bx	lr
 801aa62:	2a09      	cmp	r2, #9
 801aa64:	d03f      	beq.n	801aae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801aa66:	d83c      	bhi.n	801aae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801aa68:	2a08      	cmp	r2, #8
 801aa6a:	d03a      	beq.n	801aae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801aa6c:	2000      	movs	r0, #0
 801aa6e:	4770      	bx	lr
 801aa70:	2a2f      	cmp	r2, #47	; 0x2f
 801aa72:	d024      	beq.n	801aabe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801aa74:	d80d      	bhi.n	801aa92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801aa76:	2a2d      	cmp	r2, #45	; 0x2d
 801aa78:	d014      	beq.n	801aaa4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801aa7a:	d826      	bhi.n	801aaca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801aa7c:	2a2c      	cmp	r2, #44	; 0x2c
 801aa7e:	d1f5      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa80:	684b      	ldr	r3, [r1, #4]
 801aa82:	781b      	ldrb	r3, [r3, #0]
 801aa84:	2b01      	cmp	r3, #1
 801aa86:	d018      	beq.n	801aaba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801aa88:	d323      	bcc.n	801aad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801aa8a:	2b02      	cmp	r3, #2
 801aa8c:	d1ee      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aa8e:	6880      	ldr	r0, [r0, #8]
 801aa90:	4770      	bx	lr
 801aa92:	2a31      	cmp	r2, #49	; 0x31
 801aa94:	d004      	beq.n	801aaa0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801aa96:	d328      	bcc.n	801aaea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801aa98:	2a32      	cmp	r2, #50	; 0x32
 801aa9a:	d026      	beq.n	801aaea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801aa9c:	2a33      	cmp	r2, #51	; 0x33
 801aa9e:	d1e5      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aaa0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801aaa2:	4770      	bx	lr
 801aaa4:	684b      	ldr	r3, [r1, #4]
 801aaa6:	781b      	ldrb	r3, [r3, #0]
 801aaa8:	2b01      	cmp	r3, #1
 801aaaa:	d004      	beq.n	801aab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801aaac:	d30b      	bcc.n	801aac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801aaae:	2b02      	cmp	r3, #2
 801aab0:	d1dc      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aab2:	6900      	ldr	r0, [r0, #16]
 801aab4:	4770      	bx	lr
 801aab6:	6a00      	ldr	r0, [r0, #32]
 801aab8:	4770      	bx	lr
 801aaba:	6980      	ldr	r0, [r0, #24]
 801aabc:	4770      	bx	lr
 801aabe:	684b      	ldr	r3, [r1, #4]
 801aac0:	781b      	ldrb	r3, [r3, #0]
 801aac2:	2b00      	cmp	r3, #0
 801aac4:	d1d2      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aac6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801aac8:	4770      	bx	lr
 801aaca:	684b      	ldr	r3, [r1, #4]
 801aacc:	781b      	ldrb	r3, [r3, #0]
 801aace:	2b00      	cmp	r3, #0
 801aad0:	d1cc      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801aad2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801aad4:	4770      	bx	lr
 801aad6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801aad8:	4770      	bx	lr
 801aada:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801aadc:	4770      	bx	lr
 801aade:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801aae0:	4770      	bx	lr
 801aae2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801aae4:	4770      	bx	lr
 801aae6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801aae8:	4770      	bx	lr
 801aaea:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801aaec:	4770      	bx	lr
 801aaee:	2a0b      	cmp	r2, #11
 801aaf0:	d049      	beq.n	801ab86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801aaf2:	d80e      	bhi.n	801ab12 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801aaf4:	2a03      	cmp	r2, #3
 801aaf6:	d040      	beq.n	801ab7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801aaf8:	d804      	bhi.n	801ab04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801aafa:	2a01      	cmp	r2, #1
 801aafc:	d03f      	beq.n	801ab7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801aafe:	d940      	bls.n	801ab82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801ab00:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801ab02:	4770      	bx	lr
 801ab04:	2a09      	cmp	r2, #9
 801ab06:	d03e      	beq.n	801ab86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801ab08:	d801      	bhi.n	801ab0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801ab0a:	2a08      	cmp	r2, #8
 801ab0c:	d1ae      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab0e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801ab10:	4770      	bx	lr
 801ab12:	2a2f      	cmp	r2, #47	; 0x2f
 801ab14:	d024      	beq.n	801ab60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801ab16:	d80d      	bhi.n	801ab34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801ab18:	2a2d      	cmp	r2, #45	; 0x2d
 801ab1a:	d014      	beq.n	801ab46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801ab1c:	d826      	bhi.n	801ab6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801ab1e:	2a2c      	cmp	r2, #44	; 0x2c
 801ab20:	d1a4      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab22:	684b      	ldr	r3, [r1, #4]
 801ab24:	781b      	ldrb	r3, [r3, #0]
 801ab26:	2b01      	cmp	r3, #1
 801ab28:	d018      	beq.n	801ab5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801ab2a:	d324      	bcc.n	801ab76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801ab2c:	2b02      	cmp	r3, #2
 801ab2e:	d19d      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab30:	68c0      	ldr	r0, [r0, #12]
 801ab32:	4770      	bx	lr
 801ab34:	2a31      	cmp	r2, #49	; 0x31
 801ab36:	d004      	beq.n	801ab42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801ab38:	d327      	bcc.n	801ab8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801ab3a:	2a32      	cmp	r2, #50	; 0x32
 801ab3c:	d025      	beq.n	801ab8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801ab3e:	2a33      	cmp	r2, #51	; 0x33
 801ab40:	d194      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab42:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801ab44:	4770      	bx	lr
 801ab46:	684b      	ldr	r3, [r1, #4]
 801ab48:	781b      	ldrb	r3, [r3, #0]
 801ab4a:	2b01      	cmp	r3, #1
 801ab4c:	d004      	beq.n	801ab58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801ab4e:	d30b      	bcc.n	801ab68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801ab50:	2b02      	cmp	r3, #2
 801ab52:	d18b      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab54:	6940      	ldr	r0, [r0, #20]
 801ab56:	4770      	bx	lr
 801ab58:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801ab5a:	4770      	bx	lr
 801ab5c:	69c0      	ldr	r0, [r0, #28]
 801ab5e:	4770      	bx	lr
 801ab60:	684b      	ldr	r3, [r1, #4]
 801ab62:	781b      	ldrb	r3, [r3, #0]
 801ab64:	2b00      	cmp	r3, #0
 801ab66:	d181      	bne.n	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab68:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801ab6a:	4770      	bx	lr
 801ab6c:	684b      	ldr	r3, [r1, #4]
 801ab6e:	781b      	ldrb	r3, [r3, #0]
 801ab70:	2b00      	cmp	r3, #0
 801ab72:	f47f af7b 	bne.w	801aa6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ab76:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801ab78:	4770      	bx	lr
 801ab7a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801ab7c:	4770      	bx	lr
 801ab7e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801ab80:	4770      	bx	lr
 801ab82:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801ab84:	4770      	bx	lr
 801ab86:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801ab88:	4770      	bx	lr
 801ab8a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801ab8c:	4770      	bx	lr

0801ab8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ab8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab92:	b087      	sub	sp, #28
 801ab94:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ab96:	9205      	str	r2, [sp, #20]
 801ab98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ab9c:	9202      	str	r2, [sp, #8]
 801ab9e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aba2:	9101      	str	r1, [sp, #4]
 801aba4:	6841      	ldr	r1, [r0, #4]
 801aba6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801abaa:	fb01 2404 	mla	r4, r1, r4, r2
 801abae:	6802      	ldr	r2, [r0, #0]
 801abb0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801abb4:	f8de 2000 	ldr.w	r2, [lr]
 801abb8:	9203      	str	r2, [sp, #12]
 801abba:	f8de 2004 	ldr.w	r2, [lr, #4]
 801abbe:	3204      	adds	r2, #4
 801abc0:	9204      	str	r2, [sp, #16]
 801abc2:	9a02      	ldr	r2, [sp, #8]
 801abc4:	43d6      	mvns	r6, r2
 801abc6:	b2f6      	uxtb	r6, r6
 801abc8:	9a01      	ldr	r2, [sp, #4]
 801abca:	2a00      	cmp	r2, #0
 801abcc:	dc03      	bgt.n	801abd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801abce:	9a05      	ldr	r2, [sp, #20]
 801abd0:	2a00      	cmp	r2, #0
 801abd2:	f340 8129 	ble.w	801ae28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801abd6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801abd8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801abdc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801abe0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801abe4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801abe6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801abea:	2b00      	cmp	r3, #0
 801abec:	dd0e      	ble.n	801ac0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801abee:	1408      	asrs	r0, r1, #16
 801abf0:	d405      	bmi.n	801abfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801abf2:	4560      	cmp	r0, ip
 801abf4:	da03      	bge.n	801abfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801abf6:	1410      	asrs	r0, r2, #16
 801abf8:	d401      	bmi.n	801abfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801abfa:	42b8      	cmp	r0, r7
 801abfc:	db07      	blt.n	801ac0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801abfe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ac00:	4401      	add	r1, r0
 801ac02:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ac04:	3b01      	subs	r3, #1
 801ac06:	4402      	add	r2, r0
 801ac08:	3402      	adds	r4, #2
 801ac0a:	e7ee      	b.n	801abea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ac0c:	d071      	beq.n	801acf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ac0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ac10:	1e58      	subs	r0, r3, #1
 801ac12:	fb05 1500 	mla	r5, r5, r0, r1
 801ac16:	142d      	asrs	r5, r5, #16
 801ac18:	d45f      	bmi.n	801acda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ac1a:	4565      	cmp	r5, ip
 801ac1c:	da5d      	bge.n	801acda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ac1e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac20:	fb05 2000 	mla	r0, r5, r0, r2
 801ac24:	1400      	asrs	r0, r0, #16
 801ac26:	d458      	bmi.n	801acda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ac28:	42b8      	cmp	r0, r7
 801ac2a:	da56      	bge.n	801acda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ac2c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ac30:	4699      	mov	r9, r3
 801ac32:	46a2      	mov	sl, r4
 801ac34:	f1b9 0f00 	cmp.w	r9, #0
 801ac38:	dd57      	ble.n	801acea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ac3a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ac3e:	9803      	ldr	r0, [sp, #12]
 801ac40:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ac44:	140d      	asrs	r5, r1, #16
 801ac46:	fb07 000c 	mla	r0, r7, ip, r0
 801ac4a:	f109 39ff 	add.w	r9, r9, #4294967295
 801ac4e:	5d40      	ldrb	r0, [r0, r5]
 801ac50:	9d04      	ldr	r5, [sp, #16]
 801ac52:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ac56:	f8ba 5000 	ldrh.w	r5, [sl]
 801ac5a:	122f      	asrs	r7, r5, #8
 801ac5c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ac60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac64:	fb17 f706 	smulbb	r7, r7, r6
 801ac68:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ac6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac70:	00ed      	lsls	r5, r5, #3
 801ac72:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ac76:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ac7a:	10c7      	asrs	r7, r0, #3
 801ac7c:	b2ed      	uxtb	r5, r5
 801ac7e:	00c0      	lsls	r0, r0, #3
 801ac80:	fb18 f806 	smulbb	r8, r8, r6
 801ac84:	fb15 f506 	smulbb	r5, r5, r6
 801ac88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac8c:	b2c0      	uxtb	r0, r0
 801ac8e:	fa1f fc8c 	uxth.w	ip, ip
 801ac92:	fb07 870b 	mla	r7, r7, fp, r8
 801ac96:	fb00 500b 	mla	r0, r0, fp, r5
 801ac9a:	b280      	uxth	r0, r0
 801ac9c:	b2bf      	uxth	r7, r7
 801ac9e:	f10c 0501 	add.w	r5, ip, #1
 801aca2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801aca6:	f107 0801 	add.w	r8, r7, #1
 801acaa:	1c45      	adds	r5, r0, #1
 801acac:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801acb0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801acb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801acb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801acba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801acbe:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801acc2:	ea45 0c0c 	orr.w	ip, r5, ip
 801acc6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801acca:	4401      	add	r1, r0
 801accc:	9814      	ldr	r0, [sp, #80]	; 0x50
 801acce:	ea4c 0c08 	orr.w	ip, ip, r8
 801acd2:	f82a cb02 	strh.w	ip, [sl], #2
 801acd6:	4402      	add	r2, r0
 801acd8:	e7ac      	b.n	801ac34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801acda:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801acde:	f04f 0800 	mov.w	r8, #0
 801ace2:	eb03 0008 	add.w	r0, r3, r8
 801ace6:	2800      	cmp	r0, #0
 801ace8:	dc41      	bgt.n	801ad6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801acea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801acee:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801acf2:	9b01      	ldr	r3, [sp, #4]
 801acf4:	2b00      	cmp	r3, #0
 801acf6:	f340 8097 	ble.w	801ae28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801acfa:	ee30 0a04 	vadd.f32	s0, s0, s8
 801acfe:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ad06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad0c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad10:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad14:	eef0 6a62 	vmov.f32	s13, s5
 801ad18:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad20:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad24:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ad28:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad2c:	eef0 6a43 	vmov.f32	s13, s6
 801ad30:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad34:	ee12 2a90 	vmov	r2, s5
 801ad38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad3c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad40:	ee13 2a10 	vmov	r2, s6
 801ad44:	9313      	str	r3, [sp, #76]	; 0x4c
 801ad46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad48:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad4c:	9314      	str	r3, [sp, #80]	; 0x50
 801ad4e:	9b01      	ldr	r3, [sp, #4]
 801ad50:	9a05      	ldr	r2, [sp, #20]
 801ad52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad56:	3b01      	subs	r3, #1
 801ad58:	9301      	str	r3, [sp, #4]
 801ad5a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ad5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad60:	eeb0 3a67 	vmov.f32	s6, s15
 801ad64:	bf08      	it	eq
 801ad66:	4613      	moveq	r3, r2
 801ad68:	eef0 2a47 	vmov.f32	s5, s14
 801ad6c:	e72c      	b.n	801abc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ad6e:	140f      	asrs	r7, r1, #16
 801ad70:	d453      	bmi.n	801ae1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ad72:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ad76:	42bd      	cmp	r5, r7
 801ad78:	dd4f      	ble.n	801ae1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ad7a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ad7e:	d44c      	bmi.n	801ae1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ad80:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ad84:	4560      	cmp	r0, ip
 801ad86:	dd48      	ble.n	801ae1a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ad88:	9803      	ldr	r0, [sp, #12]
 801ad8a:	b22d      	sxth	r5, r5
 801ad8c:	fb0c 0505 	mla	r5, ip, r5, r0
 801ad90:	5de8      	ldrb	r0, [r5, r7]
 801ad92:	9d04      	ldr	r5, [sp, #16]
 801ad94:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ad98:	f06f 0501 	mvn.w	r5, #1
 801ad9c:	fb05 fb08 	mul.w	fp, r5, r8
 801ada0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ada4:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ada8:	122f      	asrs	r7, r5, #8
 801adaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801adae:	fb17 f706 	smulbb	r7, r7, r6
 801adb2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801adb6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801adba:	00ed      	lsls	r5, r5, #3
 801adbc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801adc0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801adc4:	10c7      	asrs	r7, r0, #3
 801adc6:	b2ed      	uxtb	r5, r5
 801adc8:	00c0      	lsls	r0, r0, #3
 801adca:	fb19 f906 	smulbb	r9, r9, r6
 801adce:	fb15 f506 	smulbb	r5, r5, r6
 801add2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801add6:	b2c0      	uxtb	r0, r0
 801add8:	fa1f fc8c 	uxth.w	ip, ip
 801addc:	fb07 970a 	mla	r7, r7, sl, r9
 801ade0:	fb00 500a 	mla	r0, r0, sl, r5
 801ade4:	b2bf      	uxth	r7, r7
 801ade6:	b280      	uxth	r0, r0
 801ade8:	f10c 0501 	add.w	r5, ip, #1
 801adec:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801adf0:	f107 0901 	add.w	r9, r7, #1
 801adf4:	1c45      	adds	r5, r0, #1
 801adf6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801adfa:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801adfe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ae02:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ae06:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ae0a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ae0e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ae12:	ea4c 0c09 	orr.w	ip, ip, r9
 801ae16:	f824 c00b 	strh.w	ip, [r4, fp]
 801ae1a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ae1c:	4401      	add	r1, r0
 801ae1e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ae20:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae24:	4402      	add	r2, r0
 801ae26:	e75c      	b.n	801ace2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ae28:	b007      	add	sp, #28
 801ae2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae32:	b085      	sub	sp, #20
 801ae34:	4693      	mov	fp, r2
 801ae36:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ae38:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ae3a:	6870      	ldr	r0, [r6, #4]
 801ae3c:	9100      	str	r1, [sp, #0]
 801ae3e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ae42:	fb00 2404 	mla	r4, r0, r4, r2
 801ae46:	6832      	ldr	r2, [r6, #0]
 801ae48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ae4c:	682a      	ldr	r2, [r5, #0]
 801ae4e:	9201      	str	r2, [sp, #4]
 801ae50:	686a      	ldr	r2, [r5, #4]
 801ae52:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ae56:	3204      	adds	r2, #4
 801ae58:	9202      	str	r2, [sp, #8]
 801ae5a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ae5e:	9a00      	ldr	r2, [sp, #0]
 801ae60:	2a00      	cmp	r2, #0
 801ae62:	dc03      	bgt.n	801ae6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ae64:	f1bb 0f00 	cmp.w	fp, #0
 801ae68:	f340 80a0 	ble.w	801afac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ae6c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae6e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ae72:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ae76:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ae7a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ae7c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ae80:	2b00      	cmp	r3, #0
 801ae82:	dd0c      	ble.n	801ae9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ae84:	1406      	asrs	r6, r0, #16
 801ae86:	d405      	bmi.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae88:	454e      	cmp	r6, r9
 801ae8a:	da03      	bge.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae8c:	1416      	asrs	r6, r2, #16
 801ae8e:	d401      	bmi.n	801ae94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ae90:	4546      	cmp	r6, r8
 801ae92:	db05      	blt.n	801aea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae94:	4470      	add	r0, lr
 801ae96:	4462      	add	r2, ip
 801ae98:	3b01      	subs	r3, #1
 801ae9a:	3402      	adds	r4, #2
 801ae9c:	e7f0      	b.n	801ae80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ae9e:	d00f      	beq.n	801aec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801aea0:	1e5e      	subs	r6, r3, #1
 801aea2:	fb0e 0706 	mla	r7, lr, r6, r0
 801aea6:	143f      	asrs	r7, r7, #16
 801aea8:	d541      	bpl.n	801af2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801aeaa:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801aeae:	4698      	mov	r8, r3
 801aeb0:	9603      	str	r6, [sp, #12]
 801aeb2:	f1b8 0f00 	cmp.w	r8, #0
 801aeb6:	dc59      	bgt.n	801af6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801aeb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aebc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aec0:	9b00      	ldr	r3, [sp, #0]
 801aec2:	2b00      	cmp	r3, #0
 801aec4:	dd72      	ble.n	801afac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801aec6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aeca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aece:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aed2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aed4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aed8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aedc:	eeb0 6a62 	vmov.f32	s12, s5
 801aee0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aee4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aee8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aeec:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801aef0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aef4:	eeb0 6a43 	vmov.f32	s12, s6
 801aef8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aefc:	ee12 2a90 	vmov	r2, s5
 801af00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801af04:	fb92 fef3 	sdiv	lr, r2, r3
 801af08:	ee13 2a10 	vmov	r2, s6
 801af0c:	fb92 fcf3 	sdiv	ip, r2, r3
 801af10:	9b00      	ldr	r3, [sp, #0]
 801af12:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af16:	3b01      	subs	r3, #1
 801af18:	9300      	str	r3, [sp, #0]
 801af1a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801af1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801af20:	eeb0 3a67 	vmov.f32	s6, s15
 801af24:	bf08      	it	eq
 801af26:	465b      	moveq	r3, fp
 801af28:	eef0 2a47 	vmov.f32	s5, s14
 801af2c:	e797      	b.n	801ae5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801af2e:	454f      	cmp	r7, r9
 801af30:	dabb      	bge.n	801aeaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801af32:	fb0c 2606 	mla	r6, ip, r6, r2
 801af36:	1436      	asrs	r6, r6, #16
 801af38:	d4b7      	bmi.n	801aeaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801af3a:	4546      	cmp	r6, r8
 801af3c:	dab5      	bge.n	801aeaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801af3e:	461e      	mov	r6, r3
 801af40:	46a0      	mov	r8, r4
 801af42:	2e00      	cmp	r6, #0
 801af44:	ddb8      	ble.n	801aeb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801af46:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801af4a:	9901      	ldr	r1, [sp, #4]
 801af4c:	1417      	asrs	r7, r2, #16
 801af4e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801af52:	fb0a 1707 	mla	r7, sl, r7, r1
 801af56:	9902      	ldr	r1, [sp, #8]
 801af58:	f817 7009 	ldrb.w	r7, [r7, r9]
 801af5c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801af60:	f828 7b02 	strh.w	r7, [r8], #2
 801af64:	4470      	add	r0, lr
 801af66:	4462      	add	r2, ip
 801af68:	3e01      	subs	r6, #1
 801af6a:	e7ea      	b.n	801af42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801af6c:	ea5f 4920 	movs.w	r9, r0, asr #16
 801af70:	d417      	bmi.n	801afa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801af72:	68ae      	ldr	r6, [r5, #8]
 801af74:	454e      	cmp	r6, r9
 801af76:	dd14      	ble.n	801afa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801af78:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801af7c:	d411      	bmi.n	801afa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801af7e:	68ef      	ldr	r7, [r5, #12]
 801af80:	4557      	cmp	r7, sl
 801af82:	dd0e      	ble.n	801afa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801af84:	9f01      	ldr	r7, [sp, #4]
 801af86:	b236      	sxth	r6, r6
 801af88:	fb0a 7606 	mla	r6, sl, r6, r7
 801af8c:	9f02      	ldr	r7, [sp, #8]
 801af8e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801af92:	f06f 0101 	mvn.w	r1, #1
 801af96:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801af9a:	fb01 f608 	mul.w	r6, r1, r8
 801af9e:	9903      	ldr	r1, [sp, #12]
 801afa0:	538f      	strh	r7, [r1, r6]
 801afa2:	4470      	add	r0, lr
 801afa4:	4462      	add	r2, ip
 801afa6:	f108 38ff 	add.w	r8, r8, #4294967295
 801afaa:	e782      	b.n	801aeb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801afac:	b005      	add	sp, #20
 801afae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801afb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afb6:	b087      	sub	sp, #28
 801afb8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801afba:	9205      	str	r2, [sp, #20]
 801afbc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801afc0:	9203      	str	r2, [sp, #12]
 801afc2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801afc6:	9102      	str	r1, [sp, #8]
 801afc8:	6861      	ldr	r1, [r4, #4]
 801afca:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801afce:	fb01 2000 	mla	r0, r1, r0, r2
 801afd2:	6822      	ldr	r2, [r4, #0]
 801afd4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801afd8:	9200      	str	r2, [sp, #0]
 801afda:	f8dc 2000 	ldr.w	r2, [ip]
 801afde:	9204      	str	r2, [sp, #16]
 801afe0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801afe4:	3204      	adds	r2, #4
 801afe6:	9201      	str	r2, [sp, #4]
 801afe8:	9a03      	ldr	r2, [sp, #12]
 801afea:	43d5      	mvns	r5, r2
 801afec:	b2ed      	uxtb	r5, r5
 801afee:	9a02      	ldr	r2, [sp, #8]
 801aff0:	2a00      	cmp	r2, #0
 801aff2:	dc03      	bgt.n	801affc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aff4:	9a05      	ldr	r2, [sp, #20]
 801aff6:	2a00      	cmp	r2, #0
 801aff8:	f340 812c 	ble.w	801b254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801affc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801affe:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801b002:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801b006:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b00a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b00c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b010:	2b00      	cmp	r3, #0
 801b012:	dd10      	ble.n	801b036 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b014:	140c      	asrs	r4, r1, #16
 801b016:	d405      	bmi.n	801b024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b018:	4574      	cmp	r4, lr
 801b01a:	da03      	bge.n	801b024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b01c:	1414      	asrs	r4, r2, #16
 801b01e:	d401      	bmi.n	801b024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b020:	42bc      	cmp	r4, r7
 801b022:	db09      	blt.n	801b038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b024:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b026:	9800      	ldr	r0, [sp, #0]
 801b028:	4421      	add	r1, r4
 801b02a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b02c:	3002      	adds	r0, #2
 801b02e:	4422      	add	r2, r4
 801b030:	3b01      	subs	r3, #1
 801b032:	9000      	str	r0, [sp, #0]
 801b034:	e7ec      	b.n	801b010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b036:	d071      	beq.n	801b11c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801b038:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b03a:	1e5c      	subs	r4, r3, #1
 801b03c:	fb06 1604 	mla	r6, r6, r4, r1
 801b040:	1436      	asrs	r6, r6, #16
 801b042:	d45d      	bmi.n	801b100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b044:	4576      	cmp	r6, lr
 801b046:	da5b      	bge.n	801b100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b048:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801b04a:	fb06 2404 	mla	r4, r6, r4, r2
 801b04e:	1424      	asrs	r4, r4, #16
 801b050:	d456      	bmi.n	801b100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b052:	42bc      	cmp	r4, r7
 801b054:	da54      	bge.n	801b100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b056:	f8dd 9000 	ldr.w	r9, [sp]
 801b05a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801b05e:	4698      	mov	r8, r3
 801b060:	f1b8 0f00 	cmp.w	r8, #0
 801b064:	dd54      	ble.n	801b110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b066:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b06a:	9804      	ldr	r0, [sp, #16]
 801b06c:	1414      	asrs	r4, r2, #16
 801b06e:	fb07 0404 	mla	r4, r7, r4, r0
 801b072:	140e      	asrs	r6, r1, #16
 801b074:	9801      	ldr	r0, [sp, #4]
 801b076:	f814 e006 	ldrb.w	lr, [r4, r6]
 801b07a:	f8b9 4000 	ldrh.w	r4, [r9]
 801b07e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b082:	eb00 0b0e 	add.w	fp, r0, lr
 801b086:	1227      	asrs	r7, r4, #8
 801b088:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b08c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b090:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801b094:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b096:	fb16 f60a 	smulbb	r6, r6, sl
 801b09a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b09e:	fb07 6705 	mla	r7, r7, r5, r6
 801b0a2:	10e6      	asrs	r6, r4, #3
 801b0a4:	00e4      	lsls	r4, r4, #3
 801b0a6:	b2e4      	uxtb	r4, r4
 801b0a8:	fb1b fb0a 	smulbb	fp, fp, sl
 801b0ac:	fb14 f405 	smulbb	r4, r4, r5
 801b0b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b0b4:	b2bf      	uxth	r7, r7
 801b0b6:	fb06 b605 	mla	r6, r6, r5, fp
 801b0ba:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801b0be:	b2b6      	uxth	r6, r6
 801b0c0:	fa1f fe8e 	uxth.w	lr, lr
 801b0c4:	1c7c      	adds	r4, r7, #1
 801b0c6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b0ca:	f106 0b01 	add.w	fp, r6, #1
 801b0ce:	f10e 0401 	add.w	r4, lr, #1
 801b0d2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801b0d6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b0da:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b0de:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b0e2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b0e6:	4327      	orrs	r7, r4
 801b0e8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b0ec:	4401      	add	r1, r0
 801b0ee:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b0f0:	ea47 070b 	orr.w	r7, r7, fp
 801b0f4:	f829 7b02 	strh.w	r7, [r9], #2
 801b0f8:	4402      	add	r2, r0
 801b0fa:	f108 38ff 	add.w	r8, r8, #4294967295
 801b0fe:	e7af      	b.n	801b060 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801b100:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801b104:	f04f 0e00 	mov.w	lr, #0
 801b108:	eb03 040e 	add.w	r4, r3, lr
 801b10c:	2c00      	cmp	r4, #0
 801b10e:	dc43      	bgt.n	801b198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b110:	9a00      	ldr	r2, [sp, #0]
 801b112:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b116:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b11a:	9300      	str	r3, [sp, #0]
 801b11c:	9b02      	ldr	r3, [sp, #8]
 801b11e:	2b00      	cmp	r3, #0
 801b120:	f340 8098 	ble.w	801b254 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b124:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b128:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b12c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b130:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b132:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b136:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b13a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b13e:	eef0 6a62 	vmov.f32	s13, s5
 801b142:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b146:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b14a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b14e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801b152:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b156:	eef0 6a43 	vmov.f32	s13, s6
 801b15a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b15e:	ee12 2a90 	vmov	r2, s5
 801b162:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b166:	fb92 f3f3 	sdiv	r3, r2, r3
 801b16a:	ee13 2a10 	vmov	r2, s6
 801b16e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b170:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b172:	fb92 f3f3 	sdiv	r3, r2, r3
 801b176:	9314      	str	r3, [sp, #80]	; 0x50
 801b178:	9b02      	ldr	r3, [sp, #8]
 801b17a:	9a05      	ldr	r2, [sp, #20]
 801b17c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b180:	3b01      	subs	r3, #1
 801b182:	9302      	str	r3, [sp, #8]
 801b184:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801b188:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b18a:	eeb0 3a67 	vmov.f32	s6, s15
 801b18e:	bf08      	it	eq
 801b190:	4613      	moveq	r3, r2
 801b192:	eef0 2a47 	vmov.f32	s5, s14
 801b196:	e72a      	b.n	801afee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b198:	140f      	asrs	r7, r1, #16
 801b19a:	d454      	bmi.n	801b246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b19c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b1a0:	42be      	cmp	r6, r7
 801b1a2:	dd50      	ble.n	801b246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b1a4:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b1a8:	d44d      	bmi.n	801b246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b1aa:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b1ae:	4544      	cmp	r4, r8
 801b1b0:	dd49      	ble.n	801b246 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b1b2:	9c04      	ldr	r4, [sp, #16]
 801b1b4:	b236      	sxth	r6, r6
 801b1b6:	fb08 4606 	mla	r6, r8, r6, r4
 801b1ba:	f06f 0001 	mvn.w	r0, #1
 801b1be:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b1c2:	9c01      	ldr	r4, [sp, #4]
 801b1c4:	fb00 fa0e 	mul.w	sl, r0, lr
 801b1c8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b1cc:	9800      	ldr	r0, [sp, #0]
 801b1ce:	eb04 0b08 	add.w	fp, r4, r8
 801b1d2:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b1d6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b1da:	9801      	ldr	r0, [sp, #4]
 801b1dc:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b1e0:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b1e4:	9800      	ldr	r0, [sp, #0]
 801b1e6:	1227      	asrs	r7, r4, #8
 801b1e8:	fb16 f609 	smulbb	r6, r6, r9
 801b1ec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b1f0:	fb07 6705 	mla	r7, r7, r5, r6
 801b1f4:	10e6      	asrs	r6, r4, #3
 801b1f6:	00e4      	lsls	r4, r4, #3
 801b1f8:	b2e4      	uxtb	r4, r4
 801b1fa:	fb1b fb09 	smulbb	fp, fp, r9
 801b1fe:	fb14 f405 	smulbb	r4, r4, r5
 801b202:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b206:	b2bf      	uxth	r7, r7
 801b208:	fb06 b605 	mla	r6, r6, r5, fp
 801b20c:	fb08 4809 	mla	r8, r8, r9, r4
 801b210:	b2b6      	uxth	r6, r6
 801b212:	fa1f f888 	uxth.w	r8, r8
 801b216:	1c7c      	adds	r4, r7, #1
 801b218:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b21c:	f106 0b01 	add.w	fp, r6, #1
 801b220:	f108 0401 	add.w	r4, r8, #1
 801b224:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b228:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b22c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b230:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b234:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b238:	4327      	orrs	r7, r4
 801b23a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b23e:	ea47 070b 	orr.w	r7, r7, fp
 801b242:	f820 700a 	strh.w	r7, [r0, sl]
 801b246:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b248:	4401      	add	r1, r0
 801b24a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b24c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b250:	4402      	add	r2, r0
 801b252:	e759      	b.n	801b108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b254:	b007      	add	sp, #28
 801b256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b25c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b260:	b085      	sub	sp, #20
 801b262:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b266:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b268:	9203      	str	r2, [sp, #12]
 801b26a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b26e:	6870      	ldr	r0, [r6, #4]
 801b270:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b272:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801b276:	686f      	ldr	r7, [r5, #4]
 801b278:	9101      	str	r1, [sp, #4]
 801b27a:	fb00 2404 	mla	r4, r0, r4, r2
 801b27e:	6832      	ldr	r2, [r6, #0]
 801b280:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b284:	682a      	ldr	r2, [r5, #0]
 801b286:	9202      	str	r2, [sp, #8]
 801b288:	3704      	adds	r7, #4
 801b28a:	9a01      	ldr	r2, [sp, #4]
 801b28c:	2a00      	cmp	r2, #0
 801b28e:	dc03      	bgt.n	801b298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b290:	9a03      	ldr	r2, [sp, #12]
 801b292:	2a00      	cmp	r2, #0
 801b294:	f340 80cc 	ble.w	801b430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b298:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b29a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b29e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b2a2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b2a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b2a8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b2ac:	2b00      	cmp	r3, #0
 801b2ae:	dd0d      	ble.n	801b2cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b2b0:	1406      	asrs	r6, r0, #16
 801b2b2:	d405      	bmi.n	801b2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b2b4:	454e      	cmp	r6, r9
 801b2b6:	da03      	bge.n	801b2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b2b8:	1416      	asrs	r6, r2, #16
 801b2ba:	d401      	bmi.n	801b2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b2bc:	4546      	cmp	r6, r8
 801b2be:	db06      	blt.n	801b2ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b2c0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801b2c2:	4460      	add	r0, ip
 801b2c4:	4432      	add	r2, r6
 801b2c6:	3b01      	subs	r3, #1
 801b2c8:	3402      	adds	r4, #2
 801b2ca:	e7ef      	b.n	801b2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b2cc:	d00f      	beq.n	801b2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b2ce:	1e5e      	subs	r6, r3, #1
 801b2d0:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b2d4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b2d8:	d543      	bpl.n	801b362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b2da:	4698      	mov	r8, r3
 801b2dc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b2e0:	f1b8 0f00 	cmp.w	r8, #0
 801b2e4:	dc71      	bgt.n	801b3ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b2e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b2ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2ee:	9b01      	ldr	r3, [sp, #4]
 801b2f0:	2b00      	cmp	r3, #0
 801b2f2:	f340 809d 	ble.w	801b430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b2f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b2fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b302:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b304:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b308:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b30c:	eeb0 6a62 	vmov.f32	s12, s5
 801b310:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b314:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b318:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b31c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b320:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b324:	eeb0 6a43 	vmov.f32	s12, s6
 801b328:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b32c:	ee12 2a90 	vmov	r2, s5
 801b330:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b334:	fb92 fcf3 	sdiv	ip, r2, r3
 801b338:	ee13 2a10 	vmov	r2, s6
 801b33c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b340:	9312      	str	r3, [sp, #72]	; 0x48
 801b342:	9b01      	ldr	r3, [sp, #4]
 801b344:	9a03      	ldr	r2, [sp, #12]
 801b346:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b34a:	3b01      	subs	r3, #1
 801b34c:	9301      	str	r3, [sp, #4]
 801b34e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b352:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b354:	eeb0 3a67 	vmov.f32	s6, s15
 801b358:	bf08      	it	eq
 801b35a:	4613      	moveq	r3, r2
 801b35c:	eef0 2a47 	vmov.f32	s5, s14
 801b360:	e793      	b.n	801b28a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b362:	45ce      	cmp	lr, r9
 801b364:	dab9      	bge.n	801b2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b366:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b368:	fb01 2606 	mla	r6, r1, r6, r2
 801b36c:	1436      	asrs	r6, r6, #16
 801b36e:	d4b4      	bmi.n	801b2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b370:	4546      	cmp	r6, r8
 801b372:	dab2      	bge.n	801b2da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b374:	4698      	mov	r8, r3
 801b376:	46a2      	mov	sl, r4
 801b378:	f1b8 0f00 	cmp.w	r8, #0
 801b37c:	ddb3      	ble.n	801b2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b37e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b382:	9902      	ldr	r1, [sp, #8]
 801b384:	1416      	asrs	r6, r2, #16
 801b386:	fb09 1606 	mla	r6, r9, r6, r1
 801b38a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b38e:	492a      	ldr	r1, [pc, #168]	; (801b438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b390:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b394:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b398:	eb07 0b0e 	add.w	fp, r7, lr
 801b39c:	4460      	add	r0, ip
 801b39e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b3a2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b3a6:	00f6      	lsls	r6, r6, #3
 801b3a8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b3ac:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b3b0:	ea49 0606 	orr.w	r6, r9, r6
 801b3b4:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b3b8:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b3ba:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b3be:	f82a 6b02 	strh.w	r6, [sl], #2
 801b3c2:	440a      	add	r2, r1
 801b3c4:	f108 38ff 	add.w	r8, r8, #4294967295
 801b3c8:	e7d6      	b.n	801b378 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b3ca:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b3ce:	d429      	bmi.n	801b424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b3d0:	68ae      	ldr	r6, [r5, #8]
 801b3d2:	454e      	cmp	r6, r9
 801b3d4:	dd26      	ble.n	801b424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b3d6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b3da:	d423      	bmi.n	801b424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b3dc:	68e9      	ldr	r1, [r5, #12]
 801b3de:	4559      	cmp	r1, fp
 801b3e0:	dd20      	ble.n	801b424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b3e2:	9902      	ldr	r1, [sp, #8]
 801b3e4:	fa0f fe86 	sxth.w	lr, r6
 801b3e8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b3ec:	f06f 0101 	mvn.w	r1, #1
 801b3f0:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b3f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b3f8:	eb07 060e 	add.w	r6, r7, lr
 801b3fc:	fb01 f908 	mul.w	r9, r1, r8
 801b400:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b404:	7876      	ldrb	r6, [r6, #1]
 801b406:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801b40a:	00f6      	lsls	r6, r6, #3
 801b40c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b410:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b414:	ea4b 0606 	orr.w	r6, fp, r6
 801b418:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801b41c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801b420:	f82a 6009 	strh.w	r6, [sl, r9]
 801b424:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b426:	4460      	add	r0, ip
 801b428:	440a      	add	r2, r1
 801b42a:	f108 38ff 	add.w	r8, r8, #4294967295
 801b42e:	e757      	b.n	801b2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b430:	b005      	add	sp, #20
 801b432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b436:	bf00      	nop
 801b438:	fffff800 	.word	0xfffff800

0801b43c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b43c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b440:	b087      	sub	sp, #28
 801b442:	468b      	mov	fp, r1
 801b444:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b446:	9204      	str	r2, [sp, #16]
 801b448:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b44c:	9205      	str	r2, [sp, #20]
 801b44e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b452:	6841      	ldr	r1, [r0, #4]
 801b454:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801b458:	fb01 2404 	mla	r4, r1, r4, r2
 801b45c:	6802      	ldr	r2, [r0, #0]
 801b45e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b462:	f8dc 2000 	ldr.w	r2, [ip]
 801b466:	9201      	str	r2, [sp, #4]
 801b468:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b46c:	3204      	adds	r2, #4
 801b46e:	9202      	str	r2, [sp, #8]
 801b470:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b474:	f1bb 0f00 	cmp.w	fp, #0
 801b478:	dc03      	bgt.n	801b482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b47a:	9a04      	ldr	r2, [sp, #16]
 801b47c:	2a00      	cmp	r2, #0
 801b47e:	f340 8138 	ble.w	801b6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b482:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b484:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b488:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801b48c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b490:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b492:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b496:	2b00      	cmp	r3, #0
 801b498:	dd0e      	ble.n	801b4b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b49a:	1402      	asrs	r2, r0, #16
 801b49c:	d405      	bmi.n	801b4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b49e:	42ba      	cmp	r2, r7
 801b4a0:	da03      	bge.n	801b4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b4a2:	140a      	asrs	r2, r1, #16
 801b4a4:	d401      	bmi.n	801b4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b4a6:	42b2      	cmp	r2, r6
 801b4a8:	db07      	blt.n	801b4ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b4aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4ac:	4410      	add	r0, r2
 801b4ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4b0:	3b01      	subs	r3, #1
 801b4b2:	4411      	add	r1, r2
 801b4b4:	3402      	adds	r4, #2
 801b4b6:	e7ee      	b.n	801b496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b4b8:	d019      	beq.n	801b4ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b4ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b4bc:	1e5a      	subs	r2, r3, #1
 801b4be:	fb05 0502 	mla	r5, r5, r2, r0
 801b4c2:	142d      	asrs	r5, r5, #16
 801b4c4:	d409      	bmi.n	801b4da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b4c6:	42bd      	cmp	r5, r7
 801b4c8:	da07      	bge.n	801b4da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b4ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b4cc:	fb05 1202 	mla	r2, r5, r2, r1
 801b4d0:	1412      	asrs	r2, r2, #16
 801b4d2:	d402      	bmi.n	801b4da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b4d4:	42b2      	cmp	r2, r6
 801b4d6:	f2c0 80ac 	blt.w	801b632 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b4da:	f04f 0e00 	mov.w	lr, #0
 801b4de:	eb03 020e 	add.w	r2, r3, lr
 801b4e2:	2a00      	cmp	r2, #0
 801b4e4:	dc3e      	bgt.n	801b564 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b4e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b4ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b4ee:	f1bb 0f00 	cmp.w	fp, #0
 801b4f2:	f340 80fe 	ble.w	801b6f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b4f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b4fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b4fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b502:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b504:	f1bb 0b01 	subs.w	fp, fp, #1
 801b508:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b50c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b510:	eeb0 6a62 	vmov.f32	s12, s5
 801b514:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b518:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b51c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b520:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b524:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b528:	eeb0 6a43 	vmov.f32	s12, s6
 801b52c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b530:	ee12 2a90 	vmov	r2, s5
 801b534:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b538:	fb92 f3f3 	sdiv	r3, r2, r3
 801b53c:	ee13 2a10 	vmov	r2, s6
 801b540:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b544:	9313      	str	r3, [sp, #76]	; 0x4c
 801b546:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b548:	fb92 f3f3 	sdiv	r3, r2, r3
 801b54c:	9a04      	ldr	r2, [sp, #16]
 801b54e:	9314      	str	r3, [sp, #80]	; 0x50
 801b550:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b554:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b556:	eeb0 3a67 	vmov.f32	s6, s15
 801b55a:	bf08      	it	eq
 801b55c:	4613      	moveq	r3, r2
 801b55e:	eef0 2a47 	vmov.f32	s5, s14
 801b562:	e787      	b.n	801b474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b564:	1406      	asrs	r6, r0, #16
 801b566:	d45d      	bmi.n	801b624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b568:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801b56c:	42b5      	cmp	r5, r6
 801b56e:	dd59      	ble.n	801b624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b570:	140f      	asrs	r7, r1, #16
 801b572:	d457      	bmi.n	801b624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b574:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801b578:	42ba      	cmp	r2, r7
 801b57a:	dd53      	ble.n	801b624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b57c:	9a01      	ldr	r2, [sp, #4]
 801b57e:	b22d      	sxth	r5, r5
 801b580:	fb07 2505 	mla	r5, r7, r5, r2
 801b584:	5daa      	ldrb	r2, [r5, r6]
 801b586:	9d02      	ldr	r5, [sp, #8]
 801b588:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b58c:	0e2e      	lsrs	r6, r5, #24
 801b58e:	d049      	beq.n	801b624 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b590:	f06f 0201 	mvn.w	r2, #1
 801b594:	fb02 f20e 	mul.w	r2, r2, lr
 801b598:	9203      	str	r2, [sp, #12]
 801b59a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b59e:	9a05      	ldr	r2, [sp, #20]
 801b5a0:	4356      	muls	r6, r2
 801b5a2:	1c72      	adds	r2, r6, #1
 801b5a4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b5a8:	1212      	asrs	r2, r2, #8
 801b5aa:	fa1f f982 	uxth.w	r9, r2
 801b5ae:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b5b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b5b6:	43d2      	mvns	r2, r2
 801b5b8:	b2d2      	uxtb	r2, r2
 801b5ba:	fb16 f609 	smulbb	r6, r6, r9
 801b5be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b5c2:	fb07 6702 	mla	r7, r7, r2, r6
 801b5c6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b5ca:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b5ce:	b2ed      	uxtb	r5, r5
 801b5d0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b5d4:	fa5f f888 	uxtb.w	r8, r8
 801b5d8:	fb15 f509 	smulbb	r5, r5, r9
 801b5dc:	fb08 5502 	mla	r5, r8, r2, r5
 801b5e0:	b2bf      	uxth	r7, r7
 801b5e2:	fb1a fa09 	smulbb	sl, sl, r9
 801b5e6:	b2ad      	uxth	r5, r5
 801b5e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b5ec:	fb06 a602 	mla	r6, r6, r2, sl
 801b5f0:	1c7a      	adds	r2, r7, #1
 801b5f2:	f105 0a01 	add.w	sl, r5, #1
 801b5f6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b5fa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b5fe:	b2b6      	uxth	r6, r6
 801b600:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b604:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b608:	ea4a 0707 	orr.w	r7, sl, r7
 801b60c:	f106 0a01 	add.w	sl, r6, #1
 801b610:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b614:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b618:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b61c:	9a03      	ldr	r2, [sp, #12]
 801b61e:	ea47 070a 	orr.w	r7, r7, sl
 801b622:	52a7      	strh	r7, [r4, r2]
 801b624:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b626:	4410      	add	r0, r2
 801b628:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b62a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b62e:	4411      	add	r1, r2
 801b630:	e755      	b.n	801b4de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b632:	f04f 0800 	mov.w	r8, #0
 801b636:	eba3 0208 	sub.w	r2, r3, r8
 801b63a:	2a00      	cmp	r2, #0
 801b63c:	f77f af53 	ble.w	801b4e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b640:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b644:	9f01      	ldr	r7, [sp, #4]
 801b646:	140a      	asrs	r2, r1, #16
 801b648:	1405      	asrs	r5, r0, #16
 801b64a:	fb06 7202 	mla	r2, r6, r2, r7
 801b64e:	5d52      	ldrb	r2, [r2, r5]
 801b650:	9d02      	ldr	r5, [sp, #8]
 801b652:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b656:	0e2e      	lsrs	r6, r5, #24
 801b658:	d044      	beq.n	801b6e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b65a:	9a05      	ldr	r2, [sp, #20]
 801b65c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b660:	4356      	muls	r6, r2
 801b662:	1c72      	adds	r2, r6, #1
 801b664:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b668:	1212      	asrs	r2, r2, #8
 801b66a:	fa1f f982 	uxth.w	r9, r2
 801b66e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b672:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b676:	43d2      	mvns	r2, r2
 801b678:	b2d2      	uxtb	r2, r2
 801b67a:	fb16 f609 	smulbb	r6, r6, r9
 801b67e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b682:	fb07 6702 	mla	r7, r7, r2, r6
 801b686:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b68a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b68e:	b2ed      	uxtb	r5, r5
 801b690:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b694:	fa5f fe8e 	uxtb.w	lr, lr
 801b698:	fb15 f509 	smulbb	r5, r5, r9
 801b69c:	fb0e 5502 	mla	r5, lr, r2, r5
 801b6a0:	b2bf      	uxth	r7, r7
 801b6a2:	fb1a fa09 	smulbb	sl, sl, r9
 801b6a6:	b2ad      	uxth	r5, r5
 801b6a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b6ac:	fb06 a602 	mla	r6, r6, r2, sl
 801b6b0:	1c7a      	adds	r2, r7, #1
 801b6b2:	f105 0a01 	add.w	sl, r5, #1
 801b6b6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b6ba:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b6be:	b2b6      	uxth	r6, r6
 801b6c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b6c8:	ea4a 0707 	orr.w	r7, sl, r7
 801b6cc:	f106 0a01 	add.w	sl, r6, #1
 801b6d0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b6d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b6d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b6dc:	ea47 070a 	orr.w	r7, r7, sl
 801b6e0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b6e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b6e6:	4410      	add	r0, r2
 801b6e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b6ea:	f108 0801 	add.w	r8, r8, #1
 801b6ee:	4411      	add	r1, r2
 801b6f0:	e7a1      	b.n	801b636 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b6f2:	b007      	add	sp, #28
 801b6f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6fc:	b085      	sub	sp, #20
 801b6fe:	468b      	mov	fp, r1
 801b700:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b702:	9203      	str	r2, [sp, #12]
 801b704:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b708:	6841      	ldr	r1, [r0, #4]
 801b70a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b70e:	fb01 2404 	mla	r4, r1, r4, r2
 801b712:	6802      	ldr	r2, [r0, #0]
 801b714:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b718:	f8de 2000 	ldr.w	r2, [lr]
 801b71c:	9200      	str	r2, [sp, #0]
 801b71e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b722:	3204      	adds	r2, #4
 801b724:	9201      	str	r2, [sp, #4]
 801b726:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b72a:	f1bb 0f00 	cmp.w	fp, #0
 801b72e:	dc03      	bgt.n	801b738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b730:	9a03      	ldr	r2, [sp, #12]
 801b732:	2a00      	cmp	r2, #0
 801b734:	f340 8153 	ble.w	801b9de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b738:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b73a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b73e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b742:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b746:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b748:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b74c:	2b00      	cmp	r3, #0
 801b74e:	dd0e      	ble.n	801b76e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b750:	1408      	asrs	r0, r1, #16
 801b752:	d405      	bmi.n	801b760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b754:	42b8      	cmp	r0, r7
 801b756:	da03      	bge.n	801b760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b758:	1410      	asrs	r0, r2, #16
 801b75a:	d401      	bmi.n	801b760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b75c:	42b0      	cmp	r0, r6
 801b75e:	db07      	blt.n	801b770 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b760:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b762:	4401      	add	r1, r0
 801b764:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b766:	3b01      	subs	r3, #1
 801b768:	4402      	add	r2, r0
 801b76a:	3402      	adds	r4, #2
 801b76c:	e7ee      	b.n	801b74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b76e:	d017      	beq.n	801b7a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b770:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b772:	1e58      	subs	r0, r3, #1
 801b774:	fb05 1500 	mla	r5, r5, r0, r1
 801b778:	142d      	asrs	r5, r5, #16
 801b77a:	d409      	bmi.n	801b790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b77c:	42bd      	cmp	r5, r7
 801b77e:	da07      	bge.n	801b790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b780:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b782:	fb05 2000 	mla	r0, r5, r0, r2
 801b786:	1400      	asrs	r0, r0, #16
 801b788:	d402      	bmi.n	801b790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b78a:	42b0      	cmp	r0, r6
 801b78c:	f2c0 80bc 	blt.w	801b908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b790:	2600      	movs	r6, #0
 801b792:	1998      	adds	r0, r3, r6
 801b794:	2800      	cmp	r0, #0
 801b796:	dc3e      	bgt.n	801b816 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b798:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b79c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b7a0:	f1bb 0f00 	cmp.w	fp, #0
 801b7a4:	f340 811b 	ble.w	801b9de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b7a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b7ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b7b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b7b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b7b6:	f1bb 0b01 	subs.w	fp, fp, #1
 801b7ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b7be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b7c2:	eeb0 6a62 	vmov.f32	s12, s5
 801b7c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b7ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b7d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b7d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7da:	eeb0 6a43 	vmov.f32	s12, s6
 801b7de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7e2:	ee12 2a90 	vmov	r2, s5
 801b7e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7ee:	ee13 2a10 	vmov	r2, s6
 801b7f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b7f6:	9311      	str	r3, [sp, #68]	; 0x44
 801b7f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b7fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7fe:	9a03      	ldr	r2, [sp, #12]
 801b800:	9312      	str	r3, [sp, #72]	; 0x48
 801b802:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b806:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b808:	eeb0 3a67 	vmov.f32	s6, s15
 801b80c:	bf08      	it	eq
 801b80e:	4613      	moveq	r3, r2
 801b810:	eef0 2a47 	vmov.f32	s5, s14
 801b814:	e789      	b.n	801b72a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b816:	140f      	asrs	r7, r1, #16
 801b818:	d426      	bmi.n	801b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b81a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b81e:	42bd      	cmp	r5, r7
 801b820:	dd22      	ble.n	801b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b822:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b826:	d41f      	bmi.n	801b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b828:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b82c:	4560      	cmp	r0, ip
 801b82e:	dd1b      	ble.n	801b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b830:	9800      	ldr	r0, [sp, #0]
 801b832:	b22d      	sxth	r5, r5
 801b834:	fb0c 0505 	mla	r5, ip, r5, r0
 801b838:	5de8      	ldrb	r0, [r5, r7]
 801b83a:	9d01      	ldr	r5, [sp, #4]
 801b83c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b840:	0e07      	lsrs	r7, r0, #24
 801b842:	2fff      	cmp	r7, #255	; 0xff
 801b844:	d116      	bne.n	801b874 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b846:	f06f 0501 	mvn.w	r5, #1
 801b84a:	fb05 f706 	mul.w	r7, r5, r6
 801b84e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b852:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b856:	0945      	lsrs	r5, r0, #5
 801b858:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b85c:	ea4c 0505 	orr.w	r5, ip, r5
 801b860:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b864:	4305      	orrs	r5, r0
 801b866:	53e5      	strh	r5, [r4, r7]
 801b868:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b86a:	4401      	add	r1, r0
 801b86c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b86e:	3e01      	subs	r6, #1
 801b870:	4402      	add	r2, r0
 801b872:	e78e      	b.n	801b792 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b874:	b2fd      	uxtb	r5, r7
 801b876:	2f00      	cmp	r7, #0
 801b878:	d0f6      	beq.n	801b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b87a:	f06f 0701 	mvn.w	r7, #1
 801b87e:	4377      	muls	r7, r6
 801b880:	fa1f f985 	uxth.w	r9, r5
 801b884:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b888:	9702      	str	r7, [sp, #8]
 801b88a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b88e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b892:	43ed      	mvns	r5, r5
 801b894:	b2ed      	uxtb	r5, r5
 801b896:	fb17 f709 	smulbb	r7, r7, r9
 801b89a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b89e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b8a2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b8a6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b8aa:	b2c0      	uxtb	r0, r0
 801b8ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b8b0:	fa5f f888 	uxtb.w	r8, r8
 801b8b4:	fb10 f009 	smulbb	r0, r0, r9
 801b8b8:	fb08 0005 	mla	r0, r8, r5, r0
 801b8bc:	b280      	uxth	r0, r0
 801b8be:	fa1f fc8c 	uxth.w	ip, ip
 801b8c2:	fb1a fa09 	smulbb	sl, sl, r9
 801b8c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b8ca:	fb07 a705 	mla	r7, r7, r5, sl
 801b8ce:	f100 0a01 	add.w	sl, r0, #1
 801b8d2:	f10c 0501 	add.w	r5, ip, #1
 801b8d6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b8da:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b8de:	b2bf      	uxth	r7, r7
 801b8e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b8e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b8e8:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b8ec:	f107 0a01 	add.w	sl, r7, #1
 801b8f0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b8f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b8f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b8fc:	9802      	ldr	r0, [sp, #8]
 801b8fe:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b902:	f824 c000 	strh.w	ip, [r4, r0]
 801b906:	e7af      	b.n	801b868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b908:	f04f 0800 	mov.w	r8, #0
 801b90c:	eba3 0008 	sub.w	r0, r3, r8
 801b910:	2800      	cmp	r0, #0
 801b912:	f77f af41 	ble.w	801b798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b916:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b91a:	9f00      	ldr	r7, [sp, #0]
 801b91c:	1410      	asrs	r0, r2, #16
 801b91e:	140d      	asrs	r5, r1, #16
 801b920:	fb06 7000 	mla	r0, r6, r0, r7
 801b924:	5d40      	ldrb	r0, [r0, r5]
 801b926:	9d01      	ldr	r5, [sp, #4]
 801b928:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b92c:	0e2e      	lsrs	r6, r5, #24
 801b92e:	2eff      	cmp	r6, #255	; 0xff
 801b930:	d112      	bne.n	801b958 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b932:	482c      	ldr	r0, [pc, #176]	; (801b9e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b934:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b938:	0968      	lsrs	r0, r5, #5
 801b93a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b93e:	4330      	orrs	r0, r6
 801b940:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b944:	4328      	orrs	r0, r5
 801b946:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b94a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b94c:	4401      	add	r1, r0
 801b94e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b950:	f108 0801 	add.w	r8, r8, #1
 801b954:	4402      	add	r2, r0
 801b956:	e7d9      	b.n	801b90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b958:	b2f0      	uxtb	r0, r6
 801b95a:	2e00      	cmp	r6, #0
 801b95c:	d0f5      	beq.n	801b94a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b95e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b962:	fa1f f980 	uxth.w	r9, r0
 801b966:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b96a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b96e:	43c0      	mvns	r0, r0
 801b970:	b2c0      	uxtb	r0, r0
 801b972:	fb16 f609 	smulbb	r6, r6, r9
 801b976:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b97a:	fb07 6700 	mla	r7, r7, r0, r6
 801b97e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b982:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b986:	b2ed      	uxtb	r5, r5
 801b988:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b98c:	fa5f fc8c 	uxtb.w	ip, ip
 801b990:	fb15 f509 	smulbb	r5, r5, r9
 801b994:	fb0c 5500 	mla	r5, ip, r0, r5
 801b998:	b2bf      	uxth	r7, r7
 801b99a:	fb1a fa09 	smulbb	sl, sl, r9
 801b99e:	b2ad      	uxth	r5, r5
 801b9a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b9a4:	fb06 a600 	mla	r6, r6, r0, sl
 801b9a8:	1c78      	adds	r0, r7, #1
 801b9aa:	f105 0a01 	add.w	sl, r5, #1
 801b9ae:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b9b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b9b6:	b2b6      	uxth	r6, r6
 801b9b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b9bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b9c0:	ea4a 0707 	orr.w	r7, sl, r7
 801b9c4:	f106 0a01 	add.w	sl, r6, #1
 801b9c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b9cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b9d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b9d4:	ea47 070a 	orr.w	r7, r7, sl
 801b9d8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b9dc:	e7b5      	b.n	801b94a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b9de:	b005      	add	sp, #20
 801b9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9e4:	fffff800 	.word	0xfffff800

0801b9e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9ec:	b087      	sub	sp, #28
 801b9ee:	468b      	mov	fp, r1
 801b9f0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b9f2:	9204      	str	r2, [sp, #16]
 801b9f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b9f8:	9205      	str	r2, [sp, #20]
 801b9fa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b9fe:	6861      	ldr	r1, [r4, #4]
 801ba00:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801ba04:	fb01 2000 	mla	r0, r1, r0, r2
 801ba08:	6822      	ldr	r2, [r4, #0]
 801ba0a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ba0e:	f8de 2000 	ldr.w	r2, [lr]
 801ba12:	9201      	str	r2, [sp, #4]
 801ba14:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ba18:	9202      	str	r2, [sp, #8]
 801ba1a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ba1e:	f1bb 0f00 	cmp.w	fp, #0
 801ba22:	dc03      	bgt.n	801ba2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801ba24:	9a04      	ldr	r2, [sp, #16]
 801ba26:	2a00      	cmp	r2, #0
 801ba28:	f340 8142 	ble.w	801bcb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801ba2c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ba2e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ba32:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801ba36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ba3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ba3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ba40:	2b00      	cmp	r3, #0
 801ba42:	dd0e      	ble.n	801ba62 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ba44:	140c      	asrs	r4, r1, #16
 801ba46:	d405      	bmi.n	801ba54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba48:	42bc      	cmp	r4, r7
 801ba4a:	da03      	bge.n	801ba54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba4c:	1414      	asrs	r4, r2, #16
 801ba4e:	d401      	bmi.n	801ba54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba50:	42b4      	cmp	r4, r6
 801ba52:	db07      	blt.n	801ba64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ba54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba56:	4421      	add	r1, r4
 801ba58:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba5a:	3b01      	subs	r3, #1
 801ba5c:	4422      	add	r2, r4
 801ba5e:	3002      	adds	r0, #2
 801ba60:	e7ee      	b.n	801ba40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ba62:	d019      	beq.n	801ba98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ba64:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ba66:	1e5c      	subs	r4, r3, #1
 801ba68:	fb05 1504 	mla	r5, r5, r4, r1
 801ba6c:	142d      	asrs	r5, r5, #16
 801ba6e:	d409      	bmi.n	801ba84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ba70:	42bd      	cmp	r5, r7
 801ba72:	da07      	bge.n	801ba84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ba74:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ba76:	fb05 2404 	mla	r4, r5, r4, r2
 801ba7a:	1424      	asrs	r4, r4, #16
 801ba7c:	d402      	bmi.n	801ba84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ba7e:	42b4      	cmp	r4, r6
 801ba80:	f2c0 80b1 	blt.w	801bbe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801ba84:	f04f 0800 	mov.w	r8, #0
 801ba88:	eb03 0408 	add.w	r4, r3, r8
 801ba8c:	2c00      	cmp	r4, #0
 801ba8e:	dc3e      	bgt.n	801bb0e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ba90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ba98:	f1bb 0f00 	cmp.w	fp, #0
 801ba9c:	f340 8108 	ble.w	801bcb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801baa0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801baa4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801baa8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801baac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801baae:	f1bb 0b01 	subs.w	fp, fp, #1
 801bab2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bab6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801baba:	eeb0 6a62 	vmov.f32	s12, s5
 801babe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bac2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bac6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801baca:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bace:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bad2:	eeb0 6a43 	vmov.f32	s12, s6
 801bad6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bada:	ee12 2a90 	vmov	r2, s5
 801bade:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bae2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bae6:	ee13 2a10 	vmov	r2, s6
 801baea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801baee:	9313      	str	r3, [sp, #76]	; 0x4c
 801baf0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801baf2:	fb92 f3f3 	sdiv	r3, r2, r3
 801baf6:	9a04      	ldr	r2, [sp, #16]
 801baf8:	9314      	str	r3, [sp, #80]	; 0x50
 801bafa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801bafe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bb00:	eeb0 3a67 	vmov.f32	s6, s15
 801bb04:	bf08      	it	eq
 801bb06:	4613      	moveq	r3, r2
 801bb08:	eef0 2a47 	vmov.f32	s5, s14
 801bb0c:	e787      	b.n	801ba1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801bb0e:	140e      	asrs	r6, r1, #16
 801bb10:	d462      	bmi.n	801bbd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bb12:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bb16:	42b5      	cmp	r5, r6
 801bb18:	dd5e      	ble.n	801bbd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bb1a:	1417      	asrs	r7, r2, #16
 801bb1c:	d45c      	bmi.n	801bbd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bb1e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801bb22:	42bc      	cmp	r4, r7
 801bb24:	dd58      	ble.n	801bbd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bb26:	b22d      	sxth	r5, r5
 801bb28:	fb07 6505 	mla	r5, r7, r5, r6
 801bb2c:	9c02      	ldr	r4, [sp, #8]
 801bb2e:	5d66      	ldrb	r6, [r4, r5]
 801bb30:	2e00      	cmp	r6, #0
 801bb32:	d051      	beq.n	801bbd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801bb34:	9c01      	ldr	r4, [sp, #4]
 801bb36:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801bb3a:	f06f 0401 	mvn.w	r4, #1
 801bb3e:	fb04 f408 	mul.w	r4, r4, r8
 801bb42:	9403      	str	r4, [sp, #12]
 801bb44:	5b05      	ldrh	r5, [r0, r4]
 801bb46:	9c05      	ldr	r4, [sp, #20]
 801bb48:	4366      	muls	r6, r4
 801bb4a:	1c74      	adds	r4, r6, #1
 801bb4c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801bb50:	1224      	asrs	r4, r4, #8
 801bb52:	b2a7      	uxth	r7, r4
 801bb54:	122e      	asrs	r6, r5, #8
 801bb56:	43e4      	mvns	r4, r4
 801bb58:	b2e4      	uxtb	r4, r4
 801bb5a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801bb5e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bb62:	fb16 f604 	smulbb	r6, r6, r4
 801bb66:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bb6a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bb6e:	00ed      	lsls	r5, r5, #3
 801bb70:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bb74:	b2ed      	uxtb	r5, r5
 801bb76:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801bb7a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bb7e:	fb15 f504 	smulbb	r5, r5, r4
 801bb82:	fa5f f989 	uxtb.w	r9, r9
 801bb86:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bb8a:	fb09 5507 	mla	r5, r9, r7, r5
 801bb8e:	fb1a fa04 	smulbb	sl, sl, r4
 801bb92:	fa1f fc8c 	uxth.w	ip, ip
 801bb96:	b2ad      	uxth	r5, r5
 801bb98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bb9c:	fb06 a607 	mla	r6, r6, r7, sl
 801bba0:	f10c 0401 	add.w	r4, ip, #1
 801bba4:	f105 0a01 	add.w	sl, r5, #1
 801bba8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bbac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bbb0:	b2b6      	uxth	r6, r6
 801bbb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bbb6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bbba:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bbbe:	f106 0a01 	add.w	sl, r6, #1
 801bbc2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bbc6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bbca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bbce:	9c03      	ldr	r4, [sp, #12]
 801bbd0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bbd4:	f820 c004 	strh.w	ip, [r0, r4]
 801bbd8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bbda:	4421      	add	r1, r4
 801bbdc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bbde:	f108 38ff 	add.w	r8, r8, #4294967295
 801bbe2:	4422      	add	r2, r4
 801bbe4:	e750      	b.n	801ba88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801bbe6:	f04f 0900 	mov.w	r9, #0
 801bbea:	eba3 0409 	sub.w	r4, r3, r9
 801bbee:	2c00      	cmp	r4, #0
 801bbf0:	f77f af4e 	ble.w	801ba90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801bbf4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801bbf8:	140d      	asrs	r5, r1, #16
 801bbfa:	1414      	asrs	r4, r2, #16
 801bbfc:	fb06 5404 	mla	r4, r6, r4, r5
 801bc00:	9d02      	ldr	r5, [sp, #8]
 801bc02:	5d2e      	ldrb	r6, [r5, r4]
 801bc04:	2e00      	cmp	r6, #0
 801bc06:	d04c      	beq.n	801bca2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801bc08:	9d01      	ldr	r5, [sp, #4]
 801bc0a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801bc0e:	9c05      	ldr	r4, [sp, #20]
 801bc10:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801bc14:	4366      	muls	r6, r4
 801bc16:	1c74      	adds	r4, r6, #1
 801bc18:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801bc1c:	1224      	asrs	r4, r4, #8
 801bc1e:	b2a7      	uxth	r7, r4
 801bc20:	122e      	asrs	r6, r5, #8
 801bc22:	43e4      	mvns	r4, r4
 801bc24:	b2e4      	uxtb	r4, r4
 801bc26:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801bc2a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bc2e:	fb16 f604 	smulbb	r6, r6, r4
 801bc32:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bc36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bc3a:	00ed      	lsls	r5, r5, #3
 801bc3c:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bc40:	b2ed      	uxtb	r5, r5
 801bc42:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801bc46:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bc4a:	fb15 f504 	smulbb	r5, r5, r4
 801bc4e:	fa5f f888 	uxtb.w	r8, r8
 801bc52:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bc56:	fb08 5507 	mla	r5, r8, r7, r5
 801bc5a:	fb1a fa04 	smulbb	sl, sl, r4
 801bc5e:	fa1f fc8c 	uxth.w	ip, ip
 801bc62:	b2ad      	uxth	r5, r5
 801bc64:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bc68:	fb06 a607 	mla	r6, r6, r7, sl
 801bc6c:	f10c 0401 	add.w	r4, ip, #1
 801bc70:	f105 0a01 	add.w	sl, r5, #1
 801bc74:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bc78:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bc7c:	b2b6      	uxth	r6, r6
 801bc7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bc82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bc86:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bc8a:	f106 0a01 	add.w	sl, r6, #1
 801bc8e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bc92:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bc96:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bc9a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bc9e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bca2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bca4:	4421      	add	r1, r4
 801bca6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bca8:	f109 0901 	add.w	r9, r9, #1
 801bcac:	4422      	add	r2, r4
 801bcae:	e79c      	b.n	801bbea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801bcb0:	b007      	add	sp, #28
 801bcb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bcb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bcb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcba:	b085      	sub	sp, #20
 801bcbc:	468b      	mov	fp, r1
 801bcbe:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bcc0:	9203      	str	r2, [sp, #12]
 801bcc2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801bcc6:	6861      	ldr	r1, [r4, #4]
 801bcc8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801bccc:	fb01 2000 	mla	r0, r1, r0, r2
 801bcd0:	6822      	ldr	r2, [r4, #0]
 801bcd2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bcd6:	f8d8 2000 	ldr.w	r2, [r8]
 801bcda:	9200      	str	r2, [sp, #0]
 801bcdc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801bce0:	9201      	str	r2, [sp, #4]
 801bce2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bce6:	f1bb 0f00 	cmp.w	fp, #0
 801bcea:	dc03      	bgt.n	801bcf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bcec:	9a03      	ldr	r2, [sp, #12]
 801bcee:	2a00      	cmp	r2, #0
 801bcf0:	f340 8146 	ble.w	801bf80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bcf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bcf6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bcfa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bcfe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bd02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bd04:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bd08:	2b00      	cmp	r3, #0
 801bd0a:	dd0e      	ble.n	801bd2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bd0c:	140c      	asrs	r4, r1, #16
 801bd0e:	d405      	bmi.n	801bd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bd10:	42bc      	cmp	r4, r7
 801bd12:	da03      	bge.n	801bd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bd14:	1414      	asrs	r4, r2, #16
 801bd16:	d401      	bmi.n	801bd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bd18:	42b4      	cmp	r4, r6
 801bd1a:	db07      	blt.n	801bd2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bd1c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd1e:	4421      	add	r1, r4
 801bd20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bd22:	3b01      	subs	r3, #1
 801bd24:	4422      	add	r2, r4
 801bd26:	3002      	adds	r0, #2
 801bd28:	e7ee      	b.n	801bd08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bd2a:	d017      	beq.n	801bd5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bd2c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bd2e:	1e5c      	subs	r4, r3, #1
 801bd30:	fb05 1504 	mla	r5, r5, r4, r1
 801bd34:	142d      	asrs	r5, r5, #16
 801bd36:	d409      	bmi.n	801bd4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bd38:	42bd      	cmp	r5, r7
 801bd3a:	da07      	bge.n	801bd4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bd3c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bd3e:	fb05 2404 	mla	r4, r5, r4, r2
 801bd42:	1424      	asrs	r4, r4, #16
 801bd44:	d402      	bmi.n	801bd4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bd46:	42b4      	cmp	r4, r6
 801bd48:	f2c0 80b3 	blt.w	801beb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801bd4c:	2600      	movs	r6, #0
 801bd4e:	199c      	adds	r4, r3, r6
 801bd50:	2c00      	cmp	r4, #0
 801bd52:	dc3e      	bgt.n	801bdd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bd54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bd58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd5c:	f1bb 0f00 	cmp.w	fp, #0
 801bd60:	f340 810e 	ble.w	801bf80 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bd64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bd6c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bd70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bd72:	f1bb 0b01 	subs.w	fp, fp, #1
 801bd76:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bd7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bd7e:	eeb0 6a62 	vmov.f32	s12, s5
 801bd82:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bd86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bd8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bd8e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bd92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bd96:	eeb0 6a43 	vmov.f32	s12, s6
 801bd9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bd9e:	ee12 2a90 	vmov	r2, s5
 801bda2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bda6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdaa:	ee13 2a10 	vmov	r2, s6
 801bdae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bdb2:	9311      	str	r3, [sp, #68]	; 0x44
 801bdb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bdb6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdba:	9a03      	ldr	r2, [sp, #12]
 801bdbc:	9312      	str	r3, [sp, #72]	; 0x48
 801bdbe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bdc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bdc4:	eeb0 3a67 	vmov.f32	s6, s15
 801bdc8:	bf08      	it	eq
 801bdca:	4613      	moveq	r3, r2
 801bdcc:	eef0 2a47 	vmov.f32	s5, s14
 801bdd0:	e789      	b.n	801bce6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bdd2:	140f      	asrs	r7, r1, #16
 801bdd4:	d418      	bmi.n	801be08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bdd6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bdda:	42bd      	cmp	r5, r7
 801bddc:	dd14      	ble.n	801be08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bdde:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bde2:	d411      	bmi.n	801be08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bde4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801bde8:	4564      	cmp	r4, ip
 801bdea:	dd0d      	ble.n	801be08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bdec:	b22d      	sxth	r5, r5
 801bdee:	fb0c 7505 	mla	r5, ip, r5, r7
 801bdf2:	9c01      	ldr	r4, [sp, #4]
 801bdf4:	5d64      	ldrb	r4, [r4, r5]
 801bdf6:	2cff      	cmp	r4, #255	; 0xff
 801bdf8:	d10c      	bne.n	801be14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bdfa:	9c00      	ldr	r4, [sp, #0]
 801bdfc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801be00:	f06f 0401 	mvn.w	r4, #1
 801be04:	4374      	muls	r4, r6
 801be06:	5305      	strh	r5, [r0, r4]
 801be08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801be0a:	4421      	add	r1, r4
 801be0c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801be0e:	3e01      	subs	r6, #1
 801be10:	4422      	add	r2, r4
 801be12:	e79c      	b.n	801bd4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801be14:	2c00      	cmp	r4, #0
 801be16:	d0f7      	beq.n	801be08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801be18:	9f00      	ldr	r7, [sp, #0]
 801be1a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801be1e:	f06f 0501 	mvn.w	r5, #1
 801be22:	4375      	muls	r5, r6
 801be24:	9502      	str	r5, [sp, #8]
 801be26:	5b45      	ldrh	r5, [r0, r5]
 801be28:	fa1f fc84 	uxth.w	ip, r4
 801be2c:	122f      	asrs	r7, r5, #8
 801be2e:	43e4      	mvns	r4, r4
 801be30:	b2e4      	uxtb	r4, r4
 801be32:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801be36:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801be3a:	fb17 f704 	smulbb	r7, r7, r4
 801be3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801be42:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801be46:	00ed      	lsls	r5, r5, #3
 801be48:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801be4c:	b2ed      	uxtb	r5, r5
 801be4e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801be52:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801be56:	fb15 f504 	smulbb	r5, r5, r4
 801be5a:	fa5f f989 	uxtb.w	r9, r9
 801be5e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801be62:	fb09 550c 	mla	r5, r9, ip, r5
 801be66:	fb1a fa04 	smulbb	sl, sl, r4
 801be6a:	fa1f fe8e 	uxth.w	lr, lr
 801be6e:	b2ad      	uxth	r5, r5
 801be70:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801be74:	fb07 a70c 	mla	r7, r7, ip, sl
 801be78:	f10e 0401 	add.w	r4, lr, #1
 801be7c:	f105 0a01 	add.w	sl, r5, #1
 801be80:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801be84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801be88:	b2bf      	uxth	r7, r7
 801be8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801be8e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801be92:	ea4a 0e0e 	orr.w	lr, sl, lr
 801be96:	f107 0a01 	add.w	sl, r7, #1
 801be9a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801be9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bea2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bea6:	9c02      	ldr	r4, [sp, #8]
 801bea8:	ea4e 0e0a 	orr.w	lr, lr, sl
 801beac:	f820 e004 	strh.w	lr, [r0, r4]
 801beb0:	e7aa      	b.n	801be08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801beb2:	f04f 0900 	mov.w	r9, #0
 801beb6:	eba3 0409 	sub.w	r4, r3, r9
 801beba:	2c00      	cmp	r4, #0
 801bebc:	f77f af4a 	ble.w	801bd54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bec0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801bec4:	1414      	asrs	r4, r2, #16
 801bec6:	140d      	asrs	r5, r1, #16
 801bec8:	fb06 5504 	mla	r5, r6, r4, r5
 801becc:	9c01      	ldr	r4, [sp, #4]
 801bece:	5d64      	ldrb	r4, [r4, r5]
 801bed0:	2cff      	cmp	r4, #255	; 0xff
 801bed2:	d10b      	bne.n	801beec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bed4:	9c00      	ldr	r4, [sp, #0]
 801bed6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801beda:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801bede:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bee0:	4421      	add	r1, r4
 801bee2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bee4:	f109 0901 	add.w	r9, r9, #1
 801bee8:	4422      	add	r2, r4
 801beea:	e7e4      	b.n	801beb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801beec:	2c00      	cmp	r4, #0
 801beee:	d0f6      	beq.n	801bede <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bef0:	9e00      	ldr	r6, [sp, #0]
 801bef2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801bef6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801befa:	b2a7      	uxth	r7, r4
 801befc:	122e      	asrs	r6, r5, #8
 801befe:	43e4      	mvns	r4, r4
 801bf00:	b2e4      	uxtb	r4, r4
 801bf02:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bf06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bf0a:	fb16 f604 	smulbb	r6, r6, r4
 801bf0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bf12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bf16:	00ed      	lsls	r5, r5, #3
 801bf18:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bf1c:	b2ed      	uxtb	r5, r5
 801bf1e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bf22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bf26:	fb15 f504 	smulbb	r5, r5, r4
 801bf2a:	fa5f fe8e 	uxtb.w	lr, lr
 801bf2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bf32:	fb0e 5507 	mla	r5, lr, r7, r5
 801bf36:	fb1a fa04 	smulbb	sl, sl, r4
 801bf3a:	fa1f fc8c 	uxth.w	ip, ip
 801bf3e:	b2ad      	uxth	r5, r5
 801bf40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bf44:	fb06 a607 	mla	r6, r6, r7, sl
 801bf48:	f10c 0401 	add.w	r4, ip, #1
 801bf4c:	f105 0a01 	add.w	sl, r5, #1
 801bf50:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bf54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf58:	b2b6      	uxth	r6, r6
 801bf5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bf5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bf62:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bf66:	f106 0a01 	add.w	sl, r6, #1
 801bf6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bf6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bf76:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bf7a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bf7e:	e7ae      	b.n	801bede <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bf80:	b005      	add	sp, #20
 801bf82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bf86 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf8a:	b085      	sub	sp, #20
 801bf8c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bf8e:	9203      	str	r2, [sp, #12]
 801bf90:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801bf94:	9201      	str	r2, [sp, #4]
 801bf96:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801bf9a:	9100      	str	r1, [sp, #0]
 801bf9c:	6841      	ldr	r1, [r0, #4]
 801bf9e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801bfa2:	fb01 2404 	mla	r4, r1, r4, r2
 801bfa6:	6802      	ldr	r2, [r0, #0]
 801bfa8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bfac:	f8de 2000 	ldr.w	r2, [lr]
 801bfb0:	9202      	str	r2, [sp, #8]
 801bfb2:	9a01      	ldr	r2, [sp, #4]
 801bfb4:	43d6      	mvns	r6, r2
 801bfb6:	b2f6      	uxtb	r6, r6
 801bfb8:	9a00      	ldr	r2, [sp, #0]
 801bfba:	2a00      	cmp	r2, #0
 801bfbc:	dc03      	bgt.n	801bfc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801bfbe:	9a03      	ldr	r2, [sp, #12]
 801bfc0:	2a00      	cmp	r2, #0
 801bfc2:	f340 8124 	ble.w	801c20e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801bfc6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bfc8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801bfcc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801bfd0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bfd4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bfd6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bfda:	2b00      	cmp	r3, #0
 801bfdc:	dd0e      	ble.n	801bffc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bfde:	1408      	asrs	r0, r1, #16
 801bfe0:	d405      	bmi.n	801bfee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bfe2:	4560      	cmp	r0, ip
 801bfe4:	da03      	bge.n	801bfee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bfe6:	1410      	asrs	r0, r2, #16
 801bfe8:	d401      	bmi.n	801bfee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801bfea:	42b8      	cmp	r0, r7
 801bfec:	db07      	blt.n	801bffe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bfee:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bff0:	4401      	add	r1, r0
 801bff2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bff4:	3b01      	subs	r3, #1
 801bff6:	4402      	add	r2, r0
 801bff8:	3402      	adds	r4, #2
 801bffa:	e7ee      	b.n	801bfda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801bffc:	d06e      	beq.n	801c0dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801bffe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c000:	1e58      	subs	r0, r3, #1
 801c002:	fb05 1500 	mla	r5, r5, r0, r1
 801c006:	142d      	asrs	r5, r5, #16
 801c008:	d45c      	bmi.n	801c0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c00a:	4565      	cmp	r5, ip
 801c00c:	da5a      	bge.n	801c0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c00e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c010:	fb05 2000 	mla	r0, r5, r0, r2
 801c014:	1400      	asrs	r0, r0, #16
 801c016:	d455      	bmi.n	801c0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c018:	42b8      	cmp	r0, r7
 801c01a:	da53      	bge.n	801c0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801c01c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801c020:	4699      	mov	r9, r3
 801c022:	46a2      	mov	sl, r4
 801c024:	f1b9 0f00 	cmp.w	r9, #0
 801c028:	dd54      	ble.n	801c0d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801c02a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801c02e:	140d      	asrs	r5, r1, #16
 801c030:	1410      	asrs	r0, r2, #16
 801c032:	fb07 5000 	mla	r0, r7, r0, r5
 801c036:	9d02      	ldr	r5, [sp, #8]
 801c038:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801c03c:	f8ba 5000 	ldrh.w	r5, [sl]
 801c040:	122f      	asrs	r7, r5, #8
 801c042:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c046:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c04a:	fb17 f706 	smulbb	r7, r7, r6
 801c04e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801c052:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c056:	00ed      	lsls	r5, r5, #3
 801c058:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801c05c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801c060:	10c7      	asrs	r7, r0, #3
 801c062:	b2ed      	uxtb	r5, r5
 801c064:	00c0      	lsls	r0, r0, #3
 801c066:	fb18 f806 	smulbb	r8, r8, r6
 801c06a:	fb15 f506 	smulbb	r5, r5, r6
 801c06e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c072:	b2c0      	uxtb	r0, r0
 801c074:	fa1f fc8c 	uxth.w	ip, ip
 801c078:	fb07 870b 	mla	r7, r7, fp, r8
 801c07c:	fb00 500b 	mla	r0, r0, fp, r5
 801c080:	b280      	uxth	r0, r0
 801c082:	b2bf      	uxth	r7, r7
 801c084:	f10c 0501 	add.w	r5, ip, #1
 801c088:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c08c:	f107 0801 	add.w	r8, r7, #1
 801c090:	1c45      	adds	r5, r0, #1
 801c092:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c096:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801c09a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c09c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c0a0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c0a4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801c0a8:	ea45 0c0c 	orr.w	ip, r5, ip
 801c0ac:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c0b0:	4401      	add	r1, r0
 801c0b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c0b4:	ea4c 0c08 	orr.w	ip, ip, r8
 801c0b8:	f82a cb02 	strh.w	ip, [sl], #2
 801c0bc:	4402      	add	r2, r0
 801c0be:	f109 39ff 	add.w	r9, r9, #4294967295
 801c0c2:	e7af      	b.n	801c024 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c0c4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801c0c8:	f04f 0800 	mov.w	r8, #0
 801c0cc:	eb03 0008 	add.w	r0, r3, r8
 801c0d0:	2800      	cmp	r0, #0
 801c0d2:	dc41      	bgt.n	801c158 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c0d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c0d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c0dc:	9b00      	ldr	r3, [sp, #0]
 801c0de:	2b00      	cmp	r3, #0
 801c0e0:	f340 8095 	ble.w	801c20e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801c0e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c0e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c0ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c0f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c0f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c0f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c0fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c0fe:	eef0 6a62 	vmov.f32	s13, s5
 801c102:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c106:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c10a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c10e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801c112:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c116:	eef0 6a43 	vmov.f32	s13, s6
 801c11a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c11e:	ee12 2a90 	vmov	r2, s5
 801c122:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c126:	fb92 f3f3 	sdiv	r3, r2, r3
 801c12a:	ee13 2a10 	vmov	r2, s6
 801c12e:	9311      	str	r3, [sp, #68]	; 0x44
 801c130:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c132:	fb92 f3f3 	sdiv	r3, r2, r3
 801c136:	9312      	str	r3, [sp, #72]	; 0x48
 801c138:	9b00      	ldr	r3, [sp, #0]
 801c13a:	9a03      	ldr	r2, [sp, #12]
 801c13c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c140:	3b01      	subs	r3, #1
 801c142:	9300      	str	r3, [sp, #0]
 801c144:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801c148:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c14a:	eeb0 3a67 	vmov.f32	s6, s15
 801c14e:	bf08      	it	eq
 801c150:	4613      	moveq	r3, r2
 801c152:	eef0 2a47 	vmov.f32	s5, s14
 801c156:	e72f      	b.n	801bfb8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c158:	140f      	asrs	r7, r1, #16
 801c15a:	d451      	bmi.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c15c:	f8de 5008 	ldr.w	r5, [lr, #8]
 801c160:	42bd      	cmp	r5, r7
 801c162:	dd4d      	ble.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c164:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c168:	d44a      	bmi.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c16a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801c16e:	4560      	cmp	r0, ip
 801c170:	dd46      	ble.n	801c200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801c172:	b22d      	sxth	r5, r5
 801c174:	fb0c 7505 	mla	r5, ip, r5, r7
 801c178:	9802      	ldr	r0, [sp, #8]
 801c17a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801c17e:	f06f 0501 	mvn.w	r5, #1
 801c182:	fb05 fb08 	mul.w	fp, r5, r8
 801c186:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c18a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c18e:	122f      	asrs	r7, r5, #8
 801c190:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c194:	fb17 f706 	smulbb	r7, r7, r6
 801c198:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c19c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c1a0:	00ed      	lsls	r5, r5, #3
 801c1a2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c1a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c1aa:	10c7      	asrs	r7, r0, #3
 801c1ac:	b2ed      	uxtb	r5, r5
 801c1ae:	00c0      	lsls	r0, r0, #3
 801c1b0:	fb19 f906 	smulbb	r9, r9, r6
 801c1b4:	fb15 f506 	smulbb	r5, r5, r6
 801c1b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c1bc:	b2c0      	uxtb	r0, r0
 801c1be:	fa1f fc8c 	uxth.w	ip, ip
 801c1c2:	fb07 970a 	mla	r7, r7, sl, r9
 801c1c6:	fb00 500a 	mla	r0, r0, sl, r5
 801c1ca:	b2bf      	uxth	r7, r7
 801c1cc:	b280      	uxth	r0, r0
 801c1ce:	f10c 0501 	add.w	r5, ip, #1
 801c1d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c1d6:	f107 0901 	add.w	r9, r7, #1
 801c1da:	1c45      	adds	r5, r0, #1
 801c1dc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c1e0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c1e4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c1e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c1ec:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c1f0:	ea45 0c0c 	orr.w	ip, r5, ip
 801c1f4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c1f8:	ea4c 0c09 	orr.w	ip, ip, r9
 801c1fc:	f824 c00b 	strh.w	ip, [r4, fp]
 801c200:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c202:	4401      	add	r1, r0
 801c204:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c206:	f108 38ff 	add.w	r8, r8, #4294967295
 801c20a:	4402      	add	r2, r0
 801c20c:	e75e      	b.n	801c0cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c20e:	b005      	add	sp, #20
 801c210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c214 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c218:	b085      	sub	sp, #20
 801c21a:	4693      	mov	fp, r2
 801c21c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c21e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c220:	6870      	ldr	r0, [r6, #4]
 801c222:	9101      	str	r1, [sp, #4]
 801c224:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c228:	fb00 2404 	mla	r4, r0, r4, r2
 801c22c:	6832      	ldr	r2, [r6, #0]
 801c22e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c232:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c236:	682a      	ldr	r2, [r5, #0]
 801c238:	9202      	str	r2, [sp, #8]
 801c23a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c23e:	9a01      	ldr	r2, [sp, #4]
 801c240:	2a00      	cmp	r2, #0
 801c242:	dc03      	bgt.n	801c24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c244:	f1bb 0f00 	cmp.w	fp, #0
 801c248:	f340 809a 	ble.w	801c380 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c24c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c24e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c252:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c256:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c25a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c25c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c260:	2b00      	cmp	r3, #0
 801c262:	dd0c      	ble.n	801c27e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c264:	1406      	asrs	r6, r0, #16
 801c266:	d405      	bmi.n	801c274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c268:	454e      	cmp	r6, r9
 801c26a:	da03      	bge.n	801c274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c26c:	1416      	asrs	r6, r2, #16
 801c26e:	d401      	bmi.n	801c274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c270:	4546      	cmp	r6, r8
 801c272:	db05      	blt.n	801c280 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c274:	4470      	add	r0, lr
 801c276:	4462      	add	r2, ip
 801c278:	3b01      	subs	r3, #1
 801c27a:	3402      	adds	r4, #2
 801c27c:	e7f0      	b.n	801c260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c27e:	d00f      	beq.n	801c2a0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c280:	1e5e      	subs	r6, r3, #1
 801c282:	fb0e 0706 	mla	r7, lr, r6, r0
 801c286:	143f      	asrs	r7, r7, #16
 801c288:	d541      	bpl.n	801c30e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c28a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c28e:	4698      	mov	r8, r3
 801c290:	9603      	str	r6, [sp, #12]
 801c292:	f1b8 0f00 	cmp.w	r8, #0
 801c296:	dc56      	bgt.n	801c346 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c298:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c29c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c2a0:	9b01      	ldr	r3, [sp, #4]
 801c2a2:	2b00      	cmp	r3, #0
 801c2a4:	dd6c      	ble.n	801c380 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c2a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c2aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c2ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c2b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c2b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2bc:	eeb0 6a62 	vmov.f32	s12, s5
 801c2c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c2d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2d4:	eeb0 6a43 	vmov.f32	s12, s6
 801c2d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2dc:	ee12 2a90 	vmov	r2, s5
 801c2e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2e4:	fb92 fef3 	sdiv	lr, r2, r3
 801c2e8:	ee13 2a10 	vmov	r2, s6
 801c2ec:	fb92 fcf3 	sdiv	ip, r2, r3
 801c2f0:	9b01      	ldr	r3, [sp, #4]
 801c2f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2f6:	3b01      	subs	r3, #1
 801c2f8:	9301      	str	r3, [sp, #4]
 801c2fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c2fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c300:	eeb0 3a67 	vmov.f32	s6, s15
 801c304:	bf08      	it	eq
 801c306:	465b      	moveq	r3, fp
 801c308:	eef0 2a47 	vmov.f32	s5, s14
 801c30c:	e797      	b.n	801c23e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c30e:	454f      	cmp	r7, r9
 801c310:	dabb      	bge.n	801c28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c312:	fb0c 2606 	mla	r6, ip, r6, r2
 801c316:	1436      	asrs	r6, r6, #16
 801c318:	d4b7      	bmi.n	801c28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c31a:	4546      	cmp	r6, r8
 801c31c:	dab5      	bge.n	801c28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c31e:	461e      	mov	r6, r3
 801c320:	46a0      	mov	r8, r4
 801c322:	2e00      	cmp	r6, #0
 801c324:	ddb8      	ble.n	801c298 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c326:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c32a:	9902      	ldr	r1, [sp, #8]
 801c32c:	1417      	asrs	r7, r2, #16
 801c32e:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c332:	fb0a 9707 	mla	r7, sl, r7, r9
 801c336:	4470      	add	r0, lr
 801c338:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c33c:	f828 7b02 	strh.w	r7, [r8], #2
 801c340:	4462      	add	r2, ip
 801c342:	3e01      	subs	r6, #1
 801c344:	e7ed      	b.n	801c322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c346:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c34a:	d414      	bmi.n	801c376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c34c:	68ae      	ldr	r6, [r5, #8]
 801c34e:	454e      	cmp	r6, r9
 801c350:	dd11      	ble.n	801c376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c352:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c356:	d40e      	bmi.n	801c376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c358:	68ef      	ldr	r7, [r5, #12]
 801c35a:	4557      	cmp	r7, sl
 801c35c:	dd0b      	ble.n	801c376 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c35e:	b236      	sxth	r6, r6
 801c360:	fb0a 9606 	mla	r6, sl, r6, r9
 801c364:	9f02      	ldr	r7, [sp, #8]
 801c366:	f06f 0101 	mvn.w	r1, #1
 801c36a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c36e:	fb01 f608 	mul.w	r6, r1, r8
 801c372:	9903      	ldr	r1, [sp, #12]
 801c374:	538f      	strh	r7, [r1, r6]
 801c376:	4470      	add	r0, lr
 801c378:	4462      	add	r2, ip
 801c37a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c37e:	e788      	b.n	801c292 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c380:	b005      	add	sp, #20
 801c382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c386 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c386:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c38a:	b087      	sub	sp, #28
 801c38c:	468b      	mov	fp, r1
 801c38e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c390:	9203      	str	r2, [sp, #12]
 801c392:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c396:	9204      	str	r2, [sp, #16]
 801c398:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801c39c:	6841      	ldr	r1, [r0, #4]
 801c39e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c3a2:	fb01 2505 	mla	r5, r1, r5, r2
 801c3a6:	6802      	ldr	r2, [r0, #0]
 801c3a8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c3ac:	f8d9 2000 	ldr.w	r2, [r9]
 801c3b0:	9201      	str	r2, [sp, #4]
 801c3b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c3b6:	f1bb 0f00 	cmp.w	fp, #0
 801c3ba:	dc03      	bgt.n	801c3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c3bc:	9a03      	ldr	r2, [sp, #12]
 801c3be:	2a00      	cmp	r2, #0
 801c3c0:	f340 8159 	ble.w	801c676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c3c4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c3c6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c3ca:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c3ce:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c3d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c3d4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c3d8:	2b00      	cmp	r3, #0
 801c3da:	dd0e      	ble.n	801c3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c3dc:	1402      	asrs	r2, r0, #16
 801c3de:	d405      	bmi.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c3e0:	42ba      	cmp	r2, r7
 801c3e2:	da03      	bge.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c3e4:	140a      	asrs	r2, r1, #16
 801c3e6:	d401      	bmi.n	801c3ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c3e8:	42b2      	cmp	r2, r6
 801c3ea:	db07      	blt.n	801c3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c3ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c3ee:	4410      	add	r0, r2
 801c3f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c3f2:	3b01      	subs	r3, #1
 801c3f4:	4411      	add	r1, r2
 801c3f6:	3502      	adds	r5, #2
 801c3f8:	e7ee      	b.n	801c3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c3fa:	d017      	beq.n	801c42c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c3fc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c3fe:	1e5a      	subs	r2, r3, #1
 801c400:	fb04 0402 	mla	r4, r4, r2, r0
 801c404:	1424      	asrs	r4, r4, #16
 801c406:	d409      	bmi.n	801c41c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c408:	42bc      	cmp	r4, r7
 801c40a:	da07      	bge.n	801c41c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c40c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c40e:	fb04 1202 	mla	r2, r4, r2, r1
 801c412:	1412      	asrs	r2, r2, #16
 801c414:	d402      	bmi.n	801c41c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c416:	42b2      	cmp	r2, r6
 801c418:	f2c0 80bf 	blt.w	801c59a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c41c:	2700      	movs	r7, #0
 801c41e:	19da      	adds	r2, r3, r7
 801c420:	2a00      	cmp	r2, #0
 801c422:	dc3e      	bgt.n	801c4a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c424:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c428:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c42c:	f1bb 0f00 	cmp.w	fp, #0
 801c430:	f340 8121 	ble.w	801c676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c434:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c438:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c43c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c440:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c442:	f1bb 0b01 	subs.w	fp, fp, #1
 801c446:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c44a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c44e:	eeb0 6a62 	vmov.f32	s12, s5
 801c452:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c456:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c45a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c45e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c462:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c466:	eeb0 6a43 	vmov.f32	s12, s6
 801c46a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c46e:	ee12 2a90 	vmov	r2, s5
 801c472:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c476:	fb92 f3f3 	sdiv	r3, r2, r3
 801c47a:	ee13 2a10 	vmov	r2, s6
 801c47e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c482:	9313      	str	r3, [sp, #76]	; 0x4c
 801c484:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c486:	fb92 f3f3 	sdiv	r3, r2, r3
 801c48a:	9a03      	ldr	r2, [sp, #12]
 801c48c:	9314      	str	r3, [sp, #80]	; 0x50
 801c48e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c492:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c494:	eeb0 3a67 	vmov.f32	s6, s15
 801c498:	bf08      	it	eq
 801c49a:	4613      	moveq	r3, r2
 801c49c:	eef0 2a47 	vmov.f32	s5, s14
 801c4a0:	e789      	b.n	801c3b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c4a2:	1406      	asrs	r6, r0, #16
 801c4a4:	d42d      	bmi.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c4a6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801c4aa:	42b4      	cmp	r4, r6
 801c4ac:	dd29      	ble.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c4ae:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801c4b2:	d426      	bmi.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c4b4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c4b8:	4562      	cmp	r2, ip
 801c4ba:	dd22      	ble.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c4bc:	b224      	sxth	r4, r4
 801c4be:	9a01      	ldr	r2, [sp, #4]
 801c4c0:	fb0c 6404 	mla	r4, ip, r4, r6
 801c4c4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801c4c8:	0e22      	lsrs	r2, r4, #24
 801c4ca:	d01a      	beq.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c4cc:	9e04      	ldr	r6, [sp, #16]
 801c4ce:	4372      	muls	r2, r6
 801c4d0:	1c56      	adds	r6, r2, #1
 801c4d2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c4d6:	1212      	asrs	r2, r2, #8
 801c4d8:	0a26      	lsrs	r6, r4, #8
 801c4da:	2aff      	cmp	r2, #255	; 0xff
 801c4dc:	9605      	str	r6, [sp, #20]
 801c4de:	d116      	bne.n	801c50e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c4e0:	f06f 0201 	mvn.w	r2, #1
 801c4e4:	fb02 fc07 	mul.w	ip, r2, r7
 801c4e8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c4ec:	0962      	lsrs	r2, r4, #5
 801c4ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4f2:	f026 0607 	bic.w	r6, r6, #7
 801c4f6:	4316      	orrs	r6, r2
 801c4f8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c4fc:	4326      	orrs	r6, r4
 801c4fe:	f825 600c 	strh.w	r6, [r5, ip]
 801c502:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c504:	4410      	add	r0, r2
 801c506:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c508:	3f01      	subs	r7, #1
 801c50a:	4411      	add	r1, r2
 801c50c:	e787      	b.n	801c41e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c50e:	f06f 0601 	mvn.w	r6, #1
 801c512:	437e      	muls	r6, r7
 801c514:	fa1f fa82 	uxth.w	sl, r2
 801c518:	f835 8006 	ldrh.w	r8, [r5, r6]
 801c51c:	9602      	str	r6, [sp, #8]
 801c51e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c522:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801c526:	43d2      	mvns	r2, r2
 801c528:	b2d2      	uxtb	r2, r2
 801c52a:	fb1c fc0a 	smulbb	ip, ip, sl
 801c52e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c532:	fb0e ce02 	mla	lr, lr, r2, ip
 801c536:	b2e4      	uxtb	r4, r4
 801c538:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c53c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c540:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c544:	fa5f f888 	uxtb.w	r8, r8
 801c548:	fb14 f40a 	smulbb	r4, r4, sl
 801c54c:	fb08 4402 	mla	r4, r8, r2, r4
 801c550:	fa1f fe8e 	uxth.w	lr, lr
 801c554:	fb16 f60a 	smulbb	r6, r6, sl
 801c558:	b2a4      	uxth	r4, r4
 801c55a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c55e:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c562:	f10e 0201 	add.w	r2, lr, #1
 801c566:	1c66      	adds	r6, r4, #1
 801c568:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c56c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c570:	fa1f fc8c 	uxth.w	ip, ip
 801c574:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c578:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c57c:	ea46 0e0e 	orr.w	lr, r6, lr
 801c580:	f10c 0601 	add.w	r6, ip, #1
 801c584:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c588:	0976      	lsrs	r6, r6, #5
 801c58a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c58e:	9a02      	ldr	r2, [sp, #8]
 801c590:	ea4e 0e06 	orr.w	lr, lr, r6
 801c594:	f825 e002 	strh.w	lr, [r5, r2]
 801c598:	e7b3      	b.n	801c502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c59a:	f04f 0800 	mov.w	r8, #0
 801c59e:	eba3 0208 	sub.w	r2, r3, r8
 801c5a2:	2a00      	cmp	r2, #0
 801c5a4:	f77f af3e 	ble.w	801c424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c5a8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c5ac:	1404      	asrs	r4, r0, #16
 801c5ae:	140a      	asrs	r2, r1, #16
 801c5b0:	fb06 4202 	mla	r2, r6, r2, r4
 801c5b4:	9c01      	ldr	r4, [sp, #4]
 801c5b6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c5ba:	0e22      	lsrs	r2, r4, #24
 801c5bc:	d016      	beq.n	801c5ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c5be:	9e04      	ldr	r6, [sp, #16]
 801c5c0:	4372      	muls	r2, r6
 801c5c2:	1c56      	adds	r6, r2, #1
 801c5c4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c5c8:	1212      	asrs	r2, r2, #8
 801c5ca:	2aff      	cmp	r2, #255	; 0xff
 801c5cc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c5d0:	d113      	bne.n	801c5fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c5d2:	0962      	lsrs	r2, r4, #5
 801c5d4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c5d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c5dc:	f026 0607 	bic.w	r6, r6, #7
 801c5e0:	4316      	orrs	r6, r2
 801c5e2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c5e6:	4326      	orrs	r6, r4
 801c5e8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c5ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c5ee:	4410      	add	r0, r2
 801c5f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5f2:	f108 0801 	add.w	r8, r8, #1
 801c5f6:	4411      	add	r1, r2
 801c5f8:	e7d1      	b.n	801c59e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c5fa:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c5fe:	fa1f fa82 	uxth.w	sl, r2
 801c602:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c606:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c60a:	43d2      	mvns	r2, r2
 801c60c:	b2d2      	uxtb	r2, r2
 801c60e:	fb17 f70a 	smulbb	r7, r7, sl
 801c612:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c616:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c61a:	b2e4      	uxtb	r4, r4
 801c61c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c620:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c624:	fa5f fe8e 	uxtb.w	lr, lr
 801c628:	fb14 f40a 	smulbb	r4, r4, sl
 801c62c:	fb0e 4402 	mla	r4, lr, r2, r4
 801c630:	b2f6      	uxtb	r6, r6
 801c632:	fa1f fc8c 	uxth.w	ip, ip
 801c636:	fb16 f60a 	smulbb	r6, r6, sl
 801c63a:	b2a4      	uxth	r4, r4
 801c63c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c640:	fb07 6702 	mla	r7, r7, r2, r6
 801c644:	f10c 0201 	add.w	r2, ip, #1
 801c648:	1c66      	adds	r6, r4, #1
 801c64a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c64e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c652:	b2bf      	uxth	r7, r7
 801c654:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c658:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c65c:	ea46 0c0c 	orr.w	ip, r6, ip
 801c660:	1c7e      	adds	r6, r7, #1
 801c662:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c666:	0976      	lsrs	r6, r6, #5
 801c668:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c66c:	ea4c 0c06 	orr.w	ip, ip, r6
 801c670:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c674:	e7ba      	b.n	801c5ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c676:	b007      	add	sp, #28
 801c678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c67c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c67c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c680:	b085      	sub	sp, #20
 801c682:	468b      	mov	fp, r1
 801c684:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c686:	9203      	str	r2, [sp, #12]
 801c688:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c68c:	6841      	ldr	r1, [r0, #4]
 801c68e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c692:	fb01 2404 	mla	r4, r1, r4, r2
 801c696:	6802      	ldr	r2, [r0, #0]
 801c698:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c69c:	f8d8 2000 	ldr.w	r2, [r8]
 801c6a0:	9201      	str	r2, [sp, #4]
 801c6a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c6a6:	f1bb 0f00 	cmp.w	fp, #0
 801c6aa:	dc03      	bgt.n	801c6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c6ac:	9a03      	ldr	r2, [sp, #12]
 801c6ae:	2a00      	cmp	r2, #0
 801c6b0:	f340 814f 	ble.w	801c952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c6b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c6b6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c6ba:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c6be:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c6c2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c6c4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c6c8:	2b00      	cmp	r3, #0
 801c6ca:	dd0e      	ble.n	801c6ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c6cc:	1408      	asrs	r0, r1, #16
 801c6ce:	d405      	bmi.n	801c6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c6d0:	42b8      	cmp	r0, r7
 801c6d2:	da03      	bge.n	801c6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c6d4:	1410      	asrs	r0, r2, #16
 801c6d6:	d401      	bmi.n	801c6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c6d8:	42b0      	cmp	r0, r6
 801c6da:	db07      	blt.n	801c6ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c6dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c6de:	4401      	add	r1, r0
 801c6e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c6e2:	3b01      	subs	r3, #1
 801c6e4:	4402      	add	r2, r0
 801c6e6:	3402      	adds	r4, #2
 801c6e8:	e7ee      	b.n	801c6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c6ea:	d017      	beq.n	801c71c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c6ec:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c6ee:	1e58      	subs	r0, r3, #1
 801c6f0:	fb05 1500 	mla	r5, r5, r0, r1
 801c6f4:	142d      	asrs	r5, r5, #16
 801c6f6:	d409      	bmi.n	801c70c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c6f8:	42bd      	cmp	r5, r7
 801c6fa:	da07      	bge.n	801c70c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c6fc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c6fe:	fb05 2000 	mla	r0, r5, r0, r2
 801c702:	1400      	asrs	r0, r0, #16
 801c704:	d402      	bmi.n	801c70c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c706:	42b0      	cmp	r0, r6
 801c708:	f2c0 80ba 	blt.w	801c880 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c70c:	2600      	movs	r6, #0
 801c70e:	1998      	adds	r0, r3, r6
 801c710:	2800      	cmp	r0, #0
 801c712:	dc3e      	bgt.n	801c792 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c714:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c718:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c71c:	f1bb 0f00 	cmp.w	fp, #0
 801c720:	f340 8117 	ble.w	801c952 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c724:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c728:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c72c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c730:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c732:	f1bb 0b01 	subs.w	fp, fp, #1
 801c736:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c73a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c73e:	eeb0 6a62 	vmov.f32	s12, s5
 801c742:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c746:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c74a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c74e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c752:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c756:	eeb0 6a43 	vmov.f32	s12, s6
 801c75a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c75e:	ee12 2a90 	vmov	r2, s5
 801c762:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c766:	fb92 f3f3 	sdiv	r3, r2, r3
 801c76a:	ee13 2a10 	vmov	r2, s6
 801c76e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c772:	9311      	str	r3, [sp, #68]	; 0x44
 801c774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c776:	fb92 f3f3 	sdiv	r3, r2, r3
 801c77a:	9a03      	ldr	r2, [sp, #12]
 801c77c:	9312      	str	r3, [sp, #72]	; 0x48
 801c77e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c782:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c784:	eeb0 3a67 	vmov.f32	s6, s15
 801c788:	bf08      	it	eq
 801c78a:	4613      	moveq	r3, r2
 801c78c:	eef0 2a47 	vmov.f32	s5, s14
 801c790:	e789      	b.n	801c6a6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c792:	140f      	asrs	r7, r1, #16
 801c794:	d424      	bmi.n	801c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c796:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c79a:	42bd      	cmp	r5, r7
 801c79c:	dd20      	ble.n	801c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c79e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c7a2:	d41d      	bmi.n	801c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c7a4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c7a8:	4560      	cmp	r0, ip
 801c7aa:	dd19      	ble.n	801c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c7ac:	b22d      	sxth	r5, r5
 801c7ae:	fb0c 7505 	mla	r5, ip, r5, r7
 801c7b2:	9801      	ldr	r0, [sp, #4]
 801c7b4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c7b8:	0e07      	lsrs	r7, r0, #24
 801c7ba:	2fff      	cmp	r7, #255	; 0xff
 801c7bc:	d116      	bne.n	801c7ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c7be:	f06f 0501 	mvn.w	r5, #1
 801c7c2:	fb05 f706 	mul.w	r7, r5, r6
 801c7c6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c7ca:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c7ce:	0945      	lsrs	r5, r0, #5
 801c7d0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c7d4:	ea4c 0505 	orr.w	r5, ip, r5
 801c7d8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c7dc:	4305      	orrs	r5, r0
 801c7de:	53e5      	strh	r5, [r4, r7]
 801c7e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c7e2:	4401      	add	r1, r0
 801c7e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c7e6:	3e01      	subs	r6, #1
 801c7e8:	4402      	add	r2, r0
 801c7ea:	e790      	b.n	801c70e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c7ec:	b2fd      	uxtb	r5, r7
 801c7ee:	2f00      	cmp	r7, #0
 801c7f0:	d0f6      	beq.n	801c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c7f2:	f06f 0701 	mvn.w	r7, #1
 801c7f6:	4377      	muls	r7, r6
 801c7f8:	fa1f f985 	uxth.w	r9, r5
 801c7fc:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c800:	9702      	str	r7, [sp, #8]
 801c802:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c806:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c80a:	43ed      	mvns	r5, r5
 801c80c:	b2ed      	uxtb	r5, r5
 801c80e:	fb17 f709 	smulbb	r7, r7, r9
 801c812:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c816:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c81a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c81e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c822:	b2c0      	uxtb	r0, r0
 801c824:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c828:	fa5f fe8e 	uxtb.w	lr, lr
 801c82c:	fb10 f009 	smulbb	r0, r0, r9
 801c830:	fb0e 0005 	mla	r0, lr, r5, r0
 801c834:	b280      	uxth	r0, r0
 801c836:	fa1f fc8c 	uxth.w	ip, ip
 801c83a:	fb1a fa09 	smulbb	sl, sl, r9
 801c83e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c842:	fb07 a705 	mla	r7, r7, r5, sl
 801c846:	f100 0a01 	add.w	sl, r0, #1
 801c84a:	f10c 0501 	add.w	r5, ip, #1
 801c84e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c852:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c856:	b2bf      	uxth	r7, r7
 801c858:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c85c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c860:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c864:	f107 0a01 	add.w	sl, r7, #1
 801c868:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c86c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c870:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c874:	9802      	ldr	r0, [sp, #8]
 801c876:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c87a:	f824 c000 	strh.w	ip, [r4, r0]
 801c87e:	e7af      	b.n	801c7e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c880:	f04f 0e00 	mov.w	lr, #0
 801c884:	eba3 000e 	sub.w	r0, r3, lr
 801c888:	2800      	cmp	r0, #0
 801c88a:	f77f af43 	ble.w	801c714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c88e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c892:	140d      	asrs	r5, r1, #16
 801c894:	1410      	asrs	r0, r2, #16
 801c896:	fb06 5000 	mla	r0, r6, r0, r5
 801c89a:	9d01      	ldr	r5, [sp, #4]
 801c89c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c8a0:	0e2e      	lsrs	r6, r5, #24
 801c8a2:	2eff      	cmp	r6, #255	; 0xff
 801c8a4:	d112      	bne.n	801c8cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c8a6:	482c      	ldr	r0, [pc, #176]	; (801c958 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c8a8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c8ac:	0968      	lsrs	r0, r5, #5
 801c8ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c8b2:	4330      	orrs	r0, r6
 801c8b4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c8b8:	4328      	orrs	r0, r5
 801c8ba:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c8be:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c8c0:	4401      	add	r1, r0
 801c8c2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c8c4:	f10e 0e01 	add.w	lr, lr, #1
 801c8c8:	4402      	add	r2, r0
 801c8ca:	e7db      	b.n	801c884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c8cc:	b2f0      	uxtb	r0, r6
 801c8ce:	2e00      	cmp	r6, #0
 801c8d0:	d0f5      	beq.n	801c8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c8d2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c8d6:	fa1f f980 	uxth.w	r9, r0
 801c8da:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c8de:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c8e2:	43c0      	mvns	r0, r0
 801c8e4:	b2c0      	uxtb	r0, r0
 801c8e6:	fb16 f609 	smulbb	r6, r6, r9
 801c8ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c8ee:	fb07 6700 	mla	r7, r7, r0, r6
 801c8f2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c8f6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c8fa:	b2ed      	uxtb	r5, r5
 801c8fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c900:	fa5f fc8c 	uxtb.w	ip, ip
 801c904:	fb15 f509 	smulbb	r5, r5, r9
 801c908:	fb0c 5500 	mla	r5, ip, r0, r5
 801c90c:	b2bf      	uxth	r7, r7
 801c90e:	fb1a fa09 	smulbb	sl, sl, r9
 801c912:	b2ad      	uxth	r5, r5
 801c914:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c918:	fb06 a600 	mla	r6, r6, r0, sl
 801c91c:	1c78      	adds	r0, r7, #1
 801c91e:	f105 0a01 	add.w	sl, r5, #1
 801c922:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c926:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c92a:	b2b6      	uxth	r6, r6
 801c92c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c930:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c934:	ea4a 0707 	orr.w	r7, sl, r7
 801c938:	f106 0a01 	add.w	sl, r6, #1
 801c93c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c940:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c944:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c948:	ea47 070a 	orr.w	r7, r7, sl
 801c94c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c950:	e7b5      	b.n	801c8be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c952:	b005      	add	sp, #20
 801c954:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c958:	fffff800 	.word	0xfffff800

0801c95c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c960:	b087      	sub	sp, #28
 801c962:	468b      	mov	fp, r1
 801c964:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c966:	9203      	str	r2, [sp, #12]
 801c968:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c96c:	9204      	str	r2, [sp, #16]
 801c96e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c972:	6841      	ldr	r1, [r0, #4]
 801c974:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c978:	fb01 2404 	mla	r4, r1, r4, r2
 801c97c:	6802      	ldr	r2, [r0, #0]
 801c97e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c982:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c986:	3201      	adds	r2, #1
 801c988:	f022 0201 	bic.w	r2, r2, #1
 801c98c:	9200      	str	r2, [sp, #0]
 801c98e:	f8d9 2000 	ldr.w	r2, [r9]
 801c992:	9201      	str	r2, [sp, #4]
 801c994:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c998:	f1bb 0f00 	cmp.w	fp, #0
 801c99c:	dc03      	bgt.n	801c9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c99e:	9a03      	ldr	r2, [sp, #12]
 801c9a0:	2a00      	cmp	r2, #0
 801c9a2:	f340 8169 	ble.w	801cc78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c9a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c9a8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c9ac:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c9b0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c9b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c9b6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c9ba:	2b00      	cmp	r3, #0
 801c9bc:	dd0e      	ble.n	801c9dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c9be:	1402      	asrs	r2, r0, #16
 801c9c0:	d405      	bmi.n	801c9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9c2:	42ba      	cmp	r2, r7
 801c9c4:	da03      	bge.n	801c9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9c6:	140a      	asrs	r2, r1, #16
 801c9c8:	d401      	bmi.n	801c9ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c9ca:	42b2      	cmp	r2, r6
 801c9cc:	db07      	blt.n	801c9de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c9ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c9d0:	4410      	add	r0, r2
 801c9d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c9d4:	3b01      	subs	r3, #1
 801c9d6:	4411      	add	r1, r2
 801c9d8:	3402      	adds	r4, #2
 801c9da:	e7ee      	b.n	801c9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c9dc:	d017      	beq.n	801ca0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c9de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c9e0:	1e5a      	subs	r2, r3, #1
 801c9e2:	fb05 0502 	mla	r5, r5, r2, r0
 801c9e6:	142d      	asrs	r5, r5, #16
 801c9e8:	d409      	bmi.n	801c9fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c9ea:	42bd      	cmp	r5, r7
 801c9ec:	da07      	bge.n	801c9fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c9ee:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c9f0:	fb05 1202 	mla	r2, r5, r2, r1
 801c9f4:	1412      	asrs	r2, r2, #16
 801c9f6:	d402      	bmi.n	801c9fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c9f8:	42b2      	cmp	r2, r6
 801c9fa:	f2c0 80c7 	blt.w	801cb8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c9fe:	2700      	movs	r7, #0
 801ca00:	19da      	adds	r2, r3, r7
 801ca02:	2a00      	cmp	r2, #0
 801ca04:	dc3e      	bgt.n	801ca84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ca06:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ca0a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ca0e:	f1bb 0f00 	cmp.w	fp, #0
 801ca12:	f340 8131 	ble.w	801cc78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ca16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ca22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca24:	f1bb 0b01 	subs.w	fp, fp, #1
 801ca28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca30:	eeb0 6a62 	vmov.f32	s12, s5
 801ca34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca40:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ca44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca48:	eeb0 6a43 	vmov.f32	s12, s6
 801ca4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca50:	ee12 2a90 	vmov	r2, s5
 801ca54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca58:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca5c:	ee13 2a10 	vmov	r2, s6
 801ca60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ca64:	9313      	str	r3, [sp, #76]	; 0x4c
 801ca66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca68:	fb92 f3f3 	sdiv	r3, r2, r3
 801ca6c:	9a03      	ldr	r2, [sp, #12]
 801ca6e:	9314      	str	r3, [sp, #80]	; 0x50
 801ca70:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ca74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ca76:	eeb0 3a67 	vmov.f32	s6, s15
 801ca7a:	bf08      	it	eq
 801ca7c:	4613      	moveq	r3, r2
 801ca7e:	eef0 2a47 	vmov.f32	s5, s14
 801ca82:	e789      	b.n	801c998 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ca84:	1405      	asrs	r5, r0, #16
 801ca86:	d435      	bmi.n	801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca88:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801ca8c:	42aa      	cmp	r2, r5
 801ca8e:	dd31      	ble.n	801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca90:	140e      	asrs	r6, r1, #16
 801ca92:	d42f      	bmi.n	801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca94:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ca98:	42b2      	cmp	r2, r6
 801ca9a:	dd2b      	ble.n	801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca9c:	9a00      	ldr	r2, [sp, #0]
 801ca9e:	fb06 5502 	mla	r5, r6, r2, r5
 801caa2:	086a      	lsrs	r2, r5, #1
 801caa4:	9e01      	ldr	r6, [sp, #4]
 801caa6:	5cb2      	ldrb	r2, [r6, r2]
 801caa8:	07ee      	lsls	r6, r5, #31
 801caaa:	bf54      	ite	pl
 801caac:	f002 020f 	andpl.w	r2, r2, #15
 801cab0:	1112      	asrmi	r2, r2, #4
 801cab2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cab6:	b2d2      	uxtb	r2, r2
 801cab8:	b1e2      	cbz	r2, 801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801caba:	9d04      	ldr	r5, [sp, #16]
 801cabc:	436a      	muls	r2, r5
 801cabe:	1c55      	adds	r5, r2, #1
 801cac0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801cac4:	4d6e      	ldr	r5, [pc, #440]	; (801cc80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801cac6:	682d      	ldr	r5, [r5, #0]
 801cac8:	1212      	asrs	r2, r2, #8
 801caca:	0a2e      	lsrs	r6, r5, #8
 801cacc:	2aff      	cmp	r2, #255	; 0xff
 801cace:	9605      	str	r6, [sp, #20]
 801cad0:	d116      	bne.n	801cb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801cad2:	f06f 0201 	mvn.w	r2, #1
 801cad6:	fb02 fc07 	mul.w	ip, r2, r7
 801cada:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801cade:	096a      	lsrs	r2, r5, #5
 801cae0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cae4:	f026 0607 	bic.w	r6, r6, #7
 801cae8:	4316      	orrs	r6, r2
 801caea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801caee:	432e      	orrs	r6, r5
 801caf0:	f824 600c 	strh.w	r6, [r4, ip]
 801caf4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801caf6:	4410      	add	r0, r2
 801caf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cafa:	3f01      	subs	r7, #1
 801cafc:	4411      	add	r1, r2
 801cafe:	e77f      	b.n	801ca00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801cb00:	f06f 0601 	mvn.w	r6, #1
 801cb04:	437e      	muls	r6, r7
 801cb06:	fa1f fa82 	uxth.w	sl, r2
 801cb0a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801cb0e:	9602      	str	r6, [sp, #8]
 801cb10:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801cb14:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801cb18:	43d2      	mvns	r2, r2
 801cb1a:	b2d2      	uxtb	r2, r2
 801cb1c:	fb1c fc0a 	smulbb	ip, ip, sl
 801cb20:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801cb24:	fb0e ce02 	mla	lr, lr, r2, ip
 801cb28:	b2ed      	uxtb	r5, r5
 801cb2a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801cb2e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801cb32:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801cb36:	fa5f f888 	uxtb.w	r8, r8
 801cb3a:	fb15 f50a 	smulbb	r5, r5, sl
 801cb3e:	fb08 5502 	mla	r5, r8, r2, r5
 801cb42:	fa1f fe8e 	uxth.w	lr, lr
 801cb46:	fb16 f60a 	smulbb	r6, r6, sl
 801cb4a:	b2ad      	uxth	r5, r5
 801cb4c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801cb50:	fb0c 6c02 	mla	ip, ip, r2, r6
 801cb54:	f10e 0201 	add.w	r2, lr, #1
 801cb58:	1c6e      	adds	r6, r5, #1
 801cb5a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801cb5e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801cb62:	fa1f fc8c 	uxth.w	ip, ip
 801cb66:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cb6a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801cb6e:	ea46 0e0e 	orr.w	lr, r6, lr
 801cb72:	f10c 0601 	add.w	r6, ip, #1
 801cb76:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801cb7a:	0976      	lsrs	r6, r6, #5
 801cb7c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cb80:	9a02      	ldr	r2, [sp, #8]
 801cb82:	ea4e 0e06 	orr.w	lr, lr, r6
 801cb86:	f824 e002 	strh.w	lr, [r4, r2]
 801cb8a:	e7b3      	b.n	801caf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801cb8c:	f04f 0800 	mov.w	r8, #0
 801cb90:	eba3 0208 	sub.w	r2, r3, r8
 801cb94:	2a00      	cmp	r2, #0
 801cb96:	f77f af36 	ble.w	801ca06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801cb9a:	9e00      	ldr	r6, [sp, #0]
 801cb9c:	1402      	asrs	r2, r0, #16
 801cb9e:	140d      	asrs	r5, r1, #16
 801cba0:	fb06 2505 	mla	r5, r6, r5, r2
 801cba4:	086a      	lsrs	r2, r5, #1
 801cba6:	9e01      	ldr	r6, [sp, #4]
 801cba8:	5cb2      	ldrb	r2, [r6, r2]
 801cbaa:	07ed      	lsls	r5, r5, #31
 801cbac:	bf54      	ite	pl
 801cbae:	f002 020f 	andpl.w	r2, r2, #15
 801cbb2:	1112      	asrmi	r2, r2, #4
 801cbb4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cbb8:	b2d2      	uxtb	r2, r2
 801cbba:	b1c2      	cbz	r2, 801cbee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cbbc:	9d04      	ldr	r5, [sp, #16]
 801cbbe:	436a      	muls	r2, r5
 801cbc0:	1c55      	adds	r5, r2, #1
 801cbc2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801cbc6:	4d2e      	ldr	r5, [pc, #184]	; (801cc80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801cbc8:	1212      	asrs	r2, r2, #8
 801cbca:	682e      	ldr	r6, [r5, #0]
 801cbcc:	2aff      	cmp	r2, #255	; 0xff
 801cbce:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801cbd2:	d113      	bne.n	801cbfc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801cbd4:	0972      	lsrs	r2, r6, #5
 801cbd6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801cbda:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cbde:	f025 0507 	bic.w	r5, r5, #7
 801cbe2:	4315      	orrs	r5, r2
 801cbe4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cbe8:	4335      	orrs	r5, r6
 801cbea:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801cbee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cbf0:	4410      	add	r0, r2
 801cbf2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cbf4:	f108 0801 	add.w	r8, r8, #1
 801cbf8:	4411      	add	r1, r2
 801cbfa:	e7c9      	b.n	801cb90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801cbfc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801cc00:	fa1f fa82 	uxth.w	sl, r2
 801cc04:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801cc08:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801cc0c:	43d2      	mvns	r2, r2
 801cc0e:	b2d2      	uxtb	r2, r2
 801cc10:	fb17 f70a 	smulbb	r7, r7, sl
 801cc14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cc18:	fb0c 7c02 	mla	ip, ip, r2, r7
 801cc1c:	b2f6      	uxtb	r6, r6
 801cc1e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801cc22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801cc26:	fa5f fe8e 	uxtb.w	lr, lr
 801cc2a:	fb16 f60a 	smulbb	r6, r6, sl
 801cc2e:	fb0e 6602 	mla	r6, lr, r2, r6
 801cc32:	b2ed      	uxtb	r5, r5
 801cc34:	fa1f fc8c 	uxth.w	ip, ip
 801cc38:	fb15 f50a 	smulbb	r5, r5, sl
 801cc3c:	b2b6      	uxth	r6, r6
 801cc3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cc42:	fb07 5702 	mla	r7, r7, r2, r5
 801cc46:	f10c 0201 	add.w	r2, ip, #1
 801cc4a:	1c75      	adds	r5, r6, #1
 801cc4c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cc50:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cc54:	b2bf      	uxth	r7, r7
 801cc56:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cc5a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cc5e:	ea45 0c0c 	orr.w	ip, r5, ip
 801cc62:	1c7d      	adds	r5, r7, #1
 801cc64:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801cc68:	096d      	lsrs	r5, r5, #5
 801cc6a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cc6e:	ea4c 0c05 	orr.w	ip, ip, r5
 801cc72:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801cc76:	e7ba      	b.n	801cbee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801cc78:	b007      	add	sp, #28
 801cc7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc7e:	bf00      	nop
 801cc80:	2001384c 	.word	0x2001384c

0801cc84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc88:	b087      	sub	sp, #28
 801cc8a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801cf98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801cc8e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cc90:	9205      	str	r2, [sp, #20]
 801cc92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cc96:	9101      	str	r1, [sp, #4]
 801cc98:	6841      	ldr	r1, [r0, #4]
 801cc9a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801cc9e:	fb01 2404 	mla	r4, r1, r4, r2
 801cca2:	6802      	ldr	r2, [r0, #0]
 801cca4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cca8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ccac:	3201      	adds	r2, #1
 801ccae:	f022 0201 	bic.w	r2, r2, #1
 801ccb2:	9202      	str	r2, [sp, #8]
 801ccb4:	f8db 2000 	ldr.w	r2, [fp]
 801ccb8:	9203      	str	r2, [sp, #12]
 801ccba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ccbe:	9a01      	ldr	r2, [sp, #4]
 801ccc0:	2a00      	cmp	r2, #0
 801ccc2:	dc03      	bgt.n	801cccc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ccc4:	9a05      	ldr	r2, [sp, #20]
 801ccc6:	2a00      	cmp	r2, #0
 801ccc8:	f340 8162 	ble.w	801cf90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cccc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ccce:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801ccd2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801ccd6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ccda:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ccdc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cce0:	2b00      	cmp	r3, #0
 801cce2:	dd0e      	ble.n	801cd02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cce4:	1402      	asrs	r2, r0, #16
 801cce6:	d405      	bmi.n	801ccf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cce8:	42ba      	cmp	r2, r7
 801ccea:	da03      	bge.n	801ccf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ccec:	140a      	asrs	r2, r1, #16
 801ccee:	d401      	bmi.n	801ccf4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ccf0:	42b2      	cmp	r2, r6
 801ccf2:	db07      	blt.n	801cd04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ccf4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ccf6:	4410      	add	r0, r2
 801ccf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ccfa:	3b01      	subs	r3, #1
 801ccfc:	4411      	add	r1, r2
 801ccfe:	3402      	adds	r4, #2
 801cd00:	e7ee      	b.n	801cce0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cd02:	d017      	beq.n	801cd34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801cd04:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cd06:	1e5a      	subs	r2, r3, #1
 801cd08:	fb05 0502 	mla	r5, r5, r2, r0
 801cd0c:	142d      	asrs	r5, r5, #16
 801cd0e:	d409      	bmi.n	801cd24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cd10:	42bd      	cmp	r5, r7
 801cd12:	da07      	bge.n	801cd24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cd14:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cd16:	fb05 1202 	mla	r2, r5, r2, r1
 801cd1a:	1412      	asrs	r2, r2, #16
 801cd1c:	d402      	bmi.n	801cd24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cd1e:	42b2      	cmp	r2, r6
 801cd20:	f2c0 80c3 	blt.w	801ceaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801cd24:	2500      	movs	r5, #0
 801cd26:	195a      	adds	r2, r3, r5
 801cd28:	2a00      	cmp	r2, #0
 801cd2a:	dc3f      	bgt.n	801cdac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cd2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cd30:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cd34:	9b01      	ldr	r3, [sp, #4]
 801cd36:	2b00      	cmp	r3, #0
 801cd38:	f340 812a 	ble.w	801cf90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cd3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cd40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cd44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cd48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd4a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cd4e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cd52:	eeb0 6a62 	vmov.f32	s12, s5
 801cd56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cd5a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd5e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cd62:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cd66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cd6a:	eeb0 6a43 	vmov.f32	s12, s6
 801cd6e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cd72:	ee12 2a90 	vmov	r2, s5
 801cd76:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cd7a:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd7e:	ee13 2a10 	vmov	r2, s6
 801cd82:	9313      	str	r3, [sp, #76]	; 0x4c
 801cd84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd86:	fb92 f3f3 	sdiv	r3, r2, r3
 801cd8a:	9314      	str	r3, [sp, #80]	; 0x50
 801cd8c:	9b01      	ldr	r3, [sp, #4]
 801cd8e:	9a05      	ldr	r2, [sp, #20]
 801cd90:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cd94:	3b01      	subs	r3, #1
 801cd96:	9301      	str	r3, [sp, #4]
 801cd98:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cd9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cd9e:	eeb0 3a67 	vmov.f32	s6, s15
 801cda2:	bf08      	it	eq
 801cda4:	4613      	moveq	r3, r2
 801cda6:	eef0 2a47 	vmov.f32	s5, s14
 801cdaa:	e788      	b.n	801ccbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cdac:	1406      	asrs	r6, r0, #16
 801cdae:	d42c      	bmi.n	801ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdb0:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cdb4:	42b2      	cmp	r2, r6
 801cdb6:	dd28      	ble.n	801ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdb8:	140f      	asrs	r7, r1, #16
 801cdba:	d426      	bmi.n	801ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdbc:	f8db 200c 	ldr.w	r2, [fp, #12]
 801cdc0:	42ba      	cmp	r2, r7
 801cdc2:	dd22      	ble.n	801ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cdc4:	9a02      	ldr	r2, [sp, #8]
 801cdc6:	fb07 6602 	mla	r6, r7, r2, r6
 801cdca:	0872      	lsrs	r2, r6, #1
 801cdcc:	9f03      	ldr	r7, [sp, #12]
 801cdce:	5cba      	ldrb	r2, [r7, r2]
 801cdd0:	07f6      	lsls	r6, r6, #31
 801cdd2:	bf54      	ite	pl
 801cdd4:	f002 020f 	andpl.w	r2, r2, #15
 801cdd8:	1112      	asrmi	r2, r2, #4
 801cdda:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cdde:	b2d2      	uxtb	r2, r2
 801cde0:	2aff      	cmp	r2, #255	; 0xff
 801cde2:	d118      	bne.n	801ce16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801cde4:	f8d8 2000 	ldr.w	r2, [r8]
 801cde8:	f06f 0601 	mvn.w	r6, #1
 801cdec:	fb06 f705 	mul.w	r7, r6, r5
 801cdf0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801cdf4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801cdf8:	0956      	lsrs	r6, r2, #5
 801cdfa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cdfe:	ea4c 0606 	orr.w	r6, ip, r6
 801ce02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ce06:	4316      	orrs	r6, r2
 801ce08:	53e6      	strh	r6, [r4, r7]
 801ce0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ce0c:	4410      	add	r0, r2
 801ce0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ce10:	3d01      	subs	r5, #1
 801ce12:	4411      	add	r1, r2
 801ce14:	e787      	b.n	801cd26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ce16:	2a00      	cmp	r2, #0
 801ce18:	d0f7      	beq.n	801ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ce1a:	f06f 0601 	mvn.w	r6, #1
 801ce1e:	436e      	muls	r6, r5
 801ce20:	f8d8 c000 	ldr.w	ip, [r8]
 801ce24:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ce28:	9604      	str	r6, [sp, #16]
 801ce2a:	fa1f f982 	uxth.w	r9, r2
 801ce2e:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ce32:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ce36:	43d2      	mvns	r2, r2
 801ce38:	b2d2      	uxtb	r2, r2
 801ce3a:	fb16 f609 	smulbb	r6, r6, r9
 801ce3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ce42:	fb07 6702 	mla	r7, r7, r2, r6
 801ce46:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ce4a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ce4e:	fa5f fc8c 	uxtb.w	ip, ip
 801ce52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ce56:	fa5f fe8e 	uxtb.w	lr, lr
 801ce5a:	fb1c fc09 	smulbb	ip, ip, r9
 801ce5e:	fb0e cc02 	mla	ip, lr, r2, ip
 801ce62:	b2bf      	uxth	r7, r7
 801ce64:	fb1a fa09 	smulbb	sl, sl, r9
 801ce68:	fa1f fc8c 	uxth.w	ip, ip
 801ce6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ce70:	fb06 a602 	mla	r6, r6, r2, sl
 801ce74:	1c7a      	adds	r2, r7, #1
 801ce76:	f10c 0a01 	add.w	sl, ip, #1
 801ce7a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ce7e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ce82:	b2b6      	uxth	r6, r6
 801ce84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ce88:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ce8c:	ea4a 0707 	orr.w	r7, sl, r7
 801ce90:	f106 0a01 	add.w	sl, r6, #1
 801ce94:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ce98:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ce9c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cea0:	9a04      	ldr	r2, [sp, #16]
 801cea2:	ea47 070a 	orr.w	r7, r7, sl
 801cea6:	52a7      	strh	r7, [r4, r2]
 801cea8:	e7af      	b.n	801ce0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ceaa:	f04f 0e00 	mov.w	lr, #0
 801ceae:	eba3 020e 	sub.w	r2, r3, lr
 801ceb2:	2a00      	cmp	r2, #0
 801ceb4:	f77f af3a 	ble.w	801cd2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ceb8:	9e02      	ldr	r6, [sp, #8]
 801ceba:	1402      	asrs	r2, r0, #16
 801cebc:	140d      	asrs	r5, r1, #16
 801cebe:	fb06 2505 	mla	r5, r6, r5, r2
 801cec2:	086a      	lsrs	r2, r5, #1
 801cec4:	9e03      	ldr	r6, [sp, #12]
 801cec6:	5cb2      	ldrb	r2, [r6, r2]
 801cec8:	07ed      	lsls	r5, r5, #31
 801ceca:	bf54      	ite	pl
 801cecc:	f002 020f 	andpl.w	r2, r2, #15
 801ced0:	1112      	asrmi	r2, r2, #4
 801ced2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ced6:	b2d2      	uxtb	r2, r2
 801ced8:	2aff      	cmp	r2, #255	; 0xff
 801ceda:	d115      	bne.n	801cf08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801cedc:	f8d8 5000 	ldr.w	r5, [r8]
 801cee0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801cee4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801cee8:	096a      	lsrs	r2, r5, #5
 801ceea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ceee:	4332      	orrs	r2, r6
 801cef0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cef4:	432a      	orrs	r2, r5
 801cef6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801cefa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cefc:	4410      	add	r0, r2
 801cefe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cf00:	f10e 0e01 	add.w	lr, lr, #1
 801cf04:	4411      	add	r1, r2
 801cf06:	e7d2      	b.n	801ceae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cf08:	2a00      	cmp	r2, #0
 801cf0a:	d0f6      	beq.n	801cefa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cf0c:	f8d8 7000 	ldr.w	r7, [r8]
 801cf10:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801cf14:	fa1f f982 	uxth.w	r9, r2
 801cf18:	ea4f 262c 	mov.w	r6, ip, asr #8
 801cf1c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801cf20:	43d2      	mvns	r2, r2
 801cf22:	b2d2      	uxtb	r2, r2
 801cf24:	fb15 f509 	smulbb	r5, r5, r9
 801cf28:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cf2c:	fb06 5602 	mla	r6, r6, r2, r5
 801cf30:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801cf34:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cf38:	b2ff      	uxtb	r7, r7
 801cf3a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cf3e:	fa5f fc8c 	uxtb.w	ip, ip
 801cf42:	fb17 f709 	smulbb	r7, r7, r9
 801cf46:	fb0c 7702 	mla	r7, ip, r2, r7
 801cf4a:	b2b6      	uxth	r6, r6
 801cf4c:	fb1a fa09 	smulbb	sl, sl, r9
 801cf50:	b2bf      	uxth	r7, r7
 801cf52:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cf56:	fb05 a502 	mla	r5, r5, r2, sl
 801cf5a:	1c72      	adds	r2, r6, #1
 801cf5c:	f107 0a01 	add.w	sl, r7, #1
 801cf60:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801cf64:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801cf68:	b2ad      	uxth	r5, r5
 801cf6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cf6e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cf72:	ea4a 0606 	orr.w	r6, sl, r6
 801cf76:	f105 0a01 	add.w	sl, r5, #1
 801cf7a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cf7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cf82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cf86:	ea46 060a 	orr.w	r6, r6, sl
 801cf8a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801cf8e:	e7b4      	b.n	801cefa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cf90:	b007      	add	sp, #28
 801cf92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf96:	bf00      	nop
 801cf98:	2001384c 	.word	0x2001384c

0801cf9c <_ZN8touchgfx8LCD16bppD1Ev>:
 801cf9c:	4770      	bx	lr

0801cf9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801cf9e:	4770      	bx	lr

0801cfa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801cfa0:	4770      	bx	lr

0801cfa2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801cfa2:	4770      	bx	lr

0801cfa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801cfa4:	4770      	bx	lr

0801cfa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801cfa6:	4770      	bx	lr

0801cfa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801cfa8:	4770      	bx	lr

0801cfaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801cfaa:	4770      	bx	lr

0801cfac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801cfac:	4770      	bx	lr

0801cfae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801cfae:	4770      	bx	lr

0801cfb0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801cfb0:	4770      	bx	lr

0801cfb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801cfb2:	4770      	bx	lr

0801cfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801cfb4:	4770      	bx	lr

0801cfb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801cfb6:	4770      	bx	lr

0801cfb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801cfb8:	4770      	bx	lr

0801cfba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801cfba:	4770      	bx	lr

0801cfbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801cfbc:	4770      	bx	lr

0801cfbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801cfbe:	4770      	bx	lr

0801cfc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801cfc0:	4770      	bx	lr

0801cfc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801cfc2:	4770      	bx	lr

0801cfc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801cfc4:	4770      	bx	lr

0801cfc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801cfc6:	4770      	bx	lr

0801cfc8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801cfc8:	4770      	bx	lr

0801cfca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801cfca:	4770      	bx	lr

0801cfcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801cfcc:	4770      	bx	lr

0801cfce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801cfce:	4770      	bx	lr

0801cfd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801cfd0:	4770      	bx	lr

0801cfd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801cfd2:	4770      	bx	lr

0801cfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801cfd4:	4770      	bx	lr

0801cfd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801cfd6:	4770      	bx	lr

0801cfd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801cfd8:	4770      	bx	lr

0801cfda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801cfda:	4770      	bx	lr

0801cfdc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801cfdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cfe0:	b088      	sub	sp, #32
 801cfe2:	ac08      	add	r4, sp, #32
 801cfe4:	4606      	mov	r6, r0
 801cfe6:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801cfea:	4620      	mov	r0, r4
 801cfec:	4688      	mov	r8, r1
 801cfee:	4691      	mov	r9, r2
 801cff0:	f7fd fc62 	bl	801a8b8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801cff4:	6833      	ldr	r3, [r6, #0]
 801cff6:	4605      	mov	r5, r0
 801cff8:	4620      	mov	r0, r4
 801cffa:	699f      	ldr	r7, [r3, #24]
 801cffc:	f7fd fb70 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d000:	4682      	mov	sl, r0
 801d002:	4620      	mov	r0, r4
 801d004:	f7fd fba0 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d008:	9500      	str	r5, [sp, #0]
 801d00a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801d00e:	464b      	mov	r3, r9
 801d010:	a806      	add	r0, sp, #24
 801d012:	4642      	mov	r2, r8
 801d014:	4631      	mov	r1, r6
 801d016:	47b8      	blx	r7
 801d018:	4628      	mov	r0, r5
 801d01a:	b008      	add	sp, #32
 801d01c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801d020 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801d020:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d024:	2300      	movs	r3, #0
 801d026:	9300      	str	r3, [sp, #0]
 801d028:	4b3d      	ldr	r3, [pc, #244]	; (801d120 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801d02a:	781b      	ldrb	r3, [r3, #0]
 801d02c:	2b00      	cmp	r3, #0
 801d02e:	d137      	bne.n	801d0a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801d030:	4a3c      	ldr	r2, [pc, #240]	; (801d124 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d032:	f9b2 2000 	ldrsh.w	r2, [r2]
 801d036:	f8ad 2004 	strh.w	r2, [sp, #4]
 801d03a:	2b00      	cmp	r3, #0
 801d03c:	d132      	bne.n	801d0a4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801d03e:	4b3a      	ldr	r3, [pc, #232]	; (801d128 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d040:	f9b3 3000 	ldrsh.w	r3, [r3]
 801d044:	6808      	ldr	r0, [r1, #0]
 801d046:	6849      	ldr	r1, [r1, #4]
 801d048:	f8ad 3006 	strh.w	r3, [sp, #6]
 801d04c:	ac02      	add	r4, sp, #8
 801d04e:	ab02      	add	r3, sp, #8
 801d050:	c303      	stmia	r3!, {r0, r1}
 801d052:	4669      	mov	r1, sp
 801d054:	4620      	mov	r0, r4
 801d056:	f7f9 fd83 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d05a:	4668      	mov	r0, sp
 801d05c:	f7f9 fd3c 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d060:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801d064:	f8bd 2000 	ldrh.w	r2, [sp]
 801d068:	4d30      	ldr	r5, [pc, #192]	; (801d12c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801d06a:	4413      	add	r3, r2
 801d06c:	f8ad 3008 	strh.w	r3, [sp, #8]
 801d070:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801d074:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801d078:	6828      	ldr	r0, [r5, #0]
 801d07a:	4413      	add	r3, r2
 801d07c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801d080:	6803      	ldr	r3, [r0, #0]
 801d082:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d084:	4798      	blx	r3
 801d086:	f010 0f01 	tst.w	r0, #1
 801d08a:	462f      	mov	r7, r5
 801d08c:	d00c      	beq.n	801d0a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801d08e:	6828      	ldr	r0, [r5, #0]
 801d090:	6803      	ldr	r3, [r0, #0]
 801d092:	e894 0006 	ldmia.w	r4, {r1, r2}
 801d096:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801d098:	4798      	blx	r3
 801d09a:	b004      	add	sp, #16
 801d09c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d0a0:	4a21      	ldr	r2, [pc, #132]	; (801d128 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801d0a2:	e7c6      	b.n	801d032 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801d0a4:	4b1f      	ldr	r3, [pc, #124]	; (801d124 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d0a6:	e7cb      	b.n	801d040 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801d0a8:	6838      	ldr	r0, [r7, #0]
 801d0aa:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801d0ae:	6803      	ldr	r3, [r0, #0]
 801d0b0:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801d0b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801d0b6:	4798      	blx	r3
 801d0b8:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801d0bc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d0c0:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801d0c4:	fb16 3602 	smlabb	r6, r6, r2, r3
 801d0c8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d0cc:	6838      	ldr	r0, [r7, #0]
 801d0ce:	6803      	ldr	r3, [r0, #0]
 801d0d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d0d2:	4798      	blx	r3
 801d0d4:	4a13      	ldr	r2, [pc, #76]	; (801d124 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801d0d6:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801d0da:	8813      	ldrh	r3, [r2, #0]
 801d0dc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801d0e0:	fb03 1404 	mla	r4, r3, r4, r1
 801d0e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d0e8:	435d      	muls	r5, r3
 801d0ea:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d0ee:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801d0f2:	4691      	mov	r9, r2
 801d0f4:	6838      	ldr	r0, [r7, #0]
 801d0f6:	42ac      	cmp	r4, r5
 801d0f8:	6803      	ldr	r3, [r0, #0]
 801d0fa:	d20e      	bcs.n	801d11a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801d0fc:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801d100:	4632      	mov	r2, r6
 801d102:	4643      	mov	r3, r8
 801d104:	4621      	mov	r1, r4
 801d106:	47d0      	blx	sl
 801d108:	f8b9 3000 	ldrh.w	r3, [r9]
 801d10c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d110:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801d114:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d118:	e7ec      	b.n	801d0f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801d11a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d11c:	4798      	blx	r3
 801d11e:	e7bc      	b.n	801d09a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801d120:	20013834 	.word	0x20013834
 801d124:	20013836 	.word	0x20013836
 801d128:	20013838 	.word	0x20013838
 801d12c:	2001383c 	.word	0x2001383c

0801d130 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801d130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d134:	b08b      	sub	sp, #44	; 0x2c
 801d136:	460f      	mov	r7, r1
 801d138:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801d13c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801d140:	4616      	mov	r6, r2
 801d142:	f1bb 0f00 	cmp.w	fp, #0
 801d146:	d04a      	beq.n	801d1de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d148:	6810      	ldr	r0, [r2, #0]
 801d14a:	6851      	ldr	r1, [r2, #4]
 801d14c:	ad06      	add	r5, sp, #24
 801d14e:	c503      	stmia	r5!, {r0, r1}
 801d150:	6818      	ldr	r0, [r3, #0]
 801d152:	6859      	ldr	r1, [r3, #4]
 801d154:	ad08      	add	r5, sp, #32
 801d156:	c503      	stmia	r5!, {r0, r1}
 801d158:	a806      	add	r0, sp, #24
 801d15a:	f7f9 fcbd 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d15e:	4631      	mov	r1, r6
 801d160:	a808      	add	r0, sp, #32
 801d162:	f7f9 fcfd 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d166:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801d16a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801d16e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801d172:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801d176:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801d17a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801d17e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801d182:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801d186:	4f5f      	ldr	r7, [pc, #380]	; (801d304 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d188:	440a      	add	r2, r1
 801d18a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801d18e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801d192:	6838      	ldr	r0, [r7, #0]
 801d194:	4413      	add	r3, r2
 801d196:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801d19a:	6803      	ldr	r3, [r0, #0]
 801d19c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d19e:	4798      	blx	r3
 801d1a0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d1a4:	46b9      	mov	r9, r7
 801d1a6:	d11d      	bne.n	801d1e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d1a8:	b9fc      	cbnz	r4, 801d1ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d1aa:	f010 0f01 	tst.w	r0, #1
 801d1ae:	d01c      	beq.n	801d1ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d1b0:	f8d9 0000 	ldr.w	r0, [r9]
 801d1b4:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801d1b8:	6801      	ldr	r1, [r0, #0]
 801d1ba:	f8cd b00c 	str.w	fp, [sp, #12]
 801d1be:	2700      	movs	r7, #0
 801d1c0:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d1c4:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d1c8:	9402      	str	r4, [sp, #8]
 801d1ca:	b2ad      	uxth	r5, r5
 801d1cc:	fa1f f488 	uxth.w	r4, r8
 801d1d0:	9501      	str	r5, [sp, #4]
 801d1d2:	9400      	str	r4, [sp, #0]
 801d1d4:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801d1d6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d1da:	4631      	mov	r1, r6
 801d1dc:	47a0      	blx	r4
 801d1de:	b00b      	add	sp, #44	; 0x2c
 801d1e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1e4:	f010 0f04 	tst.w	r0, #4
 801d1e8:	e7e1      	b.n	801d1ae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d1ea:	f8d9 0000 	ldr.w	r0, [r9]
 801d1ee:	6803      	ldr	r3, [r0, #0]
 801d1f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1f2:	4798      	blx	r3
 801d1f4:	4b44      	ldr	r3, [pc, #272]	; (801d308 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d1f6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801d1fa:	881a      	ldrh	r2, [r3, #0]
 801d1fc:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d200:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d204:	fb02 1404 	mla	r4, r2, r4, r1
 801d208:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d20c:	469a      	mov	sl, r3
 801d20e:	fb05 f502 	mul.w	r5, r5, r2
 801d212:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d216:	d059      	beq.n	801d2cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d218:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801d21c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d220:	fa1f f28b 	uxth.w	r2, fp
 801d224:	fa1f f989 	uxth.w	r9, r9
 801d228:	469e      	mov	lr, r3
 801d22a:	42ac      	cmp	r4, r5
 801d22c:	d264      	bcs.n	801d2f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d22e:	eb04 0a07 	add.w	sl, r4, r7
 801d232:	4554      	cmp	r4, sl
 801d234:	d23d      	bcs.n	801d2b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d236:	8821      	ldrh	r1, [r4, #0]
 801d238:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d23c:	1208      	asrs	r0, r1, #8
 801d23e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d242:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d246:	fb10 f009 	smulbb	r0, r0, r9
 801d24a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d24e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d252:	00c9      	lsls	r1, r1, #3
 801d254:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d258:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d25c:	10d8      	asrs	r0, r3, #3
 801d25e:	b2c9      	uxtb	r1, r1
 801d260:	00db      	lsls	r3, r3, #3
 801d262:	fa1f fc8c 	uxth.w	ip, ip
 801d266:	fb1b fb09 	smulbb	fp, fp, r9
 801d26a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d26e:	b2db      	uxtb	r3, r3
 801d270:	fb11 f109 	smulbb	r1, r1, r9
 801d274:	fb00 b002 	mla	r0, r0, r2, fp
 801d278:	fb03 1302 	mla	r3, r3, r2, r1
 801d27c:	f10c 0b01 	add.w	fp, ip, #1
 801d280:	b29b      	uxth	r3, r3
 801d282:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d286:	b280      	uxth	r0, r0
 801d288:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801d28c:	f103 0c01 	add.w	ip, r3, #1
 801d290:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d294:	1c43      	adds	r3, r0, #1
 801d296:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d29a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d29e:	0940      	lsrs	r0, r0, #5
 801d2a0:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d2a4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2a8:	ea4c 0c00 	orr.w	ip, ip, r0
 801d2ac:	f824 cb02 	strh.w	ip, [r4], #2
 801d2b0:	e7bf      	b.n	801d232 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d2b2:	f8be 3000 	ldrh.w	r3, [lr]
 801d2b6:	eba3 0308 	sub.w	r3, r3, r8
 801d2ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d2be:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d2c2:	eba3 0308 	sub.w	r3, r3, r8
 801d2c6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d2ca:	e7ae      	b.n	801d22a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d2cc:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d2d0:	f8d9 0000 	ldr.w	r0, [r9]
 801d2d4:	42ac      	cmp	r4, r5
 801d2d6:	6803      	ldr	r3, [r0, #0]
 801d2d8:	d20e      	bcs.n	801d2f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d2da:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801d2de:	4632      	mov	r2, r6
 801d2e0:	463b      	mov	r3, r7
 801d2e2:	4621      	mov	r1, r4
 801d2e4:	47c0      	blx	r8
 801d2e6:	f8ba 3000 	ldrh.w	r3, [sl]
 801d2ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d2ee:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d2f2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d2f6:	e7eb      	b.n	801d2d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d2f8:	4b02      	ldr	r3, [pc, #8]	; (801d304 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d2fa:	6818      	ldr	r0, [r3, #0]
 801d2fc:	6803      	ldr	r3, [r0, #0]
 801d2fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d300:	4798      	blx	r3
 801d302:	e76c      	b.n	801d1de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d304:	2001383c 	.word	0x2001383c
 801d308:	20013836 	.word	0x20013836

0801d30c <_ZN8touchgfx8LCD16bppD0Ev>:
 801d30c:	b510      	push	{r4, lr}
 801d30e:	2184      	movs	r1, #132	; 0x84
 801d310:	4604      	mov	r4, r0
 801d312:	f00d fe4a 	bl	802afaa <_ZdlPvj>
 801d316:	4620      	mov	r0, r4
 801d318:	bd10      	pop	{r4, pc}

0801d31a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d31a:	b510      	push	{r4, lr}
 801d31c:	2104      	movs	r1, #4
 801d31e:	4604      	mov	r4, r0
 801d320:	f00d fe43 	bl	802afaa <_ZdlPvj>
 801d324:	4620      	mov	r0, r4
 801d326:	bd10      	pop	{r4, pc}

0801d328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d328:	b510      	push	{r4, lr}
 801d32a:	2104      	movs	r1, #4
 801d32c:	4604      	mov	r4, r0
 801d32e:	f00d fe3c 	bl	802afaa <_ZdlPvj>
 801d332:	4620      	mov	r0, r4
 801d334:	bd10      	pop	{r4, pc}

0801d336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d336:	b510      	push	{r4, lr}
 801d338:	f640 0144 	movw	r1, #2116	; 0x844
 801d33c:	4604      	mov	r4, r0
 801d33e:	f00d fe34 	bl	802afaa <_ZdlPvj>
 801d342:	4620      	mov	r0, r4
 801d344:	bd10      	pop	{r4, pc}

0801d346 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d346:	b510      	push	{r4, lr}
 801d348:	2104      	movs	r1, #4
 801d34a:	4604      	mov	r4, r0
 801d34c:	f00d fe2d 	bl	802afaa <_ZdlPvj>
 801d350:	4620      	mov	r0, r4
 801d352:	bd10      	pop	{r4, pc}

0801d354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d354:	b510      	push	{r4, lr}
 801d356:	2104      	movs	r1, #4
 801d358:	4604      	mov	r4, r0
 801d35a:	f00d fe26 	bl	802afaa <_ZdlPvj>
 801d35e:	4620      	mov	r0, r4
 801d360:	bd10      	pop	{r4, pc}

0801d362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d362:	b510      	push	{r4, lr}
 801d364:	2104      	movs	r1, #4
 801d366:	4604      	mov	r4, r0
 801d368:	f00d fe1f 	bl	802afaa <_ZdlPvj>
 801d36c:	4620      	mov	r0, r4
 801d36e:	bd10      	pop	{r4, pc}

0801d370 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d370:	b510      	push	{r4, lr}
 801d372:	2104      	movs	r1, #4
 801d374:	4604      	mov	r4, r0
 801d376:	f00d fe18 	bl	802afaa <_ZdlPvj>
 801d37a:	4620      	mov	r0, r4
 801d37c:	bd10      	pop	{r4, pc}

0801d37e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d37e:	b510      	push	{r4, lr}
 801d380:	2104      	movs	r1, #4
 801d382:	4604      	mov	r4, r0
 801d384:	f00d fe11 	bl	802afaa <_ZdlPvj>
 801d388:	4620      	mov	r0, r4
 801d38a:	bd10      	pop	{r4, pc}

0801d38c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d38c:	b510      	push	{r4, lr}
 801d38e:	2104      	movs	r1, #4
 801d390:	4604      	mov	r4, r0
 801d392:	f00d fe0a 	bl	802afaa <_ZdlPvj>
 801d396:	4620      	mov	r0, r4
 801d398:	bd10      	pop	{r4, pc}

0801d39a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d39a:	b510      	push	{r4, lr}
 801d39c:	2104      	movs	r1, #4
 801d39e:	4604      	mov	r4, r0
 801d3a0:	f00d fe03 	bl	802afaa <_ZdlPvj>
 801d3a4:	4620      	mov	r0, r4
 801d3a6:	bd10      	pop	{r4, pc}

0801d3a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d3a8:	b510      	push	{r4, lr}
 801d3aa:	2104      	movs	r1, #4
 801d3ac:	4604      	mov	r4, r0
 801d3ae:	f00d fdfc 	bl	802afaa <_ZdlPvj>
 801d3b2:	4620      	mov	r0, r4
 801d3b4:	bd10      	pop	{r4, pc}

0801d3b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d3b6:	b510      	push	{r4, lr}
 801d3b8:	2104      	movs	r1, #4
 801d3ba:	4604      	mov	r4, r0
 801d3bc:	f00d fdf5 	bl	802afaa <_ZdlPvj>
 801d3c0:	4620      	mov	r0, r4
 801d3c2:	bd10      	pop	{r4, pc}

0801d3c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d3c4:	b510      	push	{r4, lr}
 801d3c6:	2104      	movs	r1, #4
 801d3c8:	4604      	mov	r4, r0
 801d3ca:	f00d fdee 	bl	802afaa <_ZdlPvj>
 801d3ce:	4620      	mov	r0, r4
 801d3d0:	bd10      	pop	{r4, pc}

0801d3d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d3d2:	b510      	push	{r4, lr}
 801d3d4:	2104      	movs	r1, #4
 801d3d6:	4604      	mov	r4, r0
 801d3d8:	f00d fde7 	bl	802afaa <_ZdlPvj>
 801d3dc:	4620      	mov	r0, r4
 801d3de:	bd10      	pop	{r4, pc}

0801d3e0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d3e0:	b510      	push	{r4, lr}
 801d3e2:	2104      	movs	r1, #4
 801d3e4:	4604      	mov	r4, r0
 801d3e6:	f00d fde0 	bl	802afaa <_ZdlPvj>
 801d3ea:	4620      	mov	r0, r4
 801d3ec:	bd10      	pop	{r4, pc}

0801d3ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d3ee:	b510      	push	{r4, lr}
 801d3f0:	2104      	movs	r1, #4
 801d3f2:	4604      	mov	r4, r0
 801d3f4:	f00d fdd9 	bl	802afaa <_ZdlPvj>
 801d3f8:	4620      	mov	r0, r4
 801d3fa:	bd10      	pop	{r4, pc}

0801d3fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d3fc:	b510      	push	{r4, lr}
 801d3fe:	2104      	movs	r1, #4
 801d400:	4604      	mov	r4, r0
 801d402:	f00d fdd2 	bl	802afaa <_ZdlPvj>
 801d406:	4620      	mov	r0, r4
 801d408:	bd10      	pop	{r4, pc}

0801d40a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d40a:	b510      	push	{r4, lr}
 801d40c:	2104      	movs	r1, #4
 801d40e:	4604      	mov	r4, r0
 801d410:	f00d fdcb 	bl	802afaa <_ZdlPvj>
 801d414:	4620      	mov	r0, r4
 801d416:	bd10      	pop	{r4, pc}

0801d418 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d418:	b510      	push	{r4, lr}
 801d41a:	2104      	movs	r1, #4
 801d41c:	4604      	mov	r4, r0
 801d41e:	f00d fdc4 	bl	802afaa <_ZdlPvj>
 801d422:	4620      	mov	r0, r4
 801d424:	bd10      	pop	{r4, pc}

0801d426 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d426:	b510      	push	{r4, lr}
 801d428:	2104      	movs	r1, #4
 801d42a:	4604      	mov	r4, r0
 801d42c:	f00d fdbd 	bl	802afaa <_ZdlPvj>
 801d430:	4620      	mov	r0, r4
 801d432:	bd10      	pop	{r4, pc}

0801d434 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d434:	b510      	push	{r4, lr}
 801d436:	2104      	movs	r1, #4
 801d438:	4604      	mov	r4, r0
 801d43a:	f00d fdb6 	bl	802afaa <_ZdlPvj>
 801d43e:	4620      	mov	r0, r4
 801d440:	bd10      	pop	{r4, pc}

0801d442 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d442:	b510      	push	{r4, lr}
 801d444:	2104      	movs	r1, #4
 801d446:	4604      	mov	r4, r0
 801d448:	f00d fdaf 	bl	802afaa <_ZdlPvj>
 801d44c:	4620      	mov	r0, r4
 801d44e:	bd10      	pop	{r4, pc}

0801d450 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d450:	b510      	push	{r4, lr}
 801d452:	2104      	movs	r1, #4
 801d454:	4604      	mov	r4, r0
 801d456:	f00d fda8 	bl	802afaa <_ZdlPvj>
 801d45a:	4620      	mov	r0, r4
 801d45c:	bd10      	pop	{r4, pc}

0801d45e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d45e:	b510      	push	{r4, lr}
 801d460:	2104      	movs	r1, #4
 801d462:	4604      	mov	r4, r0
 801d464:	f00d fda1 	bl	802afaa <_ZdlPvj>
 801d468:	4620      	mov	r0, r4
 801d46a:	bd10      	pop	{r4, pc}

0801d46c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d46c:	b510      	push	{r4, lr}
 801d46e:	2104      	movs	r1, #4
 801d470:	4604      	mov	r4, r0
 801d472:	f00d fd9a 	bl	802afaa <_ZdlPvj>
 801d476:	4620      	mov	r0, r4
 801d478:	bd10      	pop	{r4, pc}

0801d47a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d47a:	b510      	push	{r4, lr}
 801d47c:	2104      	movs	r1, #4
 801d47e:	4604      	mov	r4, r0
 801d480:	f00d fd93 	bl	802afaa <_ZdlPvj>
 801d484:	4620      	mov	r0, r4
 801d486:	bd10      	pop	{r4, pc}

0801d488 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d488:	b510      	push	{r4, lr}
 801d48a:	2104      	movs	r1, #4
 801d48c:	4604      	mov	r4, r0
 801d48e:	f00d fd8c 	bl	802afaa <_ZdlPvj>
 801d492:	4620      	mov	r0, r4
 801d494:	bd10      	pop	{r4, pc}

0801d496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801d496:	b510      	push	{r4, lr}
 801d498:	2104      	movs	r1, #4
 801d49a:	4604      	mov	r4, r0
 801d49c:	f00d fd85 	bl	802afaa <_ZdlPvj>
 801d4a0:	4620      	mov	r0, r4
 801d4a2:	bd10      	pop	{r4, pc}

0801d4a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801d4a4:	b510      	push	{r4, lr}
 801d4a6:	2104      	movs	r1, #4
 801d4a8:	4604      	mov	r4, r0
 801d4aa:	f00d fd7e 	bl	802afaa <_ZdlPvj>
 801d4ae:	4620      	mov	r0, r4
 801d4b0:	bd10      	pop	{r4, pc}

0801d4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801d4b2:	b510      	push	{r4, lr}
 801d4b4:	2104      	movs	r1, #4
 801d4b6:	4604      	mov	r4, r0
 801d4b8:	f00d fd77 	bl	802afaa <_ZdlPvj>
 801d4bc:	4620      	mov	r0, r4
 801d4be:	bd10      	pop	{r4, pc}

0801d4c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801d4c0:	b510      	push	{r4, lr}
 801d4c2:	2104      	movs	r1, #4
 801d4c4:	4604      	mov	r4, r0
 801d4c6:	f00d fd70 	bl	802afaa <_ZdlPvj>
 801d4ca:	4620      	mov	r0, r4
 801d4cc:	bd10      	pop	{r4, pc}
	...

0801d4d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d4d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4d4:	b08f      	sub	sp, #60	; 0x3c
 801d4d6:	461c      	mov	r4, r3
 801d4d8:	9205      	str	r2, [sp, #20]
 801d4da:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d4de:	9100      	str	r1, [sp, #0]
 801d4e0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d4e2:	9201      	str	r2, [sp, #4]
 801d4e4:	2a00      	cmp	r2, #0
 801d4e6:	f000 8115 	beq.w	801d714 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801d4ea:	6820      	ldr	r0, [r4, #0]
 801d4ec:	6861      	ldr	r1, [r4, #4]
 801d4ee:	aa0a      	add	r2, sp, #40	; 0x28
 801d4f0:	c203      	stmia	r2!, {r0, r1}
 801d4f2:	6818      	ldr	r0, [r3, #0]
 801d4f4:	6859      	ldr	r1, [r3, #4]
 801d4f6:	aa0c      	add	r2, sp, #48	; 0x30
 801d4f8:	c203      	stmia	r2!, {r0, r1}
 801d4fa:	a80a      	add	r0, sp, #40	; 0x28
 801d4fc:	f7f9 faec 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d500:	4621      	mov	r1, r4
 801d502:	a80c      	add	r0, sp, #48	; 0x30
 801d504:	f7f9 fb2c 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d508:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d50c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d510:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d514:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d518:	bfde      	ittt	le
 801d51a:	b2b3      	uxthle	r3, r6
 801d51c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d520:	fb92 f3f3 	sdivle	r3, r2, r3
 801d524:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d528:	bfc8      	it	gt
 801d52a:	2301      	movgt	r3, #1
 801d52c:	fb92 f1f3 	sdiv	r1, r2, r3
 801d530:	fa1f fc81 	uxth.w	ip, r1
 801d534:	fb0c 2413 	mls	r4, ip, r3, r2
 801d538:	fb14 f406 	smulbb	r4, r4, r6
 801d53c:	441d      	add	r5, r3
 801d53e:	4404      	add	r4, r0
 801d540:	4661      	mov	r1, ip
 801d542:	3d01      	subs	r5, #1
 801d544:	b2a4      	uxth	r4, r4
 801d546:	fb95 f5f3 	sdiv	r5, r5, r3
 801d54a:	b131      	cbz	r1, 801d55a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801d54c:	9b05      	ldr	r3, [sp, #20]
 801d54e:	9900      	ldr	r1, [sp, #0]
 801d550:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d554:	ba1b      	rev	r3, r3
 801d556:	4419      	add	r1, r3
 801d558:	9100      	str	r1, [sp, #0]
 801d55a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d55e:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801d562:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d566:	4418      	add	r0, r3
 801d568:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d56c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d570:	441a      	add	r2, r3
 801d572:	4b6a      	ldr	r3, [pc, #424]	; (801d71c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d574:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d578:	6818      	ldr	r0, [r3, #0]
 801d57a:	6803      	ldr	r3, [r0, #0]
 801d57c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d57e:	4798      	blx	r3
 801d580:	4967      	ldr	r1, [pc, #412]	; (801d720 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801d582:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d586:	880b      	ldrh	r3, [r1, #0]
 801d588:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d58c:	9109      	str	r1, [sp, #36]	; 0x24
 801d58e:	fb03 c202 	mla	r2, r3, r2, ip
 801d592:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d596:	4373      	muls	r3, r6
 801d598:	b2ad      	uxth	r5, r5
 801d59a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d59e:	00ad      	lsls	r5, r5, #2
 801d5a0:	9306      	str	r3, [sp, #24]
 801d5a2:	1d2b      	adds	r3, r5, #4
 801d5a4:	9307      	str	r3, [sp, #28]
 801d5a6:	9b01      	ldr	r3, [sp, #4]
 801d5a8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d5ac:	9103      	str	r1, [sp, #12]
 801d5ae:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801d5b2:	2c00      	cmp	r4, #0
 801d5b4:	bf0c      	ite	eq
 801d5b6:	46c6      	moveq	lr, r8
 801d5b8:	f04f 0e00 	movne.w	lr, #0
 801d5bc:	2300      	movs	r3, #0
 801d5be:	b292      	uxth	r2, r2
 801d5c0:	fa1f fe8e 	uxth.w	lr, lr
 801d5c4:	9302      	str	r3, [sp, #8]
 801d5c6:	9204      	str	r2, [sp, #16]
 801d5c8:	9a06      	ldr	r2, [sp, #24]
 801d5ca:	4282      	cmp	r2, r0
 801d5cc:	f240 809d 	bls.w	801d70a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d5d0:	b963      	cbnz	r3, 801d5ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d5d2:	9b00      	ldr	r3, [sp, #0]
 801d5d4:	781a      	ldrb	r2, [r3, #0]
 801d5d6:	0993      	lsrs	r3, r2, #6
 801d5d8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d5dc:	9202      	str	r2, [sp, #8]
 801d5de:	1e5a      	subs	r2, r3, #1
 801d5e0:	2a02      	cmp	r2, #2
 801d5e2:	d815      	bhi.n	801d610 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d5e4:	9a00      	ldr	r2, [sp, #0]
 801d5e6:	3201      	adds	r2, #1
 801d5e8:	9200      	str	r2, [sp, #0]
 801d5ea:	b29b      	uxth	r3, r3
 801d5ec:	b1b4      	cbz	r4, 801d61c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d5ee:	429c      	cmp	r4, r3
 801d5f0:	bf95      	itete	ls
 801d5f2:	1b1c      	subls	r4, r3, r4
 801d5f4:	1ae4      	subhi	r4, r4, r3
 801d5f6:	fa1f fa84 	uxthls.w	sl, r4
 801d5fa:	b2a4      	uxthhi	r4, r4
 801d5fc:	bf87      	ittee	hi
 801d5fe:	4671      	movhi	r1, lr
 801d600:	f04f 0a00 	movhi.w	sl, #0
 801d604:	fa1f f188 	uxthls.w	r1, r8
 801d608:	2400      	movls	r4, #0
 801d60a:	4653      	mov	r3, sl
 801d60c:	468e      	mov	lr, r1
 801d60e:	e7db      	b.n	801d5c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d610:	9a00      	ldr	r2, [sp, #0]
 801d612:	9b00      	ldr	r3, [sp, #0]
 801d614:	3202      	adds	r2, #2
 801d616:	785b      	ldrb	r3, [r3, #1]
 801d618:	9200      	str	r2, [sp, #0]
 801d61a:	e7e7      	b.n	801d5ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d61c:	2202      	movs	r2, #2
 801d61e:	4615      	mov	r5, r2
 801d620:	9907      	ldr	r1, [sp, #28]
 801d622:	9a02      	ldr	r2, [sp, #8]
 801d624:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d628:	9905      	ldr	r1, [sp, #20]
 801d62a:	4573      	cmp	r3, lr
 801d62c:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d630:	9a01      	ldr	r2, [sp, #4]
 801d632:	bf2b      	itete	cs
 801d634:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d638:	ebae 0103 	subcc.w	r1, lr, r3
 801d63c:	46f1      	movcs	r9, lr
 801d63e:	4699      	movcc	r9, r3
 801d640:	bf27      	ittee	cs
 801d642:	fa1f fa8a 	uxthcs.w	sl, sl
 801d646:	4621      	movcs	r1, r4
 801d648:	b289      	uxthcc	r1, r1
 801d64a:	46a2      	movcc	sl, r4
 801d64c:	2aff      	cmp	r2, #255	; 0xff
 801d64e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d652:	d105      	bne.n	801d660 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d654:	4481      	add	r9, r0
 801d656:	4581      	cmp	r9, r0
 801d658:	d045      	beq.n	801d6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d65a:	f820 cb02 	strh.w	ip, [r0], #2
 801d65e:	e7fa      	b.n	801d656 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d660:	9d03      	ldr	r5, [sp, #12]
 801d662:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d666:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d66a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d66e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d672:	436a      	muls	r2, r5
 801d674:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d678:	fa5f fc8c 	uxtb.w	ip, ip
 801d67c:	9208      	str	r2, [sp, #32]
 801d67e:	fb0b fb05 	mul.w	fp, fp, r5
 801d682:	fb0c fc05 	mul.w	ip, ip, r5
 801d686:	4481      	add	r9, r0
 801d688:	4581      	cmp	r9, r0
 801d68a:	d02c      	beq.n	801d6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d68c:	8802      	ldrh	r2, [r0, #0]
 801d68e:	9d04      	ldr	r5, [sp, #16]
 801d690:	9f04      	ldr	r7, [sp, #16]
 801d692:	1216      	asrs	r6, r2, #8
 801d694:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d698:	fb16 f605 	smulbb	r6, r6, r5
 801d69c:	9d08      	ldr	r5, [sp, #32]
 801d69e:	442e      	add	r6, r5
 801d6a0:	10d5      	asrs	r5, r2, #3
 801d6a2:	00d2      	lsls	r2, r2, #3
 801d6a4:	b2d2      	uxtb	r2, r2
 801d6a6:	fb12 f207 	smulbb	r2, r2, r7
 801d6aa:	b2b6      	uxth	r6, r6
 801d6ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d6b0:	4462      	add	r2, ip
 801d6b2:	fb15 f507 	smulbb	r5, r5, r7
 801d6b6:	b292      	uxth	r2, r2
 801d6b8:	1c77      	adds	r7, r6, #1
 801d6ba:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d6be:	1c57      	adds	r7, r2, #1
 801d6c0:	445d      	add	r5, fp
 801d6c2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d6c6:	b2ad      	uxth	r5, r5
 801d6c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d6cc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d6d0:	4316      	orrs	r6, r2
 801d6d2:	1c6a      	adds	r2, r5, #1
 801d6d4:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d6d8:	096d      	lsrs	r5, r5, #5
 801d6da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d6de:	432e      	orrs	r6, r5
 801d6e0:	f820 6b02 	strh.w	r6, [r0], #2
 801d6e4:	e7d0      	b.n	801d688 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d6e6:	4573      	cmp	r3, lr
 801d6e8:	d38f      	bcc.n	801d60a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d6ea:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d6ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d6f0:	fa1f f188 	uxth.w	r1, r8
 801d6f4:	1a64      	subs	r4, r4, r1
 801d6f6:	881b      	ldrh	r3, [r3, #0]
 801d6f8:	b2a4      	uxth	r4, r4
 801d6fa:	2c00      	cmp	r4, #0
 801d6fc:	eba3 0308 	sub.w	r3, r3, r8
 801d700:	bf18      	it	ne
 801d702:	2100      	movne	r1, #0
 801d704:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d708:	e77f      	b.n	801d60a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d70a:	4b04      	ldr	r3, [pc, #16]	; (801d71c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d70c:	6818      	ldr	r0, [r3, #0]
 801d70e:	6803      	ldr	r3, [r0, #0]
 801d710:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d712:	4798      	blx	r3
 801d714:	b00f      	add	sp, #60	; 0x3c
 801d716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d71a:	bf00      	nop
 801d71c:	2001383c 	.word	0x2001383c
 801d720:	20013836 	.word	0x20013836

0801d724 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d728:	b09f      	sub	sp, #124	; 0x7c
 801d72a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d72e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d732:	9209      	str	r2, [sp, #36]	; 0x24
 801d734:	461d      	mov	r5, r3
 801d736:	4604      	mov	r4, r0
 801d738:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d73a:	2a00      	cmp	r2, #0
 801d73c:	f000 81eb 	beq.w	801db16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d740:	6828      	ldr	r0, [r5, #0]
 801d742:	6869      	ldr	r1, [r5, #4]
 801d744:	aa1a      	add	r2, sp, #104	; 0x68
 801d746:	c203      	stmia	r2!, {r0, r1}
 801d748:	6818      	ldr	r0, [r3, #0]
 801d74a:	6859      	ldr	r1, [r3, #4]
 801d74c:	aa1c      	add	r2, sp, #112	; 0x70
 801d74e:	c203      	stmia	r2!, {r0, r1}
 801d750:	a81a      	add	r0, sp, #104	; 0x68
 801d752:	f7f9 f9c1 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d756:	4629      	mov	r1, r5
 801d758:	a81c      	add	r0, sp, #112	; 0x70
 801d75a:	f7f9 fa01 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d75e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d762:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d766:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d76a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d76e:	bfd7      	itett	le
 801d770:	b29a      	uxthle	r2, r3
 801d772:	2201      	movgt	r2, #1
 801d774:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d778:	fb91 f2f2 	sdivle	r2, r1, r2
 801d77c:	9202      	str	r2, [sp, #8]
 801d77e:	9802      	ldr	r0, [sp, #8]
 801d780:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d784:	fb92 f0f0 	sdiv	r0, r2, r0
 801d788:	b280      	uxth	r0, r0
 801d78a:	9010      	str	r0, [sp, #64]	; 0x40
 801d78c:	9902      	ldr	r1, [sp, #8]
 801d78e:	9802      	ldr	r0, [sp, #8]
 801d790:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d792:	4488      	add	r8, r1
 801d794:	fb05 2510 	mls	r5, r5, r0, r2
 801d798:	fb15 f503 	smulbb	r5, r5, r3
 801d79c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d7a0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d7a4:	fb98 f8f1 	sdiv	r8, r8, r1
 801d7a8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d7ac:	440d      	add	r5, r1
 801d7ae:	4419      	add	r1, r3
 801d7b0:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d7b4:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d7b8:	441a      	add	r2, r3
 801d7ba:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d7be:	9304      	str	r3, [sp, #16]
 801d7c0:	4b95      	ldr	r3, [pc, #596]	; (801da18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d7c2:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d7c6:	6818      	ldr	r0, [r3, #0]
 801d7c8:	6803      	ldr	r3, [r0, #0]
 801d7ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7cc:	4798      	blx	r3
 801d7ce:	4b93      	ldr	r3, [pc, #588]	; (801da1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d7d0:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d7d4:	881a      	ldrh	r2, [r3, #0]
 801d7d6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d7da:	9318      	str	r3, [sp, #96]	; 0x60
 801d7dc:	fb02 7101 	mla	r1, r2, r1, r7
 801d7e0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d7e4:	4356      	muls	r6, r2
 801d7e6:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d7ea:	f108 0801 	add.w	r8, r8, #1
 801d7ee:	920a      	str	r2, [sp, #40]	; 0x28
 801d7f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d7f2:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d7f6:	930f      	str	r3, [sp, #60]	; 0x3c
 801d7f8:	fa1f f888 	uxth.w	r8, r8
 801d7fc:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d800:	f108 0204 	add.w	r2, r8, #4
 801d804:	9211      	str	r2, [sp, #68]	; 0x44
 801d806:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d808:	4b85      	ldr	r3, [pc, #532]	; (801da20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d80a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d80e:	b2ad      	uxth	r5, r5
 801d810:	9215      	str	r2, [sp, #84]	; 0x54
 801d812:	2d00      	cmp	r5, #0
 801d814:	9a04      	ldr	r2, [sp, #16]
 801d816:	f04f 0100 	mov.w	r1, #0
 801d81a:	bf18      	it	ne
 801d81c:	2200      	movne	r2, #0
 801d81e:	1b1b      	subs	r3, r3, r4
 801d820:	b292      	uxth	r2, r2
 801d822:	910d      	str	r1, [sp, #52]	; 0x34
 801d824:	9319      	str	r3, [sp, #100]	; 0x64
 801d826:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d828:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d82a:	fa11 f383 	uxtah	r3, r1, r3
 801d82e:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d830:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d834:	3304      	adds	r3, #4
 801d836:	9306      	str	r3, [sp, #24]
 801d838:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d83a:	4283      	cmp	r3, r0
 801d83c:	f240 8166 	bls.w	801db0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d840:	9902      	ldr	r1, [sp, #8]
 801d842:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d846:	fbb5 f3f3 	udiv	r3, r5, r3
 801d84a:	1acb      	subs	r3, r1, r3
 801d84c:	b29b      	uxth	r3, r3
 801d84e:	9316      	str	r3, [sp, #88]	; 0x58
 801d850:	9b06      	ldr	r3, [sp, #24]
 801d852:	9e06      	ldr	r6, [sp, #24]
 801d854:	7859      	ldrb	r1, [r3, #1]
 801d856:	789b      	ldrb	r3, [r3, #2]
 801d858:	7836      	ldrb	r6, [r6, #0]
 801d85a:	9612      	str	r6, [sp, #72]	; 0x48
 801d85c:	021b      	lsls	r3, r3, #8
 801d85e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d862:	9906      	ldr	r1, [sp, #24]
 801d864:	78c9      	ldrb	r1, [r1, #3]
 801d866:	430b      	orrs	r3, r1
 801d868:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d86a:	3601      	adds	r6, #1
 801d86c:	4419      	add	r1, r3
 801d86e:	9605      	str	r6, [sp, #20]
 801d870:	1c4e      	adds	r6, r1, #1
 801d872:	9603      	str	r6, [sp, #12]
 801d874:	7849      	ldrb	r1, [r1, #1]
 801d876:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d878:	0209      	lsls	r1, r1, #8
 801d87a:	5cf3      	ldrb	r3, [r6, r3]
 801d87c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d880:	4319      	orrs	r1, r3
 801d882:	b28b      	uxth	r3, r1
 801d884:	930c      	str	r3, [sp, #48]	; 0x30
 801d886:	2300      	movs	r3, #0
 801d888:	f04f 0a01 	mov.w	sl, #1
 801d88c:	9307      	str	r3, [sp, #28]
 801d88e:	469c      	mov	ip, r3
 801d890:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d894:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d898:	46d3      	mov	fp, sl
 801d89a:	4657      	mov	r7, sl
 801d89c:	930e      	str	r3, [sp, #56]	; 0x38
 801d89e:	2d00      	cmp	r5, #0
 801d8a0:	d07e      	beq.n	801d9a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d8a2:	42af      	cmp	r7, r5
 801d8a4:	d26e      	bcs.n	801d984 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d8a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d8a8:	9201      	str	r2, [sp, #4]
 801d8aa:	1bed      	subs	r5, r5, r7
 801d8ac:	4283      	cmp	r3, r0
 801d8ae:	b2ad      	uxth	r5, r5
 801d8b0:	d802      	bhi.n	801d8b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d8b2:	e073      	b.n	801d99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d8b4:	2b00      	cmp	r3, #0
 801d8b6:	d15f      	bne.n	801d978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d8b8:	9b03      	ldr	r3, [sp, #12]
 801d8ba:	785b      	ldrb	r3, [r3, #1]
 801d8bc:	f1cb 0207 	rsb	r2, fp, #7
 801d8c0:	4093      	lsls	r3, r2
 801d8c2:	005b      	lsls	r3, r3, #1
 801d8c4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d8c8:	9b03      	ldr	r3, [sp, #12]
 801d8ca:	781b      	ldrb	r3, [r3, #0]
 801d8cc:	fa43 f30b 	asr.w	r3, r3, fp
 801d8d0:	b2db      	uxtb	r3, r3
 801d8d2:	4313      	orrs	r3, r2
 801d8d4:	f10b 0201 	add.w	r2, fp, #1
 801d8d8:	fa5f fb82 	uxtb.w	fp, r2
 801d8dc:	9a03      	ldr	r2, [sp, #12]
 801d8de:	f1bb 0f08 	cmp.w	fp, #8
 801d8e2:	bf15      	itete	ne
 801d8e4:	3201      	addne	r2, #1
 801d8e6:	3202      	addeq	r2, #2
 801d8e8:	9203      	strne	r2, [sp, #12]
 801d8ea:	9203      	streq	r2, [sp, #12]
 801d8ec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d8ee:	b29f      	uxth	r7, r3
 801d8f0:	bf08      	it	eq
 801d8f2:	f04f 0b00 	moveq.w	fp, #0
 801d8f6:	42ba      	cmp	r2, r7
 801d8f8:	d309      	bcc.n	801d90e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d8fa:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d8fe:	2301      	movs	r3, #1
 801d900:	9a05      	ldr	r2, [sp, #20]
 801d902:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d906:	d30e      	bcc.n	801d926 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d908:	469a      	mov	sl, r3
 801d90a:	2600      	movs	r6, #0
 801d90c:	e035      	b.n	801d97a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d90e:	9b05      	ldr	r3, [sp, #20]
 801d910:	429f      	cmp	r7, r3
 801d912:	d318      	bcc.n	801d946 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d914:	eb04 030a 	add.w	r3, r4, sl
 801d918:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d91c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d920:	f10a 0301 	add.w	r3, sl, #1
 801d924:	b29b      	uxth	r3, r3
 801d926:	9a05      	ldr	r2, [sp, #20]
 801d928:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d92c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d92e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d932:	7116      	strb	r6, [r2, #4]
 801d934:	f10a 0601 	add.w	r6, sl, #1
 801d938:	80d1      	strh	r1, [r2, #6]
 801d93a:	7156      	strb	r6, [r2, #5]
 801d93c:	9a05      	ldr	r2, [sp, #20]
 801d93e:	3201      	adds	r2, #1
 801d940:	b292      	uxth	r2, r2
 801d942:	9205      	str	r2, [sp, #20]
 801d944:	e7e0      	b.n	801d908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d946:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d94a:	463a      	mov	r2, r7
 801d94c:	795b      	ldrb	r3, [r3, #5]
 801d94e:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d952:	4426      	add	r6, r4
 801d954:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d956:	eb01 0c06 	add.w	ip, r1, r6
 801d95a:	f1bc 0f00 	cmp.w	ip, #0
 801d95e:	dd07      	ble.n	801d970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d960:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d964:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d968:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d96c:	88d2      	ldrh	r2, [r2, #6]
 801d96e:	e7f1      	b.n	801d954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d970:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d974:	b29b      	uxth	r3, r3
 801d976:	e7c3      	b.n	801d900 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d978:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d97a:	970c      	str	r7, [sp, #48]	; 0x30
 801d97c:	9a01      	ldr	r2, [sp, #4]
 801d97e:	46b4      	mov	ip, r6
 801d980:	461f      	mov	r7, r3
 801d982:	e78c      	b.n	801d89e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d984:	1b7b      	subs	r3, r7, r5
 801d986:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d98a:	9201      	str	r2, [sp, #4]
 801d98c:	eb0c 0605 	add.w	r6, ip, r5
 801d990:	b29b      	uxth	r3, r3
 801d992:	b2b6      	uxth	r6, r6
 801d994:	2500      	movs	r5, #0
 801d996:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d998:	4282      	cmp	r2, r0
 801d99a:	d88b      	bhi.n	801d8b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d99c:	9a01      	ldr	r2, [sp, #4]
 801d99e:	e74b      	b.n	801d838 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d9a0:	4297      	cmp	r7, r2
 801d9a2:	d332      	bcc.n	801da0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d9a4:	1abb      	subs	r3, r7, r2
 801d9a6:	b29b      	uxth	r3, r3
 801d9a8:	9208      	str	r2, [sp, #32]
 801d9aa:	9501      	str	r5, [sp, #4]
 801d9ac:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d9ae:	29ff      	cmp	r1, #255	; 0xff
 801d9b0:	9908      	ldr	r1, [sp, #32]
 801d9b2:	eb0c 0601 	add.w	r6, ip, r1
 801d9b6:	d135      	bne.n	801da24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d9b8:	f1a0 0e02 	sub.w	lr, r0, #2
 801d9bc:	b2b6      	uxth	r6, r6
 801d9be:	45b4      	cmp	ip, r6
 801d9c0:	f040 808c 	bne.w	801dadc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d9c4:	9908      	ldr	r1, [sp, #32]
 801d9c6:	4297      	cmp	r7, r2
 801d9c8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d9cc:	d3e2      	bcc.n	801d994 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d9ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d9d0:	9904      	ldr	r1, [sp, #16]
 801d9d2:	8812      	ldrh	r2, [r2, #0]
 801d9d4:	1a52      	subs	r2, r2, r1
 801d9d6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d9da:	9a07      	ldr	r2, [sp, #28]
 801d9dc:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d9de:	3201      	adds	r2, #1
 801d9e0:	428a      	cmp	r2, r1
 801d9e2:	9207      	str	r2, [sp, #28]
 801d9e4:	f040 8087 	bne.w	801daf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d9e8:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d9ec:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d9f0:	9b04      	ldr	r3, [sp, #16]
 801d9f2:	1bed      	subs	r5, r5, r7
 801d9f4:	b2ad      	uxth	r5, r5
 801d9f6:	2d00      	cmp	r5, #0
 801d9f8:	bf08      	it	eq
 801d9fa:	461a      	moveq	r2, r3
 801d9fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d9fe:	bf18      	it	ne
 801da00:	2200      	movne	r2, #0
 801da02:	3301      	adds	r3, #1
 801da04:	930d      	str	r3, [sp, #52]	; 0x34
 801da06:	b292      	uxth	r2, r2
 801da08:	e70d      	b.n	801d826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801da0a:	1bd1      	subs	r1, r2, r7
 801da0c:	b28b      	uxth	r3, r1
 801da0e:	9301      	str	r3, [sp, #4]
 801da10:	9708      	str	r7, [sp, #32]
 801da12:	462b      	mov	r3, r5
 801da14:	e7ca      	b.n	801d9ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801da16:	bf00      	nop
 801da18:	2001383c 	.word	0x2001383c
 801da1c:	20013836 	.word	0x20013836
 801da20:	fffff7fb 	.word	0xfffff7fb
 801da24:	b2b6      	uxth	r6, r6
 801da26:	900b      	str	r0, [sp, #44]	; 0x2c
 801da28:	45b4      	cmp	ip, r6
 801da2a:	d0cb      	beq.n	801d9c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801da2c:	f10c 0101 	add.w	r1, ip, #1
 801da30:	44a4      	add	ip, r4
 801da32:	9117      	str	r1, [sp, #92]	; 0x5c
 801da34:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801da38:	9911      	ldr	r1, [sp, #68]	; 0x44
 801da3a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801da3e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801da40:	f8b1 c000 	ldrh.w	ip, [r1]
 801da44:	990e      	ldr	r1, [sp, #56]	; 0x38
 801da46:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801da4a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801da4e:	fb1e fe01 	smulbb	lr, lr, r1
 801da52:	ea4f 2825 	mov.w	r8, r5, asr #8
 801da56:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801da58:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801da5c:	fb08 e801 	mla	r8, r8, r1, lr
 801da60:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801da64:	990e      	ldr	r1, [sp, #56]	; 0x38
 801da66:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801da6a:	fb19 f901 	smulbb	r9, r9, r1
 801da6e:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801da72:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801da74:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801da78:	fb0e 9e01 	mla	lr, lr, r1, r9
 801da7c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801da80:	990e      	ldr	r1, [sp, #56]	; 0x38
 801da82:	fa5f fc8c 	uxtb.w	ip, ip
 801da86:	fb1c fc01 	smulbb	ip, ip, r1
 801da8a:	00ed      	lsls	r5, r5, #3
 801da8c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801da8e:	b2ed      	uxtb	r5, r5
 801da90:	fb05 c501 	mla	r5, r5, r1, ip
 801da94:	fa1f f888 	uxth.w	r8, r8
 801da98:	fa1f fe8e 	uxth.w	lr, lr
 801da9c:	b2ad      	uxth	r5, r5
 801da9e:	f108 0c01 	add.w	ip, r8, #1
 801daa2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801daa6:	f10e 0901 	add.w	r9, lr, #1
 801daaa:	f105 0c01 	add.w	ip, r5, #1
 801daae:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801dab2:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801dab6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801daba:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801dabe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dac2:	ea4c 0808 	orr.w	r8, ip, r8
 801dac6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801dac8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801dacc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dad0:	ea48 0809 	orr.w	r8, r8, r9
 801dad4:	f821 8b02 	strh.w	r8, [r1], #2
 801dad8:	910b      	str	r1, [sp, #44]	; 0x2c
 801dada:	e7a5      	b.n	801da28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801dadc:	f10c 0801 	add.w	r8, ip, #1
 801dae0:	44a4      	add	ip, r4
 801dae2:	9911      	ldr	r1, [sp, #68]	; 0x44
 801dae4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801dae8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801daec:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801daf0:	fa1f fc88 	uxth.w	ip, r8
 801daf4:	e763      	b.n	801d9be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801daf6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dafa:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801dafe:	1aad      	subs	r5, r5, r2
 801db00:	b2ad      	uxth	r5, r5
 801db02:	2d00      	cmp	r5, #0
 801db04:	bf18      	it	ne
 801db06:	2200      	movne	r2, #0
 801db08:	9201      	str	r2, [sp, #4]
 801db0a:	e744      	b.n	801d996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801db0c:	4b03      	ldr	r3, [pc, #12]	; (801db1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801db0e:	6818      	ldr	r0, [r3, #0]
 801db10:	6803      	ldr	r3, [r0, #0]
 801db12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db14:	4798      	blx	r3
 801db16:	b01f      	add	sp, #124	; 0x7c
 801db18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801db1c:	2001383c 	.word	0x2001383c

0801db20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801db20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db24:	b08f      	sub	sp, #60	; 0x3c
 801db26:	461c      	mov	r4, r3
 801db28:	9203      	str	r2, [sp, #12]
 801db2a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801db2e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db30:	9202      	str	r2, [sp, #8]
 801db32:	460f      	mov	r7, r1
 801db34:	2a00      	cmp	r2, #0
 801db36:	f000 8128 	beq.w	801dd8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801db3a:	6820      	ldr	r0, [r4, #0]
 801db3c:	6861      	ldr	r1, [r4, #4]
 801db3e:	aa0a      	add	r2, sp, #40	; 0x28
 801db40:	c203      	stmia	r2!, {r0, r1}
 801db42:	6818      	ldr	r0, [r3, #0]
 801db44:	6859      	ldr	r1, [r3, #4]
 801db46:	aa0c      	add	r2, sp, #48	; 0x30
 801db48:	c203      	stmia	r2!, {r0, r1}
 801db4a:	a80a      	add	r0, sp, #40	; 0x28
 801db4c:	f7f8 ffc4 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801db50:	4621      	mov	r1, r4
 801db52:	a80c      	add	r0, sp, #48	; 0x30
 801db54:	f7f9 f804 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801db58:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801db5c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801db60:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801db64:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801db68:	bfde      	ittt	le
 801db6a:	b2b3      	uxthle	r3, r6
 801db6c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801db70:	fb92 f3f3 	sdivle	r3, r2, r3
 801db74:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801db78:	bfc8      	it	gt
 801db7a:	2301      	movgt	r3, #1
 801db7c:	fb92 f1f3 	sdiv	r1, r2, r3
 801db80:	fa1f fc81 	uxth.w	ip, r1
 801db84:	fb0c 2413 	mls	r4, ip, r3, r2
 801db88:	fb14 f406 	smulbb	r4, r4, r6
 801db8c:	441d      	add	r5, r3
 801db8e:	4404      	add	r4, r0
 801db90:	4661      	mov	r1, ip
 801db92:	3d01      	subs	r5, #1
 801db94:	b2a4      	uxth	r4, r4
 801db96:	fb95 f5f3 	sdiv	r5, r5, r3
 801db9a:	b121      	cbz	r1, 801dba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801db9c:	9b03      	ldr	r3, [sp, #12]
 801db9e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801dba2:	ba1b      	rev	r3, r3
 801dba4:	441f      	add	r7, r3
 801dba6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801dbaa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801dbae:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801dbb2:	4418      	add	r0, r3
 801dbb4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801dbb8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801dbbc:	441a      	add	r2, r3
 801dbbe:	4b74      	ldr	r3, [pc, #464]	; (801dd90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dbc0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801dbc4:	6818      	ldr	r0, [r3, #0]
 801dbc6:	6803      	ldr	r3, [r0, #0]
 801dbc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dbca:	4798      	blx	r3
 801dbcc:	4a71      	ldr	r2, [pc, #452]	; (801dd94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801dbce:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801dbd2:	8813      	ldrh	r3, [r2, #0]
 801dbd4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801dbd8:	9209      	str	r2, [sp, #36]	; 0x24
 801dbda:	fb03 c101 	mla	r1, r3, r1, ip
 801dbde:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801dbe2:	4373      	muls	r3, r6
 801dbe4:	b2ad      	uxth	r5, r5
 801dbe6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dbea:	00ad      	lsls	r5, r5, #2
 801dbec:	2c00      	cmp	r4, #0
 801dbee:	9304      	str	r3, [sp, #16]
 801dbf0:	f105 0304 	add.w	r3, r5, #4
 801dbf4:	9305      	str	r3, [sp, #20]
 801dbf6:	bf0c      	ite	eq
 801dbf8:	46c8      	moveq	r8, r9
 801dbfa:	f04f 0800 	movne.w	r8, #0
 801dbfe:	2300      	movs	r3, #0
 801dc00:	fa1f f888 	uxth.w	r8, r8
 801dc04:	9301      	str	r3, [sp, #4]
 801dc06:	9a04      	ldr	r2, [sp, #16]
 801dc08:	4282      	cmp	r2, r0
 801dc0a:	f240 80b9 	bls.w	801dd80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801dc0e:	b95b      	cbnz	r3, 801dc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801dc10:	783a      	ldrb	r2, [r7, #0]
 801dc12:	0993      	lsrs	r3, r2, #6
 801dc14:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dc18:	9201      	str	r2, [sp, #4]
 801dc1a:	1e5a      	subs	r2, r3, #1
 801dc1c:	2a02      	cmp	r2, #2
 801dc1e:	bf8d      	iteet	hi
 801dc20:	787b      	ldrbhi	r3, [r7, #1]
 801dc22:	3701      	addls	r7, #1
 801dc24:	b29b      	uxthls	r3, r3
 801dc26:	3702      	addhi	r7, #2
 801dc28:	b184      	cbz	r4, 801dc4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801dc2a:	429c      	cmp	r4, r3
 801dc2c:	bf95      	itete	ls
 801dc2e:	1b1c      	subls	r4, r3, r4
 801dc30:	1ae4      	subhi	r4, r4, r3
 801dc32:	fa1f fa84 	uxthls.w	sl, r4
 801dc36:	b2a4      	uxthhi	r4, r4
 801dc38:	bf87      	ittee	hi
 801dc3a:	46c4      	movhi	ip, r8
 801dc3c:	f04f 0a00 	movhi.w	sl, #0
 801dc40:	fa1f fc89 	uxthls.w	ip, r9
 801dc44:	2400      	movls	r4, #0
 801dc46:	4653      	mov	r3, sl
 801dc48:	46e0      	mov	r8, ip
 801dc4a:	e7dc      	b.n	801dc06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801dc4c:	2204      	movs	r2, #4
 801dc4e:	4615      	mov	r5, r2
 801dc50:	9905      	ldr	r1, [sp, #20]
 801dc52:	9a01      	ldr	r2, [sp, #4]
 801dc54:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dc58:	9903      	ldr	r1, [sp, #12]
 801dc5a:	588a      	ldr	r2, [r1, r2]
 801dc5c:	4543      	cmp	r3, r8
 801dc5e:	bf27      	ittee	cs
 801dc60:	eba3 0a08 	subcs.w	sl, r3, r8
 801dc64:	46c6      	movcs	lr, r8
 801dc66:	eba8 0c03 	subcc.w	ip, r8, r3
 801dc6a:	469e      	movcc	lr, r3
 801dc6c:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801dc70:	bf27      	ittee	cs
 801dc72:	fa1f fa8a 	uxthcs.w	sl, sl
 801dc76:	46a4      	movcs	ip, r4
 801dc78:	fa1f fc8c 	uxthcc.w	ip, ip
 801dc7c:	46a2      	movcc	sl, r4
 801dc7e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801dc82:	2900      	cmp	r1, #0
 801dc84:	d066      	beq.n	801dd54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801dc86:	29ff      	cmp	r1, #255	; 0xff
 801dc88:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801dc8c:	d114      	bne.n	801dcb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801dc8e:	9d02      	ldr	r5, [sp, #8]
 801dc90:	2dff      	cmp	r5, #255	; 0xff
 801dc92:	d111      	bne.n	801dcb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801dc94:	0951      	lsrs	r1, r2, #5
 801dc96:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801dc9a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dc9e:	f026 0607 	bic.w	r6, r6, #7
 801dca2:	430e      	orrs	r6, r1
 801dca4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dca8:	4316      	orrs	r6, r2
 801dcaa:	b2b6      	uxth	r6, r6
 801dcac:	4486      	add	lr, r0
 801dcae:	4586      	cmp	lr, r0
 801dcb0:	d051      	beq.n	801dd56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801dcb2:	f820 6b02 	strh.w	r6, [r0], #2
 801dcb6:	e7fa      	b.n	801dcae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801dcb8:	9d02      	ldr	r5, [sp, #8]
 801dcba:	4369      	muls	r1, r5
 801dcbc:	1c4d      	adds	r5, r1, #1
 801dcbe:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801dcc2:	122d      	asrs	r5, r5, #8
 801dcc4:	ea6f 0b05 	mvn.w	fp, r5
 801dcc8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801dccc:	b2ad      	uxth	r5, r5
 801dcce:	b2f6      	uxtb	r6, r6
 801dcd0:	b2d2      	uxtb	r2, r2
 801dcd2:	fb11 f105 	smulbb	r1, r1, r5
 801dcd6:	fb16 f605 	smulbb	r6, r6, r5
 801dcda:	fb12 f205 	smulbb	r2, r2, r5
 801dcde:	b289      	uxth	r1, r1
 801dce0:	b2b6      	uxth	r6, r6
 801dce2:	b292      	uxth	r2, r2
 801dce4:	9106      	str	r1, [sp, #24]
 801dce6:	9607      	str	r6, [sp, #28]
 801dce8:	9208      	str	r2, [sp, #32]
 801dcea:	4486      	add	lr, r0
 801dcec:	fa5f fb8b 	uxtb.w	fp, fp
 801dcf0:	4586      	cmp	lr, r0
 801dcf2:	d030      	beq.n	801dd56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801dcf4:	8802      	ldrh	r2, [r0, #0]
 801dcf6:	9906      	ldr	r1, [sp, #24]
 801dcf8:	1216      	asrs	r6, r2, #8
 801dcfa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801dcfe:	10d5      	asrs	r5, r2, #3
 801dd00:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801dd04:	fb06 160b 	mla	r6, r6, fp, r1
 801dd08:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dd0c:	9907      	ldr	r1, [sp, #28]
 801dd0e:	00d2      	lsls	r2, r2, #3
 801dd10:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801dd14:	fb05 150b 	mla	r5, r5, fp, r1
 801dd18:	b2d2      	uxtb	r2, r2
 801dd1a:	9908      	ldr	r1, [sp, #32]
 801dd1c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dd20:	b2b6      	uxth	r6, r6
 801dd22:	fb02 120b 	mla	r2, r2, fp, r1
 801dd26:	b292      	uxth	r2, r2
 801dd28:	1c71      	adds	r1, r6, #1
 801dd2a:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801dd2e:	1c51      	adds	r1, r2, #1
 801dd30:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dd34:	b2ad      	uxth	r5, r5
 801dd36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dd3a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801dd3e:	4316      	orrs	r6, r2
 801dd40:	1c6a      	adds	r2, r5, #1
 801dd42:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801dd46:	096d      	lsrs	r5, r5, #5
 801dd48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd4c:	432e      	orrs	r6, r5
 801dd4e:	f820 6b02 	strh.w	r6, [r0], #2
 801dd52:	e7cd      	b.n	801dcf0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801dd54:	4470      	add	r0, lr
 801dd56:	4543      	cmp	r3, r8
 801dd58:	f4ff af75 	bcc.w	801dc46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dd5c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801dd60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd62:	fa1f fc89 	uxth.w	ip, r9
 801dd66:	eba4 040c 	sub.w	r4, r4, ip
 801dd6a:	881b      	ldrh	r3, [r3, #0]
 801dd6c:	b2a4      	uxth	r4, r4
 801dd6e:	2c00      	cmp	r4, #0
 801dd70:	eba3 0309 	sub.w	r3, r3, r9
 801dd74:	bf18      	it	ne
 801dd76:	f04f 0c00 	movne.w	ip, #0
 801dd7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dd7e:	e762      	b.n	801dc46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dd80:	4b03      	ldr	r3, [pc, #12]	; (801dd90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dd82:	6818      	ldr	r0, [r3, #0]
 801dd84:	6803      	ldr	r3, [r0, #0]
 801dd86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd88:	4798      	blx	r3
 801dd8a:	b00f      	add	sp, #60	; 0x3c
 801dd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd90:	2001383c 	.word	0x2001383c
 801dd94:	20013836 	.word	0x20013836

0801dd98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dd98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd9c:	b093      	sub	sp, #76	; 0x4c
 801dd9e:	461c      	mov	r4, r3
 801dda0:	9205      	str	r2, [sp, #20]
 801dda2:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801dda6:	9101      	str	r1, [sp, #4]
 801dda8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ddaa:	9202      	str	r2, [sp, #8]
 801ddac:	2a00      	cmp	r2, #0
 801ddae:	f000 812c 	beq.w	801e00a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ddb2:	6820      	ldr	r0, [r4, #0]
 801ddb4:	6861      	ldr	r1, [r4, #4]
 801ddb6:	aa0e      	add	r2, sp, #56	; 0x38
 801ddb8:	c203      	stmia	r2!, {r0, r1}
 801ddba:	6818      	ldr	r0, [r3, #0]
 801ddbc:	6859      	ldr	r1, [r3, #4]
 801ddbe:	aa10      	add	r2, sp, #64	; 0x40
 801ddc0:	c203      	stmia	r2!, {r0, r1}
 801ddc2:	a80e      	add	r0, sp, #56	; 0x38
 801ddc4:	f7f8 fe88 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddc8:	4621      	mov	r1, r4
 801ddca:	a810      	add	r0, sp, #64	; 0x40
 801ddcc:	f7f8 fec8 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ddd0:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801ddd4:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801ddd8:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801dddc:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801dde0:	bfde      	ittt	le
 801dde2:	b2b3      	uxthle	r3, r6
 801dde4:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801dde8:	fb92 f3f3 	sdivle	r3, r2, r3
 801ddec:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ddf0:	bfc8      	it	gt
 801ddf2:	2301      	movgt	r3, #1
 801ddf4:	fb92 f1f3 	sdiv	r1, r2, r3
 801ddf8:	fa1f fc81 	uxth.w	ip, r1
 801ddfc:	fb0c 2413 	mls	r4, ip, r3, r2
 801de00:	fb14 f406 	smulbb	r4, r4, r6
 801de04:	441d      	add	r5, r3
 801de06:	4404      	add	r4, r0
 801de08:	4661      	mov	r1, ip
 801de0a:	3d01      	subs	r5, #1
 801de0c:	b2a4      	uxth	r4, r4
 801de0e:	fb95 f5f3 	sdiv	r5, r5, r3
 801de12:	b131      	cbz	r1, 801de22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801de14:	9b05      	ldr	r3, [sp, #20]
 801de16:	9901      	ldr	r1, [sp, #4]
 801de18:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801de1c:	ba1b      	rev	r3, r3
 801de1e:	4419      	add	r1, r3
 801de20:	9101      	str	r1, [sp, #4]
 801de22:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801de26:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801de2a:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801de2e:	4418      	add	r0, r3
 801de30:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801de34:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801de38:	441a      	add	r2, r3
 801de3a:	4b75      	ldr	r3, [pc, #468]	; (801e010 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801de3c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801de40:	6818      	ldr	r0, [r3, #0]
 801de42:	6803      	ldr	r3, [r0, #0]
 801de44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de46:	4798      	blx	r3
 801de48:	4972      	ldr	r1, [pc, #456]	; (801e014 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801de4a:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801de4e:	880b      	ldrh	r3, [r1, #0]
 801de50:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801de54:	910d      	str	r1, [sp, #52]	; 0x34
 801de56:	fb03 c202 	mla	r2, r3, r2, ip
 801de5a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801de5e:	4373      	muls	r3, r6
 801de60:	b2ad      	uxth	r5, r5
 801de62:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801de66:	00ad      	lsls	r5, r5, #2
 801de68:	9308      	str	r3, [sp, #32]
 801de6a:	1d2b      	adds	r3, r5, #4
 801de6c:	9309      	str	r3, [sp, #36]	; 0x24
 801de6e:	9b02      	ldr	r3, [sp, #8]
 801de70:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801de74:	9106      	str	r1, [sp, #24]
 801de76:	43da      	mvns	r2, r3
 801de78:	2c00      	cmp	r4, #0
 801de7a:	bf0c      	ite	eq
 801de7c:	46dc      	moveq	ip, fp
 801de7e:	f04f 0c00 	movne.w	ip, #0
 801de82:	2300      	movs	r3, #0
 801de84:	b2d2      	uxtb	r2, r2
 801de86:	fa1f fc8c 	uxth.w	ip, ip
 801de8a:	9303      	str	r3, [sp, #12]
 801de8c:	9207      	str	r2, [sp, #28]
 801de8e:	9a08      	ldr	r2, [sp, #32]
 801de90:	4282      	cmp	r2, r0
 801de92:	f240 80b5 	bls.w	801e000 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801de96:	b963      	cbnz	r3, 801deb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801de98:	9b01      	ldr	r3, [sp, #4]
 801de9a:	781a      	ldrb	r2, [r3, #0]
 801de9c:	0993      	lsrs	r3, r2, #6
 801de9e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dea2:	9203      	str	r2, [sp, #12]
 801dea4:	1e5a      	subs	r2, r3, #1
 801dea6:	2a02      	cmp	r2, #2
 801dea8:	d815      	bhi.n	801ded6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801deaa:	9a01      	ldr	r2, [sp, #4]
 801deac:	3201      	adds	r2, #1
 801deae:	9201      	str	r2, [sp, #4]
 801deb0:	b29b      	uxth	r3, r3
 801deb2:	b1b4      	cbz	r4, 801dee2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801deb4:	429c      	cmp	r4, r3
 801deb6:	bf95      	itete	ls
 801deb8:	1b1c      	subls	r4, r3, r4
 801deba:	1ae4      	subhi	r4, r4, r3
 801debc:	fa1f f884 	uxthls.w	r8, r4
 801dec0:	b2a4      	uxthhi	r4, r4
 801dec2:	bf87      	ittee	hi
 801dec4:	4666      	movhi	r6, ip
 801dec6:	f04f 0800 	movhi.w	r8, #0
 801deca:	fa1f f68b 	uxthls.w	r6, fp
 801dece:	2400      	movls	r4, #0
 801ded0:	4643      	mov	r3, r8
 801ded2:	46b4      	mov	ip, r6
 801ded4:	e7db      	b.n	801de8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801ded6:	9a01      	ldr	r2, [sp, #4]
 801ded8:	9b01      	ldr	r3, [sp, #4]
 801deda:	3202      	adds	r2, #2
 801dedc:	785b      	ldrb	r3, [r3, #1]
 801dede:	9201      	str	r2, [sp, #4]
 801dee0:	e7e7      	b.n	801deb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dee2:	2203      	movs	r2, #3
 801dee4:	4615      	mov	r5, r2
 801dee6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dee8:	9a03      	ldr	r2, [sp, #12]
 801deea:	fb15 1202 	smlabb	r2, r5, r2, r1
 801deee:	9905      	ldr	r1, [sp, #20]
 801def0:	4563      	cmp	r3, ip
 801def2:	eb01 0502 	add.w	r5, r1, r2
 801def6:	9902      	ldr	r1, [sp, #8]
 801def8:	bf29      	itett	cs
 801defa:	eba3 080c 	subcs.w	r8, r3, ip
 801defe:	ebac 0603 	subcc.w	r6, ip, r3
 801df02:	fa1f f888 	uxthcs.w	r8, r8
 801df06:	46e1      	movcs	r9, ip
 801df08:	bf2f      	iteee	cs
 801df0a:	4626      	movcs	r6, r4
 801df0c:	b2b6      	uxthcc	r6, r6
 801df0e:	4699      	movcc	r9, r3
 801df10:	46a0      	movcc	r8, r4
 801df12:	29ff      	cmp	r1, #255	; 0xff
 801df14:	d04a      	beq.n	801dfac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801df16:	9f06      	ldr	r7, [sp, #24]
 801df18:	78a9      	ldrb	r1, [r5, #2]
 801df1a:	9004      	str	r0, [sp, #16]
 801df1c:	4379      	muls	r1, r7
 801df1e:	910a      	str	r1, [sp, #40]	; 0x28
 801df20:	7869      	ldrb	r1, [r5, #1]
 801df22:	4379      	muls	r1, r7
 801df24:	910b      	str	r1, [sp, #44]	; 0x2c
 801df26:	9905      	ldr	r1, [sp, #20]
 801df28:	5c8a      	ldrb	r2, [r1, r2]
 801df2a:	437a      	muls	r2, r7
 801df2c:	920c      	str	r2, [sp, #48]	; 0x30
 801df2e:	46ca      	mov	sl, r9
 801df30:	f1ba 0f00 	cmp.w	sl, #0
 801df34:	d03d      	beq.n	801dfb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801df36:	9a04      	ldr	r2, [sp, #16]
 801df38:	9f07      	ldr	r7, [sp, #28]
 801df3a:	8812      	ldrh	r2, [r2, #0]
 801df3c:	1215      	asrs	r5, r2, #8
 801df3e:	46be      	mov	lr, r7
 801df40:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df44:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801df46:	10d1      	asrs	r1, r2, #3
 801df48:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801df4c:	fb05 750e 	mla	r5, r5, lr, r7
 801df50:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801df54:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801df56:	00d2      	lsls	r2, r2, #3
 801df58:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801df5c:	fb01 710e 	mla	r1, r1, lr, r7
 801df60:	b2d2      	uxtb	r2, r2
 801df62:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801df64:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801df68:	b2ad      	uxth	r5, r5
 801df6a:	fb02 720e 	mla	r2, r2, lr, r7
 801df6e:	b292      	uxth	r2, r2
 801df70:	f105 0e01 	add.w	lr, r5, #1
 801df74:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801df78:	f102 0e01 	add.w	lr, r2, #1
 801df7c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801df80:	b289      	uxth	r1, r1
 801df82:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801df86:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df8a:	4315      	orrs	r5, r2
 801df8c:	1c4a      	adds	r2, r1, #1
 801df8e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801df92:	0949      	lsrs	r1, r1, #5
 801df94:	9a04      	ldr	r2, [sp, #16]
 801df96:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801df9a:	430d      	orrs	r5, r1
 801df9c:	f822 5b02 	strh.w	r5, [r2], #2
 801dfa0:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dfa4:	9204      	str	r2, [sp, #16]
 801dfa6:	fa1f fa8a 	uxth.w	sl, sl
 801dfaa:	e7c1      	b.n	801df30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801dfac:	4649      	mov	r1, r9
 801dfae:	4686      	mov	lr, r0
 801dfb0:	b999      	cbnz	r1, 801dfda <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801dfb2:	4563      	cmp	r3, ip
 801dfb4:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801dfb8:	d38a      	bcc.n	801ded0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801dfba:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801dfbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dfc0:	fa1f f68b 	uxth.w	r6, fp
 801dfc4:	1ba4      	subs	r4, r4, r6
 801dfc6:	881b      	ldrh	r3, [r3, #0]
 801dfc8:	b2a4      	uxth	r4, r4
 801dfca:	2c00      	cmp	r4, #0
 801dfcc:	eba3 030b 	sub.w	r3, r3, fp
 801dfd0:	bf18      	it	ne
 801dfd2:	2600      	movne	r6, #0
 801dfd4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dfd8:	e77a      	b.n	801ded0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801dfda:	78aa      	ldrb	r2, [r5, #2]
 801dfdc:	4f0e      	ldr	r7, [pc, #56]	; (801e018 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801dfde:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801dfe2:	786a      	ldrb	r2, [r5, #1]
 801dfe4:	00d2      	lsls	r2, r2, #3
 801dfe6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dfea:	ea4a 0202 	orr.w	r2, sl, r2
 801dfee:	f895 a000 	ldrb.w	sl, [r5]
 801dff2:	3901      	subs	r1, #1
 801dff4:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801dff8:	f82e 2b02 	strh.w	r2, [lr], #2
 801dffc:	b289      	uxth	r1, r1
 801dffe:	e7d7      	b.n	801dfb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801e000:	4b03      	ldr	r3, [pc, #12]	; (801e010 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801e002:	6818      	ldr	r0, [r3, #0]
 801e004:	6803      	ldr	r3, [r0, #0]
 801e006:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e008:	4798      	blx	r3
 801e00a:	b013      	add	sp, #76	; 0x4c
 801e00c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e010:	2001383c 	.word	0x2001383c
 801e014:	20013836 	.word	0x20013836
 801e018:	fffff800 	.word	0xfffff800

0801e01c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801e01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e020:	b09d      	sub	sp, #116	; 0x74
 801e022:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801e026:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801e02a:	920e      	str	r2, [sp, #56]	; 0x38
 801e02c:	461c      	mov	r4, r3
 801e02e:	4683      	mov	fp, r0
 801e030:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e032:	2a00      	cmp	r2, #0
 801e034:	f000 81e0 	beq.w	801e3f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801e038:	6820      	ldr	r0, [r4, #0]
 801e03a:	6861      	ldr	r1, [r4, #4]
 801e03c:	aa18      	add	r2, sp, #96	; 0x60
 801e03e:	c203      	stmia	r2!, {r0, r1}
 801e040:	6818      	ldr	r0, [r3, #0]
 801e042:	6859      	ldr	r1, [r3, #4]
 801e044:	aa1a      	add	r2, sp, #104	; 0x68
 801e046:	c203      	stmia	r2!, {r0, r1}
 801e048:	a818      	add	r0, sp, #96	; 0x60
 801e04a:	f7f8 fd45 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e04e:	4621      	mov	r1, r4
 801e050:	a81a      	add	r0, sp, #104	; 0x68
 801e052:	f7f8 fd85 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e056:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801e05a:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801e05e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e062:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e066:	bfd7      	itett	le
 801e068:	b29a      	uxthle	r2, r3
 801e06a:	2201      	movgt	r2, #1
 801e06c:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e070:	fb91 f2f2 	sdivle	r2, r1, r2
 801e074:	9202      	str	r2, [sp, #8]
 801e076:	9802      	ldr	r0, [sp, #8]
 801e078:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801e07c:	fb92 f0f0 	sdiv	r0, r2, r0
 801e080:	b280      	uxth	r0, r0
 801e082:	900f      	str	r0, [sp, #60]	; 0x3c
 801e084:	9902      	ldr	r1, [sp, #8]
 801e086:	9802      	ldr	r0, [sp, #8]
 801e088:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e08a:	440c      	add	r4, r1
 801e08c:	fb05 2510 	mls	r5, r5, r0, r2
 801e090:	fb15 f503 	smulbb	r5, r5, r3
 801e094:	3c01      	subs	r4, #1
 801e096:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801e09a:	fb94 f4f1 	sdiv	r4, r4, r1
 801e09e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801e0a2:	440d      	add	r5, r1
 801e0a4:	4419      	add	r1, r3
 801e0a6:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801e0aa:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801e0ae:	441a      	add	r2, r3
 801e0b0:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e0b4:	9306      	str	r3, [sp, #24]
 801e0b6:	4bb3      	ldr	r3, [pc, #716]	; (801e384 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801e0b8:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801e0bc:	6818      	ldr	r0, [r3, #0]
 801e0be:	6803      	ldr	r3, [r0, #0]
 801e0c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e0c2:	4798      	blx	r3
 801e0c4:	4bb0      	ldr	r3, [pc, #704]	; (801e388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801e0c6:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801e0ca:	881a      	ldrh	r2, [r3, #0]
 801e0cc:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801e0d0:	9316      	str	r3, [sp, #88]	; 0x58
 801e0d2:	fb02 7101 	mla	r1, r2, r1, r7
 801e0d6:	3401      	adds	r4, #1
 801e0d8:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801e0dc:	b2a4      	uxth	r4, r4
 801e0de:	4356      	muls	r6, r2
 801e0e0:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801e0e4:	00a4      	lsls	r4, r4, #2
 801e0e6:	920a      	str	r2, [sp, #40]	; 0x28
 801e0e8:	1d22      	adds	r2, r4, #4
 801e0ea:	b2ad      	uxth	r5, r5
 801e0ec:	9213      	str	r2, [sp, #76]	; 0x4c
 801e0ee:	4ba7      	ldr	r3, [pc, #668]	; (801e38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801e0f0:	9a06      	ldr	r2, [sp, #24]
 801e0f2:	2d00      	cmp	r5, #0
 801e0f4:	bf0c      	ite	eq
 801e0f6:	4611      	moveq	r1, r2
 801e0f8:	2100      	movne	r1, #0
 801e0fa:	2200      	movs	r2, #0
 801e0fc:	eba3 030b 	sub.w	r3, r3, fp
 801e100:	b289      	uxth	r1, r1
 801e102:	920d      	str	r2, [sp, #52]	; 0x34
 801e104:	9317      	str	r3, [sp, #92]	; 0x5c
 801e106:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e108:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e10a:	fa12 f383 	uxtah	r3, r2, r3
 801e10e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801e110:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e114:	3304      	adds	r3, #4
 801e116:	9308      	str	r3, [sp, #32]
 801e118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e11a:	4543      	cmp	r3, r8
 801e11c:	f240 8167 	bls.w	801e3ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801e120:	9a02      	ldr	r2, [sp, #8]
 801e122:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801e126:	fbb5 f3f3 	udiv	r3, r5, r3
 801e12a:	1ad3      	subs	r3, r2, r3
 801e12c:	b29b      	uxth	r3, r3
 801e12e:	9314      	str	r3, [sp, #80]	; 0x50
 801e130:	9b08      	ldr	r3, [sp, #32]
 801e132:	9808      	ldr	r0, [sp, #32]
 801e134:	785a      	ldrb	r2, [r3, #1]
 801e136:	789b      	ldrb	r3, [r3, #2]
 801e138:	7800      	ldrb	r0, [r0, #0]
 801e13a:	9010      	str	r0, [sp, #64]	; 0x40
 801e13c:	021b      	lsls	r3, r3, #8
 801e13e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e142:	9a08      	ldr	r2, [sp, #32]
 801e144:	78d2      	ldrb	r2, [r2, #3]
 801e146:	4313      	orrs	r3, r2
 801e148:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801e14a:	3001      	adds	r0, #1
 801e14c:	441a      	add	r2, r3
 801e14e:	9007      	str	r0, [sp, #28]
 801e150:	1c50      	adds	r0, r2, #1
 801e152:	9005      	str	r0, [sp, #20]
 801e154:	7852      	ldrb	r2, [r2, #1]
 801e156:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e158:	0212      	lsls	r2, r2, #8
 801e15a:	5cc3      	ldrb	r3, [r0, r3]
 801e15c:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e160:	431a      	orrs	r2, r3
 801e162:	b293      	uxth	r3, r2
 801e164:	930b      	str	r3, [sp, #44]	; 0x2c
 801e166:	2300      	movs	r3, #0
 801e168:	9309      	str	r3, [sp, #36]	; 0x24
 801e16a:	2301      	movs	r3, #1
 801e16c:	9301      	str	r3, [sp, #4]
 801e16e:	9304      	str	r3, [sp, #16]
 801e170:	2300      	movs	r3, #0
 801e172:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801e176:	9303      	str	r3, [sp, #12]
 801e178:	f04f 0e01 	mov.w	lr, #1
 801e17c:	2d00      	cmp	r5, #0
 801e17e:	d07c      	beq.n	801e27a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801e180:	45ae      	cmp	lr, r5
 801e182:	d26b      	bcs.n	801e25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801e184:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e186:	eba5 050e 	sub.w	r5, r5, lr
 801e18a:	4543      	cmp	r3, r8
 801e18c:	b2ad      	uxth	r5, r5
 801e18e:	460c      	mov	r4, r1
 801e190:	d802      	bhi.n	801e198 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801e192:	e070      	b.n	801e276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801e194:	2b00      	cmp	r3, #0
 801e196:	d15c      	bne.n	801e252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e198:	9b05      	ldr	r3, [sp, #20]
 801e19a:	9a04      	ldr	r2, [sp, #16]
 801e19c:	785b      	ldrb	r3, [r3, #1]
 801e19e:	9904      	ldr	r1, [sp, #16]
 801e1a0:	f1c2 0207 	rsb	r2, r2, #7
 801e1a4:	4093      	lsls	r3, r2
 801e1a6:	005b      	lsls	r3, r3, #1
 801e1a8:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e1ac:	9b05      	ldr	r3, [sp, #20]
 801e1ae:	781b      	ldrb	r3, [r3, #0]
 801e1b0:	410b      	asrs	r3, r1
 801e1b2:	3101      	adds	r1, #1
 801e1b4:	b2c9      	uxtb	r1, r1
 801e1b6:	2908      	cmp	r1, #8
 801e1b8:	9104      	str	r1, [sp, #16]
 801e1ba:	9905      	ldr	r1, [sp, #20]
 801e1bc:	bf0a      	itet	eq
 801e1be:	3102      	addeq	r1, #2
 801e1c0:	3101      	addne	r1, #1
 801e1c2:	9105      	streq	r1, [sp, #20]
 801e1c4:	b2db      	uxtb	r3, r3
 801e1c6:	bf0a      	itet	eq
 801e1c8:	2100      	moveq	r1, #0
 801e1ca:	9105      	strne	r1, [sp, #20]
 801e1cc:	9104      	streq	r1, [sp, #16]
 801e1ce:	4313      	orrs	r3, r2
 801e1d0:	9910      	ldr	r1, [sp, #64]	; 0x40
 801e1d2:	b29a      	uxth	r2, r3
 801e1d4:	4291      	cmp	r1, r2
 801e1d6:	d30a      	bcc.n	801e1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e1d8:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801e1dc:	2301      	movs	r3, #1
 801e1de:	9907      	ldr	r1, [sp, #28]
 801e1e0:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e1e4:	d30f      	bcc.n	801e206 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e1e6:	2100      	movs	r1, #0
 801e1e8:	9301      	str	r3, [sp, #4]
 801e1ea:	9103      	str	r1, [sp, #12]
 801e1ec:	e032      	b.n	801e254 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801e1ee:	9b07      	ldr	r3, [sp, #28]
 801e1f0:	429a      	cmp	r2, r3
 801e1f2:	d318      	bcc.n	801e226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801e1f4:	9b01      	ldr	r3, [sp, #4]
 801e1f6:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801e1fa:	445b      	add	r3, fp
 801e1fc:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e200:	9b01      	ldr	r3, [sp, #4]
 801e202:	3301      	adds	r3, #1
 801e204:	b29b      	uxth	r3, r3
 801e206:	9907      	ldr	r1, [sp, #28]
 801e208:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801e20c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e210:	7108      	strb	r0, [r1, #4]
 801e212:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e214:	80c8      	strh	r0, [r1, #6]
 801e216:	9801      	ldr	r0, [sp, #4]
 801e218:	3001      	adds	r0, #1
 801e21a:	7148      	strb	r0, [r1, #5]
 801e21c:	9907      	ldr	r1, [sp, #28]
 801e21e:	3101      	adds	r1, #1
 801e220:	b289      	uxth	r1, r1
 801e222:	9107      	str	r1, [sp, #28]
 801e224:	e7df      	b.n	801e1e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801e226:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801e22a:	4611      	mov	r1, r2
 801e22c:	795b      	ldrb	r3, [r3, #5]
 801e22e:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801e232:	4458      	add	r0, fp
 801e234:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801e236:	4406      	add	r6, r0
 801e238:	2e00      	cmp	r6, #0
 801e23a:	dd06      	ble.n	801e24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801e23c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e240:	790e      	ldrb	r6, [r1, #4]
 801e242:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801e246:	88c9      	ldrh	r1, [r1, #6]
 801e248:	e7f4      	b.n	801e234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801e24a:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801e24e:	b29b      	uxth	r3, r3
 801e250:	e7c5      	b.n	801e1de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801e252:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e254:	920b      	str	r2, [sp, #44]	; 0x2c
 801e256:	4621      	mov	r1, r4
 801e258:	469e      	mov	lr, r3
 801e25a:	e78f      	b.n	801e17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801e25c:	9a03      	ldr	r2, [sp, #12]
 801e25e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e262:	442a      	add	r2, r5
 801e264:	ebae 0305 	sub.w	r3, lr, r5
 801e268:	b292      	uxth	r2, r2
 801e26a:	b29b      	uxth	r3, r3
 801e26c:	9203      	str	r2, [sp, #12]
 801e26e:	2500      	movs	r5, #0
 801e270:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e272:	4542      	cmp	r2, r8
 801e274:	d88e      	bhi.n	801e194 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801e276:	4621      	mov	r1, r4
 801e278:	e74e      	b.n	801e118 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801e27a:	458e      	cmp	lr, r1
 801e27c:	bf29      	itett	cs
 801e27e:	ebae 0301 	subcs.w	r3, lr, r1
 801e282:	eba1 040e 	subcc.w	r4, r1, lr
 801e286:	b29b      	uxthcs	r3, r3
 801e288:	910c      	strcs	r1, [sp, #48]	; 0x30
 801e28a:	bf2f      	iteee	cs
 801e28c:	462c      	movcs	r4, r5
 801e28e:	b2a4      	uxthcc	r4, r4
 801e290:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801e294:	462b      	movcc	r3, r5
 801e296:	f04f 0900 	mov.w	r9, #0
 801e29a:	9a03      	ldr	r2, [sp, #12]
 801e29c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e29e:	444a      	add	r2, r9
 801e2a0:	4548      	cmp	r0, r9
 801e2a2:	b292      	uxth	r2, r2
 801e2a4:	d074      	beq.n	801e390 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801e2a6:	445a      	add	r2, fp
 801e2a8:	2004      	movs	r0, #4
 801e2aa:	4605      	mov	r5, r0
 801e2ac:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801e2b0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e2b2:	fb15 0202 	smlabb	r2, r5, r2, r0
 801e2b6:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e2b8:	5880      	ldr	r0, [r0, r2]
 801e2ba:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801e2be:	d014      	beq.n	801e2ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e2c0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e2c4:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801e2c8:	d112      	bne.n	801e2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e2ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e2cc:	2aff      	cmp	r2, #255	; 0xff
 801e2ce:	d10f      	bne.n	801e2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e2d0:	0942      	lsrs	r2, r0, #5
 801e2d2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e2d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e2da:	f025 0507 	bic.w	r5, r5, #7
 801e2de:	4315      	orrs	r5, r2
 801e2e0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e2e4:	4305      	orrs	r5, r0
 801e2e6:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801e2ea:	f109 0901 	add.w	r9, r9, #1
 801e2ee:	e7d4      	b.n	801e29a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801e2f0:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801e2f4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e2f8:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801e2fc:	9215      	str	r2, [sp, #84]	; 0x54
 801e2fe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e300:	fb02 fa0a 	mul.w	sl, r2, sl
 801e304:	f10a 0201 	add.w	r2, sl, #1
 801e308:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801e30c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e310:	1212      	asrs	r2, r2, #8
 801e312:	fa1f fa82 	uxth.w	sl, r2
 801e316:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801e31a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e31e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e322:	43d2      	mvns	r2, r2
 801e324:	b2d2      	uxtb	r2, r2
 801e326:	fb16 f60a 	smulbb	r6, r6, sl
 801e32a:	fa5f fc8c 	uxtb.w	ip, ip
 801e32e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e332:	b2c0      	uxtb	r0, r0
 801e334:	fb07 6702 	mla	r7, r7, r2, r6
 801e338:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801e33c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801e33e:	fb10 f00a 	smulbb	r0, r0, sl
 801e342:	fb0c 0002 	mla	r0, ip, r2, r0
 801e346:	b2ed      	uxtb	r5, r5
 801e348:	b2bf      	uxth	r7, r7
 801e34a:	fb15 f50a 	smulbb	r5, r5, sl
 801e34e:	b280      	uxth	r0, r0
 801e350:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e354:	fb06 5602 	mla	r6, r6, r2, r5
 801e358:	1c7a      	adds	r2, r7, #1
 801e35a:	1c45      	adds	r5, r0, #1
 801e35c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e360:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e364:	b2b6      	uxth	r6, r6
 801e366:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e36a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e36e:	432f      	orrs	r7, r5
 801e370:	1c75      	adds	r5, r6, #1
 801e372:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e376:	096d      	lsrs	r5, r5, #5
 801e378:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e37c:	432f      	orrs	r7, r5
 801e37e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801e382:	e7b2      	b.n	801e2ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e384:	2001383c 	.word	0x2001383c
 801e388:	20013836 	.word	0x20013836
 801e38c:	fffff7fb 	.word	0xfffff7fb
 801e390:	9203      	str	r2, [sp, #12]
 801e392:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e394:	458e      	cmp	lr, r1
 801e396:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e39a:	f4ff af68 	bcc.w	801e26e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801e39e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801e3a0:	9906      	ldr	r1, [sp, #24]
 801e3a2:	8812      	ldrh	r2, [r2, #0]
 801e3a4:	1a52      	subs	r2, r2, r1
 801e3a6:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e3aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e3ac:	9914      	ldr	r1, [sp, #80]	; 0x50
 801e3ae:	3201      	adds	r2, #1
 801e3b0:	428a      	cmp	r2, r1
 801e3b2:	9209      	str	r2, [sp, #36]	; 0x24
 801e3b4:	d111      	bne.n	801e3da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801e3b6:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801e3ba:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801e3be:	9b06      	ldr	r3, [sp, #24]
 801e3c0:	eba5 0509 	sub.w	r5, r5, r9
 801e3c4:	b2ad      	uxth	r5, r5
 801e3c6:	2d00      	cmp	r5, #0
 801e3c8:	bf08      	it	eq
 801e3ca:	4619      	moveq	r1, r3
 801e3cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e3ce:	bf18      	it	ne
 801e3d0:	2100      	movne	r1, #0
 801e3d2:	3301      	adds	r3, #1
 801e3d4:	930d      	str	r3, [sp, #52]	; 0x34
 801e3d6:	b289      	uxth	r1, r1
 801e3d8:	e695      	b.n	801e106 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801e3da:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e3de:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801e3e2:	1b2d      	subs	r5, r5, r4
 801e3e4:	b2ad      	uxth	r5, r5
 801e3e6:	2d00      	cmp	r5, #0
 801e3e8:	bf18      	it	ne
 801e3ea:	2400      	movne	r4, #0
 801e3ec:	e740      	b.n	801e270 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801e3ee:	4b04      	ldr	r3, [pc, #16]	; (801e400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801e3f0:	6818      	ldr	r0, [r3, #0]
 801e3f2:	6803      	ldr	r3, [r0, #0]
 801e3f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e3f6:	4798      	blx	r3
 801e3f8:	b01d      	add	sp, #116	; 0x74
 801e3fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e3fe:	bf00      	nop
 801e400:	2001383c 	.word	0x2001383c

0801e404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e408:	b09f      	sub	sp, #124	; 0x7c
 801e40a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801e40e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801e412:	920a      	str	r2, [sp, #40]	; 0x28
 801e414:	461d      	mov	r5, r3
 801e416:	4604      	mov	r4, r0
 801e418:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e41a:	2a00      	cmp	r2, #0
 801e41c:	f000 81fa 	beq.w	801e814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801e420:	6828      	ldr	r0, [r5, #0]
 801e422:	6869      	ldr	r1, [r5, #4]
 801e424:	aa1a      	add	r2, sp, #104	; 0x68
 801e426:	c203      	stmia	r2!, {r0, r1}
 801e428:	6818      	ldr	r0, [r3, #0]
 801e42a:	6859      	ldr	r1, [r3, #4]
 801e42c:	aa1c      	add	r2, sp, #112	; 0x70
 801e42e:	c203      	stmia	r2!, {r0, r1}
 801e430:	a81a      	add	r0, sp, #104	; 0x68
 801e432:	f7f8 fb51 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e436:	4629      	mov	r1, r5
 801e438:	a81c      	add	r0, sp, #112	; 0x70
 801e43a:	f7f8 fb91 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e43e:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e442:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e446:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801e44a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e44e:	bfd7      	itett	le
 801e450:	b29a      	uxthle	r2, r3
 801e452:	2201      	movgt	r2, #1
 801e454:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e458:	fb91 f2f2 	sdivle	r2, r1, r2
 801e45c:	9201      	str	r2, [sp, #4]
 801e45e:	9801      	ldr	r0, [sp, #4]
 801e460:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801e464:	fb92 f0f0 	sdiv	r0, r2, r0
 801e468:	b280      	uxth	r0, r0
 801e46a:	9010      	str	r0, [sp, #64]	; 0x40
 801e46c:	9901      	ldr	r1, [sp, #4]
 801e46e:	9801      	ldr	r0, [sp, #4]
 801e470:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e472:	440e      	add	r6, r1
 801e474:	fb05 2510 	mls	r5, r5, r0, r2
 801e478:	fb15 f503 	smulbb	r5, r5, r3
 801e47c:	3e01      	subs	r6, #1
 801e47e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e482:	fb96 f6f1 	sdiv	r6, r6, r1
 801e486:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801e48a:	440d      	add	r5, r1
 801e48c:	4419      	add	r1, r3
 801e48e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801e492:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801e496:	441a      	add	r2, r3
 801e498:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801e49c:	9304      	str	r3, [sp, #16]
 801e49e:	4b96      	ldr	r3, [pc, #600]	; (801e6f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e4a0:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801e4a4:	6818      	ldr	r0, [r3, #0]
 801e4a6:	6803      	ldr	r3, [r0, #0]
 801e4a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4aa:	4798      	blx	r3
 801e4ac:	4b93      	ldr	r3, [pc, #588]	; (801e6fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e4ae:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801e4b2:	881a      	ldrh	r2, [r3, #0]
 801e4b4:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801e4b8:	9318      	str	r3, [sp, #96]	; 0x60
 801e4ba:	fb02 c101 	mla	r1, r2, r1, ip
 801e4be:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801e4c2:	4357      	muls	r7, r2
 801e4c4:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801e4c8:	3601      	adds	r6, #1
 801e4ca:	920b      	str	r2, [sp, #44]	; 0x2c
 801e4cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e4ce:	4b8c      	ldr	r3, [pc, #560]	; (801e700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e4d0:	b2b6      	uxth	r6, r6
 801e4d2:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801e4d6:	1d32      	adds	r2, r6, #4
 801e4d8:	9206      	str	r2, [sp, #24]
 801e4da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e4dc:	43d2      	mvns	r2, r2
 801e4de:	b2d2      	uxtb	r2, r2
 801e4e0:	b2ad      	uxth	r5, r5
 801e4e2:	9215      	str	r2, [sp, #84]	; 0x54
 801e4e4:	9a04      	ldr	r2, [sp, #16]
 801e4e6:	2d00      	cmp	r5, #0
 801e4e8:	bf0c      	ite	eq
 801e4ea:	4611      	moveq	r1, r2
 801e4ec:	2100      	movne	r1, #0
 801e4ee:	2200      	movs	r2, #0
 801e4f0:	1b1b      	subs	r3, r3, r4
 801e4f2:	b289      	uxth	r1, r1
 801e4f4:	920d      	str	r2, [sp, #52]	; 0x34
 801e4f6:	9319      	str	r3, [sp, #100]	; 0x64
 801e4f8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e4fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e4fc:	fa12 f383 	uxtah	r3, r2, r3
 801e500:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e502:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e506:	3304      	adds	r3, #4
 801e508:	9307      	str	r3, [sp, #28]
 801e50a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e50c:	455b      	cmp	r3, fp
 801e50e:	f240 817c 	bls.w	801e80a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801e512:	9a01      	ldr	r2, [sp, #4]
 801e514:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801e518:	fbb5 f3f3 	udiv	r3, r5, r3
 801e51c:	1ad3      	subs	r3, r2, r3
 801e51e:	b29b      	uxth	r3, r3
 801e520:	9316      	str	r3, [sp, #88]	; 0x58
 801e522:	9b07      	ldr	r3, [sp, #28]
 801e524:	9807      	ldr	r0, [sp, #28]
 801e526:	785a      	ldrb	r2, [r3, #1]
 801e528:	789b      	ldrb	r3, [r3, #2]
 801e52a:	7800      	ldrb	r0, [r0, #0]
 801e52c:	9011      	str	r0, [sp, #68]	; 0x44
 801e52e:	021b      	lsls	r3, r3, #8
 801e530:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e534:	9a07      	ldr	r2, [sp, #28]
 801e536:	78d2      	ldrb	r2, [r2, #3]
 801e538:	4313      	orrs	r3, r2
 801e53a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e53c:	3001      	adds	r0, #1
 801e53e:	441a      	add	r2, r3
 801e540:	9005      	str	r0, [sp, #20]
 801e542:	1c50      	adds	r0, r2, #1
 801e544:	9003      	str	r0, [sp, #12]
 801e546:	7852      	ldrb	r2, [r2, #1]
 801e548:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e54a:	0212      	lsls	r2, r2, #8
 801e54c:	5cc3      	ldrb	r3, [r0, r3]
 801e54e:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e552:	431a      	orrs	r2, r3
 801e554:	b293      	uxth	r3, r2
 801e556:	930c      	str	r3, [sp, #48]	; 0x30
 801e558:	2300      	movs	r3, #0
 801e55a:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801e55e:	9308      	str	r3, [sp, #32]
 801e560:	461a      	mov	r2, r3
 801e562:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e566:	930e      	str	r3, [sp, #56]	; 0x38
 801e568:	f04f 0801 	mov.w	r8, #1
 801e56c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801e570:	f8cd 8008 	str.w	r8, [sp, #8]
 801e574:	46c4      	mov	ip, r8
 801e576:	930f      	str	r3, [sp, #60]	; 0x3c
 801e578:	2d00      	cmp	r5, #0
 801e57a:	d07c      	beq.n	801e676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e57c:	45ac      	cmp	ip, r5
 801e57e:	d26c      	bcs.n	801e65a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801e580:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e582:	eba5 050c 	sub.w	r5, r5, ip
 801e586:	455b      	cmp	r3, fp
 801e588:	b2ad      	uxth	r5, r5
 801e58a:	4608      	mov	r0, r1
 801e58c:	d802      	bhi.n	801e594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801e58e:	e070      	b.n	801e672 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e590:	2b00      	cmp	r3, #0
 801e592:	d15c      	bne.n	801e64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e594:	9b03      	ldr	r3, [sp, #12]
 801e596:	9a02      	ldr	r2, [sp, #8]
 801e598:	785b      	ldrb	r3, [r3, #1]
 801e59a:	9902      	ldr	r1, [sp, #8]
 801e59c:	f1c2 0207 	rsb	r2, r2, #7
 801e5a0:	4093      	lsls	r3, r2
 801e5a2:	005b      	lsls	r3, r3, #1
 801e5a4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e5a8:	9b03      	ldr	r3, [sp, #12]
 801e5aa:	781b      	ldrb	r3, [r3, #0]
 801e5ac:	410b      	asrs	r3, r1
 801e5ae:	3101      	adds	r1, #1
 801e5b0:	b2c9      	uxtb	r1, r1
 801e5b2:	2908      	cmp	r1, #8
 801e5b4:	9102      	str	r1, [sp, #8]
 801e5b6:	9903      	ldr	r1, [sp, #12]
 801e5b8:	bf0a      	itet	eq
 801e5ba:	3102      	addeq	r1, #2
 801e5bc:	3101      	addne	r1, #1
 801e5be:	9103      	streq	r1, [sp, #12]
 801e5c0:	b2db      	uxtb	r3, r3
 801e5c2:	bf0a      	itet	eq
 801e5c4:	2100      	moveq	r1, #0
 801e5c6:	9103      	strne	r1, [sp, #12]
 801e5c8:	9102      	streq	r1, [sp, #8]
 801e5ca:	4313      	orrs	r3, r2
 801e5cc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e5ce:	b29a      	uxth	r2, r3
 801e5d0:	4291      	cmp	r1, r2
 801e5d2:	d30a      	bcc.n	801e5ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e5d4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e5d8:	2301      	movs	r3, #1
 801e5da:	9905      	ldr	r1, [sp, #20]
 801e5dc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e5e0:	d30f      	bcc.n	801e602 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e5e2:	2100      	movs	r1, #0
 801e5e4:	4698      	mov	r8, r3
 801e5e6:	9100      	str	r1, [sp, #0]
 801e5e8:	e032      	b.n	801e650 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e5ea:	9b05      	ldr	r3, [sp, #20]
 801e5ec:	429a      	cmp	r2, r3
 801e5ee:	d318      	bcc.n	801e622 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e5f0:	eb04 0308 	add.w	r3, r4, r8
 801e5f4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801e5f8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e5fc:	f108 0301 	add.w	r3, r8, #1
 801e600:	b29b      	uxth	r3, r3
 801e602:	9905      	ldr	r1, [sp, #20]
 801e604:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e608:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e60c:	710e      	strb	r6, [r1, #4]
 801e60e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e610:	80ce      	strh	r6, [r1, #6]
 801e612:	f108 0601 	add.w	r6, r8, #1
 801e616:	714e      	strb	r6, [r1, #5]
 801e618:	9905      	ldr	r1, [sp, #20]
 801e61a:	3101      	adds	r1, #1
 801e61c:	b289      	uxth	r1, r1
 801e61e:	9105      	str	r1, [sp, #20]
 801e620:	e7df      	b.n	801e5e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e622:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e626:	4611      	mov	r1, r2
 801e628:	795b      	ldrb	r3, [r3, #5]
 801e62a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e62e:	4426      	add	r6, r4
 801e630:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801e632:	4437      	add	r7, r6
 801e634:	2f00      	cmp	r7, #0
 801e636:	dd06      	ble.n	801e646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e638:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e63c:	790f      	ldrb	r7, [r1, #4]
 801e63e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e642:	88c9      	ldrh	r1, [r1, #6]
 801e644:	e7f4      	b.n	801e630 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e646:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e64a:	b29b      	uxth	r3, r3
 801e64c:	e7c5      	b.n	801e5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e64e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e650:	920c      	str	r2, [sp, #48]	; 0x30
 801e652:	4601      	mov	r1, r0
 801e654:	9a00      	ldr	r2, [sp, #0]
 801e656:	469c      	mov	ip, r3
 801e658:	e78e      	b.n	801e578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e65a:	1957      	adds	r7, r2, r5
 801e65c:	ebac 0305 	sub.w	r3, ip, r5
 801e660:	b2ba      	uxth	r2, r7
 801e662:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e666:	9200      	str	r2, [sp, #0]
 801e668:	b29b      	uxth	r3, r3
 801e66a:	2500      	movs	r5, #0
 801e66c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e66e:	455a      	cmp	r2, fp
 801e670:	d88e      	bhi.n	801e590 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e672:	4601      	mov	r1, r0
 801e674:	e749      	b.n	801e50a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e676:	458c      	cmp	ip, r1
 801e678:	bf2c      	ite	cs
 801e67a:	4628      	movcs	r0, r5
 801e67c:	462b      	movcc	r3, r5
 801e67e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e680:	bf27      	ittee	cs
 801e682:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e684:	ebac 0301 	subcs.w	r3, ip, r1
 801e688:	eba1 000c 	subcc.w	r0, r1, ip
 801e68c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e690:	bf2c      	ite	cs
 801e692:	b29b      	uxthcs	r3, r3
 801e694:	b280      	uxthcc	r0, r0
 801e696:	2dff      	cmp	r5, #255	; 0xff
 801e698:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e69a:	eb02 0705 	add.w	r7, r2, r5
 801e69e:	b2bd      	uxth	r5, r7
 801e6a0:	9500      	str	r5, [sp, #0]
 801e6a2:	d12f      	bne.n	801e704 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e6a4:	465e      	mov	r6, fp
 801e6a6:	9d00      	ldr	r5, [sp, #0]
 801e6a8:	42aa      	cmp	r2, r5
 801e6aa:	f040 8084 	bne.w	801e7b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e6ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e6b0:	458c      	cmp	ip, r1
 801e6b2:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e6b6:	d3d8      	bcc.n	801e66a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e6b8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e6ba:	9904      	ldr	r1, [sp, #16]
 801e6bc:	8812      	ldrh	r2, [r2, #0]
 801e6be:	1a52      	subs	r2, r2, r1
 801e6c0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e6c4:	9a08      	ldr	r2, [sp, #32]
 801e6c6:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e6c8:	3201      	adds	r2, #1
 801e6ca:	428a      	cmp	r2, r1
 801e6cc:	9208      	str	r2, [sp, #32]
 801e6ce:	f040 8092 	bne.w	801e7f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e6d2:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e6d6:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e6da:	9b04      	ldr	r3, [sp, #16]
 801e6dc:	eba5 050c 	sub.w	r5, r5, ip
 801e6e0:	b2ad      	uxth	r5, r5
 801e6e2:	2d00      	cmp	r5, #0
 801e6e4:	bf08      	it	eq
 801e6e6:	4619      	moveq	r1, r3
 801e6e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e6ea:	bf18      	it	ne
 801e6ec:	2100      	movne	r1, #0
 801e6ee:	3301      	adds	r3, #1
 801e6f0:	930d      	str	r3, [sp, #52]	; 0x34
 801e6f2:	b289      	uxth	r1, r1
 801e6f4:	e700      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e6f6:	bf00      	nop
 801e6f8:	2001383c 	.word	0x2001383c
 801e6fc:	20013836 	.word	0x20013836
 801e700:	fffff7fb 	.word	0xfffff7fb
 801e704:	46d9      	mov	r9, fp
 801e706:	9d00      	ldr	r5, [sp, #0]
 801e708:	42aa      	cmp	r2, r5
 801e70a:	d0d0      	beq.n	801e6ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e70c:	1c55      	adds	r5, r2, #1
 801e70e:	4422      	add	r2, r4
 801e710:	9517      	str	r5, [sp, #92]	; 0x5c
 801e712:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e716:	9a06      	ldr	r2, [sp, #24]
 801e718:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e71c:	4472      	add	r2, lr
 801e71e:	9212      	str	r2, [sp, #72]	; 0x48
 801e720:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e722:	f8b9 2000 	ldrh.w	r2, [r9]
 801e726:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e72a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e72c:	1216      	asrs	r6, r2, #8
 801e72e:	fb1a fa07 	smulbb	sl, sl, r7
 801e732:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e736:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e738:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e73c:	fb06 a607 	mla	r6, r6, r7, sl
 801e740:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e742:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e746:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e748:	10d5      	asrs	r5, r2, #3
 801e74a:	fb1a fa07 	smulbb	sl, sl, r7
 801e74e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e752:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e754:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e758:	fb05 a507 	mla	r5, r5, r7, sl
 801e75c:	9f06      	ldr	r7, [sp, #24]
 801e75e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e762:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e764:	00d2      	lsls	r2, r2, #3
 801e766:	fb1e fe07 	smulbb	lr, lr, r7
 801e76a:	b2d2      	uxtb	r2, r2
 801e76c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e76e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e772:	b2b6      	uxth	r6, r6
 801e774:	fb02 e207 	mla	r2, r2, r7, lr
 801e778:	b292      	uxth	r2, r2
 801e77a:	b2ad      	uxth	r5, r5
 801e77c:	f106 0a01 	add.w	sl, r6, #1
 801e780:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e784:	f102 0e01 	add.w	lr, r2, #1
 801e788:	f105 0a01 	add.w	sl, r5, #1
 801e78c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e790:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e794:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e798:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e79c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e7a0:	ea4e 0606 	orr.w	r6, lr, r6
 801e7a4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e7a8:	ea46 060a 	orr.w	r6, r6, sl
 801e7ac:	f829 6b02 	strh.w	r6, [r9], #2
 801e7b0:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e7b4:	e7a7      	b.n	801e706 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e7b6:	f102 0e01 	add.w	lr, r2, #1
 801e7ba:	4422      	add	r2, r4
 801e7bc:	9f06      	ldr	r7, [sp, #24]
 801e7be:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e7c2:	9a06      	ldr	r2, [sp, #24]
 801e7c4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e7c8:	eb02 0a05 	add.w	sl, r2, r5
 801e7cc:	4a13      	ldr	r2, [pc, #76]	; (801e81c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e7ce:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e7d2:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e7d6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e7da:	00d2      	lsls	r2, r2, #3
 801e7dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e7e0:	ea49 0202 	orr.w	r2, r9, r2
 801e7e4:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e7e8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e7ec:	f826 2b02 	strh.w	r2, [r6], #2
 801e7f0:	fa1f f28e 	uxth.w	r2, lr
 801e7f4:	e757      	b.n	801e6a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e7f6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e7fa:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e7fe:	1a2d      	subs	r5, r5, r0
 801e800:	b2ad      	uxth	r5, r5
 801e802:	2d00      	cmp	r5, #0
 801e804:	bf18      	it	ne
 801e806:	2000      	movne	r0, #0
 801e808:	e730      	b.n	801e66c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e80a:	4b05      	ldr	r3, [pc, #20]	; (801e820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e80c:	6818      	ldr	r0, [r3, #0]
 801e80e:	6803      	ldr	r3, [r0, #0]
 801e810:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e812:	4798      	blx	r3
 801e814:	b01f      	add	sp, #124	; 0x7c
 801e816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e81a:	bf00      	nop
 801e81c:	fffff800 	.word	0xfffff800
 801e820:	2001383c 	.word	0x2001383c

0801e824 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e828:	b091      	sub	sp, #68	; 0x44
 801e82a:	469b      	mov	fp, r3
 801e82c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e830:	4616      	mov	r6, r2
 801e832:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e836:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e83a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e83e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e842:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e846:	4604      	mov	r4, r0
 801e848:	460d      	mov	r5, r1
 801e84a:	4640      	mov	r0, r8
 801e84c:	4659      	mov	r1, fp
 801e84e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e852:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e856:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e85a:	f7f2 fb9f 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801e85e:	4631      	mov	r1, r6
 801e860:	4640      	mov	r0, r8
 801e862:	f7f2 fb9b 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801e866:	4b74      	ldr	r3, [pc, #464]	; (801ea38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e868:	8818      	ldrh	r0, [r3, #0]
 801e86a:	4b74      	ldr	r3, [pc, #464]	; (801ea3c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e86c:	8819      	ldrh	r1, [r3, #0]
 801e86e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e872:	2b00      	cmp	r3, #0
 801e874:	b202      	sxth	r2, r0
 801e876:	b20e      	sxth	r6, r1
 801e878:	da07      	bge.n	801e88a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e87a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e87e:	4463      	add	r3, ip
 801e880:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e884:	2300      	movs	r3, #0
 801e886:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e88a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e88e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e892:	1ad2      	subs	r2, r2, r3
 801e894:	4594      	cmp	ip, r2
 801e896:	bfc4      	itt	gt
 801e898:	1ac2      	subgt	r2, r0, r3
 801e89a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e89e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e8a2:	2a00      	cmp	r2, #0
 801e8a4:	da07      	bge.n	801e8b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e8a6:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e8aa:	4462      	add	r2, ip
 801e8ac:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e8b0:	2200      	movs	r2, #0
 801e8b2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e8b6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e8ba:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e8be:	eba6 060a 	sub.w	r6, r6, sl
 801e8c2:	42b2      	cmp	r2, r6
 801e8c4:	bfc4      	itt	gt
 801e8c6:	eba1 020a 	subgt.w	r2, r1, sl
 801e8ca:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e8ce:	4a5c      	ldr	r2, [pc, #368]	; (801ea40 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e8d0:	7812      	ldrb	r2, [r2, #0]
 801e8d2:	b9a2      	cbnz	r2, 801e8fe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e8d4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e8d8:	4286      	cmp	r6, r0
 801e8da:	4640      	mov	r0, r8
 801e8dc:	9303      	str	r3, [sp, #12]
 801e8de:	bf14      	ite	ne
 801e8e0:	2600      	movne	r6, #0
 801e8e2:	2601      	moveq	r6, #1
 801e8e4:	f7f2 fb9d 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e8e8:	9b03      	ldr	r3, [sp, #12]
 801e8ea:	b160      	cbz	r0, 801e906 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e8ec:	2300      	movs	r3, #0
 801e8ee:	8023      	strh	r3, [r4, #0]
 801e8f0:	8063      	strh	r3, [r4, #2]
 801e8f2:	80a3      	strh	r3, [r4, #4]
 801e8f4:	4620      	mov	r0, r4
 801e8f6:	80e3      	strh	r3, [r4, #6]
 801e8f8:	b011      	add	sp, #68	; 0x44
 801e8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8fe:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e902:	428e      	cmp	r6, r1
 801e904:	e7e9      	b.n	801e8da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e906:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e90a:	9205      	str	r2, [sp, #20]
 801e90c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e910:	9206      	str	r2, [sp, #24]
 801e912:	f8bb 2000 	ldrh.w	r2, [fp]
 801e916:	900e      	str	r0, [sp, #56]	; 0x38
 801e918:	1a9b      	subs	r3, r3, r2
 801e91a:	b21b      	sxth	r3, r3
 801e91c:	9303      	str	r3, [sp, #12]
 801e91e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e922:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e926:	ebaa 0a03 	sub.w	sl, sl, r3
 801e92a:	fa0f f38a 	sxth.w	r3, sl
 801e92e:	9304      	str	r3, [sp, #16]
 801e930:	9b03      	ldr	r3, [sp, #12]
 801e932:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e936:	9b04      	ldr	r3, [sp, #16]
 801e938:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e93c:	9b05      	ldr	r3, [sp, #20]
 801e93e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e942:	a90e      	add	r1, sp, #56	; 0x38
 801e944:	9b06      	ldr	r3, [sp, #24]
 801e946:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e94a:	a80c      	add	r0, sp, #48	; 0x30
 801e94c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e950:	f7f8 f906 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e954:	4640      	mov	r0, r8
 801e956:	f7f8 f8bf 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e95a:	a80e      	add	r0, sp, #56	; 0x38
 801e95c:	f7f8 f8bc 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e960:	4b38      	ldr	r3, [pc, #224]	; (801ea44 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e962:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e966:	881b      	ldrh	r3, [r3, #0]
 801e968:	9307      	str	r3, [sp, #28]
 801e96a:	682b      	ldr	r3, [r5, #0]
 801e96c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801ea48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e972:	4628      	mov	r0, r5
 801e974:	4798      	blx	r3
 801e976:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e97a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e97e:	4681      	mov	r9, r0
 801e980:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e984:	f8db 0000 	ldr.w	r0, [fp]
 801e988:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e98a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e98e:	6803      	ldr	r3, [r0, #0]
 801e990:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e992:	4798      	blx	r3
 801e994:	4607      	mov	r7, r0
 801e996:	f8db 0000 	ldr.w	r0, [fp]
 801e99a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e99e:	6803      	ldr	r3, [r0, #0]
 801e9a0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e9a4:	9109      	str	r1, [sp, #36]	; 0x24
 801e9a6:	9208      	str	r2, [sp, #32]
 801e9a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e9aa:	4798      	blx	r3
 801e9ac:	f010 0f01 	tst.w	r0, #1
 801e9b0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e9b4:	d012      	beq.n	801e9dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e9b6:	f8db 0000 	ldr.w	r0, [fp]
 801e9ba:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e9be:	6803      	ldr	r3, [r0, #0]
 801e9c0:	9200      	str	r2, [sp, #0]
 801e9c2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e9c4:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e9c8:	462b      	mov	r3, r5
 801e9ca:	47b0      	blx	r6
 801e9cc:	9b03      	ldr	r3, [sp, #12]
 801e9ce:	8023      	strh	r3, [r4, #0]
 801e9d0:	9b04      	ldr	r3, [sp, #16]
 801e9d2:	8063      	strh	r3, [r4, #2]
 801e9d4:	9b05      	ldr	r3, [sp, #20]
 801e9d6:	80a3      	strh	r3, [r4, #4]
 801e9d8:	9b06      	ldr	r3, [sp, #24]
 801e9da:	e78b      	b.n	801e8f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e9dc:	fb09 f202 	mul.w	r2, r9, r2
 801e9e0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e9e4:	440f      	add	r7, r1
 801e9e6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e9ea:	b166      	cbz	r6, 801ea06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e9ec:	9a07      	ldr	r2, [sp, #28]
 801e9ee:	4592      	cmp	sl, r2
 801e9f0:	d109      	bne.n	801ea06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e9f2:	f8db 0000 	ldr.w	r0, [fp]
 801e9f6:	6802      	ldr	r2, [r0, #0]
 801e9f8:	fb09 f303 	mul.w	r3, r9, r3
 801e9fc:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e9fe:	4629      	mov	r1, r5
 801ea00:	463a      	mov	r2, r7
 801ea02:	47b0      	blx	r6
 801ea04:	e7e2      	b.n	801e9cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ea06:	fb0a f303 	mul.w	r3, sl, r3
 801ea0a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801ea48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801ea0e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801ea12:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801ea16:	4545      	cmp	r5, r8
 801ea18:	d2d8      	bcs.n	801e9cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ea1a:	f8db 0000 	ldr.w	r0, [fp]
 801ea1e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ea22:	6802      	ldr	r2, [r0, #0]
 801ea24:	4629      	mov	r1, r5
 801ea26:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801ea2a:	005b      	lsls	r3, r3, #1
 801ea2c:	463a      	mov	r2, r7
 801ea2e:	47d0      	blx	sl
 801ea30:	444f      	add	r7, r9
 801ea32:	4435      	add	r5, r6
 801ea34:	e7ef      	b.n	801ea16 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801ea36:	bf00      	nop
 801ea38:	20013830 	.word	0x20013830
 801ea3c:	20013832 	.word	0x20013832
 801ea40:	20013834 	.word	0x20013834
 801ea44:	20013836 	.word	0x20013836
 801ea48:	2001383c 	.word	0x2001383c

0801ea4c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801ea4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ea4e:	4606      	mov	r6, r0
 801ea50:	b087      	sub	sp, #28
 801ea52:	460c      	mov	r4, r1
 801ea54:	4617      	mov	r7, r2
 801ea56:	461d      	mov	r5, r3
 801ea58:	b333      	cbz	r3, 801eaa8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ea5a:	4608      	mov	r0, r1
 801ea5c:	f7f2 fae1 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ea60:	bb10      	cbnz	r0, 801eaa8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ea62:	6820      	ldr	r0, [r4, #0]
 801ea64:	6861      	ldr	r1, [r4, #4]
 801ea66:	4c1c      	ldr	r4, [pc, #112]	; (801ead8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801ea68:	ab04      	add	r3, sp, #16
 801ea6a:	c303      	stmia	r3!, {r0, r1}
 801ea6c:	a804      	add	r0, sp, #16
 801ea6e:	f7f8 f833 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ea72:	6820      	ldr	r0, [r4, #0]
 801ea74:	6803      	ldr	r3, [r0, #0]
 801ea76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ea78:	4798      	blx	r3
 801ea7a:	2dff      	cmp	r5, #255	; 0xff
 801ea7c:	d016      	beq.n	801eaac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ea7e:	f010 0f08 	tst.w	r0, #8
 801ea82:	6820      	ldr	r0, [r4, #0]
 801ea84:	d015      	beq.n	801eab2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801ea86:	2400      	movs	r4, #0
 801ea88:	6801      	ldr	r1, [r0, #0]
 801ea8a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ea8e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ea92:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801ea96:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801ea9a:	9401      	str	r4, [sp, #4]
 801ea9c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801eaa0:	9400      	str	r4, [sp, #0]
 801eaa2:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801eaa4:	4639      	mov	r1, r7
 801eaa6:	47a0      	blx	r4
 801eaa8:	b007      	add	sp, #28
 801eaaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801eaac:	f010 0f02 	tst.w	r0, #2
 801eab0:	e7e7      	b.n	801ea82 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801eab2:	6803      	ldr	r3, [r0, #0]
 801eab4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eab6:	4798      	blx	r3
 801eab8:	4b08      	ldr	r3, [pc, #32]	; (801eadc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801eaba:	881a      	ldrh	r2, [r3, #0]
 801eabc:	6833      	ldr	r3, [r6, #0]
 801eabe:	e9cd 7500 	strd	r7, r5, [sp]
 801eac2:	4601      	mov	r1, r0
 801eac4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801eac6:	4630      	mov	r0, r6
 801eac8:	ab04      	add	r3, sp, #16
 801eaca:	47a8      	blx	r5
 801eacc:	6820      	ldr	r0, [r4, #0]
 801eace:	6803      	ldr	r3, [r0, #0]
 801ead0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ead2:	4798      	blx	r3
 801ead4:	e7e8      	b.n	801eaa8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ead6:	bf00      	nop
 801ead8:	2001383c 	.word	0x2001383c
 801eadc:	20013836 	.word	0x20013836

0801eae0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801eae0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eae4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801eae8:	9e08      	ldr	r6, [sp, #32]
 801eaea:	4688      	mov	r8, r1
 801eaec:	4614      	mov	r4, r2
 801eaee:	461d      	mov	r5, r3
 801eaf0:	2f00      	cmp	r7, #0
 801eaf2:	f000 80a9 	beq.w	801ec48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eaf6:	4618      	mov	r0, r3
 801eaf8:	f7f2 fa93 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801eafc:	2800      	cmp	r0, #0
 801eafe:	f040 80a3 	bne.w	801ec48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eb02:	f9b5 1000 	ldrsh.w	r1, [r5]
 801eb06:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801eb0a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801eb0e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801eb12:	fb04 1303 	mla	r3, r4, r3, r1
 801eb16:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801eb1a:	4365      	muls	r5, r4
 801eb1c:	2fff      	cmp	r7, #255	; 0xff
 801eb1e:	eba4 0200 	sub.w	r2, r4, r0
 801eb22:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801eb26:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801eb2a:	d04a      	beq.n	801ebc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801eb2c:	b2bc      	uxth	r4, r7
 801eb2e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801eb32:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801eb36:	fa5f f788 	uxtb.w	r7, r8
 801eb3a:	b2f3      	uxtb	r3, r6
 801eb3c:	0040      	lsls	r0, r0, #1
 801eb3e:	fb0e fe04 	mul.w	lr, lr, r4
 801eb42:	4367      	muls	r7, r4
 801eb44:	4363      	muls	r3, r4
 801eb46:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801eb4a:	fa1f fc8c 	uxth.w	ip, ip
 801eb4e:	42a9      	cmp	r1, r5
 801eb50:	d27a      	bcs.n	801ec48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eb52:	eb01 0900 	add.w	r9, r1, r0
 801eb56:	4549      	cmp	r1, r9
 801eb58:	d231      	bcs.n	801ebbe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801eb5a:	880a      	ldrh	r2, [r1, #0]
 801eb5c:	1214      	asrs	r4, r2, #8
 801eb5e:	10d6      	asrs	r6, r2, #3
 801eb60:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801eb64:	00d2      	lsls	r2, r2, #3
 801eb66:	b2d2      	uxtb	r2, r2
 801eb68:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801eb6c:	fb14 f40c 	smulbb	r4, r4, ip
 801eb70:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801eb74:	4474      	add	r4, lr
 801eb76:	fb12 f20c 	smulbb	r2, r2, ip
 801eb7a:	b2a4      	uxth	r4, r4
 801eb7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801eb80:	441a      	add	r2, r3
 801eb82:	b292      	uxth	r2, r2
 801eb84:	f104 0a01 	add.w	sl, r4, #1
 801eb88:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801eb8c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801eb90:	fb16 f60c 	smulbb	r6, r6, ip
 801eb94:	f102 0a01 	add.w	sl, r2, #1
 801eb98:	443e      	add	r6, r7
 801eb9a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801eb9e:	b2b6      	uxth	r6, r6
 801eba0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801eba4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801eba8:	4322      	orrs	r2, r4
 801ebaa:	1c74      	adds	r4, r6, #1
 801ebac:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ebb0:	0976      	lsrs	r6, r6, #5
 801ebb2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ebb6:	4332      	orrs	r2, r6
 801ebb8:	f821 2b02 	strh.w	r2, [r1], #2
 801ebbc:	e7cb      	b.n	801eb56 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ebbe:	4441      	add	r1, r8
 801ebc0:	e7c5      	b.n	801eb4e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ebc2:	4f22      	ldr	r7, [pc, #136]	; (801ec4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ebc4:	0973      	lsrs	r3, r6, #5
 801ebc6:	ea08 0707 	and.w	r7, r8, r7
 801ebca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ebce:	433b      	orrs	r3, r7
 801ebd0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ebd4:	4333      	orrs	r3, r6
 801ebd6:	07e7      	lsls	r7, r4, #31
 801ebd8:	b29b      	uxth	r3, r3
 801ebda:	d50b      	bpl.n	801ebf4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ebdc:	0040      	lsls	r0, r0, #1
 801ebde:	0052      	lsls	r2, r2, #1
 801ebe0:	42a9      	cmp	r1, r5
 801ebe2:	d231      	bcs.n	801ec48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ebe4:	180c      	adds	r4, r1, r0
 801ebe6:	42a1      	cmp	r1, r4
 801ebe8:	d202      	bcs.n	801ebf0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ebea:	f821 3b02 	strh.w	r3, [r1], #2
 801ebee:	e7fa      	b.n	801ebe6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801ebf0:	4411      	add	r1, r2
 801ebf2:	e7f5      	b.n	801ebe0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801ebf4:	078e      	lsls	r6, r1, #30
 801ebf6:	d008      	beq.n	801ec0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ebf8:	0066      	lsls	r6, r4, #1
 801ebfa:	460a      	mov	r2, r1
 801ebfc:	42aa      	cmp	r2, r5
 801ebfe:	d202      	bcs.n	801ec06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ec00:	8013      	strh	r3, [r2, #0]
 801ec02:	4432      	add	r2, r6
 801ec04:	e7fa      	b.n	801ebfc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ec06:	3102      	adds	r1, #2
 801ec08:	3801      	subs	r0, #1
 801ec0a:	07c2      	lsls	r2, r0, #31
 801ec0c:	d50b      	bpl.n	801ec26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ec0e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801ec12:	3a01      	subs	r2, #1
 801ec14:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ec18:	0066      	lsls	r6, r4, #1
 801ec1a:	42aa      	cmp	r2, r5
 801ec1c:	d202      	bcs.n	801ec24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ec1e:	8013      	strh	r3, [r2, #0]
 801ec20:	4432      	add	r2, r6
 801ec22:	e7fa      	b.n	801ec1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801ec24:	3801      	subs	r0, #1
 801ec26:	b178      	cbz	r0, 801ec48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec28:	1040      	asrs	r0, r0, #1
 801ec2a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801ec2e:	0080      	lsls	r0, r0, #2
 801ec30:	0064      	lsls	r4, r4, #1
 801ec32:	42a9      	cmp	r1, r5
 801ec34:	d208      	bcs.n	801ec48 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ec36:	180e      	adds	r6, r1, r0
 801ec38:	460a      	mov	r2, r1
 801ec3a:	42b2      	cmp	r2, r6
 801ec3c:	d202      	bcs.n	801ec44 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801ec3e:	f842 3b04 	str.w	r3, [r2], #4
 801ec42:	e7fa      	b.n	801ec3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801ec44:	4421      	add	r1, r4
 801ec46:	e7f4      	b.n	801ec32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801ec48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ec4c:	00fff800 	.word	0x00fff800

0801ec50 <_ZN8touchgfx8LCD16bppC1Ev>:
 801ec50:	2200      	movs	r2, #0
 801ec52:	4912      	ldr	r1, [pc, #72]	; (801ec9c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801ec54:	6042      	str	r2, [r0, #4]
 801ec56:	6001      	str	r1, [r0, #0]
 801ec58:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801ec5c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801ec60:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801ec64:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801ec68:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801ec6c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801ec70:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801ec74:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801ec78:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801ec7c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801ec80:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801ec84:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801ec88:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801ec8c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801ec90:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801ec94:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801ec98:	4770      	bx	lr
 801ec9a:	bf00      	nop
 801ec9c:	08030400 	.word	0x08030400

0801eca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801eca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eca4:	460d      	mov	r5, r1
 801eca6:	b08d      	sub	sp, #52	; 0x34
 801eca8:	4604      	mov	r4, r0
 801ecaa:	6808      	ldr	r0, [r1, #0]
 801ecac:	6849      	ldr	r1, [r1, #4]
 801ecae:	4699      	mov	r9, r3
 801ecb0:	ab08      	add	r3, sp, #32
 801ecb2:	c303      	stmia	r3!, {r0, r1}
 801ecb4:	6810      	ldr	r0, [r2, #0]
 801ecb6:	6851      	ldr	r1, [r2, #4]
 801ecb8:	ab0a      	add	r3, sp, #40	; 0x28
 801ecba:	c303      	stmia	r3!, {r0, r1}
 801ecbc:	a808      	add	r0, sp, #32
 801ecbe:	f7f7 ff0b 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ecc2:	4629      	mov	r1, r5
 801ecc4:	a80a      	add	r0, sp, #40	; 0x28
 801ecc6:	f7f7 ff4b 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ecca:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801ecce:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801ecd2:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ecd6:	4d63      	ldr	r5, [pc, #396]	; (801ee64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ecd8:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ecdc:	6828      	ldr	r0, [r5, #0]
 801ecde:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ece2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ece6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ecea:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ecee:	440a      	add	r2, r1
 801ecf0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ecf4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ecf8:	4413      	add	r3, r2
 801ecfa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ecfe:	6803      	ldr	r3, [r0, #0]
 801ed00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ed02:	4798      	blx	r3
 801ed04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ed08:	d119      	bne.n	801ed3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ed0a:	f010 0f20 	tst.w	r0, #32
 801ed0e:	6828      	ldr	r0, [r5, #0]
 801ed10:	d018      	beq.n	801ed44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ed12:	2500      	movs	r5, #0
 801ed14:	6801      	ldr	r1, [r0, #0]
 801ed16:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ed1a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ed1e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ed22:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801ed26:	9502      	str	r5, [sp, #8]
 801ed28:	b2b6      	uxth	r6, r6
 801ed2a:	fa1f f588 	uxth.w	r5, r8
 801ed2e:	9601      	str	r6, [sp, #4]
 801ed30:	9500      	str	r5, [sp, #0]
 801ed32:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801ed34:	4621      	mov	r1, r4
 801ed36:	47a8      	blx	r5
 801ed38:	b00d      	add	sp, #52	; 0x34
 801ed3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ed3e:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ed42:	e7e4      	b.n	801ed0e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ed44:	6803      	ldr	r3, [r0, #0]
 801ed46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed48:	4798      	blx	r3
 801ed4a:	4947      	ldr	r1, [pc, #284]	; (801ee68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ed4c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ed50:	880b      	ldrh	r3, [r1, #0]
 801ed52:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ed56:	fb03 5202 	mla	r2, r3, r2, r5
 801ed5a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ed5e:	4373      	muls	r3, r6
 801ed60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ed64:	9307      	str	r3, [sp, #28]
 801ed66:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ed6a:	9306      	str	r3, [sp, #24]
 801ed6c:	468a      	mov	sl, r1
 801ed6e:	9b07      	ldr	r3, [sp, #28]
 801ed70:	4298      	cmp	r0, r3
 801ed72:	d270      	bcs.n	801ee56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ed74:	9b06      	ldr	r3, [sp, #24]
 801ed76:	4621      	mov	r1, r4
 801ed78:	eb00 0b03 	add.w	fp, r0, r3
 801ed7c:	4558      	cmp	r0, fp
 801ed7e:	d25d      	bcs.n	801ee3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ed80:	f851 4b04 	ldr.w	r4, [r1], #4
 801ed84:	0e23      	lsrs	r3, r4, #24
 801ed86:	d014      	beq.n	801edb2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ed88:	2bff      	cmp	r3, #255	; 0xff
 801ed8a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ed8e:	d112      	bne.n	801edb6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ed90:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ed94:	d10f      	bne.n	801edb6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ed96:	0963      	lsrs	r3, r4, #5
 801ed98:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ed9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eda0:	f02c 0c07 	bic.w	ip, ip, #7
 801eda4:	ea43 0c0c 	orr.w	ip, r3, ip
 801eda8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801edac:	ea4c 0404 	orr.w	r4, ip, r4
 801edb0:	8004      	strh	r4, [r0, #0]
 801edb2:	3002      	adds	r0, #2
 801edb4:	e7e2      	b.n	801ed7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801edb6:	fb09 f303 	mul.w	r3, r9, r3
 801edba:	8807      	ldrh	r7, [r0, #0]
 801edbc:	1c5a      	adds	r2, r3, #1
 801edbe:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801edc2:	1212      	asrs	r2, r2, #8
 801edc4:	123e      	asrs	r6, r7, #8
 801edc6:	b293      	uxth	r3, r2
 801edc8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801edcc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801edd0:	43d2      	mvns	r2, r2
 801edd2:	b2d2      	uxtb	r2, r2
 801edd4:	10fd      	asrs	r5, r7, #3
 801edd6:	fb1e fe03 	smulbb	lr, lr, r3
 801edda:	00ff      	lsls	r7, r7, #3
 801eddc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ede0:	fb06 e602 	mla	r6, r6, r2, lr
 801ede4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ede8:	b2ff      	uxtb	r7, r7
 801edea:	fa5f fc8c 	uxtb.w	ip, ip
 801edee:	b2e4      	uxtb	r4, r4
 801edf0:	b2b6      	uxth	r6, r6
 801edf2:	fb1c fc03 	smulbb	ip, ip, r3
 801edf6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801edfa:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801edfe:	fb14 f403 	smulbb	r4, r4, r3
 801ee02:	fb05 c502 	mla	r5, r5, r2, ip
 801ee06:	f106 0e01 	add.w	lr, r6, #1
 801ee0a:	fb07 4702 	mla	r7, r7, r2, r4
 801ee0e:	b2ad      	uxth	r5, r5
 801ee10:	b2bf      	uxth	r7, r7
 801ee12:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ee16:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ee1a:	f105 0c01 	add.w	ip, r5, #1
 801ee1e:	1c7e      	adds	r6, r7, #1
 801ee20:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ee24:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ee28:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ee2c:	096d      	lsrs	r5, r5, #5
 801ee2e:	ea46 060e 	orr.w	r6, r6, lr
 801ee32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ee36:	432e      	orrs	r6, r5
 801ee38:	8006      	strh	r6, [r0, #0]
 801ee3a:	e7ba      	b.n	801edb2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ee3c:	f8ba 3000 	ldrh.w	r3, [sl]
 801ee40:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ee44:	eba3 0308 	sub.w	r3, r3, r8
 801ee48:	eba4 0408 	sub.w	r4, r4, r8
 801ee4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee50:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ee54:	e78b      	b.n	801ed6e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ee56:	4b03      	ldr	r3, [pc, #12]	; (801ee64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ee58:	6818      	ldr	r0, [r3, #0]
 801ee5a:	6803      	ldr	r3, [r0, #0]
 801ee5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee5e:	4798      	blx	r3
 801ee60:	e76a      	b.n	801ed38 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ee62:	bf00      	nop
 801ee64:	2001383c 	.word	0x2001383c
 801ee68:	20013836 	.word	0x20013836

0801ee6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ee6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ee70:	460c      	mov	r4, r1
 801ee72:	b085      	sub	sp, #20
 801ee74:	6810      	ldr	r0, [r2, #0]
 801ee76:	6851      	ldr	r1, [r2, #4]
 801ee78:	466d      	mov	r5, sp
 801ee7a:	c503      	stmia	r5!, {r0, r1}
 801ee7c:	6818      	ldr	r0, [r3, #0]
 801ee7e:	6859      	ldr	r1, [r3, #4]
 801ee80:	4616      	mov	r6, r2
 801ee82:	c503      	stmia	r5!, {r0, r1}
 801ee84:	4668      	mov	r0, sp
 801ee86:	f7f7 fe27 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ee8a:	4631      	mov	r1, r6
 801ee8c:	a802      	add	r0, sp, #8
 801ee8e:	f7f7 fe67 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ee92:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ee96:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ee9a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ee9e:	4d28      	ldr	r5, [pc, #160]	; (801ef40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801eea0:	4e28      	ldr	r6, [pc, #160]	; (801ef44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801eea2:	6828      	ldr	r0, [r5, #0]
 801eea4:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801eea8:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801eeac:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eeb0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801eeb4:	f8bd 1000 	ldrh.w	r1, [sp]
 801eeb8:	440a      	add	r2, r1
 801eeba:	f8ad 2008 	strh.w	r2, [sp, #8]
 801eebe:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801eec2:	4413      	add	r3, r2
 801eec4:	f8ad 300a 	strh.w	r3, [sp, #10]
 801eec8:	6803      	ldr	r3, [r0, #0]
 801eeca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801eecc:	4798      	blx	r3
 801eece:	8833      	ldrh	r3, [r6, #0]
 801eed0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801eed4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801eed8:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801ef48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801eedc:	fb03 1202 	mla	r2, r3, r2, r1
 801eee0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eee4:	fb08 f303 	mul.w	r3, r8, r3
 801eee8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801eeec:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801eef0:	4298      	cmp	r0, r3
 801eef2:	d21d      	bcs.n	801ef30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801eef4:	eb00 080c 	add.w	r8, r0, ip
 801eef8:	4540      	cmp	r0, r8
 801eefa:	d20f      	bcs.n	801ef1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801eefc:	f854 1b04 	ldr.w	r1, [r4], #4
 801ef00:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ef04:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ef08:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ef0c:	ea42 0209 	orr.w	r2, r2, r9
 801ef10:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ef14:	430a      	orrs	r2, r1
 801ef16:	f820 2b02 	strh.w	r2, [r0], #2
 801ef1a:	e7ed      	b.n	801eef8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801ef1c:	8832      	ldrh	r2, [r6, #0]
 801ef1e:	1bd2      	subs	r2, r2, r7
 801ef20:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ef24:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ef28:	1bd2      	subs	r2, r2, r7
 801ef2a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801ef2e:	e7df      	b.n	801eef0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801ef30:	6828      	ldr	r0, [r5, #0]
 801ef32:	6803      	ldr	r3, [r0, #0]
 801ef34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ef36:	4798      	blx	r3
 801ef38:	b005      	add	sp, #20
 801ef3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ef3e:	bf00      	nop
 801ef40:	2001383c 	.word	0x2001383c
 801ef44:	20013836 	.word	0x20013836
 801ef48:	fffff800 	.word	0xfffff800

0801ef4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ef4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ef50:	460e      	mov	r6, r1
 801ef52:	b08e      	sub	sp, #56	; 0x38
 801ef54:	4604      	mov	r4, r0
 801ef56:	6808      	ldr	r0, [r1, #0]
 801ef58:	6849      	ldr	r1, [r1, #4]
 801ef5a:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801f134 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ef5e:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801f138 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ef62:	461d      	mov	r5, r3
 801ef64:	ab0a      	add	r3, sp, #40	; 0x28
 801ef66:	c303      	stmia	r3!, {r0, r1}
 801ef68:	6810      	ldr	r0, [r2, #0]
 801ef6a:	6851      	ldr	r1, [r2, #4]
 801ef6c:	ab0c      	add	r3, sp, #48	; 0x30
 801ef6e:	c303      	stmia	r3!, {r0, r1}
 801ef70:	a80a      	add	r0, sp, #40	; 0x28
 801ef72:	f7f7 fdb1 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ef76:	4631      	mov	r1, r6
 801ef78:	a80c      	add	r0, sp, #48	; 0x30
 801ef7a:	f7f7 fdf1 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ef7e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ef82:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ef86:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ef8a:	f8d8 0000 	ldr.w	r0, [r8]
 801ef8e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ef92:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ef96:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ef9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ef9e:	440c      	add	r4, r1
 801efa0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801efa4:	440a      	add	r2, r1
 801efa6:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801efaa:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801efae:	4413      	add	r3, r2
 801efb0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801efb4:	6803      	ldr	r3, [r0, #0]
 801efb6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801efb8:	4798      	blx	r3
 801efba:	2dff      	cmp	r5, #255	; 0xff
 801efbc:	d124      	bne.n	801f008 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801efbe:	f010 0f01 	tst.w	r0, #1
 801efc2:	f8d8 0000 	ldr.w	r0, [r8]
 801efc6:	d022      	beq.n	801f00e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801efc8:	2100      	movs	r1, #0
 801efca:	f8d0 c000 	ldr.w	ip, [r0]
 801efce:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801efd2:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801efd6:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801efda:	f04f 0e01 	mov.w	lr, #1
 801efde:	f8cd e018 	str.w	lr, [sp, #24]
 801efe2:	f8b9 e000 	ldrh.w	lr, [r9]
 801efe6:	9503      	str	r5, [sp, #12]
 801efe8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801efec:	b2b6      	uxth	r6, r6
 801efee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801eff2:	9102      	str	r1, [sp, #8]
 801eff4:	b2bf      	uxth	r7, r7
 801eff6:	9601      	str	r6, [sp, #4]
 801eff8:	9700      	str	r7, [sp, #0]
 801effa:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801effe:	4621      	mov	r1, r4
 801f000:	47a8      	blx	r5
 801f002:	b00e      	add	sp, #56	; 0x38
 801f004:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f008:	f010 0f04 	tst.w	r0, #4
 801f00c:	e7d9      	b.n	801efc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801f00e:	6803      	ldr	r3, [r0, #0]
 801f010:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f012:	4798      	blx	r3
 801f014:	f8b9 3000 	ldrh.w	r3, [r9]
 801f018:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801f01c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801f020:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801f024:	fb03 1202 	mla	r2, r3, r2, r1
 801f028:	ebac 0c07 	sub.w	ip, ip, r7
 801f02c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f030:	435e      	muls	r6, r3
 801f032:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801f036:	2dff      	cmp	r5, #255	; 0xff
 801f038:	eba3 0707 	sub.w	r7, r3, r7
 801f03c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801f040:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f044:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801f048:	d049      	beq.n	801f0de <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801f04a:	43eb      	mvns	r3, r5
 801f04c:	fa1f f985 	uxth.w	r9, r5
 801f050:	b2db      	uxtb	r3, r3
 801f052:	42b0      	cmp	r0, r6
 801f054:	d266      	bcs.n	801f124 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801f056:	eb00 0a0e 	add.w	sl, r0, lr
 801f05a:	4550      	cmp	r0, sl
 801f05c:	4621      	mov	r1, r4
 801f05e:	f104 0403 	add.w	r4, r4, #3
 801f062:	d25b      	bcs.n	801f11c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801f064:	8802      	ldrh	r2, [r0, #0]
 801f066:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801f06a:	ea4f 2822 	mov.w	r8, r2, asr #8
 801f06e:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801f072:	fb11 f109 	smulbb	r1, r1, r9
 801f076:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801f07a:	10d5      	asrs	r5, r2, #3
 801f07c:	fb08 1803 	mla	r8, r8, r3, r1
 801f080:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801f084:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f088:	fb11 f109 	smulbb	r1, r1, r9
 801f08c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801f090:	fb05 1503 	mla	r5, r5, r3, r1
 801f094:	00d2      	lsls	r2, r2, #3
 801f096:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801f09a:	b2d2      	uxtb	r2, r2
 801f09c:	fb11 f109 	smulbb	r1, r1, r9
 801f0a0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801f0a4:	fa1f f888 	uxth.w	r8, r8
 801f0a8:	fb02 1203 	mla	r2, r2, r3, r1
 801f0ac:	b292      	uxth	r2, r2
 801f0ae:	f108 0101 	add.w	r1, r8, #1
 801f0b2:	b2ad      	uxth	r5, r5
 801f0b4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801f0b8:	1c51      	adds	r1, r2, #1
 801f0ba:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f0be:	1c69      	adds	r1, r5, #1
 801f0c0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801f0c4:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801f0c8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f0cc:	096d      	lsrs	r5, r5, #5
 801f0ce:	ea42 0208 	orr.w	r2, r2, r8
 801f0d2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f0d6:	432a      	orrs	r2, r5
 801f0d8:	f820 2b02 	strh.w	r2, [r0], #2
 801f0dc:	e7bd      	b.n	801f05a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801f0de:	4a14      	ldr	r2, [pc, #80]	; (801f130 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801f0e0:	42b0      	cmp	r0, r6
 801f0e2:	d21f      	bcs.n	801f124 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801f0e4:	eb00 050e 	add.w	r5, r0, lr
 801f0e8:	42a8      	cmp	r0, r5
 801f0ea:	4621      	mov	r1, r4
 801f0ec:	f104 0403 	add.w	r4, r4, #3
 801f0f0:	d210      	bcs.n	801f114 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801f0f2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801f0f6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801f0fa:	00db      	lsls	r3, r3, #3
 801f0fc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801f100:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f104:	430b      	orrs	r3, r1
 801f106:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801f10a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801f10e:	f820 3b02 	strh.w	r3, [r0], #2
 801f112:	e7e9      	b.n	801f0e8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801f114:	4438      	add	r0, r7
 801f116:	eb01 040c 	add.w	r4, r1, ip
 801f11a:	e7e1      	b.n	801f0e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801f11c:	4438      	add	r0, r7
 801f11e:	eb01 040c 	add.w	r4, r1, ip
 801f122:	e796      	b.n	801f052 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801f124:	4b03      	ldr	r3, [pc, #12]	; (801f134 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801f126:	6818      	ldr	r0, [r3, #0]
 801f128:	6803      	ldr	r3, [r0, #0]
 801f12a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f12c:	4798      	blx	r3
 801f12e:	e768      	b.n	801f002 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801f130:	fffff800 	.word	0xfffff800
 801f134:	2001383c 	.word	0x2001383c
 801f138:	20013836 	.word	0x20013836

0801f13c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801f13c:	b4f0      	push	{r4, r5, r6, r7}
 801f13e:	4616      	mov	r6, r2
 801f140:	2e01      	cmp	r6, #1
 801f142:	461c      	mov	r4, r3
 801f144:	460d      	mov	r5, r1
 801f146:	9a04      	ldr	r2, [sp, #16]
 801f148:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801f14c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801f150:	d012      	beq.n	801f178 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801f152:	d303      	bcc.n	801f15c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801f154:	2e02      	cmp	r6, #2
 801f156:	d00a      	beq.n	801f16e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801f158:	bcf0      	pop	{r4, r5, r6, r7}
 801f15a:	4770      	bx	lr
 801f15c:	6805      	ldr	r5, [r0, #0]
 801f15e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801f162:	68ed      	ldr	r5, [r5, #12]
 801f164:	4613      	mov	r3, r2
 801f166:	46ac      	mov	ip, r5
 801f168:	4622      	mov	r2, r4
 801f16a:	bcf0      	pop	{r4, r5, r6, r7}
 801f16c:	4760      	bx	ip
 801f16e:	4621      	mov	r1, r4
 801f170:	4628      	mov	r0, r5
 801f172:	bcf0      	pop	{r4, r5, r6, r7}
 801f174:	f7ff bd94 	b.w	801eca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f178:	4621      	mov	r1, r4
 801f17a:	4628      	mov	r0, r5
 801f17c:	bcf0      	pop	{r4, r5, r6, r7}
 801f17e:	f7ff bee5 	b.w	801ef4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801f184 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801f184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f188:	4681      	mov	r9, r0
 801f18a:	b093      	sub	sp, #76	; 0x4c
 801f18c:	6810      	ldr	r0, [r2, #0]
 801f18e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801f192:	4f6d      	ldr	r7, [pc, #436]	; (801f348 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801f194:	4688      	mov	r8, r1
 801f196:	6851      	ldr	r1, [r2, #4]
 801f198:	ac0e      	add	r4, sp, #56	; 0x38
 801f19a:	c403      	stmia	r4!, {r0, r1}
 801f19c:	6818      	ldr	r0, [r3, #0]
 801f19e:	6859      	ldr	r1, [r3, #4]
 801f1a0:	ac10      	add	r4, sp, #64	; 0x40
 801f1a2:	4616      	mov	r6, r2
 801f1a4:	c403      	stmia	r4!, {r0, r1}
 801f1a6:	a80e      	add	r0, sp, #56	; 0x38
 801f1a8:	f7f7 fc96 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f1ac:	4631      	mov	r1, r6
 801f1ae:	a810      	add	r0, sp, #64	; 0x40
 801f1b0:	f7f7 fcd6 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f1b4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801f1b8:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801f1bc:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801f1c0:	4e62      	ldr	r6, [pc, #392]	; (801f34c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f1c2:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801f1c6:	6830      	ldr	r0, [r6, #0]
 801f1c8:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801f1cc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f1d0:	4489      	add	r9, r1
 801f1d2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801f1d6:	440a      	add	r2, r1
 801f1d8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801f1dc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f1e0:	4413      	add	r3, r2
 801f1e2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801f1e6:	6803      	ldr	r3, [r0, #0]
 801f1e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f1ea:	4798      	blx	r3
 801f1ec:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f1f0:	6830      	ldr	r0, [r6, #0]
 801f1f2:	d01d      	beq.n	801f230 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801f1f4:	2200      	movs	r2, #0
 801f1f6:	6801      	ldr	r1, [r0, #0]
 801f1f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801f1fc:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f200:	220b      	movs	r2, #11
 801f202:	9207      	str	r2, [sp, #28]
 801f204:	883a      	ldrh	r2, [r7, #0]
 801f206:	9206      	str	r2, [sp, #24]
 801f208:	2201      	movs	r2, #1
 801f20a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801f20e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801f212:	9203      	str	r2, [sp, #12]
 801f214:	b2a4      	uxth	r4, r4
 801f216:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801f21a:	9200      	str	r2, [sp, #0]
 801f21c:	b2ad      	uxth	r5, r5
 801f21e:	9502      	str	r5, [sp, #8]
 801f220:	9401      	str	r4, [sp, #4]
 801f222:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801f224:	4642      	mov	r2, r8
 801f226:	4649      	mov	r1, r9
 801f228:	47a0      	blx	r4
 801f22a:	b013      	add	sp, #76	; 0x4c
 801f22c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f230:	6803      	ldr	r3, [r0, #0]
 801f232:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f234:	4798      	blx	r3
 801f236:	883b      	ldrh	r3, [r7, #0]
 801f238:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f23c:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801f240:	fb03 1202 	mla	r2, r3, r2, r1
 801f244:	435d      	muls	r5, r3
 801f246:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f24a:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801f24e:	920c      	str	r2, [sp, #48]	; 0x30
 801f250:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801f254:	1b12      	subs	r2, r2, r4
 801f256:	920d      	str	r2, [sp, #52]	; 0x34
 801f258:	0062      	lsls	r2, r4, #1
 801f25a:	1b1c      	subs	r4, r3, r4
 801f25c:	0063      	lsls	r3, r4, #1
 801f25e:	920a      	str	r2, [sp, #40]	; 0x28
 801f260:	930b      	str	r3, [sp, #44]	; 0x2c
 801f262:	f04f 0e04 	mov.w	lr, #4
 801f266:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f268:	4298      	cmp	r0, r3
 801f26a:	d266      	bcs.n	801f33a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801f26c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f26e:	eb00 0b03 	add.w	fp, r0, r3
 801f272:	4558      	cmp	r0, fp
 801f274:	d25c      	bcs.n	801f330 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801f276:	f819 3b01 	ldrb.w	r3, [r9], #1
 801f27a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801f27e:	f858 2003 	ldr.w	r2, [r8, r3]
 801f282:	0e11      	lsrs	r1, r2, #24
 801f284:	d012      	beq.n	801f2ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f286:	29ff      	cmp	r1, #255	; 0xff
 801f288:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801f28c:	d110      	bne.n	801f2b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f28e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f292:	d10d      	bne.n	801f2b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f294:	0953      	lsrs	r3, r2, #5
 801f296:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801f29a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f29e:	f027 0707 	bic.w	r7, r7, #7
 801f2a2:	431f      	orrs	r7, r3
 801f2a4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f2a8:	433a      	orrs	r2, r7
 801f2aa:	8002      	strh	r2, [r0, #0]
 801f2ac:	3002      	adds	r0, #2
 801f2ae:	e7e0      	b.n	801f272 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801f2b0:	fb0a f101 	mul.w	r1, sl, r1
 801f2b4:	8806      	ldrh	r6, [r0, #0]
 801f2b6:	1c4b      	adds	r3, r1, #1
 801f2b8:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801f2bc:	1235      	asrs	r5, r6, #8
 801f2be:	10f4      	asrs	r4, r6, #3
 801f2c0:	121b      	asrs	r3, r3, #8
 801f2c2:	00f6      	lsls	r6, r6, #3
 801f2c4:	b299      	uxth	r1, r3
 801f2c6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801f2ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f2ce:	b2f6      	uxtb	r6, r6
 801f2d0:	43db      	mvns	r3, r3
 801f2d2:	b2d2      	uxtb	r2, r2
 801f2d4:	b2db      	uxtb	r3, r3
 801f2d6:	fb1c fc01 	smulbb	ip, ip, r1
 801f2da:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f2de:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f2e2:	fb12 f201 	smulbb	r2, r2, r1
 801f2e6:	fb05 c503 	mla	r5, r5, r3, ip
 801f2ea:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801f2ee:	b2ff      	uxtb	r7, r7
 801f2f0:	fb06 2203 	mla	r2, r6, r3, r2
 801f2f4:	b2ad      	uxth	r5, r5
 801f2f6:	fb17 f701 	smulbb	r7, r7, r1
 801f2fa:	b292      	uxth	r2, r2
 801f2fc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801f300:	fb04 7403 	mla	r4, r4, r3, r7
 801f304:	f105 0c01 	add.w	ip, r5, #1
 801f308:	1c57      	adds	r7, r2, #1
 801f30a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f30e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f312:	b2a4      	uxth	r4, r4
 801f314:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f318:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f31c:	433d      	orrs	r5, r7
 801f31e:	1c67      	adds	r7, r4, #1
 801f320:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801f324:	0964      	lsrs	r4, r4, #5
 801f326:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f32a:	4325      	orrs	r5, r4
 801f32c:	8005      	strh	r5, [r0, #0]
 801f32e:	e7bd      	b.n	801f2ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f330:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f332:	4418      	add	r0, r3
 801f334:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f336:	4499      	add	r9, r3
 801f338:	e795      	b.n	801f266 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801f33a:	4b04      	ldr	r3, [pc, #16]	; (801f34c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f33c:	6818      	ldr	r0, [r3, #0]
 801f33e:	6803      	ldr	r3, [r0, #0]
 801f340:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f342:	4798      	blx	r3
 801f344:	e771      	b.n	801f22a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801f346:	bf00      	nop
 801f348:	20013836 	.word	0x20013836
 801f34c:	2001383c 	.word	0x2001383c

0801f350 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801f350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f354:	b087      	sub	sp, #28
 801f356:	4680      	mov	r8, r0
 801f358:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801f35c:	460d      	mov	r5, r1
 801f35e:	4614      	mov	r4, r2
 801f360:	2e00      	cmp	r6, #0
 801f362:	f000 80b9 	beq.w	801f4d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801f366:	6810      	ldr	r0, [r2, #0]
 801f368:	6851      	ldr	r1, [r2, #4]
 801f36a:	af02      	add	r7, sp, #8
 801f36c:	c703      	stmia	r7!, {r0, r1}
 801f36e:	6818      	ldr	r0, [r3, #0]
 801f370:	6859      	ldr	r1, [r3, #4]
 801f372:	af04      	add	r7, sp, #16
 801f374:	c703      	stmia	r7!, {r0, r1}
 801f376:	a802      	add	r0, sp, #8
 801f378:	f7f7 fbae 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f37c:	4621      	mov	r1, r4
 801f37e:	a804      	add	r0, sp, #16
 801f380:	f7f7 fbee 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f384:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f388:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f38c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801f390:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801f394:	fb14 2103 	smlabb	r1, r4, r3, r2
 801f398:	eb08 0401 	add.w	r4, r8, r1
 801f39c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f3a0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f3a4:	440a      	add	r2, r1
 801f3a6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f3aa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f3ae:	4413      	add	r3, r2
 801f3b0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f3b4:	4b4a      	ldr	r3, [pc, #296]	; (801f4e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f3b6:	6818      	ldr	r0, [r3, #0]
 801f3b8:	6803      	ldr	r3, [r0, #0]
 801f3ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f3bc:	4798      	blx	r3
 801f3be:	4b49      	ldr	r3, [pc, #292]	; (801f4e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801f3c0:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801f3c4:	881a      	ldrh	r2, [r3, #0]
 801f3c6:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801f3ca:	2eff      	cmp	r6, #255	; 0xff
 801f3cc:	fb02 c101 	mla	r1, r2, r1, ip
 801f3d0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f3d4:	fb02 f207 	mul.w	r2, r2, r7
 801f3d8:	f105 0104 	add.w	r1, r5, #4
 801f3dc:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801f3e0:	461d      	mov	r5, r3
 801f3e2:	d05a      	beq.n	801f49a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801f3e4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801f3e8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f3ec:	b2b6      	uxth	r6, r6
 801f3ee:	fa1f fe8e 	uxth.w	lr, lr
 801f3f2:	9301      	str	r3, [sp, #4]
 801f3f4:	4282      	cmp	r2, r0
 801f3f6:	d96a      	bls.n	801f4ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f3f8:	eb00 0b0a 	add.w	fp, r0, sl
 801f3fc:	4583      	cmp	fp, r0
 801f3fe:	d940      	bls.n	801f482 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801f400:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f404:	8805      	ldrh	r5, [r0, #0]
 801f406:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f40a:	122f      	asrs	r7, r5, #8
 801f40c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f410:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f414:	fb17 f70e 	smulbb	r7, r7, lr
 801f418:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f41c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f420:	00ed      	lsls	r5, r5, #3
 801f422:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f426:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f42a:	10df      	asrs	r7, r3, #3
 801f42c:	b2ed      	uxtb	r5, r5
 801f42e:	00db      	lsls	r3, r3, #3
 801f430:	fa1f fc8c 	uxth.w	ip, ip
 801f434:	fb19 f90e 	smulbb	r9, r9, lr
 801f438:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f43c:	b2db      	uxtb	r3, r3
 801f43e:	fb15 f50e 	smulbb	r5, r5, lr
 801f442:	fb07 9706 	mla	r7, r7, r6, r9
 801f446:	fb03 5306 	mla	r3, r3, r6, r5
 801f44a:	f10c 0901 	add.w	r9, ip, #1
 801f44e:	b29b      	uxth	r3, r3
 801f450:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f454:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801f458:	f103 0c01 	add.w	ip, r3, #1
 801f45c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f460:	b2bf      	uxth	r7, r7
 801f462:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f466:	ea4c 0c09 	orr.w	ip, ip, r9
 801f46a:	f107 0901 	add.w	r9, r7, #1
 801f46e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f472:	097f      	lsrs	r7, r7, #5
 801f474:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f478:	ea4c 0c07 	orr.w	ip, ip, r7
 801f47c:	f820 cb02 	strh.w	ip, [r0], #2
 801f480:	e7bc      	b.n	801f3fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801f482:	9b01      	ldr	r3, [sp, #4]
 801f484:	881b      	ldrh	r3, [r3, #0]
 801f486:	eba3 0308 	sub.w	r3, r3, r8
 801f48a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f48e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f492:	eba3 0308 	sub.w	r3, r3, r8
 801f496:	441c      	add	r4, r3
 801f498:	e7ac      	b.n	801f3f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801f49a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f49e:	4282      	cmp	r2, r0
 801f4a0:	d915      	bls.n	801f4ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f4a2:	eb00 060a 	add.w	r6, r0, sl
 801f4a6:	4286      	cmp	r6, r0
 801f4a8:	d906      	bls.n	801f4b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801f4aa:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f4ae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f4b2:	f820 3b02 	strh.w	r3, [r0], #2
 801f4b6:	e7f6      	b.n	801f4a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801f4b8:	882b      	ldrh	r3, [r5, #0]
 801f4ba:	eba3 0308 	sub.w	r3, r3, r8
 801f4be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f4c2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f4c6:	eba3 0308 	sub.w	r3, r3, r8
 801f4ca:	441c      	add	r4, r3
 801f4cc:	e7e7      	b.n	801f49e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801f4ce:	4b04      	ldr	r3, [pc, #16]	; (801f4e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f4d0:	6818      	ldr	r0, [r3, #0]
 801f4d2:	6803      	ldr	r3, [r0, #0]
 801f4d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f4d6:	4798      	blx	r3
 801f4d8:	b007      	add	sp, #28
 801f4da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f4de:	bf00      	nop
 801f4e0:	2001383c 	.word	0x2001383c
 801f4e4:	20013836 	.word	0x20013836

0801f4e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4ec:	b091      	sub	sp, #68	; 0x44
 801f4ee:	4680      	mov	r8, r0
 801f4f0:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801f4f4:	460f      	mov	r7, r1
 801f4f6:	4614      	mov	r4, r2
 801f4f8:	2d00      	cmp	r5, #0
 801f4fa:	d051      	beq.n	801f5a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f4fc:	6810      	ldr	r0, [r2, #0]
 801f4fe:	6851      	ldr	r1, [r2, #4]
 801f500:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801f504:	ae0c      	add	r6, sp, #48	; 0x30
 801f506:	c603      	stmia	r6!, {r0, r1}
 801f508:	6818      	ldr	r0, [r3, #0]
 801f50a:	6859      	ldr	r1, [r3, #4]
 801f50c:	ae0e      	add	r6, sp, #56	; 0x38
 801f50e:	c603      	stmia	r6!, {r0, r1}
 801f510:	a80c      	add	r0, sp, #48	; 0x30
 801f512:	f7f7 fae1 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f516:	4621      	mov	r1, r4
 801f518:	a80e      	add	r0, sp, #56	; 0x38
 801f51a:	f7f7 fb21 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f51e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801f522:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f526:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801f52a:	f8d9 0000 	ldr.w	r0, [r9]
 801f52e:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f532:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801f536:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f53a:	eb08 0401 	add.w	r4, r8, r1
 801f53e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801f542:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f708 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801f546:	440a      	add	r2, r1
 801f548:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801f54c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801f550:	4413      	add	r3, r2
 801f552:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801f556:	6803      	ldr	r3, [r0, #0]
 801f558:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f55a:	4798      	blx	r3
 801f55c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f560:	f8d9 0000 	ldr.w	r0, [r9]
 801f564:	d01f      	beq.n	801f5a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801f566:	2200      	movs	r2, #0
 801f568:	6801      	ldr	r1, [r0, #0]
 801f56a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f56e:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f572:	220b      	movs	r2, #11
 801f574:	9207      	str	r2, [sp, #28]
 801f576:	f8b8 2000 	ldrh.w	r2, [r8]
 801f57a:	9206      	str	r2, [sp, #24]
 801f57c:	2201      	movs	r2, #1
 801f57e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801f582:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801f586:	9203      	str	r2, [sp, #12]
 801f588:	fa1f f28a 	uxth.w	r2, sl
 801f58c:	9202      	str	r2, [sp, #8]
 801f58e:	b2b6      	uxth	r6, r6
 801f590:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f594:	9200      	str	r2, [sp, #0]
 801f596:	9601      	str	r6, [sp, #4]
 801f598:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f59a:	463a      	mov	r2, r7
 801f59c:	4621      	mov	r1, r4
 801f59e:	47a8      	blx	r5
 801f5a0:	b011      	add	sp, #68	; 0x44
 801f5a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5a6:	6803      	ldr	r3, [r0, #0]
 801f5a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f5aa:	4798      	blx	r3
 801f5ac:	f8b8 2000 	ldrh.w	r2, [r8]
 801f5b0:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f5b4:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f5b8:	2dff      	cmp	r5, #255	; 0xff
 801f5ba:	fb02 1303 	mla	r3, r2, r3, r1
 801f5be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f5c2:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f5c6:	fb0a fa02 	mul.w	sl, sl, r2
 801f5ca:	d062      	beq.n	801f692 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f5cc:	ea6f 0c05 	mvn.w	ip, r5
 801f5d0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f5d4:	930a      	str	r3, [sp, #40]	; 0x28
 801f5d6:	b2ad      	uxth	r5, r5
 801f5d8:	fa5f fc8c 	uxtb.w	ip, ip
 801f5dc:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f5e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f5e2:	4298      	cmp	r0, r3
 801f5e4:	f080 8085 	bcs.w	801f6f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f5e8:	eb00 0b09 	add.w	fp, r0, r9
 801f5ec:	4558      	cmp	r0, fp
 801f5ee:	d246      	bcs.n	801f67e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f5f0:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f5f4:	2303      	movs	r3, #3
 801f5f6:	2204      	movs	r2, #4
 801f5f8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f5fc:	eb07 0a0e 	add.w	sl, r7, lr
 801f600:	8803      	ldrh	r3, [r0, #0]
 801f602:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f606:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f60a:	1219      	asrs	r1, r3, #8
 801f60c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f610:	fb18 f805 	smulbb	r8, r8, r5
 801f614:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f618:	10da      	asrs	r2, r3, #3
 801f61a:	fb01 810c 	mla	r1, r1, ip, r8
 801f61e:	00db      	lsls	r3, r3, #3
 801f620:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f624:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f628:	b2db      	uxtb	r3, r3
 801f62a:	fb18 f805 	smulbb	r8, r8, r5
 801f62e:	fb1e fe05 	smulbb	lr, lr, r5
 801f632:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f636:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f63a:	b289      	uxth	r1, r1
 801f63c:	fb02 820c 	mla	r2, r2, ip, r8
 801f640:	fb03 e30c 	mla	r3, r3, ip, lr
 801f644:	b292      	uxth	r2, r2
 801f646:	b29b      	uxth	r3, r3
 801f648:	f101 0801 	add.w	r8, r1, #1
 801f64c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f650:	f103 0e01 	add.w	lr, r3, #1
 801f654:	f102 0801 	add.w	r8, r2, #1
 801f658:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f65c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f660:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f664:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f668:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f66c:	ea4e 0101 	orr.w	r1, lr, r1
 801f670:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f674:	ea41 0108 	orr.w	r1, r1, r8
 801f678:	f820 1b02 	strh.w	r1, [r0], #2
 801f67c:	e7b6      	b.n	801f5ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f67e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f680:	881b      	ldrh	r3, [r3, #0]
 801f682:	1b9b      	subs	r3, r3, r6
 801f684:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f688:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f68c:	1b9b      	subs	r3, r3, r6
 801f68e:	441c      	add	r4, r3
 801f690:	e7a6      	b.n	801f5e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f692:	491b      	ldr	r1, [pc, #108]	; (801f700 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f694:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f698:	2203      	movs	r2, #3
 801f69a:	2504      	movs	r5, #4
 801f69c:	4550      	cmp	r0, sl
 801f69e:	d228      	bcs.n	801f6f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f6a0:	eb00 0c09 	add.w	ip, r0, r9
 801f6a4:	4560      	cmp	r0, ip
 801f6a6:	4623      	mov	r3, r4
 801f6a8:	d219      	bcs.n	801f6de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f6aa:	f893 e000 	ldrb.w	lr, [r3]
 801f6ae:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f6b2:	eb07 0b0e 	add.w	fp, r7, lr
 801f6b6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f6ba:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f6be:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f6c2:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f6c6:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f6ca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f6ce:	ea43 030b 	orr.w	r3, r3, fp
 801f6d2:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f6d6:	3401      	adds	r4, #1
 801f6d8:	f820 3b02 	strh.w	r3, [r0], #2
 801f6dc:	e7e2      	b.n	801f6a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f6de:	f8b8 3000 	ldrh.w	r3, [r8]
 801f6e2:	1b9b      	subs	r3, r3, r6
 801f6e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f6e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f6ec:	1b9b      	subs	r3, r3, r6
 801f6ee:	441c      	add	r4, r3
 801f6f0:	e7d4      	b.n	801f69c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f6f2:	4b04      	ldr	r3, [pc, #16]	; (801f704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f6f4:	6818      	ldr	r0, [r3, #0]
 801f6f6:	6803      	ldr	r3, [r0, #0]
 801f6f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f6fa:	4798      	blx	r3
 801f6fc:	e750      	b.n	801f5a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f6fe:	bf00      	nop
 801f700:	fffff800 	.word	0xfffff800
 801f704:	2001383c 	.word	0x2001383c
 801f708:	20013836 	.word	0x20013836

0801f70c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f70c:	b4f0      	push	{r4, r5, r6, r7}
 801f70e:	460c      	mov	r4, r1
 801f710:	4611      	mov	r1, r2
 801f712:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f716:	780f      	ldrb	r7, [r1, #0]
 801f718:	784e      	ldrb	r6, [r1, #1]
 801f71a:	2f01      	cmp	r7, #1
 801f71c:	461a      	mov	r2, r3
 801f71e:	9b04      	ldr	r3, [sp, #16]
 801f720:	d036      	beq.n	801f790 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f722:	d31e      	bcc.n	801f762 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f724:	2f02      	cmp	r7, #2
 801f726:	d14a      	bne.n	801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f728:	2e03      	cmp	r6, #3
 801f72a:	d848      	bhi.n	801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f72c:	e8df f006 	tbb	[pc, r6]
 801f730:	16140702 	.word	0x16140702
 801f734:	9504      	str	r5, [sp, #16]
 801f736:	4620      	mov	r0, r4
 801f738:	bcf0      	pop	{r4, r5, r6, r7}
 801f73a:	f7ff be09 	b.w	801f350 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f73e:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f740:	2800      	cmp	r0, #0
 801f742:	d03c      	beq.n	801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f744:	6806      	ldr	r6, [r0, #0]
 801f746:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f74a:	68b5      	ldr	r5, [r6, #8]
 801f74c:	4613      	mov	r3, r2
 801f74e:	46ac      	mov	ip, r5
 801f750:	460a      	mov	r2, r1
 801f752:	4621      	mov	r1, r4
 801f754:	bcf0      	pop	{r4, r5, r6, r7}
 801f756:	4760      	bx	ip
 801f758:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f75a:	e7f1      	b.n	801f740 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f75c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f760:	e7ee      	b.n	801f740 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f762:	2e03      	cmp	r6, #3
 801f764:	d82b      	bhi.n	801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f766:	e8df f006 	tbb	[pc, r6]
 801f76a:	0702      	.short	0x0702
 801f76c:	100e      	.short	0x100e
 801f76e:	9504      	str	r5, [sp, #16]
 801f770:	4620      	mov	r0, r4
 801f772:	bcf0      	pop	{r4, r5, r6, r7}
 801f774:	f7ff bd06 	b.w	801f184 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f778:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f77a:	b300      	cbz	r0, 801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f77c:	6806      	ldr	r6, [r0, #0]
 801f77e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f782:	68f5      	ldr	r5, [r6, #12]
 801f784:	e7e2      	b.n	801f74c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f786:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f788:	e7f7      	b.n	801f77a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f78a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f78e:	e7f4      	b.n	801f77a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f790:	2e03      	cmp	r6, #3
 801f792:	d814      	bhi.n	801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f794:	e8df f006 	tbb	[pc, r6]
 801f798:	100e0702 	.word	0x100e0702
 801f79c:	9504      	str	r5, [sp, #16]
 801f79e:	4620      	mov	r0, r4
 801f7a0:	bcf0      	pop	{r4, r5, r6, r7}
 801f7a2:	f7ff bea1 	b.w	801f4e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f7a6:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f7a8:	b148      	cbz	r0, 801f7be <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f7aa:	6806      	ldr	r6, [r0, #0]
 801f7ac:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f7b0:	6935      	ldr	r5, [r6, #16]
 801f7b2:	e7cb      	b.n	801f74c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f7b4:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f7b6:	e7f7      	b.n	801f7a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f7b8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f7bc:	e7f4      	b.n	801f7a8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f7be:	bcf0      	pop	{r4, r5, r6, r7}
 801f7c0:	4770      	bx	lr
	...

0801f7c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f7c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f7c8:	4604      	mov	r4, r0
 801f7ca:	b087      	sub	sp, #28
 801f7cc:	6810      	ldr	r0, [r2, #0]
 801f7ce:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f7d2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801fa0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f7d6:	460e      	mov	r6, r1
 801f7d8:	6851      	ldr	r1, [r2, #4]
 801f7da:	ad02      	add	r5, sp, #8
 801f7dc:	c503      	stmia	r5!, {r0, r1}
 801f7de:	6818      	ldr	r0, [r3, #0]
 801f7e0:	6859      	ldr	r1, [r3, #4]
 801f7e2:	ad04      	add	r5, sp, #16
 801f7e4:	4617      	mov	r7, r2
 801f7e6:	c503      	stmia	r5!, {r0, r1}
 801f7e8:	a802      	add	r0, sp, #8
 801f7ea:	f7f7 f975 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f7ee:	4639      	mov	r1, r7
 801f7f0:	a804      	add	r0, sp, #16
 801f7f2:	f7f7 f9b5 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f7f6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f7fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f7fe:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f802:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f806:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f80a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f80e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f812:	440e      	add	r6, r1
 801f814:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f818:	440a      	add	r2, r1
 801f81a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f81e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f822:	4413      	add	r3, r2
 801f824:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f828:	4b77      	ldr	r3, [pc, #476]	; (801fa08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f82a:	6818      	ldr	r0, [r3, #0]
 801f82c:	6803      	ldr	r3, [r0, #0]
 801f82e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f830:	4798      	blx	r3
 801f832:	f8b9 b000 	ldrh.w	fp, [r9]
 801f836:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f83a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f83e:	fb0b 2303 	mla	r3, fp, r3, r2
 801f842:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f846:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f84a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f84e:	fb05 f50b 	mul.w	r5, r5, fp
 801f852:	9300      	str	r3, [sp, #0]
 801f854:	d069      	beq.n	801f92a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f856:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f85a:	4558      	cmp	r0, fp
 801f85c:	f080 80cc 	bcs.w	801f9f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f860:	9b00      	ldr	r3, [sp, #0]
 801f862:	18c3      	adds	r3, r0, r3
 801f864:	9301      	str	r3, [sp, #4]
 801f866:	4631      	mov	r1, r6
 801f868:	9b01      	ldr	r3, [sp, #4]
 801f86a:	4298      	cmp	r0, r3
 801f86c:	d24f      	bcs.n	801f90e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f86e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f872:	2a00      	cmp	r2, #0
 801f874:	d048      	beq.n	801f908 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f876:	fb0a f202 	mul.w	r2, sl, r2
 801f87a:	1c53      	adds	r3, r2, #1
 801f87c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f880:	121b      	asrs	r3, r3, #8
 801f882:	d041      	beq.n	801f908 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f884:	8802      	ldrh	r2, [r0, #0]
 801f886:	f8b4 c000 	ldrh.w	ip, [r4]
 801f88a:	b29e      	uxth	r6, r3
 801f88c:	1215      	asrs	r5, r2, #8
 801f88e:	43db      	mvns	r3, r3
 801f890:	b2db      	uxtb	r3, r3
 801f892:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f896:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f89a:	fb15 f503 	smulbb	r5, r5, r3
 801f89e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f8a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f8a6:	00d2      	lsls	r2, r2, #3
 801f8a8:	fb07 5706 	mla	r7, r7, r6, r5
 801f8ac:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f8b0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f8b4:	b2d2      	uxtb	r2, r2
 801f8b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f8ba:	b2bf      	uxth	r7, r7
 801f8bc:	fb1e fe03 	smulbb	lr, lr, r3
 801f8c0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f8c4:	fa5f fc8c 	uxtb.w	ip, ip
 801f8c8:	fb12 f203 	smulbb	r2, r2, r3
 801f8cc:	fb05 e506 	mla	r5, r5, r6, lr
 801f8d0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f8d4:	f107 0e01 	add.w	lr, r7, #1
 801f8d8:	fa1f fc8c 	uxth.w	ip, ip
 801f8dc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f8e0:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f8e4:	f10c 0701 	add.w	r7, ip, #1
 801f8e8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f8ec:	b2ad      	uxth	r5, r5
 801f8ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f8f2:	ea47 070e 	orr.w	r7, r7, lr
 801f8f6:	f105 0e01 	add.w	lr, r5, #1
 801f8fa:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f8fe:	096d      	lsrs	r5, r5, #5
 801f900:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f904:	432f      	orrs	r7, r5
 801f906:	8007      	strh	r7, [r0, #0]
 801f908:	3002      	adds	r0, #2
 801f90a:	3402      	adds	r4, #2
 801f90c:	e7ac      	b.n	801f868 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f90e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f912:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f916:	eba3 0308 	sub.w	r3, r3, r8
 801f91a:	eba6 0608 	sub.w	r6, r6, r8
 801f91e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f922:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f926:	440e      	add	r6, r1
 801f928:	e797      	b.n	801f85a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f92a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f92e:	42a8      	cmp	r0, r5
 801f930:	d262      	bcs.n	801f9f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f932:	9b00      	ldr	r3, [sp, #0]
 801f934:	4631      	mov	r1, r6
 801f936:	eb00 0b03 	add.w	fp, r0, r3
 801f93a:	4558      	cmp	r0, fp
 801f93c:	d24e      	bcs.n	801f9dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f93e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f942:	b12b      	cbz	r3, 801f950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f944:	2bff      	cmp	r3, #255	; 0xff
 801f946:	f8b4 e000 	ldrh.w	lr, [r4]
 801f94a:	d104      	bne.n	801f956 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f94c:	f8a0 e000 	strh.w	lr, [r0]
 801f950:	3002      	adds	r0, #2
 801f952:	3402      	adds	r4, #2
 801f954:	e7f1      	b.n	801f93a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f956:	8802      	ldrh	r2, [r0, #0]
 801f958:	b29f      	uxth	r7, r3
 801f95a:	1216      	asrs	r6, r2, #8
 801f95c:	43db      	mvns	r3, r3
 801f95e:	b2db      	uxtb	r3, r3
 801f960:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f964:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f968:	fb16 f603 	smulbb	r6, r6, r3
 801f96c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f970:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f974:	00d2      	lsls	r2, r2, #3
 801f976:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f97a:	b2d2      	uxtb	r2, r2
 801f97c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f980:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f984:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f988:	fb1a fa03 	smulbb	sl, sl, r3
 801f98c:	fa1f fc8c 	uxth.w	ip, ip
 801f990:	fb12 f303 	smulbb	r3, r2, r3
 801f994:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f998:	fa5f fe8e 	uxtb.w	lr, lr
 801f99c:	fb06 a607 	mla	r6, r6, r7, sl
 801f9a0:	f10c 0201 	add.w	r2, ip, #1
 801f9a4:	fb0e 3307 	mla	r3, lr, r7, r3
 801f9a8:	b2b6      	uxth	r6, r6
 801f9aa:	b29b      	uxth	r3, r3
 801f9ac:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f9b0:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f9b4:	f106 0a01 	add.w	sl, r6, #1
 801f9b8:	f103 0c01 	add.w	ip, r3, #1
 801f9bc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f9c0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f9c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f9c8:	0976      	lsrs	r6, r6, #5
 801f9ca:	ea4c 0c02 	orr.w	ip, ip, r2
 801f9ce:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f9d2:	ea4c 0c06 	orr.w	ip, ip, r6
 801f9d6:	f8a0 c000 	strh.w	ip, [r0]
 801f9da:	e7b9      	b.n	801f950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f9dc:	f8b9 3000 	ldrh.w	r3, [r9]
 801f9e0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f9e4:	eba3 0308 	sub.w	r3, r3, r8
 801f9e8:	eba6 0608 	sub.w	r6, r6, r8
 801f9ec:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f9f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f9f4:	440e      	add	r6, r1
 801f9f6:	e79a      	b.n	801f92e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f9f8:	4b03      	ldr	r3, [pc, #12]	; (801fa08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f9fa:	6818      	ldr	r0, [r3, #0]
 801f9fc:	6803      	ldr	r3, [r0, #0]
 801f9fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fa00:	4798      	blx	r3
 801fa02:	b007      	add	sp, #28
 801fa04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa08:	2001383c 	.word	0x2001383c
 801fa0c:	20013836 	.word	0x20013836

0801fa10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801fa10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa14:	b089      	sub	sp, #36	; 0x24
 801fa16:	4682      	mov	sl, r0
 801fa18:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801fa1c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fa1e:	460f      	mov	r7, r1
 801fa20:	4691      	mov	r9, r2
 801fa22:	4698      	mov	r8, r3
 801fa24:	2e00      	cmp	r6, #0
 801fa26:	d03d      	beq.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa28:	4608      	mov	r0, r1
 801fa2a:	f7fa fe59 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801fa2e:	4605      	mov	r5, r0
 801fa30:	4638      	mov	r0, r7
 801fa32:	f7fa fe89 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801fa36:	f8ad 000e 	strh.w	r0, [sp, #14]
 801fa3a:	4638      	mov	r0, r7
 801fa3c:	f8ad 9008 	strh.w	r9, [sp, #8]
 801fa40:	f8ad 500c 	strh.w	r5, [sp, #12]
 801fa44:	f8ad 800a 	strh.w	r8, [sp, #10]
 801fa48:	f7fa ff36 	bl	801a8b8 <_ZNK8touchgfx6Bitmap7getDataEv>
 801fa4c:	4605      	mov	r5, r0
 801fa4e:	4638      	mov	r0, r7
 801fa50:	f7fa ff62 	bl	801a918 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801fa54:	4681      	mov	r9, r0
 801fa56:	4638      	mov	r0, r7
 801fa58:	f7fa ffb2 	bl	801a9c0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801fa5c:	280b      	cmp	r0, #11
 801fa5e:	d821      	bhi.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa60:	e8df f000 	tbb	[pc, r0]
 801fa64:	2006aebe 	.word	0x2006aebe
 801fa68:	20202020 	.word	0x20202020
 801fa6c:	b5202020 	.word	0xb5202020
 801fa70:	4bb0      	ldr	r3, [pc, #704]	; (801fd34 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801fa72:	6818      	ldr	r0, [r3, #0]
 801fa74:	6803      	ldr	r3, [r0, #0]
 801fa76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fa78:	4798      	blx	r3
 801fa7a:	2eff      	cmp	r6, #255	; 0xff
 801fa7c:	d101      	bne.n	801fa82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801fa7e:	0683      	lsls	r3, r0, #26
 801fa80:	d506      	bpl.n	801fa90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801fa82:	4633      	mov	r3, r6
 801fa84:	4622      	mov	r2, r4
 801fa86:	a902      	add	r1, sp, #8
 801fa88:	4628      	mov	r0, r5
 801fa8a:	f7ff f909 	bl	801eca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fa8e:	e009      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa90:	4638      	mov	r0, r7
 801fa92:	f7fa fed9 	bl	801a848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fa96:	b940      	cbnz	r0, 801faaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801fa98:	4623      	mov	r3, r4
 801fa9a:	aa02      	add	r2, sp, #8
 801fa9c:	4629      	mov	r1, r5
 801fa9e:	4650      	mov	r0, sl
 801faa0:	f7ff f9e4 	bl	801ee6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801faa4:	b009      	add	sp, #36	; 0x24
 801faa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801faaa:	f10d 0818 	add.w	r8, sp, #24
 801faae:	4639      	mov	r1, r7
 801fab0:	4640      	mov	r0, r8
 801fab2:	f7fa fe7d 	bl	801a7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fab6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801faba:	af04      	add	r7, sp, #16
 801fabc:	e887 0003 	stmia.w	r7, {r0, r1}
 801fac0:	4638      	mov	r0, r7
 801fac2:	4621      	mov	r1, r4
 801fac4:	f7f1 fa6a 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801fac8:	4638      	mov	r0, r7
 801faca:	f7f1 faaa 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801face:	2800      	cmp	r0, #0
 801fad0:	d1d7      	bne.n	801fa82 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801fad2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fad6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fada:	4293      	cmp	r3, r2
 801fadc:	dd12      	ble.n	801fb04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801fade:	1a9b      	subs	r3, r3, r2
 801fae0:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fae4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fae8:	f8ad 0018 	strh.w	r0, [sp, #24]
 801faec:	f8ad 201a 	strh.w	r2, [sp, #26]
 801faf0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801faf4:	f8ad 301e 	strh.w	r3, [sp, #30]
 801faf8:	4642      	mov	r2, r8
 801fafa:	4633      	mov	r3, r6
 801fafc:	a902      	add	r1, sp, #8
 801fafe:	4628      	mov	r0, r5
 801fb00:	f7ff f8ce 	bl	801eca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fb04:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fb08:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fb0c:	4293      	cmp	r3, r2
 801fb0e:	dd12      	ble.n	801fb36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801fb10:	1a9b      	subs	r3, r3, r2
 801fb12:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fb16:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fb1a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fb1e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fb22:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb26:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fb2a:	23ff      	movs	r3, #255	; 0xff
 801fb2c:	4642      	mov	r2, r8
 801fb2e:	a902      	add	r1, sp, #8
 801fb30:	4628      	mov	r0, r5
 801fb32:	f7ff f8b5 	bl	801eca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fb36:	463b      	mov	r3, r7
 801fb38:	aa02      	add	r2, sp, #8
 801fb3a:	4629      	mov	r1, r5
 801fb3c:	4650      	mov	r0, sl
 801fb3e:	f7ff f995 	bl	801ee6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801fb42:	88a2      	ldrh	r2, [r4, #4]
 801fb44:	8823      	ldrh	r3, [r4, #0]
 801fb46:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fb4a:	4413      	add	r3, r2
 801fb4c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fb50:	440a      	add	r2, r1
 801fb52:	b29b      	uxth	r3, r3
 801fb54:	b292      	uxth	r2, r2
 801fb56:	b211      	sxth	r1, r2
 801fb58:	b218      	sxth	r0, r3
 801fb5a:	4288      	cmp	r0, r1
 801fb5c:	dd12      	ble.n	801fb84 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801fb5e:	1a9b      	subs	r3, r3, r2
 801fb60:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fb64:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801fb68:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fb6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb70:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fb74:	23ff      	movs	r3, #255	; 0xff
 801fb76:	4642      	mov	r2, r8
 801fb78:	a902      	add	r1, sp, #8
 801fb7a:	4628      	mov	r0, r5
 801fb7c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801fb80:	f7ff f88e 	bl	801eca0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fb84:	88e2      	ldrh	r2, [r4, #6]
 801fb86:	8863      	ldrh	r3, [r4, #2]
 801fb88:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fb8c:	4413      	add	r3, r2
 801fb8e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fb92:	440a      	add	r2, r1
 801fb94:	b29b      	uxth	r3, r3
 801fb96:	b292      	uxth	r2, r2
 801fb98:	b211      	sxth	r1, r2
 801fb9a:	b218      	sxth	r0, r3
 801fb9c:	4288      	cmp	r0, r1
 801fb9e:	dd81      	ble.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fba0:	1a9b      	subs	r3, r3, r2
 801fba2:	f9b4 6000 	ldrsh.w	r6, [r4]
 801fba6:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fbaa:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fbae:	f8ad 6018 	strh.w	r6, [sp, #24]
 801fbb2:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fbb6:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fbba:	23ff      	movs	r3, #255	; 0xff
 801fbbc:	4642      	mov	r2, r8
 801fbbe:	e762      	b.n	801fa86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801fbc0:	4633      	mov	r3, r6
 801fbc2:	4622      	mov	r2, r4
 801fbc4:	a902      	add	r1, sp, #8
 801fbc6:	4628      	mov	r0, r5
 801fbc8:	f7ff f9c0 	bl	801ef4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801fbcc:	e76a      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fbce:	e9cd 4600 	strd	r4, r6, [sp]
 801fbd2:	ab02      	add	r3, sp, #8
 801fbd4:	464a      	mov	r2, r9
 801fbd6:	4629      	mov	r1, r5
 801fbd8:	4650      	mov	r0, sl
 801fbda:	f7ff fd97 	bl	801f70c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801fbde:	e761      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fbe0:	4638      	mov	r0, r7
 801fbe2:	f7fa fe31 	bl	801a848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fbe6:	b950      	cbnz	r0, 801fbfe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801fbe8:	e9cd 6000 	strd	r6, r0, [sp]
 801fbec:	f8da 3000 	ldr.w	r3, [sl]
 801fbf0:	aa02      	add	r2, sp, #8
 801fbf2:	68de      	ldr	r6, [r3, #12]
 801fbf4:	4629      	mov	r1, r5
 801fbf6:	4623      	mov	r3, r4
 801fbf8:	4650      	mov	r0, sl
 801fbfa:	47b0      	blx	r6
 801fbfc:	e752      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fbfe:	f10d 0818 	add.w	r8, sp, #24
 801fc02:	4639      	mov	r1, r7
 801fc04:	4640      	mov	r0, r8
 801fc06:	f7fa fdd3 	bl	801a7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fc0a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801fc0e:	af04      	add	r7, sp, #16
 801fc10:	e887 0003 	stmia.w	r7, {r0, r1}
 801fc14:	4638      	mov	r0, r7
 801fc16:	4621      	mov	r1, r4
 801fc18:	f7f1 f9c0 	bl	8010f9c <_ZN8touchgfx4RectaNERKS0_>
 801fc1c:	4638      	mov	r0, r7
 801fc1e:	f7f1 fa00 	bl	8011022 <_ZNK8touchgfx4Rect7isEmptyEv>
 801fc22:	b138      	cbz	r0, 801fc34 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801fc24:	9600      	str	r6, [sp, #0]
 801fc26:	4623      	mov	r3, r4
 801fc28:	aa02      	add	r2, sp, #8
 801fc2a:	4649      	mov	r1, r9
 801fc2c:	4628      	mov	r0, r5
 801fc2e:	f7ff fdc9 	bl	801f7c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fc32:	e737      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fc34:	e9cd 6000 	strd	r6, r0, [sp]
 801fc38:	f8da 3000 	ldr.w	r3, [sl]
 801fc3c:	aa02      	add	r2, sp, #8
 801fc3e:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801fc42:	4629      	mov	r1, r5
 801fc44:	463b      	mov	r3, r7
 801fc46:	4650      	mov	r0, sl
 801fc48:	47d8      	blx	fp
 801fc4a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801fc4e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fc52:	4293      	cmp	r3, r2
 801fc54:	dd13      	ble.n	801fc7e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801fc56:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fc5a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fc5e:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fc62:	1a9b      	subs	r3, r3, r2
 801fc64:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fc68:	f8ad 101c 	strh.w	r1, [sp, #28]
 801fc6c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fc70:	9600      	str	r6, [sp, #0]
 801fc72:	4643      	mov	r3, r8
 801fc74:	aa02      	add	r2, sp, #8
 801fc76:	4649      	mov	r1, r9
 801fc78:	4628      	mov	r0, r5
 801fc7a:	f7ff fda3 	bl	801f7c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fc7e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fc82:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fc86:	4293      	cmp	r3, r2
 801fc88:	dd13      	ble.n	801fcb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801fc8a:	1a9b      	subs	r3, r3, r2
 801fc8c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fc90:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fc94:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fc98:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fc9c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fca0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fca4:	9600      	str	r6, [sp, #0]
 801fca6:	4643      	mov	r3, r8
 801fca8:	aa02      	add	r2, sp, #8
 801fcaa:	4649      	mov	r1, r9
 801fcac:	4628      	mov	r0, r5
 801fcae:	f7ff fd89 	bl	801f7c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fcb2:	88a2      	ldrh	r2, [r4, #4]
 801fcb4:	8823      	ldrh	r3, [r4, #0]
 801fcb6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fcba:	4413      	add	r3, r2
 801fcbc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fcc0:	440a      	add	r2, r1
 801fcc2:	b29b      	uxth	r3, r3
 801fcc4:	b292      	uxth	r2, r2
 801fcc6:	b211      	sxth	r1, r2
 801fcc8:	b218      	sxth	r0, r3
 801fcca:	4288      	cmp	r0, r1
 801fccc:	dd13      	ble.n	801fcf6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801fcce:	1a9b      	subs	r3, r3, r2
 801fcd0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fcd4:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801fcd8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fcdc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fce0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fce4:	9600      	str	r6, [sp, #0]
 801fce6:	4643      	mov	r3, r8
 801fce8:	aa02      	add	r2, sp, #8
 801fcea:	4649      	mov	r1, r9
 801fcec:	4628      	mov	r0, r5
 801fcee:	f8ad 701a 	strh.w	r7, [sp, #26]
 801fcf2:	f7ff fd67 	bl	801f7c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fcf6:	88e2      	ldrh	r2, [r4, #6]
 801fcf8:	8863      	ldrh	r3, [r4, #2]
 801fcfa:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fcfe:	4413      	add	r3, r2
 801fd00:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fd04:	440a      	add	r2, r1
 801fd06:	b29b      	uxth	r3, r3
 801fd08:	b292      	uxth	r2, r2
 801fd0a:	b211      	sxth	r1, r2
 801fd0c:	b218      	sxth	r0, r3
 801fd0e:	4288      	cmp	r0, r1
 801fd10:	f77f aec8 	ble.w	801faa4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fd14:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fd18:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fd1c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801fd20:	1a9b      	subs	r3, r3, r2
 801fd22:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fd26:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fd2a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fd2e:	9600      	str	r6, [sp, #0]
 801fd30:	4643      	mov	r3, r8
 801fd32:	e779      	b.n	801fc28 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801fd34:	2001383c 	.word	0x2001383c

0801fd38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801fd38:	b180      	cbz	r0, 801fd5c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801fd3a:	2903      	cmp	r1, #3
 801fd3c:	d81c      	bhi.n	801fd78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fd3e:	e8df f001 	tbb	[pc, r1]
 801fd42:	1d02      	.short	0x1d02
 801fd44:	1f08      	.short	0x1f08
 801fd46:	4b10      	ldr	r3, [pc, #64]	; (801fd88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fd48:	8818      	ldrh	r0, [r3, #0]
 801fd4a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fd4e:	4240      	negs	r0, r0
 801fd50:	4770      	bx	lr
 801fd52:	4b0d      	ldr	r3, [pc, #52]	; (801fd88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fd54:	8818      	ldrh	r0, [r3, #0]
 801fd56:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fd5a:	4770      	bx	lr
 801fd5c:	2903      	cmp	r1, #3
 801fd5e:	d80b      	bhi.n	801fd78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fd60:	a301      	add	r3, pc, #4	; (adr r3, 801fd68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801fd62:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fd66:	bf00      	nop
 801fd68:	0801fd7d 	.word	0x0801fd7d
 801fd6c:	0801fd53 	.word	0x0801fd53
 801fd70:	0801fd81 	.word	0x0801fd81
 801fd74:	0801fd47 	.word	0x0801fd47
 801fd78:	2000      	movs	r0, #0
 801fd7a:	4770      	bx	lr
 801fd7c:	2001      	movs	r0, #1
 801fd7e:	4770      	bx	lr
 801fd80:	f04f 30ff 	mov.w	r0, #4294967295
 801fd84:	4770      	bx	lr
 801fd86:	bf00      	nop
 801fd88:	20013836 	.word	0x20013836

0801fd8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801fd8c:	b180      	cbz	r0, 801fdb0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801fd8e:	2903      	cmp	r1, #3
 801fd90:	d81c      	bhi.n	801fdcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fd92:	e8df f001 	tbb	[pc, r1]
 801fd96:	021d      	.short	0x021d
 801fd98:	071f      	.short	0x071f
 801fd9a:	4b10      	ldr	r3, [pc, #64]	; (801fddc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fd9c:	8818      	ldrh	r0, [r3, #0]
 801fd9e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fda2:	4770      	bx	lr
 801fda4:	4b0d      	ldr	r3, [pc, #52]	; (801fddc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fda6:	8818      	ldrh	r0, [r3, #0]
 801fda8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fdac:	4240      	negs	r0, r0
 801fdae:	4770      	bx	lr
 801fdb0:	2903      	cmp	r1, #3
 801fdb2:	d80b      	bhi.n	801fdcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fdb4:	a301      	add	r3, pc, #4	; (adr r3, 801fdbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801fdb6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fdba:	bf00      	nop
 801fdbc:	0801fd9b 	.word	0x0801fd9b
 801fdc0:	0801fdd5 	.word	0x0801fdd5
 801fdc4:	0801fda5 	.word	0x0801fda5
 801fdc8:	0801fdd1 	.word	0x0801fdd1
 801fdcc:	2000      	movs	r0, #0
 801fdce:	4770      	bx	lr
 801fdd0:	2001      	movs	r0, #1
 801fdd2:	4770      	bx	lr
 801fdd4:	f04f 30ff 	mov.w	r0, #4294967295
 801fdd8:	4770      	bx	lr
 801fdda:	bf00      	nop
 801fddc:	20013836 	.word	0x20013836

0801fde0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801fde0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fde4:	b099      	sub	sp, #100	; 0x64
 801fde6:	910b      	str	r1, [sp, #44]	; 0x2c
 801fde8:	a914      	add	r1, sp, #80	; 0x50
 801fdea:	e881 000c 	stmia.w	r1, {r2, r3}
 801fdee:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801fdf2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801fdf6:	f891 900d 	ldrb.w	r9, [r1, #13]
 801fdfa:	9309      	str	r3, [sp, #36]	; 0x24
 801fdfc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801fe00:	9310      	str	r3, [sp, #64]	; 0x40
 801fe02:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801fe06:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801fe0a:	930c      	str	r3, [sp, #48]	; 0x30
 801fe0c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801fe10:	798f      	ldrb	r7, [r1, #6]
 801fe12:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801fe16:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801fe1a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801fe1e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801fe22:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801fe26:	431f      	orrs	r7, r3
 801fe28:	f000 8195 	beq.w	8020156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fe2c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801fe30:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801fe34:	f891 9007 	ldrb.w	r9, [r1, #7]
 801fe38:	ea59 0903 	orrs.w	r9, r9, r3
 801fe3c:	f000 818b 	beq.w	8020156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fe40:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801fe44:	b29b      	uxth	r3, r3
 801fe46:	2d00      	cmp	r5, #0
 801fe48:	f000 812e 	beq.w	80200a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801fe4c:	1aed      	subs	r5, r5, r3
 801fe4e:	b2ad      	uxth	r5, r5
 801fe50:	042b      	lsls	r3, r5, #16
 801fe52:	d502      	bpl.n	801fe5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801fe54:	1b64      	subs	r4, r4, r5
 801fe56:	b224      	sxth	r4, r4
 801fe58:	2500      	movs	r5, #0
 801fe5a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801fe5e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801fe62:	428c      	cmp	r4, r1
 801fe64:	b28b      	uxth	r3, r1
 801fe66:	bfbf      	itttt	lt
 801fe68:	18ed      	addlt	r5, r5, r3
 801fe6a:	1b2c      	sublt	r4, r5, r4
 801fe6c:	b2a5      	uxthlt	r5, r4
 801fe6e:	460c      	movlt	r4, r1
 801fe70:	8891      	ldrh	r1, [r2, #4]
 801fe72:	440b      	add	r3, r1
 801fe74:	b21b      	sxth	r3, r3
 801fe76:	930f      	str	r3, [sp, #60]	; 0x3c
 801fe78:	88d3      	ldrh	r3, [r2, #6]
 801fe7a:	8852      	ldrh	r2, [r2, #2]
 801fe7c:	4413      	add	r3, r2
 801fe7e:	b21b      	sxth	r3, r3
 801fe80:	930d      	str	r3, [sp, #52]	; 0x34
 801fe82:	4bbe      	ldr	r3, [pc, #760]	; (802017c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801fe84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fe86:	f893 b000 	ldrb.w	fp, [r3]
 801fe8a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801fe8e:	f1dc 0300 	rsbs	r3, ip, #0
 801fe92:	eb43 030c 	adc.w	r3, r3, ip
 801fe96:	930e      	str	r3, [sp, #56]	; 0x38
 801fe98:	4621      	mov	r1, r4
 801fe9a:	4653      	mov	r3, sl
 801fe9c:	a814      	add	r0, sp, #80	; 0x50
 801fe9e:	f7f6 fc90 	bl	80167c2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801fea2:	4621      	mov	r1, r4
 801fea4:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801fea8:	4653      	mov	r3, sl
 801feaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801feac:	a814      	add	r0, sp, #80	; 0x50
 801feae:	f7f6 fca5 	bl	80167fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801feb2:	a918      	add	r1, sp, #96	; 0x60
 801feb4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801feb8:	a817      	add	r0, sp, #92	; 0x5c
 801feba:	f7f6 fdcb 	bl	8016a54 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801febe:	f1ba 0f00 	cmp.w	sl, #0
 801fec2:	f040 80f4 	bne.w	80200ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801fec6:	f1bb 0f01 	cmp.w	fp, #1
 801feca:	f040 80f8 	bne.w	80200be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801fece:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fed0:	2b00      	cmp	r3, #0
 801fed2:	f040 8145 	bne.w	8020160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801fed6:	b2ba      	uxth	r2, r7
 801fed8:	b905      	cbnz	r5, 801fedc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801feda:	b16e      	cbz	r6, 801fef8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801fedc:	fb06 5302 	mla	r3, r6, r2, r5
 801fee0:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801fee2:	fb08 f303 	mul.w	r3, r8, r3
 801fee6:	4631      	mov	r1, r6
 801fee8:	f003 0607 	and.w	r6, r3, #7
 801feec:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801fef0:	9328      	str	r3, [sp, #160]	; 0xa0
 801fef2:	eba9 0301 	sub.w	r3, r9, r1
 801fef6:	930a      	str	r3, [sp, #40]	; 0x28
 801fef8:	4651      	mov	r1, sl
 801fefa:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fefc:	f7ff ff1c 	bl	801fd38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801ff00:	4681      	mov	r9, r0
 801ff02:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ff04:	f7ff ff42 	bl	801fd8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801ff08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ff0c:	eba3 0a01 	sub.w	sl, r3, r1
 801ff10:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff12:	459a      	cmp	sl, r3
 801ff14:	bfa8      	it	ge
 801ff16:	469a      	movge	sl, r3
 801ff18:	f1ba 0f00 	cmp.w	sl, #0
 801ff1c:	4683      	mov	fp, r0
 801ff1e:	f340 811a 	ble.w	8020156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ff22:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ff24:	1b64      	subs	r4, r4, r5
 801ff26:	1b1c      	subs	r4, r3, r4
 801ff28:	42bc      	cmp	r4, r7
 801ff2a:	bfd4      	ite	le
 801ff2c:	ebc5 0504 	rsble	r5, r5, r4
 801ff30:	ebc5 0507 	rsbgt	r5, r5, r7
 801ff34:	2d00      	cmp	r5, #0
 801ff36:	f340 810e 	ble.w	8020156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ff3a:	1b52      	subs	r2, r2, r5
 801ff3c:	fb08 f302 	mul.w	r3, r8, r2
 801ff40:	930f      	str	r3, [sp, #60]	; 0x3c
 801ff42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ff44:	2b00      	cmp	r3, #0
 801ff46:	f040 8116 	bne.w	8020176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801ff4a:	4b8d      	ldr	r3, [pc, #564]	; (8020180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801ff4c:	6818      	ldr	r0, [r3, #0]
 801ff4e:	6803      	ldr	r3, [r0, #0]
 801ff50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ff52:	4798      	blx	r3
 801ff54:	2301      	movs	r3, #1
 801ff56:	fa03 f308 	lsl.w	r3, r3, r8
 801ff5a:	4a8a      	ldr	r2, [pc, #552]	; (8020184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801ff5c:	3b01      	subs	r3, #1
 801ff5e:	b2db      	uxtb	r3, r3
 801ff60:	8811      	ldrh	r1, [r2, #0]
 801ff62:	930e      	str	r3, [sp, #56]	; 0x38
 801ff64:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801ff68:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801ff6c:	fb01 2303 	mla	r3, r1, r3, r2
 801ff70:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ff74:	930a      	str	r3, [sp, #40]	; 0x28
 801ff76:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ff78:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801ff7c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ff7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ff80:	0a19      	lsrs	r1, r3, #8
 801ff82:	b2cb      	uxtb	r3, r1
 801ff84:	9312      	str	r3, [sp, #72]	; 0x48
 801ff86:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ff88:	b2db      	uxtb	r3, r3
 801ff8a:	9311      	str	r3, [sp, #68]	; 0x44
 801ff8c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ff8e:	095a      	lsrs	r2, r3, #5
 801ff90:	4b7d      	ldr	r3, [pc, #500]	; (8020188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801ff92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff96:	400b      	ands	r3, r1
 801ff98:	4313      	orrs	r3, r2
 801ff9a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ff9c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ffa0:	4313      	orrs	r3, r2
 801ffa2:	b29b      	uxth	r3, r3
 801ffa4:	9310      	str	r3, [sp, #64]	; 0x40
 801ffa6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ffa8:	781a      	ldrb	r2, [r3, #0]
 801ffaa:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801ffae:	4132      	asrs	r2, r6
 801ffb0:	fb05 b919 	mls	r9, r5, r9, fp
 801ffb4:	fb03 fb05 	mul.w	fp, r3, r5
 801ffb8:	b2d2      	uxtb	r2, r2
 801ffba:	930d      	str	r3, [sp, #52]	; 0x34
 801ffbc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801ffc0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801ffc4:	f0c0 80f5 	bcc.w	80201b2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801ffc8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801ffcc:	46ae      	mov	lr, r5
 801ffce:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801ffd2:	f0c0 80dd 	bcc.w	8020190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801ffd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ffd8:	4013      	ands	r3, r2
 801ffda:	d055      	beq.n	8020088 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801ffdc:	20ff      	movs	r0, #255	; 0xff
 801ffde:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ffe0:	fb90 f1f1 	sdiv	r1, r0, r1
 801ffe4:	434b      	muls	r3, r1
 801ffe6:	2bfe      	cmp	r3, #254	; 0xfe
 801ffe8:	dd03      	ble.n	801fff2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801ffea:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ffec:	4281      	cmp	r1, r0
 801ffee:	f000 80cd 	beq.w	802018c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801fff2:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fff4:	f8bc 4000 	ldrh.w	r4, [ip]
 801fff8:	fb11 f303 	smulbb	r3, r1, r3
 801fffc:	b29b      	uxth	r3, r3
 801fffe:	1c59      	adds	r1, r3, #1
 8020000:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8020004:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020008:	b29f      	uxth	r7, r3
 802000a:	43db      	mvns	r3, r3
 802000c:	b2db      	uxtb	r3, r3
 802000e:	9309      	str	r3, [sp, #36]	; 0x24
 8020010:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020012:	1220      	asrs	r0, r4, #8
 8020014:	fb13 f907 	smulbb	r9, r3, r7
 8020018:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802001c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802001e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8020022:	fb00 9003 	mla	r0, r0, r3, r9
 8020026:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020028:	10e1      	asrs	r1, r4, #3
 802002a:	fb13 f907 	smulbb	r9, r3, r7
 802002e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020032:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020034:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8020038:	fb01 9103 	mla	r1, r1, r3, r9
 802003c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802003e:	00e4      	lsls	r4, r4, #3
 8020040:	fb13 f707 	smulbb	r7, r3, r7
 8020044:	b2e4      	uxtb	r4, r4
 8020046:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020048:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802004c:	fb04 7403 	mla	r4, r4, r3, r7
 8020050:	b280      	uxth	r0, r0
 8020052:	b2a4      	uxth	r4, r4
 8020054:	1c43      	adds	r3, r0, #1
 8020056:	f104 0901 	add.w	r9, r4, #1
 802005a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802005e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8020062:	b289      	uxth	r1, r1
 8020064:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8020068:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802006c:	ea49 0000 	orr.w	r0, r9, r0
 8020070:	f101 0901 	add.w	r9, r1, #1
 8020074:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8020078:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802007c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020080:	ea40 0009 	orr.w	r0, r0, r9
 8020084:	f8ac 0000 	strh.w	r0, [ip]
 8020088:	4446      	add	r6, r8
 802008a:	b2b6      	uxth	r6, r6
 802008c:	2e07      	cmp	r6, #7
 802008e:	bf81      	itttt	hi
 8020090:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8020092:	785a      	ldrbhi	r2, [r3, #1]
 8020094:	3301      	addhi	r3, #1
 8020096:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8020098:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802009a:	bf9a      	itte	ls
 802009c:	fa42 f208 	asrls.w	r2, r2, r8
 80200a0:	b2d2      	uxtbls	r2, r2
 80200a2:	2600      	movhi	r6, #0
 80200a4:	449c      	add	ip, r3
 80200a6:	e792      	b.n	801ffce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 80200a8:	441c      	add	r4, r3
 80200aa:	b224      	sxth	r4, r4
 80200ac:	e6d5      	b.n	801fe5a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80200ae:	f1ba 0f01 	cmp.w	sl, #1
 80200b2:	f47f af0c 	bne.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80200b6:	f1bb 0f01 	cmp.w	fp, #1
 80200ba:	f47f af08 	bne.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80200be:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8020180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 80200c2:	f8db 0000 	ldr.w	r0, [fp]
 80200c6:	6803      	ldr	r3, [r0, #0]
 80200c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80200ca:	4798      	blx	r3
 80200cc:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80200d0:	465a      	mov	r2, fp
 80200d2:	d006      	beq.n	80200e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80200d4:	f1b8 0f04 	cmp.w	r8, #4
 80200d8:	d140      	bne.n	802015c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80200da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80200dc:	3300      	adds	r3, #0
 80200de:	bf18      	it	ne
 80200e0:	2301      	movne	r3, #1
 80200e2:	0580      	lsls	r0, r0, #22
 80200e4:	d56e      	bpl.n	80201c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80200e6:	f1b8 0f08 	cmp.w	r8, #8
 80200ea:	d16b      	bne.n	80201c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80200ec:	2b00      	cmp	r3, #0
 80200ee:	bf0c      	ite	eq
 80200f0:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80200f4:	f44f 7180 	movne.w	r1, #256	; 0x100
 80200f8:	2d00      	cmp	r5, #0
 80200fa:	f47f aee8 	bne.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80200fe:	2e00      	cmp	r6, #0
 8020100:	f47f aee5 	bne.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8020104:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8020106:	19e3      	adds	r3, r4, r7
 8020108:	4283      	cmp	r3, r0
 802010a:	f73f aee0 	bgt.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802010e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020110:	980d      	ldr	r0, [sp, #52]	; 0x34
 8020112:	444b      	add	r3, r9
 8020114:	4283      	cmp	r3, r0
 8020116:	f73f aeda 	bgt.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802011a:	6810      	ldr	r0, [r2, #0]
 802011c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8020120:	6804      	ldr	r4, [r0, #0]
 8020122:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8020126:	b2bf      	uxth	r7, r7
 8020128:	f1b8 0f08 	cmp.w	r8, #8
 802012c:	f04f 0500 	mov.w	r5, #0
 8020130:	bf18      	it	ne
 8020132:	3701      	addne	r7, #1
 8020134:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8020138:	990c      	ldr	r1, [sp, #48]	; 0x30
 802013a:	9104      	str	r1, [sp, #16]
 802013c:	bf18      	it	ne
 802013e:	f027 0701 	bicne.w	r7, r7, #1
 8020142:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8020144:	bf18      	it	ne
 8020146:	b2bf      	uxthne	r7, r7
 8020148:	e9cd 7102 	strd	r7, r1, [sp, #8]
 802014c:	e9cd 7900 	strd	r7, r9, [sp]
 8020150:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020152:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8020154:	47a0      	blx	r4
 8020156:	b019      	add	sp, #100	; 0x64
 8020158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802015c:	2300      	movs	r3, #0
 802015e:	e7c0      	b.n	80200e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8020160:	2208      	movs	r2, #8
 8020162:	fb92 f3f8 	sdiv	r3, r2, r8
 8020166:	1e5a      	subs	r2, r3, #1
 8020168:	443a      	add	r2, r7
 802016a:	fb92 f2f3 	sdiv	r2, r2, r3
 802016e:	fb12 f203 	smulbb	r2, r2, r3
 8020172:	b292      	uxth	r2, r2
 8020174:	e6b0      	b.n	801fed8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8020176:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8020178:	e6ec      	b.n	801ff54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 802017a:	bf00      	nop
 802017c:	20013834 	.word	0x20013834
 8020180:	2001383c 	.word	0x2001383c
 8020184:	20013836 	.word	0x20013836
 8020188:	00fff800 	.word	0x00fff800
 802018c:	9810      	ldr	r0, [sp, #64]	; 0x40
 802018e:	e779      	b.n	8020084 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8020190:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020192:	b153      	cbz	r3, 80201aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8020194:	441e      	add	r6, r3
 8020196:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020198:	b2b6      	uxth	r6, r6
 802019a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 802019e:	f006 0607 	and.w	r6, r6, #7
 80201a2:	781a      	ldrb	r2, [r3, #0]
 80201a4:	9328      	str	r3, [sp, #160]	; 0xa0
 80201a6:	4132      	asrs	r2, r6
 80201a8:	b2d2      	uxtb	r2, r2
 80201aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80201ac:	445b      	add	r3, fp
 80201ae:	930a      	str	r3, [sp, #40]	; 0x28
 80201b0:	e706      	b.n	801ffc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 80201b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80201b4:	2b00      	cmp	r3, #0
 80201b6:	d1ce      	bne.n	8020156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80201b8:	4b05      	ldr	r3, [pc, #20]	; (80201d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 80201ba:	6818      	ldr	r0, [r3, #0]
 80201bc:	6803      	ldr	r3, [r0, #0]
 80201be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80201c0:	4798      	blx	r3
 80201c2:	e7c8      	b.n	8020156 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80201c4:	2b00      	cmp	r3, #0
 80201c6:	f43f ae82 	beq.w	801fece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80201ca:	f44f 7180 	mov.w	r1, #256	; 0x100
 80201ce:	e793      	b.n	80200f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80201d0:	2001383c 	.word	0x2001383c

080201d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80201d4:	b538      	push	{r3, r4, r5, lr}
 80201d6:	4c15      	ldr	r4, [pc, #84]	; (802022c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80201d8:	7823      	ldrb	r3, [r4, #0]
 80201da:	f3bf 8f5b 	dmb	ish
 80201de:	07da      	lsls	r2, r3, #31
 80201e0:	4605      	mov	r5, r0
 80201e2:	d40b      	bmi.n	80201fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80201e4:	4620      	mov	r0, r4
 80201e6:	f00a fee2 	bl	802afae <__cxa_guard_acquire>
 80201ea:	b138      	cbz	r0, 80201fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80201ec:	4620      	mov	r0, r4
 80201ee:	f00a feea 	bl	802afc6 <__cxa_guard_release>
 80201f2:	4a0f      	ldr	r2, [pc, #60]	; (8020230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80201f4:	490f      	ldr	r1, [pc, #60]	; (8020234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80201f6:	4810      	ldr	r0, [pc, #64]	; (8020238 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80201f8:	f00a fed2 	bl	802afa0 <__aeabi_atexit>
 80201fc:	4c0f      	ldr	r4, [pc, #60]	; (802023c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80201fe:	7823      	ldrb	r3, [r4, #0]
 8020200:	f3bf 8f5b 	dmb	ish
 8020204:	07db      	lsls	r3, r3, #31
 8020206:	d40b      	bmi.n	8020220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020208:	4620      	mov	r0, r4
 802020a:	f00a fed0 	bl	802afae <__cxa_guard_acquire>
 802020e:	b138      	cbz	r0, 8020220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020210:	4620      	mov	r0, r4
 8020212:	f00a fed8 	bl	802afc6 <__cxa_guard_release>
 8020216:	4a06      	ldr	r2, [pc, #24]	; (8020230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020218:	4909      	ldr	r1, [pc, #36]	; (8020240 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802021a:	480a      	ldr	r0, [pc, #40]	; (8020244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802021c:	f00a fec0 	bl	802afa0 <__aeabi_atexit>
 8020220:	4b05      	ldr	r3, [pc, #20]	; (8020238 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020222:	612b      	str	r3, [r5, #16]
 8020224:	4b07      	ldr	r3, [pc, #28]	; (8020244 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8020226:	616b      	str	r3, [r5, #20]
 8020228:	bd38      	pop	{r3, r4, r5, pc}
 802022a:	bf00      	nop
 802022c:	2001391c 	.word	0x2001391c
 8020230:	20000000 	.word	0x20000000
 8020234:	0801cfd7 	.word	0x0801cfd7
 8020238:	200000d8 	.word	0x200000d8
 802023c:	20013920 	.word	0x20013920
 8020240:	0801cfd5 	.word	0x0801cfd5
 8020244:	200000dc 	.word	0x200000dc

08020248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8020248:	b538      	push	{r3, r4, r5, lr}
 802024a:	4c15      	ldr	r4, [pc, #84]	; (80202a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 802024c:	7823      	ldrb	r3, [r4, #0]
 802024e:	f3bf 8f5b 	dmb	ish
 8020252:	07da      	lsls	r2, r3, #31
 8020254:	4605      	mov	r5, r0
 8020256:	d40b      	bmi.n	8020270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020258:	4620      	mov	r0, r4
 802025a:	f00a fea8 	bl	802afae <__cxa_guard_acquire>
 802025e:	b138      	cbz	r0, 8020270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8020260:	4620      	mov	r0, r4
 8020262:	f00a feb0 	bl	802afc6 <__cxa_guard_release>
 8020266:	4a0f      	ldr	r2, [pc, #60]	; (80202a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8020268:	490f      	ldr	r1, [pc, #60]	; (80202a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 802026a:	4810      	ldr	r0, [pc, #64]	; (80202ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 802026c:	f00a fe98 	bl	802afa0 <__aeabi_atexit>
 8020270:	4c0f      	ldr	r4, [pc, #60]	; (80202b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8020272:	7823      	ldrb	r3, [r4, #0]
 8020274:	f3bf 8f5b 	dmb	ish
 8020278:	07db      	lsls	r3, r3, #31
 802027a:	d40b      	bmi.n	8020294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 802027c:	4620      	mov	r0, r4
 802027e:	f00a fe96 	bl	802afae <__cxa_guard_acquire>
 8020282:	b138      	cbz	r0, 8020294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020284:	4620      	mov	r0, r4
 8020286:	f00a fe9e 	bl	802afc6 <__cxa_guard_release>
 802028a:	4a06      	ldr	r2, [pc, #24]	; (80202a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802028c:	4909      	ldr	r1, [pc, #36]	; (80202b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 802028e:	480a      	ldr	r0, [pc, #40]	; (80202b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020290:	f00a fe86 	bl	802afa0 <__aeabi_atexit>
 8020294:	4b05      	ldr	r3, [pc, #20]	; (80202ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020296:	60ab      	str	r3, [r5, #8]
 8020298:	4b07      	ldr	r3, [pc, #28]	; (80202b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802029a:	60eb      	str	r3, [r5, #12]
 802029c:	bd38      	pop	{r3, r4, r5, pc}
 802029e:	bf00      	nop
 80202a0:	200138f4 	.word	0x200138f4
 80202a4:	20000000 	.word	0x20000000
 80202a8:	0801cfdb 	.word	0x0801cfdb
 80202ac:	200000b0 	.word	0x200000b0
 80202b0:	200138f8 	.word	0x200138f8
 80202b4:	0801cfd9 	.word	0x0801cfd9
 80202b8:	200000b4 	.word	0x200000b4

080202bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 80202bc:	b510      	push	{r4, lr}
 80202be:	4604      	mov	r4, r0
 80202c0:	f7ff ff88 	bl	80201d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80202c4:	4620      	mov	r0, r4
 80202c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80202ca:	f7ff bfbd 	b.w	8020248 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080202d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80202d0:	b538      	push	{r3, r4, r5, lr}
 80202d2:	4c15      	ldr	r4, [pc, #84]	; (8020328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80202d4:	7823      	ldrb	r3, [r4, #0]
 80202d6:	f3bf 8f5b 	dmb	ish
 80202da:	07da      	lsls	r2, r3, #31
 80202dc:	4605      	mov	r5, r0
 80202de:	d40b      	bmi.n	80202f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80202e0:	4620      	mov	r0, r4
 80202e2:	f00a fe64 	bl	802afae <__cxa_guard_acquire>
 80202e6:	b138      	cbz	r0, 80202f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80202e8:	4620      	mov	r0, r4
 80202ea:	f00a fe6c 	bl	802afc6 <__cxa_guard_release>
 80202ee:	4a0f      	ldr	r2, [pc, #60]	; (802032c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80202f0:	490f      	ldr	r1, [pc, #60]	; (8020330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80202f2:	4810      	ldr	r0, [pc, #64]	; (8020334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80202f4:	f00a fe54 	bl	802afa0 <__aeabi_atexit>
 80202f8:	4c0f      	ldr	r4, [pc, #60]	; (8020338 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80202fa:	7823      	ldrb	r3, [r4, #0]
 80202fc:	f3bf 8f5b 	dmb	ish
 8020300:	07db      	lsls	r3, r3, #31
 8020302:	d40b      	bmi.n	802031c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020304:	4620      	mov	r0, r4
 8020306:	f00a fe52 	bl	802afae <__cxa_guard_acquire>
 802030a:	b138      	cbz	r0, 802031c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802030c:	4620      	mov	r0, r4
 802030e:	f00a fe5a 	bl	802afc6 <__cxa_guard_release>
 8020312:	4a06      	ldr	r2, [pc, #24]	; (802032c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020314:	4909      	ldr	r1, [pc, #36]	; (802033c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8020316:	480a      	ldr	r0, [pc, #40]	; (8020340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020318:	f00a fe42 	bl	802afa0 <__aeabi_atexit>
 802031c:	4b05      	ldr	r3, [pc, #20]	; (8020334 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802031e:	622b      	str	r3, [r5, #32]
 8020320:	4b07      	ldr	r3, [pc, #28]	; (8020340 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020322:	626b      	str	r3, [r5, #36]	; 0x24
 8020324:	bd38      	pop	{r3, r4, r5, pc}
 8020326:	bf00      	nop
 8020328:	20013924 	.word	0x20013924
 802032c:	20000000 	.word	0x20000000
 8020330:	0801cfcf 	.word	0x0801cfcf
 8020334:	200000e0 	.word	0x200000e0
 8020338:	20013928 	.word	0x20013928
 802033c:	0801cfcd 	.word	0x0801cfcd
 8020340:	200000e4 	.word	0x200000e4

08020344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8020344:	b538      	push	{r3, r4, r5, lr}
 8020346:	4c15      	ldr	r4, [pc, #84]	; (802039c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8020348:	7823      	ldrb	r3, [r4, #0]
 802034a:	f3bf 8f5b 	dmb	ish
 802034e:	07da      	lsls	r2, r3, #31
 8020350:	4605      	mov	r5, r0
 8020352:	d40b      	bmi.n	802036c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8020354:	4620      	mov	r0, r4
 8020356:	f00a fe2a 	bl	802afae <__cxa_guard_acquire>
 802035a:	b138      	cbz	r0, 802036c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 802035c:	4620      	mov	r0, r4
 802035e:	f00a fe32 	bl	802afc6 <__cxa_guard_release>
 8020362:	4a0f      	ldr	r2, [pc, #60]	; (80203a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020364:	490f      	ldr	r1, [pc, #60]	; (80203a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8020366:	4810      	ldr	r0, [pc, #64]	; (80203a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020368:	f00a fe1a 	bl	802afa0 <__aeabi_atexit>
 802036c:	4c0f      	ldr	r4, [pc, #60]	; (80203ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 802036e:	7823      	ldrb	r3, [r4, #0]
 8020370:	f3bf 8f5b 	dmb	ish
 8020374:	07db      	lsls	r3, r3, #31
 8020376:	d40b      	bmi.n	8020390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020378:	4620      	mov	r0, r4
 802037a:	f00a fe18 	bl	802afae <__cxa_guard_acquire>
 802037e:	b138      	cbz	r0, 8020390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020380:	4620      	mov	r0, r4
 8020382:	f00a fe20 	bl	802afc6 <__cxa_guard_release>
 8020386:	4a06      	ldr	r2, [pc, #24]	; (80203a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020388:	4909      	ldr	r1, [pc, #36]	; (80203b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802038a:	480a      	ldr	r0, [pc, #40]	; (80203b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802038c:	f00a fe08 	bl	802afa0 <__aeabi_atexit>
 8020390:	4b05      	ldr	r3, [pc, #20]	; (80203a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020392:	61ab      	str	r3, [r5, #24]
 8020394:	4b07      	ldr	r3, [pc, #28]	; (80203b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020396:	61eb      	str	r3, [r5, #28]
 8020398:	bd38      	pop	{r3, r4, r5, pc}
 802039a:	bf00      	nop
 802039c:	200138fc 	.word	0x200138fc
 80203a0:	20000000 	.word	0x20000000
 80203a4:	0801cfd3 	.word	0x0801cfd3
 80203a8:	200000b8 	.word	0x200000b8
 80203ac:	20013900 	.word	0x20013900
 80203b0:	0801cfd1 	.word	0x0801cfd1
 80203b4:	200000bc 	.word	0x200000bc

080203b8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 80203b8:	b510      	push	{r4, lr}
 80203ba:	4604      	mov	r4, r0
 80203bc:	f7ff ff88 	bl	80202d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 80203c0:	4620      	mov	r0, r4
 80203c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80203c6:	f7ff bfbd 	b.w	8020344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080203cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80203cc:	b538      	push	{r3, r4, r5, lr}
 80203ce:	4c15      	ldr	r4, [pc, #84]	; (8020424 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80203d0:	7823      	ldrb	r3, [r4, #0]
 80203d2:	f3bf 8f5b 	dmb	ish
 80203d6:	07da      	lsls	r2, r3, #31
 80203d8:	4605      	mov	r5, r0
 80203da:	d40b      	bmi.n	80203f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80203dc:	4620      	mov	r0, r4
 80203de:	f00a fde6 	bl	802afae <__cxa_guard_acquire>
 80203e2:	b138      	cbz	r0, 80203f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80203e4:	4620      	mov	r0, r4
 80203e6:	f00a fdee 	bl	802afc6 <__cxa_guard_release>
 80203ea:	4a0f      	ldr	r2, [pc, #60]	; (8020428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80203ec:	490f      	ldr	r1, [pc, #60]	; (802042c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80203ee:	4810      	ldr	r0, [pc, #64]	; (8020430 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80203f0:	f00a fdd6 	bl	802afa0 <__aeabi_atexit>
 80203f4:	4c0f      	ldr	r4, [pc, #60]	; (8020434 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80203f6:	7823      	ldrb	r3, [r4, #0]
 80203f8:	f3bf 8f5b 	dmb	ish
 80203fc:	07db      	lsls	r3, r3, #31
 80203fe:	d40b      	bmi.n	8020418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020400:	4620      	mov	r0, r4
 8020402:	f00a fdd4 	bl	802afae <__cxa_guard_acquire>
 8020406:	b138      	cbz	r0, 8020418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020408:	4620      	mov	r0, r4
 802040a:	f00a fddc 	bl	802afc6 <__cxa_guard_release>
 802040e:	4a06      	ldr	r2, [pc, #24]	; (8020428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020410:	4909      	ldr	r1, [pc, #36]	; (8020438 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8020412:	480a      	ldr	r0, [pc, #40]	; (802043c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8020414:	f00a fdc4 	bl	802afa0 <__aeabi_atexit>
 8020418:	4b05      	ldr	r3, [pc, #20]	; (8020430 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802041a:	632b      	str	r3, [r5, #48]	; 0x30
 802041c:	4b07      	ldr	r3, [pc, #28]	; (802043c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802041e:	636b      	str	r3, [r5, #52]	; 0x34
 8020420:	bd38      	pop	{r3, r4, r5, pc}
 8020422:	bf00      	nop
 8020424:	20013934 	.word	0x20013934
 8020428:	20000000 	.word	0x20000000
 802042c:	0801cfc7 	.word	0x0801cfc7
 8020430:	200000f0 	.word	0x200000f0
 8020434:	20013938 	.word	0x20013938
 8020438:	0801cfc5 	.word	0x0801cfc5
 802043c:	200000f4 	.word	0x200000f4

08020440 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8020440:	b538      	push	{r3, r4, r5, lr}
 8020442:	4c15      	ldr	r4, [pc, #84]	; (8020498 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8020444:	7823      	ldrb	r3, [r4, #0]
 8020446:	f3bf 8f5b 	dmb	ish
 802044a:	07da      	lsls	r2, r3, #31
 802044c:	4605      	mov	r5, r0
 802044e:	d40b      	bmi.n	8020468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8020450:	4620      	mov	r0, r4
 8020452:	f00a fdac 	bl	802afae <__cxa_guard_acquire>
 8020456:	b138      	cbz	r0, 8020468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8020458:	4620      	mov	r0, r4
 802045a:	f00a fdb4 	bl	802afc6 <__cxa_guard_release>
 802045e:	4a0f      	ldr	r2, [pc, #60]	; (802049c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8020460:	490f      	ldr	r1, [pc, #60]	; (80204a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8020462:	4810      	ldr	r0, [pc, #64]	; (80204a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8020464:	f00a fd9c 	bl	802afa0 <__aeabi_atexit>
 8020468:	4c0f      	ldr	r4, [pc, #60]	; (80204a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 802046a:	7823      	ldrb	r3, [r4, #0]
 802046c:	f3bf 8f5b 	dmb	ish
 8020470:	07db      	lsls	r3, r3, #31
 8020472:	d40b      	bmi.n	802048c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8020474:	4620      	mov	r0, r4
 8020476:	f00a fd9a 	bl	802afae <__cxa_guard_acquire>
 802047a:	b138      	cbz	r0, 802048c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 802047c:	4620      	mov	r0, r4
 802047e:	f00a fda2 	bl	802afc6 <__cxa_guard_release>
 8020482:	4a06      	ldr	r2, [pc, #24]	; (802049c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8020484:	4909      	ldr	r1, [pc, #36]	; (80204ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8020486:	480a      	ldr	r0, [pc, #40]	; (80204b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020488:	f00a fd8a 	bl	802afa0 <__aeabi_atexit>
 802048c:	4b05      	ldr	r3, [pc, #20]	; (80204a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802048e:	62ab      	str	r3, [r5, #40]	; 0x28
 8020490:	4b07      	ldr	r3, [pc, #28]	; (80204b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020492:	62eb      	str	r3, [r5, #44]	; 0x2c
 8020494:	bd38      	pop	{r3, r4, r5, pc}
 8020496:	bf00      	nop
 8020498:	20013904 	.word	0x20013904
 802049c:	20000000 	.word	0x20000000
 80204a0:	0801cfcb 	.word	0x0801cfcb
 80204a4:	200000c0 	.word	0x200000c0
 80204a8:	20013908 	.word	0x20013908
 80204ac:	0801cfc9 	.word	0x0801cfc9
 80204b0:	200000c4 	.word	0x200000c4

080204b4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80204b4:	b510      	push	{r4, lr}
 80204b6:	4604      	mov	r4, r0
 80204b8:	f7ff ff88 	bl	80203cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 80204bc:	4620      	mov	r0, r4
 80204be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80204c2:	f7ff bfbd 	b.w	8020440 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080204c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80204c8:	b538      	push	{r3, r4, r5, lr}
 80204ca:	4c15      	ldr	r4, [pc, #84]	; (8020520 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80204cc:	7823      	ldrb	r3, [r4, #0]
 80204ce:	f3bf 8f5b 	dmb	ish
 80204d2:	07da      	lsls	r2, r3, #31
 80204d4:	4605      	mov	r5, r0
 80204d6:	d40b      	bmi.n	80204f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80204d8:	4620      	mov	r0, r4
 80204da:	f00a fd68 	bl	802afae <__cxa_guard_acquire>
 80204de:	b138      	cbz	r0, 80204f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80204e0:	4620      	mov	r0, r4
 80204e2:	f00a fd70 	bl	802afc6 <__cxa_guard_release>
 80204e6:	4a0f      	ldr	r2, [pc, #60]	; (8020524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80204e8:	490f      	ldr	r1, [pc, #60]	; (8020528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80204ea:	4810      	ldr	r0, [pc, #64]	; (802052c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80204ec:	f00a fd58 	bl	802afa0 <__aeabi_atexit>
 80204f0:	4c0f      	ldr	r4, [pc, #60]	; (8020530 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80204f2:	7823      	ldrb	r3, [r4, #0]
 80204f4:	f3bf 8f5b 	dmb	ish
 80204f8:	07db      	lsls	r3, r3, #31
 80204fa:	d40b      	bmi.n	8020514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80204fc:	4620      	mov	r0, r4
 80204fe:	f00a fd56 	bl	802afae <__cxa_guard_acquire>
 8020502:	b138      	cbz	r0, 8020514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020504:	4620      	mov	r0, r4
 8020506:	f00a fd5e 	bl	802afc6 <__cxa_guard_release>
 802050a:	4a06      	ldr	r2, [pc, #24]	; (8020524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802050c:	4909      	ldr	r1, [pc, #36]	; (8020534 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802050e:	480a      	ldr	r0, [pc, #40]	; (8020538 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8020510:	f00a fd46 	bl	802afa0 <__aeabi_atexit>
 8020514:	4b05      	ldr	r3, [pc, #20]	; (802052c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8020516:	652b      	str	r3, [r5, #80]	; 0x50
 8020518:	4b07      	ldr	r3, [pc, #28]	; (8020538 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802051a:	656b      	str	r3, [r5, #84]	; 0x54
 802051c:	bd38      	pop	{r3, r4, r5, pc}
 802051e:	bf00      	nop
 8020520:	2001393c 	.word	0x2001393c
 8020524:	20000000 	.word	0x20000000
 8020528:	0801cfb7 	.word	0x0801cfb7
 802052c:	200000f8 	.word	0x200000f8
 8020530:	20013940 	.word	0x20013940
 8020534:	0801cfb5 	.word	0x0801cfb5
 8020538:	200000fc 	.word	0x200000fc

0802053c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802053c:	b538      	push	{r3, r4, r5, lr}
 802053e:	4c15      	ldr	r4, [pc, #84]	; (8020594 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8020540:	7823      	ldrb	r3, [r4, #0]
 8020542:	f3bf 8f5b 	dmb	ish
 8020546:	07da      	lsls	r2, r3, #31
 8020548:	4605      	mov	r5, r0
 802054a:	d40b      	bmi.n	8020564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 802054c:	4620      	mov	r0, r4
 802054e:	f00a fd2e 	bl	802afae <__cxa_guard_acquire>
 8020552:	b138      	cbz	r0, 8020564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8020554:	4620      	mov	r0, r4
 8020556:	f00a fd36 	bl	802afc6 <__cxa_guard_release>
 802055a:	4a0f      	ldr	r2, [pc, #60]	; (8020598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 802055c:	490f      	ldr	r1, [pc, #60]	; (802059c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 802055e:	4810      	ldr	r0, [pc, #64]	; (80205a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8020560:	f00a fd1e 	bl	802afa0 <__aeabi_atexit>
 8020564:	4c0f      	ldr	r4, [pc, #60]	; (80205a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8020566:	7823      	ldrb	r3, [r4, #0]
 8020568:	f3bf 8f5b 	dmb	ish
 802056c:	07db      	lsls	r3, r3, #31
 802056e:	d40b      	bmi.n	8020588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8020570:	4620      	mov	r0, r4
 8020572:	f00a fd1c 	bl	802afae <__cxa_guard_acquire>
 8020576:	b138      	cbz	r0, 8020588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8020578:	4620      	mov	r0, r4
 802057a:	f00a fd24 	bl	802afc6 <__cxa_guard_release>
 802057e:	4a06      	ldr	r2, [pc, #24]	; (8020598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8020580:	4909      	ldr	r1, [pc, #36]	; (80205a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8020582:	480a      	ldr	r0, [pc, #40]	; (80205ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8020584:	f00a fd0c 	bl	802afa0 <__aeabi_atexit>
 8020588:	4b05      	ldr	r3, [pc, #20]	; (80205a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802058a:	64ab      	str	r3, [r5, #72]	; 0x48
 802058c:	4b07      	ldr	r3, [pc, #28]	; (80205ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802058e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8020590:	bd38      	pop	{r3, r4, r5, pc}
 8020592:	bf00      	nop
 8020594:	20013944 	.word	0x20013944
 8020598:	20000000 	.word	0x20000000
 802059c:	0801cfbb 	.word	0x0801cfbb
 80205a0:	20000100 	.word	0x20000100
 80205a4:	20013948 	.word	0x20013948
 80205a8:	0801cfb9 	.word	0x0801cfb9
 80205ac:	20000104 	.word	0x20000104

080205b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80205b0:	b538      	push	{r3, r4, r5, lr}
 80205b2:	4c15      	ldr	r4, [pc, #84]	; (8020608 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80205b4:	7823      	ldrb	r3, [r4, #0]
 80205b6:	f3bf 8f5b 	dmb	ish
 80205ba:	07da      	lsls	r2, r3, #31
 80205bc:	4605      	mov	r5, r0
 80205be:	d40b      	bmi.n	80205d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80205c0:	4620      	mov	r0, r4
 80205c2:	f00a fcf4 	bl	802afae <__cxa_guard_acquire>
 80205c6:	b138      	cbz	r0, 80205d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80205c8:	4620      	mov	r0, r4
 80205ca:	f00a fcfc 	bl	802afc6 <__cxa_guard_release>
 80205ce:	4a0f      	ldr	r2, [pc, #60]	; (802060c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80205d0:	490f      	ldr	r1, [pc, #60]	; (8020610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80205d2:	4810      	ldr	r0, [pc, #64]	; (8020614 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80205d4:	f00a fce4 	bl	802afa0 <__aeabi_atexit>
 80205d8:	4c0f      	ldr	r4, [pc, #60]	; (8020618 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80205da:	7823      	ldrb	r3, [r4, #0]
 80205dc:	f3bf 8f5b 	dmb	ish
 80205e0:	07db      	lsls	r3, r3, #31
 80205e2:	d40b      	bmi.n	80205fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80205e4:	4620      	mov	r0, r4
 80205e6:	f00a fce2 	bl	802afae <__cxa_guard_acquire>
 80205ea:	b138      	cbz	r0, 80205fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80205ec:	4620      	mov	r0, r4
 80205ee:	f00a fcea 	bl	802afc6 <__cxa_guard_release>
 80205f2:	4a06      	ldr	r2, [pc, #24]	; (802060c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80205f4:	4909      	ldr	r1, [pc, #36]	; (802061c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80205f6:	480a      	ldr	r0, [pc, #40]	; (8020620 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80205f8:	f00a fcd2 	bl	802afa0 <__aeabi_atexit>
 80205fc:	4b05      	ldr	r3, [pc, #20]	; (8020614 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80205fe:	642b      	str	r3, [r5, #64]	; 0x40
 8020600:	4b07      	ldr	r3, [pc, #28]	; (8020620 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020602:	646b      	str	r3, [r5, #68]	; 0x44
 8020604:	bd38      	pop	{r3, r4, r5, pc}
 8020606:	bf00      	nop
 8020608:	2001390c 	.word	0x2001390c
 802060c:	20000000 	.word	0x20000000
 8020610:	0801cfbf 	.word	0x0801cfbf
 8020614:	200000c8 	.word	0x200000c8
 8020618:	20013910 	.word	0x20013910
 802061c:	0801cfbd 	.word	0x0801cfbd
 8020620:	200000cc 	.word	0x200000cc

08020624 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8020624:	b538      	push	{r3, r4, r5, lr}
 8020626:	4c15      	ldr	r4, [pc, #84]	; (802067c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8020628:	7823      	ldrb	r3, [r4, #0]
 802062a:	f3bf 8f5b 	dmb	ish
 802062e:	07da      	lsls	r2, r3, #31
 8020630:	4605      	mov	r5, r0
 8020632:	d40b      	bmi.n	802064c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8020634:	4620      	mov	r0, r4
 8020636:	f00a fcba 	bl	802afae <__cxa_guard_acquire>
 802063a:	b138      	cbz	r0, 802064c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802063c:	4620      	mov	r0, r4
 802063e:	f00a fcc2 	bl	802afc6 <__cxa_guard_release>
 8020642:	4a0f      	ldr	r2, [pc, #60]	; (8020680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8020644:	490f      	ldr	r1, [pc, #60]	; (8020684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8020646:	4810      	ldr	r0, [pc, #64]	; (8020688 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8020648:	f00a fcaa 	bl	802afa0 <__aeabi_atexit>
 802064c:	4c0f      	ldr	r4, [pc, #60]	; (802068c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 802064e:	7823      	ldrb	r3, [r4, #0]
 8020650:	f3bf 8f5b 	dmb	ish
 8020654:	07db      	lsls	r3, r3, #31
 8020656:	d40b      	bmi.n	8020670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8020658:	4620      	mov	r0, r4
 802065a:	f00a fca8 	bl	802afae <__cxa_guard_acquire>
 802065e:	b138      	cbz	r0, 8020670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8020660:	4620      	mov	r0, r4
 8020662:	f00a fcb0 	bl	802afc6 <__cxa_guard_release>
 8020666:	4a06      	ldr	r2, [pc, #24]	; (8020680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8020668:	4909      	ldr	r1, [pc, #36]	; (8020690 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 802066a:	480a      	ldr	r0, [pc, #40]	; (8020694 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 802066c:	f00a fc98 	bl	802afa0 <__aeabi_atexit>
 8020670:	4b05      	ldr	r3, [pc, #20]	; (8020688 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8020672:	63ab      	str	r3, [r5, #56]	; 0x38
 8020674:	4b07      	ldr	r3, [pc, #28]	; (8020694 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8020676:	63eb      	str	r3, [r5, #60]	; 0x3c
 8020678:	bd38      	pop	{r3, r4, r5, pc}
 802067a:	bf00      	nop
 802067c:	2001392c 	.word	0x2001392c
 8020680:	20000000 	.word	0x20000000
 8020684:	0801cfc3 	.word	0x0801cfc3
 8020688:	200000e8 	.word	0x200000e8
 802068c:	20013930 	.word	0x20013930
 8020690:	0801cfc1 	.word	0x0801cfc1
 8020694:	200000ec 	.word	0x200000ec

08020698 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8020698:	b510      	push	{r4, lr}
 802069a:	4604      	mov	r4, r0
 802069c:	f7ff ff14 	bl	80204c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80206a0:	4620      	mov	r0, r4
 80206a2:	f7ff ff85 	bl	80205b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80206a6:	4620      	mov	r0, r4
 80206a8:	f7ff ff48 	bl	802053c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80206ac:	4620      	mov	r0, r4
 80206ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80206b2:	f7ff bfb7 	b.w	8020624 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080206b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80206b8:	b538      	push	{r3, r4, r5, lr}
 80206ba:	4c15      	ldr	r4, [pc, #84]	; (8020710 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80206bc:	7823      	ldrb	r3, [r4, #0]
 80206be:	f3bf 8f5b 	dmb	ish
 80206c2:	07da      	lsls	r2, r3, #31
 80206c4:	4605      	mov	r5, r0
 80206c6:	d40b      	bmi.n	80206e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80206c8:	4620      	mov	r0, r4
 80206ca:	f00a fc70 	bl	802afae <__cxa_guard_acquire>
 80206ce:	b138      	cbz	r0, 80206e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80206d0:	4620      	mov	r0, r4
 80206d2:	f00a fc78 	bl	802afc6 <__cxa_guard_release>
 80206d6:	4a0f      	ldr	r2, [pc, #60]	; (8020714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80206d8:	490f      	ldr	r1, [pc, #60]	; (8020718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80206da:	4810      	ldr	r0, [pc, #64]	; (802071c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80206dc:	f00a fc60 	bl	802afa0 <__aeabi_atexit>
 80206e0:	4c0f      	ldr	r4, [pc, #60]	; (8020720 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80206e2:	7823      	ldrb	r3, [r4, #0]
 80206e4:	f3bf 8f5b 	dmb	ish
 80206e8:	07db      	lsls	r3, r3, #31
 80206ea:	d40b      	bmi.n	8020704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80206ec:	4620      	mov	r0, r4
 80206ee:	f00a fc5e 	bl	802afae <__cxa_guard_acquire>
 80206f2:	b138      	cbz	r0, 8020704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80206f4:	4620      	mov	r0, r4
 80206f6:	f00a fc66 	bl	802afc6 <__cxa_guard_release>
 80206fa:	4a06      	ldr	r2, [pc, #24]	; (8020714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80206fc:	4909      	ldr	r1, [pc, #36]	; (8020724 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80206fe:	480a      	ldr	r0, [pc, #40]	; (8020728 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020700:	f00a fc4e 	bl	802afa0 <__aeabi_atexit>
 8020704:	4b05      	ldr	r3, [pc, #20]	; (802071c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020706:	662b      	str	r3, [r5, #96]	; 0x60
 8020708:	4b07      	ldr	r3, [pc, #28]	; (8020728 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802070a:	666b      	str	r3, [r5, #100]	; 0x64
 802070c:	bd38      	pop	{r3, r4, r5, pc}
 802070e:	bf00      	nop
 8020710:	20013914 	.word	0x20013914
 8020714:	20000000 	.word	0x20000000
 8020718:	0801cfaf 	.word	0x0801cfaf
 802071c:	200000d0 	.word	0x200000d0
 8020720:	20013918 	.word	0x20013918
 8020724:	0801cfad 	.word	0x0801cfad
 8020728:	200000d4 	.word	0x200000d4

0802072c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802072c:	b538      	push	{r3, r4, r5, lr}
 802072e:	4c15      	ldr	r4, [pc, #84]	; (8020784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8020730:	7823      	ldrb	r3, [r4, #0]
 8020732:	f3bf 8f5b 	dmb	ish
 8020736:	07da      	lsls	r2, r3, #31
 8020738:	4605      	mov	r5, r0
 802073a:	d40b      	bmi.n	8020754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802073c:	4620      	mov	r0, r4
 802073e:	f00a fc36 	bl	802afae <__cxa_guard_acquire>
 8020742:	b138      	cbz	r0, 8020754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8020744:	4620      	mov	r0, r4
 8020746:	f00a fc3e 	bl	802afc6 <__cxa_guard_release>
 802074a:	4a0f      	ldr	r2, [pc, #60]	; (8020788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 802074c:	490f      	ldr	r1, [pc, #60]	; (802078c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 802074e:	4810      	ldr	r0, [pc, #64]	; (8020790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8020750:	f00a fc26 	bl	802afa0 <__aeabi_atexit>
 8020754:	4c0f      	ldr	r4, [pc, #60]	; (8020794 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8020756:	7823      	ldrb	r3, [r4, #0]
 8020758:	f3bf 8f5b 	dmb	ish
 802075c:	07db      	lsls	r3, r3, #31
 802075e:	d40b      	bmi.n	8020778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8020760:	4620      	mov	r0, r4
 8020762:	f00a fc24 	bl	802afae <__cxa_guard_acquire>
 8020766:	b138      	cbz	r0, 8020778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8020768:	4620      	mov	r0, r4
 802076a:	f00a fc2c 	bl	802afc6 <__cxa_guard_release>
 802076e:	4a06      	ldr	r2, [pc, #24]	; (8020788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020770:	4909      	ldr	r1, [pc, #36]	; (8020798 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8020772:	480a      	ldr	r0, [pc, #40]	; (802079c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8020774:	f00a fc14 	bl	802afa0 <__aeabi_atexit>
 8020778:	4b05      	ldr	r3, [pc, #20]	; (8020790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802077a:	65ab      	str	r3, [r5, #88]	; 0x58
 802077c:	4b07      	ldr	r3, [pc, #28]	; (802079c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802077e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8020780:	bd38      	pop	{r3, r4, r5, pc}
 8020782:	bf00      	nop
 8020784:	200138ec 	.word	0x200138ec
 8020788:	20000000 	.word	0x20000000
 802078c:	0801cfb3 	.word	0x0801cfb3
 8020790:	200000a8 	.word	0x200000a8
 8020794:	200138f0 	.word	0x200138f0
 8020798:	0801cfb1 	.word	0x0801cfb1
 802079c:	200000ac 	.word	0x200000ac

080207a0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80207a0:	b510      	push	{r4, lr}
 80207a2:	4604      	mov	r4, r0
 80207a4:	f7ff ff88 	bl	80206b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80207a8:	4620      	mov	r0, r4
 80207aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80207ae:	f7ff bfbd 	b.w	802072c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080207b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80207b4:	b538      	push	{r3, r4, r5, lr}
 80207b6:	4c15      	ldr	r4, [pc, #84]	; (802080c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80207b8:	7823      	ldrb	r3, [r4, #0]
 80207ba:	f3bf 8f5b 	dmb	ish
 80207be:	07da      	lsls	r2, r3, #31
 80207c0:	4605      	mov	r5, r0
 80207c2:	d40b      	bmi.n	80207dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80207c4:	4620      	mov	r0, r4
 80207c6:	f00a fbf2 	bl	802afae <__cxa_guard_acquire>
 80207ca:	b138      	cbz	r0, 80207dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80207cc:	4620      	mov	r0, r4
 80207ce:	f00a fbfa 	bl	802afc6 <__cxa_guard_release>
 80207d2:	4a0f      	ldr	r2, [pc, #60]	; (8020810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80207d4:	490f      	ldr	r1, [pc, #60]	; (8020814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80207d6:	4810      	ldr	r0, [pc, #64]	; (8020818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80207d8:	f00a fbe2 	bl	802afa0 <__aeabi_atexit>
 80207dc:	4c0f      	ldr	r4, [pc, #60]	; (802081c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80207de:	7823      	ldrb	r3, [r4, #0]
 80207e0:	f3bf 8f5b 	dmb	ish
 80207e4:	07db      	lsls	r3, r3, #31
 80207e6:	d40b      	bmi.n	8020800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80207e8:	4620      	mov	r0, r4
 80207ea:	f00a fbe0 	bl	802afae <__cxa_guard_acquire>
 80207ee:	b138      	cbz	r0, 8020800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80207f0:	4620      	mov	r0, r4
 80207f2:	f00a fbe8 	bl	802afc6 <__cxa_guard_release>
 80207f6:	4a06      	ldr	r2, [pc, #24]	; (8020810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80207f8:	4909      	ldr	r1, [pc, #36]	; (8020820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80207fa:	480a      	ldr	r0, [pc, #40]	; (8020824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80207fc:	f00a fbd0 	bl	802afa0 <__aeabi_atexit>
 8020800:	4b05      	ldr	r3, [pc, #20]	; (8020818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020802:	672b      	str	r3, [r5, #112]	; 0x70
 8020804:	4b07      	ldr	r3, [pc, #28]	; (8020824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020806:	676b      	str	r3, [r5, #116]	; 0x74
 8020808:	bd38      	pop	{r3, r4, r5, pc}
 802080a:	bf00      	nop
 802080c:	200138e4 	.word	0x200138e4
 8020810:	20000000 	.word	0x20000000
 8020814:	0801cfa7 	.word	0x0801cfa7
 8020818:	200000a0 	.word	0x200000a0
 802081c:	200138e8 	.word	0x200138e8
 8020820:	0801cfa5 	.word	0x0801cfa5
 8020824:	200000a4 	.word	0x200000a4

08020828 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8020828:	b538      	push	{r3, r4, r5, lr}
 802082a:	4c15      	ldr	r4, [pc, #84]	; (8020880 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802082c:	7823      	ldrb	r3, [r4, #0]
 802082e:	f3bf 8f5b 	dmb	ish
 8020832:	07da      	lsls	r2, r3, #31
 8020834:	4605      	mov	r5, r0
 8020836:	d40b      	bmi.n	8020850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020838:	4620      	mov	r0, r4
 802083a:	f00a fbb8 	bl	802afae <__cxa_guard_acquire>
 802083e:	b138      	cbz	r0, 8020850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8020840:	4620      	mov	r0, r4
 8020842:	f00a fbc0 	bl	802afc6 <__cxa_guard_release>
 8020846:	4a0f      	ldr	r2, [pc, #60]	; (8020884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8020848:	490f      	ldr	r1, [pc, #60]	; (8020888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 802084a:	4810      	ldr	r0, [pc, #64]	; (802088c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 802084c:	f00a fba8 	bl	802afa0 <__aeabi_atexit>
 8020850:	4c0f      	ldr	r4, [pc, #60]	; (8020890 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8020852:	7823      	ldrb	r3, [r4, #0]
 8020854:	f3bf 8f5b 	dmb	ish
 8020858:	07db      	lsls	r3, r3, #31
 802085a:	d40b      	bmi.n	8020874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 802085c:	4620      	mov	r0, r4
 802085e:	f00a fba6 	bl	802afae <__cxa_guard_acquire>
 8020862:	b138      	cbz	r0, 8020874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8020864:	4620      	mov	r0, r4
 8020866:	f00a fbae 	bl	802afc6 <__cxa_guard_release>
 802086a:	4a06      	ldr	r2, [pc, #24]	; (8020884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 802086c:	4909      	ldr	r1, [pc, #36]	; (8020894 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 802086e:	480a      	ldr	r0, [pc, #40]	; (8020898 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020870:	f00a fb96 	bl	802afa0 <__aeabi_atexit>
 8020874:	4b05      	ldr	r3, [pc, #20]	; (802088c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020876:	66ab      	str	r3, [r5, #104]	; 0x68
 8020878:	4b07      	ldr	r3, [pc, #28]	; (8020898 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802087a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802087c:	bd38      	pop	{r3, r4, r5, pc}
 802087e:	bf00      	nop
 8020880:	200138dc 	.word	0x200138dc
 8020884:	20000000 	.word	0x20000000
 8020888:	0801cfab 	.word	0x0801cfab
 802088c:	20000098 	.word	0x20000098
 8020890:	200138e0 	.word	0x200138e0
 8020894:	0801cfa9 	.word	0x0801cfa9
 8020898:	2000009c 	.word	0x2000009c

0802089c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802089c:	b510      	push	{r4, lr}
 802089e:	4604      	mov	r4, r0
 80208a0:	f7ff ff88 	bl	80207b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80208a4:	4620      	mov	r0, r4
 80208a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80208aa:	f7ff bfbd 	b.w	8020828 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080208ae <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80208ae:	b510      	push	{r4, lr}
 80208b0:	4604      	mov	r4, r0
 80208b2:	f7ff fff3 	bl	802089c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80208b6:	4620      	mov	r0, r4
 80208b8:	f7ff ff72 	bl	80207a0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80208bc:	4620      	mov	r0, r4
 80208be:	f7ff fdf9 	bl	80204b4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80208c2:	4620      	mov	r0, r4
 80208c4:	f7ff fcfa 	bl	80202bc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80208c8:	4620      	mov	r0, r4
 80208ca:	f7ff fd75 	bl	80203b8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80208ce:	4620      	mov	r0, r4
 80208d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80208d4:	f7ff bee0 	b.w	8020698 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080208d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 80208d8:	b538      	push	{r3, r4, r5, lr}
 80208da:	4c0b      	ldr	r4, [pc, #44]	; (8020908 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 80208dc:	7823      	ldrb	r3, [r4, #0]
 80208de:	f3bf 8f5b 	dmb	ish
 80208e2:	07db      	lsls	r3, r3, #31
 80208e4:	4605      	mov	r5, r0
 80208e6:	d40b      	bmi.n	8020900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80208e8:	4620      	mov	r0, r4
 80208ea:	f00a fb60 	bl	802afae <__cxa_guard_acquire>
 80208ee:	b138      	cbz	r0, 8020900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 80208f0:	4620      	mov	r0, r4
 80208f2:	f00a fb68 	bl	802afc6 <__cxa_guard_release>
 80208f6:	4a05      	ldr	r2, [pc, #20]	; (802090c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 80208f8:	4905      	ldr	r1, [pc, #20]	; (8020910 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 80208fa:	4806      	ldr	r0, [pc, #24]	; (8020914 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 80208fc:	f00a fb50 	bl	802afa0 <__aeabi_atexit>
 8020900:	4b04      	ldr	r3, [pc, #16]	; (8020914 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020902:	67ab      	str	r3, [r5, #120]	; 0x78
 8020904:	bd38      	pop	{r3, r4, r5, pc}
 8020906:	bf00      	nop
 8020908:	200138d0 	.word	0x200138d0
 802090c:	20000000 	.word	0x20000000
 8020910:	0801cfa3 	.word	0x0801cfa3
 8020914:	20000090 	.word	0x20000090

08020918 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8020918:	b538      	push	{r3, r4, r5, lr}
 802091a:	4c0b      	ldr	r4, [pc, #44]	; (8020948 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802091c:	7823      	ldrb	r3, [r4, #0]
 802091e:	f3bf 8f5b 	dmb	ish
 8020922:	07db      	lsls	r3, r3, #31
 8020924:	4605      	mov	r5, r0
 8020926:	d40b      	bmi.n	8020940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020928:	4620      	mov	r0, r4
 802092a:	f00a fb40 	bl	802afae <__cxa_guard_acquire>
 802092e:	b138      	cbz	r0, 8020940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8020930:	4620      	mov	r0, r4
 8020932:	f00a fb48 	bl	802afc6 <__cxa_guard_release>
 8020936:	4a05      	ldr	r2, [pc, #20]	; (802094c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8020938:	4905      	ldr	r1, [pc, #20]	; (8020950 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 802093a:	4806      	ldr	r0, [pc, #24]	; (8020954 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 802093c:	f00a fb30 	bl	802afa0 <__aeabi_atexit>
 8020940:	4b04      	ldr	r3, [pc, #16]	; (8020954 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8020942:	67eb      	str	r3, [r5, #124]	; 0x7c
 8020944:	bd38      	pop	{r3, r4, r5, pc}
 8020946:	bf00      	nop
 8020948:	200138d4 	.word	0x200138d4
 802094c:	20000000 	.word	0x20000000
 8020950:	0801cfa1 	.word	0x0801cfa1
 8020954:	20000094 	.word	0x20000094

08020958 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 8020958:	b570      	push	{r4, r5, r6, lr}
 802095a:	4d0d      	ldr	r5, [pc, #52]	; (8020990 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 802095c:	4c0d      	ldr	r4, [pc, #52]	; (8020994 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 802095e:	782b      	ldrb	r3, [r5, #0]
 8020960:	f3bf 8f5b 	dmb	ish
 8020964:	f013 0f01 	tst.w	r3, #1
 8020968:	4606      	mov	r6, r0
 802096a:	d10d      	bne.n	8020988 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 802096c:	4628      	mov	r0, r5
 802096e:	f00a fb1e 	bl	802afae <__cxa_guard_acquire>
 8020972:	b148      	cbz	r0, 8020988 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020974:	4b08      	ldr	r3, [pc, #32]	; (8020998 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8020976:	6023      	str	r3, [r4, #0]
 8020978:	4628      	mov	r0, r5
 802097a:	f00a fb24 	bl	802afc6 <__cxa_guard_release>
 802097e:	4a07      	ldr	r2, [pc, #28]	; (802099c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020980:	4907      	ldr	r1, [pc, #28]	; (80209a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020982:	4620      	mov	r0, r4
 8020984:	f00a fb0c 	bl	802afa0 <__aeabi_atexit>
 8020988:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802098c:	bd70      	pop	{r4, r5, r6, pc}
 802098e:	bf00      	nop
 8020990:	200138d8 	.word	0x200138d8
 8020994:	2001394c 	.word	0x2001394c
 8020998:	080301b4 	.word	0x080301b4
 802099c:	20000000 	.word	0x20000000
 80209a0:	0801cf9f 	.word	0x0801cf9f

080209a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80209a4:	b510      	push	{r4, lr}
 80209a6:	4604      	mov	r4, r0
 80209a8:	f7ff ff96 	bl	80208d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80209ac:	4620      	mov	r0, r4
 80209ae:	f7ff ffb3 	bl	8020918 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80209b2:	4620      	mov	r0, r4
 80209b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80209b8:	f7ff bfce 	b.w	8020958 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

080209bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80209bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209c0:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80209c4:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80209c8:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80209cc:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80209d0:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80209d4:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80209d8:	8808      	ldrh	r0, [r1, #0]
 80209da:	fb05 4c0e 	mla	ip, r5, lr, r4
 80209de:	2d00      	cmp	r5, #0
 80209e0:	eb02 0a0c 	add.w	sl, r2, ip
 80209e4:	f2c0 80b0 	blt.w	8020b48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80209e8:	45ab      	cmp	fp, r5
 80209ea:	f340 80ad 	ble.w	8020b48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80209ee:	2c00      	cmp	r4, #0
 80209f0:	f2c0 80a8 	blt.w	8020b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80209f4:	45a6      	cmp	lr, r4
 80209f6:	f340 80a5 	ble.w	8020b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80209fa:	f812 200c 	ldrb.w	r2, [r2, ip]
 80209fe:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020a02:	1c62      	adds	r2, r4, #1
 8020a04:	f100 80a3 	bmi.w	8020b4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020a08:	4596      	cmp	lr, r2
 8020a0a:	f340 80a0 	ble.w	8020b4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020a0e:	f1b9 0f00 	cmp.w	r9, #0
 8020a12:	f000 809c 	beq.w	8020b4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020a16:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020a1a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020a1e:	3501      	adds	r5, #1
 8020a20:	f100 8099 	bmi.w	8020b56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020a24:	45ab      	cmp	fp, r5
 8020a26:	f340 8096 	ble.w	8020b56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020a2a:	2f00      	cmp	r7, #0
 8020a2c:	f000 8093 	beq.w	8020b56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8020a30:	2c00      	cmp	r4, #0
 8020a32:	f2c0 808e 	blt.w	8020b52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020a36:	45a6      	cmp	lr, r4
 8020a38:	f340 808b 	ble.w	8020b52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8020a3c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8020a40:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8020a44:	3401      	adds	r4, #1
 8020a46:	f100 8089 	bmi.w	8020b5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020a4a:	45a6      	cmp	lr, r4
 8020a4c:	f340 8086 	ble.w	8020b5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020a50:	f1b9 0f00 	cmp.w	r9, #0
 8020a54:	f000 8082 	beq.w	8020b5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8020a58:	44d6      	add	lr, sl
 8020a5a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020a5e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8020a62:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020a66:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020a6a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8020a6e:	fb19 fe07 	smulbb	lr, r9, r7
 8020a72:	ea44 0808 	orr.w	r8, r4, r8
 8020a76:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8020a7a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8020a7e:	f1c7 0210 	rsb	r2, r7, #16
 8020a82:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020a86:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020a8a:	ea44 0c0c 	orr.w	ip, r4, ip
 8020a8e:	eba2 0209 	sub.w	r2, r2, r9
 8020a92:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020a96:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8020a9a:	fb04 f40c 	mul.w	r4, r4, ip
 8020a9e:	fb02 4808 	mla	r8, r2, r8, r4
 8020aa2:	041a      	lsls	r2, r3, #16
 8020aa4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020aa8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020aac:	4313      	orrs	r3, r2
 8020aae:	042a      	lsls	r2, r5, #16
 8020ab0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020ab4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020ab8:	fb0e 8303 	mla	r3, lr, r3, r8
 8020abc:	432a      	orrs	r2, r5
 8020abe:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020ac2:	fb07 3202 	mla	r2, r7, r2, r3
 8020ac6:	0d53      	lsrs	r3, r2, #21
 8020ac8:	0952      	lsrs	r2, r2, #5
 8020aca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ace:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020ad2:	431a      	orrs	r2, r3
 8020ad4:	b293      	uxth	r3, r2
 8020ad6:	b2b4      	uxth	r4, r6
 8020ad8:	1202      	asrs	r2, r0, #8
 8020ada:	43f6      	mvns	r6, r6
 8020adc:	b2f6      	uxtb	r6, r6
 8020ade:	121d      	asrs	r5, r3, #8
 8020ae0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020ae4:	fb12 f206 	smulbb	r2, r2, r6
 8020ae8:	10c7      	asrs	r7, r0, #3
 8020aea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020aee:	00c0      	lsls	r0, r0, #3
 8020af0:	fb05 2504 	mla	r5, r5, r4, r2
 8020af4:	b2c0      	uxtb	r0, r0
 8020af6:	10da      	asrs	r2, r3, #3
 8020af8:	00db      	lsls	r3, r3, #3
 8020afa:	b2db      	uxtb	r3, r3
 8020afc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020b00:	fb10 f006 	smulbb	r0, r0, r6
 8020b04:	b2ad      	uxth	r5, r5
 8020b06:	fb03 0004 	mla	r0, r3, r4, r0
 8020b0a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020b0e:	fb17 f706 	smulbb	r7, r7, r6
 8020b12:	b280      	uxth	r0, r0
 8020b14:	1c6b      	adds	r3, r5, #1
 8020b16:	fb02 7204 	mla	r2, r2, r4, r7
 8020b1a:	b292      	uxth	r2, r2
 8020b1c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020b20:	1c43      	adds	r3, r0, #1
 8020b22:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020b26:	1c50      	adds	r0, r2, #1
 8020b28:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8020b2c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020b30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020b34:	0952      	lsrs	r2, r2, #5
 8020b36:	432b      	orrs	r3, r5
 8020b38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020b3c:	4313      	orrs	r3, r2
 8020b3e:	800b      	strh	r3, [r1, #0]
 8020b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b44:	4680      	mov	r8, r0
 8020b46:	e75c      	b.n	8020a02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8020b48:	4684      	mov	ip, r0
 8020b4a:	4680      	mov	r8, r0
 8020b4c:	e767      	b.n	8020a1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020b4e:	4684      	mov	ip, r0
 8020b50:	e765      	b.n	8020a1e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8020b52:	4605      	mov	r5, r0
 8020b54:	e776      	b.n	8020a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8020b56:	4603      	mov	r3, r0
 8020b58:	4605      	mov	r5, r0
 8020b5a:	e782      	b.n	8020a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8020b5c:	4603      	mov	r3, r0
 8020b5e:	e780      	b.n	8020a62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08020b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b64:	b099      	sub	sp, #100	; 0x64
 8020b66:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8020b6a:	9215      	str	r2, [sp, #84]	; 0x54
 8020b6c:	9309      	str	r3, [sp, #36]	; 0x24
 8020b6e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020b70:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8020b74:	930d      	str	r3, [sp, #52]	; 0x34
 8020b76:	910c      	str	r1, [sp, #48]	; 0x30
 8020b78:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8020b7c:	9016      	str	r0, [sp, #88]	; 0x58
 8020b7e:	6850      	ldr	r0, [r2, #4]
 8020b80:	6812      	ldr	r2, [r2, #0]
 8020b82:	fb00 1303 	mla	r3, r0, r3, r1
 8020b86:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020b8a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020b8c:	681b      	ldr	r3, [r3, #0]
 8020b8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8020b90:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020b92:	685e      	ldr	r6, [r3, #4]
 8020b94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020b96:	43db      	mvns	r3, r3
 8020b98:	b2db      	uxtb	r3, r3
 8020b9a:	3604      	adds	r6, #4
 8020b9c:	930a      	str	r3, [sp, #40]	; 0x28
 8020b9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020ba0:	2b00      	cmp	r3, #0
 8020ba2:	dc03      	bgt.n	8020bac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020ba4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020ba6:	2b00      	cmp	r3, #0
 8020ba8:	f340 8225 	ble.w	8020ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020bac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020bae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020bb2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020bb6:	1e48      	subs	r0, r1, #1
 8020bb8:	1e57      	subs	r7, r2, #1
 8020bba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bbc:	2b00      	cmp	r3, #0
 8020bbe:	f340 80e3 	ble.w	8020d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020bc2:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020bc6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020bca:	d406      	bmi.n	8020bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020bcc:	4584      	cmp	ip, r0
 8020bce:	da04      	bge.n	8020bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020bd0:	2b00      	cmp	r3, #0
 8020bd2:	db02      	blt.n	8020bda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020bd4:	42bb      	cmp	r3, r7
 8020bd6:	f2c0 80d8 	blt.w	8020d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020bda:	f11c 0c01 	adds.w	ip, ip, #1
 8020bde:	f100 80c9 	bmi.w	8020d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020be2:	4561      	cmp	r1, ip
 8020be4:	f2c0 80c6 	blt.w	8020d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020be8:	3301      	adds	r3, #1
 8020bea:	f100 80c3 	bmi.w	8020d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020bee:	429a      	cmp	r2, r3
 8020bf0:	f2c0 80c0 	blt.w	8020d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020bf4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020bf8:	4647      	mov	r7, r8
 8020bfa:	f1bb 0f00 	cmp.w	fp, #0
 8020bfe:	f340 80e3 	ble.w	8020dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020c02:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020c04:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020c06:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020c0a:	689b      	ldr	r3, [r3, #8]
 8020c0c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020c10:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020c14:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020c18:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020c1c:	f100 8121 	bmi.w	8020e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020c20:	f103 39ff 	add.w	r9, r3, #4294967295
 8020c24:	454a      	cmp	r2, r9
 8020c26:	f280 811c 	bge.w	8020e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020c2a:	f1bc 0f00 	cmp.w	ip, #0
 8020c2e:	f2c0 8118 	blt.w	8020e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020c32:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020c36:	45cc      	cmp	ip, r9
 8020c38:	f280 8113 	bge.w	8020e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020c3c:	b21b      	sxth	r3, r3
 8020c3e:	fb0c 2203 	mla	r2, ip, r3, r2
 8020c42:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c44:	eb04 0902 	add.w	r9, r4, r2
 8020c48:	5ca2      	ldrb	r2, [r4, r2]
 8020c4a:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020c4e:	2800      	cmp	r0, #0
 8020c50:	f000 80fe 	beq.w	8020e50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020c54:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020c58:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020c5c:	9211      	str	r2, [sp, #68]	; 0x44
 8020c5e:	b151      	cbz	r1, 8020c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020c60:	eb09 0203 	add.w	r2, r9, r3
 8020c64:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020c68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020c6c:	930f      	str	r3, [sp, #60]	; 0x3c
 8020c6e:	7853      	ldrb	r3, [r2, #1]
 8020c70:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020c74:	9312      	str	r3, [sp, #72]	; 0x48
 8020c76:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020c78:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c7a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020c7e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020c82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020c86:	ea4c 0c03 	orr.w	ip, ip, r3
 8020c8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020c8c:	041b      	lsls	r3, r3, #16
 8020c8e:	fb10 f201 	smulbb	r2, r0, r1
 8020c92:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020c96:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020c9a:	10d2      	asrs	r2, r2, #3
 8020c9c:	4323      	orrs	r3, r4
 8020c9e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020ca2:	4353      	muls	r3, r2
 8020ca4:	fb09 330c 	mla	r3, r9, ip, r3
 8020ca8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020cac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020cb0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020cb4:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020cb8:	f1c1 0c10 	rsb	ip, r1, #16
 8020cbc:	ebac 0c00 	sub.w	ip, ip, r0
 8020cc0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020cc4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020cc8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020cca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020ccc:	0418      	lsls	r0, r3, #16
 8020cce:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020cd2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020cd6:	4318      	orrs	r0, r3
 8020cd8:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020cdc:	fb02 c200 	mla	r2, r2, r0, ip
 8020ce0:	0d53      	lsrs	r3, r2, #21
 8020ce2:	0952      	lsrs	r2, r2, #5
 8020ce4:	8838      	ldrh	r0, [r7, #0]
 8020ce6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020cea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020cee:	431a      	orrs	r2, r3
 8020cf0:	b292      	uxth	r2, r2
 8020cf2:	1201      	asrs	r1, r0, #8
 8020cf4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020cf8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020cfc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020d00:	fb11 f104 	smulbb	r1, r1, r4
 8020d04:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020d08:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020d0c:	00c0      	lsls	r0, r0, #3
 8020d0e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020d12:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020d16:	10d1      	asrs	r1, r2, #3
 8020d18:	b2c0      	uxtb	r0, r0
 8020d1a:	00d2      	lsls	r2, r2, #3
 8020d1c:	b2d2      	uxtb	r2, r2
 8020d1e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020d22:	fb1e fe04 	smulbb	lr, lr, r4
 8020d26:	fb10 f004 	smulbb	r0, r0, r4
 8020d2a:	fa1f fc8c 	uxth.w	ip, ip
 8020d2e:	fb01 e103 	mla	r1, r1, r3, lr
 8020d32:	fb02 0303 	mla	r3, r2, r3, r0
 8020d36:	b29a      	uxth	r2, r3
 8020d38:	f10c 0301 	add.w	r3, ip, #1
 8020d3c:	b289      	uxth	r1, r1
 8020d3e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020d42:	1c53      	adds	r3, r2, #1
 8020d44:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d48:	1c4a      	adds	r2, r1, #1
 8020d4a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020d4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020d52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020d56:	0949      	lsrs	r1, r1, #5
 8020d58:	ea43 030c 	orr.w	r3, r3, ip
 8020d5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020d60:	430b      	orrs	r3, r1
 8020d62:	803b      	strh	r3, [r7, #0]
 8020d64:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020d66:	449a      	add	sl, r3
 8020d68:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020d6a:	3702      	adds	r7, #2
 8020d6c:	441d      	add	r5, r3
 8020d6e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020d72:	e742      	b.n	8020bfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020d74:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020d76:	449a      	add	sl, r3
 8020d78:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020d7a:	441d      	add	r5, r3
 8020d7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d7e:	3b01      	subs	r3, #1
 8020d80:	9309      	str	r3, [sp, #36]	; 0x24
 8020d82:	f108 0802 	add.w	r8, r8, #2
 8020d86:	e718      	b.n	8020bba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020d88:	d023      	beq.n	8020dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020d8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d8c:	9825      	ldr	r0, [sp, #148]	; 0x94
 8020d8e:	3b01      	subs	r3, #1
 8020d90:	fb00 a003 	mla	r0, r0, r3, sl
 8020d94:	1400      	asrs	r0, r0, #16
 8020d96:	f53f af2d 	bmi.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020d9a:	3901      	subs	r1, #1
 8020d9c:	4288      	cmp	r0, r1
 8020d9e:	f6bf af29 	bge.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020da2:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020da4:	fb01 5303 	mla	r3, r1, r3, r5
 8020da8:	141b      	asrs	r3, r3, #16
 8020daa:	f53f af23 	bmi.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020dae:	3a01      	subs	r2, #1
 8020db0:	4293      	cmp	r3, r2
 8020db2:	f6bf af1f 	bge.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020db6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020dba:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8020dbe:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020dc2:	f1be 0f00 	cmp.w	lr, #0
 8020dc6:	dc6c      	bgt.n	8020ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020dca:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020dce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020dd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020dd4:	2b00      	cmp	r3, #0
 8020dd6:	f340 810e 	ble.w	8020ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020dda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020dde:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020de2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020de6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020de8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020dec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020df0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020df4:	eef0 6a62 	vmov.f32	s13, s5
 8020df8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020dfc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e04:	ee16 aa90 	vmov	sl, s13
 8020e08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e0c:	eef0 6a43 	vmov.f32	s13, s6
 8020e10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e14:	ee12 2a90 	vmov	r2, s5
 8020e18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e20:	ee13 2a10 	vmov	r2, s6
 8020e24:	9325      	str	r3, [sp, #148]	; 0x94
 8020e26:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020e28:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e2c:	9326      	str	r3, [sp, #152]	; 0x98
 8020e2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020e30:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020e32:	3b01      	subs	r3, #1
 8020e34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e38:	930c      	str	r3, [sp, #48]	; 0x30
 8020e3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020e3c:	bf08      	it	eq
 8020e3e:	4613      	moveq	r3, r2
 8020e40:	ee16 5a90 	vmov	r5, s13
 8020e44:	9309      	str	r3, [sp, #36]	; 0x24
 8020e46:	eeb0 3a67 	vmov.f32	s6, s15
 8020e4a:	eef0 2a47 	vmov.f32	s5, s14
 8020e4e:	e6a6      	b.n	8020b9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020e50:	2900      	cmp	r1, #0
 8020e52:	f43f af10 	beq.w	8020c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020e56:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020e5a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020e5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8020e60:	e709      	b.n	8020c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020e62:	f112 0901 	adds.w	r9, r2, #1
 8020e66:	f53f af7d 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020e6a:	454b      	cmp	r3, r9
 8020e6c:	f6ff af7a 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020e70:	f11c 0901 	adds.w	r9, ip, #1
 8020e74:	f53f af76 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020e78:	45ce      	cmp	lr, r9
 8020e7a:	f6ff af73 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020e7e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020e80:	9202      	str	r2, [sp, #8]
 8020e82:	b21b      	sxth	r3, r3
 8020e84:	fa0f f28e 	sxth.w	r2, lr
 8020e88:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020e8c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020e90:	9201      	str	r2, [sp, #4]
 8020e92:	9300      	str	r3, [sp, #0]
 8020e94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020e96:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020e98:	4633      	mov	r3, r6
 8020e9a:	4639      	mov	r1, r7
 8020e9c:	f7ff fd8e 	bl	80209bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020ea0:	e760      	b.n	8020d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020ea2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020ea4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ea6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020eaa:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020eae:	1429      	asrs	r1, r5, #16
 8020eb0:	fb03 2101 	mla	r1, r3, r1, r2
 8020eb4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020eb6:	440a      	add	r2, r1
 8020eb8:	5c61      	ldrb	r1, [r4, r1]
 8020eba:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8020ebe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020ec2:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020ec6:	f1bc 0f00 	cmp.w	ip, #0
 8020eca:	f000 808c 	beq.w	8020fe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020ece:	7857      	ldrb	r7, [r2, #1]
 8020ed0:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020ed4:	9413      	str	r4, [sp, #76]	; 0x4c
 8020ed6:	b140      	cbz	r0, 8020eea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020ed8:	18d7      	adds	r7, r2, r3
 8020eda:	5cd3      	ldrb	r3, [r2, r3]
 8020edc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ee0:	9310      	str	r3, [sp, #64]	; 0x40
 8020ee2:	787b      	ldrb	r3, [r7, #1]
 8020ee4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ee8:	9314      	str	r3, [sp, #80]	; 0x50
 8020eea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020eec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020eee:	fb1c f200 	smulbb	r2, ip, r0
 8020ef2:	041f      	lsls	r7, r3, #16
 8020ef4:	10d2      	asrs	r2, r2, #3
 8020ef6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020efa:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8020efe:	431f      	orrs	r7, r3
 8020f00:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020f04:	9317      	str	r3, [sp, #92]	; 0x5c
 8020f06:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020f08:	041b      	lsls	r3, r3, #16
 8020f0a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8020f0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f12:	ea43 030b 	orr.w	r3, r3, fp
 8020f16:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020f18:	4353      	muls	r3, r2
 8020f1a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020f1e:	fb04 3707 	mla	r7, r4, r7, r3
 8020f22:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020f26:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020f2a:	ea43 0b01 	orr.w	fp, r3, r1
 8020f2e:	f1c0 0110 	rsb	r1, r0, #16
 8020f32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020f34:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020f36:	eba1 0c0c 	sub.w	ip, r1, ip
 8020f3a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020f3e:	fb0c 770b 	mla	r7, ip, fp, r7
 8020f42:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020f46:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020f4a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020f4e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020f52:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020f56:	fb02 770c 	mla	r7, r2, ip, r7
 8020f5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020f5c:	0d79      	lsrs	r1, r7, #21
 8020f5e:	097f      	lsrs	r7, r7, #5
 8020f60:	8812      	ldrh	r2, [r2, #0]
 8020f62:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020f66:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020f6a:	430f      	orrs	r7, r1
 8020f6c:	b2bb      	uxth	r3, r7
 8020f6e:	1211      	asrs	r1, r2, #8
 8020f70:	1218      	asrs	r0, r3, #8
 8020f72:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020f76:	fb11 f104 	smulbb	r1, r1, r4
 8020f7a:	10d7      	asrs	r7, r2, #3
 8020f7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020f80:	00d2      	lsls	r2, r2, #3
 8020f82:	fb00 1009 	mla	r0, r0, r9, r1
 8020f86:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020f8a:	10d9      	asrs	r1, r3, #3
 8020f8c:	b2d2      	uxtb	r2, r2
 8020f8e:	00db      	lsls	r3, r3, #3
 8020f90:	fb17 f704 	smulbb	r7, r7, r4
 8020f94:	fb12 f204 	smulbb	r2, r2, r4
 8020f98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020f9c:	b2db      	uxtb	r3, r3
 8020f9e:	b280      	uxth	r0, r0
 8020fa0:	fb01 7109 	mla	r1, r1, r9, r7
 8020fa4:	fb03 2309 	mla	r3, r3, r9, r2
 8020fa8:	b29b      	uxth	r3, r3
 8020faa:	b289      	uxth	r1, r1
 8020fac:	1c42      	adds	r2, r0, #1
 8020fae:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020fb2:	1c4f      	adds	r7, r1, #1
 8020fb4:	1c5a      	adds	r2, r3, #1
 8020fb6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020fba:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020fbe:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020fc2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020fc6:	0949      	lsrs	r1, r1, #5
 8020fc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020fca:	4310      	orrs	r0, r2
 8020fcc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020fd0:	4308      	orrs	r0, r1
 8020fd2:	f823 0b02 	strh.w	r0, [r3], #2
 8020fd6:	930e      	str	r3, [sp, #56]	; 0x38
 8020fd8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020fda:	449a      	add	sl, r3
 8020fdc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020fde:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020fe2:	441d      	add	r5, r3
 8020fe4:	e6ed      	b.n	8020dc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020fe6:	2800      	cmp	r0, #0
 8020fe8:	f43f af7f 	beq.w	8020eea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020fec:	5cd3      	ldrb	r3, [r2, r3]
 8020fee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020ff2:	9310      	str	r3, [sp, #64]	; 0x40
 8020ff4:	e779      	b.n	8020eea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020ff6:	b019      	add	sp, #100	; 0x64
 8020ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020ffc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020ffc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021000:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8021004:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8021008:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 802100c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8021010:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8021014:	8808      	ldrh	r0, [r1, #0]
 8021016:	fb08 470e 	mla	r7, r8, lr, r4
 802101a:	f1b8 0f00 	cmp.w	r8, #0
 802101e:	eb02 0907 	add.w	r9, r2, r7
 8021022:	db67      	blt.n	80210f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021024:	45c2      	cmp	sl, r8
 8021026:	dd65      	ble.n	80210f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8021028:	2c00      	cmp	r4, #0
 802102a:	db61      	blt.n	80210f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 802102c:	45a6      	cmp	lr, r4
 802102e:	dd5f      	ble.n	80210f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8021030:	5dd2      	ldrb	r2, [r2, r7]
 8021032:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8021036:	1c62      	adds	r2, r4, #1
 8021038:	d45f      	bmi.n	80210fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802103a:	4596      	cmp	lr, r2
 802103c:	dd5d      	ble.n	80210fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802103e:	2d00      	cmp	r5, #0
 8021040:	d05b      	beq.n	80210fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8021042:	f899 2001 	ldrb.w	r2, [r9, #1]
 8021046:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 802104a:	f118 0801 	adds.w	r8, r8, #1
 802104e:	d458      	bmi.n	8021102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021050:	45c2      	cmp	sl, r8
 8021052:	dd56      	ble.n	8021102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021054:	2e00      	cmp	r6, #0
 8021056:	d054      	beq.n	8021102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8021058:	2c00      	cmp	r4, #0
 802105a:	db50      	blt.n	80210fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802105c:	45a6      	cmp	lr, r4
 802105e:	dd4e      	ble.n	80210fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8021060:	f819 200e 	ldrb.w	r2, [r9, lr]
 8021064:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8021068:	3401      	adds	r4, #1
 802106a:	d407      	bmi.n	802107c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802106c:	45a6      	cmp	lr, r4
 802106e:	dd05      	ble.n	802107c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021070:	b125      	cbz	r5, 802107c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8021072:	44ce      	add	lr, r9
 8021074:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8021078:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 802107c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8021080:	fb15 f406 	smulbb	r4, r5, r6
 8021084:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021088:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802108c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021090:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8021094:	ea43 0c0c 	orr.w	ip, r3, ip
 8021098:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802109c:	f1c6 0310 	rsb	r3, r6, #16
 80210a0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80210a4:	1b5b      	subs	r3, r3, r5
 80210a6:	ea4e 0707 	orr.w	r7, lr, r7
 80210aa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80210ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80210b2:	437d      	muls	r5, r7
 80210b4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80210b8:	0403      	lsls	r3, r0, #16
 80210ba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80210be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80210c2:	4318      	orrs	r0, r3
 80210c4:	0413      	lsls	r3, r2, #16
 80210c6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80210ca:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80210ce:	4313      	orrs	r3, r2
 80210d0:	fb04 c000 	mla	r0, r4, r0, ip
 80210d4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80210d8:	fb06 0003 	mla	r0, r6, r3, r0
 80210dc:	0d43      	lsrs	r3, r0, #21
 80210de:	0940      	lsrs	r0, r0, #5
 80210e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80210e4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80210e8:	4318      	orrs	r0, r3
 80210ea:	8008      	strh	r0, [r1, #0]
 80210ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80210f0:	4684      	mov	ip, r0
 80210f2:	e7a0      	b.n	8021036 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80210f4:	4607      	mov	r7, r0
 80210f6:	4684      	mov	ip, r0
 80210f8:	e7a7      	b.n	802104a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80210fa:	4607      	mov	r7, r0
 80210fc:	e7a5      	b.n	802104a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80210fe:	4602      	mov	r2, r0
 8021100:	e7b2      	b.n	8021068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8021102:	4602      	mov	r2, r0
 8021104:	e7ba      	b.n	802107c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08021106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021106:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802110a:	b093      	sub	sp, #76	; 0x4c
 802110c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8021110:	920f      	str	r2, [sp, #60]	; 0x3c
 8021112:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021114:	9108      	str	r1, [sp, #32]
 8021116:	9306      	str	r3, [sp, #24]
 8021118:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802111c:	9010      	str	r0, [sp, #64]	; 0x40
 802111e:	6850      	ldr	r0, [r2, #4]
 8021120:	6812      	ldr	r2, [r2, #0]
 8021122:	fb00 1303 	mla	r3, r0, r3, r1
 8021126:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802112a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802112c:	681b      	ldr	r3, [r3, #0]
 802112e:	9307      	str	r3, [sp, #28]
 8021130:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021132:	685f      	ldr	r7, [r3, #4]
 8021134:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8021138:	3704      	adds	r7, #4
 802113a:	9b08      	ldr	r3, [sp, #32]
 802113c:	2b00      	cmp	r3, #0
 802113e:	dc03      	bgt.n	8021148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8021140:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8021142:	2b00      	cmp	r3, #0
 8021144:	f340 81b2 	ble.w	80214ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021148:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802114a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802114e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021152:	1e48      	subs	r0, r1, #1
 8021154:	f102 3cff 	add.w	ip, r2, #4294967295
 8021158:	9b06      	ldr	r3, [sp, #24]
 802115a:	2b00      	cmp	r3, #0
 802115c:	f340 80a9 	ble.w	80212b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8021160:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8021164:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021168:	d406      	bmi.n	8021178 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802116a:	4586      	cmp	lr, r0
 802116c:	da04      	bge.n	8021178 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802116e:	2b00      	cmp	r3, #0
 8021170:	db02      	blt.n	8021178 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8021172:	4563      	cmp	r3, ip
 8021174:	f2c0 809e 	blt.w	80212b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021178:	f11e 0e01 	adds.w	lr, lr, #1
 802117c:	f100 808f 	bmi.w	802129e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021180:	4571      	cmp	r1, lr
 8021182:	f2c0 808c 	blt.w	802129e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021186:	3301      	adds	r3, #1
 8021188:	f100 8089 	bmi.w	802129e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802118c:	429a      	cmp	r2, r3
 802118e:	f2c0 8086 	blt.w	802129e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021192:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021196:	46c8      	mov	r8, r9
 8021198:	f1bb 0f00 	cmp.w	fp, #0
 802119c:	f340 80a6 	ble.w	80212ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80211a0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80211a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80211a4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80211a8:	689b      	ldr	r3, [r3, #8]
 80211aa:	1422      	asrs	r2, r4, #16
 80211ac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80211b0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80211b4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80211b8:	f100 80e3 	bmi.w	8021382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80211bc:	f103 3aff 	add.w	sl, r3, #4294967295
 80211c0:	4552      	cmp	r2, sl
 80211c2:	f280 80de 	bge.w	8021382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80211c6:	f1bc 0f00 	cmp.w	ip, #0
 80211ca:	f2c0 80da 	blt.w	8021382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80211ce:	f10e 3aff 	add.w	sl, lr, #4294967295
 80211d2:	45d4      	cmp	ip, sl
 80211d4:	f280 80d5 	bge.w	8021382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80211d8:	b21b      	sxth	r3, r3
 80211da:	fb0c 2203 	mla	r2, ip, r3, r2
 80211de:	9d07      	ldr	r5, [sp, #28]
 80211e0:	eb05 0a02 	add.w	sl, r5, r2
 80211e4:	5caa      	ldrb	r2, [r5, r2]
 80211e6:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80211ea:	2800      	cmp	r0, #0
 80211ec:	f000 80c0 	beq.w	8021370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80211f0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80211f4:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80211f8:	920b      	str	r2, [sp, #44]	; 0x2c
 80211fa:	b151      	cbz	r1, 8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80211fc:	eb0a 0203 	add.w	r2, sl, r3
 8021200:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021204:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021208:	9309      	str	r3, [sp, #36]	; 0x24
 802120a:	7853      	ldrb	r3, [r2, #1]
 802120c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021210:	930c      	str	r3, [sp, #48]	; 0x30
 8021212:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021214:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021216:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802121a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802121e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021222:	ea4c 0c03 	orr.w	ip, ip, r3
 8021226:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021228:	041b      	lsls	r3, r3, #16
 802122a:	fb10 f201 	smulbb	r2, r0, r1
 802122e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021232:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021236:	10d2      	asrs	r2, r2, #3
 8021238:	432b      	orrs	r3, r5
 802123a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802123e:	4353      	muls	r3, r2
 8021240:	fb0a 330c 	mla	r3, sl, ip, r3
 8021244:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8021248:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802124c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021250:	ea4c 0e0e 	orr.w	lr, ip, lr
 8021254:	f1c1 0c10 	rsb	ip, r1, #16
 8021258:	ebac 0c00 	sub.w	ip, ip, r0
 802125c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8021260:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8021264:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021266:	0418      	lsls	r0, r3, #16
 8021268:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802126c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021270:	4318      	orrs	r0, r3
 8021272:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8021276:	fb02 c200 	mla	r2, r2, r0, ip
 802127a:	0d53      	lsrs	r3, r2, #21
 802127c:	0952      	lsrs	r2, r2, #5
 802127e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021282:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021286:	431a      	orrs	r2, r3
 8021288:	f8a8 2000 	strh.w	r2, [r8]
 802128c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802128e:	441c      	add	r4, r3
 8021290:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021292:	f108 0802 	add.w	r8, r8, #2
 8021296:	441e      	add	r6, r3
 8021298:	f10b 3bff 	add.w	fp, fp, #4294967295
 802129c:	e77c      	b.n	8021198 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802129e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80212a0:	441c      	add	r4, r3
 80212a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80212a4:	441e      	add	r6, r3
 80212a6:	9b06      	ldr	r3, [sp, #24]
 80212a8:	3b01      	subs	r3, #1
 80212aa:	9306      	str	r3, [sp, #24]
 80212ac:	f109 0902 	add.w	r9, r9, #2
 80212b0:	e752      	b.n	8021158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80212b2:	d020      	beq.n	80212f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80212b4:	9b06      	ldr	r3, [sp, #24]
 80212b6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80212b8:	3b01      	subs	r3, #1
 80212ba:	fb00 4003 	mla	r0, r0, r3, r4
 80212be:	1400      	asrs	r0, r0, #16
 80212c0:	f53f af67 	bmi.w	8021192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80212c4:	3901      	subs	r1, #1
 80212c6:	4288      	cmp	r0, r1
 80212c8:	f6bf af63 	bge.w	8021192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80212cc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80212ce:	fb01 6303 	mla	r3, r1, r3, r6
 80212d2:	141b      	asrs	r3, r3, #16
 80212d4:	f53f af5d 	bmi.w	8021192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80212d8:	3a01      	subs	r2, #1
 80212da:	4293      	cmp	r3, r2
 80212dc:	f6bf af59 	bge.w	8021192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80212e0:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80212e4:	46ca      	mov	sl, r9
 80212e6:	f1b8 0f00 	cmp.w	r8, #0
 80212ea:	dc67      	bgt.n	80213bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80212ec:	9b06      	ldr	r3, [sp, #24]
 80212ee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80212f2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80212f6:	9b08      	ldr	r3, [sp, #32]
 80212f8:	2b00      	cmp	r3, #0
 80212fa:	f340 80d7 	ble.w	80214ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80212fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021302:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021306:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802130a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802130c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021310:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021314:	eeb0 6a62 	vmov.f32	s12, s5
 8021318:	ee61 7a27 	vmul.f32	s15, s2, s15
 802131c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021320:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021324:	ee16 4a10 	vmov	r4, s12
 8021328:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802132c:	eeb0 6a43 	vmov.f32	s12, s6
 8021330:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021334:	ee12 2a90 	vmov	r2, s5
 8021338:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802133c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021340:	ee13 2a10 	vmov	r2, s6
 8021344:	931f      	str	r3, [sp, #124]	; 0x7c
 8021346:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021348:	fb92 f3f3 	sdiv	r3, r2, r3
 802134c:	9320      	str	r3, [sp, #128]	; 0x80
 802134e:	9b08      	ldr	r3, [sp, #32]
 8021350:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021352:	3b01      	subs	r3, #1
 8021354:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8021358:	9308      	str	r3, [sp, #32]
 802135a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802135c:	bf08      	it	eq
 802135e:	4613      	moveq	r3, r2
 8021360:	ee16 6a10 	vmov	r6, s12
 8021364:	9306      	str	r3, [sp, #24]
 8021366:	eeb0 3a67 	vmov.f32	s6, s15
 802136a:	eef0 2a47 	vmov.f32	s5, s14
 802136e:	e6e4      	b.n	802113a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021370:	2900      	cmp	r1, #0
 8021372:	f43f af4e 	beq.w	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021376:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802137a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802137e:	9309      	str	r3, [sp, #36]	; 0x24
 8021380:	e747      	b.n	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021382:	f112 0a01 	adds.w	sl, r2, #1
 8021386:	d481      	bmi.n	802128c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021388:	4553      	cmp	r3, sl
 802138a:	f6ff af7f 	blt.w	802128c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802138e:	f11c 0a01 	adds.w	sl, ip, #1
 8021392:	f53f af7b 	bmi.w	802128c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021396:	45d6      	cmp	lr, sl
 8021398:	f6ff af78 	blt.w	802128c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802139c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 80213a0:	b21b      	sxth	r3, r3
 80213a2:	fa0f f28e 	sxth.w	r2, lr
 80213a6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80213aa:	9201      	str	r2, [sp, #4]
 80213ac:	9300      	str	r3, [sp, #0]
 80213ae:	9a07      	ldr	r2, [sp, #28]
 80213b0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80213b2:	463b      	mov	r3, r7
 80213b4:	4641      	mov	r1, r8
 80213b6:	f7ff fe21 	bl	8020ffc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80213ba:	e767      	b.n	802128c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80213bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80213be:	9d07      	ldr	r5, [sp, #28]
 80213c0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80213c4:	1422      	asrs	r2, r4, #16
 80213c6:	1431      	asrs	r1, r6, #16
 80213c8:	fb03 2101 	mla	r1, r3, r1, r2
 80213cc:	9a07      	ldr	r2, [sp, #28]
 80213ce:	440a      	add	r2, r1
 80213d0:	5c69      	ldrb	r1, [r5, r1]
 80213d2:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80213d6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80213da:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80213de:	f1be 0f00 	cmp.w	lr, #0
 80213e2:	d05c      	beq.n	802149e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80213e4:	f892 c001 	ldrb.w	ip, [r2, #1]
 80213e8:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80213ec:	950d      	str	r5, [sp, #52]	; 0x34
 80213ee:	b150      	cbz	r0, 8021406 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80213f0:	eb02 0c03 	add.w	ip, r2, r3
 80213f4:	5cd3      	ldrb	r3, [r2, r3]
 80213f6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80213fa:	930a      	str	r3, [sp, #40]	; 0x28
 80213fc:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8021400:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021404:	930e      	str	r3, [sp, #56]	; 0x38
 8021406:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021408:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802140a:	fb1e f200 	smulbb	r2, lr, r0
 802140e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021412:	10d2      	asrs	r2, r2, #3
 8021414:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021418:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802141c:	ea4c 0c03 	orr.w	ip, ip, r3
 8021420:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8021424:	9311      	str	r3, [sp, #68]	; 0x44
 8021426:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021428:	041b      	lsls	r3, r3, #16
 802142a:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 802142e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8021432:	ea43 030b 	orr.w	r3, r3, fp
 8021436:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8021438:	4353      	muls	r3, r2
 802143a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802143e:	fb05 3c0c 	mla	ip, r5, ip, r3
 8021442:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021446:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 802144a:	ea43 0b01 	orr.w	fp, r3, r1
 802144e:	f1c0 0110 	rsb	r1, r0, #16
 8021452:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021454:	eba1 0e0e 	sub.w	lr, r1, lr
 8021458:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802145c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8021460:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8021464:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8021468:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802146c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8021470:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8021474:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021478:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802147c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021480:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021484:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021488:	ea43 0c0c 	orr.w	ip, r3, ip
 802148c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802148e:	f82a cb02 	strh.w	ip, [sl], #2
 8021492:	441c      	add	r4, r3
 8021494:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021496:	f108 38ff 	add.w	r8, r8, #4294967295
 802149a:	441e      	add	r6, r3
 802149c:	e723      	b.n	80212e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802149e:	2800      	cmp	r0, #0
 80214a0:	d0b1      	beq.n	8021406 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80214a2:	5cd3      	ldrb	r3, [r2, r3]
 80214a4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80214a8:	930a      	str	r3, [sp, #40]	; 0x28
 80214aa:	e7ac      	b.n	8021406 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80214ac:	b013      	add	sp, #76	; 0x4c
 80214ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080214b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80214b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214b6:	880d      	ldrh	r5, [r1, #0]
 80214b8:	b087      	sub	sp, #28
 80214ba:	10ef      	asrs	r7, r5, #3
 80214bc:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80214c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80214c4:	00ed      	lsls	r5, r5, #3
 80214c6:	9701      	str	r7, [sp, #4]
 80214c8:	b2ed      	uxtb	r5, r5
 80214ca:	9502      	str	r5, [sp, #8]
 80214cc:	9d01      	ldr	r5, [sp, #4]
 80214ce:	9103      	str	r1, [sp, #12]
 80214d0:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80214d4:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 80214d8:	9902      	ldr	r1, [sp, #8]
 80214da:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 80214de:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 80214e2:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80214e6:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80214ea:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80214ee:	022d      	lsls	r5, r5, #8
 80214f0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80214f4:	fb06 0709 	mla	r7, r6, r9, r0
 80214f8:	430d      	orrs	r5, r1
 80214fa:	2e00      	cmp	r6, #0
 80214fc:	eb02 0c07 	add.w	ip, r2, r7
 8021500:	9505      	str	r5, [sp, #20]
 8021502:	f2c0 80b6 	blt.w	8021672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8021506:	45b3      	cmp	fp, r6
 8021508:	f340 80b3 	ble.w	8021672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802150c:	2800      	cmp	r0, #0
 802150e:	f2c0 80ae 	blt.w	802166e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021512:	4581      	cmp	r9, r0
 8021514:	f340 80ab 	ble.w	802166e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021518:	5dd7      	ldrb	r7, [r2, r7]
 802151a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802151e:	441f      	add	r7, r3
 8021520:	1c42      	adds	r2, r0, #1
 8021522:	f100 80a9 	bmi.w	8021678 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021526:	4591      	cmp	r9, r2
 8021528:	f340 80a6 	ble.w	8021678 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 802152c:	2c00      	cmp	r4, #0
 802152e:	f000 80a3 	beq.w	8021678 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8021532:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021536:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802153a:	441d      	add	r5, r3
 802153c:	3601      	adds	r6, #1
 802153e:	f100 809f 	bmi.w	8021680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021542:	45b3      	cmp	fp, r6
 8021544:	f340 809c 	ble.w	8021680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021548:	f1be 0f00 	cmp.w	lr, #0
 802154c:	f000 8098 	beq.w	8021680 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8021550:	2800      	cmp	r0, #0
 8021552:	f2c0 8093 	blt.w	802167c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8021556:	4581      	cmp	r9, r0
 8021558:	f340 8090 	ble.w	802167c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 802155c:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8021560:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021564:	441e      	add	r6, r3
 8021566:	3001      	adds	r0, #1
 8021568:	f100 808d 	bmi.w	8021686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 802156c:	4581      	cmp	r9, r0
 802156e:	f340 808a 	ble.w	8021686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021572:	2c00      	cmp	r4, #0
 8021574:	f000 8087 	beq.w	8021686 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8021578:	44e1      	add	r9, ip
 802157a:	f899 2001 	ldrb.w	r2, [r9, #1]
 802157e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021582:	4413      	add	r3, r2
 8021584:	b2a4      	uxth	r4, r4
 8021586:	fa1f fe8e 	uxth.w	lr, lr
 802158a:	fb04 fb0e 	mul.w	fp, r4, lr
 802158e:	0124      	lsls	r4, r4, #4
 8021590:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8021594:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8021598:	eba4 040b 	sub.w	r4, r4, fp
 802159c:	fa1f f08e 	uxth.w	r0, lr
 80215a0:	b2a2      	uxth	r2, r4
 80215a2:	78ac      	ldrb	r4, [r5, #2]
 80215a4:	f897 c002 	ldrb.w	ip, [r7, #2]
 80215a8:	9901      	ldr	r1, [sp, #4]
 80215aa:	eba9 0900 	sub.w	r9, r9, r0
 80215ae:	fa1f f989 	uxth.w	r9, r9
 80215b2:	4354      	muls	r4, r2
 80215b4:	fb09 440c 	mla	r4, r9, ip, r4
 80215b8:	f896 c002 	ldrb.w	ip, [r6, #2]
 80215bc:	fb00 440c 	mla	r4, r0, ip, r4
 80215c0:	f893 c002 	ldrb.w	ip, [r3, #2]
 80215c4:	fa1f fe88 	uxth.w	lr, r8
 80215c8:	ea6f 0808 	mvn.w	r8, r8
 80215cc:	fa5f f888 	uxtb.w	r8, r8
 80215d0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 80215d4:	fb1a fa08 	smulbb	sl, sl, r8
 80215d8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80215dc:	fb0c ac0e 	mla	ip, ip, lr, sl
 80215e0:	f895 a001 	ldrb.w	sl, [r5, #1]
 80215e4:	787c      	ldrb	r4, [r7, #1]
 80215e6:	782d      	ldrb	r5, [r5, #0]
 80215e8:	783f      	ldrb	r7, [r7, #0]
 80215ea:	fb02 fa0a 	mul.w	sl, r2, sl
 80215ee:	fb09 aa04 	mla	sl, r9, r4, sl
 80215f2:	7874      	ldrb	r4, [r6, #1]
 80215f4:	436a      	muls	r2, r5
 80215f6:	7835      	ldrb	r5, [r6, #0]
 80215f8:	fb00 aa04 	mla	sl, r0, r4, sl
 80215fc:	fb09 2207 	mla	r2, r9, r7, r2
 8021600:	785c      	ldrb	r4, [r3, #1]
 8021602:	781b      	ldrb	r3, [r3, #0]
 8021604:	fb00 2005 	mla	r0, r0, r5, r2
 8021608:	fb0b a404 	mla	r4, fp, r4, sl
 802160c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8021610:	9b02      	ldr	r3, [sp, #8]
 8021612:	fb11 fa08 	smulbb	sl, r1, r8
 8021616:	fa1f fc8c 	uxth.w	ip, ip
 802161a:	fb13 f808 	smulbb	r8, r3, r8
 802161e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8021622:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8021626:	fb04 a40e 	mla	r4, r4, lr, sl
 802162a:	f10c 0301 	add.w	r3, ip, #1
 802162e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8021632:	fa1f fe8e 	uxth.w	lr, lr
 8021636:	b2a4      	uxth	r4, r4
 8021638:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802163c:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8021640:	f104 0a01 	add.w	sl, r4, #1
 8021644:	f10e 0c01 	add.w	ip, lr, #1
 8021648:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802164c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8021650:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021654:	0964      	lsrs	r4, r4, #5
 8021656:	ea4c 0c03 	orr.w	ip, ip, r3
 802165a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802165e:	9b03      	ldr	r3, [sp, #12]
 8021660:	ea4c 0c04 	orr.w	ip, ip, r4
 8021664:	f8a3 c000 	strh.w	ip, [r3]
 8021668:	b007      	add	sp, #28
 802166a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802166e:	af05      	add	r7, sp, #20
 8021670:	e756      	b.n	8021520 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8021672:	ad05      	add	r5, sp, #20
 8021674:	462f      	mov	r7, r5
 8021676:	e761      	b.n	802153c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8021678:	ad05      	add	r5, sp, #20
 802167a:	e75f      	b.n	802153c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802167c:	ae05      	add	r6, sp, #20
 802167e:	e772      	b.n	8021566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8021680:	ab05      	add	r3, sp, #20
 8021682:	461e      	mov	r6, r3
 8021684:	e77e      	b.n	8021584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8021686:	ab05      	add	r3, sp, #20
 8021688:	e77c      	b.n	8021584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802168a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802168a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802168e:	b095      	sub	sp, #84	; 0x54
 8021690:	9212      	str	r2, [sp, #72]	; 0x48
 8021692:	9309      	str	r3, [sp, #36]	; 0x24
 8021694:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021696:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802169a:	930f      	str	r3, [sp, #60]	; 0x3c
 802169c:	910e      	str	r1, [sp, #56]	; 0x38
 802169e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 80216a2:	9013      	str	r0, [sp, #76]	; 0x4c
 80216a4:	6850      	ldr	r0, [r2, #4]
 80216a6:	6812      	ldr	r2, [r2, #0]
 80216a8:	fb00 1303 	mla	r3, r0, r3, r1
 80216ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80216b0:	930a      	str	r3, [sp, #40]	; 0x28
 80216b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80216b4:	681b      	ldr	r3, [r3, #0]
 80216b6:	930d      	str	r3, [sp, #52]	; 0x34
 80216b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80216ba:	685c      	ldr	r4, [r3, #4]
 80216bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80216be:	43db      	mvns	r3, r3
 80216c0:	b2db      	uxtb	r3, r3
 80216c2:	3404      	adds	r4, #4
 80216c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80216c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80216c8:	2b00      	cmp	r3, #0
 80216ca:	dc03      	bgt.n	80216d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80216cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80216ce:	2b00      	cmp	r3, #0
 80216d0:	f340 8255 	ble.w	8021b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80216d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80216d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80216da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80216de:	1e48      	subs	r0, r1, #1
 80216e0:	1e55      	subs	r5, r2, #1
 80216e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80216e4:	2b00      	cmp	r3, #0
 80216e6:	f340 80f9 	ble.w	80218dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80216ea:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80216ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80216ee:	1436      	asrs	r6, r6, #16
 80216f0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80216f4:	d406      	bmi.n	8021704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80216f6:	4286      	cmp	r6, r0
 80216f8:	da04      	bge.n	8021704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80216fa:	2b00      	cmp	r3, #0
 80216fc:	db02      	blt.n	8021704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80216fe:	42ab      	cmp	r3, r5
 8021700:	f2c0 80ed 	blt.w	80218de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021704:	3601      	adds	r6, #1
 8021706:	f100 80da 	bmi.w	80218be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802170a:	42b1      	cmp	r1, r6
 802170c:	f2c0 80d7 	blt.w	80218be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021710:	3301      	adds	r3, #1
 8021712:	f100 80d4 	bmi.w	80218be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021716:	429a      	cmp	r2, r3
 8021718:	f2c0 80d1 	blt.w	80218be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802171c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802171e:	9311      	str	r3, [sp, #68]	; 0x44
 8021720:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021722:	930c      	str	r3, [sp, #48]	; 0x30
 8021724:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021726:	2b00      	cmp	r3, #0
 8021728:	f340 80fa 	ble.w	8021920 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802172c:	9826      	ldr	r0, [sp, #152]	; 0x98
 802172e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021730:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021732:	68c6      	ldr	r6, [r0, #12]
 8021734:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021736:	141d      	asrs	r5, r3, #16
 8021738:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802173c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802173e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021740:	1400      	asrs	r0, r0, #16
 8021742:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021746:	6892      	ldr	r2, [r2, #8]
 8021748:	f100 813e 	bmi.w	80219c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802174c:	1e57      	subs	r7, r2, #1
 802174e:	42b8      	cmp	r0, r7
 8021750:	f280 813a 	bge.w	80219c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021754:	2d00      	cmp	r5, #0
 8021756:	f2c0 8137 	blt.w	80219c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 802175a:	1e77      	subs	r7, r6, #1
 802175c:	42bd      	cmp	r5, r7
 802175e:	f280 8133 	bge.w	80219c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8021762:	b212      	sxth	r2, r2
 8021764:	fb05 0002 	mla	r0, r5, r2, r0
 8021768:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802176a:	f815 a000 	ldrb.w	sl, [r5, r0]
 802176e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8021772:	182e      	adds	r6, r5, r0
 8021774:	eb04 050a 	add.w	r5, r4, sl
 8021778:	2b00      	cmp	r3, #0
 802177a:	f000 8117 	beq.w	80219ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802177e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021782:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021786:	44a4      	add	ip, r4
 8021788:	2900      	cmp	r1, #0
 802178a:	f000 8117 	beq.w	80219bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802178e:	18b0      	adds	r0, r6, r2
 8021790:	5cb2      	ldrb	r2, [r6, r2]
 8021792:	7840      	ldrb	r0, [r0, #1]
 8021794:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021798:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802179c:	4422      	add	r2, r4
 802179e:	4420      	add	r0, r4
 80217a0:	b29b      	uxth	r3, r3
 80217a2:	b289      	uxth	r1, r1
 80217a4:	fb03 f901 	mul.w	r9, r3, r1
 80217a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80217ac:	011b      	lsls	r3, r3, #4
 80217ae:	b289      	uxth	r1, r1
 80217b0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80217b4:	f895 b002 	ldrb.w	fp, [r5, #2]
 80217b8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80217ba:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80217be:	f8b6 e000 	ldrh.w	lr, [r6]
 80217c2:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80217c6:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80217ca:	eba3 0309 	sub.w	r3, r3, r9
 80217ce:	b29b      	uxth	r3, r3
 80217d0:	eba8 0801 	sub.w	r8, r8, r1
 80217d4:	fa1f f888 	uxth.w	r8, r8
 80217d8:	435f      	muls	r7, r3
 80217da:	fb08 770b 	mla	r7, r8, fp, r7
 80217de:	f892 b002 	ldrb.w	fp, [r2, #2]
 80217e2:	9310      	str	r3, [sp, #64]	; 0x40
 80217e4:	fb01 770b 	mla	r7, r1, fp, r7
 80217e8:	f890 b002 	ldrb.w	fp, [r0, #2]
 80217ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80217ee:	fb09 770b 	mla	r7, r9, fp, r7
 80217f2:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80217f6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80217fa:	fb1b fb03 	smulbb	fp, fp, r3
 80217fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021802:	fb07 b706 	mla	r7, r7, r6, fp
 8021806:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021808:	f895 b001 	ldrb.w	fp, [r5, #1]
 802180c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021810:	f89c c000 	ldrb.w	ip, [ip]
 8021814:	435d      	muls	r5, r3
 8021816:	fb08 550b 	mla	r5, r8, fp, r5
 802181a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802181e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021820:	fb01 550b 	mla	r5, r1, fp, r5
 8021824:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021828:	fb09 550b 	mla	r5, r9, fp, r5
 802182c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8021830:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021834:	fb1b fb03 	smulbb	fp, fp, r3
 8021838:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802183a:	fb03 f30c 	mul.w	r3, r3, ip
 802183e:	f892 c000 	ldrb.w	ip, [r2]
 8021842:	fb08 330a 	mla	r3, r8, sl, r3
 8021846:	fb01 330c 	mla	r3, r1, ip, r3
 802184a:	f890 c000 	ldrb.w	ip, [r0]
 802184e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021852:	fb09 3c0c 	mla	ip, r9, ip, r3
 8021856:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021858:	fa5f fe8e 	uxtb.w	lr, lr
 802185c:	b2bf      	uxth	r7, r7
 802185e:	fb1e fe03 	smulbb	lr, lr, r3
 8021862:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021866:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802186a:	fb05 b506 	mla	r5, r5, r6, fp
 802186e:	1c7b      	adds	r3, r7, #1
 8021870:	fb0c e606 	mla	r6, ip, r6, lr
 8021874:	b2ad      	uxth	r5, r5
 8021876:	b2b6      	uxth	r6, r6
 8021878:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802187c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021880:	f105 0b01 	add.w	fp, r5, #1
 8021884:	1c77      	adds	r7, r6, #1
 8021886:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802188a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802188e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021892:	096d      	lsrs	r5, r5, #5
 8021894:	431f      	orrs	r7, r3
 8021896:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802189a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802189c:	433d      	orrs	r5, r7
 802189e:	801d      	strh	r5, [r3, #0]
 80218a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80218a2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80218a4:	3302      	adds	r3, #2
 80218a6:	930c      	str	r3, [sp, #48]	; 0x30
 80218a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80218aa:	4413      	add	r3, r2
 80218ac:	931f      	str	r3, [sp, #124]	; 0x7c
 80218ae:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80218b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218b2:	4413      	add	r3, r2
 80218b4:	9320      	str	r3, [sp, #128]	; 0x80
 80218b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80218b8:	3b01      	subs	r3, #1
 80218ba:	9311      	str	r3, [sp, #68]	; 0x44
 80218bc:	e732      	b.n	8021724 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80218be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80218c0:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80218c2:	4433      	add	r3, r6
 80218c4:	931f      	str	r3, [sp, #124]	; 0x7c
 80218c6:	9e22      	ldr	r6, [sp, #136]	; 0x88
 80218c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218ca:	4433      	add	r3, r6
 80218cc:	9320      	str	r3, [sp, #128]	; 0x80
 80218ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218d0:	3b01      	subs	r3, #1
 80218d2:	9309      	str	r3, [sp, #36]	; 0x24
 80218d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218d6:	3302      	adds	r3, #2
 80218d8:	930a      	str	r3, [sp, #40]	; 0x28
 80218da:	e702      	b.n	80216e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80218dc:	d027      	beq.n	802192e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 80218de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218e0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80218e2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 80218e4:	3b01      	subs	r3, #1
 80218e6:	fb00 5003 	mla	r0, r0, r3, r5
 80218ea:	1400      	asrs	r0, r0, #16
 80218ec:	f53f af16 	bmi.w	802171c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80218f0:	3901      	subs	r1, #1
 80218f2:	4288      	cmp	r0, r1
 80218f4:	f6bf af12 	bge.w	802171c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80218f8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80218fa:	9820      	ldr	r0, [sp, #128]	; 0x80
 80218fc:	fb01 0303 	mla	r3, r1, r3, r0
 8021900:	141b      	asrs	r3, r3, #16
 8021902:	f53f af0b 	bmi.w	802171c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021906:	3a01      	subs	r2, #1
 8021908:	4293      	cmp	r3, r2
 802190a:	f6bf af07 	bge.w	802171c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802190e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021910:	9311      	str	r3, [sp, #68]	; 0x44
 8021912:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8021916:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021918:	930c      	str	r3, [sp, #48]	; 0x30
 802191a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802191c:	2b00      	cmp	r3, #0
 802191e:	dc70      	bgt.n	8021a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021920:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021922:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021924:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021928:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802192c:	930a      	str	r3, [sp, #40]	; 0x28
 802192e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021930:	2b00      	cmp	r3, #0
 8021932:	f340 8124 	ble.w	8021b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021936:	ee30 0a04 	vadd.f32	s0, s0, s8
 802193a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802193e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021942:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021944:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021948:	ee31 1a05 	vadd.f32	s2, s2, s10
 802194c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021950:	eef0 6a62 	vmov.f32	s13, s5
 8021954:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021958:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802195c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021960:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8021964:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021968:	eef0 6a43 	vmov.f32	s13, s6
 802196c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021970:	ee12 2a90 	vmov	r2, s5
 8021974:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021978:	fb92 f3f3 	sdiv	r3, r2, r3
 802197c:	ee13 2a10 	vmov	r2, s6
 8021980:	9321      	str	r3, [sp, #132]	; 0x84
 8021982:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021984:	fb92 f3f3 	sdiv	r3, r2, r3
 8021988:	9322      	str	r3, [sp, #136]	; 0x88
 802198a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802198c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802198e:	3b01      	subs	r3, #1
 8021990:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021994:	930e      	str	r3, [sp, #56]	; 0x38
 8021996:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021998:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802199c:	bf08      	it	eq
 802199e:	4613      	moveq	r3, r2
 80219a0:	9309      	str	r3, [sp, #36]	; 0x24
 80219a2:	eeb0 3a67 	vmov.f32	s6, s15
 80219a6:	eef0 2a47 	vmov.f32	s5, s14
 80219aa:	e68c      	b.n	80216c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80219ac:	b149      	cbz	r1, 80219c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 80219ae:	5cb2      	ldrb	r2, [r6, r2]
 80219b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80219b4:	4422      	add	r2, r4
 80219b6:	4628      	mov	r0, r5
 80219b8:	46ac      	mov	ip, r5
 80219ba:	e6f1      	b.n	80217a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80219bc:	4628      	mov	r0, r5
 80219be:	462a      	mov	r2, r5
 80219c0:	e6ee      	b.n	80217a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80219c2:	4628      	mov	r0, r5
 80219c4:	462a      	mov	r2, r5
 80219c6:	e7f7      	b.n	80219b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 80219c8:	1c47      	adds	r7, r0, #1
 80219ca:	f53f af69 	bmi.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80219ce:	42ba      	cmp	r2, r7
 80219d0:	f6ff af66 	blt.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80219d4:	1c6f      	adds	r7, r5, #1
 80219d6:	f53f af63 	bmi.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80219da:	42be      	cmp	r6, r7
 80219dc:	f6ff af60 	blt.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 80219e0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80219e2:	9002      	str	r0, [sp, #8]
 80219e4:	b236      	sxth	r6, r6
 80219e6:	b212      	sxth	r2, r2
 80219e8:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80219ec:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80219f0:	9200      	str	r2, [sp, #0]
 80219f2:	9601      	str	r6, [sp, #4]
 80219f4:	4623      	mov	r3, r4
 80219f6:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80219fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80219fc:	f7ff fd59 	bl	80214b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021a00:	e74e      	b.n	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021a02:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021a04:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021a06:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021a08:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021a0a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8021a0e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021a10:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021a14:	142d      	asrs	r5, r5, #16
 8021a16:	1400      	asrs	r0, r0, #16
 8021a18:	fb02 5000 	mla	r0, r2, r0, r5
 8021a1c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8021a1e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021a22:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8021a26:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8021a2a:	182e      	adds	r6, r5, r0
 8021a2c:	eb04 0509 	add.w	r5, r4, r9
 8021a30:	2b00      	cmp	r3, #0
 8021a32:	f000 8096 	beq.w	8021b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8021a36:	7877      	ldrb	r7, [r6, #1]
 8021a38:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021a3c:	4427      	add	r7, r4
 8021a3e:	2900      	cmp	r1, #0
 8021a40:	f000 8097 	beq.w	8021b72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8021a44:	18b0      	adds	r0, r6, r2
 8021a46:	5cb2      	ldrb	r2, [r6, r2]
 8021a48:	7840      	ldrb	r0, [r0, #1]
 8021a4a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021a4e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021a52:	4422      	add	r2, r4
 8021a54:	4420      	add	r0, r4
 8021a56:	b29b      	uxth	r3, r3
 8021a58:	b289      	uxth	r1, r1
 8021a5a:	fb03 f801 	mul.w	r8, r3, r1
 8021a5e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8021a60:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021a64:	f8b6 c000 	ldrh.w	ip, [r6]
 8021a68:	78be      	ldrb	r6, [r7, #2]
 8021a6a:	f814 9009 	ldrb.w	r9, [r4, r9]
 8021a6e:	011b      	lsls	r3, r3, #4
 8021a70:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021a74:	b289      	uxth	r1, r1
 8021a76:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021a7a:	eba3 0308 	sub.w	r3, r3, r8
 8021a7e:	b29b      	uxth	r3, r3
 8021a80:	ebae 0e01 	sub.w	lr, lr, r1
 8021a84:	fa1f fe8e 	uxth.w	lr, lr
 8021a88:	435e      	muls	r6, r3
 8021a8a:	fb0e 660b 	mla	r6, lr, fp, r6
 8021a8e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021a92:	9310      	str	r3, [sp, #64]	; 0x40
 8021a94:	fb01 660b 	mla	r6, r1, fp, r6
 8021a98:	f890 b002 	ldrb.w	fp, [r0, #2]
 8021a9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021a9e:	fb08 660b 	mla	r6, r8, fp, r6
 8021aa2:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021aa6:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8021aaa:	fb1b fb03 	smulbb	fp, fp, r3
 8021aae:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021ab2:	fb06 b60a 	mla	r6, r6, sl, fp
 8021ab6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021ab8:	f895 b001 	ldrb.w	fp, [r5, #1]
 8021abc:	787d      	ldrb	r5, [r7, #1]
 8021abe:	783f      	ldrb	r7, [r7, #0]
 8021ac0:	435d      	muls	r5, r3
 8021ac2:	fb0e 550b 	mla	r5, lr, fp, r5
 8021ac6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8021aca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021acc:	fb01 550b 	mla	r5, r1, fp, r5
 8021ad0:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021ad4:	fb08 550b 	mla	r5, r8, fp, r5
 8021ad8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8021adc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021ae0:	fb1b fb03 	smulbb	fp, fp, r3
 8021ae4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021ae6:	437b      	muls	r3, r7
 8021ae8:	7817      	ldrb	r7, [r2, #0]
 8021aea:	fb0e 3309 	mla	r3, lr, r9, r3
 8021aee:	fb01 3307 	mla	r3, r1, r7, r3
 8021af2:	7807      	ldrb	r7, [r0, #0]
 8021af4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021af8:	fb08 3707 	mla	r7, r8, r7, r3
 8021afc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021afe:	fa5f fc8c 	uxtb.w	ip, ip
 8021b02:	fb1c fc03 	smulbb	ip, ip, r3
 8021b06:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021b0a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021b0e:	fb05 b50a 	mla	r5, r5, sl, fp
 8021b12:	fb07 c70a 	mla	r7, r7, sl, ip
 8021b16:	b2b6      	uxth	r6, r6
 8021b18:	b2ad      	uxth	r5, r5
 8021b1a:	b2bf      	uxth	r7, r7
 8021b1c:	1c73      	adds	r3, r6, #1
 8021b1e:	1c7a      	adds	r2, r7, #1
 8021b20:	f105 0b01 	add.w	fp, r5, #1
 8021b24:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021b28:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021b2c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021b30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021b34:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8021b38:	096d      	lsrs	r5, r5, #5
 8021b3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b3c:	4316      	orrs	r6, r2
 8021b3e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021b42:	432e      	orrs	r6, r5
 8021b44:	f823 6b02 	strh.w	r6, [r3], #2
 8021b48:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021b4a:	930c      	str	r3, [sp, #48]	; 0x30
 8021b4c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021b4e:	4413      	add	r3, r2
 8021b50:	931f      	str	r3, [sp, #124]	; 0x7c
 8021b52:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021b54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b56:	4413      	add	r3, r2
 8021b58:	9320      	str	r3, [sp, #128]	; 0x80
 8021b5a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021b5c:	3b01      	subs	r3, #1
 8021b5e:	9311      	str	r3, [sp, #68]	; 0x44
 8021b60:	e6db      	b.n	802191a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8021b62:	b149      	cbz	r1, 8021b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021b64:	5cb2      	ldrb	r2, [r6, r2]
 8021b66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021b6a:	4422      	add	r2, r4
 8021b6c:	4628      	mov	r0, r5
 8021b6e:	462f      	mov	r7, r5
 8021b70:	e771      	b.n	8021a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021b72:	4628      	mov	r0, r5
 8021b74:	462a      	mov	r2, r5
 8021b76:	e76e      	b.n	8021a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021b78:	4628      	mov	r0, r5
 8021b7a:	462a      	mov	r2, r5
 8021b7c:	e7f7      	b.n	8021b6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8021b7e:	b015      	add	sp, #84	; 0x54
 8021b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021b84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b88:	880f      	ldrh	r7, [r1, #0]
 8021b8a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8021b8e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021b92:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021b96:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021b9a:	023c      	lsls	r4, r7, #8
 8021b9c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021ba0:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021ba4:	017c      	lsls	r4, r7, #5
 8021ba6:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8021baa:	00ff      	lsls	r7, r7, #3
 8021bac:	ea4b 0404 	orr.w	r4, fp, r4
 8021bb0:	b2ff      	uxtb	r7, r7
 8021bb2:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021bb6:	4327      	orrs	r7, r4
 8021bb8:	2d00      	cmp	r5, #0
 8021bba:	eb02 080a 	add.w	r8, r2, sl
 8021bbe:	9701      	str	r7, [sp, #4]
 8021bc0:	db7e      	blt.n	8021cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021bc2:	45a9      	cmp	r9, r5
 8021bc4:	dd7c      	ble.n	8021cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021bc6:	f1bc 0f00 	cmp.w	ip, #0
 8021bca:	db77      	blt.n	8021cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021bcc:	45e6      	cmp	lr, ip
 8021bce:	dd75      	ble.n	8021cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021bd0:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021bd4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021bd8:	441f      	add	r7, r3
 8021bda:	f11c 0201 	adds.w	r2, ip, #1
 8021bde:	d472      	bmi.n	8021cc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021be0:	4596      	cmp	lr, r2
 8021be2:	dd70      	ble.n	8021cc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021be4:	2800      	cmp	r0, #0
 8021be6:	d06e      	beq.n	8021cc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021be8:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021bec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021bf0:	441c      	add	r4, r3
 8021bf2:	3501      	adds	r5, #1
 8021bf4:	d46b      	bmi.n	8021cce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021bf6:	45a9      	cmp	r9, r5
 8021bf8:	dd69      	ble.n	8021cce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021bfa:	2e00      	cmp	r6, #0
 8021bfc:	d067      	beq.n	8021cce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021bfe:	f1bc 0f00 	cmp.w	ip, #0
 8021c02:	db62      	blt.n	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021c04:	45e6      	cmp	lr, ip
 8021c06:	dd60      	ble.n	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021c08:	f818 500e 	ldrb.w	r5, [r8, lr]
 8021c0c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021c10:	441d      	add	r5, r3
 8021c12:	f11c 0201 	adds.w	r2, ip, #1
 8021c16:	d45d      	bmi.n	8021cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021c18:	4596      	cmp	lr, r2
 8021c1a:	dd5b      	ble.n	8021cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021c1c:	2800      	cmp	r0, #0
 8021c1e:	d059      	beq.n	8021cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021c20:	44c6      	add	lr, r8
 8021c22:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021c26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c2a:	4413      	add	r3, r2
 8021c2c:	b280      	uxth	r0, r0
 8021c2e:	b2b2      	uxth	r2, r6
 8021c30:	fb00 f602 	mul.w	r6, r0, r2
 8021c34:	0100      	lsls	r0, r0, #4
 8021c36:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021c3a:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8021c3e:	1b80      	subs	r0, r0, r6
 8021c40:	fa1f fc82 	uxth.w	ip, r2
 8021c44:	b282      	uxth	r2, r0
 8021c46:	78a0      	ldrb	r0, [r4, #2]
 8021c48:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021c4c:	f897 9000 	ldrb.w	r9, [r7]
 8021c50:	787f      	ldrb	r7, [r7, #1]
 8021c52:	eba8 080c 	sub.w	r8, r8, ip
 8021c56:	fa1f f888 	uxth.w	r8, r8
 8021c5a:	4350      	muls	r0, r2
 8021c5c:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021c60:	78a8      	ldrb	r0, [r5, #2]
 8021c62:	fb0c e000 	mla	r0, ip, r0, lr
 8021c66:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021c6a:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021c6e:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021c72:	f894 e000 	ldrb.w	lr, [r4]
 8021c76:	fb02 fe0e 	mul.w	lr, r2, lr
 8021c7a:	fb08 e909 	mla	r9, r8, r9, lr
 8021c7e:	f895 e000 	ldrb.w	lr, [r5]
 8021c82:	fb0c 990e 	mla	r9, ip, lr, r9
 8021c86:	f893 e000 	ldrb.w	lr, [r3]
 8021c8a:	785b      	ldrb	r3, [r3, #1]
 8021c8c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021c90:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021c94:	ea4e 0e00 	orr.w	lr, lr, r0
 8021c98:	7860      	ldrb	r0, [r4, #1]
 8021c9a:	4350      	muls	r0, r2
 8021c9c:	786a      	ldrb	r2, [r5, #1]
 8021c9e:	fb08 0007 	mla	r0, r8, r7, r0
 8021ca2:	fb0c 0202 	mla	r2, ip, r2, r0
 8021ca6:	fb06 2303 	mla	r3, r6, r3, r2
 8021caa:	095b      	lsrs	r3, r3, #5
 8021cac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021cb0:	ea4e 0303 	orr.w	r3, lr, r3
 8021cb4:	800b      	strh	r3, [r1, #0]
 8021cb6:	b003      	add	sp, #12
 8021cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cbc:	af01      	add	r7, sp, #4
 8021cbe:	e78c      	b.n	8021bda <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021cc0:	ac01      	add	r4, sp, #4
 8021cc2:	4627      	mov	r7, r4
 8021cc4:	e795      	b.n	8021bf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021cc6:	ac01      	add	r4, sp, #4
 8021cc8:	e793      	b.n	8021bf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021cca:	ad01      	add	r5, sp, #4
 8021ccc:	e7a1      	b.n	8021c12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021cce:	ab01      	add	r3, sp, #4
 8021cd0:	461d      	mov	r5, r3
 8021cd2:	e7ab      	b.n	8021c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021cd4:	ab01      	add	r3, sp, #4
 8021cd6:	e7a9      	b.n	8021c2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cdc:	b08f      	sub	sp, #60	; 0x3c
 8021cde:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021ce2:	920c      	str	r2, [sp, #48]	; 0x30
 8021ce4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021ce6:	910a      	str	r1, [sp, #40]	; 0x28
 8021ce8:	9306      	str	r3, [sp, #24]
 8021cea:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8021cee:	900d      	str	r0, [sp, #52]	; 0x34
 8021cf0:	6850      	ldr	r0, [r2, #4]
 8021cf2:	6812      	ldr	r2, [r2, #0]
 8021cf4:	fb00 1303 	mla	r3, r0, r3, r1
 8021cf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021cfc:	9307      	str	r3, [sp, #28]
 8021cfe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d00:	681b      	ldr	r3, [r3, #0]
 8021d02:	9308      	str	r3, [sp, #32]
 8021d04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d06:	685c      	ldr	r4, [r3, #4]
 8021d08:	3404      	adds	r4, #4
 8021d0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d0c:	2b00      	cmp	r3, #0
 8021d0e:	dc03      	bgt.n	8021d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021d10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021d12:	2b00      	cmp	r3, #0
 8021d14:	f340 81d6 	ble.w	80220c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021d18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021d1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d22:	1e48      	subs	r0, r1, #1
 8021d24:	1e56      	subs	r6, r2, #1
 8021d26:	9b06      	ldr	r3, [sp, #24]
 8021d28:	2b00      	cmp	r3, #0
 8021d2a:	f340 80b7 	ble.w	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021d2e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021d32:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021d36:	d406      	bmi.n	8021d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021d38:	4287      	cmp	r7, r0
 8021d3a:	da04      	bge.n	8021d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021d3c:	2b00      	cmp	r3, #0
 8021d3e:	db02      	blt.n	8021d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021d40:	42b3      	cmp	r3, r6
 8021d42:	f2c0 80ac 	blt.w	8021e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021d46:	3701      	adds	r7, #1
 8021d48:	f100 809d 	bmi.w	8021e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021d4c:	42b9      	cmp	r1, r7
 8021d4e:	f2c0 809a 	blt.w	8021e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021d52:	3301      	adds	r3, #1
 8021d54:	f100 8097 	bmi.w	8021e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021d58:	429a      	cmp	r2, r3
 8021d5a:	f2c0 8094 	blt.w	8021e86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021d5e:	9b06      	ldr	r3, [sp, #24]
 8021d60:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d62:	9b07      	ldr	r3, [sp, #28]
 8021d64:	9309      	str	r3, [sp, #36]	; 0x24
 8021d66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d68:	2b00      	cmp	r3, #0
 8021d6a:	f340 80b5 	ble.w	8021ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021d6e:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021d70:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021d72:	68c7      	ldr	r7, [r0, #12]
 8021d74:	6892      	ldr	r2, [r2, #8]
 8021d76:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021d7a:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021d7e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021d82:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021d86:	f100 80fb 	bmi.w	8021f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021d8a:	f102 3cff 	add.w	ip, r2, #4294967295
 8021d8e:	4560      	cmp	r0, ip
 8021d90:	f280 80f6 	bge.w	8021f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021d94:	2e00      	cmp	r6, #0
 8021d96:	f2c0 80f3 	blt.w	8021f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021d9a:	f107 3cff 	add.w	ip, r7, #4294967295
 8021d9e:	4566      	cmp	r6, ip
 8021da0:	f280 80ee 	bge.w	8021f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021da4:	b212      	sxth	r2, r2
 8021da6:	fb06 0002 	mla	r0, r6, r2, r0
 8021daa:	9e08      	ldr	r6, [sp, #32]
 8021dac:	1837      	adds	r7, r6, r0
 8021dae:	5c30      	ldrb	r0, [r6, r0]
 8021db0:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021db4:	eb04 0c08 	add.w	ip, r4, r8
 8021db8:	2b00      	cmp	r3, #0
 8021dba:	f000 80d3 	beq.w	8021f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021dbe:	787e      	ldrb	r6, [r7, #1]
 8021dc0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021dc4:	4426      	add	r6, r4
 8021dc6:	2900      	cmp	r1, #0
 8021dc8:	f000 80d4 	beq.w	8021f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021dcc:	18b8      	adds	r0, r7, r2
 8021dce:	5cba      	ldrb	r2, [r7, r2]
 8021dd0:	7840      	ldrb	r0, [r0, #1]
 8021dd2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021dd6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021dda:	4422      	add	r2, r4
 8021ddc:	4420      	add	r0, r4
 8021dde:	b29b      	uxth	r3, r3
 8021de0:	b289      	uxth	r1, r1
 8021de2:	fb03 f901 	mul.w	r9, r3, r1
 8021de6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021dea:	011b      	lsls	r3, r3, #4
 8021dec:	b289      	uxth	r1, r1
 8021dee:	78b7      	ldrb	r7, [r6, #2]
 8021df0:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021df4:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021df8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021dfc:	eba3 0309 	sub.w	r3, r3, r9
 8021e00:	b29b      	uxth	r3, r3
 8021e02:	ebae 0e01 	sub.w	lr, lr, r1
 8021e06:	fa1f fe8e 	uxth.w	lr, lr
 8021e0a:	435f      	muls	r7, r3
 8021e0c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021e10:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021e14:	fb01 770a 	mla	r7, r1, sl, r7
 8021e18:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021e1c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021e20:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021e24:	f896 8000 	ldrb.w	r8, [r6]
 8021e28:	7876      	ldrb	r6, [r6, #1]
 8021e2a:	fb03 f808 	mul.w	r8, r3, r8
 8021e2e:	fb0e 8807 	mla	r8, lr, r7, r8
 8021e32:	7817      	ldrb	r7, [r2, #0]
 8021e34:	fb01 8807 	mla	r8, r1, r7, r8
 8021e38:	7807      	ldrb	r7, [r0, #0]
 8021e3a:	fb09 8707 	mla	r7, r9, r7, r8
 8021e3e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021e42:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021e46:	ea47 070a 	orr.w	r7, r7, sl
 8021e4a:	4373      	muls	r3, r6
 8021e4c:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021e50:	fb0e 330c 	mla	r3, lr, ip, r3
 8021e54:	fb01 310a 	mla	r1, r1, sl, r3
 8021e58:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021e5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e5e:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021e62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021e66:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021e6a:	ea47 070a 	orr.w	r7, r7, sl
 8021e6e:	801f      	strh	r7, [r3, #0]
 8021e70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021e72:	3302      	adds	r3, #2
 8021e74:	9309      	str	r3, [sp, #36]	; 0x24
 8021e76:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021e78:	449b      	add	fp, r3
 8021e7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e7c:	441d      	add	r5, r3
 8021e7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021e80:	3b01      	subs	r3, #1
 8021e82:	930b      	str	r3, [sp, #44]	; 0x2c
 8021e84:	e76f      	b.n	8021d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021e86:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021e88:	449b      	add	fp, r3
 8021e8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021e8c:	441d      	add	r5, r3
 8021e8e:	9b06      	ldr	r3, [sp, #24]
 8021e90:	3b01      	subs	r3, #1
 8021e92:	9306      	str	r3, [sp, #24]
 8021e94:	9b07      	ldr	r3, [sp, #28]
 8021e96:	3302      	adds	r3, #2
 8021e98:	9307      	str	r3, [sp, #28]
 8021e9a:	e744      	b.n	8021d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021e9c:	d023      	beq.n	8021ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021e9e:	9b06      	ldr	r3, [sp, #24]
 8021ea0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021ea2:	3b01      	subs	r3, #1
 8021ea4:	fb00 b003 	mla	r0, r0, r3, fp
 8021ea8:	1400      	asrs	r0, r0, #16
 8021eaa:	f53f af58 	bmi.w	8021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021eae:	3901      	subs	r1, #1
 8021eb0:	4288      	cmp	r0, r1
 8021eb2:	f6bf af54 	bge.w	8021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021eb6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021eb8:	fb01 5303 	mla	r3, r1, r3, r5
 8021ebc:	141b      	asrs	r3, r3, #16
 8021ebe:	f53f af4e 	bmi.w	8021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021ec2:	3a01      	subs	r2, #1
 8021ec4:	4293      	cmp	r3, r2
 8021ec6:	f6bf af4a 	bge.w	8021d5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021eca:	9b06      	ldr	r3, [sp, #24]
 8021ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8021ece:	9b07      	ldr	r3, [sp, #28]
 8021ed0:	930b      	str	r3, [sp, #44]	; 0x2c
 8021ed2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021ed4:	2b00      	cmp	r3, #0
 8021ed6:	dc70      	bgt.n	8021fba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021ed8:	9b06      	ldr	r3, [sp, #24]
 8021eda:	9a07      	ldr	r2, [sp, #28]
 8021edc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021ee0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021ee4:	9307      	str	r3, [sp, #28]
 8021ee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021ee8:	2b00      	cmp	r3, #0
 8021eea:	f340 80eb 	ble.w	80220c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021eee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021ef2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021ef6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021efa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021efc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021f00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021f04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021f08:	eef0 6a62 	vmov.f32	s13, s5
 8021f0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021f10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021f18:	ee16 ba90 	vmov	fp, s13
 8021f1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021f20:	eef0 6a43 	vmov.f32	s13, s6
 8021f24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021f28:	ee12 2a90 	vmov	r2, s5
 8021f2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021f30:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f34:	ee13 2a10 	vmov	r2, s6
 8021f38:	931b      	str	r3, [sp, #108]	; 0x6c
 8021f3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021f3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8021f40:	931c      	str	r3, [sp, #112]	; 0x70
 8021f42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021f44:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021f46:	3b01      	subs	r3, #1
 8021f48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021f4c:	930a      	str	r3, [sp, #40]	; 0x28
 8021f4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021f50:	bf08      	it	eq
 8021f52:	4613      	moveq	r3, r2
 8021f54:	ee16 5a90 	vmov	r5, s13
 8021f58:	9306      	str	r3, [sp, #24]
 8021f5a:	eeb0 3a67 	vmov.f32	s6, s15
 8021f5e:	eef0 2a47 	vmov.f32	s5, s14
 8021f62:	e6d2      	b.n	8021d0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8021f64:	b149      	cbz	r1, 8021f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021f66:	5cba      	ldrb	r2, [r7, r2]
 8021f68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021f6c:	4422      	add	r2, r4
 8021f6e:	4660      	mov	r0, ip
 8021f70:	4666      	mov	r6, ip
 8021f72:	e734      	b.n	8021dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021f74:	4660      	mov	r0, ip
 8021f76:	4662      	mov	r2, ip
 8021f78:	e731      	b.n	8021dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021f7a:	4660      	mov	r0, ip
 8021f7c:	4662      	mov	r2, ip
 8021f7e:	e7f7      	b.n	8021f70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021f80:	f110 0c01 	adds.w	ip, r0, #1
 8021f84:	f53f af74 	bmi.w	8021e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021f88:	4562      	cmp	r2, ip
 8021f8a:	f6ff af71 	blt.w	8021e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021f8e:	f116 0c01 	adds.w	ip, r6, #1
 8021f92:	f53f af6d 	bmi.w	8021e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021f96:	4567      	cmp	r7, ip
 8021f98:	f6ff af6a 	blt.w	8021e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021f9c:	b23f      	sxth	r7, r7
 8021f9e:	b212      	sxth	r2, r2
 8021fa0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021fa4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021fa8:	9200      	str	r2, [sp, #0]
 8021faa:	9701      	str	r7, [sp, #4]
 8021fac:	4623      	mov	r3, r4
 8021fae:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021fb2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021fb4:	f7ff fde6 	bl	8021b84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021fb8:	e75a      	b.n	8021e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021fba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021fbc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021fc0:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021fc4:	1428      	asrs	r0, r5, #16
 8021fc6:	fb02 6000 	mla	r0, r2, r0, r6
 8021fca:	9e08      	ldr	r6, [sp, #32]
 8021fcc:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021fd0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021fd4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021fd8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021fdc:	1837      	adds	r7, r6, r0
 8021fde:	eb04 0c08 	add.w	ip, r4, r8
 8021fe2:	2b00      	cmp	r3, #0
 8021fe4:	d060      	beq.n	80220a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021fe6:	787e      	ldrb	r6, [r7, #1]
 8021fe8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021fec:	4426      	add	r6, r4
 8021fee:	2900      	cmp	r1, #0
 8021ff0:	d062      	beq.n	80220b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021ff2:	18b8      	adds	r0, r7, r2
 8021ff4:	5cba      	ldrb	r2, [r7, r2]
 8021ff6:	7840      	ldrb	r0, [r0, #1]
 8021ff8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021ffc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8022000:	4422      	add	r2, r4
 8022002:	4420      	add	r0, r4
 8022004:	b29b      	uxth	r3, r3
 8022006:	b289      	uxth	r1, r1
 8022008:	fb03 f901 	mul.w	r9, r3, r1
 802200c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022010:	011b      	lsls	r3, r3, #4
 8022012:	b289      	uxth	r1, r1
 8022014:	78b7      	ldrb	r7, [r6, #2]
 8022016:	f89c a002 	ldrb.w	sl, [ip, #2]
 802201a:	f89c c001 	ldrb.w	ip, [ip, #1]
 802201e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8022022:	eba3 0309 	sub.w	r3, r3, r9
 8022026:	b29b      	uxth	r3, r3
 8022028:	ebae 0e01 	sub.w	lr, lr, r1
 802202c:	fa1f fe8e 	uxth.w	lr, lr
 8022030:	435f      	muls	r7, r3
 8022032:	fb0e 770a 	mla	r7, lr, sl, r7
 8022036:	f892 a002 	ldrb.w	sl, [r2, #2]
 802203a:	fb01 770a 	mla	r7, r1, sl, r7
 802203e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8022042:	fb09 7a0a 	mla	sl, r9, sl, r7
 8022046:	f814 7008 	ldrb.w	r7, [r4, r8]
 802204a:	f896 8000 	ldrb.w	r8, [r6]
 802204e:	7876      	ldrb	r6, [r6, #1]
 8022050:	fb03 f808 	mul.w	r8, r3, r8
 8022054:	fb0e 8807 	mla	r8, lr, r7, r8
 8022058:	7817      	ldrb	r7, [r2, #0]
 802205a:	fb01 8807 	mla	r8, r1, r7, r8
 802205e:	7807      	ldrb	r7, [r0, #0]
 8022060:	fb09 8707 	mla	r7, r9, r7, r8
 8022064:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8022068:	4373      	muls	r3, r6
 802206a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802206e:	7856      	ldrb	r6, [r2, #1]
 8022070:	ea47 070a 	orr.w	r7, r7, sl
 8022074:	fb0e 330c 	mla	r3, lr, ip, r3
 8022078:	f890 a001 	ldrb.w	sl, [r0, #1]
 802207c:	fb01 3306 	mla	r3, r1, r6, r3
 8022080:	fb09 3a0a 	mla	sl, r9, sl, r3
 8022084:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022088:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802208a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802208e:	ea47 070a 	orr.w	r7, r7, sl
 8022092:	f823 7b02 	strh.w	r7, [r3], #2
 8022096:	930b      	str	r3, [sp, #44]	; 0x2c
 8022098:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802209a:	449b      	add	fp, r3
 802209c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802209e:	441d      	add	r5, r3
 80220a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80220a2:	3b01      	subs	r3, #1
 80220a4:	9309      	str	r3, [sp, #36]	; 0x24
 80220a6:	e714      	b.n	8021ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80220a8:	b149      	cbz	r1, 80220be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80220aa:	5cba      	ldrb	r2, [r7, r2]
 80220ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80220b0:	4422      	add	r2, r4
 80220b2:	4660      	mov	r0, ip
 80220b4:	4666      	mov	r6, ip
 80220b6:	e7a5      	b.n	8022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80220b8:	4660      	mov	r0, ip
 80220ba:	4662      	mov	r2, ip
 80220bc:	e7a2      	b.n	8022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80220be:	4660      	mov	r0, ip
 80220c0:	4662      	mov	r2, ip
 80220c2:	e7f7      	b.n	80220b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80220c4:	b00f      	add	sp, #60	; 0x3c
 80220c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080220ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80220ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80220ce:	b085      	sub	sp, #20
 80220d0:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80220d4:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80220d8:	9102      	str	r1, [sp, #8]
 80220da:	2c00      	cmp	r4, #0
 80220dc:	fb04 710c 	mla	r1, r4, ip, r7
 80220e0:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80220e4:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80220e8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80220ec:	eb02 0e01 	add.w	lr, r2, r1
 80220f0:	f2c0 8122 	blt.w	8022338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80220f4:	45a0      	cmp	r8, r4
 80220f6:	f340 811f 	ble.w	8022338 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80220fa:	2f00      	cmp	r7, #0
 80220fc:	f2c0 811a 	blt.w	8022334 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022100:	45bc      	cmp	ip, r7
 8022102:	f340 8117 	ble.w	8022334 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8022106:	5c52      	ldrb	r2, [r2, r1]
 8022108:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 802210c:	1c7a      	adds	r2, r7, #1
 802210e:	f100 8116 	bmi.w	802233e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022112:	4594      	cmp	ip, r2
 8022114:	f340 8113 	ble.w	802233e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8022118:	2e00      	cmp	r6, #0
 802211a:	f000 8112 	beq.w	8022342 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802211e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022122:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022126:	3401      	adds	r4, #1
 8022128:	f100 810f 	bmi.w	802234a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802212c:	45a0      	cmp	r8, r4
 802212e:	f340 810c 	ble.w	802234a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8022132:	2800      	cmp	r0, #0
 8022134:	f000 810c 	beq.w	8022350 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8022138:	2f00      	cmp	r7, #0
 802213a:	f2c0 8104 	blt.w	8022346 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802213e:	45bc      	cmp	ip, r7
 8022140:	f340 8101 	ble.w	8022346 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8022144:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8022148:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 802214c:	3701      	adds	r7, #1
 802214e:	f100 8102 	bmi.w	8022356 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022152:	45bc      	cmp	ip, r7
 8022154:	f340 80ff 	ble.w	8022356 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8022158:	2e00      	cmp	r6, #0
 802215a:	f000 80fe 	beq.w	802235a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802215e:	44f4      	add	ip, lr
 8022160:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8022164:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8022168:	b2b6      	uxth	r6, r6
 802216a:	b280      	uxth	r0, r0
 802216c:	fb00 fe06 	mul.w	lr, r0, r6
 8022170:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022174:	0136      	lsls	r6, r6, #4
 8022176:	eba6 070e 	sub.w	r7, r6, lr
 802217a:	b280      	uxth	r0, r0
 802217c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022180:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022184:	b2bf      	uxth	r7, r7
 8022186:	1a1b      	subs	r3, r3, r0
 8022188:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802218c:	b29b      	uxth	r3, r3
 802218e:	fb0a f607 	mul.w	r6, sl, r7
 8022192:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022196:	fb0b 6603 	mla	r6, fp, r3, r6
 802219a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802219e:	fb00 6609 	mla	r6, r0, r9, r6
 80221a2:	fb0e 6608 	mla	r6, lr, r8, r6
 80221a6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80221aa:	9600      	str	r6, [sp, #0]
 80221ac:	2e00      	cmp	r6, #0
 80221ae:	f000 80be 	beq.w	802232e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 80221b2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80221b6:	fb0b fc0c 	mul.w	ip, fp, ip
 80221ba:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80221be:	fb0b f505 	mul.w	r5, fp, r5
 80221c2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80221c6:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80221ca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80221ce:	44dc      	add	ip, fp
 80221d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80221d4:	9501      	str	r5, [sp, #4]
 80221d6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80221da:	9503      	str	r5, [sp, #12]
 80221dc:	9d01      	ldr	r5, [sp, #4]
 80221de:	9e02      	ldr	r6, [sp, #8]
 80221e0:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80221e4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80221e8:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80221ec:	fb0a fc0c 	mul.w	ip, sl, ip
 80221f0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80221f4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80221f8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80221fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022200:	4465      	add	r5, ip
 8022202:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022206:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802220a:	fb09 fc0c 	mul.w	ip, r9, ip
 802220e:	fb09 f904 	mul.w	r9, r9, r4
 8022212:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022216:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802221a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802221e:	fb08 f404 	mul.w	r4, r8, r4
 8022222:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022226:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802222a:	fb08 f802 	mul.w	r8, r8, r2
 802222e:	fb0a fa01 	mul.w	sl, sl, r1
 8022232:	0a22      	lsrs	r2, r4, #8
 8022234:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8022238:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802223c:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8022240:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022244:	4414      	add	r4, r2
 8022246:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802224a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802224e:	0a2d      	lsrs	r5, r5, #8
 8022250:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022254:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022258:	9a03      	ldr	r2, [sp, #12]
 802225a:	8836      	ldrh	r6, [r6, #0]
 802225c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8022260:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022264:	437d      	muls	r5, r7
 8022266:	4461      	add	r1, ip
 8022268:	0a24      	lsrs	r4, r4, #8
 802226a:	fb02 5503 	mla	r5, r2, r3, r5
 802226e:	0a09      	lsrs	r1, r1, #8
 8022270:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8022274:	fb04 540e 	mla	r4, r4, lr, r5
 8022278:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802227c:	fb01 4100 	mla	r1, r1, r0, r4
 8022280:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022284:	0a09      	lsrs	r1, r1, #8
 8022286:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802228a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802228e:	fb07 f70a 	mul.w	r7, r7, sl
 8022292:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022296:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802229a:	fb03 7101 	mla	r1, r3, r1, r7
 802229e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80222a2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80222a6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80222aa:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80222ae:	fb00 e101 	mla	r1, r0, r1, lr
 80222b2:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80222b6:	9a00      	ldr	r2, [sp, #0]
 80222b8:	b287      	uxth	r7, r0
 80222ba:	437a      	muls	r2, r7
 80222bc:	0a09      	lsrs	r1, r1, #8
 80222be:	1c53      	adds	r3, r2, #1
 80222c0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80222c4:	4321      	orrs	r1, r4
 80222c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80222ca:	1235      	asrs	r5, r6, #8
 80222cc:	0c0a      	lsrs	r2, r1, #16
 80222ce:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80222d2:	b2db      	uxtb	r3, r3
 80222d4:	fb12 f207 	smulbb	r2, r2, r7
 80222d8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80222dc:	fb05 2503 	mla	r5, r5, r3, r2
 80222e0:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80222e4:	10f2      	asrs	r2, r6, #3
 80222e6:	b2c8      	uxtb	r0, r1
 80222e8:	00f6      	lsls	r6, r6, #3
 80222ea:	fb14 f407 	smulbb	r4, r4, r7
 80222ee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80222f2:	b2f6      	uxtb	r6, r6
 80222f4:	fb10 f007 	smulbb	r0, r0, r7
 80222f8:	fb02 4203 	mla	r2, r2, r3, r4
 80222fc:	b2ad      	uxth	r5, r5
 80222fe:	fb06 0303 	mla	r3, r6, r3, r0
 8022302:	b299      	uxth	r1, r3
 8022304:	b294      	uxth	r4, r2
 8022306:	1c6b      	adds	r3, r5, #1
 8022308:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802230c:	1c62      	adds	r2, r4, #1
 802230e:	1c4b      	adds	r3, r1, #1
 8022310:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022314:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022318:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802231c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022320:	0952      	lsrs	r2, r2, #5
 8022322:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022326:	432b      	orrs	r3, r5
 8022328:	4313      	orrs	r3, r2
 802232a:	9a02      	ldr	r2, [sp, #8]
 802232c:	8013      	strh	r3, [r2, #0]
 802232e:	b005      	add	sp, #20
 8022330:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022334:	2500      	movs	r5, #0
 8022336:	e6e9      	b.n	802210c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8022338:	2100      	movs	r1, #0
 802233a:	460d      	mov	r5, r1
 802233c:	e6f3      	b.n	8022126 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802233e:	2100      	movs	r1, #0
 8022340:	e6f1      	b.n	8022126 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022342:	4631      	mov	r1, r6
 8022344:	e6ef      	b.n	8022126 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8022346:	2400      	movs	r4, #0
 8022348:	e700      	b.n	802214c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 802234a:	2200      	movs	r2, #0
 802234c:	4614      	mov	r4, r2
 802234e:	e70b      	b.n	8022168 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022350:	4602      	mov	r2, r0
 8022352:	4604      	mov	r4, r0
 8022354:	e708      	b.n	8022168 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8022356:	2200      	movs	r2, #0
 8022358:	e706      	b.n	8022168 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802235a:	4632      	mov	r2, r6
 802235c:	e704      	b.n	8022168 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802235e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802235e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022362:	b09f      	sub	sp, #124	; 0x7c
 8022364:	921b      	str	r2, [sp, #108]	; 0x6c
 8022366:	9309      	str	r3, [sp, #36]	; 0x24
 8022368:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802236a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802236e:	931c      	str	r3, [sp, #112]	; 0x70
 8022370:	9119      	str	r1, [sp, #100]	; 0x64
 8022372:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8022376:	901d      	str	r0, [sp, #116]	; 0x74
 8022378:	6850      	ldr	r0, [r2, #4]
 802237a:	6812      	ldr	r2, [r2, #0]
 802237c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802237e:	fb00 1303 	mla	r3, r0, r3, r1
 8022382:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022386:	930c      	str	r3, [sp, #48]	; 0x30
 8022388:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802238a:	681b      	ldr	r3, [r3, #0]
 802238c:	9312      	str	r3, [sp, #72]	; 0x48
 802238e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022390:	685e      	ldr	r6, [r3, #4]
 8022392:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8022396:	930d      	str	r3, [sp, #52]	; 0x34
 8022398:	3604      	adds	r6, #4
 802239a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802239c:	2b00      	cmp	r3, #0
 802239e:	dc03      	bgt.n	80223a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80223a0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80223a2:	2b00      	cmp	r3, #0
 80223a4:	f340 8388 	ble.w	8022ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80223a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80223aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80223ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80223b2:	1e48      	subs	r0, r1, #1
 80223b4:	1e57      	subs	r7, r2, #1
 80223b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80223b8:	2b00      	cmp	r3, #0
 80223ba:	f340 8195 	ble.w	80226e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80223be:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80223c0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80223c4:	ea4f 4325 	mov.w	r3, r5, asr #16
 80223c8:	d406      	bmi.n	80223d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223ca:	4584      	cmp	ip, r0
 80223cc:	da04      	bge.n	80223d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223ce:	2b00      	cmp	r3, #0
 80223d0:	db02      	blt.n	80223d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80223d2:	42bb      	cmp	r3, r7
 80223d4:	f2c0 8189 	blt.w	80226ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80223d8:	f11c 0c01 	adds.w	ip, ip, #1
 80223dc:	f100 8177 	bmi.w	80226ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80223e0:	4561      	cmp	r1, ip
 80223e2:	f2c0 8174 	blt.w	80226ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80223e6:	3301      	adds	r3, #1
 80223e8:	f100 8171 	bmi.w	80226ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80223ec:	429a      	cmp	r2, r3
 80223ee:	f2c0 816e 	blt.w	80226ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80223f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80223f4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80223f6:	931a      	str	r3, [sp, #104]	; 0x68
 80223f8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80223fa:	2b00      	cmp	r3, #0
 80223fc:	f340 8193 	ble.w	8022726 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8022400:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022402:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022406:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022408:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802240c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802240e:	141b      	asrs	r3, r3, #16
 8022410:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022414:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022418:	f100 81d6 	bmi.w	80227c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802241c:	f100 38ff 	add.w	r8, r0, #4294967295
 8022420:	4543      	cmp	r3, r8
 8022422:	f280 81d1 	bge.w	80227c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022426:	f1bc 0f00 	cmp.w	ip, #0
 802242a:	f2c0 81cd 	blt.w	80227c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802242e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022432:	45c4      	cmp	ip, r8
 8022434:	f280 81c8 	bge.w	80227c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8022438:	b200      	sxth	r0, r0
 802243a:	fb0c 3300 	mla	r3, ip, r0, r3
 802243e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022440:	eb04 0803 	add.w	r8, r4, r3
 8022444:	5ce3      	ldrb	r3, [r4, r3]
 8022446:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802244a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802244e:	2a00      	cmp	r2, #0
 8022450:	f000 81af 	beq.w	80227b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022454:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022458:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 802245c:	940e      	str	r4, [sp, #56]	; 0x38
 802245e:	0e24      	lsrs	r4, r4, #24
 8022460:	9415      	str	r4, [sp, #84]	; 0x54
 8022462:	b179      	cbz	r1, 8022484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022464:	eb08 0c00 	add.w	ip, r8, r0
 8022468:	f818 0000 	ldrb.w	r0, [r8, r0]
 802246c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022470:	900a      	str	r0, [sp, #40]	; 0x28
 8022472:	0e00      	lsrs	r0, r0, #24
 8022474:	9013      	str	r0, [sp, #76]	; 0x4c
 8022476:	f89c 0001 	ldrb.w	r0, [ip, #1]
 802247a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802247e:	900f      	str	r0, [sp, #60]	; 0x3c
 8022480:	0e00      	lsrs	r0, r0, #24
 8022482:	9016      	str	r0, [sp, #88]	; 0x58
 8022484:	b292      	uxth	r2, r2
 8022486:	b289      	uxth	r1, r1
 8022488:	fb02 f901 	mul.w	r9, r2, r1
 802248c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022490:	0112      	lsls	r2, r2, #4
 8022492:	eba2 0809 	sub.w	r8, r2, r9
 8022496:	b289      	uxth	r1, r1
 8022498:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802249c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802249e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80224a0:	fa1f f888 	uxth.w	r8, r8
 80224a4:	1a52      	subs	r2, r2, r1
 80224a6:	b292      	uxth	r2, r2
 80224a8:	fb08 f000 	mul.w	r0, r8, r0
 80224ac:	fb02 000e 	mla	r0, r2, lr, r0
 80224b0:	fb01 0004 	mla	r0, r1, r4, r0
 80224b4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80224b6:	fb09 0004 	mla	r0, r9, r4, r0
 80224ba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80224be:	2800      	cmp	r0, #0
 80224c0:	f000 80fa 	beq.w	80226b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80224c4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80224c8:	d01b      	beq.n	8022502 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80224ca:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80224ce:	fb0e fa0a 	mul.w	sl, lr, sl
 80224d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80224d6:	fb0e fe03 	mul.w	lr, lr, r3
 80224da:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80224de:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80224e2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80224e6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80224ea:	4453      	add	r3, sl
 80224ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80224f0:	0a1b      	lsrs	r3, r3, #8
 80224f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80224fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80224fe:	ea43 030c 	orr.w	r3, r3, ip
 8022502:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022504:	2cff      	cmp	r4, #255	; 0xff
 8022506:	d021      	beq.n	802254c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022508:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802250a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802250e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022510:	fb04 fb0b 	mul.w	fp, r4, fp
 8022514:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022516:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802251a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802251c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022520:	fb04 fa0a 	mul.w	sl, r4, sl
 8022524:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022528:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802252c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022530:	44de      	add	lr, fp
 8022532:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022536:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802253a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802253e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022542:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022546:	ea4e 040a 	orr.w	r4, lr, sl
 802254a:	940e      	str	r4, [sp, #56]	; 0x38
 802254c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802254e:	2cff      	cmp	r4, #255	; 0xff
 8022550:	d021      	beq.n	8022596 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8022552:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022554:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022558:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802255a:	fb04 fb0b 	mul.w	fp, r4, fp
 802255e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022560:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022564:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022566:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802256a:	fb04 fa0a 	mul.w	sl, r4, sl
 802256e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022572:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022576:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802257a:	44de      	add	lr, fp
 802257c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022580:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022584:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022588:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802258c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022590:	ea4e 040a 	orr.w	r4, lr, sl
 8022594:	940a      	str	r4, [sp, #40]	; 0x28
 8022596:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022598:	2cff      	cmp	r4, #255	; 0xff
 802259a:	d021      	beq.n	80225e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802259c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802259e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80225a2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80225a4:	fb04 fb0b 	mul.w	fp, r4, fp
 80225a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80225aa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80225ae:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80225b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80225b4:	fb04 fa0a 	mul.w	sl, r4, sl
 80225b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80225bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80225c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80225c4:	44de      	add	lr, fp
 80225c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80225ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80225ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80225d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80225d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80225da:	ea4e 040a 	orr.w	r4, lr, sl
 80225de:	940f      	str	r4, [sp, #60]	; 0x3c
 80225e0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80225e2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80225e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80225e8:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80225ec:	fb08 fc0c 	mul.w	ip, r8, ip
 80225f0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80225f4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80225f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80225fa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80225fe:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022602:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022604:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022608:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802260c:	fb08 f80e 	mul.w	r8, r8, lr
 8022610:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022614:	fb02 8303 	mla	r3, r2, r3, r8
 8022618:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802261a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802261c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022620:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022622:	fb01 330a 	mla	r3, r1, sl, r3
 8022626:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 802262a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802262c:	fb09 3901 	mla	r9, r9, r1, r3
 8022630:	4342      	muls	r2, r0
 8022632:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022636:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802263a:	883b      	ldrh	r3, [r7, #0]
 802263c:	1c50      	adds	r0, r2, #1
 802263e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022642:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022646:	ea4c 0c09 	orr.w	ip, ip, r9
 802264a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802264e:	1219      	asrs	r1, r3, #8
 8022650:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8022654:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8022658:	b2c0      	uxtb	r0, r0
 802265a:	fb12 f204 	smulbb	r2, r2, r4
 802265e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022662:	fb01 2100 	mla	r1, r1, r0, r2
 8022666:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802266a:	10da      	asrs	r2, r3, #3
 802266c:	fa5f fc8c 	uxtb.w	ip, ip
 8022670:	00db      	lsls	r3, r3, #3
 8022672:	fb1c fc04 	smulbb	ip, ip, r4
 8022676:	b2db      	uxtb	r3, r3
 8022678:	b289      	uxth	r1, r1
 802267a:	fb03 c300 	mla	r3, r3, r0, ip
 802267e:	fa1f fc83 	uxth.w	ip, r3
 8022682:	1c4b      	adds	r3, r1, #1
 8022684:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022688:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802268c:	fb1e fe04 	smulbb	lr, lr, r4
 8022690:	f10c 0301 	add.w	r3, ip, #1
 8022694:	fb02 e200 	mla	r2, r2, r0, lr
 8022698:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802269c:	b292      	uxth	r2, r2
 802269e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80226a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80226a6:	430b      	orrs	r3, r1
 80226a8:	1c51      	adds	r1, r2, #1
 80226aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80226ae:	0952      	lsrs	r2, r2, #5
 80226b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80226b4:	4313      	orrs	r3, r2
 80226b6:	803b      	strh	r3, [r7, #0]
 80226b8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80226ba:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80226bc:	441a      	add	r2, r3
 80226be:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80226c0:	9229      	str	r2, [sp, #164]	; 0xa4
 80226c2:	441d      	add	r5, r3
 80226c4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80226c6:	3b01      	subs	r3, #1
 80226c8:	3702      	adds	r7, #2
 80226ca:	931a      	str	r3, [sp, #104]	; 0x68
 80226cc:	e694      	b.n	80223f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80226ce:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80226d0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80226d2:	441c      	add	r4, r3
 80226d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80226d6:	9429      	str	r4, [sp, #164]	; 0xa4
 80226d8:	441d      	add	r5, r3
 80226da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226dc:	3b01      	subs	r3, #1
 80226de:	9309      	str	r3, [sp, #36]	; 0x24
 80226e0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80226e2:	3302      	adds	r3, #2
 80226e4:	930c      	str	r3, [sp, #48]	; 0x30
 80226e6:	e666      	b.n	80223b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80226e8:	d024      	beq.n	8022734 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80226ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226ec:	982b      	ldr	r0, [sp, #172]	; 0xac
 80226ee:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80226f0:	3b01      	subs	r3, #1
 80226f2:	fb00 4003 	mla	r0, r0, r3, r4
 80226f6:	1400      	asrs	r0, r0, #16
 80226f8:	f53f ae7b 	bmi.w	80223f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80226fc:	3901      	subs	r1, #1
 80226fe:	4288      	cmp	r0, r1
 8022700:	f6bf ae77 	bge.w	80223f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022704:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022706:	fb01 5303 	mla	r3, r1, r3, r5
 802270a:	141b      	asrs	r3, r3, #16
 802270c:	f53f ae71 	bmi.w	80223f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022710:	3a01      	subs	r2, #1
 8022712:	4293      	cmp	r3, r2
 8022714:	f6bf ae6d 	bge.w	80223f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022718:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802271c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8022720:	f1bb 0f00 	cmp.w	fp, #0
 8022724:	dc70      	bgt.n	8022808 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8022726:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022728:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802272c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802272e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022732:	930c      	str	r3, [sp, #48]	; 0x30
 8022734:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022736:	2b00      	cmp	r3, #0
 8022738:	f340 81be 	ble.w	8022ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802273c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022740:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022744:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022748:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802274a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802274e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022752:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022756:	eef0 6a62 	vmov.f32	s13, s5
 802275a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802275e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022762:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022766:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 802276a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802276e:	eef0 6a43 	vmov.f32	s13, s6
 8022772:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022776:	ee12 2a90 	vmov	r2, s5
 802277a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802277e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022782:	ee13 2a10 	vmov	r2, s6
 8022786:	932b      	str	r3, [sp, #172]	; 0xac
 8022788:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802278a:	fb92 f3f3 	sdiv	r3, r2, r3
 802278e:	932c      	str	r3, [sp, #176]	; 0xb0
 8022790:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022792:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022794:	3b01      	subs	r3, #1
 8022796:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802279a:	9319      	str	r3, [sp, #100]	; 0x64
 802279c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802279e:	bf08      	it	eq
 80227a0:	4613      	moveq	r3, r2
 80227a2:	ee16 5a90 	vmov	r5, s13
 80227a6:	9309      	str	r3, [sp, #36]	; 0x24
 80227a8:	eeb0 3a67 	vmov.f32	s6, s15
 80227ac:	eef0 2a47 	vmov.f32	s5, s14
 80227b0:	e5f3      	b.n	802239a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80227b2:	2900      	cmp	r1, #0
 80227b4:	f43f ae66 	beq.w	8022484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80227b8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80227bc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80227c0:	900a      	str	r0, [sp, #40]	; 0x28
 80227c2:	0e00      	lsrs	r0, r0, #24
 80227c4:	9013      	str	r0, [sp, #76]	; 0x4c
 80227c6:	e65d      	b.n	8022484 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80227c8:	f113 0801 	adds.w	r8, r3, #1
 80227cc:	f53f af74 	bmi.w	80226b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80227d0:	4540      	cmp	r0, r8
 80227d2:	f6ff af71 	blt.w	80226b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80227d6:	f11c 0801 	adds.w	r8, ip, #1
 80227da:	f53f af6d 	bmi.w	80226b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80227de:	45c6      	cmp	lr, r8
 80227e0:	f6ff af6a 	blt.w	80226b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80227e4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80227e6:	9302      	str	r3, [sp, #8]
 80227e8:	b200      	sxth	r0, r0
 80227ea:	fa0f f38e 	sxth.w	r3, lr
 80227ee:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80227f2:	e9cd c203 	strd	ip, r2, [sp, #12]
 80227f6:	9301      	str	r3, [sp, #4]
 80227f8:	9000      	str	r0, [sp, #0]
 80227fa:	4633      	mov	r3, r6
 80227fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80227fe:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022800:	4639      	mov	r1, r7
 8022802:	f7ff fc62 	bl	80220ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022806:	e757      	b.n	80226b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022808:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802280a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802280c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022810:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022812:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022816:	1427      	asrs	r7, r4, #16
 8022818:	142b      	asrs	r3, r5, #16
 802281a:	fb01 7303 	mla	r3, r1, r3, r7
 802281e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022820:	18e7      	adds	r7, r4, r3
 8022822:	5ce3      	ldrb	r3, [r4, r3]
 8022824:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022828:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802282c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022830:	2a00      	cmp	r2, #0
 8022832:	f000 8137 	beq.w	8022aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022836:	f897 e001 	ldrb.w	lr, [r7, #1]
 802283a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802283e:	9410      	str	r4, [sp, #64]	; 0x40
 8022840:	0e24      	lsrs	r4, r4, #24
 8022842:	9417      	str	r4, [sp, #92]	; 0x5c
 8022844:	b170      	cbz	r0, 8022864 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022846:	eb07 0e01 	add.w	lr, r7, r1
 802284a:	5c79      	ldrb	r1, [r7, r1]
 802284c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022850:	910b      	str	r1, [sp, #44]	; 0x2c
 8022852:	0e09      	lsrs	r1, r1, #24
 8022854:	9114      	str	r1, [sp, #80]	; 0x50
 8022856:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802285a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802285e:	9111      	str	r1, [sp, #68]	; 0x44
 8022860:	0e09      	lsrs	r1, r1, #24
 8022862:	9118      	str	r1, [sp, #96]	; 0x60
 8022864:	b292      	uxth	r2, r2
 8022866:	b280      	uxth	r0, r0
 8022868:	fb02 f800 	mul.w	r8, r2, r0
 802286c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022870:	0112      	lsls	r2, r2, #4
 8022872:	eba2 0e08 	sub.w	lr, r2, r8
 8022876:	b280      	uxth	r0, r0
 8022878:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802287c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802287e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022880:	fa1f fe8e 	uxth.w	lr, lr
 8022884:	1a12      	subs	r2, r2, r0
 8022886:	b292      	uxth	r2, r2
 8022888:	fb0e f101 	mul.w	r1, lr, r1
 802288c:	fb02 110c 	mla	r1, r2, ip, r1
 8022890:	fb00 1104 	mla	r1, r0, r4, r1
 8022894:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022896:	fb08 1104 	mla	r1, r8, r4, r1
 802289a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802289e:	2900      	cmp	r1, #0
 80228a0:	f000 80f5 	beq.w	8022a8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80228a4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80228a8:	d019      	beq.n	80228de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80228aa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80228ae:	fb0c fa0a 	mul.w	sl, ip, sl
 80228b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80228b6:	fb0c fc03 	mul.w	ip, ip, r3
 80228ba:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80228be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80228c2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80228c6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80228ca:	4453      	add	r3, sl
 80228cc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80228d0:	0a1b      	lsrs	r3, r3, #8
 80228d2:	0a3f      	lsrs	r7, r7, #8
 80228d4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80228d8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80228dc:	433b      	orrs	r3, r7
 80228de:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80228e0:	2cff      	cmp	r4, #255	; 0xff
 80228e2:	d020      	beq.n	8022926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80228e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80228e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80228ea:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80228ec:	4367      	muls	r7, r4
 80228ee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80228f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80228f4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80228f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80228fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80228fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022902:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022906:	44bc      	add	ip, r7
 8022908:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802290c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022910:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022914:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022918:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802291c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022920:	ea4c 040a 	orr.w	r4, ip, sl
 8022924:	9410      	str	r4, [sp, #64]	; 0x40
 8022926:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022928:	2cff      	cmp	r4, #255	; 0xff
 802292a:	d020      	beq.n	802296e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802292c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802292e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022932:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022934:	4367      	muls	r7, r4
 8022936:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022938:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802293c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802293e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022942:	fb04 fa0a 	mul.w	sl, r4, sl
 8022946:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802294a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802294e:	44bc      	add	ip, r7
 8022950:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022954:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022958:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802295c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022960:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022964:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022968:	ea4c 040a 	orr.w	r4, ip, sl
 802296c:	940b      	str	r4, [sp, #44]	; 0x2c
 802296e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022970:	2cff      	cmp	r4, #255	; 0xff
 8022972:	d020      	beq.n	80229b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8022974:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022976:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802297a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802297c:	4367      	muls	r7, r4
 802297e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022980:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022984:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022986:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802298a:	fb04 fa0a 	mul.w	sl, r4, sl
 802298e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022992:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022996:	44bc      	add	ip, r7
 8022998:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802299c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80229a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80229a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80229a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80229ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80229b0:	ea4c 040a 	orr.w	r4, ip, sl
 80229b4:	9411      	str	r4, [sp, #68]	; 0x44
 80229b6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80229b8:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80229bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80229be:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80229c2:	fb0e f707 	mul.w	r7, lr, r7
 80229c6:	fb02 770c 	mla	r7, r2, ip, r7
 80229ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80229ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80229d0:	fb00 770c 	mla	r7, r0, ip, r7
 80229d4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80229d8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80229da:	fb08 770c 	mla	r7, r8, ip, r7
 80229de:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80229e2:	fb0e fe0c 	mul.w	lr, lr, ip
 80229e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80229ea:	fb02 e303 	mla	r3, r2, r3, lr
 80229ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80229f0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80229f2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80229f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80229f8:	fb00 330a 	mla	r3, r0, sl, r3
 80229fc:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022a00:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022a04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022a06:	f8b9 0000 	ldrh.w	r0, [r9]
 8022a0a:	434b      	muls	r3, r1
 8022a0c:	0a3f      	lsrs	r7, r7, #8
 8022a0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022a12:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022a16:	1c59      	adds	r1, r3, #1
 8022a18:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022a1c:	ea47 070c 	orr.w	r7, r7, ip
 8022a20:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022a24:	1202      	asrs	r2, r0, #8
 8022a26:	0c3b      	lsrs	r3, r7, #16
 8022a28:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8022a2c:	b2c9      	uxtb	r1, r1
 8022a2e:	fb13 f304 	smulbb	r3, r3, r4
 8022a32:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022a36:	fb02 3201 	mla	r2, r2, r1, r3
 8022a3a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8022a3e:	10c3      	asrs	r3, r0, #3
 8022a40:	b2ff      	uxtb	r7, r7
 8022a42:	00c0      	lsls	r0, r0, #3
 8022a44:	b292      	uxth	r2, r2
 8022a46:	fb1c fc04 	smulbb	ip, ip, r4
 8022a4a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8022a4e:	b2c0      	uxtb	r0, r0
 8022a50:	fb17 f704 	smulbb	r7, r7, r4
 8022a54:	fb03 c301 	mla	r3, r3, r1, ip
 8022a58:	fb00 7001 	mla	r0, r0, r1, r7
 8022a5c:	f102 0c01 	add.w	ip, r2, #1
 8022a60:	b280      	uxth	r0, r0
 8022a62:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8022a66:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8022a6a:	1c42      	adds	r2, r0, #1
 8022a6c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022a70:	b29b      	uxth	r3, r3
 8022a72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022a76:	ea42 020c 	orr.w	r2, r2, ip
 8022a7a:	f103 0c01 	add.w	ip, r3, #1
 8022a7e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022a82:	095b      	lsrs	r3, r3, #5
 8022a84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022a88:	431a      	orrs	r2, r3
 8022a8a:	f8a9 2000 	strh.w	r2, [r9]
 8022a8e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022a90:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022a92:	441a      	add	r2, r3
 8022a94:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022a96:	9229      	str	r2, [sp, #164]	; 0xa4
 8022a98:	f109 0902 	add.w	r9, r9, #2
 8022a9c:	441d      	add	r5, r3
 8022a9e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022aa2:	e63d      	b.n	8022720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022aa4:	2800      	cmp	r0, #0
 8022aa6:	f43f aedd 	beq.w	8022864 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022aaa:	5c79      	ldrb	r1, [r7, r1]
 8022aac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ab0:	910b      	str	r1, [sp, #44]	; 0x2c
 8022ab2:	0e09      	lsrs	r1, r1, #24
 8022ab4:	9114      	str	r1, [sp, #80]	; 0x50
 8022ab6:	e6d5      	b.n	8022864 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022ab8:	b01f      	add	sp, #124	; 0x7c
 8022aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022abe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8022abe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ac2:	b089      	sub	sp, #36	; 0x24
 8022ac4:	9101      	str	r1, [sp, #4]
 8022ac6:	9801      	ldr	r0, [sp, #4]
 8022ac8:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8022acc:	8800      	ldrh	r0, [r0, #0]
 8022ace:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022ad2:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022ad6:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8022ada:	1206      	asrs	r6, r0, #8
 8022adc:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022ae0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022ae4:	9602      	str	r6, [sp, #8]
 8022ae6:	10c6      	asrs	r6, r0, #3
 8022ae8:	00c0      	lsls	r0, r0, #3
 8022aea:	b2c0      	uxtb	r0, r0
 8022aec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022af0:	9004      	str	r0, [sp, #16]
 8022af2:	2f00      	cmp	r7, #0
 8022af4:	fb07 100c 	mla	r0, r7, ip, r1
 8022af8:	9603      	str	r6, [sp, #12]
 8022afa:	eb02 0e00 	add.w	lr, r2, r0
 8022afe:	f2c0 810a 	blt.w	8022d16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022b02:	45b8      	cmp	r8, r7
 8022b04:	f340 8107 	ble.w	8022d16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022b08:	2900      	cmp	r1, #0
 8022b0a:	f2c0 8102 	blt.w	8022d12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022b0e:	458c      	cmp	ip, r1
 8022b10:	f340 80ff 	ble.w	8022d12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022b14:	5c12      	ldrb	r2, [r2, r0]
 8022b16:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8022b1a:	1c4a      	adds	r2, r1, #1
 8022b1c:	f100 80fe 	bmi.w	8022d1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022b20:	4594      	cmp	ip, r2
 8022b22:	f340 80fb 	ble.w	8022d1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022b26:	2d00      	cmp	r5, #0
 8022b28:	f000 80fa 	beq.w	8022d20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8022b2c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022b30:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8022b34:	3701      	adds	r7, #1
 8022b36:	f100 80f7 	bmi.w	8022d28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022b3a:	45b8      	cmp	r8, r7
 8022b3c:	f340 80f4 	ble.w	8022d28 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022b40:	2c00      	cmp	r4, #0
 8022b42:	f000 80f4 	beq.w	8022d2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8022b46:	2900      	cmp	r1, #0
 8022b48:	eb0e 020c 	add.w	r2, lr, ip
 8022b4c:	f2c0 80ea 	blt.w	8022d24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022b50:	458c      	cmp	ip, r1
 8022b52:	f340 80e7 	ble.w	8022d24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022b56:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8022b5a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8022b5e:	3101      	adds	r1, #1
 8022b60:	f100 80e8 	bmi.w	8022d34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022b64:	458c      	cmp	ip, r1
 8022b66:	f340 80e5 	ble.w	8022d34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022b6a:	2d00      	cmp	r5, #0
 8022b6c:	f000 80e4 	beq.w	8022d38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022b70:	7852      	ldrb	r2, [r2, #1]
 8022b72:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022b76:	0e0b      	lsrs	r3, r1, #24
 8022b78:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8022b7c:	9300      	str	r3, [sp, #0]
 8022b7e:	b2a4      	uxth	r4, r4
 8022b80:	b2ab      	uxth	r3, r5
 8022b82:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8022b86:	fb03 f904 	mul.w	r9, r3, r4
 8022b8a:	fb0a f505 	mul.w	r5, sl, r5
 8022b8e:	011b      	lsls	r3, r3, #4
 8022b90:	eba3 0e09 	sub.w	lr, r3, r9
 8022b94:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022b98:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8022b9c:	0a28      	lsrs	r0, r5, #8
 8022b9e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022ba2:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022ba6:	4405      	add	r5, r0
 8022ba8:	0a2d      	lsrs	r5, r5, #8
 8022baa:	fb0a f303 	mul.w	r3, sl, r3
 8022bae:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022bb2:	9005      	str	r0, [sp, #20]
 8022bb4:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022bb8:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022bbc:	0a1b      	lsrs	r3, r3, #8
 8022bbe:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022bc2:	9306      	str	r3, [sp, #24]
 8022bc4:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022bc8:	fb0b f303 	mul.w	r3, fp, r3
 8022bcc:	0a1d      	lsrs	r5, r3, #8
 8022bce:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022bd2:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022bd6:	fb0b f606 	mul.w	r6, fp, r6
 8022bda:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8022bde:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022be2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022be6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022bea:	fb08 f707 	mul.w	r7, r8, r7
 8022bee:	441d      	add	r5, r3
 8022bf0:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022bf4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022bf8:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8022bfc:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022c00:	fb08 fc0c 	mul.w	ip, r8, ip
 8022c04:	0a1b      	lsrs	r3, r3, #8
 8022c06:	9307      	str	r3, [sp, #28]
 8022c08:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8022c0c:	0e0b      	lsrs	r3, r1, #24
 8022c0e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022c12:	435f      	muls	r7, r3
 8022c14:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022c18:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022c1c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022c20:	4460      	add	r0, ip
 8022c22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022c26:	b2a4      	uxth	r4, r4
 8022c28:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022c2c:	0a2d      	lsrs	r5, r5, #8
 8022c2e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022c32:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c36:	fa1f fe8e 	uxth.w	lr, lr
 8022c3a:	4359      	muls	r1, r3
 8022c3c:	1b12      	subs	r2, r2, r4
 8022c3e:	9b05      	ldr	r3, [sp, #20]
 8022c40:	44bc      	add	ip, r7
 8022c42:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022c46:	b292      	uxth	r2, r2
 8022c48:	fb05 f50e 	mul.w	r5, r5, lr
 8022c4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c50:	fb03 5502 	mla	r5, r3, r2, r5
 8022c54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c58:	9b06      	ldr	r3, [sp, #24]
 8022c5a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8022c5e:	0a36      	lsrs	r6, r6, #8
 8022c60:	0a00      	lsrs	r0, r0, #8
 8022c62:	fb0c 5509 	mla	r5, ip, r9, r5
 8022c66:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022c6a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022c6e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022c72:	fb00 5504 	mla	r5, r0, r4, r5
 8022c76:	fb0e f606 	mul.w	r6, lr, r6
 8022c7a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022c7e:	0a09      	lsrs	r1, r1, #8
 8022c80:	9b07      	ldr	r3, [sp, #28]
 8022c82:	fb02 6000 	mla	r0, r2, r0, r6
 8022c86:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022c8a:	fb09 0001 	mla	r0, r9, r1, r0
 8022c8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022c92:	fb0e fe0b 	mul.w	lr, lr, fp
 8022c96:	fb04 0003 	mla	r0, r4, r3, r0
 8022c9a:	fb02 e20a 	mla	r2, r2, sl, lr
 8022c9e:	9b00      	ldr	r3, [sp, #0]
 8022ca0:	fb04 2408 	mla	r4, r4, r8, r2
 8022ca4:	fb09 4903 	mla	r9, r9, r3, r4
 8022ca8:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022cac:	9b02      	ldr	r3, [sp, #8]
 8022cae:	9a04      	ldr	r2, [sp, #16]
 8022cb0:	fa5f f989 	uxtb.w	r9, r9
 8022cb4:	fb03 f109 	mul.w	r1, r3, r9
 8022cb8:	9b03      	ldr	r3, [sp, #12]
 8022cba:	0a2d      	lsrs	r5, r5, #8
 8022cbc:	0a00      	lsrs	r0, r0, #8
 8022cbe:	fb03 f309 	mul.w	r3, r3, r9
 8022cc2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022cc6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022cca:	4305      	orrs	r5, r0
 8022ccc:	fb02 f909 	mul.w	r9, r2, r9
 8022cd0:	1c58      	adds	r0, r3, #1
 8022cd2:	1c4a      	adds	r2, r1, #1
 8022cd4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022cd8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022cdc:	0a2b      	lsrs	r3, r5, #8
 8022cde:	0c2a      	lsrs	r2, r5, #16
 8022ce0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022ce4:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022ce8:	00db      	lsls	r3, r3, #3
 8022cea:	0212      	lsls	r2, r2, #8
 8022cec:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022cf0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022cf4:	4313      	orrs	r3, r2
 8022cf6:	f109 0201 	add.w	r2, r9, #1
 8022cfa:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8022cfe:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022d02:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022d06:	431d      	orrs	r5, r3
 8022d08:	9b01      	ldr	r3, [sp, #4]
 8022d0a:	801d      	strh	r5, [r3, #0]
 8022d0c:	b009      	add	sp, #36	; 0x24
 8022d0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022d12:	2000      	movs	r0, #0
 8022d14:	e701      	b.n	8022b1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022d16:	2600      	movs	r6, #0
 8022d18:	4630      	mov	r0, r6
 8022d1a:	e70b      	b.n	8022b34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022d1c:	2600      	movs	r6, #0
 8022d1e:	e709      	b.n	8022b34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022d20:	462e      	mov	r6, r5
 8022d22:	e707      	b.n	8022b34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022d24:	2700      	movs	r7, #0
 8022d26:	e71a      	b.n	8022b5e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022d28:	2100      	movs	r1, #0
 8022d2a:	460f      	mov	r7, r1
 8022d2c:	e723      	b.n	8022b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022d2e:	4621      	mov	r1, r4
 8022d30:	4627      	mov	r7, r4
 8022d32:	e720      	b.n	8022b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022d34:	2100      	movs	r1, #0
 8022d36:	e71e      	b.n	8022b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022d38:	4629      	mov	r1, r5
 8022d3a:	e71c      	b.n	8022b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022d3c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022d40:	b09b      	sub	sp, #108	; 0x6c
 8022d42:	9218      	str	r2, [sp, #96]	; 0x60
 8022d44:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022d46:	9116      	str	r1, [sp, #88]	; 0x58
 8022d48:	9307      	str	r3, [sp, #28]
 8022d4a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022d4e:	9019      	str	r0, [sp, #100]	; 0x64
 8022d50:	6850      	ldr	r0, [r2, #4]
 8022d52:	6812      	ldr	r2, [r2, #0]
 8022d54:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8022d56:	fb00 1303 	mla	r3, r0, r3, r1
 8022d5a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022d5e:	930a      	str	r3, [sp, #40]	; 0x28
 8022d60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022d62:	681b      	ldr	r3, [r3, #0]
 8022d64:	930f      	str	r3, [sp, #60]	; 0x3c
 8022d66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022d68:	685e      	ldr	r6, [r3, #4]
 8022d6a:	3604      	adds	r6, #4
 8022d6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022d6e:	2b00      	cmp	r3, #0
 8022d70:	dc03      	bgt.n	8022d7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022d72:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022d74:	2b00      	cmp	r3, #0
 8022d76:	f340 8373 	ble.w	8023460 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022d7a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022d7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022d84:	1e48      	subs	r0, r1, #1
 8022d86:	1e57      	subs	r7, r2, #1
 8022d88:	9b07      	ldr	r3, [sp, #28]
 8022d8a:	2b00      	cmp	r3, #0
 8022d8c:	f340 8190 	ble.w	80230b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022d90:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022d92:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022d96:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022d9a:	d406      	bmi.n	8022daa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022d9c:	4584      	cmp	ip, r0
 8022d9e:	da04      	bge.n	8022daa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022da0:	2b00      	cmp	r3, #0
 8022da2:	db02      	blt.n	8022daa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022da4:	42bb      	cmp	r3, r7
 8022da6:	f2c0 8184 	blt.w	80230b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022daa:	f11c 0c01 	adds.w	ip, ip, #1
 8022dae:	f100 8172 	bmi.w	8023096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022db2:	4561      	cmp	r1, ip
 8022db4:	f2c0 816f 	blt.w	8023096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022db8:	3301      	adds	r3, #1
 8022dba:	f100 816c 	bmi.w	8023096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022dbe:	429a      	cmp	r2, r3
 8022dc0:	f2c0 8169 	blt.w	8023096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022dc4:	9b07      	ldr	r3, [sp, #28]
 8022dc6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022dc8:	9317      	str	r3, [sp, #92]	; 0x5c
 8022dca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022dcc:	2b00      	cmp	r3, #0
 8022dce:	f340 818e 	ble.w	80230ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022dd2:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022dd4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022dd8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022dda:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022dde:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022de0:	141b      	asrs	r3, r3, #16
 8022de2:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022de6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022dea:	f100 81d1 	bmi.w	8023190 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022dee:	f101 38ff 	add.w	r8, r1, #4294967295
 8022df2:	4543      	cmp	r3, r8
 8022df4:	f280 81cc 	bge.w	8023190 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022df8:	f1bc 0f00 	cmp.w	ip, #0
 8022dfc:	f2c0 81c8 	blt.w	8023190 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022e00:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022e04:	45c4      	cmp	ip, r8
 8022e06:	f280 81c3 	bge.w	8023190 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022e0a:	b209      	sxth	r1, r1
 8022e0c:	fb0c 3301 	mla	r3, ip, r1, r3
 8022e10:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022e12:	eb04 0803 	add.w	r8, r4, r3
 8022e16:	5ce3      	ldrb	r3, [r4, r3]
 8022e18:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022e1c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022e20:	2a00      	cmp	r2, #0
 8022e22:	f000 81aa 	beq.w	802317a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022e26:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022e2a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022e2e:	940b      	str	r4, [sp, #44]	; 0x2c
 8022e30:	0e24      	lsrs	r4, r4, #24
 8022e32:	9412      	str	r4, [sp, #72]	; 0x48
 8022e34:	b178      	cbz	r0, 8022e56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022e36:	eb08 0c01 	add.w	ip, r8, r1
 8022e3a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022e3e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022e42:	9108      	str	r1, [sp, #32]
 8022e44:	0e09      	lsrs	r1, r1, #24
 8022e46:	9110      	str	r1, [sp, #64]	; 0x40
 8022e48:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022e4c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022e50:	910c      	str	r1, [sp, #48]	; 0x30
 8022e52:	0e09      	lsrs	r1, r1, #24
 8022e54:	9113      	str	r1, [sp, #76]	; 0x4c
 8022e56:	b292      	uxth	r2, r2
 8022e58:	b280      	uxth	r0, r0
 8022e5a:	fb02 f900 	mul.w	r9, r2, r0
 8022e5e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022e62:	0112      	lsls	r2, r2, #4
 8022e64:	eba2 0809 	sub.w	r8, r2, r9
 8022e68:	b280      	uxth	r0, r0
 8022e6a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022e6e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022e70:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022e72:	fa1f f888 	uxth.w	r8, r8
 8022e76:	1a12      	subs	r2, r2, r0
 8022e78:	b292      	uxth	r2, r2
 8022e7a:	fb08 f101 	mul.w	r1, r8, r1
 8022e7e:	fb02 110e 	mla	r1, r2, lr, r1
 8022e82:	fb00 1104 	mla	r1, r0, r4, r1
 8022e86:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022e88:	fb09 1104 	mla	r1, r9, r4, r1
 8022e8c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022e90:	2900      	cmp	r1, #0
 8022e92:	f000 80f5 	beq.w	8023080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022e96:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022e9a:	d01b      	beq.n	8022ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022e9c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022ea0:	fb0e fa0a 	mul.w	sl, lr, sl
 8022ea4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022ea8:	fb0e fe03 	mul.w	lr, lr, r3
 8022eac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022eb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022eb4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022eb8:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022ebc:	4453      	add	r3, sl
 8022ebe:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022ec2:	0a1b      	lsrs	r3, r3, #8
 8022ec4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ec8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022ecc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022ed0:	ea43 030c 	orr.w	r3, r3, ip
 8022ed4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022ed6:	2cff      	cmp	r4, #255	; 0xff
 8022ed8:	d021      	beq.n	8022f1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8022eda:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022edc:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022ee0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022ee2:	fb04 fb0b 	mul.w	fp, r4, fp
 8022ee6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022ee8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022eec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022eee:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022ef2:	fb04 fa0a 	mul.w	sl, r4, sl
 8022ef6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022efa:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022efe:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022f02:	44de      	add	lr, fp
 8022f04:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022f08:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022f0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022f10:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022f14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022f18:	ea4e 040a 	orr.w	r4, lr, sl
 8022f1c:	940b      	str	r4, [sp, #44]	; 0x2c
 8022f1e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022f20:	2cff      	cmp	r4, #255	; 0xff
 8022f22:	d021      	beq.n	8022f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8022f24:	9c08      	ldr	r4, [sp, #32]
 8022f26:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022f2a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022f2c:	fb04 fb0b 	mul.w	fp, r4, fp
 8022f30:	9c08      	ldr	r4, [sp, #32]
 8022f32:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022f36:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022f38:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022f3c:	fb04 fa0a 	mul.w	sl, r4, sl
 8022f40:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022f44:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022f48:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022f4c:	44de      	add	lr, fp
 8022f4e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022f52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022f56:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022f5a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022f5e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022f62:	ea4e 040a 	orr.w	r4, lr, sl
 8022f66:	9408      	str	r4, [sp, #32]
 8022f68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022f6a:	2cff      	cmp	r4, #255	; 0xff
 8022f6c:	d021      	beq.n	8022fb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022f6e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022f70:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022f74:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022f76:	fb04 fb0b 	mul.w	fp, r4, fp
 8022f7a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022f7c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022f80:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022f82:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022f86:	fb04 fa0a 	mul.w	sl, r4, sl
 8022f8a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022f8e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022f92:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022f96:	44de      	add	lr, fp
 8022f98:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022f9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022fa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022fa4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022fa8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022fac:	ea4e 040a 	orr.w	r4, lr, sl
 8022fb0:	940c      	str	r4, [sp, #48]	; 0x30
 8022fb2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022fb4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022fb8:	9c08      	ldr	r4, [sp, #32]
 8022fba:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022fbe:	fb08 fc0c 	mul.w	ip, r8, ip
 8022fc2:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022fc6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022fca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022fcc:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022fd0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022fd4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022fd6:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022fda:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022fde:	fb08 f80e 	mul.w	r8, r8, lr
 8022fe2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022fe6:	fb02 8303 	mla	r3, r2, r3, r8
 8022fea:	9a08      	ldr	r2, [sp, #32]
 8022fec:	f8b7 8000 	ldrh.w	r8, [r7]
 8022ff0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022ff4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022ff6:	fb00 330a 	mla	r3, r0, sl, r3
 8022ffa:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022ffe:	fb09 3900 	mla	r9, r9, r0, r3
 8023002:	43c9      	mvns	r1, r1
 8023004:	ea4f 2228 	mov.w	r2, r8, asr #8
 8023008:	fa5f fe81 	uxtb.w	lr, r1
 802300c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023010:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023014:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023018:	fb02 f20e 	mul.w	r2, r2, lr
 802301c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023020:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023024:	ea4c 0c09 	orr.w	ip, ip, r9
 8023028:	1c53      	adds	r3, r2, #1
 802302a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802302e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8023032:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8023036:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802303a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802303e:	4a63      	ldr	r2, [pc, #396]	; (80231cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8023040:	fb00 f00e 	mul.w	r0, r0, lr
 8023044:	b2db      	uxtb	r3, r3
 8023046:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802304a:	1c43      	adds	r3, r0, #1
 802304c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023050:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8023054:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8023058:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802305c:	b2c9      	uxtb	r1, r1
 802305e:	00db      	lsls	r3, r3, #3
 8023060:	fb01 f10e 	mul.w	r1, r1, lr
 8023064:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023068:	4313      	orrs	r3, r2
 802306a:	1c4a      	adds	r2, r1, #1
 802306c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023070:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8023074:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023078:	ea4c 0c03 	orr.w	ip, ip, r3
 802307c:	f8a7 c000 	strh.w	ip, [r7]
 8023080:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023082:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023084:	441a      	add	r2, r3
 8023086:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023088:	9225      	str	r2, [sp, #148]	; 0x94
 802308a:	441d      	add	r5, r3
 802308c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802308e:	3b01      	subs	r3, #1
 8023090:	3702      	adds	r7, #2
 8023092:	9317      	str	r3, [sp, #92]	; 0x5c
 8023094:	e699      	b.n	8022dca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023096:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023098:	9c25      	ldr	r4, [sp, #148]	; 0x94
 802309a:	441c      	add	r4, r3
 802309c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802309e:	9425      	str	r4, [sp, #148]	; 0x94
 80230a0:	441d      	add	r5, r3
 80230a2:	9b07      	ldr	r3, [sp, #28]
 80230a4:	3b01      	subs	r3, #1
 80230a6:	9307      	str	r3, [sp, #28]
 80230a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80230aa:	3302      	adds	r3, #2
 80230ac:	930a      	str	r3, [sp, #40]	; 0x28
 80230ae:	e66b      	b.n	8022d88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80230b0:	d024      	beq.n	80230fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80230b2:	9b07      	ldr	r3, [sp, #28]
 80230b4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80230b6:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80230b8:	3b01      	subs	r3, #1
 80230ba:	fb00 4003 	mla	r0, r0, r3, r4
 80230be:	1400      	asrs	r0, r0, #16
 80230c0:	f53f ae80 	bmi.w	8022dc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80230c4:	3901      	subs	r1, #1
 80230c6:	4288      	cmp	r0, r1
 80230c8:	f6bf ae7c 	bge.w	8022dc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80230cc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80230ce:	fb01 5303 	mla	r3, r1, r3, r5
 80230d2:	141b      	asrs	r3, r3, #16
 80230d4:	f53f ae76 	bmi.w	8022dc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80230d8:	3a01      	subs	r2, #1
 80230da:	4293      	cmp	r3, r2
 80230dc:	f6bf ae72 	bge.w	8022dc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80230e0:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80230e4:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80230e8:	f1bb 0f00 	cmp.w	fp, #0
 80230ec:	dc70      	bgt.n	80231d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80230ee:	9b07      	ldr	r3, [sp, #28]
 80230f0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80230f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80230f6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80230fa:	930a      	str	r3, [sp, #40]	; 0x28
 80230fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80230fe:	2b00      	cmp	r3, #0
 8023100:	f340 81ae 	ble.w	8023460 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8023104:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023108:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802310c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023110:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023112:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023116:	ee31 1a05 	vadd.f32	s2, s2, s10
 802311a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802311e:	eef0 6a62 	vmov.f32	s13, s5
 8023122:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023126:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802312a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802312e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8023132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023136:	eef0 6a43 	vmov.f32	s13, s6
 802313a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802313e:	ee12 2a90 	vmov	r2, s5
 8023142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023146:	fb92 f3f3 	sdiv	r3, r2, r3
 802314a:	ee13 2a10 	vmov	r2, s6
 802314e:	9327      	str	r3, [sp, #156]	; 0x9c
 8023150:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023152:	fb92 f3f3 	sdiv	r3, r2, r3
 8023156:	9328      	str	r3, [sp, #160]	; 0xa0
 8023158:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802315a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802315c:	3b01      	subs	r3, #1
 802315e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023162:	9316      	str	r3, [sp, #88]	; 0x58
 8023164:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023166:	bf08      	it	eq
 8023168:	4613      	moveq	r3, r2
 802316a:	ee16 5a90 	vmov	r5, s13
 802316e:	9307      	str	r3, [sp, #28]
 8023170:	eeb0 3a67 	vmov.f32	s6, s15
 8023174:	eef0 2a47 	vmov.f32	s5, s14
 8023178:	e5f8      	b.n	8022d6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 802317a:	2800      	cmp	r0, #0
 802317c:	f43f ae6b 	beq.w	8022e56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023180:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023184:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023188:	9108      	str	r1, [sp, #32]
 802318a:	0e09      	lsrs	r1, r1, #24
 802318c:	9110      	str	r1, [sp, #64]	; 0x40
 802318e:	e662      	b.n	8022e56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023190:	f113 0801 	adds.w	r8, r3, #1
 8023194:	f53f af74 	bmi.w	8023080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023198:	4541      	cmp	r1, r8
 802319a:	f6ff af71 	blt.w	8023080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802319e:	f11c 0801 	adds.w	r8, ip, #1
 80231a2:	f53f af6d 	bmi.w	8023080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80231a6:	45c6      	cmp	lr, r8
 80231a8:	f6ff af6a 	blt.w	8023080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80231ac:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80231b0:	b209      	sxth	r1, r1
 80231b2:	fa0f f38e 	sxth.w	r3, lr
 80231b6:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80231ba:	9301      	str	r3, [sp, #4]
 80231bc:	9100      	str	r1, [sp, #0]
 80231be:	4633      	mov	r3, r6
 80231c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80231c2:	9819      	ldr	r0, [sp, #100]	; 0x64
 80231c4:	4639      	mov	r1, r7
 80231c6:	f7ff fc7a 	bl	8022abe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80231ca:	e759      	b.n	8023080 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80231cc:	fffff800 	.word	0xfffff800
 80231d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80231d2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80231d4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80231d8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80231da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80231de:	1427      	asrs	r7, r4, #16
 80231e0:	142b      	asrs	r3, r5, #16
 80231e2:	fb01 7303 	mla	r3, r1, r3, r7
 80231e6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80231e8:	18e7      	adds	r7, r4, r3
 80231ea:	5ce3      	ldrb	r3, [r4, r3]
 80231ec:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80231f0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80231f4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80231f8:	2a00      	cmp	r2, #0
 80231fa:	f000 8127 	beq.w	802344c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80231fe:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023202:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023206:	940d      	str	r4, [sp, #52]	; 0x34
 8023208:	0e24      	lsrs	r4, r4, #24
 802320a:	9414      	str	r4, [sp, #80]	; 0x50
 802320c:	b170      	cbz	r0, 802322c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802320e:	eb07 0e01 	add.w	lr, r7, r1
 8023212:	5c79      	ldrb	r1, [r7, r1]
 8023214:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023218:	9109      	str	r1, [sp, #36]	; 0x24
 802321a:	0e09      	lsrs	r1, r1, #24
 802321c:	9111      	str	r1, [sp, #68]	; 0x44
 802321e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8023222:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023226:	910e      	str	r1, [sp, #56]	; 0x38
 8023228:	0e09      	lsrs	r1, r1, #24
 802322a:	9115      	str	r1, [sp, #84]	; 0x54
 802322c:	b292      	uxth	r2, r2
 802322e:	b280      	uxth	r0, r0
 8023230:	fb02 f800 	mul.w	r8, r2, r0
 8023234:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023238:	0112      	lsls	r2, r2, #4
 802323a:	eba2 0e08 	sub.w	lr, r2, r8
 802323e:	b280      	uxth	r0, r0
 8023240:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8023244:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023246:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023248:	fa1f fe8e 	uxth.w	lr, lr
 802324c:	1a09      	subs	r1, r1, r0
 802324e:	b289      	uxth	r1, r1
 8023250:	fb0e f202 	mul.w	r2, lr, r2
 8023254:	fb01 220c 	mla	r2, r1, ip, r2
 8023258:	fb00 2204 	mla	r2, r0, r4, r2
 802325c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802325e:	fb08 2204 	mla	r2, r8, r4, r2
 8023262:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023266:	2a00      	cmp	r2, #0
 8023268:	f000 80e5 	beq.w	8023436 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 802326c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023270:	d019      	beq.n	80232a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8023272:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023276:	fb0c fa0a 	mul.w	sl, ip, sl
 802327a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802327e:	fb0c fc03 	mul.w	ip, ip, r3
 8023282:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023286:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802328a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802328e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023292:	4453      	add	r3, sl
 8023294:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023298:	0a1b      	lsrs	r3, r3, #8
 802329a:	0a3f      	lsrs	r7, r7, #8
 802329c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80232a0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80232a4:	433b      	orrs	r3, r7
 80232a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80232a8:	2cff      	cmp	r4, #255	; 0xff
 80232aa:	d020      	beq.n	80232ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 80232ac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80232ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80232b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80232b4:	4367      	muls	r7, r4
 80232b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80232b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80232bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80232be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80232c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80232c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80232ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80232ce:	44bc      	add	ip, r7
 80232d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80232d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80232d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80232dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80232e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80232e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80232e8:	ea4c 040a 	orr.w	r4, ip, sl
 80232ec:	940d      	str	r4, [sp, #52]	; 0x34
 80232ee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80232f0:	2cff      	cmp	r4, #255	; 0xff
 80232f2:	d020      	beq.n	8023336 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80232f4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80232f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80232fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80232fc:	4367      	muls	r7, r4
 80232fe:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023300:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023304:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023306:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802330a:	fb04 fa0a 	mul.w	sl, r4, sl
 802330e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023312:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023316:	44bc      	add	ip, r7
 8023318:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802331c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023320:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023328:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802332c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023330:	ea4c 040a 	orr.w	r4, ip, sl
 8023334:	9409      	str	r4, [sp, #36]	; 0x24
 8023336:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023338:	2cff      	cmp	r4, #255	; 0xff
 802333a:	d020      	beq.n	802337e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802333c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802333e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023342:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8023344:	4367      	muls	r7, r4
 8023346:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023348:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802334c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802334e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023352:	fb04 fa0a 	mul.w	sl, r4, sl
 8023356:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802335a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802335e:	44bc      	add	ip, r7
 8023360:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023364:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023368:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802336c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023370:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023374:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023378:	ea4c 040a 	orr.w	r4, ip, sl
 802337c:	940e      	str	r4, [sp, #56]	; 0x38
 802337e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023380:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023384:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023386:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802338a:	fb0e f707 	mul.w	r7, lr, r7
 802338e:	fb01 770c 	mla	r7, r1, ip, r7
 8023392:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023396:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023398:	fb00 770c 	mla	r7, r0, ip, r7
 802339c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80233a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80233a2:	fb08 770c 	mla	r7, r8, ip, r7
 80233a6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80233aa:	fb0e fe0c 	mul.w	lr, lr, ip
 80233ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80233b2:	fb01 e303 	mla	r3, r1, r3, lr
 80233b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80233b8:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80233bc:	990e      	ldr	r1, [sp, #56]	; 0x38
 80233be:	fb00 330a 	mla	r3, r0, sl, r3
 80233c2:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80233c6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80233ca:	f8b9 3000 	ldrh.w	r3, [r9]
 80233ce:	43d2      	mvns	r2, r2
 80233d0:	1218      	asrs	r0, r3, #8
 80233d2:	b2d2      	uxtb	r2, r2
 80233d4:	10d9      	asrs	r1, r3, #3
 80233d6:	0a3f      	lsrs	r7, r7, #8
 80233d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80233dc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80233e0:	00db      	lsls	r3, r3, #3
 80233e2:	4350      	muls	r0, r2
 80233e4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80233e8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80233ec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80233f0:	b2db      	uxtb	r3, r3
 80233f2:	ea47 070c 	orr.w	r7, r7, ip
 80233f6:	4351      	muls	r1, r2
 80233f8:	4353      	muls	r3, r2
 80233fa:	1c42      	adds	r2, r0, #1
 80233fc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023400:	0c3a      	lsrs	r2, r7, #16
 8023402:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023406:	4a18      	ldr	r2, [pc, #96]	; (8023468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8023408:	b2c0      	uxtb	r0, r0
 802340a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802340e:	1c4a      	adds	r2, r1, #1
 8023410:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023414:	0a3a      	lsrs	r2, r7, #8
 8023416:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802341a:	00c9      	lsls	r1, r1, #3
 802341c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023420:	4301      	orrs	r1, r0
 8023422:	1c58      	adds	r0, r3, #1
 8023424:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023428:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802342c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8023430:	4308      	orrs	r0, r1
 8023432:	f8a9 0000 	strh.w	r0, [r9]
 8023436:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023438:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802343a:	441a      	add	r2, r3
 802343c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802343e:	9225      	str	r2, [sp, #148]	; 0x94
 8023440:	f109 0902 	add.w	r9, r9, #2
 8023444:	441d      	add	r5, r3
 8023446:	f10b 3bff 	add.w	fp, fp, #4294967295
 802344a:	e64d      	b.n	80230e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 802344c:	2800      	cmp	r0, #0
 802344e:	f43f aeed 	beq.w	802322c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023452:	5c79      	ldrb	r1, [r7, r1]
 8023454:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023458:	9109      	str	r1, [sp, #36]	; 0x24
 802345a:	0e09      	lsrs	r1, r1, #24
 802345c:	9111      	str	r1, [sp, #68]	; 0x44
 802345e:	e6e5      	b.n	802322c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8023460:	b01b      	add	sp, #108	; 0x6c
 8023462:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023466:	bf00      	nop
 8023468:	fffff800 	.word	0xfffff800

0802346c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 802346c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023470:	b085      	sub	sp, #20
 8023472:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023476:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 802347a:	9103      	str	r1, [sp, #12]
 802347c:	fb00 7406 	mla	r4, r0, r6, r7
 8023480:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8023484:	2800      	cmp	r0, #0
 8023486:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802348a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802348e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023492:	9501      	str	r5, [sp, #4]
 8023494:	eb03 0904 	add.w	r9, r3, r4
 8023498:	f2c0 8150 	blt.w	802373c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802349c:	4583      	cmp	fp, r0
 802349e:	f340 814d 	ble.w	802373c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80234a2:	2f00      	cmp	r7, #0
 80234a4:	f2c0 8146 	blt.w	8023734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80234a8:	42be      	cmp	r6, r7
 80234aa:	f340 8143 	ble.w	8023734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80234ae:	f813 c004 	ldrb.w	ip, [r3, r4]
 80234b2:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80234b6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80234ba:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80234be:	4355      	muls	r5, r2
 80234c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80234c4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80234c8:	fb0c f203 	mul.w	r2, ip, r3
 80234cc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80234d0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80234d4:	441d      	add	r5, r3
 80234d6:	f102 0320 	add.w	r3, r2, #32
 80234da:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80234de:	0a1b      	lsrs	r3, r3, #8
 80234e0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80234e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80234e8:	431c      	orrs	r4, r3
 80234ea:	1c7b      	adds	r3, r7, #1
 80234ec:	f100 812b 	bmi.w	8023746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80234f0:	429e      	cmp	r6, r3
 80234f2:	f340 8128 	ble.w	8023746 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80234f6:	2900      	cmp	r1, #0
 80234f8:	f000 8128 	beq.w	802374c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80234fc:	9a01      	ldr	r2, [sp, #4]
 80234fe:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023502:	8855      	ldrh	r5, [r2, #2]
 8023504:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023508:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802350c:	fb08 f802 	mul.w	r8, r8, r2
 8023510:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023514:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023518:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802351c:	435d      	muls	r5, r3
 802351e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023522:	44d0      	add	r8, sl
 8023524:	f105 0a20 	add.w	sl, r5, #32
 8023528:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802352c:	0a2d      	lsrs	r5, r5, #8
 802352e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023532:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023536:	432a      	orrs	r2, r5
 8023538:	3001      	adds	r0, #1
 802353a:	f100 810d 	bmi.w	8023758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802353e:	4583      	cmp	fp, r0
 8023540:	f340 810a 	ble.w	8023758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8023544:	f1be 0f00 	cmp.w	lr, #0
 8023548:	f000 810b 	beq.w	8023762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 802354c:	2f00      	cmp	r7, #0
 802354e:	f2c0 8100 	blt.w	8023752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8023552:	42be      	cmp	r6, r7
 8023554:	f340 80fd 	ble.w	8023752 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8023558:	9801      	ldr	r0, [sp, #4]
 802355a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802355e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023562:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023566:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802356a:	fb0a fa00 	mul.w	sl, sl, r0
 802356e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023572:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023576:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802357a:	fb05 f808 	mul.w	r8, r5, r8
 802357e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023582:	4482      	add	sl, r0
 8023584:	f108 0020 	add.w	r0, r8, #32
 8023588:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802358c:	0a00      	lsrs	r0, r0, #8
 802358e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023592:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023596:	ea4b 0b00 	orr.w	fp, fp, r0
 802359a:	3701      	adds	r7, #1
 802359c:	f100 80e6 	bmi.w	802376c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80235a0:	42be      	cmp	r6, r7
 80235a2:	f340 80e3 	ble.w	802376c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80235a6:	2900      	cmp	r1, #0
 80235a8:	f000 80e3 	beq.w	8023772 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80235ac:	3601      	adds	r6, #1
 80235ae:	9801      	ldr	r0, [sp, #4]
 80235b0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80235b4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80235b8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80235bc:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80235c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80235c4:	fb09 f906 	mul.w	r9, r9, r6
 80235c8:	fb07 f800 	mul.w	r8, r7, r0
 80235cc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80235d0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80235d4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80235d8:	44d1      	add	r9, sl
 80235da:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80235de:	f108 0020 	add.w	r0, r8, #32
 80235e2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80235e6:	0a00      	lsrs	r0, r0, #8
 80235e8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80235ec:	4330      	orrs	r0, r6
 80235ee:	b28e      	uxth	r6, r1
 80235f0:	fa1f f98e 	uxth.w	r9, lr
 80235f4:	fb06 f809 	mul.w	r8, r6, r9
 80235f8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80235fc:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023600:	0136      	lsls	r6, r6, #4
 8023602:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023606:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802360a:	9601      	str	r6, [sp, #4]
 802360c:	ea4a 0404 	orr.w	r4, sl, r4
 8023610:	fa1f f689 	uxth.w	r6, r9
 8023614:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023618:	fb11 f90e 	smulbb	r9, r1, lr
 802361c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023620:	9602      	str	r6, [sp, #8]
 8023622:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023626:	4626      	mov	r6, r4
 8023628:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802362c:	f1ce 0410 	rsb	r4, lr, #16
 8023630:	1a64      	subs	r4, r4, r1
 8023632:	ea4a 0202 	orr.w	r2, sl, r2
 8023636:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802363a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802363e:	434a      	muls	r2, r1
 8023640:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023644:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023648:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802364c:	fb04 2406 	mla	r4, r4, r6, r2
 8023650:	ea4a 0000 	orr.w	r0, sl, r0
 8023654:	fb09 4200 	mla	r2, r9, r0, r4
 8023658:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802365c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023660:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023664:	ea44 0b0b 	orr.w	fp, r4, fp
 8023668:	9c01      	ldr	r4, [sp, #4]
 802366a:	9e02      	ldr	r6, [sp, #8]
 802366c:	9903      	ldr	r1, [sp, #12]
 802366e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8023672:	1ba4      	subs	r4, r4, r6
 8023674:	9e01      	ldr	r6, [sp, #4]
 8023676:	8808      	ldrh	r0, [r1, #0]
 8023678:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802367c:	eba6 0608 	sub.w	r6, r6, r8
 8023680:	b2b6      	uxth	r6, r6
 8023682:	b2a4      	uxth	r4, r4
 8023684:	4373      	muls	r3, r6
 8023686:	fb0c 3304 	mla	r3, ip, r4, r3
 802368a:	9c02      	ldr	r4, [sp, #8]
 802368c:	fb04 3505 	mla	r5, r4, r5, r3
 8023690:	fb08 5707 	mla	r7, r8, r7, r5
 8023694:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023698:	b289      	uxth	r1, r1
 802369a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802369e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80236a2:	434f      	muls	r7, r1
 80236a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80236a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80236ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80236b0:	1c7b      	adds	r3, r7, #1
 80236b2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80236b6:	ea42 0e0e 	orr.w	lr, r2, lr
 80236ba:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80236be:	fa1f f28e 	uxth.w	r2, lr
 80236c2:	1203      	asrs	r3, r0, #8
 80236c4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80236c8:	b2ff      	uxtb	r7, r7
 80236ca:	1215      	asrs	r5, r2, #8
 80236cc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80236d0:	fb13 f307 	smulbb	r3, r3, r7
 80236d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80236d8:	fb05 3501 	mla	r5, r5, r1, r3
 80236dc:	10c3      	asrs	r3, r0, #3
 80236de:	10d4      	asrs	r4, r2, #3
 80236e0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80236e4:	fb13 f307 	smulbb	r3, r3, r7
 80236e8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80236ec:	fb04 3401 	mla	r4, r4, r1, r3
 80236f0:	00c3      	lsls	r3, r0, #3
 80236f2:	00d2      	lsls	r2, r2, #3
 80236f4:	b2db      	uxtb	r3, r3
 80236f6:	fb13 f307 	smulbb	r3, r3, r7
 80236fa:	b2d2      	uxtb	r2, r2
 80236fc:	fb02 3101 	mla	r1, r2, r1, r3
 8023700:	b2ad      	uxth	r5, r5
 8023702:	b289      	uxth	r1, r1
 8023704:	b2a4      	uxth	r4, r4
 8023706:	1c6b      	adds	r3, r5, #1
 8023708:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802370c:	1c62      	adds	r2, r4, #1
 802370e:	1c4b      	adds	r3, r1, #1
 8023710:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023714:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023718:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802371c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023720:	0964      	lsrs	r4, r4, #5
 8023722:	432b      	orrs	r3, r5
 8023724:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8023728:	9a03      	ldr	r2, [sp, #12]
 802372a:	4323      	orrs	r3, r4
 802372c:	8013      	strh	r3, [r2, #0]
 802372e:	b005      	add	sp, #20
 8023730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023734:	f04f 0c00 	mov.w	ip, #0
 8023738:	4664      	mov	r4, ip
 802373a:	e6d6      	b.n	80234ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802373c:	2300      	movs	r3, #0
 802373e:	469c      	mov	ip, r3
 8023740:	461a      	mov	r2, r3
 8023742:	461c      	mov	r4, r3
 8023744:	e6f8      	b.n	8023538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023746:	2300      	movs	r3, #0
 8023748:	461a      	mov	r2, r3
 802374a:	e6f5      	b.n	8023538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802374c:	460b      	mov	r3, r1
 802374e:	460a      	mov	r2, r1
 8023750:	e6f2      	b.n	8023538 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8023752:	2500      	movs	r5, #0
 8023754:	46ab      	mov	fp, r5
 8023756:	e720      	b.n	802359a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8023758:	2700      	movs	r7, #0
 802375a:	463d      	mov	r5, r7
 802375c:	4638      	mov	r0, r7
 802375e:	46bb      	mov	fp, r7
 8023760:	e745      	b.n	80235ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023762:	4677      	mov	r7, lr
 8023764:	4675      	mov	r5, lr
 8023766:	4670      	mov	r0, lr
 8023768:	46f3      	mov	fp, lr
 802376a:	e740      	b.n	80235ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802376c:	2700      	movs	r7, #0
 802376e:	4638      	mov	r0, r7
 8023770:	e73d      	b.n	80235ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023772:	460f      	mov	r7, r1
 8023774:	4608      	mov	r0, r1
 8023776:	e73a      	b.n	80235ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08023778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802377c:	b097      	sub	sp, #92	; 0x5c
 802377e:	9214      	str	r2, [sp, #80]	; 0x50
 8023780:	9308      	str	r3, [sp, #32]
 8023782:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023784:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023788:	9312      	str	r3, [sp, #72]	; 0x48
 802378a:	9111      	str	r1, [sp, #68]	; 0x44
 802378c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023790:	9015      	str	r0, [sp, #84]	; 0x54
 8023792:	6850      	ldr	r0, [r2, #4]
 8023794:	6812      	ldr	r2, [r2, #0]
 8023796:	fb00 1303 	mla	r3, r0, r3, r1
 802379a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802379e:	9309      	str	r3, [sp, #36]	; 0x24
 80237a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80237a2:	681b      	ldr	r3, [r3, #0]
 80237a4:	930b      	str	r3, [sp, #44]	; 0x2c
 80237a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80237a8:	685b      	ldr	r3, [r3, #4]
 80237aa:	930c      	str	r3, [sp, #48]	; 0x30
 80237ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80237b0:	930a      	str	r3, [sp, #40]	; 0x28
 80237b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80237b4:	2b00      	cmp	r3, #0
 80237b6:	dc03      	bgt.n	80237c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80237b8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80237ba:	2b00      	cmp	r3, #0
 80237bc:	f340 83cb 	ble.w	8023f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80237c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80237c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80237c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80237ca:	1e48      	subs	r0, r1, #1
 80237cc:	1e55      	subs	r5, r2, #1
 80237ce:	9b08      	ldr	r3, [sp, #32]
 80237d0:	2b00      	cmp	r3, #0
 80237d2:	f340 81a3 	ble.w	8023b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80237d6:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80237d8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80237da:	1436      	asrs	r6, r6, #16
 80237dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 80237e0:	d406      	bmi.n	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80237e2:	4286      	cmp	r6, r0
 80237e4:	da04      	bge.n	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80237e6:	2b00      	cmp	r3, #0
 80237e8:	db02      	blt.n	80237f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80237ea:	42ab      	cmp	r3, r5
 80237ec:	f2c0 8197 	blt.w	8023b1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80237f0:	3601      	adds	r6, #1
 80237f2:	f100 8184 	bmi.w	8023afe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80237f6:	42b1      	cmp	r1, r6
 80237f8:	f2c0 8181 	blt.w	8023afe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80237fc:	3301      	adds	r3, #1
 80237fe:	f100 817e 	bmi.w	8023afe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023802:	429a      	cmp	r2, r3
 8023804:	f2c0 817b 	blt.w	8023afe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023808:	9b08      	ldr	r3, [sp, #32]
 802380a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802380c:	9313      	str	r3, [sp, #76]	; 0x4c
 802380e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023812:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023814:	2b00      	cmp	r3, #0
 8023816:	f340 81a4 	ble.w	8023b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802381a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802381c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802381e:	1418      	asrs	r0, r3, #16
 8023820:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023822:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023826:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023828:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802382c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802382e:	142d      	asrs	r5, r5, #16
 8023830:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023834:	f100 81f8 	bmi.w	8023c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023838:	f102 3eff 	add.w	lr, r2, #4294967295
 802383c:	4575      	cmp	r5, lr
 802383e:	f280 81f3 	bge.w	8023c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023842:	2800      	cmp	r0, #0
 8023844:	f2c0 81f0 	blt.w	8023c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023848:	f103 3eff 	add.w	lr, r3, #4294967295
 802384c:	4570      	cmp	r0, lr
 802384e:	f280 81eb 	bge.w	8023c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8023852:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023854:	b212      	sxth	r2, r2
 8023856:	fb00 5002 	mla	r0, r0, r2, r5
 802385a:	fa1f fe81 	uxth.w	lr, r1
 802385e:	eb03 0a00 	add.w	sl, r3, r0
 8023862:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023866:	f813 9000 	ldrb.w	r9, [r3, r0]
 802386a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802386e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023872:	b29b      	uxth	r3, r3
 8023874:	f1bc 0f00 	cmp.w	ip, #0
 8023878:	f000 81b9 	beq.w	8023bee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802387c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023880:	940d      	str	r4, [sp, #52]	; 0x34
 8023882:	eb0a 0b02 	add.w	fp, sl, r2
 8023886:	fa1f fa8c 	uxth.w	sl, ip
 802388a:	fb0a fe0e 	mul.w	lr, sl, lr
 802388e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023892:	fa1f fa8a 	uxth.w	sl, sl
 8023896:	eba5 050e 	sub.w	r5, r5, lr
 802389a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802389e:	940e      	str	r4, [sp, #56]	; 0x38
 80238a0:	eba3 030a 	sub.w	r3, r3, sl
 80238a4:	b2ad      	uxth	r5, r5
 80238a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80238a8:	b29b      	uxth	r3, r3
 80238aa:	fb08 f505 	mul.w	r5, r8, r5
 80238ae:	fb09 5303 	mla	r3, r9, r3, r5
 80238b2:	fb0a 3304 	mla	r3, sl, r4, r3
 80238b6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80238b8:	fb0e 3304 	mla	r3, lr, r4, r3
 80238bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80238c0:	2b00      	cmp	r3, #0
 80238c2:	f000 810f 	beq.w	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80238c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80238c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80238cc:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80238d0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80238d4:	f000 8190 	beq.w	8023bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80238d8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80238dc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80238e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80238e4:	fb09 f000 	mul.w	r0, r9, r0
 80238e8:	fb0a fe0e 	mul.w	lr, sl, lr
 80238ec:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80238f0:	f100 0b20 	add.w	fp, r0, #32
 80238f4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80238f8:	44ce      	add	lr, r9
 80238fa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80238fe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023902:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023906:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802390a:	ea4e 0909 	orr.w	r9, lr, r9
 802390e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023912:	8868      	ldrh	r0, [r5, #2]
 8023914:	d019      	beq.n	802394a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023916:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802391a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802391e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023922:	fb08 f800 	mul.w	r8, r8, r0
 8023926:	fb0a fe0e 	mul.w	lr, sl, lr
 802392a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802392e:	f108 0b20 	add.w	fp, r8, #32
 8023932:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023936:	4486      	add	lr, r0
 8023938:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802393c:	0a00      	lsrs	r0, r0, #8
 802393e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023942:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023946:	ea4e 0000 	orr.w	r0, lr, r0
 802394a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802394e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023952:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023956:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802395a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802395e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023962:	ea4e 0909 	orr.w	r9, lr, r9
 8023966:	ea4a 0000 	orr.w	r0, sl, r0
 802396a:	f1bc 0f00 	cmp.w	ip, #0
 802396e:	f000 8145 	beq.w	8023bfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8023972:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023976:	3a01      	subs	r2, #1
 8023978:	0052      	lsls	r2, r2, #1
 802397a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802397c:	3202      	adds	r2, #2
 802397e:	2cff      	cmp	r4, #255	; 0xff
 8023980:	eb05 0e02 	add.w	lr, r5, r2
 8023984:	5aaa      	ldrh	r2, [r5, r2]
 8023986:	d018      	beq.n	80239ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023988:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802398c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023990:	fb04 fa02 	mul.w	sl, r4, r2
 8023994:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023998:	fb08 f805 	mul.w	r8, r8, r5
 802399c:	f10a 0520 	add.w	r5, sl, #32
 80239a0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80239a4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80239a8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80239ac:	4442      	add	r2, r8
 80239ae:	0a2d      	lsrs	r5, r5, #8
 80239b0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80239b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80239b8:	432a      	orrs	r2, r5
 80239ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80239bc:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80239c0:	2cff      	cmp	r4, #255	; 0xff
 80239c2:	d01a      	beq.n	80239fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80239c4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80239c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80239cc:	fb04 fa05 	mul.w	sl, r4, r5
 80239d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80239d4:	fb08 f80e 	mul.w	r8, r8, lr
 80239d8:	f10a 0e20 	add.w	lr, sl, #32
 80239dc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80239e0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80239e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80239e8:	4445      	add	r5, r8
 80239ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80239ee:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80239f2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80239f6:	ea45 050e 	orr.w	r5, r5, lr
 80239fa:	fb1c fe01 	smulbb	lr, ip, r1
 80239fe:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023a02:	f1cc 0810 	rsb	r8, ip, #16
 8023a06:	eba8 0801 	sub.w	r8, r8, r1
 8023a0a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023a0e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023a12:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023a16:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023a1a:	4341      	muls	r1, r0
 8023a1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a20:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023a24:	ea4a 0202 	orr.w	r2, sl, r2
 8023a28:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023a2c:	fb09 1108 	mla	r1, r9, r8, r1
 8023a30:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023a34:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023a38:	fb0c 1102 	mla	r1, ip, r2, r1
 8023a3c:	ea4b 0505 	orr.w	r5, fp, r5
 8023a40:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023a44:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023a48:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023a4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a50:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023a54:	ea42 0e0e 	orr.w	lr, r2, lr
 8023a58:	fa1f f28e 	uxth.w	r2, lr
 8023a5c:	2bff      	cmp	r3, #255	; 0xff
 8023a5e:	d103      	bne.n	8023a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8023a60:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023a62:	29ff      	cmp	r1, #255	; 0xff
 8023a64:	f000 80de 	beq.w	8023c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8023a68:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023a6a:	8838      	ldrh	r0, [r7, #0]
 8023a6c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023a6e:	434b      	muls	r3, r1
 8023a70:	f103 0c01 	add.w	ip, r3, #1
 8023a74:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023a78:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023a7c:	fa5f fc83 	uxtb.w	ip, r3
 8023a80:	1203      	asrs	r3, r0, #8
 8023a82:	1215      	asrs	r5, r2, #8
 8023a84:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023a88:	fb13 f30c 	smulbb	r3, r3, ip
 8023a8c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023a90:	fb05 3501 	mla	r5, r5, r1, r3
 8023a94:	10c3      	asrs	r3, r0, #3
 8023a96:	10d1      	asrs	r1, r2, #3
 8023a98:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023a9c:	fb13 f30c 	smulbb	r3, r3, ip
 8023aa0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023aa4:	fb01 3104 	mla	r1, r1, r4, r3
 8023aa8:	00c3      	lsls	r3, r0, #3
 8023aaa:	00d2      	lsls	r2, r2, #3
 8023aac:	b2db      	uxtb	r3, r3
 8023aae:	b2d2      	uxtb	r2, r2
 8023ab0:	fb13 f30c 	smulbb	r3, r3, ip
 8023ab4:	b2ad      	uxth	r5, r5
 8023ab6:	fb02 3304 	mla	r3, r2, r4, r3
 8023aba:	b29a      	uxth	r2, r3
 8023abc:	1c6b      	adds	r3, r5, #1
 8023abe:	b289      	uxth	r1, r1
 8023ac0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023ac4:	1c53      	adds	r3, r2, #1
 8023ac6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023aca:	1c4a      	adds	r2, r1, #1
 8023acc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023ad0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023ad4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023ad8:	0949      	lsrs	r1, r1, #5
 8023ada:	432b      	orrs	r3, r5
 8023adc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023ae0:	430b      	orrs	r3, r1
 8023ae2:	803b      	strh	r3, [r7, #0]
 8023ae4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023ae6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023ae8:	4413      	add	r3, r2
 8023aea:	9321      	str	r3, [sp, #132]	; 0x84
 8023aec:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023aee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023af0:	441a      	add	r2, r3
 8023af2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023af4:	9222      	str	r2, [sp, #136]	; 0x88
 8023af6:	3b01      	subs	r3, #1
 8023af8:	3702      	adds	r7, #2
 8023afa:	9313      	str	r3, [sp, #76]	; 0x4c
 8023afc:	e689      	b.n	8023812 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8023afe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023b00:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023b02:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023b04:	4433      	add	r3, r6
 8023b06:	9321      	str	r3, [sp, #132]	; 0x84
 8023b08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023b0a:	441c      	add	r4, r3
 8023b0c:	9b08      	ldr	r3, [sp, #32]
 8023b0e:	9422      	str	r4, [sp, #136]	; 0x88
 8023b10:	3b01      	subs	r3, #1
 8023b12:	9308      	str	r3, [sp, #32]
 8023b14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b16:	3302      	adds	r3, #2
 8023b18:	9309      	str	r3, [sp, #36]	; 0x24
 8023b1a:	e658      	b.n	80237ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8023b1c:	d028      	beq.n	8023b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023b1e:	9b08      	ldr	r3, [sp, #32]
 8023b20:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8023b22:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8023b24:	3b01      	subs	r3, #1
 8023b26:	fb00 5003 	mla	r0, r0, r3, r5
 8023b2a:	1400      	asrs	r0, r0, #16
 8023b2c:	f53f ae6c 	bmi.w	8023808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b30:	3901      	subs	r1, #1
 8023b32:	4288      	cmp	r0, r1
 8023b34:	f6bf ae68 	bge.w	8023808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b38:	9924      	ldr	r1, [sp, #144]	; 0x90
 8023b3a:	9822      	ldr	r0, [sp, #136]	; 0x88
 8023b3c:	fb01 0303 	mla	r3, r1, r3, r0
 8023b40:	141b      	asrs	r3, r3, #16
 8023b42:	f53f ae61 	bmi.w	8023808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b46:	3a01      	subs	r2, #1
 8023b48:	4293      	cmp	r3, r2
 8023b4a:	f6bf ae5d 	bge.w	8023808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b4e:	9b08      	ldr	r3, [sp, #32]
 8023b50:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8023b54:	9313      	str	r3, [sp, #76]	; 0x4c
 8023b56:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023b5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023b5c:	2b00      	cmp	r3, #0
 8023b5e:	f300 8082 	bgt.w	8023c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8023b62:	9b08      	ldr	r3, [sp, #32]
 8023b64:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023b68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023b6a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023b6e:	9309      	str	r3, [sp, #36]	; 0x24
 8023b70:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023b72:	2b00      	cmp	r3, #0
 8023b74:	f340 81ef 	ble.w	8023f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023b78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023b7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023b80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023b84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023b86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023b8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023b8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023b92:	eef0 6a62 	vmov.f32	s13, s5
 8023b96:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023b9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023b9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023ba2:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023ba6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023baa:	eef0 6a43 	vmov.f32	s13, s6
 8023bae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023bb2:	ee12 2a90 	vmov	r2, s5
 8023bb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023bba:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bbe:	ee13 2a10 	vmov	r2, s6
 8023bc2:	9323      	str	r3, [sp, #140]	; 0x8c
 8023bc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023bc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bca:	9324      	str	r3, [sp, #144]	; 0x90
 8023bcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023bce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023bd0:	3b01      	subs	r3, #1
 8023bd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bd6:	9311      	str	r3, [sp, #68]	; 0x44
 8023bd8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023bda:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8023bde:	bf08      	it	eq
 8023be0:	4613      	moveq	r3, r2
 8023be2:	9308      	str	r3, [sp, #32]
 8023be4:	eeb0 3a67 	vmov.f32	s6, s15
 8023be8:	eef0 2a47 	vmov.f32	s5, s14
 8023bec:	e5e1      	b.n	80237b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023bee:	fb08 f505 	mul.w	r5, r8, r5
 8023bf2:	fb09 5303 	mla	r3, r9, r3, r5
 8023bf6:	e661      	b.n	80238bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023bf8:	4681      	mov	r9, r0
 8023bfa:	e688      	b.n	802390e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8023bfc:	f1c1 0210 	rsb	r2, r1, #16
 8023c00:	4341      	muls	r1, r0
 8023c02:	fb09 1902 	mla	r9, r9, r2, r1
 8023c06:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023c0a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023c0e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023c12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023c16:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023c1a:	ea42 0909 	orr.w	r9, r2, r9
 8023c1e:	fa1f f289 	uxth.w	r2, r9
 8023c22:	e71b      	b.n	8023a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023c24:	803a      	strh	r2, [r7, #0]
 8023c26:	e75d      	b.n	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023c28:	f115 0e01 	adds.w	lr, r5, #1
 8023c2c:	f53f af5a 	bmi.w	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023c30:	4572      	cmp	r2, lr
 8023c32:	f6ff af57 	blt.w	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023c36:	f110 0e01 	adds.w	lr, r0, #1
 8023c3a:	f53f af53 	bmi.w	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023c3e:	4573      	cmp	r3, lr
 8023c40:	f6ff af50 	blt.w	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023c44:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023c46:	9502      	str	r5, [sp, #8]
 8023c48:	b21b      	sxth	r3, r3
 8023c4a:	b212      	sxth	r2, r2
 8023c4c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023c50:	9301      	str	r3, [sp, #4]
 8023c52:	9200      	str	r2, [sp, #0]
 8023c54:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023c58:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023c5c:	4639      	mov	r1, r7
 8023c5e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023c60:	f7ff fc04 	bl	802346c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023c64:	e73e      	b.n	8023ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023c66:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023c68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023c6c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023c6e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023c72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023c74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c78:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023c7a:	141f      	asrs	r7, r3, #16
 8023c7c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023c7e:	141b      	asrs	r3, r3, #16
 8023c80:	fb01 3707 	mla	r7, r1, r7, r3
 8023c84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023c86:	fa1f fc82 	uxth.w	ip, r2
 8023c8a:	eb03 0a07 	add.w	sl, r3, r7
 8023c8e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023c92:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023c96:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023c9a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023c9e:	b29b      	uxth	r3, r3
 8023ca0:	2d00      	cmp	r5, #0
 8023ca2:	f000 813d 	beq.w	8023f20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023ca6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023caa:	940f      	str	r4, [sp, #60]	; 0x3c
 8023cac:	eb0a 0b01 	add.w	fp, sl, r1
 8023cb0:	fa1f fa85 	uxth.w	sl, r5
 8023cb4:	fb0a fc0c 	mul.w	ip, sl, ip
 8023cb8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023cbc:	fa1f fa8a 	uxth.w	sl, sl
 8023cc0:	eba0 000c 	sub.w	r0, r0, ip
 8023cc4:	eba3 030a 	sub.w	r3, r3, sl
 8023cc8:	b280      	uxth	r0, r0
 8023cca:	fb08 f000 	mul.w	r0, r8, r0
 8023cce:	b29b      	uxth	r3, r3
 8023cd0:	fb09 0303 	mla	r3, r9, r3, r0
 8023cd4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023cd6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023cda:	9410      	str	r4, [sp, #64]	; 0x40
 8023cdc:	fb0a 3300 	mla	r3, sl, r0, r3
 8023ce0:	fb0c 3304 	mla	r3, ip, r4, r3
 8023ce4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023ce8:	2b00      	cmp	r3, #0
 8023cea:	f000 810b 	beq.w	8023f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023cee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023cf0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023cf2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023cf6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023cfa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023cfe:	f000 8114 	beq.w	8023f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023d02:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023d06:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023d0a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d0e:	fb09 f707 	mul.w	r7, r9, r7
 8023d12:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d16:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023d1a:	f107 0b20 	add.w	fp, r7, #32
 8023d1e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023d22:	44cc      	add	ip, r9
 8023d24:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023d28:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023d2c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023d30:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023d34:	ea4c 0909 	orr.w	r9, ip, r9
 8023d38:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023d3c:	8847      	ldrh	r7, [r0, #2]
 8023d3e:	d019      	beq.n	8023d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023d40:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023d44:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023d48:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d4c:	fb08 f807 	mul.w	r8, r8, r7
 8023d50:	fb0a fc0c 	mul.w	ip, sl, ip
 8023d54:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023d58:	f108 0b20 	add.w	fp, r8, #32
 8023d5c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023d60:	44bc      	add	ip, r7
 8023d62:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023d66:	0a3f      	lsrs	r7, r7, #8
 8023d68:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023d6c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d70:	ea4c 0707 	orr.w	r7, ip, r7
 8023d74:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023d78:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023d7c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023d80:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023d84:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023d88:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023d8c:	ea4c 0909 	orr.w	r9, ip, r9
 8023d90:	ea4a 0707 	orr.w	r7, sl, r7
 8023d94:	2d00      	cmp	r5, #0
 8023d96:	f000 80ca 	beq.w	8023f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023d9a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023d9e:	3901      	subs	r1, #1
 8023da0:	0049      	lsls	r1, r1, #1
 8023da2:	3102      	adds	r1, #2
 8023da4:	eb00 0c01 	add.w	ip, r0, r1
 8023da8:	5a41      	ldrh	r1, [r0, r1]
 8023daa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023dac:	28ff      	cmp	r0, #255	; 0xff
 8023dae:	d019      	beq.n	8023de4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023db0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023db2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023db6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023dba:	fb04 fa01 	mul.w	sl, r4, r1
 8023dbe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023dc2:	fb08 f800 	mul.w	r8, r8, r0
 8023dc6:	f10a 0020 	add.w	r0, sl, #32
 8023dca:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023dce:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023dd2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023dd6:	4441      	add	r1, r8
 8023dd8:	0a00      	lsrs	r0, r0, #8
 8023dda:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023dde:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023de2:	4301      	orrs	r1, r0
 8023de4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023de6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023dea:	2cff      	cmp	r4, #255	; 0xff
 8023dec:	d01a      	beq.n	8023e24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8023dee:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023df2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023df6:	fb04 fa00 	mul.w	sl, r4, r0
 8023dfa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023dfe:	fb08 f80c 	mul.w	r8, r8, ip
 8023e02:	f10a 0c20 	add.w	ip, sl, #32
 8023e06:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023e0a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023e0e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023e12:	4440      	add	r0, r8
 8023e14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e18:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023e1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023e20:	ea40 000c 	orr.w	r0, r0, ip
 8023e24:	fb15 fc02 	smulbb	ip, r5, r2
 8023e28:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023e2c:	f1c5 0810 	rsb	r8, r5, #16
 8023e30:	eba8 0802 	sub.w	r8, r8, r2
 8023e34:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023e38:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023e3c:	437a      	muls	r2, r7
 8023e3e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023e42:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023e46:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023e4a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023e4e:	fb09 2208 	mla	r2, r9, r8, r2
 8023e52:	ea4a 0101 	orr.w	r1, sl, r1
 8023e56:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023e5a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023e5e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023e62:	fb05 2201 	mla	r2, r5, r1, r2
 8023e66:	ea4b 0000 	orr.w	r0, fp, r0
 8023e6a:	fb0c 2200 	mla	r2, ip, r0, r2
 8023e6e:	0d57      	lsrs	r7, r2, #21
 8023e70:	0952      	lsrs	r2, r2, #5
 8023e72:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023e76:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023e7a:	433a      	orrs	r2, r7
 8023e7c:	2bff      	cmp	r3, #255	; 0xff
 8023e7e:	b292      	uxth	r2, r2
 8023e80:	d102      	bne.n	8023e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023e82:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023e84:	29ff      	cmp	r1, #255	; 0xff
 8023e86:	d063      	beq.n	8023f50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023e88:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023e8a:	f8be 1000 	ldrh.w	r1, [lr]
 8023e8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023e90:	4343      	muls	r3, r0
 8023e92:	1c58      	adds	r0, r3, #1
 8023e94:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023e98:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023e9c:	1208      	asrs	r0, r1, #8
 8023e9e:	b2db      	uxtb	r3, r3
 8023ea0:	1215      	asrs	r5, r2, #8
 8023ea2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023ea6:	fb10 f003 	smulbb	r0, r0, r3
 8023eaa:	10cf      	asrs	r7, r1, #3
 8023eac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023eb0:	00c9      	lsls	r1, r1, #3
 8023eb2:	fb05 0504 	mla	r5, r5, r4, r0
 8023eb6:	b2c9      	uxtb	r1, r1
 8023eb8:	10d0      	asrs	r0, r2, #3
 8023eba:	00d2      	lsls	r2, r2, #3
 8023ebc:	fb11 f103 	smulbb	r1, r1, r3
 8023ec0:	b2d2      	uxtb	r2, r2
 8023ec2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023ec6:	fb02 1204 	mla	r2, r2, r4, r1
 8023eca:	fb17 f703 	smulbb	r7, r7, r3
 8023ece:	b2ad      	uxth	r5, r5
 8023ed0:	b292      	uxth	r2, r2
 8023ed2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023ed6:	fb00 7004 	mla	r0, r0, r4, r7
 8023eda:	1c6b      	adds	r3, r5, #1
 8023edc:	1c57      	adds	r7, r2, #1
 8023ede:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023ee2:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023ee6:	b280      	uxth	r0, r0
 8023ee8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023eec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023ef0:	433d      	orrs	r5, r7
 8023ef2:	1c47      	adds	r7, r0, #1
 8023ef4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023ef8:	097f      	lsrs	r7, r7, #5
 8023efa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023efe:	433d      	orrs	r5, r7
 8023f00:	f8ae 5000 	strh.w	r5, [lr]
 8023f04:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023f06:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023f08:	4413      	add	r3, r2
 8023f0a:	9321      	str	r3, [sp, #132]	; 0x84
 8023f0c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023f0e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023f10:	441a      	add	r2, r3
 8023f12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023f14:	9222      	str	r2, [sp, #136]	; 0x88
 8023f16:	3b01      	subs	r3, #1
 8023f18:	f10e 0e02 	add.w	lr, lr, #2
 8023f1c:	9313      	str	r3, [sp, #76]	; 0x4c
 8023f1e:	e61c      	b.n	8023b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023f20:	fb08 f000 	mul.w	r0, r8, r0
 8023f24:	fb09 0303 	mla	r3, r9, r3, r0
 8023f28:	e6dc      	b.n	8023ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8023f2a:	46b9      	mov	r9, r7
 8023f2c:	e704      	b.n	8023d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8023f2e:	f1c2 0110 	rsb	r1, r2, #16
 8023f32:	437a      	muls	r2, r7
 8023f34:	fb09 2901 	mla	r9, r9, r1, r2
 8023f38:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023f3c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023f40:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023f44:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f48:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f4c:	4302      	orrs	r2, r0
 8023f4e:	e795      	b.n	8023e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023f50:	f8ae 2000 	strh.w	r2, [lr]
 8023f54:	e7d6      	b.n	8023f04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023f56:	b017      	add	sp, #92	; 0x5c
 8023f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023f60:	b085      	sub	sp, #20
 8023f62:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023f66:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023f6a:	9103      	str	r1, [sp, #12]
 8023f6c:	fb00 7406 	mla	r4, r0, r6, r7
 8023f70:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023f74:	2800      	cmp	r0, #0
 8023f76:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8023f7a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8023f7e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023f82:	9501      	str	r5, [sp, #4]
 8023f84:	eb02 0904 	add.w	r9, r2, r4
 8023f88:	f2c0 8141 	blt.w	802420e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023f8c:	4583      	cmp	fp, r0
 8023f8e:	f340 813e 	ble.w	802420e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023f92:	2f00      	cmp	r7, #0
 8023f94:	f2c0 8137 	blt.w	8024206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023f98:	42be      	cmp	r6, r7
 8023f9a:	f340 8134 	ble.w	8024206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023f9e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023fa2:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023fa6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023faa:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8023fae:	4355      	muls	r5, r2
 8023fb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023fb4:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023fb8:	fb0c f203 	mul.w	r2, ip, r3
 8023fbc:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023fc0:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023fc4:	441d      	add	r5, r3
 8023fc6:	f102 0320 	add.w	r3, r2, #32
 8023fca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023fce:	0a1b      	lsrs	r3, r3, #8
 8023fd0:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023fd4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023fd8:	431c      	orrs	r4, r3
 8023fda:	1c7b      	adds	r3, r7, #1
 8023fdc:	f100 811c 	bmi.w	8024218 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023fe0:	429e      	cmp	r6, r3
 8023fe2:	f340 8119 	ble.w	8024218 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023fe6:	2900      	cmp	r1, #0
 8023fe8:	f000 8119 	beq.w	802421e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8023fec:	9a01      	ldr	r2, [sp, #4]
 8023fee:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023ff2:	8855      	ldrh	r5, [r2, #2]
 8023ff4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023ff8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023ffc:	fb08 f802 	mul.w	r8, r8, r2
 8024000:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024004:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8024008:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802400c:	435d      	muls	r5, r3
 802400e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024012:	44d0      	add	r8, sl
 8024014:	f105 0a20 	add.w	sl, r5, #32
 8024018:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802401c:	0a2d      	lsrs	r5, r5, #8
 802401e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8024022:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024026:	432a      	orrs	r2, r5
 8024028:	3001      	adds	r0, #1
 802402a:	f100 80fe 	bmi.w	802422a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802402e:	4583      	cmp	fp, r0
 8024030:	f340 80fb 	ble.w	802422a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8024034:	f1be 0f00 	cmp.w	lr, #0
 8024038:	f000 80fc 	beq.w	8024234 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 802403c:	2f00      	cmp	r7, #0
 802403e:	f2c0 80f1 	blt.w	8024224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024042:	42be      	cmp	r6, r7
 8024044:	f340 80ee 	ble.w	8024224 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8024048:	9801      	ldr	r0, [sp, #4]
 802404a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802404e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8024052:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8024056:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 802405a:	fb0a fa00 	mul.w	sl, sl, r0
 802405e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8024062:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8024066:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802406a:	fb05 f808 	mul.w	r8, r5, r8
 802406e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8024072:	4482      	add	sl, r0
 8024074:	f108 0020 	add.w	r0, r8, #32
 8024078:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802407c:	0a00      	lsrs	r0, r0, #8
 802407e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8024082:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024086:	ea4b 0b00 	orr.w	fp, fp, r0
 802408a:	3701      	adds	r7, #1
 802408c:	f100 80d7 	bmi.w	802423e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024090:	42be      	cmp	r6, r7
 8024092:	f340 80d4 	ble.w	802423e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8024096:	2900      	cmp	r1, #0
 8024098:	f000 80d4 	beq.w	8024244 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 802409c:	3601      	adds	r6, #1
 802409e:	9801      	ldr	r0, [sp, #4]
 80240a0:	f819 7006 	ldrb.w	r7, [r9, r6]
 80240a4:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80240a8:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80240ac:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80240b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80240b4:	fb09 f906 	mul.w	r9, r9, r6
 80240b8:	fb07 f800 	mul.w	r8, r7, r0
 80240bc:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80240c0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80240c4:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80240c8:	44d1      	add	r9, sl
 80240ca:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80240ce:	f108 0020 	add.w	r0, r8, #32
 80240d2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80240d6:	0a00      	lsrs	r0, r0, #8
 80240d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80240dc:	4330      	orrs	r0, r6
 80240de:	b28e      	uxth	r6, r1
 80240e0:	fa1f f98e 	uxth.w	r9, lr
 80240e4:	fb06 f809 	mul.w	r8, r6, r9
 80240e8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80240ec:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80240f0:	0136      	lsls	r6, r6, #4
 80240f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80240f6:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80240fa:	9601      	str	r6, [sp, #4]
 80240fc:	ea4a 0404 	orr.w	r4, sl, r4
 8024100:	fa1f f689 	uxth.w	r6, r9
 8024104:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024108:	fb11 f90e 	smulbb	r9, r1, lr
 802410c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8024110:	9602      	str	r6, [sp, #8]
 8024112:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024116:	4626      	mov	r6, r4
 8024118:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802411c:	f1ce 0410 	rsb	r4, lr, #16
 8024120:	1a64      	subs	r4, r4, r1
 8024122:	ea4a 0202 	orr.w	r2, sl, r2
 8024126:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802412a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802412e:	434a      	muls	r2, r1
 8024130:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8024134:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024138:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802413c:	fb04 2406 	mla	r4, r4, r6, r2
 8024140:	ea4a 0000 	orr.w	r0, sl, r0
 8024144:	fb09 4200 	mla	r2, r9, r0, r4
 8024148:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802414c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024150:	9801      	ldr	r0, [sp, #4]
 8024152:	9903      	ldr	r1, [sp, #12]
 8024154:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024158:	ea44 0b0b 	orr.w	fp, r4, fp
 802415c:	9c02      	ldr	r4, [sp, #8]
 802415e:	8809      	ldrh	r1, [r1, #0]
 8024160:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8024164:	1b00      	subs	r0, r0, r4
 8024166:	9c01      	ldr	r4, [sp, #4]
 8024168:	eba4 0608 	sub.w	r6, r4, r8
 802416c:	b2b6      	uxth	r6, r6
 802416e:	b280      	uxth	r0, r0
 8024170:	4373      	muls	r3, r6
 8024172:	fb0c 3300 	mla	r3, ip, r0, r3
 8024176:	9802      	ldr	r0, [sp, #8]
 8024178:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802417c:	fb00 3505 	mla	r5, r0, r5, r3
 8024180:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8024184:	fb08 5707 	mla	r7, r8, r7, r5
 8024188:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802418c:	120b      	asrs	r3, r1, #8
 802418e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024192:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8024196:	b2ff      	uxtb	r7, r7
 8024198:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802419c:	10c8      	asrs	r0, r1, #3
 802419e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80241a2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80241a6:	00c9      	lsls	r1, r1, #3
 80241a8:	437b      	muls	r3, r7
 80241aa:	ea42 0e0e 	orr.w	lr, r2, lr
 80241ae:	b2c9      	uxtb	r1, r1
 80241b0:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80241b4:	fa1f f28e 	uxth.w	r2, lr
 80241b8:	4378      	muls	r0, r7
 80241ba:	434f      	muls	r7, r1
 80241bc:	1c59      	adds	r1, r3, #1
 80241be:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80241c2:	1213      	asrs	r3, r2, #8
 80241c4:	f023 0307 	bic.w	r3, r3, #7
 80241c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80241cc:	1c41      	adds	r1, r0, #1
 80241ce:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80241d2:	10d1      	asrs	r1, r2, #3
 80241d4:	f021 0103 	bic.w	r1, r1, #3
 80241d8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80241dc:	021b      	lsls	r3, r3, #8
 80241de:	00c9      	lsls	r1, r1, #3
 80241e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80241e4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80241e8:	430b      	orrs	r3, r1
 80241ea:	1c79      	adds	r1, r7, #1
 80241ec:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80241f0:	00d2      	lsls	r2, r2, #3
 80241f2:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80241f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80241fa:	431a      	orrs	r2, r3
 80241fc:	9b03      	ldr	r3, [sp, #12]
 80241fe:	801a      	strh	r2, [r3, #0]
 8024200:	b005      	add	sp, #20
 8024202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024206:	f04f 0c00 	mov.w	ip, #0
 802420a:	4664      	mov	r4, ip
 802420c:	e6e5      	b.n	8023fda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802420e:	2300      	movs	r3, #0
 8024210:	469c      	mov	ip, r3
 8024212:	461a      	mov	r2, r3
 8024214:	461c      	mov	r4, r3
 8024216:	e707      	b.n	8024028 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024218:	2300      	movs	r3, #0
 802421a:	461a      	mov	r2, r3
 802421c:	e704      	b.n	8024028 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802421e:	460b      	mov	r3, r1
 8024220:	460a      	mov	r2, r1
 8024222:	e701      	b.n	8024028 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024224:	2500      	movs	r5, #0
 8024226:	46ab      	mov	fp, r5
 8024228:	e72f      	b.n	802408a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802422a:	2700      	movs	r7, #0
 802422c:	463d      	mov	r5, r7
 802422e:	4638      	mov	r0, r7
 8024230:	46bb      	mov	fp, r7
 8024232:	e754      	b.n	80240de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024234:	4677      	mov	r7, lr
 8024236:	4675      	mov	r5, lr
 8024238:	4670      	mov	r0, lr
 802423a:	46f3      	mov	fp, lr
 802423c:	e74f      	b.n	80240de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802423e:	2700      	movs	r7, #0
 8024240:	4638      	mov	r0, r7
 8024242:	e74c      	b.n	80240de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8024244:	460f      	mov	r7, r1
 8024246:	4608      	mov	r0, r1
 8024248:	e749      	b.n	80240de <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802424c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802424c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024250:	b093      	sub	sp, #76	; 0x4c
 8024252:	9210      	str	r2, [sp, #64]	; 0x40
 8024254:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024256:	910e      	str	r1, [sp, #56]	; 0x38
 8024258:	9306      	str	r3, [sp, #24]
 802425a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802425e:	9011      	str	r0, [sp, #68]	; 0x44
 8024260:	6850      	ldr	r0, [r2, #4]
 8024262:	6812      	ldr	r2, [r2, #0]
 8024264:	fb00 1303 	mla	r3, r0, r3, r1
 8024268:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802426c:	9307      	str	r3, [sp, #28]
 802426e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024270:	681b      	ldr	r3, [r3, #0]
 8024272:	9308      	str	r3, [sp, #32]
 8024274:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024276:	685b      	ldr	r3, [r3, #4]
 8024278:	9309      	str	r3, [sp, #36]	; 0x24
 802427a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802427c:	2b00      	cmp	r3, #0
 802427e:	dc03      	bgt.n	8024288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024280:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024282:	2b00      	cmp	r3, #0
 8024284:	f340 83b4 	ble.w	80249f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024288:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802428a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802428e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024292:	1e48      	subs	r0, r1, #1
 8024294:	1e55      	subs	r5, r2, #1
 8024296:	9b06      	ldr	r3, [sp, #24]
 8024298:	2b00      	cmp	r3, #0
 802429a:	f340 8163 	ble.w	8024564 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802429e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 80242a0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80242a2:	1436      	asrs	r6, r6, #16
 80242a4:	ea4f 4323 	mov.w	r3, r3, asr #16
 80242a8:	d406      	bmi.n	80242b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80242aa:	4286      	cmp	r6, r0
 80242ac:	da04      	bge.n	80242b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80242ae:	2b00      	cmp	r3, #0
 80242b0:	db02      	blt.n	80242b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80242b2:	42ab      	cmp	r3, r5
 80242b4:	f2c0 8157 	blt.w	8024566 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80242b8:	3601      	adds	r6, #1
 80242ba:	f100 8144 	bmi.w	8024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80242be:	42b1      	cmp	r1, r6
 80242c0:	f2c0 8141 	blt.w	8024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80242c4:	3301      	adds	r3, #1
 80242c6:	f100 813e 	bmi.w	8024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80242ca:	429a      	cmp	r2, r3
 80242cc:	f2c0 813b 	blt.w	8024546 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80242d0:	9b06      	ldr	r3, [sp, #24]
 80242d2:	9f07      	ldr	r7, [sp, #28]
 80242d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80242d6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80242da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80242dc:	2b00      	cmp	r3, #0
 80242de:	f340 8164 	ble.w	80245aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80242e2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80242e4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80242e6:	1418      	asrs	r0, r3, #16
 80242e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80242ea:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80242ee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80242f0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80242f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80242f6:	142d      	asrs	r5, r5, #16
 80242f8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80242fc:	f100 81ee 	bmi.w	80246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024300:	f102 3eff 	add.w	lr, r2, #4294967295
 8024304:	4575      	cmp	r5, lr
 8024306:	f280 81e9 	bge.w	80246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802430a:	2800      	cmp	r0, #0
 802430c:	f2c0 81e6 	blt.w	80246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024310:	f103 3eff 	add.w	lr, r3, #4294967295
 8024314:	4570      	cmp	r0, lr
 8024316:	f280 81e1 	bge.w	80246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802431a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802431c:	b212      	sxth	r2, r2
 802431e:	fb00 5002 	mla	r0, r0, r2, r5
 8024322:	fa1f fe81 	uxth.w	lr, r1
 8024326:	eb03 0a00 	add.w	sl, r3, r0
 802432a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802432e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8024332:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8024336:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802433a:	b29b      	uxth	r3, r3
 802433c:	f1bc 0f00 	cmp.w	ip, #0
 8024340:	f000 8179 	beq.w	8024636 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8024344:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8024348:	940a      	str	r4, [sp, #40]	; 0x28
 802434a:	eb0a 0b02 	add.w	fp, sl, r2
 802434e:	fa1f fa8c 	uxth.w	sl, ip
 8024352:	fb0a fe0e 	mul.w	lr, sl, lr
 8024356:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802435a:	fa1f fa8a 	uxth.w	sl, sl
 802435e:	eba5 050e 	sub.w	r5, r5, lr
 8024362:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8024366:	940b      	str	r4, [sp, #44]	; 0x2c
 8024368:	eba3 030a 	sub.w	r3, r3, sl
 802436c:	b2ad      	uxth	r5, r5
 802436e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024370:	b29b      	uxth	r3, r3
 8024372:	fb08 f505 	mul.w	r5, r8, r5
 8024376:	fb09 5303 	mla	r3, r9, r3, r5
 802437a:	fb0a 3304 	mla	r3, sl, r4, r3
 802437e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024380:	fb0e 3304 	mla	r3, lr, r4, r3
 8024384:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024388:	2b00      	cmp	r3, #0
 802438a:	f000 80cf 	beq.w	802452c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802438e:	9c08      	ldr	r4, [sp, #32]
 8024390:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024394:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024398:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802439c:	f000 8150 	beq.w	8024640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80243a0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80243a4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80243a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80243ac:	fb09 f000 	mul.w	r0, r9, r0
 80243b0:	fb0a fe0e 	mul.w	lr, sl, lr
 80243b4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80243b8:	f100 0b20 	add.w	fp, r0, #32
 80243bc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80243c0:	44ce      	add	lr, r9
 80243c2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80243c6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80243ca:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80243ce:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80243d2:	ea4e 0909 	orr.w	r9, lr, r9
 80243d6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80243da:	8868      	ldrh	r0, [r5, #2]
 80243dc:	d019      	beq.n	8024412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80243de:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80243e2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80243e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80243ea:	fb08 f800 	mul.w	r8, r8, r0
 80243ee:	fb0a fe0e 	mul.w	lr, sl, lr
 80243f2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80243f6:	f108 0b20 	add.w	fp, r8, #32
 80243fa:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80243fe:	4486      	add	lr, r0
 8024400:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024404:	0a00      	lsrs	r0, r0, #8
 8024406:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802440a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802440e:	ea4e 0000 	orr.w	r0, lr, r0
 8024412:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024416:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802441a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802441e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024422:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024426:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802442a:	ea4e 0909 	orr.w	r9, lr, r9
 802442e:	ea4a 0000 	orr.w	r0, sl, r0
 8024432:	f1bc 0f00 	cmp.w	ip, #0
 8024436:	f000 8105 	beq.w	8024644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802443a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802443e:	3a01      	subs	r2, #1
 8024440:	0052      	lsls	r2, r2, #1
 8024442:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024444:	3202      	adds	r2, #2
 8024446:	2cff      	cmp	r4, #255	; 0xff
 8024448:	eb05 0e02 	add.w	lr, r5, r2
 802444c:	5aaa      	ldrh	r2, [r5, r2]
 802444e:	d018      	beq.n	8024482 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8024450:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8024454:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024458:	fb04 fa02 	mul.w	sl, r4, r2
 802445c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024460:	fb08 f805 	mul.w	r8, r8, r5
 8024464:	f10a 0520 	add.w	r5, sl, #32
 8024468:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802446c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8024470:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024474:	4442      	add	r2, r8
 8024476:	0a2d      	lsrs	r5, r5, #8
 8024478:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802447c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024480:	432a      	orrs	r2, r5
 8024482:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024484:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8024488:	2cff      	cmp	r4, #255	; 0xff
 802448a:	d01a      	beq.n	80244c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802448c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8024490:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024494:	fb04 fa05 	mul.w	sl, r4, r5
 8024498:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802449c:	fb08 f80e 	mul.w	r8, r8, lr
 80244a0:	f10a 0e20 	add.w	lr, sl, #32
 80244a4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80244a8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80244ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80244b0:	4445      	add	r5, r8
 80244b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80244b6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80244ba:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80244be:	ea45 050e 	orr.w	r5, r5, lr
 80244c2:	fb1c fe01 	smulbb	lr, ip, r1
 80244c6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80244ca:	f1cc 0810 	rsb	r8, ip, #16
 80244ce:	eba8 0801 	sub.w	r8, r8, r1
 80244d2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80244d6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80244da:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80244de:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80244e2:	4341      	muls	r1, r0
 80244e4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80244e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80244ec:	ea4a 0202 	orr.w	r2, sl, r2
 80244f0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80244f4:	fb09 1108 	mla	r1, r9, r8, r1
 80244f8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80244fc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024500:	fb0c 1102 	mla	r1, ip, r2, r1
 8024504:	ea4b 0505 	orr.w	r5, fp, r5
 8024508:	fb0e 1e05 	mla	lr, lr, r5, r1
 802450c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024510:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024514:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024518:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802451c:	ea42 0e0e 	orr.w	lr, r2, lr
 8024520:	fa1f f28e 	uxth.w	r2, lr
 8024524:	2bff      	cmp	r3, #255	; 0xff
 8024526:	f040 80a1 	bne.w	802466c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802452a:	803a      	strh	r2, [r7, #0]
 802452c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802452e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8024530:	4413      	add	r3, r2
 8024532:	931d      	str	r3, [sp, #116]	; 0x74
 8024534:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024536:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024538:	441a      	add	r2, r3
 802453a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802453c:	921e      	str	r2, [sp, #120]	; 0x78
 802453e:	3b01      	subs	r3, #1
 8024540:	3702      	adds	r7, #2
 8024542:	930f      	str	r3, [sp, #60]	; 0x3c
 8024544:	e6c9      	b.n	80242da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024546:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024548:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802454a:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802454c:	4433      	add	r3, r6
 802454e:	931d      	str	r3, [sp, #116]	; 0x74
 8024550:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024552:	441c      	add	r4, r3
 8024554:	9b06      	ldr	r3, [sp, #24]
 8024556:	941e      	str	r4, [sp, #120]	; 0x78
 8024558:	3b01      	subs	r3, #1
 802455a:	9306      	str	r3, [sp, #24]
 802455c:	9b07      	ldr	r3, [sp, #28]
 802455e:	3302      	adds	r3, #2
 8024560:	9307      	str	r3, [sp, #28]
 8024562:	e698      	b.n	8024296 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8024564:	d028      	beq.n	80245b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8024566:	9b06      	ldr	r3, [sp, #24]
 8024568:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802456a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802456c:	3b01      	subs	r3, #1
 802456e:	fb00 5003 	mla	r0, r0, r3, r5
 8024572:	1400      	asrs	r0, r0, #16
 8024574:	f53f aeac 	bmi.w	80242d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024578:	3901      	subs	r1, #1
 802457a:	4288      	cmp	r0, r1
 802457c:	f6bf aea8 	bge.w	80242d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024580:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024582:	981e      	ldr	r0, [sp, #120]	; 0x78
 8024584:	fb01 0303 	mla	r3, r1, r3, r0
 8024588:	141b      	asrs	r3, r3, #16
 802458a:	f53f aea1 	bmi.w	80242d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802458e:	3a01      	subs	r2, #1
 8024590:	4293      	cmp	r3, r2
 8024592:	f6bf ae9d 	bge.w	80242d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024596:	9b06      	ldr	r3, [sp, #24]
 8024598:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802459c:	930f      	str	r3, [sp, #60]	; 0x3c
 802459e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80245a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80245a4:	2b00      	cmp	r3, #0
 80245a6:	f300 80b6 	bgt.w	8024716 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80245aa:	9b06      	ldr	r3, [sp, #24]
 80245ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80245b0:	9b07      	ldr	r3, [sp, #28]
 80245b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80245b6:	9307      	str	r3, [sp, #28]
 80245b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80245ba:	2b00      	cmp	r3, #0
 80245bc:	f340 8218 	ble.w	80249f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80245c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80245c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80245c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80245cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80245ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80245d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80245d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80245da:	eef0 6a62 	vmov.f32	s13, s5
 80245de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80245e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80245e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80245ea:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80245ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80245f2:	eef0 6a43 	vmov.f32	s13, s6
 80245f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80245fa:	ee12 2a90 	vmov	r2, s5
 80245fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024602:	fb92 f3f3 	sdiv	r3, r2, r3
 8024606:	ee13 2a10 	vmov	r2, s6
 802460a:	931f      	str	r3, [sp, #124]	; 0x7c
 802460c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802460e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024612:	9320      	str	r3, [sp, #128]	; 0x80
 8024614:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024616:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024618:	3b01      	subs	r3, #1
 802461a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802461e:	930e      	str	r3, [sp, #56]	; 0x38
 8024620:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024622:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8024626:	bf08      	it	eq
 8024628:	4613      	moveq	r3, r2
 802462a:	9306      	str	r3, [sp, #24]
 802462c:	eeb0 3a67 	vmov.f32	s6, s15
 8024630:	eef0 2a47 	vmov.f32	s5, s14
 8024634:	e621      	b.n	802427a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8024636:	fb08 f505 	mul.w	r5, r8, r5
 802463a:	fb09 5303 	mla	r3, r9, r3, r5
 802463e:	e6a1      	b.n	8024384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8024640:	4681      	mov	r9, r0
 8024642:	e6c8      	b.n	80243d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8024644:	f1c1 0210 	rsb	r2, r1, #16
 8024648:	4341      	muls	r1, r0
 802464a:	fb09 1902 	mla	r9, r9, r2, r1
 802464e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8024652:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8024656:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802465a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802465e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024662:	ea42 0909 	orr.w	r9, r2, r9
 8024666:	fa1f f289 	uxth.w	r2, r9
 802466a:	e75b      	b.n	8024524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802466c:	f8b7 c000 	ldrh.w	ip, [r7]
 8024670:	43db      	mvns	r3, r3
 8024672:	ea4f 202c 	mov.w	r0, ip, asr #8
 8024676:	fa5f fe83 	uxtb.w	lr, r3
 802467a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802467e:	fb00 f00e 	mul.w	r0, r0, lr
 8024682:	1c41      	adds	r1, r0, #1
 8024684:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024688:	1211      	asrs	r1, r2, #8
 802468a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802468e:	f021 0107 	bic.w	r1, r1, #7
 8024692:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024696:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802469a:	48d7      	ldr	r0, [pc, #860]	; (80249f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802469c:	fb05 f50e 	mul.w	r5, r5, lr
 80246a0:	b2c9      	uxtb	r1, r1
 80246a2:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80246a6:	1c69      	adds	r1, r5, #1
 80246a8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80246ac:	10d1      	asrs	r1, r2, #3
 80246ae:	f021 0103 	bic.w	r1, r1, #3
 80246b2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80246b6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80246ba:	b2db      	uxtb	r3, r3
 80246bc:	00c9      	lsls	r1, r1, #3
 80246be:	fb03 f30e 	mul.w	r3, r3, lr
 80246c2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80246c6:	4301      	orrs	r1, r0
 80246c8:	1c58      	adds	r0, r3, #1
 80246ca:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80246ce:	00d2      	lsls	r2, r2, #3
 80246d0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80246d4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80246d8:	430a      	orrs	r2, r1
 80246da:	e726      	b.n	802452a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80246dc:	f115 0e01 	adds.w	lr, r5, #1
 80246e0:	f53f af24 	bmi.w	802452c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80246e4:	4572      	cmp	r2, lr
 80246e6:	f6ff af21 	blt.w	802452c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80246ea:	f110 0e01 	adds.w	lr, r0, #1
 80246ee:	f53f af1d 	bmi.w	802452c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80246f2:	4573      	cmp	r3, lr
 80246f4:	f6ff af1a 	blt.w	802452c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80246f8:	b21b      	sxth	r3, r3
 80246fa:	b212      	sxth	r2, r2
 80246fc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024700:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024704:	9301      	str	r3, [sp, #4]
 8024706:	9200      	str	r2, [sp, #0]
 8024708:	4639      	mov	r1, r7
 802470a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802470e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024710:	f7ff fc24 	bl	8023f5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8024714:	e70a      	b.n	802452c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024716:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024718:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802471c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802471e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8024722:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024724:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024728:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802472a:	141f      	asrs	r7, r3, #16
 802472c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802472e:	141b      	asrs	r3, r3, #16
 8024730:	fb01 3707 	mla	r7, r1, r7, r3
 8024734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024736:	fa1f fc82 	uxth.w	ip, r2
 802473a:	eb03 0a07 	add.w	sl, r3, r7
 802473e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8024742:	f813 9007 	ldrb.w	r9, [r3, r7]
 8024746:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802474a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802474e:	b29b      	uxth	r3, r3
 8024750:	2d00      	cmp	r5, #0
 8024752:	f000 80fe 	beq.w	8024952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8024756:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802475a:	940c      	str	r4, [sp, #48]	; 0x30
 802475c:	eb0a 0b01 	add.w	fp, sl, r1
 8024760:	fa1f fa85 	uxth.w	sl, r5
 8024764:	fb0a fc0c 	mul.w	ip, sl, ip
 8024768:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802476c:	fa1f fa8a 	uxth.w	sl, sl
 8024770:	eba0 000c 	sub.w	r0, r0, ip
 8024774:	eba3 030a 	sub.w	r3, r3, sl
 8024778:	b280      	uxth	r0, r0
 802477a:	fb08 f000 	mul.w	r0, r8, r0
 802477e:	b29b      	uxth	r3, r3
 8024780:	fb09 0303 	mla	r3, r9, r3, r0
 8024784:	980c      	ldr	r0, [sp, #48]	; 0x30
 8024786:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802478a:	940d      	str	r4, [sp, #52]	; 0x34
 802478c:	fb0a 3300 	mla	r3, sl, r0, r3
 8024790:	fb0c 3304 	mla	r3, ip, r4, r3
 8024794:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024798:	2b00      	cmp	r3, #0
 802479a:	f000 80cc 	beq.w	8024936 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802479e:	9808      	ldr	r0, [sp, #32]
 80247a0:	9c08      	ldr	r4, [sp, #32]
 80247a2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80247a6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80247aa:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80247ae:	f000 80d5 	beq.w	802495c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80247b2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80247b6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80247ba:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80247be:	fb09 f707 	mul.w	r7, r9, r7
 80247c2:	fb0a fc0c 	mul.w	ip, sl, ip
 80247c6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80247ca:	f107 0b20 	add.w	fp, r7, #32
 80247ce:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80247d2:	44cc      	add	ip, r9
 80247d4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80247d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80247dc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80247e0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80247e4:	ea4c 0909 	orr.w	r9, ip, r9
 80247e8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80247ec:	8847      	ldrh	r7, [r0, #2]
 80247ee:	d019      	beq.n	8024824 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80247f0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80247f4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80247f8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80247fc:	fb08 f807 	mul.w	r8, r8, r7
 8024800:	fb0a fc0c 	mul.w	ip, sl, ip
 8024804:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024808:	f108 0b20 	add.w	fp, r8, #32
 802480c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024810:	44bc      	add	ip, r7
 8024812:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024816:	0a3f      	lsrs	r7, r7, #8
 8024818:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802481c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024820:	ea4c 0707 	orr.w	r7, ip, r7
 8024824:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8024828:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802482c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8024830:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8024834:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024838:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802483c:	ea4c 0909 	orr.w	r9, ip, r9
 8024840:	ea4a 0707 	orr.w	r7, sl, r7
 8024844:	2d00      	cmp	r5, #0
 8024846:	f000 808b 	beq.w	8024960 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802484a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802484e:	3901      	subs	r1, #1
 8024850:	0049      	lsls	r1, r1, #1
 8024852:	3102      	adds	r1, #2
 8024854:	eb00 0c01 	add.w	ip, r0, r1
 8024858:	5a41      	ldrh	r1, [r0, r1]
 802485a:	980c      	ldr	r0, [sp, #48]	; 0x30
 802485c:	28ff      	cmp	r0, #255	; 0xff
 802485e:	d019      	beq.n	8024894 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8024860:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8024862:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8024866:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802486a:	fb04 fa01 	mul.w	sl, r4, r1
 802486e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024872:	fb08 f800 	mul.w	r8, r8, r0
 8024876:	f10a 0020 	add.w	r0, sl, #32
 802487a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802487e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024882:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024886:	4441      	add	r1, r8
 8024888:	0a00      	lsrs	r0, r0, #8
 802488a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802488e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024892:	4301      	orrs	r1, r0
 8024894:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024896:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802489a:	2cff      	cmp	r4, #255	; 0xff
 802489c:	d01a      	beq.n	80248d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802489e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80248a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80248a6:	fb04 fa00 	mul.w	sl, r4, r0
 80248aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80248ae:	fb08 f80c 	mul.w	r8, r8, ip
 80248b2:	f10a 0c20 	add.w	ip, sl, #32
 80248b6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80248ba:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80248be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80248c2:	4440      	add	r0, r8
 80248c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80248c8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80248cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80248d0:	ea40 000c 	orr.w	r0, r0, ip
 80248d4:	fb15 fc02 	smulbb	ip, r5, r2
 80248d8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80248dc:	f1c5 0810 	rsb	r8, r5, #16
 80248e0:	eba8 0802 	sub.w	r8, r8, r2
 80248e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80248e8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80248ec:	437a      	muls	r2, r7
 80248ee:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80248f2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80248f6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80248fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80248fe:	fb09 2208 	mla	r2, r9, r8, r2
 8024902:	ea4a 0101 	orr.w	r1, sl, r1
 8024906:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802490a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802490e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024912:	fb05 2201 	mla	r2, r5, r1, r2
 8024916:	ea4b 0000 	orr.w	r0, fp, r0
 802491a:	fb0c 2200 	mla	r2, ip, r0, r2
 802491e:	0d57      	lsrs	r7, r2, #21
 8024920:	0952      	lsrs	r2, r2, #5
 8024922:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8024926:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802492a:	433a      	orrs	r2, r7
 802492c:	2bff      	cmp	r3, #255	; 0xff
 802492e:	b292      	uxth	r2, r2
 8024930:	d127      	bne.n	8024982 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8024932:	f8ae 2000 	strh.w	r2, [lr]
 8024936:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024938:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802493a:	4413      	add	r3, r2
 802493c:	931d      	str	r3, [sp, #116]	; 0x74
 802493e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8024940:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024942:	441a      	add	r2, r3
 8024944:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024946:	921e      	str	r2, [sp, #120]	; 0x78
 8024948:	3b01      	subs	r3, #1
 802494a:	f10e 0e02 	add.w	lr, lr, #2
 802494e:	930f      	str	r3, [sp, #60]	; 0x3c
 8024950:	e627      	b.n	80245a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024952:	fb08 f000 	mul.w	r0, r8, r0
 8024956:	fb09 0303 	mla	r3, r9, r3, r0
 802495a:	e71b      	b.n	8024794 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802495c:	46b9      	mov	r9, r7
 802495e:	e743      	b.n	80247e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8024960:	f1c2 0110 	rsb	r1, r2, #16
 8024964:	437a      	muls	r2, r7
 8024966:	fb09 2901 	mla	r9, r9, r1, r2
 802496a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802496e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024972:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024976:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802497a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802497e:	4302      	orrs	r2, r0
 8024980:	e7d4      	b.n	802492c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024982:	f8be 7000 	ldrh.w	r7, [lr]
 8024986:	4c1c      	ldr	r4, [pc, #112]	; (80249f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024988:	43db      	mvns	r3, r3
 802498a:	1238      	asrs	r0, r7, #8
 802498c:	fa5f fc83 	uxtb.w	ip, r3
 8024990:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024994:	10fd      	asrs	r5, r7, #3
 8024996:	fb00 f00c 	mul.w	r0, r0, ip
 802499a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802499e:	fb05 f10c 	mul.w	r1, r5, ip
 80249a2:	1c45      	adds	r5, r0, #1
 80249a4:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80249a8:	1215      	asrs	r5, r2, #8
 80249aa:	f025 0507 	bic.w	r5, r5, #7
 80249ae:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80249b2:	1c4d      	adds	r5, r1, #1
 80249b4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80249b8:	10d1      	asrs	r1, r2, #3
 80249ba:	f021 0103 	bic.w	r1, r1, #3
 80249be:	00fb      	lsls	r3, r7, #3
 80249c0:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80249c4:	b2db      	uxtb	r3, r3
 80249c6:	b2c0      	uxtb	r0, r0
 80249c8:	00c9      	lsls	r1, r1, #3
 80249ca:	fb03 f30c 	mul.w	r3, r3, ip
 80249ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80249d2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80249d6:	4308      	orrs	r0, r1
 80249d8:	1c59      	adds	r1, r3, #1
 80249da:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80249de:	00d2      	lsls	r2, r2, #3
 80249e0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80249e4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80249e8:	4318      	orrs	r0, r3
 80249ea:	f8ae 0000 	strh.w	r0, [lr]
 80249ee:	e7a2      	b.n	8024936 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80249f0:	b013      	add	sp, #76	; 0x4c
 80249f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80249f6:	bf00      	nop
 80249f8:	fffff800 	.word	0xfffff800

080249fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80249fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024a00:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024a04:	fb05 4c03 	mla	ip, r5, r3, r4
 8024a08:	2d00      	cmp	r5, #0
 8024a0a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8024a0e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8024a12:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024a16:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8024a1a:	8808      	ldrh	r0, [r1, #0]
 8024a1c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8024a20:	f2c0 80a7 	blt.w	8024b72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024a24:	45aa      	cmp	sl, r5
 8024a26:	f340 80a4 	ble.w	8024b72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8024a2a:	2c00      	cmp	r4, #0
 8024a2c:	f2c0 809f 	blt.w	8024b6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024a30:	42a3      	cmp	r3, r4
 8024a32:	f340 809c 	ble.w	8024b6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8024a36:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8024a3a:	1c62      	adds	r2, r4, #1
 8024a3c:	f100 809c 	bmi.w	8024b78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024a40:	4293      	cmp	r3, r2
 8024a42:	f340 8099 	ble.w	8024b78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024a46:	f1b9 0f00 	cmp.w	r9, #0
 8024a4a:	f000 8095 	beq.w	8024b78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8024a4e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8024a52:	3501      	adds	r5, #1
 8024a54:	f100 8094 	bmi.w	8024b80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024a58:	45aa      	cmp	sl, r5
 8024a5a:	f340 8091 	ble.w	8024b80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024a5e:	2f00      	cmp	r7, #0
 8024a60:	f000 808e 	beq.w	8024b80 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8024a64:	2c00      	cmp	r4, #0
 8024a66:	f2c0 8089 	blt.w	8024b7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024a6a:	42a3      	cmp	r3, r4
 8024a6c:	f340 8086 	ble.w	8024b7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024a70:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024a74:	3401      	adds	r4, #1
 8024a76:	f100 8086 	bmi.w	8024b86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024a7a:	42a3      	cmp	r3, r4
 8024a7c:	f340 8083 	ble.w	8024b86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024a80:	f1b9 0f00 	cmp.w	r9, #0
 8024a84:	d07f      	beq.n	8024b86 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024a86:	3301      	adds	r3, #1
 8024a88:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8024a8c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024a90:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024a94:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024a98:	fb19 fe07 	smulbb	lr, r9, r7
 8024a9c:	ea44 0808 	orr.w	r8, r4, r8
 8024aa0:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024aa4:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024aa8:	f1c7 0210 	rsb	r2, r7, #16
 8024aac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024ab0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024ab4:	ea44 0c0c 	orr.w	ip, r4, ip
 8024ab8:	eba2 0209 	sub.w	r2, r2, r9
 8024abc:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024ac0:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024ac4:	fb04 f40c 	mul.w	r4, r4, ip
 8024ac8:	fb02 4808 	mla	r8, r2, r8, r4
 8024acc:	041a      	lsls	r2, r3, #16
 8024ace:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ad2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024ad6:	4313      	orrs	r3, r2
 8024ad8:	042a      	lsls	r2, r5, #16
 8024ada:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ade:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024ae2:	fb0e 8303 	mla	r3, lr, r3, r8
 8024ae6:	432a      	orrs	r2, r5
 8024ae8:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8024aec:	fb07 3202 	mla	r2, r7, r2, r3
 8024af0:	0d53      	lsrs	r3, r2, #21
 8024af2:	0952      	lsrs	r2, r2, #5
 8024af4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024af8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024afc:	431a      	orrs	r2, r3
 8024afe:	b293      	uxth	r3, r2
 8024b00:	b2b4      	uxth	r4, r6
 8024b02:	1202      	asrs	r2, r0, #8
 8024b04:	43f6      	mvns	r6, r6
 8024b06:	b2f6      	uxtb	r6, r6
 8024b08:	121d      	asrs	r5, r3, #8
 8024b0a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8024b0e:	fb12 f206 	smulbb	r2, r2, r6
 8024b12:	10c7      	asrs	r7, r0, #3
 8024b14:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024b18:	00c0      	lsls	r0, r0, #3
 8024b1a:	fb05 2504 	mla	r5, r5, r4, r2
 8024b1e:	b2c0      	uxtb	r0, r0
 8024b20:	10da      	asrs	r2, r3, #3
 8024b22:	00db      	lsls	r3, r3, #3
 8024b24:	b2db      	uxtb	r3, r3
 8024b26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8024b2a:	fb10 f006 	smulbb	r0, r0, r6
 8024b2e:	b2ad      	uxth	r5, r5
 8024b30:	fb03 0004 	mla	r0, r3, r4, r0
 8024b34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024b38:	fb17 f706 	smulbb	r7, r7, r6
 8024b3c:	b280      	uxth	r0, r0
 8024b3e:	1c6b      	adds	r3, r5, #1
 8024b40:	fb02 7204 	mla	r2, r2, r4, r7
 8024b44:	b292      	uxth	r2, r2
 8024b46:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024b4a:	1c43      	adds	r3, r0, #1
 8024b4c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024b50:	1c50      	adds	r0, r2, #1
 8024b52:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8024b56:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024b5a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024b5e:	0952      	lsrs	r2, r2, #5
 8024b60:	432b      	orrs	r3, r5
 8024b62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b66:	4313      	orrs	r3, r2
 8024b68:	800b      	strh	r3, [r1, #0]
 8024b6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024b6e:	4680      	mov	r8, r0
 8024b70:	e763      	b.n	8024a3a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024b72:	4684      	mov	ip, r0
 8024b74:	4680      	mov	r8, r0
 8024b76:	e76c      	b.n	8024a52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024b78:	4684      	mov	ip, r0
 8024b7a:	e76a      	b.n	8024a52 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024b7c:	4605      	mov	r5, r0
 8024b7e:	e779      	b.n	8024a74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024b80:	4603      	mov	r3, r0
 8024b82:	4605      	mov	r5, r0
 8024b84:	e782      	b.n	8024a8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024b86:	4603      	mov	r3, r0
 8024b88:	e780      	b.n	8024a8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08024b8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024b8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b8e:	b093      	sub	sp, #76	; 0x4c
 8024b90:	461d      	mov	r5, r3
 8024b92:	9210      	str	r2, [sp, #64]	; 0x40
 8024b94:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024b96:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8024b9a:	920b      	str	r2, [sp, #44]	; 0x2c
 8024b9c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024ba0:	910a      	str	r1, [sp, #40]	; 0x28
 8024ba2:	6859      	ldr	r1, [r3, #4]
 8024ba4:	681b      	ldr	r3, [r3, #0]
 8024ba6:	9011      	str	r0, [sp, #68]	; 0x44
 8024ba8:	fb01 2707 	mla	r7, r1, r7, r2
 8024bac:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024bb0:	9307      	str	r3, [sp, #28]
 8024bb2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bb4:	681b      	ldr	r3, [r3, #0]
 8024bb6:	9309      	str	r3, [sp, #36]	; 0x24
 8024bb8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024bba:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024bbe:	43db      	mvns	r3, r3
 8024bc0:	b2db      	uxtb	r3, r3
 8024bc2:	9308      	str	r3, [sp, #32]
 8024bc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024bc6:	2b00      	cmp	r3, #0
 8024bc8:	dc03      	bgt.n	8024bd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024bca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024bcc:	2b00      	cmp	r3, #0
 8024bce:	f340 8203 	ble.w	8024fd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024bd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024bd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024bdc:	1e48      	subs	r0, r1, #1
 8024bde:	f102 3cff 	add.w	ip, r2, #4294967295
 8024be2:	2d00      	cmp	r5, #0
 8024be4:	f340 80da 	ble.w	8024d9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024be8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024bec:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024bf0:	d406      	bmi.n	8024c00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024bf2:	4586      	cmp	lr, r0
 8024bf4:	da04      	bge.n	8024c00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024bf6:	2b00      	cmp	r3, #0
 8024bf8:	db02      	blt.n	8024c00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024bfa:	4563      	cmp	r3, ip
 8024bfc:	f2c0 80cf 	blt.w	8024d9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024c00:	f11e 0e01 	adds.w	lr, lr, #1
 8024c04:	f100 80c1 	bmi.w	8024d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024c08:	4571      	cmp	r1, lr
 8024c0a:	f2c0 80be 	blt.w	8024d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024c0e:	3301      	adds	r3, #1
 8024c10:	f100 80bb 	bmi.w	8024d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024c14:	429a      	cmp	r2, r3
 8024c16:	f2c0 80b8 	blt.w	8024d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024c1a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024c1e:	46a9      	mov	r9, r5
 8024c20:	f1b9 0f00 	cmp.w	r9, #0
 8024c24:	f340 80d8 	ble.w	8024dd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024c28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024c2a:	1421      	asrs	r1, r4, #16
 8024c2c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024c30:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024c34:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024c38:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024c3c:	f100 8111 	bmi.w	8024e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024c40:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024c44:	4551      	cmp	r1, sl
 8024c46:	f280 810c 	bge.w	8024e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024c4a:	2800      	cmp	r0, #0
 8024c4c:	f2c0 8109 	blt.w	8024e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024c50:	f103 3aff 	add.w	sl, r3, #4294967295
 8024c54:	4550      	cmp	r0, sl
 8024c56:	f280 8104 	bge.w	8024e62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024c5a:	fa0f f38e 	sxth.w	r3, lr
 8024c5e:	fb00 1103 	mla	r1, r0, r3, r1
 8024c62:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024c64:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024c68:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024c6c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024c70:	f1bc 0f00 	cmp.w	ip, #0
 8024c74:	d007      	beq.n	8024c86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024c76:	005b      	lsls	r3, r3, #1
 8024c78:	eb0a 0003 	add.w	r0, sl, r3
 8024c7c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024c80:	930c      	str	r3, [sp, #48]	; 0x30
 8024c82:	8843      	ldrh	r3, [r0, #2]
 8024c84:	930d      	str	r3, [sp, #52]	; 0x34
 8024c86:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024c8a:	fb12 f30c 	smulbb	r3, r2, ip
 8024c8e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024c92:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024c96:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024c9a:	10db      	asrs	r3, r3, #3
 8024c9c:	ea40 000e 	orr.w	r0, r0, lr
 8024ca0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024ca4:	f1cc 0e10 	rsb	lr, ip, #16
 8024ca8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024cac:	ebae 0e02 	sub.w	lr, lr, r2
 8024cb0:	ea4a 0101 	orr.w	r1, sl, r1
 8024cb4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024cb8:	4351      	muls	r1, r2
 8024cba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024cbc:	9f08      	ldr	r7, [sp, #32]
 8024cbe:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024cc2:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024cc6:	0410      	lsls	r0, r2, #16
 8024cc8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024ccc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024cd0:	4310      	orrs	r0, r2
 8024cd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024cd4:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024cd6:	0412      	lsls	r2, r2, #16
 8024cd8:	fb03 e000 	mla	r0, r3, r0, lr
 8024cdc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ce0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024ce4:	ea42 020e 	orr.w	r2, r2, lr
 8024ce8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024cec:	fb03 0302 	mla	r3, r3, r2, r0
 8024cf0:	0d5a      	lsrs	r2, r3, #21
 8024cf2:	095b      	lsrs	r3, r3, #5
 8024cf4:	f8b8 0000 	ldrh.w	r0, [r8]
 8024cf8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024cfc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024d00:	4313      	orrs	r3, r2
 8024d02:	b29b      	uxth	r3, r3
 8024d04:	1201      	asrs	r1, r0, #8
 8024d06:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8024d0a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024d0e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024d12:	fb11 f107 	smulbb	r1, r1, r7
 8024d16:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024d1a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024d1e:	00c0      	lsls	r0, r0, #3
 8024d20:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024d24:	b2c0      	uxtb	r0, r0
 8024d26:	10d9      	asrs	r1, r3, #3
 8024d28:	00db      	lsls	r3, r3, #3
 8024d2a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8024d2e:	b2db      	uxtb	r3, r3
 8024d30:	fb10 f007 	smulbb	r0, r0, r7
 8024d34:	fa1f fc8c 	uxth.w	ip, ip
 8024d38:	fb03 0302 	mla	r3, r3, r2, r0
 8024d3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024d40:	fb1e fe07 	smulbb	lr, lr, r7
 8024d44:	fb01 e102 	mla	r1, r1, r2, lr
 8024d48:	b29a      	uxth	r2, r3
 8024d4a:	f10c 0301 	add.w	r3, ip, #1
 8024d4e:	b289      	uxth	r1, r1
 8024d50:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024d54:	1c53      	adds	r3, r2, #1
 8024d56:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d5a:	1c4a      	adds	r2, r1, #1
 8024d5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024d60:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024d64:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d68:	0949      	lsrs	r1, r1, #5
 8024d6a:	ea43 030c 	orr.w	r3, r3, ip
 8024d6e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024d72:	430b      	orrs	r3, r1
 8024d74:	f8a8 3000 	strh.w	r3, [r8]
 8024d78:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024d7a:	441c      	add	r4, r3
 8024d7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024d7e:	f108 0802 	add.w	r8, r8, #2
 8024d82:	441e      	add	r6, r3
 8024d84:	f109 39ff 	add.w	r9, r9, #4294967295
 8024d88:	e74a      	b.n	8024c20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024d8a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024d8c:	441c      	add	r4, r3
 8024d8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024d90:	441e      	add	r6, r3
 8024d92:	9b07      	ldr	r3, [sp, #28]
 8024d94:	3302      	adds	r3, #2
 8024d96:	3d01      	subs	r5, #1
 8024d98:	9307      	str	r3, [sp, #28]
 8024d9a:	e722      	b.n	8024be2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024d9c:	d022      	beq.n	8024de4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024d9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024da0:	1e6b      	subs	r3, r5, #1
 8024da2:	fb00 4003 	mla	r0, r0, r3, r4
 8024da6:	1400      	asrs	r0, r0, #16
 8024da8:	f53f af37 	bmi.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024dac:	3901      	subs	r1, #1
 8024dae:	4288      	cmp	r0, r1
 8024db0:	f6bf af33 	bge.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024db4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024db6:	fb01 6303 	mla	r3, r1, r3, r6
 8024dba:	141b      	asrs	r3, r3, #16
 8024dbc:	f53f af2d 	bmi.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024dc0:	3a01      	subs	r2, #1
 8024dc2:	4293      	cmp	r3, r2
 8024dc4:	f6bf af29 	bge.w	8024c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024dc8:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024dcc:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024dd0:	46a8      	mov	r8, r5
 8024dd2:	f1b8 0f00 	cmp.w	r8, #0
 8024dd6:	dc5e      	bgt.n	8024e96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024dd8:	9b07      	ldr	r3, [sp, #28]
 8024dda:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024dde:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024de2:	9307      	str	r3, [sp, #28]
 8024de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024de6:	2b00      	cmp	r3, #0
 8024de8:	f340 80f6 	ble.w	8024fd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024dec:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024df0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024df4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024df8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024dfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024dfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024e02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024e06:	eef0 6a62 	vmov.f32	s13, s5
 8024e0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024e0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e12:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024e16:	ee16 4a90 	vmov	r4, s13
 8024e1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024e1e:	eef0 6a43 	vmov.f32	s13, s6
 8024e22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024e26:	ee12 2a90 	vmov	r2, s5
 8024e2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024e2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e32:	ee13 2a10 	vmov	r2, s6
 8024e36:	931f      	str	r3, [sp, #124]	; 0x7c
 8024e38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024e3e:	9320      	str	r3, [sp, #128]	; 0x80
 8024e40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024e42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024e44:	3b01      	subs	r3, #1
 8024e46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024e4a:	930a      	str	r3, [sp, #40]	; 0x28
 8024e4c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024e4e:	ee16 6a90 	vmov	r6, s13
 8024e52:	bf14      	ite	ne
 8024e54:	461d      	movne	r5, r3
 8024e56:	4615      	moveq	r5, r2
 8024e58:	eeb0 3a67 	vmov.f32	s6, s15
 8024e5c:	eef0 2a47 	vmov.f32	s5, s14
 8024e60:	e6b0      	b.n	8024bc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024e62:	f111 0a01 	adds.w	sl, r1, #1
 8024e66:	d487      	bmi.n	8024d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024e68:	45d6      	cmp	lr, sl
 8024e6a:	db85      	blt.n	8024d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024e6c:	f110 0a01 	adds.w	sl, r0, #1
 8024e70:	d482      	bmi.n	8024d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024e72:	4553      	cmp	r3, sl
 8024e74:	db80      	blt.n	8024d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024e76:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024e78:	9101      	str	r1, [sp, #4]
 8024e7a:	b21b      	sxth	r3, r3
 8024e7c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024e80:	9300      	str	r3, [sp, #0]
 8024e82:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024e86:	fa0f f38e 	sxth.w	r3, lr
 8024e8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024e8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024e8e:	4641      	mov	r1, r8
 8024e90:	f7ff fdb4 	bl	80249fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024e94:	e770      	b.n	8024d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024e96:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e98:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024e9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e9e:	1430      	asrs	r0, r6, #16
 8024ea0:	1423      	asrs	r3, r4, #16
 8024ea2:	fb01 3000 	mla	r0, r1, r0, r3
 8024ea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024ea8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024eac:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024eb0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024eb4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024eb8:	8858      	ldrh	r0, [r3, #2]
 8024eba:	f1be 0f00 	cmp.w	lr, #0
 8024ebe:	d00b      	beq.n	8024ed8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024ec0:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024ec4:	3901      	subs	r1, #1
 8024ec6:	0049      	lsls	r1, r1, #1
 8024ec8:	3102      	adds	r1, #2
 8024eca:	eb03 0b01 	add.w	fp, r3, r1
 8024ece:	5a5b      	ldrh	r3, [r3, r1]
 8024ed0:	930e      	str	r3, [sp, #56]	; 0x38
 8024ed2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024ed6:	930f      	str	r3, [sp, #60]	; 0x3c
 8024ed8:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8024edc:	fb12 f30e 	smulbb	r3, r2, lr
 8024ee0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024ee4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024ee8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8024eec:	10db      	asrs	r3, r3, #3
 8024eee:	ea41 010c 	orr.w	r1, r1, ip
 8024ef2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024ef6:	f1ce 0c10 	rsb	ip, lr, #16
 8024efa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024efe:	ebac 0c02 	sub.w	ip, ip, r2
 8024f02:	ea4b 0000 	orr.w	r0, fp, r0
 8024f06:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024f0a:	4350      	muls	r0, r2
 8024f0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024f0e:	9f08      	ldr	r7, [sp, #32]
 8024f10:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024f14:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024f18:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024f1c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024f20:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024f22:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024f24:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024f28:	0412      	lsls	r2, r2, #16
 8024f2a:	ea4b 0101 	orr.w	r1, fp, r1
 8024f2e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024f32:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024f36:	fb03 c101 	mla	r1, r3, r1, ip
 8024f3a:	4302      	orrs	r2, r0
 8024f3c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024f40:	fb03 1202 	mla	r2, r3, r2, r1
 8024f44:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024f48:	0952      	lsrs	r2, r2, #5
 8024f4a:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024f4e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024f52:	f8b9 2000 	ldrh.w	r2, [r9]
 8024f56:	ea4b 0303 	orr.w	r3, fp, r3
 8024f5a:	b29b      	uxth	r3, r3
 8024f5c:	1211      	asrs	r1, r2, #8
 8024f5e:	1218      	asrs	r0, r3, #8
 8024f60:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024f64:	fb11 f107 	smulbb	r1, r1, r7
 8024f68:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024f6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024f70:	00d2      	lsls	r2, r2, #3
 8024f72:	fb00 100a 	mla	r0, r0, sl, r1
 8024f76:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8024f7a:	10d9      	asrs	r1, r3, #3
 8024f7c:	b2d2      	uxtb	r2, r2
 8024f7e:	00db      	lsls	r3, r3, #3
 8024f80:	fb1c fc07 	smulbb	ip, ip, r7
 8024f84:	fb12 f207 	smulbb	r2, r2, r7
 8024f88:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024f8c:	b2db      	uxtb	r3, r3
 8024f8e:	b280      	uxth	r0, r0
 8024f90:	fb01 c10a 	mla	r1, r1, sl, ip
 8024f94:	fb03 230a 	mla	r3, r3, sl, r2
 8024f98:	b29b      	uxth	r3, r3
 8024f9a:	b289      	uxth	r1, r1
 8024f9c:	1c42      	adds	r2, r0, #1
 8024f9e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024fa2:	f101 0c01 	add.w	ip, r1, #1
 8024fa6:	1c5a      	adds	r2, r3, #1
 8024fa8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024fac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024fb0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024fb2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024fb6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024fba:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024fbe:	4310      	orrs	r0, r2
 8024fc0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024fc4:	441c      	add	r4, r3
 8024fc6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024fc8:	ea40 000c 	orr.w	r0, r0, ip
 8024fcc:	f829 0b02 	strh.w	r0, [r9], #2
 8024fd0:	441e      	add	r6, r3
 8024fd2:	f108 38ff 	add.w	r8, r8, #4294967295
 8024fd6:	e6fc      	b.n	8024dd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024fd8:	b013      	add	sp, #76	; 0x4c
 8024fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024fde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024fde:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024fe2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024fe6:	fb0e 4703 	mla	r7, lr, r3, r4
 8024fea:	f1be 0f00 	cmp.w	lr, #0
 8024fee:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024ff2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024ff6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8024ffa:	8808      	ldrh	r0, [r1, #0]
 8024ffc:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8025000:	db60      	blt.n	80250c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025002:	45f1      	cmp	r9, lr
 8025004:	dd5e      	ble.n	80250c4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8025006:	2c00      	cmp	r4, #0
 8025008:	db5a      	blt.n	80250c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802500a:	42a3      	cmp	r3, r4
 802500c:	dd58      	ble.n	80250c0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802500e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8025012:	1c62      	adds	r2, r4, #1
 8025014:	d459      	bmi.n	80250ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8025016:	4293      	cmp	r3, r2
 8025018:	dd57      	ble.n	80250ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802501a:	2d00      	cmp	r5, #0
 802501c:	d055      	beq.n	80250ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802501e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8025022:	f11e 0e01 	adds.w	lr, lr, #1
 8025026:	d454      	bmi.n	80250d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025028:	45f1      	cmp	r9, lr
 802502a:	dd52      	ble.n	80250d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802502c:	2e00      	cmp	r6, #0
 802502e:	d050      	beq.n	80250d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8025030:	2c00      	cmp	r4, #0
 8025032:	db4c      	blt.n	80250ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025034:	42a3      	cmp	r3, r4
 8025036:	dd4a      	ble.n	80250ce <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8025038:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 802503c:	3401      	adds	r4, #1
 802503e:	d405      	bmi.n	802504c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025040:	42a3      	cmp	r3, r4
 8025042:	dd03      	ble.n	802504c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025044:	b115      	cbz	r5, 802504c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8025046:	3301      	adds	r3, #1
 8025048:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 802504c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8025050:	fb15 f406 	smulbb	r4, r5, r6
 8025054:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8025058:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802505c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025060:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8025064:	ea43 0c0c 	orr.w	ip, r3, ip
 8025068:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802506c:	f1c6 0310 	rsb	r3, r6, #16
 8025070:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8025074:	1b5b      	subs	r3, r3, r5
 8025076:	ea4e 0707 	orr.w	r7, lr, r7
 802507a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802507e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025082:	437d      	muls	r5, r7
 8025084:	fb03 5c0c 	mla	ip, r3, ip, r5
 8025088:	0403      	lsls	r3, r0, #16
 802508a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802508e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8025092:	4318      	orrs	r0, r3
 8025094:	0413      	lsls	r3, r2, #16
 8025096:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802509a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802509e:	4313      	orrs	r3, r2
 80250a0:	fb04 c000 	mla	r0, r4, r0, ip
 80250a4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80250a8:	fb06 0003 	mla	r0, r6, r3, r0
 80250ac:	0d43      	lsrs	r3, r0, #21
 80250ae:	0940      	lsrs	r0, r0, #5
 80250b0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80250b4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80250b8:	4318      	orrs	r0, r3
 80250ba:	8008      	strh	r0, [r1, #0]
 80250bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80250c0:	4684      	mov	ip, r0
 80250c2:	e7a6      	b.n	8025012 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80250c4:	4607      	mov	r7, r0
 80250c6:	4684      	mov	ip, r0
 80250c8:	e7ab      	b.n	8025022 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80250ca:	4607      	mov	r7, r0
 80250cc:	e7a9      	b.n	8025022 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80250ce:	4602      	mov	r2, r0
 80250d0:	e7b4      	b.n	802503c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80250d2:	4602      	mov	r2, r0
 80250d4:	e7ba      	b.n	802504c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080250d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80250d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250da:	b08f      	sub	sp, #60	; 0x3c
 80250dc:	461d      	mov	r5, r3
 80250de:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80250e0:	920c      	str	r2, [sp, #48]	; 0x30
 80250e2:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80250e6:	9107      	str	r1, [sp, #28]
 80250e8:	6859      	ldr	r1, [r3, #4]
 80250ea:	681b      	ldr	r3, [r3, #0]
 80250ec:	900d      	str	r0, [sp, #52]	; 0x34
 80250ee:	fb01 2707 	mla	r7, r1, r7, r2
 80250f2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80250f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80250f8:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80250fc:	f8d3 8000 	ldr.w	r8, [r3]
 8025100:	9b07      	ldr	r3, [sp, #28]
 8025102:	2b00      	cmp	r3, #0
 8025104:	dc03      	bgt.n	802510e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025106:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025108:	2b00      	cmp	r3, #0
 802510a:	f340 8181 	ble.w	8025410 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802510e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025110:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025114:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025118:	1e48      	subs	r0, r1, #1
 802511a:	f102 3cff 	add.w	ip, r2, #4294967295
 802511e:	2d00      	cmp	r5, #0
 8025120:	f340 809b 	ble.w	802525a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8025124:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025128:	ea4f 4326 	mov.w	r3, r6, asr #16
 802512c:	d406      	bmi.n	802513c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802512e:	4586      	cmp	lr, r0
 8025130:	da04      	bge.n	802513c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025132:	2b00      	cmp	r3, #0
 8025134:	db02      	blt.n	802513c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8025136:	4563      	cmp	r3, ip
 8025138:	f2c0 8090 	blt.w	802525c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802513c:	f11e 0e01 	adds.w	lr, lr, #1
 8025140:	f100 8084 	bmi.w	802524c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025144:	4571      	cmp	r1, lr
 8025146:	f2c0 8081 	blt.w	802524c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802514a:	3301      	adds	r3, #1
 802514c:	d47e      	bmi.n	802524c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802514e:	429a      	cmp	r2, r3
 8025150:	db7c      	blt.n	802524c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8025152:	46aa      	mov	sl, r5
 8025154:	46b9      	mov	r9, r7
 8025156:	f1ba 0f00 	cmp.w	sl, #0
 802515a:	f340 8099 	ble.w	8025290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802515e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025160:	1421      	asrs	r1, r4, #16
 8025162:	ea4f 4026 	mov.w	r0, r6, asr #16
 8025166:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802516a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802516e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8025172:	f100 80d0 	bmi.w	8025316 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025176:	f10e 3bff 	add.w	fp, lr, #4294967295
 802517a:	4559      	cmp	r1, fp
 802517c:	f280 80cb 	bge.w	8025316 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025180:	2800      	cmp	r0, #0
 8025182:	f2c0 80c8 	blt.w	8025316 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025186:	f103 3bff 	add.w	fp, r3, #4294967295
 802518a:	4558      	cmp	r0, fp
 802518c:	f280 80c3 	bge.w	8025316 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025190:	fa0f fe8e 	sxth.w	lr, lr
 8025194:	fb00 110e 	mla	r1, r0, lr, r1
 8025198:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802519c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80251a0:	8841      	ldrh	r1, [r0, #2]
 80251a2:	f1bc 0f00 	cmp.w	ip, #0
 80251a6:	d00b      	beq.n	80251c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80251a8:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 80251ac:	3b01      	subs	r3, #1
 80251ae:	005b      	lsls	r3, r3, #1
 80251b0:	3302      	adds	r3, #2
 80251b2:	eb00 0e03 	add.w	lr, r0, r3
 80251b6:	5ac3      	ldrh	r3, [r0, r3]
 80251b8:	9308      	str	r3, [sp, #32]
 80251ba:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80251be:	9309      	str	r3, [sp, #36]	; 0x24
 80251c0:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80251c4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80251c8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80251cc:	ea40 000b 	orr.w	r0, r0, fp
 80251d0:	fb12 f30c 	smulbb	r3, r2, ip
 80251d4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80251d8:	10db      	asrs	r3, r3, #3
 80251da:	f1cc 0e10 	rsb	lr, ip, #16
 80251de:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80251e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80251e6:	ebae 0e02 	sub.w	lr, lr, r2
 80251ea:	ea4b 0101 	orr.w	r1, fp, r1
 80251ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80251f2:	4351      	muls	r1, r2
 80251f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80251f6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80251fa:	fb0e 1e00 	mla	lr, lr, r0, r1
 80251fe:	0410      	lsls	r0, r2, #16
 8025200:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025204:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025208:	4310      	orrs	r0, r2
 802520a:	9a08      	ldr	r2, [sp, #32]
 802520c:	9908      	ldr	r1, [sp, #32]
 802520e:	0412      	lsls	r2, r2, #16
 8025210:	fb03 e000 	mla	r0, r3, r0, lr
 8025214:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025218:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802521c:	ea42 020e 	orr.w	r2, r2, lr
 8025220:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8025224:	fb03 0302 	mla	r3, r3, r2, r0
 8025228:	0d5a      	lsrs	r2, r3, #21
 802522a:	095b      	lsrs	r3, r3, #5
 802522c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025230:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025234:	4313      	orrs	r3, r2
 8025236:	f8a9 3000 	strh.w	r3, [r9]
 802523a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802523c:	441c      	add	r4, r3
 802523e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025240:	f109 0902 	add.w	r9, r9, #2
 8025244:	441e      	add	r6, r3
 8025246:	f10a 3aff 	add.w	sl, sl, #4294967295
 802524a:	e784      	b.n	8025156 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802524c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802524e:	441c      	add	r4, r3
 8025250:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025252:	3d01      	subs	r5, #1
 8025254:	441e      	add	r6, r3
 8025256:	3702      	adds	r7, #2
 8025258:	e761      	b.n	802511e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802525a:	d01d      	beq.n	8025298 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802525c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802525e:	1e6b      	subs	r3, r5, #1
 8025260:	fb00 4003 	mla	r0, r0, r3, r4
 8025264:	1400      	asrs	r0, r0, #16
 8025266:	f53f af74 	bmi.w	8025152 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802526a:	3901      	subs	r1, #1
 802526c:	4288      	cmp	r0, r1
 802526e:	f6bf af70 	bge.w	8025152 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025272:	991c      	ldr	r1, [sp, #112]	; 0x70
 8025274:	fb01 6303 	mla	r3, r1, r3, r6
 8025278:	141b      	asrs	r3, r3, #16
 802527a:	f53f af6a 	bmi.w	8025152 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802527e:	3a01      	subs	r2, #1
 8025280:	4293      	cmp	r3, r2
 8025282:	f6bf af66 	bge.w	8025152 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025286:	46a9      	mov	r9, r5
 8025288:	46ba      	mov	sl, r7
 802528a:	f1b9 0f00 	cmp.w	r9, #0
 802528e:	dc5a      	bgt.n	8025346 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8025290:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025294:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025298:	9b07      	ldr	r3, [sp, #28]
 802529a:	2b00      	cmp	r3, #0
 802529c:	f340 80b8 	ble.w	8025410 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80252a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80252a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80252a8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80252ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80252ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80252b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80252b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80252ba:	eef0 6a62 	vmov.f32	s13, s5
 80252be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80252c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80252ca:	ee16 4a90 	vmov	r4, s13
 80252ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80252d2:	eef0 6a43 	vmov.f32	s13, s6
 80252d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80252da:	ee12 2a90 	vmov	r2, s5
 80252de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80252e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80252e6:	ee13 2a10 	vmov	r2, s6
 80252ea:	931b      	str	r3, [sp, #108]	; 0x6c
 80252ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80252ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80252f2:	931c      	str	r3, [sp, #112]	; 0x70
 80252f4:	9b07      	ldr	r3, [sp, #28]
 80252f6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80252f8:	3b01      	subs	r3, #1
 80252fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252fe:	9307      	str	r3, [sp, #28]
 8025300:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025302:	ee16 6a90 	vmov	r6, s13
 8025306:	bf14      	ite	ne
 8025308:	461d      	movne	r5, r3
 802530a:	4615      	moveq	r5, r2
 802530c:	eeb0 3a67 	vmov.f32	s6, s15
 8025310:	eef0 2a47 	vmov.f32	s5, s14
 8025314:	e6f4      	b.n	8025100 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8025316:	f111 0b01 	adds.w	fp, r1, #1
 802531a:	d48e      	bmi.n	802523a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802531c:	45de      	cmp	lr, fp
 802531e:	db8c      	blt.n	802523a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025320:	f110 0b01 	adds.w	fp, r0, #1
 8025324:	d489      	bmi.n	802523a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025326:	455b      	cmp	r3, fp
 8025328:	db87      	blt.n	802523a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802532a:	b21b      	sxth	r3, r3
 802532c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8025330:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8025334:	9300      	str	r3, [sp, #0]
 8025336:	4642      	mov	r2, r8
 8025338:	fa0f f38e 	sxth.w	r3, lr
 802533c:	4649      	mov	r1, r9
 802533e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8025340:	f7ff fe4d 	bl	8024fde <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8025344:	e779      	b.n	802523a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8025346:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025348:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802534c:	1420      	asrs	r0, r4, #16
 802534e:	1431      	asrs	r1, r6, #16
 8025350:	fb03 0101 	mla	r1, r3, r1, r0
 8025354:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8025358:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802535c:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8025360:	8841      	ldrh	r1, [r0, #2]
 8025362:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025366:	f1be 0f00 	cmp.w	lr, #0
 802536a:	d00b      	beq.n	8025384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802536c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8025370:	3b01      	subs	r3, #1
 8025372:	005b      	lsls	r3, r3, #1
 8025374:	3302      	adds	r3, #2
 8025376:	eb00 0b03 	add.w	fp, r0, r3
 802537a:	5ac3      	ldrh	r3, [r0, r3]
 802537c:	930a      	str	r3, [sp, #40]	; 0x28
 802537e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025382:	930b      	str	r3, [sp, #44]	; 0x2c
 8025384:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8025388:	fb12 f30e 	smulbb	r3, r2, lr
 802538c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025390:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025394:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025398:	10db      	asrs	r3, r3, #3
 802539a:	ea40 000c 	orr.w	r0, r0, ip
 802539e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80253a2:	f1ce 0c10 	rsb	ip, lr, #16
 80253a6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80253aa:	ebac 0c02 	sub.w	ip, ip, r2
 80253ae:	ea4b 0101 	orr.w	r1, fp, r1
 80253b2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80253b6:	4351      	muls	r1, r2
 80253b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80253ba:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80253be:	fb0c 1c00 	mla	ip, ip, r0, r1
 80253c2:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80253c6:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80253ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80253cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80253ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80253d2:	0412      	lsls	r2, r2, #16
 80253d4:	ea4b 0000 	orr.w	r0, fp, r0
 80253d8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80253dc:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80253e0:	fb03 c000 	mla	r0, r3, r0, ip
 80253e4:	ea42 0b0b 	orr.w	fp, r2, fp
 80253e8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80253ec:	fb03 000b 	mla	r0, r3, fp, r0
 80253f0:	0d43      	lsrs	r3, r0, #21
 80253f2:	0940      	lsrs	r0, r0, #5
 80253f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80253f8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80253fc:	4318      	orrs	r0, r3
 80253fe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025400:	f82a 0b02 	strh.w	r0, [sl], #2
 8025404:	441c      	add	r4, r3
 8025406:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025408:	f109 39ff 	add.w	r9, r9, #4294967295
 802540c:	441e      	add	r6, r3
 802540e:	e73c      	b.n	802528a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8025410:	b00f      	add	sp, #60	; 0x3c
 8025412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025416 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8025416:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802541a:	b085      	sub	sp, #20
 802541c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025420:	9102      	str	r1, [sp, #8]
 8025422:	2c00      	cmp	r4, #0
 8025424:	fb04 7103 	mla	r1, r4, r3, r7
 8025428:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802542c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025430:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025434:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025438:	f2c0 811b 	blt.w	8025672 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802543c:	45a6      	cmp	lr, r4
 802543e:	f340 8118 	ble.w	8025672 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8025442:	2f00      	cmp	r7, #0
 8025444:	f2c0 8113 	blt.w	802566e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8025448:	42bb      	cmp	r3, r7
 802544a:	f340 8110 	ble.w	802566e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802544e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025452:	1c7a      	adds	r2, r7, #1
 8025454:	f100 8110 	bmi.w	8025678 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8025458:	4293      	cmp	r3, r2
 802545a:	f340 810d 	ble.w	8025678 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802545e:	2e00      	cmp	r6, #0
 8025460:	f000 810c 	beq.w	802567c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8025464:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025468:	3401      	adds	r4, #1
 802546a:	f100 810b 	bmi.w	8025684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802546e:	45a6      	cmp	lr, r4
 8025470:	f340 8108 	ble.w	8025684 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8025474:	2800      	cmp	r0, #0
 8025476:	f000 8108 	beq.w	802568a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802547a:	2f00      	cmp	r7, #0
 802547c:	f2c0 8100 	blt.w	8025680 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025480:	42bb      	cmp	r3, r7
 8025482:	f340 80fd 	ble.w	8025680 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025486:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802548a:	3701      	adds	r7, #1
 802548c:	f100 8100 	bmi.w	8025690 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025490:	42bb      	cmp	r3, r7
 8025492:	f340 80fd 	ble.w	8025690 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025496:	2e00      	cmp	r6, #0
 8025498:	f000 80fc 	beq.w	8025694 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802549c:	3301      	adds	r3, #1
 802549e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80254a2:	b2b6      	uxth	r6, r6
 80254a4:	b280      	uxth	r0, r0
 80254a6:	fb00 fe06 	mul.w	lr, r0, r6
 80254aa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80254ae:	0136      	lsls	r6, r6, #4
 80254b0:	eba6 070e 	sub.w	r7, r6, lr
 80254b4:	b280      	uxth	r0, r0
 80254b6:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80254ba:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80254be:	b2bf      	uxth	r7, r7
 80254c0:	1a1b      	subs	r3, r3, r0
 80254c2:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80254c6:	b29b      	uxth	r3, r3
 80254c8:	fb0a f607 	mul.w	r6, sl, r7
 80254cc:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80254d0:	fb0b 6603 	mla	r6, fp, r3, r6
 80254d4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80254d8:	fb00 6609 	mla	r6, r0, r9, r6
 80254dc:	fb0e 6608 	mla	r6, lr, r8, r6
 80254e0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80254e4:	9600      	str	r6, [sp, #0]
 80254e6:	2e00      	cmp	r6, #0
 80254e8:	f000 80be 	beq.w	8025668 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80254ec:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80254f0:	fb0b fc0c 	mul.w	ip, fp, ip
 80254f4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80254f8:	fb0b f505 	mul.w	r5, fp, r5
 80254fc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025500:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025504:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025508:	44dc      	add	ip, fp
 802550a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802550e:	9501      	str	r5, [sp, #4]
 8025510:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025514:	9503      	str	r5, [sp, #12]
 8025516:	9d01      	ldr	r5, [sp, #4]
 8025518:	9e02      	ldr	r6, [sp, #8]
 802551a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802551e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025522:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025526:	fb0a fc0c 	mul.w	ip, sl, ip
 802552a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802552e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025532:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025536:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802553a:	4465      	add	r5, ip
 802553c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025540:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025544:	fb09 fc0c 	mul.w	ip, r9, ip
 8025548:	fb09 f904 	mul.w	r9, r9, r4
 802554c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025550:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025554:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025558:	fb08 f404 	mul.w	r4, r8, r4
 802555c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025560:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025564:	fb08 f802 	mul.w	r8, r8, r2
 8025568:	fb0a fa01 	mul.w	sl, sl, r1
 802556c:	0a22      	lsrs	r2, r4, #8
 802556e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025572:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025576:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802557a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802557e:	4414      	add	r4, r2
 8025580:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025584:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025588:	0a2d      	lsrs	r5, r5, #8
 802558a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802558e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025592:	9a03      	ldr	r2, [sp, #12]
 8025594:	8836      	ldrh	r6, [r6, #0]
 8025596:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802559a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802559e:	437d      	muls	r5, r7
 80255a0:	4461      	add	r1, ip
 80255a2:	0a24      	lsrs	r4, r4, #8
 80255a4:	fb02 5503 	mla	r5, r2, r3, r5
 80255a8:	0a09      	lsrs	r1, r1, #8
 80255aa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80255ae:	fb04 540e 	mla	r4, r4, lr, r5
 80255b2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80255b6:	fb01 4100 	mla	r1, r1, r0, r4
 80255ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80255be:	0a09      	lsrs	r1, r1, #8
 80255c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80255c4:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80255c8:	fb07 f70a 	mul.w	r7, r7, sl
 80255cc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80255d0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80255d4:	fb03 7101 	mla	r1, r3, r1, r7
 80255d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80255dc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80255e0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80255e4:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80255e8:	fb00 e101 	mla	r1, r0, r1, lr
 80255ec:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80255f0:	9a00      	ldr	r2, [sp, #0]
 80255f2:	b287      	uxth	r7, r0
 80255f4:	437a      	muls	r2, r7
 80255f6:	0a09      	lsrs	r1, r1, #8
 80255f8:	1c53      	adds	r3, r2, #1
 80255fa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80255fe:	4321      	orrs	r1, r4
 8025600:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025604:	1235      	asrs	r5, r6, #8
 8025606:	0c0a      	lsrs	r2, r1, #16
 8025608:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802560c:	b2db      	uxtb	r3, r3
 802560e:	fb12 f207 	smulbb	r2, r2, r7
 8025612:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025616:	fb05 2503 	mla	r5, r5, r3, r2
 802561a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802561e:	10f2      	asrs	r2, r6, #3
 8025620:	b2c8      	uxtb	r0, r1
 8025622:	00f6      	lsls	r6, r6, #3
 8025624:	fb14 f407 	smulbb	r4, r4, r7
 8025628:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802562c:	b2f6      	uxtb	r6, r6
 802562e:	fb10 f007 	smulbb	r0, r0, r7
 8025632:	fb02 4203 	mla	r2, r2, r3, r4
 8025636:	b2ad      	uxth	r5, r5
 8025638:	fb06 0303 	mla	r3, r6, r3, r0
 802563c:	b299      	uxth	r1, r3
 802563e:	b294      	uxth	r4, r2
 8025640:	1c6b      	adds	r3, r5, #1
 8025642:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025646:	1c62      	adds	r2, r4, #1
 8025648:	1c4b      	adds	r3, r1, #1
 802564a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802564e:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8025652:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025656:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802565a:	0952      	lsrs	r2, r2, #5
 802565c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025660:	432b      	orrs	r3, r5
 8025662:	4313      	orrs	r3, r2
 8025664:	9a02      	ldr	r2, [sp, #8]
 8025666:	8013      	strh	r3, [r2, #0]
 8025668:	b005      	add	sp, #20
 802566a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802566e:	2500      	movs	r5, #0
 8025670:	e6ef      	b.n	8025452 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8025672:	2100      	movs	r1, #0
 8025674:	460d      	mov	r5, r1
 8025676:	e6f7      	b.n	8025468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025678:	2100      	movs	r1, #0
 802567a:	e6f5      	b.n	8025468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802567c:	4631      	mov	r1, r6
 802567e:	e6f3      	b.n	8025468 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025680:	2400      	movs	r4, #0
 8025682:	e702      	b.n	802548a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8025684:	2200      	movs	r2, #0
 8025686:	4614      	mov	r4, r2
 8025688:	e70b      	b.n	80254a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802568a:	4602      	mov	r2, r0
 802568c:	4604      	mov	r4, r0
 802568e:	e708      	b.n	80254a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025690:	2200      	movs	r2, #0
 8025692:	e706      	b.n	80254a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025694:	4632      	mov	r2, r6
 8025696:	e704      	b.n	80254a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08025698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802569c:	b09d      	sub	sp, #116	; 0x74
 802569e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80256a2:	9219      	str	r2, [sp, #100]	; 0x64
 80256a4:	9307      	str	r3, [sp, #28]
 80256a6:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80256a8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80256ac:	931a      	str	r3, [sp, #104]	; 0x68
 80256ae:	9117      	str	r1, [sp, #92]	; 0x5c
 80256b0:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80256b4:	901b      	str	r0, [sp, #108]	; 0x6c
 80256b6:	6850      	ldr	r0, [r2, #4]
 80256b8:	6812      	ldr	r2, [r2, #0]
 80256ba:	fb00 1303 	mla	r3, r0, r3, r1
 80256be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80256c2:	930a      	str	r3, [sp, #40]	; 0x28
 80256c4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80256c6:	681b      	ldr	r3, [r3, #0]
 80256c8:	9310      	str	r3, [sp, #64]	; 0x40
 80256ca:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80256ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80256d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80256d2:	2b00      	cmp	r3, #0
 80256d4:	dc03      	bgt.n	80256de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80256d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80256d8:	2b00      	cmp	r3, #0
 80256da:	f340 8375 	ble.w	8025dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80256de:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80256e0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80256e4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80256e8:	1e48      	subs	r0, r1, #1
 80256ea:	1e57      	subs	r7, r2, #1
 80256ec:	9b07      	ldr	r3, [sp, #28]
 80256ee:	2b00      	cmp	r3, #0
 80256f0:	f340 818e 	ble.w	8025a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80256f4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80256f8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80256fc:	d406      	bmi.n	802570c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80256fe:	4584      	cmp	ip, r0
 8025700:	da04      	bge.n	802570c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025702:	2b00      	cmp	r3, #0
 8025704:	db02      	blt.n	802570c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025706:	42bb      	cmp	r3, r7
 8025708:	f2c0 8183 	blt.w	8025a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802570c:	f11c 0c01 	adds.w	ip, ip, #1
 8025710:	f100 8173 	bmi.w	80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025714:	4561      	cmp	r1, ip
 8025716:	f2c0 8170 	blt.w	80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802571a:	3301      	adds	r3, #1
 802571c:	f100 816d 	bmi.w	80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025720:	429a      	cmp	r2, r3
 8025722:	f2c0 816a 	blt.w	80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025726:	9b07      	ldr	r3, [sp, #28]
 8025728:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802572a:	9318      	str	r3, [sp, #96]	; 0x60
 802572c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802572e:	2b00      	cmp	r3, #0
 8025730:	f340 818c 	ble.w	8025a4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8025734:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8025736:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025738:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802573c:	689b      	ldr	r3, [r3, #8]
 802573e:	1422      	asrs	r2, r4, #16
 8025740:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025744:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025748:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802574c:	f100 81cd 	bmi.w	8025aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025750:	f103 38ff 	add.w	r8, r3, #4294967295
 8025754:	4542      	cmp	r2, r8
 8025756:	f280 81c8 	bge.w	8025aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802575a:	f1bc 0f00 	cmp.w	ip, #0
 802575e:	f2c0 81c4 	blt.w	8025aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025762:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025766:	45c4      	cmp	ip, r8
 8025768:	f280 81bf 	bge.w	8025aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802576c:	b21b      	sxth	r3, r3
 802576e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025772:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025774:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025778:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802577c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025780:	2800      	cmp	r0, #0
 8025782:	f000 81a9 	beq.w	8025ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8025786:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802578a:	950c      	str	r5, [sp, #48]	; 0x30
 802578c:	0e2d      	lsrs	r5, r5, #24
 802578e:	9513      	str	r5, [sp, #76]	; 0x4c
 8025790:	b181      	cbz	r1, 80257b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025792:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025796:	3b01      	subs	r3, #1
 8025798:	009b      	lsls	r3, r3, #2
 802579a:	3304      	adds	r3, #4
 802579c:	eb08 0c03 	add.w	ip, r8, r3
 80257a0:	f858 3003 	ldr.w	r3, [r8, r3]
 80257a4:	9308      	str	r3, [sp, #32]
 80257a6:	0e1b      	lsrs	r3, r3, #24
 80257a8:	9311      	str	r3, [sp, #68]	; 0x44
 80257aa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80257ae:	930d      	str	r3, [sp, #52]	; 0x34
 80257b0:	0e1b      	lsrs	r3, r3, #24
 80257b2:	9314      	str	r3, [sp, #80]	; 0x50
 80257b4:	b280      	uxth	r0, r0
 80257b6:	b289      	uxth	r1, r1
 80257b8:	fb00 f901 	mul.w	r9, r0, r1
 80257bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80257c0:	0100      	lsls	r0, r0, #4
 80257c2:	eba0 0809 	sub.w	r8, r0, r9
 80257c6:	b289      	uxth	r1, r1
 80257c8:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80257cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80257ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80257d0:	fa1f f888 	uxth.w	r8, r8
 80257d4:	1a5b      	subs	r3, r3, r1
 80257d6:	b29b      	uxth	r3, r3
 80257d8:	fb08 f000 	mul.w	r0, r8, r0
 80257dc:	fb03 000e 	mla	r0, r3, lr, r0
 80257e0:	fb01 0005 	mla	r0, r1, r5, r0
 80257e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80257e6:	fb09 0005 	mla	r0, r9, r5, r0
 80257ea:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80257ee:	2800      	cmp	r0, #0
 80257f0:	f000 80fa 	beq.w	80259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80257f4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80257f8:	d01b      	beq.n	8025832 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80257fa:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80257fe:	fb0e fa0a 	mul.w	sl, lr, sl
 8025802:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025806:	fb0e fe02 	mul.w	lr, lr, r2
 802580a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802580e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025812:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025816:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802581a:	4452      	add	r2, sl
 802581c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025820:	0a12      	lsrs	r2, r2, #8
 8025822:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025826:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802582a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802582e:	ea42 020c 	orr.w	r2, r2, ip
 8025832:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025834:	2dff      	cmp	r5, #255	; 0xff
 8025836:	d021      	beq.n	802587c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8025838:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802583a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802583e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025840:	fb05 fb0b 	mul.w	fp, r5, fp
 8025844:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025846:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802584a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802584c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025850:	fb05 fa0a 	mul.w	sl, r5, sl
 8025854:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025858:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802585c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025860:	44de      	add	lr, fp
 8025862:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025866:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802586a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802586e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025872:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025876:	ea4e 050a 	orr.w	r5, lr, sl
 802587a:	950c      	str	r5, [sp, #48]	; 0x30
 802587c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802587e:	2dff      	cmp	r5, #255	; 0xff
 8025880:	d021      	beq.n	80258c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8025882:	9d08      	ldr	r5, [sp, #32]
 8025884:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025888:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802588a:	fb05 fb0b 	mul.w	fp, r5, fp
 802588e:	9d08      	ldr	r5, [sp, #32]
 8025890:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025894:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025896:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802589a:	fb05 fa0a 	mul.w	sl, r5, sl
 802589e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80258a2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80258a6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80258aa:	44de      	add	lr, fp
 80258ac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80258b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80258b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80258b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80258bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80258c0:	ea4e 050a 	orr.w	r5, lr, sl
 80258c4:	9508      	str	r5, [sp, #32]
 80258c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80258c8:	2dff      	cmp	r5, #255	; 0xff
 80258ca:	d021      	beq.n	8025910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80258cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80258ce:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80258d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80258d4:	fb05 fb0b 	mul.w	fp, r5, fp
 80258d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80258da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80258de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80258e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80258e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80258e8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80258ec:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80258f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80258f4:	44de      	add	lr, fp
 80258f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80258fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80258fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025902:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025906:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802590a:	ea4e 050a 	orr.w	r5, lr, sl
 802590e:	950d      	str	r5, [sp, #52]	; 0x34
 8025910:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025912:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025916:	9d08      	ldr	r5, [sp, #32]
 8025918:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802591c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025920:	fb03 cc0e 	mla	ip, r3, lr, ip
 8025924:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025928:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802592a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802592e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025932:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025934:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025938:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802593c:	fb08 f80e 	mul.w	r8, r8, lr
 8025940:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025944:	fb03 8202 	mla	r2, r3, r2, r8
 8025948:	9b08      	ldr	r3, [sp, #32]
 802594a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802594c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8025950:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025952:	fb01 220a 	mla	r2, r1, sl, r2
 8025956:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802595a:	fb09 2901 	mla	r9, r9, r1, r2
 802595e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025960:	883b      	ldrh	r3, [r7, #0]
 8025962:	4342      	muls	r2, r0
 8025964:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025968:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802596c:	1c50      	adds	r0, r2, #1
 802596e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025972:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025976:	ea4c 0c09 	orr.w	ip, ip, r9
 802597a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802597e:	1219      	asrs	r1, r3, #8
 8025980:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025984:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025988:	b2c0      	uxtb	r0, r0
 802598a:	fb12 f205 	smulbb	r2, r2, r5
 802598e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025992:	fb01 2100 	mla	r1, r1, r0, r2
 8025996:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802599a:	10da      	asrs	r2, r3, #3
 802599c:	fa5f fc8c 	uxtb.w	ip, ip
 80259a0:	00db      	lsls	r3, r3, #3
 80259a2:	fb1c fc05 	smulbb	ip, ip, r5
 80259a6:	b2db      	uxtb	r3, r3
 80259a8:	b289      	uxth	r1, r1
 80259aa:	fb03 c300 	mla	r3, r3, r0, ip
 80259ae:	fa1f fc83 	uxth.w	ip, r3
 80259b2:	1c4b      	adds	r3, r1, #1
 80259b4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80259b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80259bc:	fb1e fe05 	smulbb	lr, lr, r5
 80259c0:	f10c 0301 	add.w	r3, ip, #1
 80259c4:	fb02 e200 	mla	r2, r2, r0, lr
 80259c8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80259cc:	b292      	uxth	r2, r2
 80259ce:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80259d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80259d6:	430b      	orrs	r3, r1
 80259d8:	1c51      	adds	r1, r2, #1
 80259da:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80259de:	0952      	lsrs	r2, r2, #5
 80259e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80259e4:	4313      	orrs	r3, r2
 80259e6:	803b      	strh	r3, [r7, #0]
 80259e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80259ea:	441c      	add	r4, r3
 80259ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80259ee:	441e      	add	r6, r3
 80259f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80259f2:	3b01      	subs	r3, #1
 80259f4:	3702      	adds	r7, #2
 80259f6:	9318      	str	r3, [sp, #96]	; 0x60
 80259f8:	e698      	b.n	802572c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80259fa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80259fc:	441c      	add	r4, r3
 80259fe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025a00:	441e      	add	r6, r3
 8025a02:	9b07      	ldr	r3, [sp, #28]
 8025a04:	3b01      	subs	r3, #1
 8025a06:	9307      	str	r3, [sp, #28]
 8025a08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025a0a:	3302      	adds	r3, #2
 8025a0c:	930a      	str	r3, [sp, #40]	; 0x28
 8025a0e:	e66d      	b.n	80256ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025a10:	d023      	beq.n	8025a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025a12:	9b07      	ldr	r3, [sp, #28]
 8025a14:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8025a16:	3b01      	subs	r3, #1
 8025a18:	fb00 4003 	mla	r0, r0, r3, r4
 8025a1c:	1400      	asrs	r0, r0, #16
 8025a1e:	f53f ae82 	bmi.w	8025726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025a22:	3901      	subs	r1, #1
 8025a24:	4288      	cmp	r0, r1
 8025a26:	f6bf ae7e 	bge.w	8025726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025a2a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8025a2c:	fb01 6303 	mla	r3, r1, r3, r6
 8025a30:	141b      	asrs	r3, r3, #16
 8025a32:	f53f ae78 	bmi.w	8025726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025a36:	3a01      	subs	r2, #1
 8025a38:	4293      	cmp	r3, r2
 8025a3a:	f6bf ae74 	bge.w	8025726 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8025a3e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025a42:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8025a46:	f1bb 0f00 	cmp.w	fp, #0
 8025a4a:	dc6c      	bgt.n	8025b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025a4c:	9b07      	ldr	r3, [sp, #28]
 8025a4e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025a52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025a54:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025a58:	930a      	str	r3, [sp, #40]	; 0x28
 8025a5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025a5c:	2b00      	cmp	r3, #0
 8025a5e:	f340 81b3 	ble.w	8025dc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8025a62:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025a66:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025a6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025a6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025a70:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025a74:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025a78:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025a7c:	eef0 6a62 	vmov.f32	s13, s5
 8025a80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025a84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025a88:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025a8c:	ee16 4a90 	vmov	r4, s13
 8025a90:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025a94:	eef0 6a43 	vmov.f32	s13, s6
 8025a98:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025a9c:	ee12 2a90 	vmov	r2, s5
 8025aa0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025aa4:	fb92 f3f3 	sdiv	r3, r2, r3
 8025aa8:	ee13 2a10 	vmov	r2, s6
 8025aac:	9329      	str	r3, [sp, #164]	; 0xa4
 8025aae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025ab0:	fb92 f3f3 	sdiv	r3, r2, r3
 8025ab4:	932a      	str	r3, [sp, #168]	; 0xa8
 8025ab6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025ab8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8025aba:	3b01      	subs	r3, #1
 8025abc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025ac0:	9317      	str	r3, [sp, #92]	; 0x5c
 8025ac2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025ac4:	bf08      	it	eq
 8025ac6:	4613      	moveq	r3, r2
 8025ac8:	ee16 6a90 	vmov	r6, s13
 8025acc:	9307      	str	r3, [sp, #28]
 8025ace:	eeb0 3a67 	vmov.f32	s6, s15
 8025ad2:	eef0 2a47 	vmov.f32	s5, s14
 8025ad6:	e5fb      	b.n	80256d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025ad8:	2900      	cmp	r1, #0
 8025ada:	f43f ae6b 	beq.w	80257b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025ade:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025ae2:	9308      	str	r3, [sp, #32]
 8025ae4:	0e1b      	lsrs	r3, r3, #24
 8025ae6:	9311      	str	r3, [sp, #68]	; 0x44
 8025ae8:	e664      	b.n	80257b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025aea:	f112 0801 	adds.w	r8, r2, #1
 8025aee:	f53f af7b 	bmi.w	80259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025af2:	4543      	cmp	r3, r8
 8025af4:	f6ff af78 	blt.w	80259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025af8:	f11c 0801 	adds.w	r8, ip, #1
 8025afc:	f53f af74 	bmi.w	80259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025b00:	45c6      	cmp	lr, r8
 8025b02:	f6ff af71 	blt.w	80259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025b06:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025b08:	9201      	str	r2, [sp, #4]
 8025b0a:	fa0f f28e 	sxth.w	r2, lr
 8025b0e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025b12:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025b16:	9200      	str	r2, [sp, #0]
 8025b18:	b21b      	sxth	r3, r3
 8025b1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025b1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8025b1e:	4639      	mov	r1, r7
 8025b20:	f7ff fc79 	bl	8025416 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8025b24:	e760      	b.n	80259e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025b26:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025b28:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025b2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025b2e:	1427      	asrs	r7, r4, #16
 8025b30:	1433      	asrs	r3, r6, #16
 8025b32:	fb01 7303 	mla	r3, r1, r3, r7
 8025b36:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8025b3a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025b3e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025b42:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025b46:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025b4a:	2a00      	cmp	r2, #0
 8025b4c:	f000 8133 	beq.w	8025db6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8025b50:	687d      	ldr	r5, [r7, #4]
 8025b52:	950e      	str	r5, [sp, #56]	; 0x38
 8025b54:	0e2d      	lsrs	r5, r5, #24
 8025b56:	9515      	str	r5, [sp, #84]	; 0x54
 8025b58:	b178      	cbz	r0, 8025b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025b5a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8025b5e:	3901      	subs	r1, #1
 8025b60:	0089      	lsls	r1, r1, #2
 8025b62:	3104      	adds	r1, #4
 8025b64:	eb07 0e01 	add.w	lr, r7, r1
 8025b68:	5879      	ldr	r1, [r7, r1]
 8025b6a:	9109      	str	r1, [sp, #36]	; 0x24
 8025b6c:	0e09      	lsrs	r1, r1, #24
 8025b6e:	9112      	str	r1, [sp, #72]	; 0x48
 8025b70:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025b74:	910f      	str	r1, [sp, #60]	; 0x3c
 8025b76:	0e09      	lsrs	r1, r1, #24
 8025b78:	9116      	str	r1, [sp, #88]	; 0x58
 8025b7a:	b292      	uxth	r2, r2
 8025b7c:	b280      	uxth	r0, r0
 8025b7e:	fb02 f800 	mul.w	r8, r2, r0
 8025b82:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025b86:	0112      	lsls	r2, r2, #4
 8025b88:	eba2 0e08 	sub.w	lr, r2, r8
 8025b8c:	b280      	uxth	r0, r0
 8025b8e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025b92:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025b94:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025b96:	fa1f fe8e 	uxth.w	lr, lr
 8025b9a:	1a12      	subs	r2, r2, r0
 8025b9c:	b292      	uxth	r2, r2
 8025b9e:	fb0e f101 	mul.w	r1, lr, r1
 8025ba2:	fb02 110c 	mla	r1, r2, ip, r1
 8025ba6:	fb00 1105 	mla	r1, r0, r5, r1
 8025baa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025bac:	fb08 1105 	mla	r1, r8, r5, r1
 8025bb0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025bb4:	2900      	cmp	r1, #0
 8025bb6:	f000 80f5 	beq.w	8025da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025bba:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025bbe:	d019      	beq.n	8025bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025bc0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025bc4:	fb0c fa0a 	mul.w	sl, ip, sl
 8025bc8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025bcc:	fb0c fc03 	mul.w	ip, ip, r3
 8025bd0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025bd4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025bd8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025bdc:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025be0:	4453      	add	r3, sl
 8025be2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025be6:	0a1b      	lsrs	r3, r3, #8
 8025be8:	0a3f      	lsrs	r7, r7, #8
 8025bea:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025bee:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025bf2:	433b      	orrs	r3, r7
 8025bf4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025bf6:	2dff      	cmp	r5, #255	; 0xff
 8025bf8:	d020      	beq.n	8025c3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8025bfa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025bfc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025c00:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025c02:	436f      	muls	r7, r5
 8025c04:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025c06:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025c0a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025c0c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025c10:	fb05 fa0a 	mul.w	sl, r5, sl
 8025c14:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025c18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c1c:	44bc      	add	ip, r7
 8025c1e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025c22:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025c26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025c2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025c36:	ea4c 050a 	orr.w	r5, ip, sl
 8025c3a:	950e      	str	r5, [sp, #56]	; 0x38
 8025c3c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c3e:	2dff      	cmp	r5, #255	; 0xff
 8025c40:	d020      	beq.n	8025c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025c42:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025c44:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025c48:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c4a:	436f      	muls	r7, r5
 8025c4c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025c4e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025c52:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025c54:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025c58:	fb05 fa0a 	mul.w	sl, r5, sl
 8025c5c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025c60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c64:	44bc      	add	ip, r7
 8025c66:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025c6a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025c6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025c76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025c7e:	ea4c 050a 	orr.w	r5, ip, sl
 8025c82:	9509      	str	r5, [sp, #36]	; 0x24
 8025c84:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025c86:	2dff      	cmp	r5, #255	; 0xff
 8025c88:	d020      	beq.n	8025ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025c8a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025c8c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025c90:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025c92:	436f      	muls	r7, r5
 8025c94:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025c96:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025c9a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025c9c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025ca0:	fb05 fa0a 	mul.w	sl, r5, sl
 8025ca4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025ca8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025cac:	44bc      	add	ip, r7
 8025cae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025cb2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025cb6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025cba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025cbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025cc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025cc6:	ea4c 050a 	orr.w	r5, ip, sl
 8025cca:	950f      	str	r5, [sp, #60]	; 0x3c
 8025ccc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025cce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025cd2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025cd4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025cd8:	fb0e f707 	mul.w	r7, lr, r7
 8025cdc:	fb02 770c 	mla	r7, r2, ip, r7
 8025ce0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025ce4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025ce6:	fb00 770c 	mla	r7, r0, ip, r7
 8025cea:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025cee:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025cf0:	fb08 770c 	mla	r7, r8, ip, r7
 8025cf4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025cf8:	fb0e fe0c 	mul.w	lr, lr, ip
 8025cfc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025d00:	fb02 e303 	mla	r3, r2, r3, lr
 8025d04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025d06:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025d08:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025d0c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025d0e:	fb00 330a 	mla	r3, r0, sl, r3
 8025d12:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025d16:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025d1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025d1c:	f8b9 0000 	ldrh.w	r0, [r9]
 8025d20:	4359      	muls	r1, r3
 8025d22:	0a3f      	lsrs	r7, r7, #8
 8025d24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d28:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025d2c:	1c4b      	adds	r3, r1, #1
 8025d2e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025d32:	ea47 070c 	orr.w	r7, r7, ip
 8025d36:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025d3a:	1202      	asrs	r2, r0, #8
 8025d3c:	0c3b      	lsrs	r3, r7, #16
 8025d3e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025d42:	b2c9      	uxtb	r1, r1
 8025d44:	fb13 f305 	smulbb	r3, r3, r5
 8025d48:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025d4c:	fb02 3201 	mla	r2, r2, r1, r3
 8025d50:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025d54:	10c3      	asrs	r3, r0, #3
 8025d56:	b2ff      	uxtb	r7, r7
 8025d58:	00c0      	lsls	r0, r0, #3
 8025d5a:	b2c0      	uxtb	r0, r0
 8025d5c:	fb17 f705 	smulbb	r7, r7, r5
 8025d60:	fb00 7001 	mla	r0, r0, r1, r7
 8025d64:	b292      	uxth	r2, r2
 8025d66:	fb1c fc05 	smulbb	ip, ip, r5
 8025d6a:	b280      	uxth	r0, r0
 8025d6c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025d70:	fb03 c301 	mla	r3, r3, r1, ip
 8025d74:	1c51      	adds	r1, r2, #1
 8025d76:	f100 0c01 	add.w	ip, r0, #1
 8025d7a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025d7e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025d82:	b29b      	uxth	r3, r3
 8025d84:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025d88:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025d8c:	ea4c 0202 	orr.w	r2, ip, r2
 8025d90:	f103 0c01 	add.w	ip, r3, #1
 8025d94:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025d98:	095b      	lsrs	r3, r3, #5
 8025d9a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025d9e:	431a      	orrs	r2, r3
 8025da0:	f8a9 2000 	strh.w	r2, [r9]
 8025da4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025da6:	441c      	add	r4, r3
 8025da8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025daa:	f109 0902 	add.w	r9, r9, #2
 8025dae:	441e      	add	r6, r3
 8025db0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025db4:	e647      	b.n	8025a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025db6:	2800      	cmp	r0, #0
 8025db8:	f43f aedf 	beq.w	8025b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025dbc:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025dc0:	9109      	str	r1, [sp, #36]	; 0x24
 8025dc2:	0e09      	lsrs	r1, r1, #24
 8025dc4:	9112      	str	r1, [sp, #72]	; 0x48
 8025dc6:	e6d8      	b.n	8025b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025dc8:	b01d      	add	sp, #116	; 0x74
 8025dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025dce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025dce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025dd2:	b085      	sub	sp, #20
 8025dd4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025dd8:	9102      	str	r1, [sp, #8]
 8025dda:	2c00      	cmp	r4, #0
 8025ddc:	fb04 7103 	mla	r1, r4, r3, r7
 8025de0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025de4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025de8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025dec:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025df0:	f2c0 810c 	blt.w	802600c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025df4:	45a6      	cmp	lr, r4
 8025df6:	f340 8109 	ble.w	802600c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025dfa:	2f00      	cmp	r7, #0
 8025dfc:	f2c0 8104 	blt.w	8026008 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025e00:	42bb      	cmp	r3, r7
 8025e02:	f340 8101 	ble.w	8026008 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025e06:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025e0a:	1c7a      	adds	r2, r7, #1
 8025e0c:	f100 8101 	bmi.w	8026012 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025e10:	4293      	cmp	r3, r2
 8025e12:	f340 80fe 	ble.w	8026012 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025e16:	2e00      	cmp	r6, #0
 8025e18:	f000 80fd 	beq.w	8026016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025e1c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025e20:	3401      	adds	r4, #1
 8025e22:	f100 80fc 	bmi.w	802601e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025e26:	45a6      	cmp	lr, r4
 8025e28:	f340 80f9 	ble.w	802601e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025e2c:	2800      	cmp	r0, #0
 8025e2e:	f000 80f9 	beq.w	8026024 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025e32:	2f00      	cmp	r7, #0
 8025e34:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025e38:	f2c0 80ef 	blt.w	802601a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025e3c:	42bb      	cmp	r3, r7
 8025e3e:	f340 80ec 	ble.w	802601a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025e42:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025e46:	3701      	adds	r7, #1
 8025e48:	f100 80ef 	bmi.w	802602a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025e4c:	42bb      	cmp	r3, r7
 8025e4e:	f340 80ec 	ble.w	802602a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025e52:	2e00      	cmp	r6, #0
 8025e54:	f000 80eb 	beq.w	802602e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025e58:	6852      	ldr	r2, [r2, #4]
 8025e5a:	b2b6      	uxth	r6, r6
 8025e5c:	b280      	uxth	r0, r0
 8025e5e:	fb00 fe06 	mul.w	lr, r0, r6
 8025e62:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025e66:	0136      	lsls	r6, r6, #4
 8025e68:	eba6 070e 	sub.w	r7, r6, lr
 8025e6c:	b280      	uxth	r0, r0
 8025e6e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025e72:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025e76:	b2bf      	uxth	r7, r7
 8025e78:	1a1b      	subs	r3, r3, r0
 8025e7a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025e7e:	b29b      	uxth	r3, r3
 8025e80:	fb07 f60a 	mul.w	r6, r7, sl
 8025e84:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025e88:	fb0b 6603 	mla	r6, fp, r3, r6
 8025e8c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025e90:	fb00 6609 	mla	r6, r0, r9, r6
 8025e94:	fb0e 6608 	mla	r6, lr, r8, r6
 8025e98:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025e9c:	9600      	str	r6, [sp, #0]
 8025e9e:	2e00      	cmp	r6, #0
 8025ea0:	f000 80af 	beq.w	8026002 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025ea4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025ea8:	fb0b fc0c 	mul.w	ip, fp, ip
 8025eac:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025eb0:	fb0b f505 	mul.w	r5, fp, r5
 8025eb4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025eb8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025ebc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025ec0:	44dc      	add	ip, fp
 8025ec2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ec6:	9501      	str	r5, [sp, #4]
 8025ec8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025ecc:	9503      	str	r5, [sp, #12]
 8025ece:	9d01      	ldr	r5, [sp, #4]
 8025ed0:	9e02      	ldr	r6, [sp, #8]
 8025ed2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025ed6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025eda:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025ede:	fb0a fc0c 	mul.w	ip, sl, ip
 8025ee2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025ee6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025eea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025eee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025ef2:	4465      	add	r5, ip
 8025ef4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025ef8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025efc:	fb09 fc0c 	mul.w	ip, r9, ip
 8025f00:	fb09 f904 	mul.w	r9, r9, r4
 8025f04:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025f08:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025f0c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025f10:	fb08 f404 	mul.w	r4, r8, r4
 8025f14:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025f18:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025f1c:	fb08 f802 	mul.w	r8, r8, r2
 8025f20:	fb0a fa01 	mul.w	sl, sl, r1
 8025f24:	0a22      	lsrs	r2, r4, #8
 8025f26:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025f2a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025f2e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8025f32:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8025f36:	4414      	add	r4, r2
 8025f38:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025f3c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025f40:	0a2d      	lsrs	r5, r5, #8
 8025f42:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025f46:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025f4a:	9a03      	ldr	r2, [sp, #12]
 8025f4c:	8836      	ldrh	r6, [r6, #0]
 8025f4e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025f52:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025f56:	437d      	muls	r5, r7
 8025f58:	4461      	add	r1, ip
 8025f5a:	0a24      	lsrs	r4, r4, #8
 8025f5c:	fb02 5503 	mla	r5, r2, r3, r5
 8025f60:	0a09      	lsrs	r1, r1, #8
 8025f62:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025f66:	fb04 540e 	mla	r4, r4, lr, r5
 8025f6a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025f6e:	fb01 4100 	mla	r1, r1, r0, r4
 8025f72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025f76:	0a09      	lsrs	r1, r1, #8
 8025f78:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025f7c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025f80:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025f84:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025f88:	fb07 f70a 	mul.w	r7, r7, sl
 8025f8c:	fb03 7101 	mla	r1, r3, r1, r7
 8025f90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025f94:	9b00      	ldr	r3, [sp, #0]
 8025f96:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025f9a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025f9e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025fa2:	fb00 e101 	mla	r1, r0, r1, lr
 8025fa6:	43da      	mvns	r2, r3
 8025fa8:	1233      	asrs	r3, r6, #8
 8025faa:	b2d2      	uxtb	r2, r2
 8025fac:	10f0      	asrs	r0, r6, #3
 8025fae:	0a09      	lsrs	r1, r1, #8
 8025fb0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025fb4:	00f6      	lsls	r6, r6, #3
 8025fb6:	4353      	muls	r3, r2
 8025fb8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025fbc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025fc0:	b2f6      	uxtb	r6, r6
 8025fc2:	4321      	orrs	r1, r4
 8025fc4:	4350      	muls	r0, r2
 8025fc6:	4356      	muls	r6, r2
 8025fc8:	1c5a      	adds	r2, r3, #1
 8025fca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025fce:	0c0b      	lsrs	r3, r1, #16
 8025fd0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025fd4:	1c42      	adds	r2, r0, #1
 8025fd6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025fda:	0a0a      	lsrs	r2, r1, #8
 8025fdc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025fe0:	021b      	lsls	r3, r3, #8
 8025fe2:	00d2      	lsls	r2, r2, #3
 8025fe4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025fe8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025fec:	4313      	orrs	r3, r2
 8025fee:	1c72      	adds	r2, r6, #1
 8025ff0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025ff4:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025ff8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025ffc:	4319      	orrs	r1, r3
 8025ffe:	9b02      	ldr	r3, [sp, #8]
 8026000:	8019      	strh	r1, [r3, #0]
 8026002:	b005      	add	sp, #20
 8026004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026008:	2500      	movs	r5, #0
 802600a:	e6fe      	b.n	8025e0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802600c:	2100      	movs	r1, #0
 802600e:	460d      	mov	r5, r1
 8026010:	e706      	b.n	8025e20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026012:	2100      	movs	r1, #0
 8026014:	e704      	b.n	8025e20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8026016:	4631      	mov	r1, r6
 8026018:	e702      	b.n	8025e20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802601a:	2400      	movs	r4, #0
 802601c:	e713      	b.n	8025e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802601e:	2200      	movs	r2, #0
 8026020:	4614      	mov	r4, r2
 8026022:	e71a      	b.n	8025e5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8026024:	4602      	mov	r2, r0
 8026026:	4604      	mov	r4, r0
 8026028:	e717      	b.n	8025e5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802602a:	2200      	movs	r2, #0
 802602c:	e715      	b.n	8025e5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802602e:	4632      	mov	r2, r6
 8026030:	e713      	b.n	8025e5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08026034 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026038:	b09b      	sub	sp, #108	; 0x6c
 802603a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802603e:	9218      	str	r2, [sp, #96]	; 0x60
 8026040:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8026042:	9116      	str	r1, [sp, #88]	; 0x58
 8026044:	9307      	str	r3, [sp, #28]
 8026046:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802604a:	9019      	str	r0, [sp, #100]	; 0x64
 802604c:	6850      	ldr	r0, [r2, #4]
 802604e:	6812      	ldr	r2, [r2, #0]
 8026050:	fb00 1303 	mla	r3, r0, r3, r1
 8026054:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026058:	930a      	str	r3, [sp, #40]	; 0x28
 802605a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802605c:	681b      	ldr	r3, [r3, #0]
 802605e:	930f      	str	r3, [sp, #60]	; 0x3c
 8026060:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8026062:	2b00      	cmp	r3, #0
 8026064:	dc03      	bgt.n	802606e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026066:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026068:	2b00      	cmp	r3, #0
 802606a:	f340 8386 	ble.w	802677a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802606e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026070:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026074:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026078:	1e48      	subs	r0, r1, #1
 802607a:	1e57      	subs	r7, r2, #1
 802607c:	9b07      	ldr	r3, [sp, #28]
 802607e:	2b00      	cmp	r3, #0
 8026080:	f340 8166 	ble.w	8026350 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8026084:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8026088:	ea4f 4326 	mov.w	r3, r6, asr #16
 802608c:	d406      	bmi.n	802609c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802608e:	4584      	cmp	ip, r0
 8026090:	da04      	bge.n	802609c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026092:	2b00      	cmp	r3, #0
 8026094:	db02      	blt.n	802609c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8026096:	42bb      	cmp	r3, r7
 8026098:	f2c0 815b 	blt.w	8026352 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802609c:	f11c 0c01 	adds.w	ip, ip, #1
 80260a0:	f100 814b 	bmi.w	802633a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80260a4:	4561      	cmp	r1, ip
 80260a6:	f2c0 8148 	blt.w	802633a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80260aa:	3301      	adds	r3, #1
 80260ac:	f100 8145 	bmi.w	802633a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80260b0:	429a      	cmp	r2, r3
 80260b2:	f2c0 8142 	blt.w	802633a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80260b6:	9b07      	ldr	r3, [sp, #28]
 80260b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80260ba:	9317      	str	r3, [sp, #92]	; 0x5c
 80260bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80260be:	2b00      	cmp	r3, #0
 80260c0:	f340 8165 	ble.w	802638e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80260c4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80260c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80260c8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80260cc:	689b      	ldr	r3, [r3, #8]
 80260ce:	1422      	asrs	r2, r4, #16
 80260d0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80260d4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80260d8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80260dc:	f100 81d5 	bmi.w	802648a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80260e0:	f103 38ff 	add.w	r8, r3, #4294967295
 80260e4:	4542      	cmp	r2, r8
 80260e6:	f280 81d0 	bge.w	802648a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80260ea:	f1bc 0f00 	cmp.w	ip, #0
 80260ee:	f2c0 81cc 	blt.w	802648a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80260f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80260f6:	45c4      	cmp	ip, r8
 80260f8:	f280 81c7 	bge.w	802648a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80260fc:	b21b      	sxth	r3, r3
 80260fe:	fb0c 2203 	mla	r2, ip, r3, r2
 8026102:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026104:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8026108:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802610c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8026110:	2900      	cmp	r1, #0
 8026112:	f000 8182 	beq.w	802641a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8026116:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802611a:	950b      	str	r5, [sp, #44]	; 0x2c
 802611c:	0e2d      	lsrs	r5, r5, #24
 802611e:	9512      	str	r5, [sp, #72]	; 0x48
 8026120:	b180      	cbz	r0, 8026144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8026122:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8026126:	3b01      	subs	r3, #1
 8026128:	009b      	lsls	r3, r3, #2
 802612a:	3304      	adds	r3, #4
 802612c:	eb08 0c03 	add.w	ip, r8, r3
 8026130:	f858 3003 	ldr.w	r3, [r8, r3]
 8026134:	9308      	str	r3, [sp, #32]
 8026136:	0e1b      	lsrs	r3, r3, #24
 8026138:	9310      	str	r3, [sp, #64]	; 0x40
 802613a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802613e:	930c      	str	r3, [sp, #48]	; 0x30
 8026140:	0e1b      	lsrs	r3, r3, #24
 8026142:	9313      	str	r3, [sp, #76]	; 0x4c
 8026144:	b289      	uxth	r1, r1
 8026146:	b280      	uxth	r0, r0
 8026148:	fb01 f900 	mul.w	r9, r1, r0
 802614c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026150:	0109      	lsls	r1, r1, #4
 8026152:	eba1 0809 	sub.w	r8, r1, r9
 8026156:	b280      	uxth	r0, r0
 8026158:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 802615c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802615e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026160:	fa1f f888 	uxth.w	r8, r8
 8026164:	1a09      	subs	r1, r1, r0
 8026166:	b289      	uxth	r1, r1
 8026168:	fb08 f303 	mul.w	r3, r8, r3
 802616c:	fb01 330e 	mla	r3, r1, lr, r3
 8026170:	fb00 3305 	mla	r3, r0, r5, r3
 8026174:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026176:	fb09 3305 	mla	r3, r9, r5, r3
 802617a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802617e:	2b00      	cmp	r3, #0
 8026180:	f000 80d2 	beq.w	8026328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026184:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026188:	d01b      	beq.n	80261c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802618a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802618e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026192:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026196:	fb0e fe02 	mul.w	lr, lr, r2
 802619a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802619e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80261a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80261a6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80261aa:	4452      	add	r2, sl
 80261ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80261b0:	0a12      	lsrs	r2, r2, #8
 80261b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80261b6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80261ba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80261be:	ea42 020c 	orr.w	r2, r2, ip
 80261c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80261c4:	2dff      	cmp	r5, #255	; 0xff
 80261c6:	d021      	beq.n	802620c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80261c8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80261ca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80261ce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80261d0:	fb05 fb0b 	mul.w	fp, r5, fp
 80261d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80261d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80261da:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80261dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80261e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80261e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80261e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80261ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80261f0:	44de      	add	lr, fp
 80261f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80261f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80261fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80261fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026202:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026206:	ea4e 050a 	orr.w	r5, lr, sl
 802620a:	950b      	str	r5, [sp, #44]	; 0x2c
 802620c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802620e:	2dff      	cmp	r5, #255	; 0xff
 8026210:	d021      	beq.n	8026256 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026212:	9d08      	ldr	r5, [sp, #32]
 8026214:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026218:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802621a:	fb05 fb0b 	mul.w	fp, r5, fp
 802621e:	9d08      	ldr	r5, [sp, #32]
 8026220:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8026224:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026226:	fb05 fa0e 	mul.w	sl, r5, lr
 802622a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802622e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026232:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026236:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802623a:	44de      	add	lr, fp
 802623c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026240:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026248:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802624c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026250:	ea4e 050a 	orr.w	r5, lr, sl
 8026254:	9508      	str	r5, [sp, #32]
 8026256:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026258:	2dff      	cmp	r5, #255	; 0xff
 802625a:	d021      	beq.n	80262a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802625c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802625e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026262:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026264:	fb05 fb0b 	mul.w	fp, r5, fp
 8026268:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802626a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802626e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8026270:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026274:	fb05 fa0a 	mul.w	sl, r5, sl
 8026278:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802627c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026280:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026284:	44de      	add	lr, fp
 8026286:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802628a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802628e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026292:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026296:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802629a:	ea4e 050a 	orr.w	r5, lr, sl
 802629e:	950c      	str	r5, [sp, #48]	; 0x30
 80262a0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80262a2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80262a6:	9d08      	ldr	r5, [sp, #32]
 80262a8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80262ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80262b0:	fb01 cc0e 	mla	ip, r1, lr, ip
 80262b4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80262b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80262ba:	fb00 cc0e 	mla	ip, r0, lr, ip
 80262be:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80262c2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80262c4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80262c8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80262cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80262d0:	fb08 f80e 	mul.w	r8, r8, lr
 80262d4:	fb01 8202 	mla	r2, r1, r2, r8
 80262d8:	9908      	ldr	r1, [sp, #32]
 80262da:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80262de:	990c      	ldr	r1, [sp, #48]	; 0x30
 80262e0:	fb00 220a 	mla	r2, r0, sl, r2
 80262e4:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80262e8:	fb09 2900 	mla	r9, r9, r0, r2
 80262ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80262f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80262f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80262f8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80262fc:	ea4c 0c09 	orr.w	ip, ip, r9
 8026300:	2bff      	cmp	r3, #255	; 0xff
 8026302:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026306:	f040 8091 	bne.w	802642c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802630a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802630e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8026312:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026316:	f022 0207 	bic.w	r2, r2, #7
 802631a:	431a      	orrs	r2, r3
 802631c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8026320:	ea4c 0c02 	orr.w	ip, ip, r2
 8026324:	f8a7 c000 	strh.w	ip, [r7]
 8026328:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802632a:	441c      	add	r4, r3
 802632c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802632e:	441e      	add	r6, r3
 8026330:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8026332:	3b01      	subs	r3, #1
 8026334:	3702      	adds	r7, #2
 8026336:	9317      	str	r3, [sp, #92]	; 0x5c
 8026338:	e6c0      	b.n	80260bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802633a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802633c:	441c      	add	r4, r3
 802633e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026340:	441e      	add	r6, r3
 8026342:	9b07      	ldr	r3, [sp, #28]
 8026344:	3b01      	subs	r3, #1
 8026346:	9307      	str	r3, [sp, #28]
 8026348:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802634a:	3302      	adds	r3, #2
 802634c:	930a      	str	r3, [sp, #40]	; 0x28
 802634e:	e695      	b.n	802607c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026350:	d024      	beq.n	802639c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8026352:	9b07      	ldr	r3, [sp, #28]
 8026354:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8026356:	3b01      	subs	r3, #1
 8026358:	fb00 4003 	mla	r0, r0, r3, r4
 802635c:	1400      	asrs	r0, r0, #16
 802635e:	f53f aeaa 	bmi.w	80260b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026362:	3901      	subs	r1, #1
 8026364:	4288      	cmp	r0, r1
 8026366:	f6bf aea6 	bge.w	80260b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802636a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802636c:	fb01 6303 	mla	r3, r1, r3, r6
 8026370:	141b      	asrs	r3, r3, #16
 8026372:	f53f aea0 	bmi.w	80260b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8026376:	3a01      	subs	r2, #1
 8026378:	4293      	cmp	r3, r2
 802637a:	f6bf ae9c 	bge.w	80260b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802637e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026382:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8026386:	f1bb 0f00 	cmp.w	fp, #0
 802638a:	f300 809a 	bgt.w	80264c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802638e:	9b07      	ldr	r3, [sp, #28]
 8026390:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026394:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026396:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802639a:	930a      	str	r3, [sp, #40]	; 0x28
 802639c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802639e:	2b00      	cmp	r3, #0
 80263a0:	f340 81eb 	ble.w	802677a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80263a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80263a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80263ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80263b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80263b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80263b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80263ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80263be:	eef0 6a62 	vmov.f32	s13, s5
 80263c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80263c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80263ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80263ce:	ee16 4a90 	vmov	r4, s13
 80263d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80263d6:	eef0 6a43 	vmov.f32	s13, s6
 80263da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80263de:	ee12 2a90 	vmov	r2, s5
 80263e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80263e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80263ea:	ee13 2a10 	vmov	r2, s6
 80263ee:	9327      	str	r3, [sp, #156]	; 0x9c
 80263f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80263f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80263f6:	9328      	str	r3, [sp, #160]	; 0xa0
 80263f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80263fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80263fc:	3b01      	subs	r3, #1
 80263fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026402:	9316      	str	r3, [sp, #88]	; 0x58
 8026404:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026406:	bf08      	it	eq
 8026408:	4613      	moveq	r3, r2
 802640a:	ee16 6a90 	vmov	r6, s13
 802640e:	9307      	str	r3, [sp, #28]
 8026410:	eeb0 3a67 	vmov.f32	s6, s15
 8026414:	eef0 2a47 	vmov.f32	s5, s14
 8026418:	e622      	b.n	8026060 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802641a:	2800      	cmp	r0, #0
 802641c:	f43f ae92 	beq.w	8026144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8026420:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8026424:	9308      	str	r3, [sp, #32]
 8026426:	0e1b      	lsrs	r3, r3, #24
 8026428:	9310      	str	r3, [sp, #64]	; 0x40
 802642a:	e68b      	b.n	8026144 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802642c:	8839      	ldrh	r1, [r7, #0]
 802642e:	4dd4      	ldr	r5, [pc, #848]	; (8026780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8026430:	43db      	mvns	r3, r3
 8026432:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8026436:	fa5f f883 	uxtb.w	r8, r3
 802643a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802643e:	fb0e fe08 	mul.w	lr, lr, r8
 8026442:	10c8      	asrs	r0, r1, #3
 8026444:	00cb      	lsls	r3, r1, #3
 8026446:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802644a:	f10e 0101 	add.w	r1, lr, #1
 802644e:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8026452:	fb00 f008 	mul.w	r0, r0, r8
 8026456:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802645a:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802645e:	f100 0e01 	add.w	lr, r0, #1
 8026462:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8026466:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802646a:	b2db      	uxtb	r3, r3
 802646c:	b2c9      	uxtb	r1, r1
 802646e:	00d2      	lsls	r2, r2, #3
 8026470:	fb03 f308 	mul.w	r3, r3, r8
 8026474:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8026478:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802647c:	430a      	orrs	r2, r1
 802647e:	1c59      	adds	r1, r3, #1
 8026480:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026484:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8026488:	e748      	b.n	802631c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802648a:	f112 0801 	adds.w	r8, r2, #1
 802648e:	f53f af4b 	bmi.w	8026328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026492:	4543      	cmp	r3, r8
 8026494:	f6ff af48 	blt.w	8026328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026498:	f11c 0801 	adds.w	r8, ip, #1
 802649c:	f53f af44 	bmi.w	8026328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80264a0:	45c6      	cmp	lr, r8
 80264a2:	f6ff af41 	blt.w	8026328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80264a6:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80264aa:	fa0f f28e 	sxth.w	r2, lr
 80264ae:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80264b2:	9200      	str	r2, [sp, #0]
 80264b4:	b21b      	sxth	r3, r3
 80264b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80264b8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80264ba:	4639      	mov	r1, r7
 80264bc:	f7ff fc87 	bl	8025dce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80264c0:	e732      	b.n	8026328 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80264c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80264c4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80264c6:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80264ca:	1421      	asrs	r1, r4, #16
 80264cc:	1433      	asrs	r3, r6, #16
 80264ce:	fb07 1303 	mla	r3, r7, r3, r1
 80264d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80264d4:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80264d8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80264dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80264e0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80264e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80264e8:	2a00      	cmp	r2, #0
 80264ea:	f000 8107 	beq.w	80266fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80264ee:	684d      	ldr	r5, [r1, #4]
 80264f0:	950d      	str	r5, [sp, #52]	; 0x34
 80264f2:	0e2d      	lsrs	r5, r5, #24
 80264f4:	9514      	str	r5, [sp, #80]	; 0x50
 80264f6:	b178      	cbz	r0, 8026518 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80264f8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80264fc:	3f01      	subs	r7, #1
 80264fe:	00bf      	lsls	r7, r7, #2
 8026500:	3704      	adds	r7, #4
 8026502:	eb01 0e07 	add.w	lr, r1, r7
 8026506:	59c9      	ldr	r1, [r1, r7]
 8026508:	9109      	str	r1, [sp, #36]	; 0x24
 802650a:	0e09      	lsrs	r1, r1, #24
 802650c:	9111      	str	r1, [sp, #68]	; 0x44
 802650e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026512:	910e      	str	r1, [sp, #56]	; 0x38
 8026514:	0e09      	lsrs	r1, r1, #24
 8026516:	9115      	str	r1, [sp, #84]	; 0x54
 8026518:	b292      	uxth	r2, r2
 802651a:	b280      	uxth	r0, r0
 802651c:	fb02 f900 	mul.w	r9, r2, r0
 8026520:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8026524:	0112      	lsls	r2, r2, #4
 8026526:	eba2 0e09 	sub.w	lr, r2, r9
 802652a:	b280      	uxth	r0, r0
 802652c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8026530:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026532:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026534:	fa1f fe8e 	uxth.w	lr, lr
 8026538:	1a09      	subs	r1, r1, r0
 802653a:	b289      	uxth	r1, r1
 802653c:	fb0e f202 	mul.w	r2, lr, r2
 8026540:	fb01 220c 	mla	r2, r1, ip, r2
 8026544:	fb00 2205 	mla	r2, r0, r5, r2
 8026548:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802654a:	fb09 2205 	mla	r2, r9, r5, r2
 802654e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8026552:	2a00      	cmp	r2, #0
 8026554:	f000 80c9 	beq.w	80266ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8026558:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802655c:	d019      	beq.n	8026592 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802655e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8026562:	fb0c fa0a 	mul.w	sl, ip, sl
 8026566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802656a:	fb0c fc03 	mul.w	ip, ip, r3
 802656e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8026572:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8026576:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802657a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802657e:	4453      	add	r3, sl
 8026580:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026584:	0a1b      	lsrs	r3, r3, #8
 8026586:	0a3f      	lsrs	r7, r7, #8
 8026588:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802658c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026590:	433b      	orrs	r3, r7
 8026592:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026594:	2dff      	cmp	r5, #255	; 0xff
 8026596:	d020      	beq.n	80265da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8026598:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802659a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802659e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80265a0:	436f      	muls	r7, r5
 80265a2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80265a4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80265a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80265aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80265ae:	fb05 fa0a 	mul.w	sl, r5, sl
 80265b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80265b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80265ba:	44bc      	add	ip, r7
 80265bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80265c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80265c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80265c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80265cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80265d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80265d4:	ea4c 050a 	orr.w	r5, ip, sl
 80265d8:	950d      	str	r5, [sp, #52]	; 0x34
 80265da:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80265dc:	2dff      	cmp	r5, #255	; 0xff
 80265de:	d020      	beq.n	8026622 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80265e0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80265e2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80265e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80265e8:	436f      	muls	r7, r5
 80265ea:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80265ec:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80265f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80265f2:	fb05 fa0c 	mul.w	sl, r5, ip
 80265f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80265fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80265fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026602:	44bc      	add	ip, r7
 8026604:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026608:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802660c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026610:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026614:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026618:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802661c:	ea4c 050a 	orr.w	r5, ip, sl
 8026620:	9509      	str	r5, [sp, #36]	; 0x24
 8026622:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026624:	2dff      	cmp	r5, #255	; 0xff
 8026626:	d020      	beq.n	802666a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8026628:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802662a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802662e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8026630:	436f      	muls	r7, r5
 8026632:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026634:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026638:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802663a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802663e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026642:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026646:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802664a:	44bc      	add	ip, r7
 802664c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026650:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026654:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026658:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802665c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026660:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026664:	ea4c 050a 	orr.w	r5, ip, sl
 8026668:	950e      	str	r5, [sp, #56]	; 0x38
 802666a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802666c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026670:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026672:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8026676:	fb0e f707 	mul.w	r7, lr, r7
 802667a:	fb01 770c 	mla	r7, r1, ip, r7
 802667e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026682:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026684:	fb00 770c 	mla	r7, r0, ip, r7
 8026688:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802668c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802668e:	fb09 770c 	mla	r7, r9, ip, r7
 8026692:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026696:	fb0e fe0c 	mul.w	lr, lr, ip
 802669a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802669e:	fb01 e303 	mla	r3, r1, r3, lr
 80266a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80266a4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80266a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80266aa:	fb00 330a 	mla	r3, r0, sl, r3
 80266ae:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80266b2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80266b6:	0a3f      	lsrs	r7, r7, #8
 80266b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80266bc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80266c0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80266c4:	ea47 070c 	orr.w	r7, r7, ip
 80266c8:	2aff      	cmp	r2, #255	; 0xff
 80266ca:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80266ce:	d11e      	bne.n	802670e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80266d0:	097a      	lsrs	r2, r7, #5
 80266d2:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80266d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80266da:	f023 0307 	bic.w	r3, r3, #7
 80266de:	4313      	orrs	r3, r2
 80266e0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80266e4:	431f      	orrs	r7, r3
 80266e6:	f8a8 7000 	strh.w	r7, [r8]
 80266ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80266ec:	441c      	add	r4, r3
 80266ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80266f0:	f108 0802 	add.w	r8, r8, #2
 80266f4:	441e      	add	r6, r3
 80266f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80266fa:	e644      	b.n	8026386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80266fc:	2800      	cmp	r0, #0
 80266fe:	f43f af0b 	beq.w	8026518 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026702:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026706:	9109      	str	r1, [sp, #36]	; 0x24
 8026708:	0e09      	lsrs	r1, r1, #24
 802670a:	9111      	str	r1, [sp, #68]	; 0x44
 802670c:	e704      	b.n	8026518 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802670e:	f8b8 1000 	ldrh.w	r1, [r8]
 8026712:	43d2      	mvns	r2, r2
 8026714:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8026718:	fa5f fe82 	uxtb.w	lr, r2
 802671c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026720:	fb0c fc0e 	mul.w	ip, ip, lr
 8026724:	10c8      	asrs	r0, r1, #3
 8026726:	00ca      	lsls	r2, r1, #3
 8026728:	f10c 0101 	add.w	r1, ip, #1
 802672c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026730:	0c39      	lsrs	r1, r7, #16
 8026732:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026736:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802673a:	4911      	ldr	r1, [pc, #68]	; (8026780 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802673c:	fb00 f00e 	mul.w	r0, r0, lr
 8026740:	fa5f fc8c 	uxtb.w	ip, ip
 8026744:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8026748:	b2d2      	uxtb	r2, r2
 802674a:	1c41      	adds	r1, r0, #1
 802674c:	fb02 f20e 	mul.w	r2, r2, lr
 8026750:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8026754:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026758:	1c51      	adds	r1, r2, #1
 802675a:	00c0      	lsls	r0, r0, #3
 802675c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8026760:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026764:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8026768:	ea4c 0c00 	orr.w	ip, ip, r0
 802676c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026770:	ea47 0c0c 	orr.w	ip, r7, ip
 8026774:	f8a8 c000 	strh.w	ip, [r8]
 8026778:	e7b7      	b.n	80266ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802677a:	b01b      	add	sp, #108	; 0x6c
 802677c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026780:	fffff800 	.word	0xfffff800

08026784 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8026784:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026788:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802678c:	2d00      	cmp	r5, #0
 802678e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026792:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026796:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802679a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802679e:	fb05 0e03 	mla	lr, r5, r3, r0
 80267a2:	f2c0 808c 	blt.w	80268be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80267a6:	45a9      	cmp	r9, r5
 80267a8:	f340 8089 	ble.w	80268be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80267ac:	2800      	cmp	r0, #0
 80267ae:	f2c0 8084 	blt.w	80268ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80267b2:	4580      	cmp	r8, r0
 80267b4:	f340 8081 	ble.w	80268ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80267b8:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80267bc:	f01e 0f01 	tst.w	lr, #1
 80267c0:	5d16      	ldrb	r6, [r2, r4]
 80267c2:	bf0c      	ite	eq
 80267c4:	f006 060f 	andeq.w	r6, r6, #15
 80267c8:	1136      	asrne	r6, r6, #4
 80267ca:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80267ce:	b2f6      	uxtb	r6, r6
 80267d0:	1c44      	adds	r4, r0, #1
 80267d2:	d477      	bmi.n	80268c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80267d4:	45a0      	cmp	r8, r4
 80267d6:	dd75      	ble.n	80268c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80267d8:	2f00      	cmp	r7, #0
 80267da:	d075      	beq.n	80268c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80267dc:	f10e 0a01 	add.w	sl, lr, #1
 80267e0:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80267e4:	f01a 0f01 	tst.w	sl, #1
 80267e8:	5d14      	ldrb	r4, [r2, r4]
 80267ea:	bf0c      	ite	eq
 80267ec:	f004 040f 	andeq.w	r4, r4, #15
 80267f0:	1124      	asrne	r4, r4, #4
 80267f2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80267f6:	b2e4      	uxtb	r4, r4
 80267f8:	3501      	adds	r5, #1
 80267fa:	d469      	bmi.n	80268d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80267fc:	45a9      	cmp	r9, r5
 80267fe:	dd67      	ble.n	80268d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026800:	f1bc 0f00 	cmp.w	ip, #0
 8026804:	d067      	beq.n	80268d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026806:	2800      	cmp	r0, #0
 8026808:	db60      	blt.n	80268cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802680a:	4580      	cmp	r8, r0
 802680c:	dd5e      	ble.n	80268cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802680e:	eb03 090e 	add.w	r9, r3, lr
 8026812:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026816:	f019 0f01 	tst.w	r9, #1
 802681a:	5d55      	ldrb	r5, [r2, r5]
 802681c:	bf0c      	ite	eq
 802681e:	f005 050f 	andeq.w	r5, r5, #15
 8026822:	112d      	asrne	r5, r5, #4
 8026824:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026828:	b2ed      	uxtb	r5, r5
 802682a:	3001      	adds	r0, #1
 802682c:	d456      	bmi.n	80268dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802682e:	4580      	cmp	r8, r0
 8026830:	dd54      	ble.n	80268dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8026832:	2f00      	cmp	r7, #0
 8026834:	d054      	beq.n	80268e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8026836:	3301      	adds	r3, #1
 8026838:	449e      	add	lr, r3
 802683a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802683e:	f01e 0f01 	tst.w	lr, #1
 8026842:	5cd0      	ldrb	r0, [r2, r3]
 8026844:	bf0c      	ite	eq
 8026846:	f000 000f 	andeq.w	r0, r0, #15
 802684a:	1100      	asrne	r0, r0, #4
 802684c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026850:	b2c3      	uxtb	r3, r0
 8026852:	b2ba      	uxth	r2, r7
 8026854:	fa1f fc8c 	uxth.w	ip, ip
 8026858:	fb02 f00c 	mul.w	r0, r2, ip
 802685c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026860:	0112      	lsls	r2, r2, #4
 8026862:	fa1f fc8c 	uxth.w	ip, ip
 8026866:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802686a:	1a12      	subs	r2, r2, r0
 802686c:	eba7 070c 	sub.w	r7, r7, ip
 8026870:	b292      	uxth	r2, r2
 8026872:	b2bf      	uxth	r7, r7
 8026874:	4362      	muls	r2, r4
 8026876:	fb06 2207 	mla	r2, r6, r7, r2
 802687a:	fb0c 2505 	mla	r5, ip, r5, r2
 802687e:	fb00 5303 	mla	r3, r0, r3, r5
 8026882:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026886:	b1b3      	cbz	r3, 80268b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026888:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802688c:	435a      	muls	r2, r3
 802688e:	1c53      	adds	r3, r2, #1
 8026890:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026894:	4a2d      	ldr	r2, [pc, #180]	; (802694c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026896:	121b      	asrs	r3, r3, #8
 8026898:	6812      	ldr	r2, [r2, #0]
 802689a:	2bff      	cmp	r3, #255	; 0xff
 802689c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80268a0:	d120      	bne.n	80268e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80268a2:	4b2b      	ldr	r3, [pc, #172]	; (8026950 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80268a4:	0950      	lsrs	r0, r2, #5
 80268a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80268aa:	4033      	ands	r3, r6
 80268ac:	4318      	orrs	r0, r3
 80268ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80268b2:	4302      	orrs	r2, r0
 80268b4:	800a      	strh	r2, [r1, #0]
 80268b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80268ba:	2600      	movs	r6, #0
 80268bc:	e788      	b.n	80267d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80268be:	2400      	movs	r4, #0
 80268c0:	4626      	mov	r6, r4
 80268c2:	e799      	b.n	80267f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80268c4:	2400      	movs	r4, #0
 80268c6:	e797      	b.n	80267f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80268c8:	463c      	mov	r4, r7
 80268ca:	e795      	b.n	80267f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80268cc:	2500      	movs	r5, #0
 80268ce:	e7ac      	b.n	802682a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80268d0:	2300      	movs	r3, #0
 80268d2:	461d      	mov	r5, r3
 80268d4:	e7bd      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80268d6:	4663      	mov	r3, ip
 80268d8:	4665      	mov	r5, ip
 80268da:	e7ba      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80268dc:	2300      	movs	r3, #0
 80268de:	e7b8      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80268e0:	463b      	mov	r3, r7
 80268e2:	e7b6      	b.n	8026852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80268e4:	880d      	ldrh	r5, [r1, #0]
 80268e6:	b29f      	uxth	r7, r3
 80268e8:	122c      	asrs	r4, r5, #8
 80268ea:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80268ee:	43db      	mvns	r3, r3
 80268f0:	b2db      	uxtb	r3, r3
 80268f2:	fb10 f007 	smulbb	r0, r0, r7
 80268f6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80268fa:	fb04 0403 	mla	r4, r4, r3, r0
 80268fe:	b2f6      	uxtb	r6, r6
 8026900:	10e8      	asrs	r0, r5, #3
 8026902:	b2d2      	uxtb	r2, r2
 8026904:	00ed      	lsls	r5, r5, #3
 8026906:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802690a:	fb12 f207 	smulbb	r2, r2, r7
 802690e:	fb16 f607 	smulbb	r6, r6, r7
 8026912:	b2ed      	uxtb	r5, r5
 8026914:	b2a4      	uxth	r4, r4
 8026916:	fb00 6603 	mla	r6, r0, r3, r6
 802691a:	fb05 2303 	mla	r3, r5, r3, r2
 802691e:	b29a      	uxth	r2, r3
 8026920:	1c63      	adds	r3, r4, #1
 8026922:	b2b0      	uxth	r0, r6
 8026924:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026928:	1c53      	adds	r3, r2, #1
 802692a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802692e:	1c42      	adds	r2, r0, #1
 8026930:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026934:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026938:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802693c:	0940      	lsrs	r0, r0, #5
 802693e:	4323      	orrs	r3, r4
 8026940:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026944:	4303      	orrs	r3, r0
 8026946:	800b      	strh	r3, [r1, #0]
 8026948:	e7b5      	b.n	80268b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802694a:	bf00      	nop
 802694c:	2001384c 	.word	0x2001384c
 8026950:	00fff800 	.word	0x00fff800

08026954 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026958:	b097      	sub	sp, #92	; 0x5c
 802695a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802695e:	9214      	str	r2, [sp, #80]	; 0x50
 8026960:	9309      	str	r3, [sp, #36]	; 0x24
 8026962:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8026964:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8026968:	910d      	str	r1, [sp, #52]	; 0x34
 802696a:	930f      	str	r3, [sp, #60]	; 0x3c
 802696c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8026970:	9015      	str	r0, [sp, #84]	; 0x54
 8026972:	6850      	ldr	r0, [r2, #4]
 8026974:	6812      	ldr	r2, [r2, #0]
 8026976:	fb00 1303 	mla	r3, r0, r3, r1
 802697a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802697e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026980:	689b      	ldr	r3, [r3, #8]
 8026982:	3301      	adds	r3, #1
 8026984:	f023 0301 	bic.w	r3, r3, #1
 8026988:	930a      	str	r3, [sp, #40]	; 0x28
 802698a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802698c:	681f      	ldr	r7, [r3, #0]
 802698e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026990:	2b00      	cmp	r3, #0
 8026992:	dc03      	bgt.n	802699c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026994:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026996:	2b00      	cmp	r3, #0
 8026998:	f340 8287 	ble.w	8026eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802699c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802699e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80269a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80269a6:	1e48      	subs	r0, r1, #1
 80269a8:	f102 3cff 	add.w	ip, r2, #4294967295
 80269ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269ae:	2b00      	cmp	r3, #0
 80269b0:	f340 80c4 	ble.w	8026b3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80269b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80269b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80269bc:	d406      	bmi.n	80269cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80269be:	4586      	cmp	lr, r0
 80269c0:	da04      	bge.n	80269cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80269c2:	2b00      	cmp	r3, #0
 80269c4:	db02      	blt.n	80269cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80269c6:	4563      	cmp	r3, ip
 80269c8:	f2c0 80b9 	blt.w	8026b3e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80269cc:	f11e 0e01 	adds.w	lr, lr, #1
 80269d0:	f100 80aa 	bmi.w	8026b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80269d4:	4571      	cmp	r1, lr
 80269d6:	f2c0 80a7 	blt.w	8026b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80269da:	3301      	adds	r3, #1
 80269dc:	f100 80a4 	bmi.w	8026b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80269e0:	429a      	cmp	r2, r3
 80269e2:	f2c0 80a1 	blt.w	8026b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80269e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269e8:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80269ec:	930e      	str	r3, [sp, #56]	; 0x38
 80269ee:	46c8      	mov	r8, r9
 80269f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80269f2:	2b00      	cmp	r3, #0
 80269f4:	f340 80c3 	ble.w	8026b7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80269f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80269fa:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80269fe:	1423      	asrs	r3, r4, #16
 8026a00:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026a04:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026a08:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026a0c:	f100 814d 	bmi.w	8026caa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026a10:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026a14:	455b      	cmp	r3, fp
 8026a16:	f280 8148 	bge.w	8026caa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026a1a:	2800      	cmp	r0, #0
 8026a1c:	f2c0 8145 	blt.w	8026caa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026a20:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026a24:	4558      	cmp	r0, fp
 8026a26:	f280 8140 	bge.w	8026caa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026a2a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026a2c:	fb00 3305 	mla	r3, r0, r5, r3
 8026a30:	0858      	lsrs	r0, r3, #1
 8026a32:	07dd      	lsls	r5, r3, #31
 8026a34:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026a38:	bf54      	ite	pl
 8026a3a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026a3e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026a42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026a46:	fa5f fc8c 	uxtb.w	ip, ip
 8026a4a:	2a00      	cmp	r2, #0
 8026a4c:	f000 80db 	beq.w	8026c06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8026a50:	1c58      	adds	r0, r3, #1
 8026a52:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026a56:	07c0      	lsls	r0, r0, #31
 8026a58:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026a5c:	bf54      	ite	pl
 8026a5e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026a62:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026a66:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026a6a:	fa5f f08e 	uxtb.w	r0, lr
 8026a6e:	9010      	str	r0, [sp, #64]	; 0x40
 8026a70:	b1c9      	cbz	r1, 8026aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026a72:	4453      	add	r3, sl
 8026a74:	0858      	lsrs	r0, r3, #1
 8026a76:	07dd      	lsls	r5, r3, #31
 8026a78:	5c38      	ldrb	r0, [r7, r0]
 8026a7a:	bf54      	ite	pl
 8026a7c:	f000 000f 	andpl.w	r0, r0, #15
 8026a80:	1100      	asrmi	r0, r0, #4
 8026a82:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026a86:	3301      	adds	r3, #1
 8026a88:	b2c0      	uxtb	r0, r0
 8026a8a:	900b      	str	r0, [sp, #44]	; 0x2c
 8026a8c:	0858      	lsrs	r0, r3, #1
 8026a8e:	07dd      	lsls	r5, r3, #31
 8026a90:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026a94:	bf54      	ite	pl
 8026a96:	f00e 030f 	andpl.w	r3, lr, #15
 8026a9a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8026a9e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026aa2:	b2db      	uxtb	r3, r3
 8026aa4:	9311      	str	r3, [sp, #68]	; 0x44
 8026aa6:	b292      	uxth	r2, r2
 8026aa8:	b289      	uxth	r1, r1
 8026aaa:	fb02 f301 	mul.w	r3, r2, r1
 8026aae:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026ab2:	0112      	lsls	r2, r2, #4
 8026ab4:	b289      	uxth	r1, r1
 8026ab6:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026aba:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8026abc:	1ad2      	subs	r2, r2, r3
 8026abe:	1a40      	subs	r0, r0, r1
 8026ac0:	b292      	uxth	r2, r2
 8026ac2:	436a      	muls	r2, r5
 8026ac4:	b280      	uxth	r0, r0
 8026ac6:	fb0c 2c00 	mla	ip, ip, r0, r2
 8026aca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026acc:	fb01 c102 	mla	r1, r1, r2, ip
 8026ad0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026ad2:	fb03 1302 	mla	r3, r3, r2, r1
 8026ad6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026ada:	b1db      	cbz	r3, 8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026adc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026ade:	4353      	muls	r3, r2
 8026ae0:	1c5a      	adds	r2, r3, #1
 8026ae2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026ae6:	4ac6      	ldr	r2, [pc, #792]	; (8026e00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026ae8:	121b      	asrs	r3, r3, #8
 8026aea:	6812      	ldr	r2, [r2, #0]
 8026aec:	2bff      	cmp	r3, #255	; 0xff
 8026aee:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026af2:	f040 8099 	bne.w	8026c28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026af6:	0953      	lsrs	r3, r2, #5
 8026af8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026afc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026b00:	f02c 0c07 	bic.w	ip, ip, #7
 8026b04:	ea43 0c0c 	orr.w	ip, r3, ip
 8026b08:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026b0c:	ea4c 0202 	orr.w	r2, ip, r2
 8026b10:	f8a8 2000 	strh.w	r2, [r8]
 8026b14:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026b16:	441c      	add	r4, r3
 8026b18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026b1a:	441e      	add	r6, r3
 8026b1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026b1e:	3b01      	subs	r3, #1
 8026b20:	f108 0802 	add.w	r8, r8, #2
 8026b24:	930e      	str	r3, [sp, #56]	; 0x38
 8026b26:	e763      	b.n	80269f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026b28:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026b2a:	441c      	add	r4, r3
 8026b2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026b2e:	441e      	add	r6, r3
 8026b30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b32:	3b01      	subs	r3, #1
 8026b34:	9309      	str	r3, [sp, #36]	; 0x24
 8026b36:	f109 0902 	add.w	r9, r9, #2
 8026b3a:	e737      	b.n	80269ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026b3c:	d024      	beq.n	8026b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8026b3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b40:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8026b42:	3b01      	subs	r3, #1
 8026b44:	fb00 4003 	mla	r0, r0, r3, r4
 8026b48:	1400      	asrs	r0, r0, #16
 8026b4a:	f53f af4c 	bmi.w	80269e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026b4e:	3901      	subs	r1, #1
 8026b50:	4288      	cmp	r0, r1
 8026b52:	f6bf af48 	bge.w	80269e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026b56:	9924      	ldr	r1, [sp, #144]	; 0x90
 8026b58:	fb01 6303 	mla	r3, r1, r3, r6
 8026b5c:	141b      	asrs	r3, r3, #16
 8026b5e:	f53f af42 	bmi.w	80269e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026b62:	3a01      	subs	r2, #1
 8026b64:	4293      	cmp	r3, r2
 8026b66:	f6bf af3e 	bge.w	80269e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026b6a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8026b6e:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026b72:	930e      	str	r3, [sp, #56]	; 0x38
 8026b74:	46c8      	mov	r8, r9
 8026b76:	f1bb 0f00 	cmp.w	fp, #0
 8026b7a:	f300 80b7 	bgt.w	8026cec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8026b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b80:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026b84:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026b88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026b8a:	2b00      	cmp	r3, #0
 8026b8c:	f340 818d 	ble.w	8026eaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026b90:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026b94:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026b98:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026b9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b9e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026ba2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026ba6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026baa:	eef0 6a62 	vmov.f32	s13, s5
 8026bae:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026bb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026bb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026bba:	ee16 4a90 	vmov	r4, s13
 8026bbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026bc2:	eef0 6a43 	vmov.f32	s13, s6
 8026bc6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026bca:	ee12 2a90 	vmov	r2, s5
 8026bce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026bd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8026bd6:	ee13 2a10 	vmov	r2, s6
 8026bda:	9323      	str	r3, [sp, #140]	; 0x8c
 8026bdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026bde:	fb92 f3f3 	sdiv	r3, r2, r3
 8026be2:	9324      	str	r3, [sp, #144]	; 0x90
 8026be4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026be6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026be8:	3b01      	subs	r3, #1
 8026bea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026bee:	930d      	str	r3, [sp, #52]	; 0x34
 8026bf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026bf2:	bf08      	it	eq
 8026bf4:	4613      	moveq	r3, r2
 8026bf6:	ee16 6a90 	vmov	r6, s13
 8026bfa:	9309      	str	r3, [sp, #36]	; 0x24
 8026bfc:	eeb0 3a67 	vmov.f32	s6, s15
 8026c00:	eef0 2a47 	vmov.f32	s5, s14
 8026c04:	e6c3      	b.n	802698e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026c06:	2900      	cmp	r1, #0
 8026c08:	f43f af4d 	beq.w	8026aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026c0c:	eb0a 0003 	add.w	r0, sl, r3
 8026c10:	0843      	lsrs	r3, r0, #1
 8026c12:	07c0      	lsls	r0, r0, #31
 8026c14:	5cfb      	ldrb	r3, [r7, r3]
 8026c16:	bf54      	ite	pl
 8026c18:	f003 030f 	andpl.w	r3, r3, #15
 8026c1c:	111b      	asrmi	r3, r3, #4
 8026c1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026c22:	b2db      	uxtb	r3, r3
 8026c24:	930b      	str	r3, [sp, #44]	; 0x2c
 8026c26:	e73e      	b.n	8026aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026c28:	f8b8 e000 	ldrh.w	lr, [r8]
 8026c2c:	fa1f fb83 	uxth.w	fp, r3
 8026c30:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026c34:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026c38:	43db      	mvns	r3, r3
 8026c3a:	b2db      	uxtb	r3, r3
 8026c3c:	fb11 f10b 	smulbb	r1, r1, fp
 8026c40:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026c44:	fb00 1003 	mla	r0, r0, r3, r1
 8026c48:	fa5f fc8c 	uxtb.w	ip, ip
 8026c4c:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026c50:	b2d2      	uxtb	r2, r2
 8026c52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026c56:	b280      	uxth	r0, r0
 8026c58:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026c5c:	fb1c fc0b 	smulbb	ip, ip, fp
 8026c60:	fa5f fe8e 	uxtb.w	lr, lr
 8026c64:	fb12 fb0b 	smulbb	fp, r2, fp
 8026c68:	fb01 cc03 	mla	ip, r1, r3, ip
 8026c6c:	fb0e bb03 	mla	fp, lr, r3, fp
 8026c70:	1c43      	adds	r3, r0, #1
 8026c72:	fa1f fc8c 	uxth.w	ip, ip
 8026c76:	fa1f fb8b 	uxth.w	fp, fp
 8026c7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026c7e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026c82:	f10c 0101 	add.w	r1, ip, #1
 8026c86:	f10b 0001 	add.w	r0, fp, #1
 8026c8a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026c8e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026c92:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026c96:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026c9a:	4318      	orrs	r0, r3
 8026c9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026ca0:	ea40 000c 	orr.w	r0, r0, ip
 8026ca4:	f8a8 0000 	strh.w	r0, [r8]
 8026ca8:	e734      	b.n	8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026caa:	f113 0b01 	adds.w	fp, r3, #1
 8026cae:	f53f af31 	bmi.w	8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026cb2:	45dc      	cmp	ip, fp
 8026cb4:	f6ff af2e 	blt.w	8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026cb8:	f110 0b01 	adds.w	fp, r0, #1
 8026cbc:	f53f af2a 	bmi.w	8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026cc0:	45de      	cmp	lr, fp
 8026cc2:	f6ff af27 	blt.w	8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026cc6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026cc8:	9302      	str	r3, [sp, #8]
 8026cca:	fa0f f38e 	sxth.w	r3, lr
 8026cce:	9301      	str	r3, [sp, #4]
 8026cd0:	fa0f f38c 	sxth.w	r3, ip
 8026cd4:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026cd8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026cdc:	9300      	str	r3, [sp, #0]
 8026cde:	463a      	mov	r2, r7
 8026ce0:	4653      	mov	r3, sl
 8026ce2:	4641      	mov	r1, r8
 8026ce4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026ce6:	f7ff fd4d 	bl	8026784 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026cea:	e713      	b.n	8026b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026cec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026cee:	1422      	asrs	r2, r4, #16
 8026cf0:	1433      	asrs	r3, r6, #16
 8026cf2:	fb05 2303 	mla	r3, r5, r3, r2
 8026cf6:	085a      	lsrs	r2, r3, #1
 8026cf8:	07dd      	lsls	r5, r3, #31
 8026cfa:	5cba      	ldrb	r2, [r7, r2]
 8026cfc:	bf54      	ite	pl
 8026cfe:	f002 020f 	andpl.w	r2, r2, #15
 8026d02:	1112      	asrmi	r2, r2, #4
 8026d04:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026d08:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026d0c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026d10:	b2d2      	uxtb	r2, r2
 8026d12:	2900      	cmp	r1, #0
 8026d14:	d076      	beq.n	8026e04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026d16:	f103 0e01 	add.w	lr, r3, #1
 8026d1a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026d1e:	f01e 0f01 	tst.w	lr, #1
 8026d22:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026d26:	bf0c      	ite	eq
 8026d28:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026d2c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026d30:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026d34:	fa5f f58c 	uxtb.w	r5, ip
 8026d38:	9512      	str	r5, [sp, #72]	; 0x48
 8026d3a:	b300      	cbz	r0, 8026d7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026d3c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026d3e:	442b      	add	r3, r5
 8026d40:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026d44:	07dd      	lsls	r5, r3, #31
 8026d46:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026d4a:	bf54      	ite	pl
 8026d4c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026d50:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026d54:	3301      	adds	r3, #1
 8026d56:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026d5a:	fa5f f58c 	uxtb.w	r5, ip
 8026d5e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026d62:	950c      	str	r5, [sp, #48]	; 0x30
 8026d64:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026d68:	07dd      	lsls	r5, r3, #31
 8026d6a:	bf54      	ite	pl
 8026d6c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026d70:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026d74:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026d78:	fa5f f38c 	uxtb.w	r3, ip
 8026d7c:	9313      	str	r3, [sp, #76]	; 0x4c
 8026d7e:	b289      	uxth	r1, r1
 8026d80:	b280      	uxth	r0, r0
 8026d82:	fb01 f300 	mul.w	r3, r1, r0
 8026d86:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026d8a:	0109      	lsls	r1, r1, #4
 8026d8c:	b280      	uxth	r0, r0
 8026d8e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026d92:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026d94:	1ac9      	subs	r1, r1, r3
 8026d96:	ebac 0c00 	sub.w	ip, ip, r0
 8026d9a:	b289      	uxth	r1, r1
 8026d9c:	4369      	muls	r1, r5
 8026d9e:	fa1f fc8c 	uxth.w	ip, ip
 8026da2:	fb02 120c 	mla	r2, r2, ip, r1
 8026da6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026da8:	fb00 2001 	mla	r0, r0, r1, r2
 8026dac:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026dae:	fb03 0302 	mla	r3, r3, r2, r0
 8026db2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026db6:	b1d3      	cbz	r3, 8026dee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026db8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026dba:	4353      	muls	r3, r2
 8026dbc:	1c5a      	adds	r2, r3, #1
 8026dbe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026dc2:	4a0f      	ldr	r2, [pc, #60]	; (8026e00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026dc4:	121b      	asrs	r3, r3, #8
 8026dc6:	6812      	ldr	r2, [r2, #0]
 8026dc8:	2bff      	cmp	r3, #255	; 0xff
 8026dca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026dce:	d12d      	bne.n	8026e2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026dd0:	0953      	lsrs	r3, r2, #5
 8026dd2:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026dd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026dda:	f02c 0c07 	bic.w	ip, ip, #7
 8026dde:	ea43 0c0c 	orr.w	ip, r3, ip
 8026de2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026de6:	ea4c 0202 	orr.w	r2, ip, r2
 8026dea:	f8a8 2000 	strh.w	r2, [r8]
 8026dee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026df0:	441c      	add	r4, r3
 8026df2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026df4:	f108 0802 	add.w	r8, r8, #2
 8026df8:	441e      	add	r6, r3
 8026dfa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026dfe:	e6ba      	b.n	8026b76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026e00:	2001384c 	.word	0x2001384c
 8026e04:	2800      	cmp	r0, #0
 8026e06:	d0ba      	beq.n	8026d7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026e08:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026e0a:	442b      	add	r3, r5
 8026e0c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026e10:	07db      	lsls	r3, r3, #31
 8026e12:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026e16:	bf54      	ite	pl
 8026e18:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026e1c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026e20:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026e24:	fa5f f38c 	uxtb.w	r3, ip
 8026e28:	930c      	str	r3, [sp, #48]	; 0x30
 8026e2a:	e7a8      	b.n	8026d7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026e2c:	f8b8 e000 	ldrh.w	lr, [r8]
 8026e30:	fa1f fa83 	uxth.w	sl, r3
 8026e34:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026e38:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026e3c:	43db      	mvns	r3, r3
 8026e3e:	b2db      	uxtb	r3, r3
 8026e40:	fb11 f10a 	smulbb	r1, r1, sl
 8026e44:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026e48:	fb00 1003 	mla	r0, r0, r3, r1
 8026e4c:	b2d2      	uxtb	r2, r2
 8026e4e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026e52:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026e56:	fa5f fe8e 	uxtb.w	lr, lr
 8026e5a:	fb12 f20a 	smulbb	r2, r2, sl
 8026e5e:	fb0e 2203 	mla	r2, lr, r3, r2
 8026e62:	fa5f fc8c 	uxtb.w	ip, ip
 8026e66:	b280      	uxth	r0, r0
 8026e68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026e6c:	b292      	uxth	r2, r2
 8026e6e:	fb1c fc0a 	smulbb	ip, ip, sl
 8026e72:	fb01 cc03 	mla	ip, r1, r3, ip
 8026e76:	1c43      	adds	r3, r0, #1
 8026e78:	1c51      	adds	r1, r2, #1
 8026e7a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026e7e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026e82:	fa1f fc8c 	uxth.w	ip, ip
 8026e86:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026e8a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026e8e:	4308      	orrs	r0, r1
 8026e90:	f10c 0101 	add.w	r1, ip, #1
 8026e94:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026e98:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026e9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026ea0:	ea40 000c 	orr.w	r0, r0, ip
 8026ea4:	f8a8 0000 	strh.w	r0, [r8]
 8026ea8:	e7a1      	b.n	8026dee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026eaa:	b017      	add	sp, #92	; 0x5c
 8026eac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026eb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026eb4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026eb8:	2d00      	cmp	r5, #0
 8026eba:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026ebe:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026ec2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026ec6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026eca:	fb05 0e03 	mla	lr, r5, r3, r0
 8026ece:	f2c0 80b0 	blt.w	8027032 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026ed2:	45a9      	cmp	r9, r5
 8026ed4:	f340 80ad 	ble.w	8027032 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026ed8:	2800      	cmp	r0, #0
 8026eda:	f2c0 80a8 	blt.w	802702e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026ede:	4580      	cmp	r8, r0
 8026ee0:	f340 80a5 	ble.w	802702e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026ee4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026ee8:	f01e 0f01 	tst.w	lr, #1
 8026eec:	5d16      	ldrb	r6, [r2, r4]
 8026eee:	bf0c      	ite	eq
 8026ef0:	f006 060f 	andeq.w	r6, r6, #15
 8026ef4:	1136      	asrne	r6, r6, #4
 8026ef6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026efa:	b2f6      	uxtb	r6, r6
 8026efc:	1c44      	adds	r4, r0, #1
 8026efe:	f100 809b 	bmi.w	8027038 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026f02:	45a0      	cmp	r8, r4
 8026f04:	f340 8098 	ble.w	8027038 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026f08:	2f00      	cmp	r7, #0
 8026f0a:	f000 8097 	beq.w	802703c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8026f0e:	f10e 0a01 	add.w	sl, lr, #1
 8026f12:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026f16:	f01a 0f01 	tst.w	sl, #1
 8026f1a:	5d14      	ldrb	r4, [r2, r4]
 8026f1c:	bf0c      	ite	eq
 8026f1e:	f004 040f 	andeq.w	r4, r4, #15
 8026f22:	1124      	asrne	r4, r4, #4
 8026f24:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026f28:	b2e4      	uxtb	r4, r4
 8026f2a:	3501      	adds	r5, #1
 8026f2c:	f100 808a 	bmi.w	8027044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026f30:	45a9      	cmp	r9, r5
 8026f32:	f340 8087 	ble.w	8027044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026f36:	f1bc 0f00 	cmp.w	ip, #0
 8026f3a:	f000 8086 	beq.w	802704a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8026f3e:	2800      	cmp	r0, #0
 8026f40:	db7e      	blt.n	8027040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026f42:	4580      	cmp	r8, r0
 8026f44:	dd7c      	ble.n	8027040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026f46:	eb03 090e 	add.w	r9, r3, lr
 8026f4a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026f4e:	f019 0f01 	tst.w	r9, #1
 8026f52:	5d55      	ldrb	r5, [r2, r5]
 8026f54:	bf0c      	ite	eq
 8026f56:	f005 050f 	andeq.w	r5, r5, #15
 8026f5a:	112d      	asrne	r5, r5, #4
 8026f5c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026f60:	b2ed      	uxtb	r5, r5
 8026f62:	3001      	adds	r0, #1
 8026f64:	d474      	bmi.n	8027050 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026f66:	4580      	cmp	r8, r0
 8026f68:	dd72      	ble.n	8027050 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026f6a:	2f00      	cmp	r7, #0
 8026f6c:	d072      	beq.n	8027054 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8026f6e:	3301      	adds	r3, #1
 8026f70:	449e      	add	lr, r3
 8026f72:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026f76:	f01e 0f01 	tst.w	lr, #1
 8026f7a:	5cd0      	ldrb	r0, [r2, r3]
 8026f7c:	bf0c      	ite	eq
 8026f7e:	f000 000f 	andeq.w	r0, r0, #15
 8026f82:	1100      	asrne	r0, r0, #4
 8026f84:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026f88:	b2c3      	uxtb	r3, r0
 8026f8a:	b2ba      	uxth	r2, r7
 8026f8c:	fa1f fc8c 	uxth.w	ip, ip
 8026f90:	fb02 f00c 	mul.w	r0, r2, ip
 8026f94:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026f98:	0112      	lsls	r2, r2, #4
 8026f9a:	fa1f fc8c 	uxth.w	ip, ip
 8026f9e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026fa2:	1a12      	subs	r2, r2, r0
 8026fa4:	eba7 070c 	sub.w	r7, r7, ip
 8026fa8:	b292      	uxth	r2, r2
 8026faa:	b2bf      	uxth	r7, r7
 8026fac:	4362      	muls	r2, r4
 8026fae:	fb06 2207 	mla	r2, r6, r7, r2
 8026fb2:	fb0c 2505 	mla	r5, ip, r5, r2
 8026fb6:	fb00 5303 	mla	r3, r0, r3, r5
 8026fba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026fbe:	b3a3      	cbz	r3, 802702a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026fc0:	4a25      	ldr	r2, [pc, #148]	; (8027058 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026fc2:	880e      	ldrh	r6, [r1, #0]
 8026fc4:	6815      	ldr	r5, [r2, #0]
 8026fc6:	1234      	asrs	r4, r6, #8
 8026fc8:	b29a      	uxth	r2, r3
 8026fca:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026fce:	43db      	mvns	r3, r3
 8026fd0:	b2db      	uxtb	r3, r3
 8026fd2:	fb10 f002 	smulbb	r0, r0, r2
 8026fd6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026fda:	fb04 0403 	mla	r4, r4, r3, r0
 8026fde:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026fe2:	10f0      	asrs	r0, r6, #3
 8026fe4:	b2ed      	uxtb	r5, r5
 8026fe6:	00f6      	lsls	r6, r6, #3
 8026fe8:	fb17 f702 	smulbb	r7, r7, r2
 8026fec:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026ff0:	fb15 f202 	smulbb	r2, r5, r2
 8026ff4:	b2f6      	uxtb	r6, r6
 8026ff6:	b2a4      	uxth	r4, r4
 8026ff8:	fb00 7003 	mla	r0, r0, r3, r7
 8026ffc:	fb06 2303 	mla	r3, r6, r3, r2
 8027000:	b29a      	uxth	r2, r3
 8027002:	1c63      	adds	r3, r4, #1
 8027004:	b280      	uxth	r0, r0
 8027006:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802700a:	1c53      	adds	r3, r2, #1
 802700c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8027010:	1c42      	adds	r2, r0, #1
 8027012:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027016:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802701a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802701e:	0940      	lsrs	r0, r0, #5
 8027020:	4323      	orrs	r3, r4
 8027022:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8027026:	4303      	orrs	r3, r0
 8027028:	800b      	strh	r3, [r1, #0]
 802702a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802702e:	2600      	movs	r6, #0
 8027030:	e764      	b.n	8026efc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8027032:	2400      	movs	r4, #0
 8027034:	4626      	mov	r6, r4
 8027036:	e778      	b.n	8026f2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027038:	2400      	movs	r4, #0
 802703a:	e776      	b.n	8026f2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802703c:	463c      	mov	r4, r7
 802703e:	e774      	b.n	8026f2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8027040:	2500      	movs	r5, #0
 8027042:	e78e      	b.n	8026f62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8027044:	2300      	movs	r3, #0
 8027046:	461d      	mov	r5, r3
 8027048:	e79f      	b.n	8026f8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802704a:	4663      	mov	r3, ip
 802704c:	4665      	mov	r5, ip
 802704e:	e79c      	b.n	8026f8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027050:	2300      	movs	r3, #0
 8027052:	e79a      	b.n	8026f8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027054:	463b      	mov	r3, r7
 8027056:	e798      	b.n	8026f8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8027058:	2001384c 	.word	0x2001384c

0802705c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802705c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027060:	b093      	sub	sp, #76	; 0x4c
 8027062:	461d      	mov	r5, r3
 8027064:	920c      	str	r2, [sp, #48]	; 0x30
 8027066:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8027068:	9107      	str	r1, [sp, #28]
 802706a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802706e:	9011      	str	r0, [sp, #68]	; 0x44
 8027070:	6850      	ldr	r0, [r2, #4]
 8027072:	6812      	ldr	r2, [r2, #0]
 8027074:	fb00 1303 	mla	r3, r0, r3, r1
 8027078:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802707c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802707e:	689b      	ldr	r3, [r3, #8]
 8027080:	3301      	adds	r3, #1
 8027082:	f023 0301 	bic.w	r3, r3, #1
 8027086:	9306      	str	r3, [sp, #24]
 8027088:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802708a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802708e:	681f      	ldr	r7, [r3, #0]
 8027090:	9b07      	ldr	r3, [sp, #28]
 8027092:	2b00      	cmp	r3, #0
 8027094:	dc03      	bgt.n	802709e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8027096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027098:	2b00      	cmp	r3, #0
 802709a:	f340 8267 	ble.w	802756c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802709e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80270a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80270a4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80270a8:	1e48      	subs	r0, r1, #1
 80270aa:	f102 3cff 	add.w	ip, r2, #4294967295
 80270ae:	2d00      	cmp	r5, #0
 80270b0:	f340 80b8 	ble.w	8027224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80270b4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80270b8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80270bc:	d406      	bmi.n	80270cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80270be:	4586      	cmp	lr, r0
 80270c0:	da04      	bge.n	80270cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80270c2:	2b00      	cmp	r3, #0
 80270c4:	db02      	blt.n	80270cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80270c6:	4563      	cmp	r3, ip
 80270c8:	f2c0 80ad 	blt.w	8027226 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80270cc:	f11e 0e01 	adds.w	lr, lr, #1
 80270d0:	f100 80a0 	bmi.w	8027214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80270d4:	4571      	cmp	r1, lr
 80270d6:	f2c0 809d 	blt.w	8027214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80270da:	3301      	adds	r3, #1
 80270dc:	f100 809a 	bmi.w	8027214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80270e0:	429a      	cmp	r2, r3
 80270e2:	f2c0 8097 	blt.w	8027214 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80270e6:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80270ea:	9509      	str	r5, [sp, #36]	; 0x24
 80270ec:	46c8      	mov	r8, r9
 80270ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80270f0:	2b00      	cmp	r3, #0
 80270f2:	f340 80b6 	ble.w	8027262 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80270f6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80270fa:	9308      	str	r3, [sp, #32]
 80270fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80270fe:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8027102:	1423      	asrs	r3, r4, #16
 8027104:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027108:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802710c:	f100 813e 	bmi.w	802738c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027110:	f10c 3bff 	add.w	fp, ip, #4294967295
 8027114:	455b      	cmp	r3, fp
 8027116:	f280 8139 	bge.w	802738c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802711a:	2800      	cmp	r0, #0
 802711c:	f2c0 8136 	blt.w	802738c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8027120:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027124:	4558      	cmp	r0, fp
 8027126:	f280 8131 	bge.w	802738c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802712a:	9a06      	ldr	r2, [sp, #24]
 802712c:	fb00 3302 	mla	r3, r0, r2, r3
 8027130:	0858      	lsrs	r0, r3, #1
 8027132:	07da      	lsls	r2, r3, #31
 8027134:	f817 c000 	ldrb.w	ip, [r7, r0]
 8027138:	9a08      	ldr	r2, [sp, #32]
 802713a:	bf54      	ite	pl
 802713c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8027140:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8027144:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8027148:	fa5f fc8c 	uxtb.w	ip, ip
 802714c:	2a00      	cmp	r2, #0
 802714e:	f000 80cb 	beq.w	80272e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8027152:	1c58      	adds	r0, r3, #1
 8027154:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8027158:	07c0      	lsls	r0, r0, #31
 802715a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802715e:	bf54      	ite	pl
 8027160:	f00e 0e0f 	andpl.w	lr, lr, #15
 8027164:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8027168:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802716c:	fa5f fe8e 	uxtb.w	lr, lr
 8027170:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8027174:	b1b9      	cbz	r1, 80271a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8027176:	4453      	add	r3, sl
 8027178:	0858      	lsrs	r0, r3, #1
 802717a:	07da      	lsls	r2, r3, #31
 802717c:	5c38      	ldrb	r0, [r7, r0]
 802717e:	bf54      	ite	pl
 8027180:	f000 000f 	andpl.w	r0, r0, #15
 8027184:	1100      	asrmi	r0, r0, #4
 8027186:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802718a:	b2c0      	uxtb	r0, r0
 802718c:	900a      	str	r0, [sp, #40]	; 0x28
 802718e:	1c58      	adds	r0, r3, #1
 8027190:	0843      	lsrs	r3, r0, #1
 8027192:	07c2      	lsls	r2, r0, #31
 8027194:	5cfb      	ldrb	r3, [r7, r3]
 8027196:	bf54      	ite	pl
 8027198:	f003 030f 	andpl.w	r3, r3, #15
 802719c:	111b      	asrmi	r3, r3, #4
 802719e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80271a2:	b2db      	uxtb	r3, r3
 80271a4:	930e      	str	r3, [sp, #56]	; 0x38
 80271a6:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80271aa:	b289      	uxth	r1, r1
 80271ac:	fb02 f301 	mul.w	r3, r2, r1
 80271b0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80271b4:	0112      	lsls	r2, r2, #4
 80271b6:	b289      	uxth	r1, r1
 80271b8:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80271bc:	1a40      	subs	r0, r0, r1
 80271be:	fa1f fe80 	uxth.w	lr, r0
 80271c2:	1ad2      	subs	r2, r2, r3
 80271c4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80271c6:	b292      	uxth	r2, r2
 80271c8:	4342      	muls	r2, r0
 80271ca:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80271ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80271d0:	fb01 c102 	mla	r1, r1, r2, ip
 80271d4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80271d6:	fb03 1302 	mla	r3, r3, r2, r1
 80271da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80271de:	2bff      	cmp	r3, #255	; 0xff
 80271e0:	f040 8093 	bne.w	802730a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80271e4:	4bbe      	ldr	r3, [pc, #760]	; (80274e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80271e6:	681a      	ldr	r2, [r3, #0]
 80271e8:	4bbe      	ldr	r3, [pc, #760]	; (80274e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80271ea:	0951      	lsrs	r1, r2, #5
 80271ec:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80271f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80271f4:	430b      	orrs	r3, r1
 80271f6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80271fa:	4313      	orrs	r3, r2
 80271fc:	f8a8 3000 	strh.w	r3, [r8]
 8027200:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027202:	441c      	add	r4, r3
 8027204:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027206:	441e      	add	r6, r3
 8027208:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802720a:	3b01      	subs	r3, #1
 802720c:	f108 0802 	add.w	r8, r8, #2
 8027210:	9309      	str	r3, [sp, #36]	; 0x24
 8027212:	e76c      	b.n	80270ee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027214:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027216:	441c      	add	r4, r3
 8027218:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802721a:	3d01      	subs	r5, #1
 802721c:	441e      	add	r6, r3
 802721e:	f109 0902 	add.w	r9, r9, #2
 8027222:	e744      	b.n	80270ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8027224:	d021      	beq.n	802726a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027226:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8027228:	1e6b      	subs	r3, r5, #1
 802722a:	fb00 4003 	mla	r0, r0, r3, r4
 802722e:	1400      	asrs	r0, r0, #16
 8027230:	f53f af59 	bmi.w	80270e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027234:	3901      	subs	r1, #1
 8027236:	4288      	cmp	r0, r1
 8027238:	f6bf af55 	bge.w	80270e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802723c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802723e:	fb01 6303 	mla	r3, r1, r3, r6
 8027242:	141b      	asrs	r3, r3, #16
 8027244:	f53f af4f 	bmi.w	80270e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027248:	3a01      	subs	r2, #1
 802724a:	4293      	cmp	r3, r2
 802724c:	f6bf af4b 	bge.w	80270e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027250:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8027254:	9308      	str	r3, [sp, #32]
 8027256:	46a8      	mov	r8, r5
 8027258:	46ce      	mov	lr, r9
 802725a:	f1b8 0f00 	cmp.w	r8, #0
 802725e:	f300 80b5 	bgt.w	80273cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8027262:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027266:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802726a:	9b07      	ldr	r3, [sp, #28]
 802726c:	2b00      	cmp	r3, #0
 802726e:	f340 817d 	ble.w	802756c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8027272:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027276:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802727a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802727e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027280:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027284:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027288:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802728c:	eef0 6a62 	vmov.f32	s13, s5
 8027290:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027294:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027298:	ee77 2a62 	vsub.f32	s5, s14, s5
 802729c:	ee16 4a90 	vmov	r4, s13
 80272a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80272a4:	eef0 6a43 	vmov.f32	s13, s6
 80272a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80272ac:	ee12 2a90 	vmov	r2, s5
 80272b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80272b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80272b8:	ee13 2a10 	vmov	r2, s6
 80272bc:	931f      	str	r3, [sp, #124]	; 0x7c
 80272be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80272c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80272c4:	9320      	str	r3, [sp, #128]	; 0x80
 80272c6:	9b07      	ldr	r3, [sp, #28]
 80272c8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80272ca:	3b01      	subs	r3, #1
 80272cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80272d0:	9307      	str	r3, [sp, #28]
 80272d2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80272d4:	ee16 6a90 	vmov	r6, s13
 80272d8:	bf14      	ite	ne
 80272da:	461d      	movne	r5, r3
 80272dc:	4615      	moveq	r5, r2
 80272de:	eeb0 3a67 	vmov.f32	s6, s15
 80272e2:	eef0 2a47 	vmov.f32	s5, s14
 80272e6:	e6d3      	b.n	8027090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80272e8:	2900      	cmp	r1, #0
 80272ea:	f43f af5c 	beq.w	80271a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80272ee:	eb0a 0003 	add.w	r0, sl, r3
 80272f2:	0843      	lsrs	r3, r0, #1
 80272f4:	07c0      	lsls	r0, r0, #31
 80272f6:	5cfb      	ldrb	r3, [r7, r3]
 80272f8:	bf54      	ite	pl
 80272fa:	f003 030f 	andpl.w	r3, r3, #15
 80272fe:	111b      	asrmi	r3, r3, #4
 8027300:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027304:	b2db      	uxtb	r3, r3
 8027306:	930a      	str	r3, [sp, #40]	; 0x28
 8027308:	e74d      	b.n	80271a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802730a:	2b00      	cmp	r3, #0
 802730c:	f43f af78 	beq.w	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027310:	4a73      	ldr	r2, [pc, #460]	; (80274e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027312:	f8b8 c000 	ldrh.w	ip, [r8]
 8027316:	6810      	ldr	r0, [r2, #0]
 8027318:	fa1f fe83 	uxth.w	lr, r3
 802731c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8027320:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027324:	43db      	mvns	r3, r3
 8027326:	b2db      	uxtb	r3, r3
 8027328:	fb12 f20e 	smulbb	r2, r2, lr
 802732c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8027330:	fb01 2103 	mla	r1, r1, r3, r2
 8027334:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027338:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802733c:	b2c0      	uxtb	r0, r0
 802733e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8027342:	fb1b fb0e 	smulbb	fp, fp, lr
 8027346:	b289      	uxth	r1, r1
 8027348:	fb10 fe0e 	smulbb	lr, r0, lr
 802734c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027350:	fa5f fc8c 	uxtb.w	ip, ip
 8027354:	fb02 b203 	mla	r2, r2, r3, fp
 8027358:	1c48      	adds	r0, r1, #1
 802735a:	fb0c e303 	mla	r3, ip, r3, lr
 802735e:	b292      	uxth	r2, r2
 8027360:	b29b      	uxth	r3, r3
 8027362:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8027366:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802736a:	f102 0b01 	add.w	fp, r2, #1
 802736e:	1c59      	adds	r1, r3, #1
 8027370:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8027374:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8027378:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802737c:	0952      	lsrs	r2, r2, #5
 802737e:	4301      	orrs	r1, r0
 8027380:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027384:	4311      	orrs	r1, r2
 8027386:	f8a8 1000 	strh.w	r1, [r8]
 802738a:	e739      	b.n	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802738c:	f113 0b01 	adds.w	fp, r3, #1
 8027390:	f53f af36 	bmi.w	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027394:	45dc      	cmp	ip, fp
 8027396:	f6ff af33 	blt.w	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802739a:	f110 0b01 	adds.w	fp, r0, #1
 802739e:	f53f af2f 	bmi.w	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80273a2:	45de      	cmp	lr, fp
 80273a4:	f6ff af2c 	blt.w	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80273a8:	9a08      	ldr	r2, [sp, #32]
 80273aa:	9302      	str	r3, [sp, #8]
 80273ac:	fa0f f38e 	sxth.w	r3, lr
 80273b0:	9301      	str	r3, [sp, #4]
 80273b2:	fa0f f38c 	sxth.w	r3, ip
 80273b6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80273ba:	9105      	str	r1, [sp, #20]
 80273bc:	9300      	str	r3, [sp, #0]
 80273be:	463a      	mov	r2, r7
 80273c0:	4653      	mov	r3, sl
 80273c2:	4641      	mov	r1, r8
 80273c4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80273c6:	f7ff fd73 	bl	8026eb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80273ca:	e719      	b.n	8027200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80273cc:	9906      	ldr	r1, [sp, #24]
 80273ce:	1422      	asrs	r2, r4, #16
 80273d0:	1433      	asrs	r3, r6, #16
 80273d2:	fb01 2303 	mla	r3, r1, r3, r2
 80273d6:	085a      	lsrs	r2, r3, #1
 80273d8:	07d9      	lsls	r1, r3, #31
 80273da:	5cba      	ldrb	r2, [r7, r2]
 80273dc:	bf54      	ite	pl
 80273de:	f002 020f 	andpl.w	r2, r2, #15
 80273e2:	1112      	asrmi	r2, r2, #4
 80273e4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80273e8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80273ec:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80273f0:	b2d2      	uxtb	r2, r2
 80273f2:	2800      	cmp	r0, #0
 80273f4:	d062      	beq.n	80274bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80273f6:	f103 0a01 	add.w	sl, r3, #1
 80273fa:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80273fe:	f01a 0f01 	tst.w	sl, #1
 8027402:	5c79      	ldrb	r1, [r7, r1]
 8027404:	bf0c      	ite	eq
 8027406:	f001 010f 	andeq.w	r1, r1, #15
 802740a:	1109      	asrne	r1, r1, #4
 802740c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027410:	b2c9      	uxtb	r1, r1
 8027412:	910f      	str	r1, [sp, #60]	; 0x3c
 8027414:	f1bc 0f00 	cmp.w	ip, #0
 8027418:	d019      	beq.n	802744e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802741a:	9908      	ldr	r1, [sp, #32]
 802741c:	440b      	add	r3, r1
 802741e:	0859      	lsrs	r1, r3, #1
 8027420:	f013 0f01 	tst.w	r3, #1
 8027424:	5c79      	ldrb	r1, [r7, r1]
 8027426:	bf0c      	ite	eq
 8027428:	f001 010f 	andeq.w	r1, r1, #15
 802742c:	1109      	asrne	r1, r1, #4
 802742e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027432:	b2c9      	uxtb	r1, r1
 8027434:	3301      	adds	r3, #1
 8027436:	910b      	str	r1, [sp, #44]	; 0x2c
 8027438:	0859      	lsrs	r1, r3, #1
 802743a:	07db      	lsls	r3, r3, #31
 802743c:	5c79      	ldrb	r1, [r7, r1]
 802743e:	bf54      	ite	pl
 8027440:	f001 010f 	andpl.w	r1, r1, #15
 8027444:	1109      	asrmi	r1, r1, #4
 8027446:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802744a:	b2c9      	uxtb	r1, r1
 802744c:	9110      	str	r1, [sp, #64]	; 0x40
 802744e:	b280      	uxth	r0, r0
 8027450:	fa1f fc8c 	uxth.w	ip, ip
 8027454:	fb00 f30c 	mul.w	r3, r0, ip
 8027458:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802745c:	0100      	lsls	r0, r0, #4
 802745e:	fa1f fc8c 	uxth.w	ip, ip
 8027462:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8027466:	eba1 010c 	sub.w	r1, r1, ip
 802746a:	fa1f fa81 	uxth.w	sl, r1
 802746e:	1ac0      	subs	r0, r0, r3
 8027470:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8027472:	b280      	uxth	r0, r0
 8027474:	4348      	muls	r0, r1
 8027476:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8027478:	fb02 020a 	mla	r2, r2, sl, r0
 802747c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8027480:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027482:	fb03 c302 	mla	r3, r3, r2, ip
 8027486:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802748a:	2bff      	cmp	r3, #255	; 0xff
 802748c:	d12c      	bne.n	80274e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802748e:	4b14      	ldr	r3, [pc, #80]	; (80274e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027490:	681a      	ldr	r2, [r3, #0]
 8027492:	4b14      	ldr	r3, [pc, #80]	; (80274e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027494:	0951      	lsrs	r1, r2, #5
 8027496:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802749a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802749e:	430b      	orrs	r3, r1
 80274a0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80274a4:	4313      	orrs	r3, r2
 80274a6:	f8ae 3000 	strh.w	r3, [lr]
 80274aa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80274ac:	441c      	add	r4, r3
 80274ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80274b0:	f10e 0e02 	add.w	lr, lr, #2
 80274b4:	441e      	add	r6, r3
 80274b6:	f108 38ff 	add.w	r8, r8, #4294967295
 80274ba:	e6ce      	b.n	802725a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80274bc:	f1bc 0f00 	cmp.w	ip, #0
 80274c0:	d0c5      	beq.n	802744e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80274c2:	9908      	ldr	r1, [sp, #32]
 80274c4:	440b      	add	r3, r1
 80274c6:	0859      	lsrs	r1, r3, #1
 80274c8:	07db      	lsls	r3, r3, #31
 80274ca:	5c79      	ldrb	r1, [r7, r1]
 80274cc:	bf54      	ite	pl
 80274ce:	f001 010f 	andpl.w	r1, r1, #15
 80274d2:	1109      	asrmi	r1, r1, #4
 80274d4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80274d8:	b2c9      	uxtb	r1, r1
 80274da:	910b      	str	r1, [sp, #44]	; 0x2c
 80274dc:	e7b7      	b.n	802744e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80274de:	bf00      	nop
 80274e0:	2001384c 	.word	0x2001384c
 80274e4:	fffff800 	.word	0xfffff800
 80274e8:	2b00      	cmp	r3, #0
 80274ea:	d0de      	beq.n	80274aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80274ec:	4a21      	ldr	r2, [pc, #132]	; (8027574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80274ee:	f8be c000 	ldrh.w	ip, [lr]
 80274f2:	6810      	ldr	r0, [r2, #0]
 80274f4:	fa1f fa83 	uxth.w	sl, r3
 80274f8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80274fc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027500:	43db      	mvns	r3, r3
 8027502:	b2db      	uxtb	r3, r3
 8027504:	fb12 f20a 	smulbb	r2, r2, sl
 8027508:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802750c:	fb01 2103 	mla	r1, r1, r3, r2
 8027510:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027514:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027518:	b2c0      	uxtb	r0, r0
 802751a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802751e:	fa5f fc8c 	uxtb.w	ip, ip
 8027522:	fb10 f00a 	smulbb	r0, r0, sl
 8027526:	fb0c 0003 	mla	r0, ip, r3, r0
 802752a:	b289      	uxth	r1, r1
 802752c:	fb1b fb0a 	smulbb	fp, fp, sl
 8027530:	b280      	uxth	r0, r0
 8027532:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027536:	fb02 b203 	mla	r2, r2, r3, fp
 802753a:	1c4b      	adds	r3, r1, #1
 802753c:	f100 0b01 	add.w	fp, r0, #1
 8027540:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8027544:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8027548:	b292      	uxth	r2, r2
 802754a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802754e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8027552:	ea4b 0101 	orr.w	r1, fp, r1
 8027556:	f102 0b01 	add.w	fp, r2, #1
 802755a:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802755e:	0952      	lsrs	r2, r2, #5
 8027560:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027564:	4311      	orrs	r1, r2
 8027566:	f8ae 1000 	strh.w	r1, [lr]
 802756a:	e79e      	b.n	80274aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802756c:	b013      	add	sp, #76	; 0x4c
 802756e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027572:	bf00      	nop
 8027574:	2001384c 	.word	0x2001384c

08027578 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8027578:	b570      	push	{r4, r5, r6, lr}
 802757a:	1208      	asrs	r0, r1, #8
 802757c:	b29e      	uxth	r6, r3
 802757e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8027582:	1213      	asrs	r3, r2, #8
 8027584:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027588:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802758c:	fb13 f305 	smulbb	r3, r3, r5
 8027590:	fb10 f006 	smulbb	r0, r0, r6
 8027594:	4418      	add	r0, r3
 8027596:	10cc      	asrs	r4, r1, #3
 8027598:	10d3      	asrs	r3, r2, #3
 802759a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802759e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80275a2:	fb13 f305 	smulbb	r3, r3, r5
 80275a6:	fb14 f406 	smulbb	r4, r4, r6
 80275aa:	00c9      	lsls	r1, r1, #3
 80275ac:	00d2      	lsls	r2, r2, #3
 80275ae:	441c      	add	r4, r3
 80275b0:	b2d2      	uxtb	r2, r2
 80275b2:	b2cb      	uxtb	r3, r1
 80275b4:	fb12 f205 	smulbb	r2, r2, r5
 80275b8:	b280      	uxth	r0, r0
 80275ba:	fb13 f306 	smulbb	r3, r3, r6
 80275be:	4413      	add	r3, r2
 80275c0:	1c42      	adds	r2, r0, #1
 80275c2:	b29b      	uxth	r3, r3
 80275c4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80275c8:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80275cc:	1c58      	adds	r0, r3, #1
 80275ce:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80275d2:	b2a4      	uxth	r4, r4
 80275d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80275d8:	4310      	orrs	r0, r2
 80275da:	1c62      	adds	r2, r4, #1
 80275dc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80275e0:	0964      	lsrs	r4, r4, #5
 80275e2:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80275e6:	4320      	orrs	r0, r4
 80275e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080275ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80275ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80275f0:	b08f      	sub	sp, #60	; 0x3c
 80275f2:	461c      	mov	r4, r3
 80275f4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80275f8:	9004      	str	r0, [sp, #16]
 80275fa:	460d      	mov	r5, r1
 80275fc:	4616      	mov	r6, r2
 80275fe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027600:	2f00      	cmp	r7, #0
 8027602:	f000 80f6 	beq.w	80277f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8027606:	6820      	ldr	r0, [r4, #0]
 8027608:	6861      	ldr	r1, [r4, #4]
 802760a:	aa0a      	add	r2, sp, #40	; 0x28
 802760c:	c203      	stmia	r2!, {r0, r1}
 802760e:	6818      	ldr	r0, [r3, #0]
 8027610:	6859      	ldr	r1, [r3, #4]
 8027612:	aa0c      	add	r2, sp, #48	; 0x30
 8027614:	c203      	stmia	r2!, {r0, r1}
 8027616:	a80a      	add	r0, sp, #40	; 0x28
 8027618:	f7ef fa5e 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802761c:	4621      	mov	r1, r4
 802761e:	a80c      	add	r0, sp, #48	; 0x30
 8027620:	f7ef fa9e 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027624:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027628:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802762c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8027630:	f002 0301 	and.w	r3, r2, #1
 8027634:	9306      	str	r3, [sp, #24]
 8027636:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802763a:	f003 0101 	and.w	r1, r3, #1
 802763e:	9105      	str	r1, [sp, #20]
 8027640:	9805      	ldr	r0, [sp, #20]
 8027642:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027646:	4403      	add	r3, r0
 8027648:	fb01 2303 	mla	r3, r1, r3, r2
 802764c:	f04f 0802 	mov.w	r8, #2
 8027650:	fb93 f3f8 	sdiv	r3, r3, r8
 8027654:	441d      	add	r5, r3
 8027656:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802765a:	441a      	add	r2, r3
 802765c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027660:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027664:	4419      	add	r1, r3
 8027666:	4b64      	ldr	r3, [pc, #400]	; (80277f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8027668:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802766c:	6818      	ldr	r0, [r3, #0]
 802766e:	6803      	ldr	r3, [r0, #0]
 8027670:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027672:	4798      	blx	r3
 8027674:	4a61      	ldr	r2, [pc, #388]	; (80277fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8027676:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802767a:	8813      	ldrh	r3, [r2, #0]
 802767c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8027680:	2fff      	cmp	r7, #255	; 0xff
 8027682:	fb03 a404 	mla	r4, r3, r4, sl
 8027686:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802768a:	f106 0604 	add.w	r6, r6, #4
 802768e:	4611      	mov	r1, r2
 8027690:	fb03 fb0b 	mul.w	fp, r3, fp
 8027694:	d06b      	beq.n	802776e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8027696:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802769a:	9303      	str	r3, [sp, #12]
 802769c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80276a0:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80276a4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80276a8:	9b07      	ldr	r3, [sp, #28]
 80276aa:	42a3      	cmp	r3, r4
 80276ac:	f240 809c 	bls.w	80277e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80276b0:	9b06      	ldr	r3, [sp, #24]
 80276b2:	2b00      	cmp	r3, #0
 80276b4:	d039      	beq.n	802772a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80276b6:	782b      	ldrb	r3, [r5, #0]
 80276b8:	8822      	ldrh	r2, [r4, #0]
 80276ba:	9804      	ldr	r0, [sp, #16]
 80276bc:	f003 030f 	and.w	r3, r3, #15
 80276c0:	f105 0801 	add.w	r8, r5, #1
 80276c4:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80276c8:	9b03      	ldr	r3, [sp, #12]
 80276ca:	9300      	str	r3, [sp, #0]
 80276cc:	463b      	mov	r3, r7
 80276ce:	f7ff ff53 	bl	8027578 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80276d2:	f824 0b02 	strh.w	r0, [r4], #2
 80276d6:	f109 3bff 	add.w	fp, r9, #4294967295
 80276da:	f1bb 0f01 	cmp.w	fp, #1
 80276de:	46a2      	mov	sl, r4
 80276e0:	f104 0404 	add.w	r4, r4, #4
 80276e4:	dd24      	ble.n	8027730 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80276e6:	f898 3000 	ldrb.w	r3, [r8]
 80276ea:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80276ee:	9804      	ldr	r0, [sp, #16]
 80276f0:	091b      	lsrs	r3, r3, #4
 80276f2:	f1ab 0b02 	sub.w	fp, fp, #2
 80276f6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80276fa:	9b03      	ldr	r3, [sp, #12]
 80276fc:	9300      	str	r3, [sp, #0]
 80276fe:	463b      	mov	r3, r7
 8027700:	f7ff ff3a 	bl	8027578 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027704:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027708:	f818 3b01 	ldrb.w	r3, [r8], #1
 802770c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027710:	9804      	ldr	r0, [sp, #16]
 8027712:	f003 030f 	and.w	r3, r3, #15
 8027716:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802771a:	9b03      	ldr	r3, [sp, #12]
 802771c:	9300      	str	r3, [sp, #0]
 802771e:	463b      	mov	r3, r7
 8027720:	f7ff ff2a 	bl	8027578 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027724:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027728:	e7d7      	b.n	80276da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802772a:	46a8      	mov	r8, r5
 802772c:	46cb      	mov	fp, r9
 802772e:	e7d4      	b.n	80276da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8027730:	d10e      	bne.n	8027750 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8027732:	f898 3000 	ldrb.w	r3, [r8]
 8027736:	f8ba 2000 	ldrh.w	r2, [sl]
 802773a:	9804      	ldr	r0, [sp, #16]
 802773c:	091b      	lsrs	r3, r3, #4
 802773e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027742:	9b03      	ldr	r3, [sp, #12]
 8027744:	9300      	str	r3, [sp, #0]
 8027746:	463b      	mov	r3, r7
 8027748:	f7ff ff16 	bl	8027578 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802774c:	f82a 0b02 	strh.w	r0, [sl], #2
 8027750:	9b08      	ldr	r3, [sp, #32]
 8027752:	9a05      	ldr	r2, [sp, #20]
 8027754:	881c      	ldrh	r4, [r3, #0]
 8027756:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802775a:	eba4 0409 	sub.w	r4, r4, r9
 802775e:	4413      	add	r3, r2
 8027760:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8027764:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027766:	fb93 f3f2 	sdiv	r3, r3, r2
 802776a:	441d      	add	r5, r3
 802776c:	e79c      	b.n	80276a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802776e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8027772:	45a3      	cmp	fp, r4
 8027774:	d938      	bls.n	80277e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027776:	9b06      	ldr	r3, [sp, #24]
 8027778:	b1f3      	cbz	r3, 80277b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802777a:	782b      	ldrb	r3, [r5, #0]
 802777c:	f003 030f 	and.w	r3, r3, #15
 8027780:	1c6a      	adds	r2, r5, #1
 8027782:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027786:	8023      	strh	r3, [r4, #0]
 8027788:	f109 30ff 	add.w	r0, r9, #4294967295
 802778c:	3402      	adds	r4, #2
 802778e:	2801      	cmp	r0, #1
 8027790:	4623      	mov	r3, r4
 8027792:	f104 0404 	add.w	r4, r4, #4
 8027796:	dd12      	ble.n	80277be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027798:	7813      	ldrb	r3, [r2, #0]
 802779a:	091b      	lsrs	r3, r3, #4
 802779c:	3802      	subs	r0, #2
 802779e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80277a2:	f824 3c04 	strh.w	r3, [r4, #-4]
 80277a6:	f812 3b01 	ldrb.w	r3, [r2], #1
 80277aa:	f003 030f 	and.w	r3, r3, #15
 80277ae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80277b2:	f824 3c02 	strh.w	r3, [r4, #-2]
 80277b6:	e7ea      	b.n	802778e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80277b8:	462a      	mov	r2, r5
 80277ba:	4648      	mov	r0, r9
 80277bc:	e7e7      	b.n	802778e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80277be:	d106      	bne.n	80277ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80277c0:	7812      	ldrb	r2, [r2, #0]
 80277c2:	0912      	lsrs	r2, r2, #4
 80277c4:	3302      	adds	r3, #2
 80277c6:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80277ca:	f823 2c02 	strh.w	r2, [r3, #-2]
 80277ce:	880c      	ldrh	r4, [r1, #0]
 80277d0:	9a05      	ldr	r2, [sp, #20]
 80277d2:	eba4 0409 	sub.w	r4, r4, r9
 80277d6:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80277da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80277de:	4413      	add	r3, r2
 80277e0:	fb93 f3f8 	sdiv	r3, r3, r8
 80277e4:	441d      	add	r5, r3
 80277e6:	e7c4      	b.n	8027772 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80277e8:	4b03      	ldr	r3, [pc, #12]	; (80277f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80277ea:	6818      	ldr	r0, [r3, #0]
 80277ec:	6803      	ldr	r3, [r0, #0]
 80277ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80277f0:	4798      	blx	r3
 80277f2:	b00f      	add	sp, #60	; 0x3c
 80277f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80277f8:	2001383c 	.word	0x2001383c
 80277fc:	20013836 	.word	0x20013836

08027800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8027800:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027802:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027806:	2dff      	cmp	r5, #255	; 0xff
 8027808:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802780c:	d10c      	bne.n	8027828 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802780e:	2bff      	cmp	r3, #255	; 0xff
 8027810:	d10a      	bne.n	8027828 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8027812:	4b25      	ldr	r3, [pc, #148]	; (80278a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8027814:	0948      	lsrs	r0, r1, #5
 8027816:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802781a:	403b      	ands	r3, r7
 802781c:	4318      	orrs	r0, r3
 802781e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8027822:	4308      	orrs	r0, r1
 8027824:	b280      	uxth	r0, r0
 8027826:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027828:	fb15 f503 	smulbb	r5, r5, r3
 802782c:	b2ab      	uxth	r3, r5
 802782e:	1c5d      	adds	r5, r3, #1
 8027830:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8027834:	1214      	asrs	r4, r2, #8
 8027836:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802783a:	fa1f fc85 	uxth.w	ip, r5
 802783e:	10d6      	asrs	r6, r2, #3
 8027840:	00d0      	lsls	r0, r2, #3
 8027842:	43ed      	mvns	r5, r5
 8027844:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027848:	f3c1 4207 	ubfx	r2, r1, #16, #8
 802784c:	b2eb      	uxtb	r3, r5
 802784e:	b2c0      	uxtb	r0, r0
 8027850:	fb12 f20c 	smulbb	r2, r2, ip
 8027854:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027858:	fb04 2403 	mla	r4, r4, r3, r2
 802785c:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8027860:	b2c8      	uxtb	r0, r1
 8027862:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8027866:	b2fd      	uxtb	r5, r7
 8027868:	fb10 f00c 	smulbb	r0, r0, ip
 802786c:	b2a4      	uxth	r4, r4
 802786e:	fb02 0003 	mla	r0, r2, r3, r0
 8027872:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8027876:	fb15 f50c 	smulbb	r5, r5, ip
 802787a:	fb06 5503 	mla	r5, r6, r3, r5
 802787e:	b283      	uxth	r3, r0
 8027880:	1c60      	adds	r0, r4, #1
 8027882:	b2ad      	uxth	r5, r5
 8027884:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027888:	1c58      	adds	r0, r3, #1
 802788a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802788e:	1c6b      	adds	r3, r5, #1
 8027890:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027894:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027898:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802789c:	096d      	lsrs	r5, r5, #5
 802789e:	4320      	orrs	r0, r4
 80278a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80278a4:	4328      	orrs	r0, r5
 80278a6:	e7be      	b.n	8027826 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80278a8:	00fff800 	.word	0x00fff800

080278ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80278ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80278b0:	461c      	mov	r4, r3
 80278b2:	b08d      	sub	sp, #52	; 0x34
 80278b4:	460d      	mov	r5, r1
 80278b6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80278b8:	6861      	ldr	r1, [r4, #4]
 80278ba:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80278be:	4680      	mov	r8, r0
 80278c0:	6820      	ldr	r0, [r4, #0]
 80278c2:	4616      	mov	r6, r2
 80278c4:	aa08      	add	r2, sp, #32
 80278c6:	c203      	stmia	r2!, {r0, r1}
 80278c8:	6818      	ldr	r0, [r3, #0]
 80278ca:	6859      	ldr	r1, [r3, #4]
 80278cc:	aa0a      	add	r2, sp, #40	; 0x28
 80278ce:	c203      	stmia	r2!, {r0, r1}
 80278d0:	a808      	add	r0, sp, #32
 80278d2:	f7ef f901 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80278d6:	4621      	mov	r1, r4
 80278d8:	a80a      	add	r0, sp, #40	; 0x28
 80278da:	f7ef f941 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80278de:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80278e2:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80278e6:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80278ea:	f002 0301 	and.w	r3, r2, #1
 80278ee:	9303      	str	r3, [sp, #12]
 80278f0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80278f4:	f003 0101 	and.w	r1, r3, #1
 80278f8:	9102      	str	r1, [sp, #8]
 80278fa:	9802      	ldr	r0, [sp, #8]
 80278fc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027900:	4403      	add	r3, r0
 8027902:	fb01 2303 	mla	r3, r1, r3, r2
 8027906:	f04f 0a02 	mov.w	sl, #2
 802790a:	fb93 f3fa 	sdiv	r3, r3, sl
 802790e:	441d      	add	r5, r3
 8027910:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8027914:	441a      	add	r2, r3
 8027916:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802791a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802791e:	4a3f      	ldr	r2, [pc, #252]	; (8027a1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8027920:	9205      	str	r2, [sp, #20]
 8027922:	4419      	add	r1, r3
 8027924:	6810      	ldr	r0, [r2, #0]
 8027926:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 802792a:	6803      	ldr	r3, [r0, #0]
 802792c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802792e:	4798      	blx	r3
 8027930:	4b3b      	ldr	r3, [pc, #236]	; (8027a20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8027932:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8027936:	8819      	ldrh	r1, [r3, #0]
 8027938:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 802793c:	fb01 c404 	mla	r4, r1, r4, ip
 8027940:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027944:	434f      	muls	r7, r1
 8027946:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802794a:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802794e:	3604      	adds	r6, #4
 8027950:	9204      	str	r2, [sp, #16]
 8027952:	9b04      	ldr	r3, [sp, #16]
 8027954:	429c      	cmp	r4, r3
 8027956:	d258      	bcs.n	8027a0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8027958:	9b03      	ldr	r3, [sp, #12]
 802795a:	2b00      	cmp	r3, #0
 802795c:	d034      	beq.n	80279c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802795e:	782b      	ldrb	r3, [r5, #0]
 8027960:	f003 030f 	and.w	r3, r3, #15
 8027964:	1c6f      	adds	r7, r5, #1
 8027966:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802796a:	0e0b      	lsrs	r3, r1, #24
 802796c:	d006      	beq.n	802797c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802796e:	8822      	ldrh	r2, [r4, #0]
 8027970:	9300      	str	r3, [sp, #0]
 8027972:	4640      	mov	r0, r8
 8027974:	464b      	mov	r3, r9
 8027976:	f7ff ff43 	bl	8027800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802797a:	8020      	strh	r0, [r4, #0]
 802797c:	3402      	adds	r4, #2
 802797e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8027982:	f1ba 0f01 	cmp.w	sl, #1
 8027986:	dd22      	ble.n	80279ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027988:	783b      	ldrb	r3, [r7, #0]
 802798a:	091b      	lsrs	r3, r3, #4
 802798c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027990:	0e0b      	lsrs	r3, r1, #24
 8027992:	d006      	beq.n	80279a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027994:	8822      	ldrh	r2, [r4, #0]
 8027996:	9300      	str	r3, [sp, #0]
 8027998:	4640      	mov	r0, r8
 802799a:	464b      	mov	r3, r9
 802799c:	f7ff ff30 	bl	8027800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80279a0:	8020      	strh	r0, [r4, #0]
 80279a2:	f817 3b01 	ldrb.w	r3, [r7], #1
 80279a6:	f003 030f 	and.w	r3, r3, #15
 80279aa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80279ae:	0e0b      	lsrs	r3, r1, #24
 80279b0:	d006      	beq.n	80279c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80279b2:	8862      	ldrh	r2, [r4, #2]
 80279b4:	9300      	str	r3, [sp, #0]
 80279b6:	4640      	mov	r0, r8
 80279b8:	464b      	mov	r3, r9
 80279ba:	f7ff ff21 	bl	8027800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80279be:	8060      	strh	r0, [r4, #2]
 80279c0:	3404      	adds	r4, #4
 80279c2:	f1aa 0a02 	sub.w	sl, sl, #2
 80279c6:	e7dc      	b.n	8027982 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80279c8:	462f      	mov	r7, r5
 80279ca:	46da      	mov	sl, fp
 80279cc:	e7d9      	b.n	8027982 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80279ce:	d10d      	bne.n	80279ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80279d0:	783b      	ldrb	r3, [r7, #0]
 80279d2:	091b      	lsrs	r3, r3, #4
 80279d4:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80279d8:	0e0b      	lsrs	r3, r1, #24
 80279da:	d006      	beq.n	80279ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80279dc:	8822      	ldrh	r2, [r4, #0]
 80279de:	9300      	str	r3, [sp, #0]
 80279e0:	4640      	mov	r0, r8
 80279e2:	464b      	mov	r3, r9
 80279e4:	f7ff ff0c 	bl	8027800 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80279e8:	8020      	strh	r0, [r4, #0]
 80279ea:	3402      	adds	r4, #2
 80279ec:	9b06      	ldr	r3, [sp, #24]
 80279ee:	9a02      	ldr	r2, [sp, #8]
 80279f0:	881b      	ldrh	r3, [r3, #0]
 80279f2:	eba3 030b 	sub.w	r3, r3, fp
 80279f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80279fa:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80279fe:	4413      	add	r3, r2
 8027a00:	9a07      	ldr	r2, [sp, #28]
 8027a02:	fb93 f3f2 	sdiv	r3, r3, r2
 8027a06:	441d      	add	r5, r3
 8027a08:	e7a3      	b.n	8027952 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8027a0a:	9b05      	ldr	r3, [sp, #20]
 8027a0c:	6818      	ldr	r0, [r3, #0]
 8027a0e:	6803      	ldr	r3, [r0, #0]
 8027a10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027a12:	4798      	blx	r3
 8027a14:	b00d      	add	sp, #52	; 0x34
 8027a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027a1a:	bf00      	nop
 8027a1c:	2001383c 	.word	0x2001383c
 8027a20:	20013836 	.word	0x20013836

08027a24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8027a24:	b570      	push	{r4, r5, r6, lr}
 8027a26:	1214      	asrs	r4, r2, #8
 8027a28:	788d      	ldrb	r5, [r1, #2]
 8027a2a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8027a2e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8027a32:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8027a36:	fb15 f503 	smulbb	r5, r5, r3
 8027a3a:	fb04 5506 	mla	r5, r4, r6, r5
 8027a3e:	10d0      	asrs	r0, r2, #3
 8027a40:	784c      	ldrb	r4, [r1, #1]
 8027a42:	7809      	ldrb	r1, [r1, #0]
 8027a44:	00d2      	lsls	r2, r2, #3
 8027a46:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8027a4a:	b2d2      	uxtb	r2, r2
 8027a4c:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8027a50:	fb14 f403 	smulbb	r4, r4, r3
 8027a54:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8027a58:	fb11 f303 	smulbb	r3, r1, r3
 8027a5c:	fb00 4406 	mla	r4, r0, r6, r4
 8027a60:	fb02 3306 	mla	r3, r2, r6, r3
 8027a64:	b2ad      	uxth	r5, r5
 8027a66:	b29b      	uxth	r3, r3
 8027a68:	b2a4      	uxth	r4, r4
 8027a6a:	1c68      	adds	r0, r5, #1
 8027a6c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027a70:	1c62      	adds	r2, r4, #1
 8027a72:	1c58      	adds	r0, r3, #1
 8027a74:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027a78:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027a7c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027a80:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027a84:	0964      	lsrs	r4, r4, #5
 8027a86:	4328      	orrs	r0, r5
 8027a88:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027a8c:	4320      	orrs	r0, r4
 8027a8e:	bd70      	pop	{r4, r5, r6, pc}

08027a90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027a90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a94:	b08f      	sub	sp, #60	; 0x3c
 8027a96:	461c      	mov	r4, r3
 8027a98:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027a9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027a9e:	4682      	mov	sl, r0
 8027aa0:	460e      	mov	r6, r1
 8027aa2:	4615      	mov	r5, r2
 8027aa4:	2f00      	cmp	r7, #0
 8027aa6:	f000 8142 	beq.w	8027d2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8027aaa:	6820      	ldr	r0, [r4, #0]
 8027aac:	6861      	ldr	r1, [r4, #4]
 8027aae:	aa0a      	add	r2, sp, #40	; 0x28
 8027ab0:	c203      	stmia	r2!, {r0, r1}
 8027ab2:	6818      	ldr	r0, [r3, #0]
 8027ab4:	6859      	ldr	r1, [r3, #4]
 8027ab6:	aa0c      	add	r2, sp, #48	; 0x30
 8027ab8:	c203      	stmia	r2!, {r0, r1}
 8027aba:	a80a      	add	r0, sp, #40	; 0x28
 8027abc:	f7ef f80c 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027ac0:	4621      	mov	r1, r4
 8027ac2:	a80c      	add	r0, sp, #48	; 0x30
 8027ac4:	f7ef f84c 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027ac8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8027acc:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027ad0:	f002 0301 	and.w	r3, r2, #1
 8027ad4:	9306      	str	r3, [sp, #24]
 8027ad6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027ada:	f003 0101 	and.w	r1, r3, #1
 8027ade:	9105      	str	r1, [sp, #20]
 8027ae0:	9805      	ldr	r0, [sp, #20]
 8027ae2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027ae6:	4403      	add	r3, r0
 8027ae8:	fb01 2303 	mla	r3, r1, r3, r2
 8027aec:	f04f 0802 	mov.w	r8, #2
 8027af0:	fb93 f3f8 	sdiv	r3, r3, r8
 8027af4:	441e      	add	r6, r3
 8027af6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8027afa:	441a      	add	r2, r3
 8027afc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027b00:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027b04:	4419      	add	r1, r3
 8027b06:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8027b0a:	9303      	str	r3, [sp, #12]
 8027b0c:	4b89      	ldr	r3, [pc, #548]	; (8027d34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027b0e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027b12:	6818      	ldr	r0, [r3, #0]
 8027b14:	6803      	ldr	r3, [r0, #0]
 8027b16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027b18:	4798      	blx	r3
 8027b1a:	4a87      	ldr	r2, [pc, #540]	; (8027d38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8027b1c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8027b20:	8813      	ldrh	r3, [r2, #0]
 8027b22:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8027b26:	2fff      	cmp	r7, #255	; 0xff
 8027b28:	fb03 9404 	mla	r4, r3, r4, r9
 8027b2c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027b30:	f105 0504 	add.w	r5, r5, #4
 8027b34:	4694      	mov	ip, r2
 8027b36:	fb03 f30b 	mul.w	r3, r3, fp
 8027b3a:	d071      	beq.n	8027c20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8027b3c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027b40:	43f9      	mvns	r1, r7
 8027b42:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027b46:	b2c9      	uxtb	r1, r1
 8027b48:	9104      	str	r1, [sp, #16]
 8027b4a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027b4e:	9b07      	ldr	r3, [sp, #28]
 8027b50:	42a3      	cmp	r3, r4
 8027b52:	f240 80e7 	bls.w	8027d24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027b56:	9b06      	ldr	r3, [sp, #24]
 8027b58:	2b00      	cmp	r3, #0
 8027b5a:	d03d      	beq.n	8027bd8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8027b5c:	7831      	ldrb	r1, [r6, #0]
 8027b5e:	9b04      	ldr	r3, [sp, #16]
 8027b60:	8822      	ldrh	r2, [r4, #0]
 8027b62:	9300      	str	r3, [sp, #0]
 8027b64:	f001 010f 	and.w	r1, r1, #15
 8027b68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027b6c:	463b      	mov	r3, r7
 8027b6e:	4429      	add	r1, r5
 8027b70:	4650      	mov	r0, sl
 8027b72:	f7ff ff57 	bl	8027a24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027b76:	9b03      	ldr	r3, [sp, #12]
 8027b78:	f824 0b02 	strh.w	r0, [r4], #2
 8027b7c:	f106 0801 	add.w	r8, r6, #1
 8027b80:	f103 3bff 	add.w	fp, r3, #4294967295
 8027b84:	f1bb 0f01 	cmp.w	fp, #1
 8027b88:	46a1      	mov	r9, r4
 8027b8a:	f104 0404 	add.w	r4, r4, #4
 8027b8e:	dd27      	ble.n	8027be0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027b90:	f898 1000 	ldrb.w	r1, [r8]
 8027b94:	9b04      	ldr	r3, [sp, #16]
 8027b96:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8027b9a:	9300      	str	r3, [sp, #0]
 8027b9c:	0909      	lsrs	r1, r1, #4
 8027b9e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027ba2:	463b      	mov	r3, r7
 8027ba4:	4429      	add	r1, r5
 8027ba6:	4650      	mov	r0, sl
 8027ba8:	f7ff ff3c 	bl	8027a24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027bac:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027bb0:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027bb4:	9b04      	ldr	r3, [sp, #16]
 8027bb6:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027bba:	9300      	str	r3, [sp, #0]
 8027bbc:	f001 010f 	and.w	r1, r1, #15
 8027bc0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027bc4:	463b      	mov	r3, r7
 8027bc6:	4429      	add	r1, r5
 8027bc8:	4650      	mov	r0, sl
 8027bca:	f7ff ff2b 	bl	8027a24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027bce:	f1ab 0b02 	sub.w	fp, fp, #2
 8027bd2:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027bd6:	e7d5      	b.n	8027b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027bd8:	46b0      	mov	r8, r6
 8027bda:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8027bde:	e7d1      	b.n	8027b84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027be0:	d10f      	bne.n	8027c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027be2:	f898 1000 	ldrb.w	r1, [r8]
 8027be6:	9b04      	ldr	r3, [sp, #16]
 8027be8:	f8b9 2000 	ldrh.w	r2, [r9]
 8027bec:	9300      	str	r3, [sp, #0]
 8027bee:	0909      	lsrs	r1, r1, #4
 8027bf0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027bf4:	463b      	mov	r3, r7
 8027bf6:	4429      	add	r1, r5
 8027bf8:	4650      	mov	r0, sl
 8027bfa:	f7ff ff13 	bl	8027a24 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027bfe:	f829 0b02 	strh.w	r0, [r9], #2
 8027c02:	9b08      	ldr	r3, [sp, #32]
 8027c04:	9a05      	ldr	r2, [sp, #20]
 8027c06:	881c      	ldrh	r4, [r3, #0]
 8027c08:	9b03      	ldr	r3, [sp, #12]
 8027c0a:	1ae4      	subs	r4, r4, r3
 8027c0c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027c10:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027c14:	4413      	add	r3, r2
 8027c16:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027c18:	fb93 f3f2 	sdiv	r3, r3, r2
 8027c1c:	441e      	add	r6, r3
 8027c1e:	e796      	b.n	8027b4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027c20:	4f46      	ldr	r7, [pc, #280]	; (8027d3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027c22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027c26:	42a3      	cmp	r3, r4
 8027c28:	d97c      	bls.n	8027d24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027c2a:	9a06      	ldr	r2, [sp, #24]
 8027c2c:	2a00      	cmp	r2, #0
 8027c2e:	d054      	beq.n	8027cda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027c30:	7830      	ldrb	r0, [r6, #0]
 8027c32:	f000 000f 	and.w	r0, r0, #15
 8027c36:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027c3a:	eb05 0e00 	add.w	lr, r5, r0
 8027c3e:	5c28      	ldrb	r0, [r5, r0]
 8027c40:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027c44:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027c48:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027c4c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027c50:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027c54:	ea42 020e 	orr.w	r2, r2, lr
 8027c58:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027c5c:	f824 2b02 	strh.w	r2, [r4], #2
 8027c60:	9a03      	ldr	r2, [sp, #12]
 8027c62:	1c71      	adds	r1, r6, #1
 8027c64:	f102 3eff 	add.w	lr, r2, #4294967295
 8027c68:	f1be 0f01 	cmp.w	lr, #1
 8027c6c:	4620      	mov	r0, r4
 8027c6e:	f104 0404 	add.w	r4, r4, #4
 8027c72:	dd36      	ble.n	8027ce2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027c74:	7808      	ldrb	r0, [r1, #0]
 8027c76:	0900      	lsrs	r0, r0, #4
 8027c78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027c7c:	eb05 0a00 	add.w	sl, r5, r0
 8027c80:	f1ae 0e02 	sub.w	lr, lr, #2
 8027c84:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027c88:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027c8c:	00d2      	lsls	r2, r2, #3
 8027c8e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027c92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027c96:	ea49 0202 	orr.w	r2, r9, r2
 8027c9a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027c9e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027ca2:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027ca6:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027caa:	f000 000f 	and.w	r0, r0, #15
 8027cae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027cb2:	eb05 0a00 	add.w	sl, r5, r0
 8027cb6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027cba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027cbe:	00d2      	lsls	r2, r2, #3
 8027cc0:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027cc4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027cc8:	ea49 0202 	orr.w	r2, r9, r2
 8027ccc:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027cd0:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027cd4:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027cd8:	e7c6      	b.n	8027c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027cda:	4631      	mov	r1, r6
 8027cdc:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027ce0:	e7c2      	b.n	8027c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027ce2:	d111      	bne.n	8027d08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027ce4:	7809      	ldrb	r1, [r1, #0]
 8027ce6:	0909      	lsrs	r1, r1, #4
 8027ce8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027cec:	186c      	adds	r4, r5, r1
 8027cee:	5c69      	ldrb	r1, [r5, r1]
 8027cf0:	78a2      	ldrb	r2, [r4, #2]
 8027cf2:	7864      	ldrb	r4, [r4, #1]
 8027cf4:	00e4      	lsls	r4, r4, #3
 8027cf6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027cfa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027cfe:	4322      	orrs	r2, r4
 8027d00:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027d04:	f820 2b02 	strh.w	r2, [r0], #2
 8027d08:	9a03      	ldr	r2, [sp, #12]
 8027d0a:	f8bc 4000 	ldrh.w	r4, [ip]
 8027d0e:	9905      	ldr	r1, [sp, #20]
 8027d10:	1aa4      	subs	r4, r4, r2
 8027d12:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027d16:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027d1a:	440a      	add	r2, r1
 8027d1c:	fb92 f2f8 	sdiv	r2, r2, r8
 8027d20:	4416      	add	r6, r2
 8027d22:	e780      	b.n	8027c26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027d24:	4b03      	ldr	r3, [pc, #12]	; (8027d34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027d26:	6818      	ldr	r0, [r3, #0]
 8027d28:	6803      	ldr	r3, [r0, #0]
 8027d2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027d2c:	4798      	blx	r3
 8027d2e:	b00f      	add	sp, #60	; 0x3c
 8027d30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027d34:	2001383c 	.word	0x2001383c
 8027d38:	20013836 	.word	0x20013836
 8027d3c:	fffff800 	.word	0xfffff800

08027d40 <CRC_Lock>:
 8027d40:	b530      	push	{r4, r5, lr}
 8027d42:	4a20      	ldr	r2, [pc, #128]	; (8027dc4 <CRC_Lock+0x84>)
 8027d44:	6813      	ldr	r3, [r2, #0]
 8027d46:	f023 0301 	bic.w	r3, r3, #1
 8027d4a:	6013      	str	r3, [r2, #0]
 8027d4c:	4b1e      	ldr	r3, [pc, #120]	; (8027dc8 <CRC_Lock+0x88>)
 8027d4e:	681a      	ldr	r2, [r3, #0]
 8027d50:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8027d54:	4022      	ands	r2, r4
 8027d56:	f24c 2540 	movw	r5, #49728	; 0xc240
 8027d5a:	42aa      	cmp	r2, r5
 8027d5c:	d005      	beq.n	8027d6a <CRC_Lock+0x2a>
 8027d5e:	681b      	ldr	r3, [r3, #0]
 8027d60:	f24c 2270 	movw	r2, #49776	; 0xc270
 8027d64:	4023      	ands	r3, r4
 8027d66:	4293      	cmp	r3, r2
 8027d68:	d124      	bne.n	8027db4 <CRC_Lock+0x74>
 8027d6a:	4b18      	ldr	r3, [pc, #96]	; (8027dcc <CRC_Lock+0x8c>)
 8027d6c:	681b      	ldr	r3, [r3, #0]
 8027d6e:	bb0b      	cbnz	r3, 8027db4 <CRC_Lock+0x74>
 8027d70:	4b17      	ldr	r3, [pc, #92]	; (8027dd0 <CRC_Lock+0x90>)
 8027d72:	681a      	ldr	r2, [r3, #0]
 8027d74:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027d78:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027d7c:	d00d      	beq.n	8027d9a <CRC_Lock+0x5a>
 8027d7e:	681a      	ldr	r2, [r3, #0]
 8027d80:	f240 4483 	movw	r4, #1155	; 0x483
 8027d84:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027d88:	42a2      	cmp	r2, r4
 8027d8a:	d006      	beq.n	8027d9a <CRC_Lock+0x5a>
 8027d8c:	681b      	ldr	r3, [r3, #0]
 8027d8e:	f240 4285 	movw	r2, #1157	; 0x485
 8027d92:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027d96:	4293      	cmp	r3, r2
 8027d98:	d10c      	bne.n	8027db4 <CRC_Lock+0x74>
 8027d9a:	4b0e      	ldr	r3, [pc, #56]	; (8027dd4 <CRC_Lock+0x94>)
 8027d9c:	2201      	movs	r2, #1
 8027d9e:	601a      	str	r2, [r3, #0]
 8027da0:	681a      	ldr	r2, [r3, #0]
 8027da2:	2a00      	cmp	r2, #0
 8027da4:	d1fc      	bne.n	8027da0 <CRC_Lock+0x60>
 8027da6:	4b0c      	ldr	r3, [pc, #48]	; (8027dd8 <CRC_Lock+0x98>)
 8027da8:	6018      	str	r0, [r3, #0]
 8027daa:	6818      	ldr	r0, [r3, #0]
 8027dac:	1a43      	subs	r3, r0, r1
 8027dae:	4258      	negs	r0, r3
 8027db0:	4158      	adcs	r0, r3
 8027db2:	bd30      	pop	{r4, r5, pc}
 8027db4:	4b09      	ldr	r3, [pc, #36]	; (8027ddc <CRC_Lock+0x9c>)
 8027db6:	2201      	movs	r2, #1
 8027db8:	601a      	str	r2, [r3, #0]
 8027dba:	681a      	ldr	r2, [r3, #0]
 8027dbc:	2a00      	cmp	r2, #0
 8027dbe:	d1fc      	bne.n	8027dba <CRC_Lock+0x7a>
 8027dc0:	4b07      	ldr	r3, [pc, #28]	; (8027de0 <CRC_Lock+0xa0>)
 8027dc2:	e7f1      	b.n	8027da8 <CRC_Lock+0x68>
 8027dc4:	e0002000 	.word	0xe0002000
 8027dc8:	e000ed00 	.word	0xe000ed00
 8027dcc:	e0042000 	.word	0xe0042000
 8027dd0:	5c001000 	.word	0x5c001000
 8027dd4:	58024c08 	.word	0x58024c08
 8027dd8:	58024c00 	.word	0x58024c00
 8027ddc:	40023008 	.word	0x40023008
 8027de0:	40023000 	.word	0x40023000

08027de4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027de4:	6101      	str	r1, [r0, #16]
 8027de6:	4770      	bx	lr

08027de8 <_ZN8touchgfx8Gestures4tickEv>:
 8027de8:	7b83      	ldrb	r3, [r0, #14]
 8027dea:	b14b      	cbz	r3, 8027e00 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027dec:	8903      	ldrh	r3, [r0, #8]
 8027dee:	3301      	adds	r3, #1
 8027df0:	b29b      	uxth	r3, r3
 8027df2:	2b07      	cmp	r3, #7
 8027df4:	8103      	strh	r3, [r0, #8]
 8027df6:	bf81      	itttt	hi
 8027df8:	2300      	movhi	r3, #0
 8027dfa:	8143      	strhhi	r3, [r0, #10]
 8027dfc:	8183      	strhhi	r3, [r0, #12]
 8027dfe:	7383      	strbhi	r3, [r0, #14]
 8027e00:	4770      	bx	lr
	...

08027e04 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027e04:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027e08:	4698      	mov	r8, r3
 8027e0a:	8883      	ldrh	r3, [r0, #4]
 8027e0c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027e10:	eba8 0303 	sub.w	r3, r8, r3
 8027e14:	b21b      	sxth	r3, r3
 8027e16:	4604      	mov	r4, r0
 8027e18:	2b00      	cmp	r3, #0
 8027e1a:	4617      	mov	r7, r2
 8027e1c:	4a18      	ldr	r2, [pc, #96]	; (8027e80 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8027e1e:	9200      	str	r2, [sp, #0]
 8027e20:	bfb8      	it	lt
 8027e22:	425b      	neglt	r3, r3
 8027e24:	8aa2      	ldrh	r2, [r4, #20]
 8027e26:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8027e2a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8027e2e:	b21b      	sxth	r3, r3
 8027e30:	460e      	mov	r6, r1
 8027e32:	4293      	cmp	r3, r2
 8027e34:	88c1      	ldrh	r1, [r0, #6]
 8027e36:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027e3a:	f04f 0000 	mov.w	r0, #0
 8027e3e:	f88d 0004 	strb.w	r0, [sp, #4]
 8027e42:	f8ad 500c 	strh.w	r5, [sp, #12]
 8027e46:	dc07      	bgt.n	8027e58 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027e48:	1a69      	subs	r1, r5, r1
 8027e4a:	b209      	sxth	r1, r1
 8027e4c:	2900      	cmp	r1, #0
 8027e4e:	bfb8      	it	lt
 8027e50:	4249      	neglt	r1, r1
 8027e52:	b209      	sxth	r1, r1
 8027e54:	428a      	cmp	r2, r1
 8027e56:	da10      	bge.n	8027e7a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027e58:	6920      	ldr	r0, [r4, #16]
 8027e5a:	6803      	ldr	r3, [r0, #0]
 8027e5c:	4669      	mov	r1, sp
 8027e5e:	685b      	ldr	r3, [r3, #4]
 8027e60:	4798      	blx	r3
 8027e62:	eba8 0606 	sub.w	r6, r8, r6
 8027e66:	2300      	movs	r3, #0
 8027e68:	1bef      	subs	r7, r5, r7
 8027e6a:	2001      	movs	r0, #1
 8027e6c:	8123      	strh	r3, [r4, #8]
 8027e6e:	8166      	strh	r6, [r4, #10]
 8027e70:	81a7      	strh	r7, [r4, #12]
 8027e72:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027e76:	80e5      	strh	r5, [r4, #6]
 8027e78:	73a0      	strb	r0, [r4, #14]
 8027e7a:	b004      	add	sp, #16
 8027e7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027e80:	08030120 	.word	0x08030120

08027e84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027e84:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027e86:	461e      	mov	r6, r3
 8027e88:	1e4b      	subs	r3, r1, #1
 8027e8a:	2b01      	cmp	r3, #1
 8027e8c:	b085      	sub	sp, #20
 8027e8e:	4604      	mov	r4, r0
 8027e90:	460d      	mov	r5, r1
 8027e92:	4617      	mov	r7, r2
 8027e94:	d84b      	bhi.n	8027f2e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027e96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8027e9a:	1cd3      	adds	r3, r2, #3
 8027e9c:	b29b      	uxth	r3, r3
 8027e9e:	2b06      	cmp	r3, #6
 8027ea0:	d916      	bls.n	8027ed0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027ea2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8027f44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027ea6:	f8cd c004 	str.w	ip, [sp, #4]
 8027eaa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027eae:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027eb2:	6900      	ldr	r0, [r0, #16]
 8027eb4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027eb8:	f04f 0c00 	mov.w	ip, #0
 8027ebc:	f88d c008 	strb.w	ip, [sp, #8]
 8027ec0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027ec4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027ec8:	6803      	ldr	r3, [r0, #0]
 8027eca:	a901      	add	r1, sp, #4
 8027ecc:	689b      	ldr	r3, [r3, #8]
 8027ece:	4798      	blx	r3
 8027ed0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027ed4:	1cd3      	adds	r3, r2, #3
 8027ed6:	b29b      	uxth	r3, r3
 8027ed8:	2b06      	cmp	r3, #6
 8027eda:	d916      	bls.n	8027f0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027edc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8027f44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027ee0:	f8cd c004 	str.w	ip, [sp, #4]
 8027ee4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027ee8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027eec:	6920      	ldr	r0, [r4, #16]
 8027eee:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027ef2:	f04f 0c01 	mov.w	ip, #1
 8027ef6:	f88d c008 	strb.w	ip, [sp, #8]
 8027efa:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027efe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027f02:	6803      	ldr	r3, [r0, #0]
 8027f04:	a901      	add	r1, sp, #4
 8027f06:	689b      	ldr	r3, [r3, #8]
 8027f08:	4798      	blx	r3
 8027f0a:	4b0d      	ldr	r3, [pc, #52]	; (8027f40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8027f0c:	9301      	str	r3, [sp, #4]
 8027f0e:	6920      	ldr	r0, [r4, #16]
 8027f10:	f88d 5008 	strb.w	r5, [sp, #8]
 8027f14:	2300      	movs	r3, #0
 8027f16:	f8ad 700a 	strh.w	r7, [sp, #10]
 8027f1a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8027f1e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027f22:	6803      	ldr	r3, [r0, #0]
 8027f24:	a901      	add	r1, sp, #4
 8027f26:	681b      	ldr	r3, [r3, #0]
 8027f28:	4798      	blx	r3
 8027f2a:	b005      	add	sp, #20
 8027f2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027f2e:	2900      	cmp	r1, #0
 8027f30:	d1eb      	bne.n	8027f0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027f32:	80a2      	strh	r2, [r4, #4]
 8027f34:	80c6      	strh	r6, [r0, #6]
 8027f36:	60a1      	str	r1, [r4, #8]
 8027f38:	81a1      	strh	r1, [r4, #12]
 8027f3a:	73a1      	strb	r1, [r4, #14]
 8027f3c:	e7e5      	b.n	8027f0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027f3e:	bf00      	nop
 8027f40:	0803010c 	.word	0x0803010c
 8027f44:	08030134 	.word	0x08030134

08027f48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027f48:	10c9      	asrs	r1, r1, #3
 8027f4a:	2900      	cmp	r1, #0
 8027f4c:	bfb8      	it	lt
 8027f4e:	4249      	neglt	r1, r1
 8027f50:	2801      	cmp	r0, #1
 8027f52:	d108      	bne.n	8027f66 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027f54:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027f58:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8027f5c:	4601      	mov	r1, r0
 8027f5e:	dd02      	ble.n	8027f66 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027f60:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8027f64:	4770      	bx	lr
 8027f66:	29ff      	cmp	r1, #255	; 0xff
 8027f68:	bfa8      	it	ge
 8027f6a:	21ff      	movge	r1, #255	; 0xff
 8027f6c:	4608      	mov	r0, r1
 8027f6e:	4770      	bx	lr

08027f70 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027f70:	b410      	push	{r4}
 8027f72:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027f76:	429c      	cmp	r4, r3
 8027f78:	d803      	bhi.n	8027f82 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8027f7a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027f7e:	f7ed b8b1 	b.w	80150e4 <_ZN8touchgfx7Outline6lineToEii>
 8027f82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027f86:	4770      	bx	lr

08027f88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027f8c:	b08b      	sub	sp, #44	; 0x2c
 8027f8e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027f92:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027f96:	9308      	str	r3, [sp, #32]
 8027f98:	4606      	mov	r6, r0
 8027f9a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8027f9e:	9309      	str	r3, [sp, #36]	; 0x24
 8027fa0:	468a      	mov	sl, r1
 8027fa2:	f7ed fa0c 	bl	80153be <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027fa6:	68b5      	ldr	r5, [r6, #8]
 8027fa8:	4604      	mov	r4, r0
 8027faa:	2d00      	cmp	r5, #0
 8027fac:	d044      	beq.n	8028038 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027fae:	6873      	ldr	r3, [r6, #4]
 8027fb0:	42ab      	cmp	r3, r5
 8027fb2:	d33d      	bcc.n	8028030 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027fb4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027fb8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8027fbc:	eb02 0b03 	add.w	fp, r2, r3
 8027fc0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027fc4:	fb02 1203 	mla	r2, r2, r3, r1
 8027fc8:	9205      	str	r2, [sp, #20]
 8027fca:	1e6a      	subs	r2, r5, #1
 8027fcc:	9204      	str	r2, [sp, #16]
 8027fce:	f04f 0800 	mov.w	r8, #0
 8027fd2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027fd6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027fda:	454b      	cmp	r3, r9
 8027fdc:	463a      	mov	r2, r7
 8027fde:	d008      	beq.n	8027ff2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027fe0:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027fe4:	eb03 0b09 	add.w	fp, r3, r9
 8027fe8:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027fec:	fb03 1309 	mla	r3, r3, r9, r1
 8027ff0:	9305      	str	r3, [sp, #20]
 8027ff2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027ff6:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027ffa:	4498      	add	r8, r3
 8027ffc:	9b04      	ldr	r3, [sp, #16]
 8027ffe:	3b01      	subs	r3, #1
 8028000:	9304      	str	r3, [sp, #16]
 8028002:	9b04      	ldr	r3, [sp, #16]
 8028004:	3301      	adds	r3, #1
 8028006:	d015      	beq.n	8028034 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8028008:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802800c:	42bb      	cmp	r3, r7
 802800e:	d117      	bne.n	8028040 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8028010:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8028014:	9b04      	ldr	r3, [sp, #16]
 8028016:	4548      	cmp	r0, r9
 8028018:	f103 33ff 	add.w	r3, r3, #4294967295
 802801c:	d17f      	bne.n	802811e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802801e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8028022:	4401      	add	r1, r0
 8028024:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8028028:	4480      	add	r8, r0
 802802a:	e7e9      	b.n	8028000 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802802c:	461f      	mov	r7, r3
 802802e:	e044      	b.n	80280ba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8028030:	2000      	movs	r0, #0
 8028032:	e002      	b.n	802803a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8028034:	2900      	cmp	r1, #0
 8028036:	d16f      	bne.n	8028118 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8028038:	2001      	movs	r0, #1
 802803a:	b00b      	add	sp, #44	; 0x2c
 802803c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028040:	2900      	cmp	r1, #0
 8028042:	d030      	beq.n	80280a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8028044:	2f00      	cmp	r7, #0
 8028046:	db29      	blt.n	802809c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028048:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802804c:	42bb      	cmp	r3, r7
 802804e:	dd25      	ble.n	802809c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028050:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8028054:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8028058:	f7ff ff76 	bl	8027f48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802805c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802805e:	fb10 f003 	smulbb	r0, r0, r3
 8028062:	b280      	uxth	r0, r0
 8028064:	1c41      	adds	r1, r0, #1
 8028066:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802806a:	1209      	asrs	r1, r1, #8
 802806c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8028070:	d014      	beq.n	802809c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8028072:	9808      	ldr	r0, [sp, #32]
 8028074:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8028076:	b2c9      	uxtb	r1, r1
 8028078:	b2ba      	uxth	r2, r7
 802807a:	9102      	str	r1, [sp, #8]
 802807c:	2101      	movs	r1, #1
 802807e:	4413      	add	r3, r2
 8028080:	9101      	str	r1, [sp, #4]
 8028082:	4402      	add	r2, r0
 8028084:	fa0f f18b 	sxth.w	r1, fp
 8028088:	f8da 0000 	ldr.w	r0, [sl]
 802808c:	9100      	str	r1, [sp, #0]
 802808e:	6941      	ldr	r1, [r0, #20]
 8028090:	b21b      	sxth	r3, r3
 8028092:	460d      	mov	r5, r1
 8028094:	b212      	sxth	r2, r2
 8028096:	9905      	ldr	r1, [sp, #20]
 8028098:	4650      	mov	r0, sl
 802809a:	47a8      	blx	r5
 802809c:	9b04      	ldr	r3, [sp, #16]
 802809e:	3301      	adds	r3, #1
 80280a0:	f107 0201 	add.w	r2, r7, #1
 80280a4:	d0c8      	beq.n	8028038 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80280a6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80280aa:	1abb      	subs	r3, r7, r2
 80280ac:	2b00      	cmp	r3, #0
 80280ae:	dd31      	ble.n	8028114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80280b0:	2a00      	cmp	r2, #0
 80280b2:	dabb      	bge.n	802802c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80280b4:	2f00      	cmp	r7, #0
 80280b6:	dd2d      	ble.n	8028114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80280b8:	2200      	movs	r2, #0
 80280ba:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80280be:	19d1      	adds	r1, r2, r7
 80280c0:	4299      	cmp	r1, r3
 80280c2:	db02      	blt.n	80280ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80280c4:	1a9f      	subs	r7, r3, r2
 80280c6:	2f00      	cmp	r7, #0
 80280c8:	dd24      	ble.n	8028114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80280ca:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80280ce:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80280d2:	f7ff ff39 	bl	8027f48 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80280d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80280d8:	fb10 f003 	smulbb	r0, r0, r3
 80280dc:	b280      	uxth	r0, r0
 80280de:	1c41      	adds	r1, r0, #1
 80280e0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80280e4:	1209      	asrs	r1, r1, #8
 80280e6:	f011 0fff 	tst.w	r1, #255	; 0xff
 80280ea:	d013      	beq.n	8028114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80280ec:	9808      	ldr	r0, [sp, #32]
 80280ee:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80280f0:	b292      	uxth	r2, r2
 80280f2:	b2c9      	uxtb	r1, r1
 80280f4:	4413      	add	r3, r2
 80280f6:	9102      	str	r1, [sp, #8]
 80280f8:	4402      	add	r2, r0
 80280fa:	b23f      	sxth	r7, r7
 80280fc:	f8da 0000 	ldr.w	r0, [sl]
 8028100:	9701      	str	r7, [sp, #4]
 8028102:	fa0f f18b 	sxth.w	r1, fp
 8028106:	9100      	str	r1, [sp, #0]
 8028108:	6947      	ldr	r7, [r0, #20]
 802810a:	9905      	ldr	r1, [sp, #20]
 802810c:	b21b      	sxth	r3, r3
 802810e:	b212      	sxth	r2, r2
 8028110:	4650      	mov	r0, sl
 8028112:	47b8      	blx	r7
 8028114:	464b      	mov	r3, r9
 8028116:	e75c      	b.n	8027fd2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8028118:	2f00      	cmp	r7, #0
 802811a:	da95      	bge.n	8028048 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802811c:	e78c      	b.n	8028038 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802811e:	2900      	cmp	r1, #0
 8028120:	d0f8      	beq.n	8028114 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8028122:	e78f      	b.n	8028044 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08028124 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8028124:	4b4b      	ldr	r3, [pc, #300]	; (8028254 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8028126:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802812a:	2500      	movs	r5, #0
 802812c:	f100 0620 	add.w	r6, r0, #32
 8028130:	4604      	mov	r4, r0
 8028132:	e9c0 3100 	strd	r3, r1, [r0]
 8028136:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802813a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802813e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8028142:	f100 0718 	add.w	r7, r0, #24
 8028146:	4630      	mov	r0, r6
 8028148:	4690      	mov	r8, r2
 802814a:	f7ec fb03 	bl	8014754 <_ZN8touchgfx7OutlineC1Ev>
 802814e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8028152:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8028156:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802815a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802815e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8028162:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8028166:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 802816a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802816e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8028172:	f9b8 2000 	ldrsh.w	r2, [r8]
 8028176:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802817a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802817e:	9500      	str	r5, [sp, #0]
 8028180:	4410      	add	r0, r2
 8028182:	b280      	uxth	r0, r0
 8028184:	fa0f fa80 	sxth.w	sl, r0
 8028188:	45aa      	cmp	sl, r5
 802818a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802818e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8028192:	dd5c      	ble.n	802824e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028194:	4591      	cmp	r9, r2
 8028196:	dd5a      	ble.n	802824e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028198:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802819c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80281a0:	440b      	add	r3, r1
 80281a2:	b29b      	uxth	r3, r3
 80281a4:	b21d      	sxth	r5, r3
 80281a6:	2d00      	cmp	r5, #0
 80281a8:	dd51      	ble.n	802824e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80281aa:	458e      	cmp	lr, r1
 80281ac:	dd4f      	ble.n	802824e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 80281ae:	45d1      	cmp	r9, sl
 80281b0:	bfb8      	it	lt
 80281b2:	fa1f f089 	uxthlt.w	r0, r9
 80281b6:	45ae      	cmp	lr, r5
 80281b8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80281bc:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80281c0:	bfb8      	it	lt
 80281c2:	fa1f f38e 	uxthlt.w	r3, lr
 80281c6:	1a80      	subs	r0, r0, r2
 80281c8:	1a5b      	subs	r3, r3, r1
 80281ca:	f8ad 0004 	strh.w	r0, [sp, #4]
 80281ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 80281d2:	f8ad 2000 	strh.w	r2, [sp]
 80281d6:	f8ad 1002 	strh.w	r1, [sp, #2]
 80281da:	466d      	mov	r5, sp
 80281dc:	e895 0003 	ldmia.w	r5, {r0, r1}
 80281e0:	e887 0003 	stmia.w	r7, {r0, r1}
 80281e4:	f8dc 3000 	ldr.w	r3, [ip]
 80281e8:	4660      	mov	r0, ip
 80281ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80281ec:	4639      	mov	r1, r7
 80281ee:	4798      	blx	r3
 80281f0:	6861      	ldr	r1, [r4, #4]
 80281f2:	4628      	mov	r0, r5
 80281f4:	3104      	adds	r1, #4
 80281f6:	f7ee fcb3 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80281fa:	4638      	mov	r0, r7
 80281fc:	f7ee fc6c 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028200:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028204:	f8bd 2000 	ldrh.w	r2, [sp]
 8028208:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802820c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8028210:	4630      	mov	r0, r6
 8028212:	f7ec fa83 	bl	801471c <_ZN8touchgfx7Outline5resetEv>
 8028216:	f9bd 3000 	ldrsh.w	r3, [sp]
 802821a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802821e:	015b      	lsls	r3, r3, #5
 8028220:	60a3      	str	r3, [r4, #8]
 8028222:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028226:	015b      	lsls	r3, r3, #5
 8028228:	60e3      	str	r3, [r4, #12]
 802822a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802822e:	015b      	lsls	r3, r3, #5
 8028230:	6123      	str	r3, [r4, #16]
 8028232:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8028236:	015b      	lsls	r3, r3, #5
 8028238:	6163      	str	r3, [r4, #20]
 802823a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802823e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8028242:	4620      	mov	r0, r4
 8028244:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8028248:	b002      	add	sp, #8
 802824a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802824e:	2300      	movs	r3, #0
 8028250:	9301      	str	r3, [sp, #4]
 8028252:	e7c2      	b.n	80281da <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8028254:	08030458 	.word	0x08030458

08028258 <_ZN8touchgfx6Canvas5closeEv>:
 8028258:	b538      	push	{r3, r4, r5, lr}
 802825a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802825e:	4604      	mov	r4, r0
 8028260:	b193      	cbz	r3, 8028288 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8028262:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8028266:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802826a:	4213      	tst	r3, r2
 802826c:	d10c      	bne.n	8028288 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802826e:	f100 0520 	add.w	r5, r0, #32
 8028272:	b123      	cbz	r3, 802827e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8028274:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8028278:	4628      	mov	r0, r5
 802827a:	f7ff fe79 	bl	8027f70 <_ZN8touchgfx10Rasterizer6lineToEii>
 802827e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8028282:	4628      	mov	r0, r5
 8028284:	f7ff fe74 	bl	8027f70 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028288:	2300      	movs	r3, #0
 802828a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802828e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8028292:	4298      	cmp	r0, r3
 8028294:	bf34      	ite	cc
 8028296:	2000      	movcc	r0, #0
 8028298:	2001      	movcs	r0, #1
 802829a:	bd38      	pop	{r3, r4, r5, pc}

0802829c <_ZN8touchgfx6Canvas6renderEh>:
 802829c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80282a0:	4604      	mov	r4, r0
 80282a2:	6840      	ldr	r0, [r0, #4]
 80282a4:	6803      	ldr	r3, [r0, #0]
 80282a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80282a8:	460d      	mov	r5, r1
 80282aa:	4798      	blx	r3
 80282ac:	fb10 f105 	smulbb	r1, r0, r5
 80282b0:	b289      	uxth	r1, r1
 80282b2:	1c4d      	adds	r5, r1, #1
 80282b4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80282b8:	122d      	asrs	r5, r5, #8
 80282ba:	f000 809d 	beq.w	80283f8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80282be:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80282c2:	2b00      	cmp	r3, #0
 80282c4:	f000 8098 	beq.w	80283f8 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80282c8:	4620      	mov	r0, r4
 80282ca:	f7ff ffc5 	bl	8028258 <_ZN8touchgfx6Canvas5closeEv>
 80282ce:	4607      	mov	r7, r0
 80282d0:	2800      	cmp	r0, #0
 80282d2:	d048      	beq.n	8028366 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80282d4:	6863      	ldr	r3, [r4, #4]
 80282d6:	4e49      	ldr	r6, [pc, #292]	; (80283fc <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80282d8:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80282da:	6837      	ldr	r7, [r6, #0]
 80282dc:	6803      	ldr	r3, [r0, #0]
 80282de:	689b      	ldr	r3, [r3, #8]
 80282e0:	4798      	blx	r3
 80282e2:	4601      	mov	r1, r0
 80282e4:	4638      	mov	r0, r7
 80282e6:	f7ea f9bb 	bl	8012660 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80282ea:	4607      	mov	r7, r0
 80282ec:	f7dc fb80 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 80282f0:	6803      	ldr	r3, [r0, #0]
 80282f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80282f4:	4798      	blx	r3
 80282f6:	4680      	mov	r8, r0
 80282f8:	f7dc fb7a 	bl	80049f0 <_ZN8touchgfx3HAL3lcdEv>
 80282fc:	6803      	ldr	r3, [r0, #0]
 80282fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028300:	4798      	blx	r3
 8028302:	280b      	cmp	r0, #11
 8028304:	d85d      	bhi.n	80283c2 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8028306:	e8df f000 	tbb	[pc, r0]
 802830a:	5e53      	.short	0x5e53
 802830c:	325c066e 	.word	0x325c066e
 8028310:	67676742 	.word	0x67676742
 8028314:	6767      	.short	0x6767
 8028316:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802831a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802831e:	2208      	movs	r2, #8
 8028320:	fb91 f2f2 	sdiv	r2, r1, r2
 8028324:	fb08 2303 	mla	r3, r8, r3, r2
 8028328:	441f      	add	r7, r3
 802832a:	424b      	negs	r3, r1
 802832c:	f003 0307 	and.w	r3, r3, #7
 8028330:	f001 0107 	and.w	r1, r1, #7
 8028334:	bf58      	it	pl
 8028336:	4259      	negpl	r1, r3
 8028338:	b2c9      	uxtb	r1, r1
 802833a:	b2ed      	uxtb	r5, r5
 802833c:	e9cd 1500 	strd	r1, r5, [sp]
 8028340:	6860      	ldr	r0, [r4, #4]
 8028342:	463a      	mov	r2, r7
 8028344:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8028346:	fa0f f388 	sxth.w	r3, r8
 802834a:	f104 0020 	add.w	r0, r4, #32
 802834e:	f7ff fe1b 	bl	8027f88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8028352:	6863      	ldr	r3, [r4, #4]
 8028354:	4607      	mov	r7, r0
 8028356:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8028358:	6803      	ldr	r3, [r0, #0]
 802835a:	691b      	ldr	r3, [r3, #16]
 802835c:	4798      	blx	r3
 802835e:	6830      	ldr	r0, [r6, #0]
 8028360:	6803      	ldr	r3, [r0, #0]
 8028362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028364:	4798      	blx	r3
 8028366:	4638      	mov	r0, r7
 8028368:	b002      	add	sp, #8
 802836a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802836e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028372:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028376:	2204      	movs	r2, #4
 8028378:	fb91 f2f2 	sdiv	r2, r1, r2
 802837c:	fb08 2303 	mla	r3, r8, r3, r2
 8028380:	441f      	add	r7, r3
 8028382:	424b      	negs	r3, r1
 8028384:	f003 0303 	and.w	r3, r3, #3
 8028388:	f001 0103 	and.w	r1, r1, #3
 802838c:	e7d2      	b.n	8028334 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802838e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028392:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028396:	2900      	cmp	r1, #0
 8028398:	f04f 0202 	mov.w	r2, #2
 802839c:	fb91 f2f2 	sdiv	r2, r1, r2
 80283a0:	f001 0101 	and.w	r1, r1, #1
 80283a4:	fb08 2303 	mla	r3, r8, r3, r2
 80283a8:	441f      	add	r7, r3
 80283aa:	bfb8      	it	lt
 80283ac:	4249      	neglt	r1, r1
 80283ae:	e7c3      	b.n	8028338 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80283b0:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80283b4:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80283b8:	fb08 f303 	mul.w	r3, r8, r3
 80283bc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80283c0:	441f      	add	r7, r3
 80283c2:	2100      	movs	r1, #0
 80283c4:	e7b9      	b.n	802833a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80283c6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80283ca:	fb08 f203 	mul.w	r2, r8, r3
 80283ce:	8b23      	ldrh	r3, [r4, #24]
 80283d0:	2103      	movs	r1, #3
 80283d2:	fb13 2301 	smlabb	r3, r3, r1, r2
 80283d6:	e7f3      	b.n	80283c0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80283d8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80283dc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80283e0:	fb08 2303 	mla	r3, r8, r3, r2
 80283e4:	e7ec      	b.n	80283c0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80283e6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80283ea:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80283ee:	fb08 f303 	mul.w	r3, r8, r3
 80283f2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80283f6:	e7e3      	b.n	80283c0 <_ZN8touchgfx6Canvas6renderEh+0x124>
 80283f8:	2701      	movs	r7, #1
 80283fa:	e7b4      	b.n	8028366 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80283fc:	2001383c 	.word	0x2001383c

08028400 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8028400:	b510      	push	{r4, lr}
 8028402:	4b07      	ldr	r3, [pc, #28]	; (8028420 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028404:	781b      	ldrb	r3, [r3, #0]
 8028406:	2b01      	cmp	r3, #1
 8028408:	d108      	bne.n	802841c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802840a:	6843      	ldr	r3, [r0, #4]
 802840c:	6814      	ldr	r4, [r2, #0]
 802840e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8028412:	680b      	ldr	r3, [r1, #0]
 8028414:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8028418:	6013      	str	r3, [r2, #0]
 802841a:	600c      	str	r4, [r1, #0]
 802841c:	bd10      	pop	{r4, pc}
 802841e:	bf00      	nop
 8028420:	20013834 	.word	0x20013834

08028424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8028424:	b513      	push	{r0, r1, r4, lr}
 8028426:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802842a:	4604      	mov	r4, r0
 802842c:	e9cd 2100 	strd	r2, r1, [sp]
 8028430:	b9a3      	cbnz	r3, 802845c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8028432:	466a      	mov	r2, sp
 8028434:	a901      	add	r1, sp, #4
 8028436:	4620      	mov	r0, r4
 8028438:	f7ff ffe2 	bl	8028400 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802843c:	68a3      	ldr	r3, [r4, #8]
 802843e:	9901      	ldr	r1, [sp, #4]
 8028440:	9a00      	ldr	r2, [sp, #0]
 8028442:	1ac9      	subs	r1, r1, r3
 8028444:	68e3      	ldr	r3, [r4, #12]
 8028446:	9101      	str	r1, [sp, #4]
 8028448:	1ad2      	subs	r2, r2, r3
 802844a:	2a00      	cmp	r2, #0
 802844c:	9200      	str	r2, [sp, #0]
 802844e:	da0b      	bge.n	8028468 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8028450:	2301      	movs	r3, #1
 8028452:	2900      	cmp	r1, #0
 8028454:	da0e      	bge.n	8028474 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8028456:	f043 0304 	orr.w	r3, r3, #4
 802845a:	e013      	b.n	8028484 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802845c:	f7ff fefc 	bl	8028258 <_ZN8touchgfx6Canvas5closeEv>
 8028460:	2800      	cmp	r0, #0
 8028462:	d1e6      	bne.n	8028432 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8028464:	b002      	add	sp, #8
 8028466:	bd10      	pop	{r4, pc}
 8028468:	6963      	ldr	r3, [r4, #20]
 802846a:	429a      	cmp	r2, r3
 802846c:	bfac      	ite	ge
 802846e:	2302      	movge	r3, #2
 8028470:	2300      	movlt	r3, #0
 8028472:	e7ee      	b.n	8028452 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8028474:	6920      	ldr	r0, [r4, #16]
 8028476:	4281      	cmp	r1, r0
 8028478:	bfac      	ite	ge
 802847a:	2008      	movge	r0, #8
 802847c:	2000      	movlt	r0, #0
 802847e:	4318      	orrs	r0, r3
 8028480:	b2c3      	uxtb	r3, r0
 8028482:	b158      	cbz	r0, 802849c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8028484:	2200      	movs	r2, #0
 8028486:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802848a:	9901      	ldr	r1, [sp, #4]
 802848c:	9a00      	ldr	r2, [sp, #0]
 802848e:	66a1      	str	r1, [r4, #104]	; 0x68
 8028490:	66e2      	str	r2, [r4, #108]	; 0x6c
 8028492:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8028496:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802849a:	e7e3      	b.n	8028464 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802849c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80284a0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80284a4:	4298      	cmp	r0, r3
 80284a6:	d803      	bhi.n	80284b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80284a8:	f104 0020 	add.w	r0, r4, #32
 80284ac:	f7ec fe34 	bl	8015118 <_ZN8touchgfx7Outline6moveToEii>
 80284b0:	2301      	movs	r3, #1
 80284b2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80284b6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80284ba:	2300      	movs	r3, #0
 80284bc:	e7e5      	b.n	802848a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80284be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80284c0:	ab02      	add	r3, sp, #8
 80284c2:	4604      	mov	r4, r0
 80284c4:	f843 2d08 	str.w	r2, [r3, #-8]!
 80284c8:	9101      	str	r1, [sp, #4]
 80284ca:	461a      	mov	r2, r3
 80284cc:	a901      	add	r1, sp, #4
 80284ce:	f7ff ff97 	bl	8028400 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80284d2:	68a3      	ldr	r3, [r4, #8]
 80284d4:	9901      	ldr	r1, [sp, #4]
 80284d6:	9a00      	ldr	r2, [sp, #0]
 80284d8:	1ac9      	subs	r1, r1, r3
 80284da:	68e3      	ldr	r3, [r4, #12]
 80284dc:	9101      	str	r1, [sp, #4]
 80284de:	1ad2      	subs	r2, r2, r3
 80284e0:	2a00      	cmp	r2, #0
 80284e2:	9200      	str	r2, [sp, #0]
 80284e4:	db1c      	blt.n	8028520 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80284e6:	6963      	ldr	r3, [r4, #20]
 80284e8:	429a      	cmp	r2, r3
 80284ea:	bfac      	ite	ge
 80284ec:	2002      	movge	r0, #2
 80284ee:	2000      	movlt	r0, #0
 80284f0:	2900      	cmp	r1, #0
 80284f2:	db17      	blt.n	8028524 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80284f4:	6923      	ldr	r3, [r4, #16]
 80284f6:	4299      	cmp	r1, r3
 80284f8:	bfac      	ite	ge
 80284fa:	2308      	movge	r3, #8
 80284fc:	2300      	movlt	r3, #0
 80284fe:	4303      	orrs	r3, r0
 8028500:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8028504:	b2dd      	uxtb	r5, r3
 8028506:	b978      	cbnz	r0, 8028528 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8028508:	f104 0020 	add.w	r0, r4, #32
 802850c:	f7ff fd30 	bl	8027f70 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028510:	9b01      	ldr	r3, [sp, #4]
 8028512:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028514:	9b00      	ldr	r3, [sp, #0]
 8028516:	6623      	str	r3, [r4, #96]	; 0x60
 8028518:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802851c:	b002      	add	sp, #8
 802851e:	bd70      	pop	{r4, r5, r6, pc}
 8028520:	2001      	movs	r0, #1
 8028522:	e7e5      	b.n	80284f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8028524:	2304      	movs	r3, #4
 8028526:	e7ea      	b.n	80284fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8028528:	b113      	cbz	r3, 8028530 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802852a:	ea10 0305 	ands.w	r3, r0, r5
 802852e:	d11c      	bne.n	802856a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8028530:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8028534:	f104 0620 	add.w	r6, r4, #32
 8028538:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802853c:	b98b      	cbnz	r3, 8028562 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802853e:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8028542:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8028546:	4298      	cmp	r0, r3
 8028548:	d802      	bhi.n	8028550 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802854a:	4630      	mov	r0, r6
 802854c:	f7ec fde4 	bl	8015118 <_ZN8touchgfx7Outline6moveToEii>
 8028550:	2301      	movs	r3, #1
 8028552:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8028556:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802855a:	e9dd 2100 	ldrd	r2, r1, [sp]
 802855e:	4630      	mov	r0, r6
 8028560:	e7d4      	b.n	802850c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8028562:	4630      	mov	r0, r6
 8028564:	f7ff fd04 	bl	8027f70 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028568:	e7f7      	b.n	802855a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 802856a:	461d      	mov	r5, r3
 802856c:	e7d0      	b.n	8028510 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08028570 <_ZN8touchgfx6CanvasD1Ev>:
 8028570:	b510      	push	{r4, lr}
 8028572:	4b04      	ldr	r3, [pc, #16]	; (8028584 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8028574:	4604      	mov	r4, r0
 8028576:	f840 3b20 	str.w	r3, [r0], #32
 802857a:	f7ec f8c7 	bl	801470c <_ZN8touchgfx7OutlineD1Ev>
 802857e:	4620      	mov	r0, r4
 8028580:	bd10      	pop	{r4, pc}
 8028582:	bf00      	nop
 8028584:	08030458 	.word	0x08030458

08028588 <_ZN8touchgfx6CanvasD0Ev>:
 8028588:	b510      	push	{r4, lr}
 802858a:	4604      	mov	r4, r0
 802858c:	f7ff fff0 	bl	8028570 <_ZN8touchgfx6CanvasD1Ev>
 8028590:	4620      	mov	r0, r4
 8028592:	2170      	movs	r1, #112	; 0x70
 8028594:	f002 fd09 	bl	802afaa <_ZdlPvj>
 8028598:	4620      	mov	r0, r4
 802859a:	bd10      	pop	{r4, pc}

0802859c <_ZN8touchgfx6CircleD1Ev>:
 802859c:	4770      	bx	lr

0802859e <_ZN8touchgfx6CircleD0Ev>:
 802859e:	b510      	push	{r4, lr}
 80285a0:	2148      	movs	r1, #72	; 0x48
 80285a2:	4604      	mov	r4, r0
 80285a4:	f002 fd01 	bl	802afaa <_ZdlPvj>
 80285a8:	4620      	mov	r0, r4
 80285aa:	bd10      	pop	{r4, pc}

080285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 80285ac:	b508      	push	{r3, lr}
 80285ae:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 80285b2:	f7ea fbab 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80285b6:	bd08      	pop	{r3, pc}

080285b8 <_ZN8touchgfx6CircleC1Ev>:
 80285b8:	b510      	push	{r4, lr}
 80285ba:	4604      	mov	r4, r0
 80285bc:	f7ea fa42 	bl	8012a44 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80285c0:	4b08      	ldr	r3, [pc, #32]	; (80285e4 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 80285c2:	6023      	str	r3, [r4, #0]
 80285c4:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80285c8:	2300      	movs	r3, #0
 80285ca:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80285ce:	f24b 4205 	movw	r2, #46085	; 0xb405
 80285d2:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80285d6:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80285da:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80285de:	60a3      	str	r3, [r4, #8]
 80285e0:	4620      	mov	r0, r4
 80285e2:	bd10      	pop	{r4, pc}
 80285e4:	0803046c 	.word	0x0803046c

080285e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80285e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80285ec:	428a      	cmp	r2, r1
 80285ee:	4680      	mov	r8, r0
 80285f0:	4610      	mov	r0, r2
 80285f2:	4699      	mov	r9, r3
 80285f4:	bfa6      	itte	ge
 80285f6:	460a      	movge	r2, r1
 80285f8:	4603      	movge	r3, r0
 80285fa:	460b      	movlt	r3, r1
 80285fc:	1a99      	subs	r1, r3, r2
 80285fe:	b085      	sub	sp, #20
 8028600:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8028604:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8028608:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802860a:	bfa4      	itt	ge
 802860c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8028610:	2200      	movge	r2, #0
 8028612:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8028616:	9300      	str	r3, [sp, #0]
 8028618:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802861c:	f102 0b01 	add.w	fp, r2, #1
 8028620:	2c00      	cmp	r4, #0
 8028622:	f040 80af 	bne.w	8028784 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8028626:	4610      	mov	r0, r2
 8028628:	9201      	str	r2, [sp, #4]
 802862a:	f7ea fb6f 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802862e:	a903      	add	r1, sp, #12
 8028630:	9003      	str	r0, [sp, #12]
 8028632:	4650      	mov	r0, sl
 8028634:	f7ea fa32 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028638:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802863c:	9a01      	ldr	r2, [sp, #4]
 802863e:	4408      	add	r0, r1
 8028640:	f8d9 1000 	ldr.w	r1, [r9]
 8028644:	4281      	cmp	r1, r0
 8028646:	bfc8      	it	gt
 8028648:	f8c9 0000 	strgt.w	r0, [r9]
 802864c:	6839      	ldr	r1, [r7, #0]
 802864e:	4288      	cmp	r0, r1
 8028650:	bfc8      	it	gt
 8028652:	6038      	strgt	r0, [r7, #0]
 8028654:	4610      	mov	r0, r2
 8028656:	f7ff ffa9 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802865a:	a903      	add	r1, sp, #12
 802865c:	9003      	str	r0, [sp, #12]
 802865e:	4650      	mov	r0, sl
 8028660:	f7ea fa1c 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028664:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028668:	1a10      	subs	r0, r2, r0
 802866a:	6832      	ldr	r2, [r6, #0]
 802866c:	4282      	cmp	r2, r0
 802866e:	bfc8      	it	gt
 8028670:	6030      	strgt	r0, [r6, #0]
 8028672:	682a      	ldr	r2, [r5, #0]
 8028674:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8028678:	4290      	cmp	r0, r2
 802867a:	fb9b f2f1 	sdiv	r2, fp, r1
 802867e:	fb01 b212 	mls	r2, r1, r2, fp
 8028682:	eba1 0202 	sub.w	r2, r1, r2
 8028686:	bfc8      	it	gt
 8028688:	6028      	strgt	r0, [r5, #0]
 802868a:	fb92 f0f1 	sdiv	r0, r2, r1
 802868e:	fb01 2210 	mls	r2, r1, r0, r2
 8028692:	4493      	add	fp, r2
 8028694:	9b00      	ldr	r3, [sp, #0]
 8028696:	455b      	cmp	r3, fp
 8028698:	db2a      	blt.n	80286f0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802869a:	4658      	mov	r0, fp
 802869c:	f7ea fb36 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286a0:	a903      	add	r1, sp, #12
 80286a2:	9003      	str	r0, [sp, #12]
 80286a4:	4650      	mov	r0, sl
 80286a6:	f7ea f9f9 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286aa:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80286ae:	4410      	add	r0, r2
 80286b0:	f8d9 2000 	ldr.w	r2, [r9]
 80286b4:	4282      	cmp	r2, r0
 80286b6:	bfc8      	it	gt
 80286b8:	f8c9 0000 	strgt.w	r0, [r9]
 80286bc:	683a      	ldr	r2, [r7, #0]
 80286be:	4290      	cmp	r0, r2
 80286c0:	bfc8      	it	gt
 80286c2:	6038      	strgt	r0, [r7, #0]
 80286c4:	4658      	mov	r0, fp
 80286c6:	f7ff ff71 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286ca:	a903      	add	r1, sp, #12
 80286cc:	9003      	str	r0, [sp, #12]
 80286ce:	4650      	mov	r0, sl
 80286d0:	f7ea f9e4 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286d4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80286d8:	1a10      	subs	r0, r2, r0
 80286da:	6832      	ldr	r2, [r6, #0]
 80286dc:	4282      	cmp	r2, r0
 80286de:	bfc8      	it	gt
 80286e0:	6030      	strgt	r0, [r6, #0]
 80286e2:	682a      	ldr	r2, [r5, #0]
 80286e4:	4290      	cmp	r0, r2
 80286e6:	bfc8      	it	gt
 80286e8:	6028      	strgt	r0, [r5, #0]
 80286ea:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80286ee:	e7d1      	b.n	8028694 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80286f0:	9b00      	ldr	r3, [sp, #0]
 80286f2:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80286f6:	455b      	cmp	r3, fp
 80286f8:	dd27      	ble.n	802874a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80286fa:	4618      	mov	r0, r3
 80286fc:	f7ea fb06 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028700:	a903      	add	r1, sp, #12
 8028702:	9003      	str	r0, [sp, #12]
 8028704:	4650      	mov	r0, sl
 8028706:	f7ea f9c9 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802870a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802870e:	4410      	add	r0, r2
 8028710:	f8d9 2000 	ldr.w	r2, [r9]
 8028714:	4282      	cmp	r2, r0
 8028716:	bfc8      	it	gt
 8028718:	f8c9 0000 	strgt.w	r0, [r9]
 802871c:	683a      	ldr	r2, [r7, #0]
 802871e:	4290      	cmp	r0, r2
 8028720:	bfc8      	it	gt
 8028722:	6038      	strgt	r0, [r7, #0]
 8028724:	9800      	ldr	r0, [sp, #0]
 8028726:	f7ff ff41 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802872a:	a903      	add	r1, sp, #12
 802872c:	9003      	str	r0, [sp, #12]
 802872e:	4650      	mov	r0, sl
 8028730:	f7ea f9b4 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028734:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028738:	1a10      	subs	r0, r2, r0
 802873a:	6832      	ldr	r2, [r6, #0]
 802873c:	4282      	cmp	r2, r0
 802873e:	bfc8      	it	gt
 8028740:	6030      	strgt	r0, [r6, #0]
 8028742:	682a      	ldr	r2, [r5, #0]
 8028744:	4290      	cmp	r0, r2
 8028746:	bfc8      	it	gt
 8028748:	6028      	strgt	r0, [r5, #0]
 802874a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802874e:	f8d9 1000 	ldr.w	r1, [r9]
 8028752:	4291      	cmp	r1, r2
 8028754:	bfc8      	it	gt
 8028756:	f8c9 2000 	strgt.w	r2, [r9]
 802875a:	683a      	ldr	r2, [r7, #0]
 802875c:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 8028760:	429a      	cmp	r2, r3
 8028762:	bfb8      	it	lt
 8028764:	603b      	strlt	r3, [r7, #0]
 8028766:	6832      	ldr	r2, [r6, #0]
 8028768:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 802876c:	429a      	cmp	r2, r3
 802876e:	bfc8      	it	gt
 8028770:	6033      	strgt	r3, [r6, #0]
 8028772:	682a      	ldr	r2, [r5, #0]
 8028774:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028778:	429a      	cmp	r2, r3
 802877a:	da00      	bge.n	802877e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802877c:	602b      	str	r3, [r5, #0]
 802877e:	b005      	add	sp, #20
 8028780:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028784:	2002      	movs	r0, #2
 8028786:	3401      	adds	r4, #1
 8028788:	fb94 f4f0 	sdiv	r4, r4, r0
 802878c:	4610      	mov	r0, r2
 802878e:	9201      	str	r2, [sp, #4]
 8028790:	f7ea fabc 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028794:	a903      	add	r1, sp, #12
 8028796:	9003      	str	r0, [sp, #12]
 8028798:	4650      	mov	r0, sl
 802879a:	f7ea f97f 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802879e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80287a2:	9a01      	ldr	r2, [sp, #4]
 80287a4:	4408      	add	r0, r1
 80287a6:	f8d9 1000 	ldr.w	r1, [r9]
 80287aa:	1b03      	subs	r3, r0, r4
 80287ac:	4299      	cmp	r1, r3
 80287ae:	bfc8      	it	gt
 80287b0:	f8c9 3000 	strgt.w	r3, [r9]
 80287b4:	6839      	ldr	r1, [r7, #0]
 80287b6:	428b      	cmp	r3, r1
 80287b8:	bfc8      	it	gt
 80287ba:	603b      	strgt	r3, [r7, #0]
 80287bc:	f8d9 1000 	ldr.w	r1, [r9]
 80287c0:	4420      	add	r0, r4
 80287c2:	4281      	cmp	r1, r0
 80287c4:	bfc8      	it	gt
 80287c6:	f8c9 0000 	strgt.w	r0, [r9]
 80287ca:	6839      	ldr	r1, [r7, #0]
 80287cc:	4288      	cmp	r0, r1
 80287ce:	bfc8      	it	gt
 80287d0:	6038      	strgt	r0, [r7, #0]
 80287d2:	4610      	mov	r0, r2
 80287d4:	f7ff feea 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80287d8:	a903      	add	r1, sp, #12
 80287da:	9003      	str	r0, [sp, #12]
 80287dc:	4650      	mov	r0, sl
 80287de:	f7ea f95d 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287e2:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80287e6:	1a10      	subs	r0, r2, r0
 80287e8:	6832      	ldr	r2, [r6, #0]
 80287ea:	1b01      	subs	r1, r0, r4
 80287ec:	428a      	cmp	r2, r1
 80287ee:	bfc8      	it	gt
 80287f0:	6031      	strgt	r1, [r6, #0]
 80287f2:	682a      	ldr	r2, [r5, #0]
 80287f4:	4291      	cmp	r1, r2
 80287f6:	bfc8      	it	gt
 80287f8:	6029      	strgt	r1, [r5, #0]
 80287fa:	6832      	ldr	r2, [r6, #0]
 80287fc:	4420      	add	r0, r4
 80287fe:	4282      	cmp	r2, r0
 8028800:	bfc8      	it	gt
 8028802:	6030      	strgt	r0, [r6, #0]
 8028804:	682a      	ldr	r2, [r5, #0]
 8028806:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802880a:	4290      	cmp	r0, r2
 802880c:	fb9b f2f1 	sdiv	r2, fp, r1
 8028810:	fb01 b212 	mls	r2, r1, r2, fp
 8028814:	eba1 0202 	sub.w	r2, r1, r2
 8028818:	bfc8      	it	gt
 802881a:	6028      	strgt	r0, [r5, #0]
 802881c:	fb92 f0f1 	sdiv	r0, r2, r1
 8028820:	fb01 2210 	mls	r2, r1, r0, r2
 8028824:	4493      	add	fp, r2
 8028826:	9b00      	ldr	r3, [sp, #0]
 8028828:	455b      	cmp	r3, fp
 802882a:	db40      	blt.n	80288ae <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 802882c:	4658      	mov	r0, fp
 802882e:	f7ea fa6d 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028832:	a903      	add	r1, sp, #12
 8028834:	9003      	str	r0, [sp, #12]
 8028836:	4650      	mov	r0, sl
 8028838:	f7ea f930 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802883c:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8028840:	4410      	add	r0, r2
 8028842:	f8d9 2000 	ldr.w	r2, [r9]
 8028846:	1b01      	subs	r1, r0, r4
 8028848:	428a      	cmp	r2, r1
 802884a:	bfc8      	it	gt
 802884c:	f8c9 1000 	strgt.w	r1, [r9]
 8028850:	683a      	ldr	r2, [r7, #0]
 8028852:	4291      	cmp	r1, r2
 8028854:	bfc8      	it	gt
 8028856:	6039      	strgt	r1, [r7, #0]
 8028858:	f8d9 2000 	ldr.w	r2, [r9]
 802885c:	4420      	add	r0, r4
 802885e:	4282      	cmp	r2, r0
 8028860:	bfc8      	it	gt
 8028862:	f8c9 0000 	strgt.w	r0, [r9]
 8028866:	683a      	ldr	r2, [r7, #0]
 8028868:	4290      	cmp	r0, r2
 802886a:	bfc8      	it	gt
 802886c:	6038      	strgt	r0, [r7, #0]
 802886e:	4658      	mov	r0, fp
 8028870:	f7ff fe9c 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028874:	a903      	add	r1, sp, #12
 8028876:	9003      	str	r0, [sp, #12]
 8028878:	4650      	mov	r0, sl
 802887a:	f7ea f90f 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802887e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028882:	1a10      	subs	r0, r2, r0
 8028884:	6832      	ldr	r2, [r6, #0]
 8028886:	1b01      	subs	r1, r0, r4
 8028888:	428a      	cmp	r2, r1
 802888a:	bfc8      	it	gt
 802888c:	6031      	strgt	r1, [r6, #0]
 802888e:	682a      	ldr	r2, [r5, #0]
 8028890:	4291      	cmp	r1, r2
 8028892:	bfc8      	it	gt
 8028894:	6029      	strgt	r1, [r5, #0]
 8028896:	6832      	ldr	r2, [r6, #0]
 8028898:	4420      	add	r0, r4
 802889a:	4282      	cmp	r2, r0
 802889c:	bfc8      	it	gt
 802889e:	6030      	strgt	r0, [r6, #0]
 80288a0:	682a      	ldr	r2, [r5, #0]
 80288a2:	4290      	cmp	r0, r2
 80288a4:	bfc8      	it	gt
 80288a6:	6028      	strgt	r0, [r5, #0]
 80288a8:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80288ac:	e7bb      	b.n	8028826 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 80288ae:	9b00      	ldr	r3, [sp, #0]
 80288b0:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80288b4:	455b      	cmp	r3, fp
 80288b6:	f77f af62 	ble.w	802877e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80288ba:	4618      	mov	r0, r3
 80288bc:	f7ea fa26 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80288c0:	a903      	add	r1, sp, #12
 80288c2:	9003      	str	r0, [sp, #12]
 80288c4:	4650      	mov	r0, sl
 80288c6:	f7ea f8e9 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80288ca:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80288ce:	4410      	add	r0, r2
 80288d0:	f8d9 2000 	ldr.w	r2, [r9]
 80288d4:	1b01      	subs	r1, r0, r4
 80288d6:	428a      	cmp	r2, r1
 80288d8:	bfc8      	it	gt
 80288da:	f8c9 1000 	strgt.w	r1, [r9]
 80288de:	683a      	ldr	r2, [r7, #0]
 80288e0:	4291      	cmp	r1, r2
 80288e2:	bfc8      	it	gt
 80288e4:	6039      	strgt	r1, [r7, #0]
 80288e6:	f8d9 2000 	ldr.w	r2, [r9]
 80288ea:	4420      	add	r0, r4
 80288ec:	4282      	cmp	r2, r0
 80288ee:	bfc8      	it	gt
 80288f0:	f8c9 0000 	strgt.w	r0, [r9]
 80288f4:	683b      	ldr	r3, [r7, #0]
 80288f6:	4298      	cmp	r0, r3
 80288f8:	bfc8      	it	gt
 80288fa:	6038      	strgt	r0, [r7, #0]
 80288fc:	9800      	ldr	r0, [sp, #0]
 80288fe:	f7ff fe55 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028902:	a903      	add	r1, sp, #12
 8028904:	9003      	str	r0, [sp, #12]
 8028906:	4650      	mov	r0, sl
 8028908:	f7ea f8c8 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802890c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028910:	6832      	ldr	r2, [r6, #0]
 8028912:	1a18      	subs	r0, r3, r0
 8028914:	1b03      	subs	r3, r0, r4
 8028916:	429a      	cmp	r2, r3
 8028918:	bfc8      	it	gt
 802891a:	6033      	strgt	r3, [r6, #0]
 802891c:	682a      	ldr	r2, [r5, #0]
 802891e:	4293      	cmp	r3, r2
 8028920:	bfc8      	it	gt
 8028922:	602b      	strgt	r3, [r5, #0]
 8028924:	6833      	ldr	r3, [r6, #0]
 8028926:	4404      	add	r4, r0
 8028928:	42a3      	cmp	r3, r4
 802892a:	bfc8      	it	gt
 802892c:	6034      	strgt	r4, [r6, #0]
 802892e:	682b      	ldr	r3, [r5, #0]
 8028930:	429c      	cmp	r4, r3
 8028932:	bfc8      	it	gt
 8028934:	602c      	strgt	r4, [r5, #0]
 8028936:	e722      	b.n	802877e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08028938 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8028938:	b530      	push	{r4, r5, lr}
 802893a:	4604      	mov	r4, r0
 802893c:	4608      	mov	r0, r1
 802893e:	4611      	mov	r1, r2
 8028940:	461a      	mov	r2, r3
 8028942:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8028946:	b089      	sub	sp, #36	; 0x24
 8028948:	015b      	lsls	r3, r3, #5
 802894a:	9304      	str	r3, [sp, #16]
 802894c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8028950:	2500      	movs	r5, #0
 8028952:	015b      	lsls	r3, r3, #5
 8028954:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8028958:	ab07      	add	r3, sp, #28
 802895a:	9302      	str	r3, [sp, #8]
 802895c:	ab06      	add	r3, sp, #24
 802895e:	9301      	str	r3, [sp, #4]
 8028960:	ab05      	add	r3, sp, #20
 8028962:	9300      	str	r3, [sp, #0]
 8028964:	ab04      	add	r3, sp, #16
 8028966:	9505      	str	r5, [sp, #20]
 8028968:	f7ff fe3e 	bl	80285e8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 802896c:	2520      	movs	r5, #32
 802896e:	9a04      	ldr	r2, [sp, #16]
 8028970:	9805      	ldr	r0, [sp, #20]
 8028972:	fb92 f2f5 	sdiv	r2, r2, r5
 8028976:	fb90 f0f5 	sdiv	r0, r0, r5
 802897a:	b292      	uxth	r2, r2
 802897c:	3002      	adds	r0, #2
 802897e:	1a80      	subs	r0, r0, r2
 8028980:	9b06      	ldr	r3, [sp, #24]
 8028982:	9907      	ldr	r1, [sp, #28]
 8028984:	fb93 f3f5 	sdiv	r3, r3, r5
 8028988:	fb91 f1f5 	sdiv	r1, r1, r5
 802898c:	b29b      	uxth	r3, r3
 802898e:	3102      	adds	r1, #2
 8028990:	1ac9      	subs	r1, r1, r3
 8028992:	3a01      	subs	r2, #1
 8028994:	3b01      	subs	r3, #1
 8028996:	80a0      	strh	r0, [r4, #4]
 8028998:	4620      	mov	r0, r4
 802899a:	8022      	strh	r2, [r4, #0]
 802899c:	8063      	strh	r3, [r4, #2]
 802899e:	80e1      	strh	r1, [r4, #6]
 80289a0:	b009      	add	sp, #36	; 0x24
 80289a2:	bd30      	pop	{r4, r5, pc}

080289a4 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 80289a4:	b510      	push	{r4, lr}
 80289a6:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 80289aa:	4604      	mov	r4, r0
 80289ac:	f7ff ffc4 	bl	8028938 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80289b0:	4620      	mov	r0, r4
 80289b2:	bd10      	pop	{r4, pc}

080289b4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 80289b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80289b6:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 80289ba:	4606      	mov	r6, r0
 80289bc:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 80289c0:	6813      	ldr	r3, [r2, #0]
 80289c2:	42a5      	cmp	r5, r4
 80289c4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80289c8:	da2b      	bge.n	8028a22 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80289ca:	42a3      	cmp	r3, r4
 80289cc:	dd14      	ble.n	80289f8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80289ce:	b168      	cbz	r0, 80289ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80289d0:	4267      	negs	r7, r4
 80289d2:	fb97 f2f0 	sdiv	r2, r7, r0
 80289d6:	fb00 7212 	mls	r2, r0, r2, r7
 80289da:	1a82      	subs	r2, r0, r2
 80289dc:	fb92 f7f0 	sdiv	r7, r2, r0
 80289e0:	fb00 2017 	mls	r0, r0, r7, r2
 80289e4:	1a24      	subs	r4, r4, r0
 80289e6:	42ac      	cmp	r4, r5
 80289e8:	bfb8      	it	lt
 80289ea:	462c      	movlt	r4, r5
 80289ec:	4630      	mov	r0, r6
 80289ee:	4622      	mov	r2, r4
 80289f0:	f7ff ffa2 	bl	8028938 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80289f4:	4630      	mov	r0, r6
 80289f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80289f8:	42ab      	cmp	r3, r5
 80289fa:	dd0e      	ble.n	8028a1a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80289fc:	b168      	cbz	r0, 8028a1a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80289fe:	425f      	negs	r7, r3
 8028a00:	fb97 f2f0 	sdiv	r2, r7, r0
 8028a04:	fb00 7212 	mls	r2, r0, r2, r7
 8028a08:	1a82      	subs	r2, r0, r2
 8028a0a:	fb92 f7f0 	sdiv	r7, r2, r0
 8028a0e:	fb00 2017 	mls	r0, r0, r7, r2
 8028a12:	1a1b      	subs	r3, r3, r0
 8028a14:	42ab      	cmp	r3, r5
 8028a16:	bfb8      	it	lt
 8028a18:	462b      	movlt	r3, r5
 8028a1a:	4622      	mov	r2, r4
 8028a1c:	461c      	mov	r4, r3
 8028a1e:	4613      	mov	r3, r2
 8028a20:	e7e4      	b.n	80289ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028a22:	42a3      	cmp	r3, r4
 8028a24:	da10      	bge.n	8028a48 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8028a26:	b148      	cbz	r0, 8028a3c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8028a28:	fb94 f2f0 	sdiv	r2, r4, r0
 8028a2c:	fb00 4212 	mls	r2, r0, r2, r4
 8028a30:	1a82      	subs	r2, r0, r2
 8028a32:	fb92 f7f0 	sdiv	r7, r2, r0
 8028a36:	fb00 2017 	mls	r0, r0, r7, r2
 8028a3a:	4404      	add	r4, r0
 8028a3c:	42a5      	cmp	r5, r4
 8028a3e:	bfa8      	it	ge
 8028a40:	4625      	movge	r5, r4
 8028a42:	461c      	mov	r4, r3
 8028a44:	462b      	mov	r3, r5
 8028a46:	e7d1      	b.n	80289ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028a48:	42ab      	cmp	r3, r5
 8028a4a:	dacf      	bge.n	80289ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028a4c:	2800      	cmp	r0, #0
 8028a4e:	d0cd      	beq.n	80289ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028a50:	fb93 f2f0 	sdiv	r2, r3, r0
 8028a54:	fb00 3212 	mls	r2, r0, r2, r3
 8028a58:	1a82      	subs	r2, r0, r2
 8028a5a:	fb92 f7f0 	sdiv	r7, r2, r0
 8028a5e:	fb00 2017 	mls	r0, r0, r7, r2
 8028a62:	4403      	add	r3, r0
 8028a64:	42ab      	cmp	r3, r5
 8028a66:	bfa8      	it	ge
 8028a68:	462b      	movge	r3, r5
 8028a6a:	e7bf      	b.n	80289ec <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08028a6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8028a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028a70:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8028a74:	42ae      	cmp	r6, r5
 8028a76:	bfa2      	ittt	ge
 8028a78:	4633      	movge	r3, r6
 8028a7a:	462e      	movge	r6, r5
 8028a7c:	461d      	movge	r5, r3
 8028a7e:	1bab      	subs	r3, r5, r6
 8028a80:	468b      	mov	fp, r1
 8028a82:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8028a84:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8028a88:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8028a8c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028a90:	f04f 0220 	mov.w	r2, #32
 8028a94:	b0ab      	sub	sp, #172	; 0xac
 8028a96:	4604      	mov	r4, r0
 8028a98:	bfa4      	itt	ge
 8028a9a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8028a9e:	2600      	movge	r6, #0
 8028aa0:	fb99 f9f2 	sdiv	r9, r9, r2
 8028aa4:	fb9a faf2 	sdiv	sl, sl, r2
 8028aa8:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8028aaa:	2900      	cmp	r1, #0
 8028aac:	f000 80f5 	beq.w	8028c9a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028ab0:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028ab4:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028ab8:	eba9 0700 	sub.w	r7, r9, r0
 8028abc:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028ac0:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028ac4:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028ac8:	ebaa 0802 	sub.w	r8, sl, r2
 8028acc:	4407      	add	r7, r0
 8028ace:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028ad2:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028ad6:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8028ada:	b23f      	sxth	r7, r7
 8028adc:	4490      	add	r8, r2
 8028ade:	eba9 0707 	sub.w	r7, r9, r7
 8028ae2:	fa0f f888 	sxth.w	r8, r8
 8028ae6:	ebaa 0808 	sub.w	r8, sl, r8
 8028aea:	2f00      	cmp	r7, #0
 8028aec:	bfb8      	it	lt
 8028aee:	427f      	neglt	r7, r7
 8028af0:	f1b8 0f00 	cmp.w	r8, #0
 8028af4:	bfb8      	it	lt
 8028af6:	f1c8 0800 	rsblt	r8, r8, #0
 8028afa:	45bc      	cmp	ip, r7
 8028afc:	bfcc      	ite	gt
 8028afe:	f10c 0701 	addgt.w	r7, ip, #1
 8028b02:	3701      	addle	r7, #1
 8028b04:	4540      	cmp	r0, r8
 8028b06:	bfc8      	it	gt
 8028b08:	f100 0801 	addgt.w	r8, r0, #1
 8028b0c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8028b10:	f100 0001 	add.w	r0, r0, #1
 8028b14:	ea4f 0060 	mov.w	r0, r0, asr #1
 8028b18:	f04f 0202 	mov.w	r2, #2
 8028b1c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8028b20:	fb91 f1f2 	sdiv	r1, r1, r2
 8028b24:	eba3 0301 	sub.w	r3, r3, r1
 8028b28:	bfd8      	it	le
 8028b2a:	f108 0801 	addle.w	r8, r8, #1
 8028b2e:	9201      	str	r2, [sp, #4]
 8028b30:	930d      	str	r3, [sp, #52]	; 0x34
 8028b32:	f7ea f8cb 	bl	8012ccc <_ZN8touchgfx7CWRUtil4sineEi>
 8028b36:	a92a      	add	r1, sp, #168	; 0xa8
 8028b38:	fb08 f808 	mul.w	r8, r8, r8
 8028b3c:	f841 0d70 	str.w	r0, [r1, #-112]!
 8028b40:	a80d      	add	r0, sp, #52	; 0x34
 8028b42:	f7e9 ffab 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b46:	fb07 8707 	mla	r7, r7, r7, r8
 8028b4a:	f04f 0c20 	mov.w	ip, #32
 8028b4e:	fb90 f0fc 	sdiv	r0, r0, ip
 8028b52:	4340      	muls	r0, r0
 8028b54:	4287      	cmp	r7, r0
 8028b56:	9a01      	ldr	r2, [sp, #4]
 8028b58:	da04      	bge.n	8028b64 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8028b5a:	2401      	movs	r4, #1
 8028b5c:	4620      	mov	r0, r4
 8028b5e:	b02b      	add	sp, #172	; 0xac
 8028b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028b64:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8028b66:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8028b68:	fb91 f3f2 	sdiv	r3, r1, r2
 8028b6c:	4403      	add	r3, r0
 8028b6e:	fb93 f3fc 	sdiv	r3, r3, ip
 8028b72:	f9bb 1000 	ldrsh.w	r1, [fp]
 8028b76:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8028b7a:	440a      	add	r2, r1
 8028b7c:	b212      	sxth	r2, r2
 8028b7e:	454a      	cmp	r2, r9
 8028b80:	bfa8      	it	ge
 8028b82:	464a      	movge	r2, r9
 8028b84:	428a      	cmp	r2, r1
 8028b86:	bfac      	ite	ge
 8028b88:	eba9 0902 	subge.w	r9, r9, r2
 8028b8c:	eba9 0901 	sublt.w	r9, r9, r1
 8028b90:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8028b94:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028b98:	440a      	add	r2, r1
 8028b9a:	b212      	sxth	r2, r2
 8028b9c:	4552      	cmp	r2, sl
 8028b9e:	bfa8      	it	ge
 8028ba0:	4652      	movge	r2, sl
 8028ba2:	428a      	cmp	r2, r1
 8028ba4:	bfac      	ite	ge
 8028ba6:	ebaa 0a02 	subge.w	sl, sl, r2
 8028baa:	ebaa 0a01 	sublt.w	sl, sl, r1
 8028bae:	3301      	adds	r3, #1
 8028bb0:	fb0a fa0a 	mul.w	sl, sl, sl
 8028bb4:	fb09 a909 	mla	r9, r9, r9, sl
 8028bb8:	435b      	muls	r3, r3
 8028bba:	4599      	cmp	r9, r3
 8028bbc:	dccd      	bgt.n	8028b5a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8028bbe:	465a      	mov	r2, fp
 8028bc0:	4621      	mov	r1, r4
 8028bc2:	a80e      	add	r0, sp, #56	; 0x38
 8028bc4:	f7ff faae 	bl	8028124 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028bc8:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8028bca:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028bcc:	9209      	str	r2, [sp, #36]	; 0x24
 8028bce:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028bd2:	930a      	str	r3, [sp, #40]	; 0x28
 8028bd4:	dd07      	ble.n	8028be6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028bd6:	2102      	movs	r1, #2
 8028bd8:	fb93 f3f1 	sdiv	r3, r3, r1
 8028bdc:	4413      	add	r3, r2
 8028bde:	930a      	str	r3, [sp, #40]	; 0x28
 8028be0:	fb93 f3f1 	sdiv	r3, r3, r1
 8028be4:	9309      	str	r3, [sp, #36]	; 0x24
 8028be6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028bea:	4630      	mov	r0, r6
 8028bec:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028bf0:	930b      	str	r3, [sp, #44]	; 0x2c
 8028bf2:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028bf6:	f7ea f889 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028bfa:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8028bfe:	f04f 0a02 	mov.w	sl, #2
 8028c02:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028c06:	a80b      	add	r0, sp, #44	; 0x2c
 8028c08:	4649      	mov	r1, r9
 8028c0a:	f7e9 ff47 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c0e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028c10:	fb90 f0fa 	sdiv	r0, r0, sl
 8028c14:	eb00 0b03 	add.w	fp, r0, r3
 8028c18:	4630      	mov	r0, r6
 8028c1a:	f7ff fcc7 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c1e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8028c22:	017f      	lsls	r7, r7, #5
 8028c24:	f848 0d78 	str.w	r0, [r8, #-120]!
 8028c28:	a80b      	add	r0, sp, #44	; 0x2c
 8028c2a:	4641      	mov	r1, r8
 8028c2c:	f7e9 ff36 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c30:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028c32:	fb90 f0fa 	sdiv	r0, r0, sl
 8028c36:	4659      	mov	r1, fp
 8028c38:	1a12      	subs	r2, r2, r0
 8028c3a:	a80e      	add	r0, sp, #56	; 0x38
 8028c3c:	f7ff fbf2 	bl	8028424 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8028c40:	f106 0a20 	add.w	sl, r6, #32
 8028c44:	bb67      	cbnz	r7, 8028ca0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8028c46:	46b3      	mov	fp, r6
 8028c48:	45aa      	cmp	sl, r5
 8028c4a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028c4c:	dc33      	bgt.n	8028cb6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8028c4e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028c50:	4650      	mov	r0, sl
 8028c52:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8028c56:	920b      	str	r2, [sp, #44]	; 0x2c
 8028c58:	f7ea f858 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c5c:	4641      	mov	r1, r8
 8028c5e:	900c      	str	r0, [sp, #48]	; 0x30
 8028c60:	a80b      	add	r0, sp, #44	; 0x2c
 8028c62:	f7e9 ff1b 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c66:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8028c68:	2302      	movs	r3, #2
 8028c6a:	fb90 f0f3 	sdiv	r0, r0, r3
 8028c6e:	eb00 0b02 	add.w	fp, r0, r2
 8028c72:	4650      	mov	r0, sl
 8028c74:	f7ff fc9a 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c78:	4649      	mov	r1, r9
 8028c7a:	900d      	str	r0, [sp, #52]	; 0x34
 8028c7c:	a80b      	add	r0, sp, #44	; 0x2c
 8028c7e:	f7e9 ff0d 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c82:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028c84:	2302      	movs	r3, #2
 8028c86:	4659      	mov	r1, fp
 8028c88:	fb90 f0f3 	sdiv	r0, r0, r3
 8028c8c:	1a12      	subs	r2, r2, r0
 8028c8e:	a80e      	add	r0, sp, #56	; 0x38
 8028c90:	46d3      	mov	fp, sl
 8028c92:	f7ff fc14 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028c96:	44ba      	add	sl, r7
 8028c98:	e7d6      	b.n	8028c48 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8028c9a:	fb93 f3f2 	sdiv	r3, r3, r2
 8028c9e:	e768      	b.n	8028b72 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028ca0:	fb9a f2f7 	sdiv	r2, sl, r7
 8028ca4:	fb07 a212 	mls	r2, r7, r2, sl
 8028ca8:	1aba      	subs	r2, r7, r2
 8028caa:	fb92 f1f7 	sdiv	r1, r2, r7
 8028cae:	fb07 2211 	mls	r2, r7, r1, r2
 8028cb2:	4492      	add	sl, r2
 8028cb4:	e7c7      	b.n	8028c46 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028cb6:	45ab      	cmp	fp, r5
 8028cb8:	da23      	bge.n	8028d02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8028cba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028cbc:	4628      	mov	r0, r5
 8028cbe:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028cc2:	920b      	str	r2, [sp, #44]	; 0x2c
 8028cc4:	f7ea f822 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028cc8:	4641      	mov	r1, r8
 8028cca:	900c      	str	r0, [sp, #48]	; 0x30
 8028ccc:	a80b      	add	r0, sp, #44	; 0x2c
 8028cce:	f7e9 fee5 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cd2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028cd4:	f04f 0a02 	mov.w	sl, #2
 8028cd8:	fb90 f0fa 	sdiv	r0, r0, sl
 8028cdc:	4403      	add	r3, r0
 8028cde:	4628      	mov	r0, r5
 8028ce0:	9301      	str	r3, [sp, #4]
 8028ce2:	f7ff fc63 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028ce6:	4649      	mov	r1, r9
 8028ce8:	900d      	str	r0, [sp, #52]	; 0x34
 8028cea:	a80b      	add	r0, sp, #44	; 0x2c
 8028cec:	f7e9 fed6 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cf0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028cf2:	9b01      	ldr	r3, [sp, #4]
 8028cf4:	fb90 f0fa 	sdiv	r0, r0, sl
 8028cf8:	4619      	mov	r1, r3
 8028cfa:	1a12      	subs	r2, r2, r0
 8028cfc:	a80e      	add	r0, sp, #56	; 0x38
 8028cfe:	f7ff fbde 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028d02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028d04:	b99b      	cbnz	r3, 8028d2e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028d06:	1bad      	subs	r5, r5, r6
 8028d08:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8028d0c:	da04      	bge.n	8028d18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d0e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8028d12:	a80e      	add	r0, sp, #56	; 0x38
 8028d14:	f7ff fbd3 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028d18:	21ff      	movs	r1, #255	; 0xff
 8028d1a:	a80e      	add	r0, sp, #56	; 0x38
 8028d1c:	f7ff fabe 	bl	802829c <_ZN8touchgfx6Canvas6renderEh>
 8028d20:	4604      	mov	r4, r0
 8028d22:	4b8a      	ldr	r3, [pc, #552]	; (8028f4c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8028d24:	930e      	str	r3, [sp, #56]	; 0x38
 8028d26:	a816      	add	r0, sp, #88	; 0x58
 8028d28:	f7eb fcf0 	bl	801470c <_ZN8touchgfx7OutlineD1Ev>
 8028d2c:	e716      	b.n	8028b5c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8028d2e:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8028d32:	429a      	cmp	r2, r3
 8028d34:	f0c0 8107 	bcc.w	8028f46 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8028d38:	1bab      	subs	r3, r5, r6
 8028d3a:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8028d3e:	9301      	str	r3, [sp, #4]
 8028d40:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028d44:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8028d48:	da43      	bge.n	8028dd2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028d4a:	4628      	mov	r0, r5
 8028d4c:	f7e9 ffde 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d50:	4649      	mov	r1, r9
 8028d52:	900d      	str	r0, [sp, #52]	; 0x34
 8028d54:	a809      	add	r0, sp, #36	; 0x24
 8028d56:	f7e9 fea1 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d5a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028d5c:	18c3      	adds	r3, r0, r3
 8028d5e:	4628      	mov	r0, r5
 8028d60:	9303      	str	r3, [sp, #12]
 8028d62:	f7ff fc23 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d66:	4649      	mov	r1, r9
 8028d68:	900d      	str	r0, [sp, #52]	; 0x34
 8028d6a:	a809      	add	r0, sp, #36	; 0x24
 8028d6c:	f7e9 fe96 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028d72:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028d76:	1a1b      	subs	r3, r3, r0
 8028d78:	9302      	str	r3, [sp, #8]
 8028d7a:	9204      	str	r2, [sp, #16]
 8028d7c:	eb0a 0305 	add.w	r3, sl, r5
 8028d80:	9a04      	ldr	r2, [sp, #16]
 8028d82:	4293      	cmp	r3, r2
 8028d84:	da25      	bge.n	8028dd2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028d86:	4618      	mov	r0, r3
 8028d88:	9306      	str	r3, [sp, #24]
 8028d8a:	f7e9 ffbf 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d8e:	4649      	mov	r1, r9
 8028d90:	900d      	str	r0, [sp, #52]	; 0x34
 8028d92:	a80a      	add	r0, sp, #40	; 0x28
 8028d94:	f7e9 fe82 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d98:	9b03      	ldr	r3, [sp, #12]
 8028d9a:	2202      	movs	r2, #2
 8028d9c:	fb90 f0f2 	sdiv	r0, r0, r2
 8028da0:	18c3      	adds	r3, r0, r3
 8028da2:	9305      	str	r3, [sp, #20]
 8028da4:	9b06      	ldr	r3, [sp, #24]
 8028da6:	9207      	str	r2, [sp, #28]
 8028da8:	4618      	mov	r0, r3
 8028daa:	f7ff fbff 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028dae:	a92a      	add	r1, sp, #168	; 0xa8
 8028db0:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028db4:	a80a      	add	r0, sp, #40	; 0x28
 8028db6:	f7e9 fe71 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028dba:	9b02      	ldr	r3, [sp, #8]
 8028dbc:	9a07      	ldr	r2, [sp, #28]
 8028dbe:	9905      	ldr	r1, [sp, #20]
 8028dc0:	fb90 f2f2 	sdiv	r2, r0, r2
 8028dc4:	a80e      	add	r0, sp, #56	; 0x38
 8028dc6:	1a9a      	subs	r2, r3, r2
 8028dc8:	f7ff fb79 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028dcc:	9b06      	ldr	r3, [sp, #24]
 8028dce:	4453      	add	r3, sl
 8028dd0:	e7d6      	b.n	8028d80 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028dd2:	45ab      	cmp	fp, r5
 8028dd4:	da25      	bge.n	8028e22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028dd6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028dda:	4628      	mov	r0, r5
 8028ddc:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028de0:	930b      	str	r3, [sp, #44]	; 0x2c
 8028de2:	f7e9 ff93 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028de6:	4641      	mov	r1, r8
 8028de8:	900c      	str	r0, [sp, #48]	; 0x30
 8028dea:	a80b      	add	r0, sp, #44	; 0x2c
 8028dec:	f7e9 fe56 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028df0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028df2:	2202      	movs	r2, #2
 8028df4:	fb90 f0f2 	sdiv	r0, r0, r2
 8028df8:	eb00 0903 	add.w	r9, r0, r3
 8028dfc:	4628      	mov	r0, r5
 8028dfe:	9202      	str	r2, [sp, #8]
 8028e00:	f7ff fbd4 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028e04:	a92a      	add	r1, sp, #168	; 0xa8
 8028e06:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028e0a:	a80b      	add	r0, sp, #44	; 0x2c
 8028e0c:	f7e9 fe46 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028e10:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028e12:	9a02      	ldr	r2, [sp, #8]
 8028e14:	fb90 f2f2 	sdiv	r2, r0, r2
 8028e18:	4649      	mov	r1, r9
 8028e1a:	1a9a      	subs	r2, r3, r2
 8028e1c:	a80e      	add	r0, sp, #56	; 0x38
 8028e1e:	f7ff fb4e 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028e22:	46d9      	mov	r9, fp
 8028e24:	2502      	movs	r5, #2
 8028e26:	45b1      	cmp	r9, r6
 8028e28:	db25      	blt.n	8028e76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8028e2a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028e2e:	4648      	mov	r0, r9
 8028e30:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028e34:	930b      	str	r3, [sp, #44]	; 0x2c
 8028e36:	f7e9 ff69 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028e3a:	4641      	mov	r1, r8
 8028e3c:	900c      	str	r0, [sp, #48]	; 0x30
 8028e3e:	a80b      	add	r0, sp, #44	; 0x2c
 8028e40:	f7e9 fe2c 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028e44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028e46:	fb90 f0f5 	sdiv	r0, r0, r5
 8028e4a:	eb00 0b03 	add.w	fp, r0, r3
 8028e4e:	4648      	mov	r0, r9
 8028e50:	f7ff fbac 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028e54:	a90d      	add	r1, sp, #52	; 0x34
 8028e56:	900d      	str	r0, [sp, #52]	; 0x34
 8028e58:	a80b      	add	r0, sp, #44	; 0x2c
 8028e5a:	f7e9 fe1f 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028e5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028e60:	fb90 f0f5 	sdiv	r0, r0, r5
 8028e64:	4659      	mov	r1, fp
 8028e66:	1a12      	subs	r2, r2, r0
 8028e68:	a80e      	add	r0, sp, #56	; 0x38
 8028e6a:	46cb      	mov	fp, r9
 8028e6c:	f7ff fb27 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028e70:	eba9 0907 	sub.w	r9, r9, r7
 8028e74:	e7d7      	b.n	8028e26 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028e76:	455e      	cmp	r6, fp
 8028e78:	da22      	bge.n	8028ec0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8028e7a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028e7e:	4630      	mov	r0, r6
 8028e80:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028e84:	930b      	str	r3, [sp, #44]	; 0x2c
 8028e86:	f7e9 ff41 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028e8a:	4641      	mov	r1, r8
 8028e8c:	900c      	str	r0, [sp, #48]	; 0x30
 8028e8e:	a80b      	add	r0, sp, #44	; 0x2c
 8028e90:	f7e9 fe04 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028e94:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028e96:	2502      	movs	r5, #2
 8028e98:	fb90 f0f5 	sdiv	r0, r0, r5
 8028e9c:	4407      	add	r7, r0
 8028e9e:	4630      	mov	r0, r6
 8028ea0:	f7ff fb84 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028ea4:	a92a      	add	r1, sp, #168	; 0xa8
 8028ea6:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028eaa:	a80b      	add	r0, sp, #44	; 0x2c
 8028eac:	f7e9 fdf6 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028eb0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028eb2:	fb90 f0f5 	sdiv	r0, r0, r5
 8028eb6:	4639      	mov	r1, r7
 8028eb8:	1a12      	subs	r2, r2, r0
 8028eba:	a80e      	add	r0, sp, #56	; 0x38
 8028ebc:	f7ff faff 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028ec0:	9b01      	ldr	r3, [sp, #4]
 8028ec2:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028ec6:	f6bf af27 	bge.w	8028d18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028eca:	4630      	mov	r0, r6
 8028ecc:	f7e9 ff1e 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028ed0:	ad2a      	add	r5, sp, #168	; 0xa8
 8028ed2:	f04f 0b02 	mov.w	fp, #2
 8028ed6:	f845 0d74 	str.w	r0, [r5, #-116]!
 8028eda:	a809      	add	r0, sp, #36	; 0x24
 8028edc:	4629      	mov	r1, r5
 8028ede:	f7e9 fddd 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ee2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028ee4:	eb00 0903 	add.w	r9, r0, r3
 8028ee8:	4630      	mov	r0, r6
 8028eea:	f7ff fb5f 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028eee:	4629      	mov	r1, r5
 8028ef0:	900d      	str	r0, [sp, #52]	; 0x34
 8028ef2:	a809      	add	r0, sp, #36	; 0x24
 8028ef4:	f7e9 fdd2 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ef8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028efa:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8028efe:	eba3 0800 	sub.w	r8, r3, r0
 8028f02:	4454      	add	r4, sl
 8028f04:	42a6      	cmp	r6, r4
 8028f06:	f77f af07 	ble.w	8028d18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028f0a:	4620      	mov	r0, r4
 8028f0c:	f7e9 fefe 	bl	8012d0c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028f10:	4629      	mov	r1, r5
 8028f12:	900d      	str	r0, [sp, #52]	; 0x34
 8028f14:	a80a      	add	r0, sp, #40	; 0x28
 8028f16:	f7e9 fdc1 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028f1a:	fb90 f0fb 	sdiv	r0, r0, fp
 8028f1e:	eb00 0709 	add.w	r7, r0, r9
 8028f22:	4620      	mov	r0, r4
 8028f24:	f7ff fb42 	bl	80285ac <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028f28:	a90c      	add	r1, sp, #48	; 0x30
 8028f2a:	900c      	str	r0, [sp, #48]	; 0x30
 8028f2c:	a80a      	add	r0, sp, #40	; 0x28
 8028f2e:	f7e9 fdb5 	bl	8012a9c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028f32:	4639      	mov	r1, r7
 8028f34:	fb90 f2fb 	sdiv	r2, r0, fp
 8028f38:	a80e      	add	r0, sp, #56	; 0x38
 8028f3a:	eba8 0202 	sub.w	r2, r8, r2
 8028f3e:	f7ff fabe 	bl	80284be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028f42:	4454      	add	r4, sl
 8028f44:	e7de      	b.n	8028f04 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8028f46:	2400      	movs	r4, #0
 8028f48:	e6eb      	b.n	8028d22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8028f4a:	bf00      	nop
 8028f4c:	08030458 	.word	0x08030458

08028f50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028f50:	b570      	push	{r4, r5, r6, lr}
 8028f52:	790b      	ldrb	r3, [r1, #4]
 8028f54:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028f58:	2b00      	cmp	r3, #0
 8028f5a:	bf0c      	ite	eq
 8028f5c:	2301      	moveq	r3, #1
 8028f5e:	2300      	movne	r3, #0
 8028f60:	4604      	mov	r4, r0
 8028f62:	460e      	mov	r6, r1
 8028f64:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028f68:	d109      	bne.n	8028f7e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028f6a:	b14d      	cbz	r5, 8028f80 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028f6c:	7933      	ldrb	r3, [r6, #4]
 8028f6e:	2b01      	cmp	r3, #1
 8028f70:	d10c      	bne.n	8028f8c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028f72:	6823      	ldr	r3, [r4, #0]
 8028f74:	4620      	mov	r0, r4
 8028f76:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028f78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028f7c:	4718      	bx	r3
 8028f7e:	b12d      	cbz	r5, 8028f8c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028f80:	6823      	ldr	r3, [r4, #0]
 8028f82:	4620      	mov	r0, r4
 8028f84:	695b      	ldr	r3, [r3, #20]
 8028f86:	4798      	blx	r3
 8028f88:	2d00      	cmp	r5, #0
 8028f8a:	d1ef      	bne.n	8028f6c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8028f8c:	bd70      	pop	{r4, r5, r6, pc}

08028f8e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8028f8e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028f92:	4770      	bx	lr

08028f94 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028f94:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028f98:	4770      	bx	lr

08028f9a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8028f9a:	6802      	ldr	r2, [r0, #0]
 8028f9c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028fa0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028fa2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028fa6:	4710      	bx	r2

08028fa8 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028fa8:	6802      	ldr	r2, [r0, #0]
 8028faa:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028fae:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028fb0:	eef0 0a40 	vmov.f32	s1, s0
 8028fb4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028fb8:	4710      	bx	r2

08028fba <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8028fba:	6802      	ldr	r2, [r0, #0]
 8028fbc:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028fc0:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028fc2:	eeb0 1a40 	vmov.f32	s2, s0
 8028fc6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028fca:	4710      	bx	r2

08028fcc <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028fcc:	6802      	ldr	r2, [r0, #0]
 8028fce:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028fd2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028fd4:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028fd8:	4710      	bx	r2

08028fda <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8028fda:	6802      	ldr	r2, [r0, #0]
 8028fdc:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028fe0:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028fe2:	eef0 0a40 	vmov.f32	s1, s0
 8028fe6:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028fea:	4710      	bx	r2

08028fec <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8028fec:	6802      	ldr	r2, [r0, #0]
 8028fee:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028ff2:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028ff4:	eeb0 1a40 	vmov.f32	s2, s0
 8028ff8:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028ffc:	4710      	bx	r2

08028ffe <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8028ffe:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8029002:	4770      	bx	lr

08029004 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8029004:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8029008:	4770      	bx	lr

0802900a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802900a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802900e:	4770      	bx	lr

08029010 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8029010:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8029014:	4770      	bx	lr

08029016 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8029016:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 802901a:	4770      	bx	lr

0802901c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 802901c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8029020:	4770      	bx	lr

08029022 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8029022:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8029026:	4770      	bx	lr

08029028 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8029028:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 802902c:	4770      	bx	lr

0802902e <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802902e:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8029032:	4770      	bx	lr

08029034 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8029034:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8029038:	4770      	bx	lr

0802903a <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 802903a:	ee07 2a90 	vmov	s15, r2
 802903e:	6803      	ldr	r3, [r0, #0]
 8029040:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8029044:	ee07 1a90 	vmov	s15, r1
 8029048:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 802904c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8029050:	4718      	bx	r3

08029052 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8029052:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8029056:	4770      	bx	lr

08029058 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8029058:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 802905c:	4770      	bx	lr

0802905e <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802905e:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8029062:	4770      	bx	lr

08029064 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8029064:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8029068:	4770      	bx	lr

0802906a <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 802906a:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802906e:	4770      	bx	lr

08029070 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8029070:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8029074:	4770      	bx	lr

08029076 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8029076:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 802907a:	4770      	bx	lr

0802907c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 802907c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8029080:	4770      	bx	lr

08029082 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8029082:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8029086:	4770      	bx	lr

08029088 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8029088:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 802908c:	4770      	bx	lr

0802908e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802908e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8029092:	4770      	bx	lr

08029094 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8029094:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8029098:	4770      	bx	lr

0802909a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 802909a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802909e:	4770      	bx	lr

080290a0 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80290a0:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80290a4:	4770      	bx	lr

080290a6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80290a6:	b510      	push	{r4, lr}
 80290a8:	ed2d 8b04 	vpush	{d8-d9}
 80290ac:	6803      	ldr	r3, [r0, #0]
 80290ae:	4604      	mov	r4, r0
 80290b0:	699b      	ldr	r3, [r3, #24]
 80290b2:	eeb0 8a40 	vmov.f32	s16, s0
 80290b6:	eef0 8a60 	vmov.f32	s17, s1
 80290ba:	eeb0 9a41 	vmov.f32	s18, s2
 80290be:	4798      	blx	r3
 80290c0:	6823      	ldr	r3, [r4, #0]
 80290c2:	4620      	mov	r0, r4
 80290c4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80290c6:	eeb0 1a49 	vmov.f32	s2, s18
 80290ca:	eef0 0a68 	vmov.f32	s1, s17
 80290ce:	eeb0 0a48 	vmov.f32	s0, s16
 80290d2:	4798      	blx	r3
 80290d4:	ecbd 8b04 	vpop	{d8-d9}
 80290d8:	6823      	ldr	r3, [r4, #0]
 80290da:	4620      	mov	r0, r4
 80290dc:	699b      	ldr	r3, [r3, #24]
 80290de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80290e2:	4718      	bx	r3

080290e4 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80290e4:	b510      	push	{r4, lr}
 80290e6:	ed2d 8b02 	vpush	{d8}
 80290ea:	6803      	ldr	r3, [r0, #0]
 80290ec:	4604      	mov	r4, r0
 80290ee:	699b      	ldr	r3, [r3, #24]
 80290f0:	eeb0 8a40 	vmov.f32	s16, s0
 80290f4:	4798      	blx	r3
 80290f6:	6823      	ldr	r3, [r4, #0]
 80290f8:	4620      	mov	r0, r4
 80290fa:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80290fe:	eeb0 0a48 	vmov.f32	s0, s16
 8029102:	4798      	blx	r3
 8029104:	ecbd 8b02 	vpop	{d8}
 8029108:	6823      	ldr	r3, [r4, #0]
 802910a:	4620      	mov	r0, r4
 802910c:	699b      	ldr	r3, [r3, #24]
 802910e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029112:	4718      	bx	r3

08029114 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8029114:	2200      	movs	r2, #0
 8029116:	8002      	strh	r2, [r0, #0]
 8029118:	8042      	strh	r2, [r0, #2]
 802911a:	8082      	strh	r2, [r0, #4]
 802911c:	80c2      	strh	r2, [r0, #6]
 802911e:	4770      	bx	lr

08029120 <_ZN8touchgfx13TextureMapperD1Ev>:
 8029120:	4770      	bx	lr

08029122 <_ZN8touchgfx13TextureMapperD0Ev>:
 8029122:	b510      	push	{r4, lr}
 8029124:	2190      	movs	r1, #144	; 0x90
 8029126:	4604      	mov	r4, r0
 8029128:	f001 ff3f 	bl	802afaa <_ZdlPvj>
 802912c:	4620      	mov	r0, r4
 802912e:	bd10      	pop	{r4, pc}

08029130 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8029130:	b538      	push	{r3, r4, r5, lr}
 8029132:	2500      	movs	r5, #0
 8029134:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8029138:	2301      	movs	r3, #1
 802913a:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802913e:	4b1f      	ldr	r3, [pc, #124]	; (80291bc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8029140:	8085      	strh	r5, [r0, #4]
 8029142:	80c5      	strh	r5, [r0, #6]
 8029144:	8105      	strh	r5, [r0, #8]
 8029146:	8145      	strh	r5, [r0, #10]
 8029148:	8185      	strh	r5, [r0, #12]
 802914a:	81c5      	strh	r5, [r0, #14]
 802914c:	8205      	strh	r5, [r0, #16]
 802914e:	8245      	strh	r5, [r0, #18]
 8029150:	61c5      	str	r5, [r0, #28]
 8029152:	8405      	strh	r5, [r0, #32]
 8029154:	8445      	strh	r5, [r0, #34]	; 0x22
 8029156:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 802915a:	6003      	str	r3, [r0, #0]
 802915c:	880b      	ldrh	r3, [r1, #0]
 802915e:	84c3      	strh	r3, [r0, #38]	; 0x26
 8029160:	23ff      	movs	r3, #255	; 0xff
 8029162:	4604      	mov	r4, r0
 8029164:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8029168:	f7eb f96b 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802916c:	4b14      	ldr	r3, [pc, #80]	; (80291c0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802916e:	6023      	str	r3, [r4, #0]
 8029170:	2300      	movs	r3, #0
 8029172:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8029176:	4913      	ldr	r1, [pc, #76]	; (80291c4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8029178:	62e3      	str	r3, [r4, #44]	; 0x2c
 802917a:	6323      	str	r3, [r4, #48]	; 0x30
 802917c:	6363      	str	r3, [r4, #52]	; 0x34
 802917e:	63a3      	str	r3, [r4, #56]	; 0x38
 8029180:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029182:	6463      	str	r3, [r4, #68]	; 0x44
 8029184:	64a3      	str	r3, [r4, #72]	; 0x48
 8029186:	6523      	str	r3, [r4, #80]	; 0x50
 8029188:	6563      	str	r3, [r4, #84]	; 0x54
 802918a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802918c:	6623      	str	r3, [r4, #96]	; 0x60
 802918e:	66a3      	str	r3, [r4, #104]	; 0x68
 8029190:	66e3      	str	r3, [r4, #108]	; 0x6c
 8029192:	6763      	str	r3, [r4, #116]	; 0x74
 8029194:	67a3      	str	r3, [r4, #120]	; 0x78
 8029196:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802919a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802919e:	230c      	movs	r3, #12
 80291a0:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80291a4:	6422      	str	r2, [r4, #64]	; 0x40
 80291a6:	64e1      	str	r1, [r4, #76]	; 0x4c
 80291a8:	65a1      	str	r1, [r4, #88]	; 0x58
 80291aa:	6662      	str	r2, [r4, #100]	; 0x64
 80291ac:	6722      	str	r2, [r4, #112]	; 0x70
 80291ae:	67e2      	str	r2, [r4, #124]	; 0x7c
 80291b0:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80291b4:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80291b8:	4620      	mov	r0, r4
 80291ba:	bd38      	pop	{r3, r4, r5, pc}
 80291bc:	0802ff00 	.word	0x0802ff00
 80291c0:	080304e4 	.word	0x080304e4
 80291c4:	447a0000 	.word	0x447a0000

080291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80291c8:	b570      	push	{r4, r5, r6, lr}
 80291ca:	ed2d 8b04 	vpush	{d8-d9}
 80291ce:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80291d2:	add0      	add	r5, sp, #832	; 0x340
 80291d4:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80291d6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80291da:	4604      	mov	r4, r0
 80291dc:	4628      	mov	r0, r5
 80291de:	f7f1 fa7f 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80291e2:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80291e4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80291e8:	4606      	mov	r6, r0
 80291ea:	4628      	mov	r0, r5
 80291ec:	f7f1 faac 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80291f0:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80291f4:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80291f8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80291fa:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80291fe:	9312      	str	r3, [sp, #72]	; 0x48
 8029200:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029204:	1c72      	adds	r2, r6, #1
 8029206:	3001      	adds	r0, #1
 8029208:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802920c:	ee07 2a90 	vmov	s15, r2
 8029210:	ee06 0a90 	vmov	s13, r0
 8029214:	ee36 6a47 	vsub.f32	s12, s12, s14
 8029218:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802921c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8029220:	ee77 7a86 	vadd.f32	s15, s15, s12
 8029224:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8029228:	9316      	str	r3, [sp, #88]	; 0x58
 802922a:	931a      	str	r3, [sp, #104]	; 0x68
 802922c:	931e      	str	r3, [sp, #120]	; 0x78
 802922e:	2300      	movs	r3, #0
 8029230:	9320      	str	r3, [sp, #128]	; 0x80
 8029232:	9321      	str	r3, [sp, #132]	; 0x84
 8029234:	9322      	str	r3, [sp, #136]	; 0x88
 8029236:	9324      	str	r3, [sp, #144]	; 0x90
 8029238:	9325      	str	r3, [sp, #148]	; 0x94
 802923a:	9326      	str	r3, [sp, #152]	; 0x98
 802923c:	9328      	str	r3, [sp, #160]	; 0xa0
 802923e:	9329      	str	r3, [sp, #164]	; 0xa4
 8029240:	932a      	str	r3, [sp, #168]	; 0xa8
 8029242:	932c      	str	r3, [sp, #176]	; 0xb0
 8029244:	932d      	str	r3, [sp, #180]	; 0xb4
 8029246:	932e      	str	r3, [sp, #184]	; 0xb8
 8029248:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802924c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8029250:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029254:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029258:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 802925c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8029260:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8029264:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8029268:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 802926c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8029270:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8029274:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8029278:	a830      	add	r0, sp, #192	; 0xc0
 802927a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802927e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8029282:	f000 fc43 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029286:	eeb1 0a49 	vneg.f32	s0, s18
 802928a:	a830      	add	r0, sp, #192	; 0xc0
 802928c:	f000 fd12 	bl	8029cb4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029290:	eeb1 0a68 	vneg.f32	s0, s17
 8029294:	f000 fd1c 	bl	8029cd0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029298:	eeb1 0a48 	vneg.f32	s0, s16
 802929c:	f000 fd27 	bl	8029cee <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80292a0:	a840      	add	r0, sp, #256	; 0x100
 80292a2:	f000 fc33 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 80292a6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80292aa:	a840      	add	r0, sp, #256	; 0x100
 80292ac:	f000 fc86 	bl	8029bbc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80292b0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80292b4:	f000 fcac 	bl	8029c10 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80292b8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80292bc:	f000 fcd1 	bl	8029c62 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80292c0:	a850      	add	r0, sp, #320	; 0x140
 80292c2:	f000 fc23 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 80292c6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80292ca:	a850      	add	r0, sp, #320	; 0x140
 80292cc:	f000 fd1e 	bl	8029d0c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80292d0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80292d4:	f000 fd26 	bl	8029d24 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80292d8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80292dc:	f000 fd2f 	bl	8029d3e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80292e0:	a860      	add	r0, sp, #384	; 0x180
 80292e2:	f000 fc13 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 80292e6:	eeb0 0a49 	vmov.f32	s0, s18
 80292ea:	a860      	add	r0, sp, #384	; 0x180
 80292ec:	f000 fce2 	bl	8029cb4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80292f0:	eeb0 0a68 	vmov.f32	s0, s17
 80292f4:	f000 fcec 	bl	8029cd0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80292f8:	eeb0 0a48 	vmov.f32	s0, s16
 80292fc:	f000 fcf7 	bl	8029cee <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029300:	aa50      	add	r2, sp, #320	; 0x140
 8029302:	a960      	add	r1, sp, #384	; 0x180
 8029304:	a8b0      	add	r0, sp, #704	; 0x2c0
 8029306:	f000 fc1b 	bl	8029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802930a:	4628      	mov	r0, r5
 802930c:	aa40      	add	r2, sp, #256	; 0x100
 802930e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029310:	f000 fc16 	bl	8029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029314:	4629      	mov	r1, r5
 8029316:	aa30      	add	r2, sp, #192	; 0xc0
 8029318:	a870      	add	r0, sp, #448	; 0x1c0
 802931a:	f000 fc11 	bl	8029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802931e:	a880      	add	r0, sp, #512	; 0x200
 8029320:	f000 fbf4 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029324:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8029328:	a880      	add	r0, sp, #512	; 0x200
 802932a:	eeb1 0a40 	vneg.f32	s0, s0
 802932e:	f000 fcc1 	bl	8029cb4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029332:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8029336:	a880      	add	r0, sp, #512	; 0x200
 8029338:	eeb1 0a40 	vneg.f32	s0, s0
 802933c:	f000 fcc8 	bl	8029cd0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029340:	a890      	add	r0, sp, #576	; 0x240
 8029342:	f000 fbe3 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029346:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 802934a:	a890      	add	r0, sp, #576	; 0x240
 802934c:	f000 fc26 	bl	8029b9c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8029350:	a8a0      	add	r0, sp, #640	; 0x280
 8029352:	f000 fbdb 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029356:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 802935a:	a8a0      	add	r0, sp, #640	; 0x280
 802935c:	f000 fcaa 	bl	8029cb4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029360:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8029364:	f000 fcb4 	bl	8029cd0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029368:	aa90      	add	r2, sp, #576	; 0x240
 802936a:	a9a0      	add	r1, sp, #640	; 0x280
 802936c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802936e:	f000 fbe7 	bl	8029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029372:	4628      	mov	r0, r5
 8029374:	aa80      	add	r2, sp, #512	; 0x200
 8029376:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029378:	f000 fbe2 	bl	8029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802937c:	4629      	mov	r1, r5
 802937e:	aa70      	add	r2, sp, #448	; 0x1c0
 8029380:	4668      	mov	r0, sp
 8029382:	466d      	mov	r5, sp
 8029384:	f000 fbdc 	bl	8029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029388:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802938a:	ae70      	add	r6, sp, #448	; 0x1c0
 802938c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802938e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029390:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029392:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029394:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029396:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802939a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802939e:	2500      	movs	r5, #0
 80293a0:	0129      	lsls	r1, r5, #4
 80293a2:	ab20      	add	r3, sp, #128	; 0x80
 80293a4:	185e      	adds	r6, r3, r1
 80293a6:	ab10      	add	r3, sp, #64	; 0x40
 80293a8:	4419      	add	r1, r3
 80293aa:	a870      	add	r0, sp, #448	; 0x1c0
 80293ac:	f000 fb7e 	bl	8029aac <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80293b0:	3501      	adds	r5, #1
 80293b2:	2d04      	cmp	r5, #4
 80293b4:	ed86 0a00 	vstr	s0, [r6]
 80293b8:	edc6 0a01 	vstr	s1, [r6, #4]
 80293bc:	ed86 1a02 	vstr	s2, [r6, #8]
 80293c0:	edc6 1a03 	vstr	s3, [r6, #12]
 80293c4:	d1ec      	bne.n	80293a0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80293c6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80293ca:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80293ce:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80293d2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80293d6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80293da:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80293de:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80293e2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80293e6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80293ea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80293ee:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80293f2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80293f6:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80293fa:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80293fe:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8029402:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029406:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802940a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802940e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029412:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029416:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802941a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802941e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8029422:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029426:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 802942a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802942e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8029432:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8029436:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802943a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802943e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8029442:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8029446:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 802944a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802944e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8029452:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029456:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 802945a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802945e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029462:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8029466:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 802946a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802946e:	ecbd 8b04 	vpop	{d8-d9}
 8029472:	bd70      	pop	{r4, r5, r6, pc}

08029474 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8029474:	b510      	push	{r4, lr}
 8029476:	4604      	mov	r4, r0
 8029478:	f7ea ffe3 	bl	8014442 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 802947c:	4620      	mov	r0, r4
 802947e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029482:	f7ff bea1 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029486 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8029486:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802948a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802948e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8029492:	f7ff be99 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029496 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8029496:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802949a:	f7ff be95 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802949e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802949e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80294a2:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80294a6:	f7ff be8f 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080294aa <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80294aa:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80294ae:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80294b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294b6:	bfd8      	it	le
 80294b8:	eeb0 0a67 	vmovle.f32	s0, s15
 80294bc:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80294c0:	f7ff be82 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080294c4 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80294c4:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80294c8:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80294cc:	f7ff be7c 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080294d0 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80294d0:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80294d4:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80294d8:	f7ff be76 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080294dc <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80294dc:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80294e0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80294e4:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80294e8:	f7ff be6e 	b.w	80291c8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080294ec <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80294ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80294f0:	ed2d 8b04 	vpush	{d8-d9}
 80294f4:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80294f8:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80294fc:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8029500:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8029504:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029508:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802950c:	bf54      	ite	pl
 802950e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029512:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029516:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802951a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802951e:	bfd8      	it	le
 8029520:	eeb0 0a49 	vmovle.f32	s0, s18
 8029524:	eef4 8ac0 	vcmpe.f32	s17, s0
 8029528:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802952c:	bfd8      	it	le
 802952e:	eeb0 0a68 	vmovle.f32	s0, s17
 8029532:	460c      	mov	r4, r1
 8029534:	4607      	mov	r7, r0
 8029536:	f001 fe4f 	bl	802b1d8 <floorf>
 802953a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802953e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029542:	bf58      	it	pl
 8029544:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8029548:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802954c:	bf56      	itet	pl
 802954e:	ee10 3a10 	vmovpl	r3, s0
 8029552:	2600      	movmi	r6, #0
 8029554:	b21e      	sxthpl	r6, r3
 8029556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802955a:	bfd8      	it	le
 802955c:	eeb0 8a69 	vmovle.f32	s16, s19
 8029560:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8029564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029568:	bf58      	it	pl
 802956a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802956e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8029572:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029576:	bf54      	ite	pl
 8029578:	eeb0 0a68 	vmovpl.f32	s0, s17
 802957c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029580:	f001 fde8 	bl	802b154 <ceilf>
 8029584:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8029588:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802958c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8029590:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8029594:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8029598:	ee07 8a90 	vmov	s15, r8
 802959c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80295a0:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80295a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295a8:	bfd8      	it	le
 80295aa:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80295ae:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80295b2:	bfdc      	itt	le
 80295b4:	ee10 3a10 	vmovle	r3, s0
 80295b8:	fa0f f883 	sxthle.w	r8, r3
 80295bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295c0:	bf54      	ite	pl
 80295c2:	eeb0 0a69 	vmovpl.f32	s0, s19
 80295c6:	eeb0 0a48 	vmovmi.f32	s0, s16
 80295ca:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80295ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295d2:	bfd8      	it	le
 80295d4:	eeb0 0a49 	vmovle.f32	s0, s18
 80295d8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80295dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295e0:	bfd8      	it	le
 80295e2:	eeb0 0a68 	vmovle.f32	s0, s17
 80295e6:	f001 fdf7 	bl	802b1d8 <floorf>
 80295ea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80295ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80295f2:	bf58      	it	pl
 80295f4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80295f8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80295fc:	bf56      	itet	pl
 80295fe:	ee10 3a10 	vmovpl	r3, s0
 8029602:	2500      	movmi	r5, #0
 8029604:	b21d      	sxthpl	r5, r3
 8029606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802960a:	bfd8      	it	le
 802960c:	eeb0 8a69 	vmovle.f32	s16, s19
 8029610:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8029614:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029618:	bf58      	it	pl
 802961a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802961e:	eef4 8ac8 	vcmpe.f32	s17, s16
 8029622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029626:	bf54      	ite	pl
 8029628:	eeb0 0a68 	vmovpl.f32	s0, s17
 802962c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029630:	f001 fd90 	bl	802b154 <ceilf>
 8029634:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8029638:	803e      	strh	r6, [r7, #0]
 802963a:	ee07 3a90 	vmov	s15, r3
 802963e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029642:	807d      	strh	r5, [r7, #2]
 8029644:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802964c:	bfd8      	it	le
 802964e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8029652:	eba8 0606 	sub.w	r6, r8, r6
 8029656:	bfdc      	itt	le
 8029658:	ee10 3a10 	vmovle	r3, s0
 802965c:	b21b      	sxthle	r3, r3
 802965e:	1b5d      	subs	r5, r3, r5
 8029660:	80be      	strh	r6, [r7, #4]
 8029662:	80fd      	strh	r5, [r7, #6]
 8029664:	ecbd 8b04 	vpop	{d8-d9}
 8029668:	4638      	mov	r0, r7
 802966a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802966e <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802966e:	b513      	push	{r0, r1, r4, lr}
 8029670:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8029674:	4604      	mov	r4, r0
 8029676:	b143      	cbz	r3, 802968a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8029678:	4601      	mov	r1, r0
 802967a:	4668      	mov	r0, sp
 802967c:	f7ff ff36 	bl	80294ec <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8029680:	6823      	ldr	r3, [r4, #0]
 8029682:	4669      	mov	r1, sp
 8029684:	691b      	ldr	r3, [r3, #16]
 8029686:	4620      	mov	r0, r4
 8029688:	4798      	blx	r3
 802968a:	b002      	add	sp, #8
 802968c:	bd10      	pop	{r4, pc}

0802968e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802968e:	4603      	mov	r3, r0
 8029690:	3026      	adds	r0, #38	; 0x26
 8029692:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8029696:	b90b      	cbnz	r3, 802969c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8029698:	f7ee bdfa 	b.w	8018290 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802969c:	f7ee be08 	b.w	80182b0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080296a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80296a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296a4:	ed2d 8b04 	vpush	{d8-d9}
 80296a8:	4604      	mov	r4, r0
 80296aa:	469b      	mov	fp, r3
 80296ac:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80296b0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80296b4:	f9b1 6000 	ldrsh.w	r6, [r1]
 80296b8:	8888      	ldrh	r0, [r1, #4]
 80296ba:	b0b3      	sub	sp, #204	; 0xcc
 80296bc:	4430      	add	r0, r6
 80296be:	b280      	uxth	r0, r0
 80296c0:	9206      	str	r2, [sp, #24]
 80296c2:	fa0f fe80 	sxth.w	lr, r0
 80296c6:	2200      	movs	r2, #0
 80296c8:	4596      	cmp	lr, r2
 80296ca:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80296ce:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80296d2:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80296d6:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80296d8:	9211      	str	r2, [sp, #68]	; 0x44
 80296da:	f340 8129 	ble.w	8029930 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80296de:	45b4      	cmp	ip, r6
 80296e0:	f340 8126 	ble.w	8029930 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80296e4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80296e8:	88ca      	ldrh	r2, [r1, #6]
 80296ea:	442a      	add	r2, r5
 80296ec:	b292      	uxth	r2, r2
 80296ee:	b211      	sxth	r1, r2
 80296f0:	2900      	cmp	r1, #0
 80296f2:	f340 811d 	ble.w	8029930 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80296f6:	42ab      	cmp	r3, r5
 80296f8:	f340 811a 	ble.w	8029930 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80296fc:	45f4      	cmp	ip, lr
 80296fe:	bfb8      	it	lt
 8029700:	fa1f f08c 	uxthlt.w	r0, ip
 8029704:	428b      	cmp	r3, r1
 8029706:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802970a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802970e:	bfb8      	it	lt
 8029710:	b29a      	uxthlt	r2, r3
 8029712:	1b80      	subs	r0, r0, r6
 8029714:	1b52      	subs	r2, r2, r5
 8029716:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802971a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802971e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8029722:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8029726:	ab11      	add	r3, sp, #68	; 0x44
 8029728:	e893 0003 	ldmia.w	r3, {r0, r1}
 802972c:	6822      	ldr	r2, [r4, #0]
 802972e:	9307      	str	r3, [sp, #28]
 8029730:	ad13      	add	r5, sp, #76	; 0x4c
 8029732:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8029734:	e885 0003 	stmia.w	r5, {r0, r1}
 8029738:	4629      	mov	r1, r5
 802973a:	4620      	mov	r0, r4
 802973c:	4790      	blx	r2
 802973e:	4621      	mov	r1, r4
 8029740:	a815      	add	r0, sp, #84	; 0x54
 8029742:	f7ee fd01 	bl	8018148 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8029746:	a815      	add	r0, sp, #84	; 0x54
 8029748:	f7ed f9c6 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802974c:	9b07      	ldr	r3, [sp, #28]
 802974e:	1d26      	adds	r6, r4, #4
 8029750:	4618      	mov	r0, r3
 8029752:	4631      	mov	r1, r6
 8029754:	f7ed fa04 	bl	8016b60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8029758:	4628      	mov	r0, r5
 802975a:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802975e:	f7ed f9bb 	bl	8016ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8029762:	4628      	mov	r0, r5
 8029764:	f7f1 f8a8 	bl	801a8b8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8029768:	9007      	str	r0, [sp, #28]
 802976a:	2800      	cmp	r0, #0
 802976c:	f000 80db 	beq.w	8029926 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8029770:	f8db 2000 	ldr.w	r2, [fp]
 8029774:	9209      	str	r2, [sp, #36]	; 0x24
 8029776:	f8db 2004 	ldr.w	r2, [fp, #4]
 802977a:	920a      	str	r2, [sp, #40]	; 0x28
 802977c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8029780:	920b      	str	r2, [sp, #44]	; 0x2c
 8029782:	f8db 200c 	ldr.w	r2, [fp, #12]
 8029786:	920c      	str	r2, [sp, #48]	; 0x30
 8029788:	f8da 2000 	ldr.w	r2, [sl]
 802978c:	920d      	str	r2, [sp, #52]	; 0x34
 802978e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8029792:	920e      	str	r2, [sp, #56]	; 0x38
 8029794:	f8da 2008 	ldr.w	r2, [sl, #8]
 8029798:	920f      	str	r2, [sp, #60]	; 0x3c
 802979a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802979e:	9210      	str	r2, [sp, #64]	; 0x40
 80297a0:	a90d      	add	r1, sp, #52	; 0x34
 80297a2:	4632      	mov	r2, r6
 80297a4:	a809      	add	r0, sp, #36	; 0x24
 80297a6:	f7ed f9bf 	bl	8016b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80297aa:	4632      	mov	r2, r6
 80297ac:	a90e      	add	r1, sp, #56	; 0x38
 80297ae:	a80a      	add	r0, sp, #40	; 0x28
 80297b0:	f7ed f9ba 	bl	8016b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80297b4:	4632      	mov	r2, r6
 80297b6:	a90f      	add	r1, sp, #60	; 0x3c
 80297b8:	a80b      	add	r0, sp, #44	; 0x2c
 80297ba:	f7ed f9b5 	bl	8016b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80297be:	4632      	mov	r2, r6
 80297c0:	a910      	add	r1, sp, #64	; 0x40
 80297c2:	a80c      	add	r0, sp, #48	; 0x30
 80297c4:	f7ed f9b0 	bl	8016b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80297c8:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80297cc:	edd7 4a00 	vldr	s9, [r7]
 80297d0:	edd7 5a01 	vldr	s11, [r7, #4]
 80297d4:	ed98 4a00 	vldr	s8, [r8]
 80297d8:	ed98 5a01 	vldr	s10, [r8, #4]
 80297dc:	ed99 9a00 	vldr	s18, [r9]
 80297e0:	ed99 8a01 	vldr	s16, [r9, #4]
 80297e4:	edd9 8a02 	vldr	s17, [r9, #8]
 80297e8:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80297ec:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80297f0:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80297f4:	eef0 6a67 	vmov.f32	s13, s15
 80297f8:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80297fc:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8029800:	eeb0 7a67 	vmov.f32	s14, s15
 8029804:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8029808:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802980c:	eeb0 6a67 	vmov.f32	s12, s15
 8029810:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029814:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8029818:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802981c:	ee16 6a10 	vmov	r6, s12
 8029820:	eeb0 6a67 	vmov.f32	s12, s15
 8029824:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029828:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 802982c:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8029830:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8029834:	68ff      	ldr	r7, [r7, #12]
 8029836:	9624      	str	r6, [sp, #144]	; 0x90
 8029838:	ee16 0a10 	vmov	r0, s12
 802983c:	eeb0 6a67 	vmov.f32	s12, s15
 8029840:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029844:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8029848:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 802984c:	ee16 1a10 	vmov	r1, s12
 8029850:	eeb0 6a67 	vmov.f32	s12, s15
 8029854:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029858:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 802985c:	ee16 2a10 	vmov	r2, s12
 8029860:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8029864:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8029868:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 802986c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8029870:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029874:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8029878:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802987c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8029880:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8029884:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8029888:	922d      	str	r2, [sp, #180]	; 0xb4
 802988a:	4a2b      	ldr	r2, [pc, #172]	; (8029938 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802988c:	9b06      	ldr	r3, [sp, #24]
 802988e:	8812      	ldrh	r2, [r2, #0]
 8029890:	9317      	str	r3, [sp, #92]	; 0x5c
 8029892:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8029896:	9b07      	ldr	r3, [sp, #28]
 8029898:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802989c:	4628      	mov	r0, r5
 802989e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80298a2:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80298a6:	9218      	str	r2, [sp, #96]	; 0x60
 80298a8:	9319      	str	r3, [sp, #100]	; 0x64
 80298aa:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 80298ae:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80298b2:	9731      	str	r7, [sp, #196]	; 0xc4
 80298b4:	f7f1 f830 	bl	801a918 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80298b8:	901a      	str	r0, [sp, #104]	; 0x68
 80298ba:	4628      	mov	r0, r5
 80298bc:	f7f0 ff10 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80298c0:	901b      	str	r0, [sp, #108]	; 0x6c
 80298c2:	4628      	mov	r0, r5
 80298c4:	f7f0 ff40 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80298c8:	901c      	str	r0, [sp, #112]	; 0x70
 80298ca:	4628      	mov	r0, r5
 80298cc:	f7f0 ff08 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80298d0:	eeb4 9a48 	vcmp.f32	s18, s16
 80298d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298d8:	901d      	str	r0, [sp, #116]	; 0x74
 80298da:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80298de:	d107      	bne.n	80298f0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80298e0:	eeb4 8a68 	vcmp.f32	s16, s17
 80298e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80298e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80298ec:	bf08      	it	eq
 80298ee:	461e      	moveq	r6, r3
 80298f0:	4b12      	ldr	r3, [pc, #72]	; (802993c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80298f2:	681b      	ldr	r3, [r3, #0]
 80298f4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80298f8:	b10a      	cbz	r2, 80298fe <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80298fa:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80298fc:	b905      	cbnz	r5, 8029900 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80298fe:	689d      	ldr	r5, [r3, #8]
 8029900:	682b      	ldr	r3, [r5, #0]
 8029902:	4620      	mov	r0, r4
 8029904:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029906:	f7ff fec2 	bl	802968e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802990a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802990e:	9604      	str	r6, [sp, #16]
 8029910:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8029914:	ab13      	add	r3, sp, #76	; 0x4c
 8029916:	9301      	str	r3, [sp, #4]
 8029918:	ab15      	add	r3, sp, #84	; 0x54
 802991a:	9300      	str	r3, [sp, #0]
 802991c:	aa1e      	add	r2, sp, #120	; 0x78
 802991e:	ab19      	add	r3, sp, #100	; 0x64
 8029920:	a917      	add	r1, sp, #92	; 0x5c
 8029922:	4628      	mov	r0, r5
 8029924:	47b8      	blx	r7
 8029926:	b033      	add	sp, #204	; 0xcc
 8029928:	ecbd 8b04 	vpop	{d8-d9}
 802992c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029930:	2300      	movs	r3, #0
 8029932:	9312      	str	r3, [sp, #72]	; 0x48
 8029934:	e6f7      	b.n	8029726 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8029936:	bf00      	nop
 8029938:	20013836 	.word	0x20013836
 802993c:	2001383c 	.word	0x2001383c

08029940 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8029940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029944:	ed2d 8b02 	vpush	{d8}
 8029948:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 802994c:	b098      	sub	sp, #96	; 0x60
 802994e:	4604      	mov	r4, r0
 8029950:	4688      	mov	r8, r1
 8029952:	2b00      	cmp	r3, #0
 8029954:	d077      	beq.n	8029a46 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8029956:	f100 0526 	add.w	r5, r0, #38	; 0x26
 802995a:	4628      	mov	r0, r5
 802995c:	f7f0 fec0 	bl	801a6e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029960:	ee07 0a90 	vmov	s15, r0
 8029964:	4628      	mov	r0, r5
 8029966:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 802996a:	f7f0 feed 	bl	801a748 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802996e:	4b4e      	ldr	r3, [pc, #312]	; (8029aa8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8029970:	781b      	ldrb	r3, [r3, #0]
 8029972:	ee07 0a90 	vmov	s15, r0
 8029976:	2b01      	cmp	r3, #1
 8029978:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802997c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8029980:	d066      	beq.n	8029a50 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8029982:	eeb0 6a47 	vmov.f32	s12, s14
 8029986:	ee17 3a10 	vmov	r3, s14
 802998a:	eeb0 4a48 	vmov.f32	s8, s16
 802998e:	eeb0 7a48 	vmov.f32	s14, s16
 8029992:	eef0 4a67 	vmov.f32	s9, s15
 8029996:	eeb0 8a67 	vmov.f32	s16, s15
 802999a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802999e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 80299a2:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 80299a6:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 80299aa:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 80299ae:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 80299b2:	6f25      	ldr	r5, [r4, #112]	; 0x70
 80299b4:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80299b6:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 80299b8:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 80299bc:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 80299c0:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80299c4:	ee73 1a65 	vsub.f32	s3, s6, s11
 80299c8:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80299cc:	ee32 1a45 	vsub.f32	s2, s4, s10
 80299d0:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80299d4:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80299d8:	eee1 6a21 	vfma.f32	s13, s2, s3
 80299dc:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80299e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80299e4:	dd3d      	ble.n	8029a62 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80299e6:	ed8d 5a04 	vstr	s10, [sp, #16]
 80299ea:	ed8d 2a05 	vstr	s4, [sp, #20]
 80299ee:	edcd 2a06 	vstr	s5, [sp, #24]
 80299f2:	f8cd c01c 	str.w	ip, [sp, #28]
 80299f6:	edcd 5a08 	vstr	s11, [sp, #32]
 80299fa:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80299fe:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029a02:	970b      	str	r7, [sp, #44]	; 0x2c
 8029a04:	960c      	str	r6, [sp, #48]	; 0x30
 8029a06:	950d      	str	r5, [sp, #52]	; 0x34
 8029a08:	920e      	str	r2, [sp, #56]	; 0x38
 8029a0a:	900f      	str	r0, [sp, #60]	; 0x3c
 8029a0c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8029a10:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8029a14:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8029a18:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8029a1c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8029a20:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8029a24:	9316      	str	r3, [sp, #88]	; 0x58
 8029a26:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8029a2a:	ab14      	add	r3, sp, #80	; 0x50
 8029a2c:	9303      	str	r3, [sp, #12]
 8029a2e:	ab10      	add	r3, sp, #64	; 0x40
 8029a30:	9302      	str	r3, [sp, #8]
 8029a32:	ab0c      	add	r3, sp, #48	; 0x30
 8029a34:	9301      	str	r3, [sp, #4]
 8029a36:	ab08      	add	r3, sp, #32
 8029a38:	9300      	str	r3, [sp, #0]
 8029a3a:	2200      	movs	r2, #0
 8029a3c:	ab04      	add	r3, sp, #16
 8029a3e:	4641      	mov	r1, r8
 8029a40:	4620      	mov	r0, r4
 8029a42:	f7ff fe2d 	bl	80296a0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8029a46:	b018      	add	sp, #96	; 0x60
 8029a48:	ecbd 8b02 	vpop	{d8}
 8029a4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a50:	eeb0 6a48 	vmov.f32	s12, s16
 8029a54:	eef0 4a47 	vmov.f32	s9, s14
 8029a58:	ee17 3a90 	vmov	r3, s15
 8029a5c:	eeb0 4a67 	vmov.f32	s8, s15
 8029a60:	e79b      	b.n	802999a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8029a62:	ed8d 5a05 	vstr	s10, [sp, #20]
 8029a66:	ed8d 2a04 	vstr	s4, [sp, #16]
 8029a6a:	f8cd c018 	str.w	ip, [sp, #24]
 8029a6e:	edcd 2a07 	vstr	s5, [sp, #28]
 8029a72:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8029a76:	ed8d 3a08 	vstr	s6, [sp, #32]
 8029a7a:	970a      	str	r7, [sp, #40]	; 0x28
 8029a7c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8029a80:	960d      	str	r6, [sp, #52]	; 0x34
 8029a82:	950c      	str	r5, [sp, #48]	; 0x30
 8029a84:	900e      	str	r0, [sp, #56]	; 0x38
 8029a86:	920f      	str	r2, [sp, #60]	; 0x3c
 8029a88:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8029a8c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029a90:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8029a94:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029a98:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8029a9c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029aa0:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029aa4:	9317      	str	r3, [sp, #92]	; 0x5c
 8029aa6:	e7c0      	b.n	8029a2a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029aa8:	20013834 	.word	0x20013834

08029aac <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8029aac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029aae:	b08d      	sub	sp, #52	; 0x34
 8029ab0:	2300      	movs	r3, #0
 8029ab2:	9304      	str	r3, [sp, #16]
 8029ab4:	9305      	str	r3, [sp, #20]
 8029ab6:	9306      	str	r3, [sp, #24]
 8029ab8:	aa04      	add	r2, sp, #16
 8029aba:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8029abe:	9307      	str	r3, [sp, #28]
 8029ac0:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029ac4:	4613      	mov	r3, r2
 8029ac6:	f101 0710 	add.w	r7, r1, #16
 8029aca:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029b08 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8029ace:	460c      	mov	r4, r1
 8029ad0:	4605      	mov	r5, r0
 8029ad2:	ecb4 7a01 	vldmia	r4!, {s14}
 8029ad6:	ecf5 6a01 	vldmia	r5!, {s13}
 8029ada:	42bc      	cmp	r4, r7
 8029adc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029ae0:	d1f7      	bne.n	8029ad2 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029ae2:	3010      	adds	r0, #16
 8029ae4:	42b0      	cmp	r0, r6
 8029ae6:	ece2 7a01 	vstmia	r2!, {s15}
 8029aea:	d1ee      	bne.n	8029aca <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8029aec:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8029aee:	ac0c      	add	r4, sp, #48	; 0x30
 8029af0:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029af4:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029af8:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8029afc:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029b00:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029b04:	b00d      	add	sp, #52	; 0x34
 8029b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029b08:	00000000 	.word	0x00000000

08029b0c <_ZN8touchgfx9Matrix4x4C1Ev>:
 8029b0c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8029b3c <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8029b10:	2300      	movs	r3, #0
 8029b12:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029b16:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8029b1a:	2200      	movs	r2, #0
 8029b1c:	4293      	cmp	r3, r2
 8029b1e:	f102 0201 	add.w	r2, r2, #1
 8029b22:	bf14      	ite	ne
 8029b24:	eef0 6a47 	vmovne.f32	s13, s14
 8029b28:	eef0 6a67 	vmoveq.f32	s13, s15
 8029b2c:	2a04      	cmp	r2, #4
 8029b2e:	ece1 6a01 	vstmia	r1!, {s13}
 8029b32:	d1f3      	bne.n	8029b1c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8029b34:	3301      	adds	r3, #1
 8029b36:	2b04      	cmp	r3, #4
 8029b38:	d1ed      	bne.n	8029b16 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8029b3a:	4770      	bx	lr
 8029b3c:	00000000 	.word	0x00000000

08029b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8029b40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029b44:	460c      	mov	r4, r1
 8029b46:	4605      	mov	r5, r0
 8029b48:	4690      	mov	r8, r2
 8029b4a:	f7ff ffdf 	bl	8029b0c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029b4e:	4628      	mov	r0, r5
 8029b50:	4621      	mov	r1, r4
 8029b52:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8029b56:	2300      	movs	r3, #0
 8029b58:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029b98 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8029b5c:	eb08 0603 	add.w	r6, r8, r3
 8029b60:	460f      	mov	r7, r1
 8029b62:	2400      	movs	r4, #0
 8029b64:	4632      	mov	r2, r6
 8029b66:	ecf7 6a01 	vldmia	r7!, {s13}
 8029b6a:	ed92 7a00 	vldr	s14, [r2]
 8029b6e:	3401      	adds	r4, #1
 8029b70:	2c04      	cmp	r4, #4
 8029b72:	f106 0610 	add.w	r6, r6, #16
 8029b76:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029b7a:	d1f3      	bne.n	8029b64 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8029b7c:	18c2      	adds	r2, r0, r3
 8029b7e:	3304      	adds	r3, #4
 8029b80:	2b10      	cmp	r3, #16
 8029b82:	edc2 7a00 	vstr	s15, [r2]
 8029b86:	d1e7      	bne.n	8029b58 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8029b88:	3110      	adds	r1, #16
 8029b8a:	4561      	cmp	r1, ip
 8029b8c:	f100 0010 	add.w	r0, r0, #16
 8029b90:	d1e1      	bne.n	8029b56 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8029b92:	4628      	mov	r0, r5
 8029b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029b98:	00000000 	.word	0x00000000

08029b9c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8029b9c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029ba0:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029ba4:	f100 0320 	add.w	r3, r0, #32
 8029ba8:	3030      	adds	r0, #48	; 0x30
 8029baa:	ecf3 7a01 	vldmia	r3!, {s15}
 8029bae:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029bb2:	4283      	cmp	r3, r0
 8029bb4:	edc3 7a03 	vstr	s15, [r3, #12]
 8029bb8:	d1f7      	bne.n	8029baa <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8029bba:	4770      	bx	lr

08029bbc <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8029bbc:	b510      	push	{r4, lr}
 8029bbe:	ed2d 8b02 	vpush	{d8}
 8029bc2:	4604      	mov	r4, r0
 8029bc4:	eef0 8a40 	vmov.f32	s17, s0
 8029bc8:	f001 fa7a 	bl	802b0c0 <sinf>
 8029bcc:	eeb0 8a40 	vmov.f32	s16, s0
 8029bd0:	eeb0 0a68 	vmov.f32	s0, s17
 8029bd4:	f001 fa30 	bl	802b038 <cosf>
 8029bd8:	f104 0310 	add.w	r3, r4, #16
 8029bdc:	f104 0220 	add.w	r2, r4, #32
 8029be0:	eeb1 6a48 	vneg.f32	s12, s16
 8029be4:	edd3 7a04 	vldr	s15, [r3, #16]
 8029be8:	edd3 6a00 	vldr	s13, [r3]
 8029bec:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029bf0:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029bf4:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029bf8:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029bfc:	eca3 7a01 	vstmia	r3!, {s14}
 8029c00:	429a      	cmp	r2, r3
 8029c02:	edc3 7a03 	vstr	s15, [r3, #12]
 8029c06:	d1ed      	bne.n	8029be4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029c08:	ecbd 8b02 	vpop	{d8}
 8029c0c:	4620      	mov	r0, r4
 8029c0e:	bd10      	pop	{r4, pc}

08029c10 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8029c10:	b510      	push	{r4, lr}
 8029c12:	ed2d 8b02 	vpush	{d8}
 8029c16:	4604      	mov	r4, r0
 8029c18:	eef0 8a40 	vmov.f32	s17, s0
 8029c1c:	f001 fa50 	bl	802b0c0 <sinf>
 8029c20:	eeb0 8a40 	vmov.f32	s16, s0
 8029c24:	eeb0 0a68 	vmov.f32	s0, s17
 8029c28:	f001 fa06 	bl	802b038 <cosf>
 8029c2c:	4623      	mov	r3, r4
 8029c2e:	f104 0210 	add.w	r2, r4, #16
 8029c32:	eeb1 6a48 	vneg.f32	s12, s16
 8029c36:	edd3 7a08 	vldr	s15, [r3, #32]
 8029c3a:	edd3 6a00 	vldr	s13, [r3]
 8029c3e:	ee27 7a88 	vmul.f32	s14, s15, s16
 8029c42:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029c46:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029c4a:	eee6 7a26 	vfma.f32	s15, s12, s13
 8029c4e:	eca3 7a01 	vstmia	r3!, {s14}
 8029c52:	429a      	cmp	r2, r3
 8029c54:	edc3 7a07 	vstr	s15, [r3, #28]
 8029c58:	d1ed      	bne.n	8029c36 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8029c5a:	ecbd 8b02 	vpop	{d8}
 8029c5e:	4620      	mov	r0, r4
 8029c60:	bd10      	pop	{r4, pc}

08029c62 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8029c62:	b510      	push	{r4, lr}
 8029c64:	ed2d 8b02 	vpush	{d8}
 8029c68:	4604      	mov	r4, r0
 8029c6a:	eef0 8a40 	vmov.f32	s17, s0
 8029c6e:	f001 fa27 	bl	802b0c0 <sinf>
 8029c72:	eeb0 8a40 	vmov.f32	s16, s0
 8029c76:	eeb0 0a68 	vmov.f32	s0, s17
 8029c7a:	f001 f9dd 	bl	802b038 <cosf>
 8029c7e:	4623      	mov	r3, r4
 8029c80:	f104 0210 	add.w	r2, r4, #16
 8029c84:	eeb1 6a48 	vneg.f32	s12, s16
 8029c88:	edd3 7a04 	vldr	s15, [r3, #16]
 8029c8c:	edd3 6a00 	vldr	s13, [r3]
 8029c90:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029c94:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029c98:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029c9c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029ca0:	eca3 7a01 	vstmia	r3!, {s14}
 8029ca4:	429a      	cmp	r2, r3
 8029ca6:	edc3 7a03 	vstr	s15, [r3, #12]
 8029caa:	d1ed      	bne.n	8029c88 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8029cac:	ecbd 8b02 	vpop	{d8}
 8029cb0:	4620      	mov	r0, r4
 8029cb2:	bd10      	pop	{r4, pc}

08029cb4 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029cb4:	4603      	mov	r3, r0
 8029cb6:	f100 0210 	add.w	r2, r0, #16
 8029cba:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8029cbe:	edd3 7a00 	vldr	s15, [r3]
 8029cc2:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029cc6:	ece3 7a01 	vstmia	r3!, {s15}
 8029cca:	4293      	cmp	r3, r2
 8029ccc:	d1f5      	bne.n	8029cba <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8029cce:	4770      	bx	lr

08029cd0 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029cd0:	f100 0310 	add.w	r3, r0, #16
 8029cd4:	f100 0220 	add.w	r2, r0, #32
 8029cd8:	ed93 7a08 	vldr	s14, [r3, #32]
 8029cdc:	edd3 7a00 	vldr	s15, [r3]
 8029ce0:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029ce4:	ece3 7a01 	vstmia	r3!, {s15}
 8029ce8:	4293      	cmp	r3, r2
 8029cea:	d1f5      	bne.n	8029cd8 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8029cec:	4770      	bx	lr

08029cee <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8029cee:	f100 0320 	add.w	r3, r0, #32
 8029cf2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029cf6:	ed93 7a04 	vldr	s14, [r3, #16]
 8029cfa:	edd3 7a00 	vldr	s15, [r3]
 8029cfe:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029d02:	ece3 7a01 	vstmia	r3!, {s15}
 8029d06:	4293      	cmp	r3, r2
 8029d08:	d1f5      	bne.n	8029cf6 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8029d0a:	4770      	bx	lr

08029d0c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8029d0c:	4603      	mov	r3, r0
 8029d0e:	f100 0210 	add.w	r2, r0, #16
 8029d12:	edd3 7a00 	vldr	s15, [r3]
 8029d16:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029d1a:	ece3 7a01 	vstmia	r3!, {s15}
 8029d1e:	4293      	cmp	r3, r2
 8029d20:	d1f7      	bne.n	8029d12 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8029d22:	4770      	bx	lr

08029d24 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8029d24:	f100 0310 	add.w	r3, r0, #16
 8029d28:	f100 0220 	add.w	r2, r0, #32
 8029d2c:	edd3 7a00 	vldr	s15, [r3]
 8029d30:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029d34:	ece3 7a01 	vstmia	r3!, {s15}
 8029d38:	4293      	cmp	r3, r2
 8029d3a:	d1f7      	bne.n	8029d2c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8029d3c:	4770      	bx	lr

08029d3e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8029d3e:	f100 0320 	add.w	r3, r0, #32
 8029d42:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029d46:	edd3 7a00 	vldr	s15, [r3]
 8029d4a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029d4e:	ece3 7a01 	vstmia	r3!, {s15}
 8029d52:	4293      	cmp	r3, r2
 8029d54:	d1f7      	bne.n	8029d46 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8029d56:	4770      	bx	lr

08029d58 <arm_max_f32>:
 8029d58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029d5c:	1e4f      	subs	r7, r1, #1
 8029d5e:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8029d62:	f100 0e04 	add.w	lr, r0, #4
 8029d66:	edd0 7a00 	vldr	s15, [r0]
 8029d6a:	d058      	beq.n	8029e1e <arm_max_f32+0xc6>
 8029d6c:	3014      	adds	r0, #20
 8029d6e:	46c4      	mov	ip, r8
 8029d70:	2604      	movs	r6, #4
 8029d72:	2400      	movs	r4, #0
 8029d74:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029d78:	ed50 6a03 	vldr	s13, [r0, #-12]
 8029d7c:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029d80:	ed50 5a01 	vldr	s11, [r0, #-4]
 8029d84:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029d8c:	bfc8      	it	gt
 8029d8e:	eef0 7a46 	vmovgt.f32	s15, s12
 8029d92:	f1a6 0503 	sub.w	r5, r6, #3
 8029d96:	eef4 7ae6 	vcmpe.f32	s15, s13
 8029d9a:	bfc8      	it	gt
 8029d9c:	462c      	movgt	r4, r5
 8029d9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029da2:	bf48      	it	mi
 8029da4:	eef0 7a66 	vmovmi.f32	s15, s13
 8029da8:	f1a6 0502 	sub.w	r5, r6, #2
 8029dac:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029db0:	bf48      	it	mi
 8029db2:	462c      	movmi	r4, r5
 8029db4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029db8:	bf48      	it	mi
 8029dba:	eef0 7a47 	vmovmi.f32	s15, s14
 8029dbe:	f106 35ff 	add.w	r5, r6, #4294967295
 8029dc2:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029dc6:	bf48      	it	mi
 8029dc8:	462c      	movmi	r4, r5
 8029dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029dce:	bf48      	it	mi
 8029dd0:	4634      	movmi	r4, r6
 8029dd2:	bf48      	it	mi
 8029dd4:	eef0 7a65 	vmovmi.f32	s15, s11
 8029dd8:	f1bc 0c01 	subs.w	ip, ip, #1
 8029ddc:	f106 0604 	add.w	r6, r6, #4
 8029de0:	f100 0010 	add.w	r0, r0, #16
 8029de4:	d1c6      	bne.n	8029d74 <arm_max_f32+0x1c>
 8029de6:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8029dea:	f017 0003 	ands.w	r0, r7, #3
 8029dee:	d018      	beq.n	8029e22 <arm_max_f32+0xca>
 8029df0:	1a08      	subs	r0, r1, r0
 8029df2:	ecbe 7a01 	vldmia	lr!, {s14}
 8029df6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029dfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029dfe:	bfc8      	it	gt
 8029e00:	4604      	movgt	r4, r0
 8029e02:	f100 0001 	add.w	r0, r0, #1
 8029e06:	bfd8      	it	le
 8029e08:	eeb0 7a67 	vmovle.f32	s14, s15
 8029e0c:	4288      	cmp	r0, r1
 8029e0e:	eef0 7a47 	vmov.f32	s15, s14
 8029e12:	d1ee      	bne.n	8029df2 <arm_max_f32+0x9a>
 8029e14:	ed82 7a00 	vstr	s14, [r2]
 8029e18:	601c      	str	r4, [r3, #0]
 8029e1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029e1e:	4644      	mov	r4, r8
 8029e20:	e7e3      	b.n	8029dea <arm_max_f32+0x92>
 8029e22:	eeb0 7a67 	vmov.f32	s14, s15
 8029e26:	e7f5      	b.n	8029e14 <arm_max_f32+0xbc>

08029e28 <arm_rfft_fast_init_f32>:
 8029e28:	084b      	lsrs	r3, r1, #1
 8029e2a:	2b80      	cmp	r3, #128	; 0x80
 8029e2c:	b410      	push	{r4}
 8029e2e:	8201      	strh	r1, [r0, #16]
 8029e30:	8003      	strh	r3, [r0, #0]
 8029e32:	d047      	beq.n	8029ec4 <arm_rfft_fast_init_f32+0x9c>
 8029e34:	d917      	bls.n	8029e66 <arm_rfft_fast_init_f32+0x3e>
 8029e36:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029e3a:	d03d      	beq.n	8029eb8 <arm_rfft_fast_init_f32+0x90>
 8029e3c:	d929      	bls.n	8029e92 <arm_rfft_fast_init_f32+0x6a>
 8029e3e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8029e42:	d020      	beq.n	8029e86 <arm_rfft_fast_init_f32+0x5e>
 8029e44:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8029e48:	d113      	bne.n	8029e72 <arm_rfft_fast_init_f32+0x4a>
 8029e4a:	4921      	ldr	r1, [pc, #132]	; (8029ed0 <arm_rfft_fast_init_f32+0xa8>)
 8029e4c:	4a21      	ldr	r2, [pc, #132]	; (8029ed4 <arm_rfft_fast_init_f32+0xac>)
 8029e4e:	4b22      	ldr	r3, [pc, #136]	; (8029ed8 <arm_rfft_fast_init_f32+0xb0>)
 8029e50:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8029e54:	8184      	strh	r4, [r0, #12]
 8029e56:	6081      	str	r1, [r0, #8]
 8029e58:	6042      	str	r2, [r0, #4]
 8029e5a:	6143      	str	r3, [r0, #20]
 8029e5c:	2000      	movs	r0, #0
 8029e5e:	b240      	sxtb	r0, r0
 8029e60:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029e64:	4770      	bx	lr
 8029e66:	2b20      	cmp	r3, #32
 8029e68:	d01c      	beq.n	8029ea4 <arm_rfft_fast_init_f32+0x7c>
 8029e6a:	2b40      	cmp	r3, #64	; 0x40
 8029e6c:	d006      	beq.n	8029e7c <arm_rfft_fast_init_f32+0x54>
 8029e6e:	2b10      	cmp	r3, #16
 8029e70:	d01d      	beq.n	8029eae <arm_rfft_fast_init_f32+0x86>
 8029e72:	20ff      	movs	r0, #255	; 0xff
 8029e74:	b240      	sxtb	r0, r0
 8029e76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029e7a:	4770      	bx	lr
 8029e7c:	2438      	movs	r4, #56	; 0x38
 8029e7e:	4917      	ldr	r1, [pc, #92]	; (8029edc <arm_rfft_fast_init_f32+0xb4>)
 8029e80:	4a17      	ldr	r2, [pc, #92]	; (8029ee0 <arm_rfft_fast_init_f32+0xb8>)
 8029e82:	4b18      	ldr	r3, [pc, #96]	; (8029ee4 <arm_rfft_fast_init_f32+0xbc>)
 8029e84:	e7e6      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029e86:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8029e8a:	4917      	ldr	r1, [pc, #92]	; (8029ee8 <arm_rfft_fast_init_f32+0xc0>)
 8029e8c:	4a17      	ldr	r2, [pc, #92]	; (8029eec <arm_rfft_fast_init_f32+0xc4>)
 8029e8e:	4b18      	ldr	r3, [pc, #96]	; (8029ef0 <arm_rfft_fast_init_f32+0xc8>)
 8029e90:	e7e0      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029e92:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029e96:	d1ec      	bne.n	8029e72 <arm_rfft_fast_init_f32+0x4a>
 8029e98:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8029e9c:	4915      	ldr	r1, [pc, #84]	; (8029ef4 <arm_rfft_fast_init_f32+0xcc>)
 8029e9e:	4a16      	ldr	r2, [pc, #88]	; (8029ef8 <arm_rfft_fast_init_f32+0xd0>)
 8029ea0:	4b16      	ldr	r3, [pc, #88]	; (8029efc <arm_rfft_fast_init_f32+0xd4>)
 8029ea2:	e7d7      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029ea4:	2430      	movs	r4, #48	; 0x30
 8029ea6:	4916      	ldr	r1, [pc, #88]	; (8029f00 <arm_rfft_fast_init_f32+0xd8>)
 8029ea8:	4a16      	ldr	r2, [pc, #88]	; (8029f04 <arm_rfft_fast_init_f32+0xdc>)
 8029eaa:	4b17      	ldr	r3, [pc, #92]	; (8029f08 <arm_rfft_fast_init_f32+0xe0>)
 8029eac:	e7d2      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029eae:	2414      	movs	r4, #20
 8029eb0:	4916      	ldr	r1, [pc, #88]	; (8029f0c <arm_rfft_fast_init_f32+0xe4>)
 8029eb2:	4a17      	ldr	r2, [pc, #92]	; (8029f10 <arm_rfft_fast_init_f32+0xe8>)
 8029eb4:	4b17      	ldr	r3, [pc, #92]	; (8029f14 <arm_rfft_fast_init_f32+0xec>)
 8029eb6:	e7cd      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029eb8:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8029ebc:	4916      	ldr	r1, [pc, #88]	; (8029f18 <arm_rfft_fast_init_f32+0xf0>)
 8029ebe:	4a17      	ldr	r2, [pc, #92]	; (8029f1c <arm_rfft_fast_init_f32+0xf4>)
 8029ec0:	4b17      	ldr	r3, [pc, #92]	; (8029f20 <arm_rfft_fast_init_f32+0xf8>)
 8029ec2:	e7c7      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029ec4:	24d0      	movs	r4, #208	; 0xd0
 8029ec6:	4917      	ldr	r1, [pc, #92]	; (8029f24 <arm_rfft_fast_init_f32+0xfc>)
 8029ec8:	4a17      	ldr	r2, [pc, #92]	; (8029f28 <arm_rfft_fast_init_f32+0x100>)
 8029eca:	4b18      	ldr	r3, [pc, #96]	; (8029f2c <arm_rfft_fast_init_f32+0x104>)
 8029ecc:	e7c2      	b.n	8029e54 <arm_rfft_fast_init_f32+0x2c>
 8029ece:	bf00      	nop
 8029ed0:	0803f3f8 	.word	0x0803f3f8
 8029ed4:	080305f0 	.word	0x080305f0
 8029ed8:	08036760 	.word	0x08036760
 8029edc:	080346f0 	.word	0x080346f0
 8029ee0:	080411b8 	.word	0x080411b8
 8029ee4:	080436a8 	.word	0x080436a8
 8029ee8:	0803d0e0 	.word	0x0803d0e0
 8029eec:	0803afe0 	.word	0x0803afe0
 8029ef0:	08034760 	.word	0x08034760
 8029ef4:	08043338 	.word	0x08043338
 8029ef8:	0803a760 	.word	0x0803a760
 8029efc:	080413b8 	.word	0x080413b8
 8029f00:	0803df98 	.word	0x0803df98
 8029f04:	0803cfe0 	.word	0x0803cfe0
 8029f08:	080345f0 	.word	0x080345f0
 8029f0c:	0803def0 	.word	0x0803def0
 8029f10:	0803af60 	.word	0x0803af60
 8029f14:	0803df18 	.word	0x0803df18
 8029f18:	08041bb8 	.word	0x08041bb8
 8029f1c:	0803e3f8 	.word	0x0803e3f8
 8029f20:	08041f38 	.word	0x08041f38
 8029f24:	080438a8 	.word	0x080438a8
 8029f28:	0803dff8 	.word	0x0803dff8
 8029f2c:	08042f38 	.word	0x08042f38

08029f30 <arm_rfft_fast_f32>:
 8029f30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029f34:	8a06      	ldrh	r6, [r0, #16]
 8029f36:	0876      	lsrs	r6, r6, #1
 8029f38:	4607      	mov	r7, r0
 8029f3a:	4615      	mov	r5, r2
 8029f3c:	8006      	strh	r6, [r0, #0]
 8029f3e:	460c      	mov	r4, r1
 8029f40:	2b00      	cmp	r3, #0
 8029f42:	d15c      	bne.n	8029ffe <arm_rfft_fast_f32+0xce>
 8029f44:	461a      	mov	r2, r3
 8029f46:	2301      	movs	r3, #1
 8029f48:	f000 fbe6 	bl	802a718 <arm_cfft_f32>
 8029f4c:	edd4 7a00 	vldr	s15, [r4]
 8029f50:	ed94 7a01 	vldr	s14, [r4, #4]
 8029f54:	883e      	ldrh	r6, [r7, #0]
 8029f56:	6978      	ldr	r0, [r7, #20]
 8029f58:	ee37 7a07 	vadd.f32	s14, s14, s14
 8029f5c:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029f60:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029f64:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029f68:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029f6c:	3e01      	subs	r6, #1
 8029f6e:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029f72:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029f76:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8029f7a:	ed85 7a00 	vstr	s14, [r5]
 8029f7e:	edc5 7a01 	vstr	s15, [r5, #4]
 8029f82:	3010      	adds	r0, #16
 8029f84:	f105 0210 	add.w	r2, r5, #16
 8029f88:	3b08      	subs	r3, #8
 8029f8a:	f104 0110 	add.w	r1, r4, #16
 8029f8e:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029f92:	ed93 5a02 	vldr	s10, [r3, #8]
 8029f96:	ed11 7a01 	vldr	s14, [r1, #-4]
 8029f9a:	ed10 6a02 	vldr	s12, [r0, #-8]
 8029f9e:	edd3 5a03 	vldr	s11, [r3, #12]
 8029fa2:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029fa6:	ee75 7a64 	vsub.f32	s15, s10, s9
 8029faa:	ee35 4a87 	vadd.f32	s8, s11, s14
 8029fae:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029fb2:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029fb6:	ee66 4a27 	vmul.f32	s9, s12, s15
 8029fba:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029fbe:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029fc2:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029fc6:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029fca:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029fce:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029fd2:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029fd6:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029fda:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029fde:	3e01      	subs	r6, #1
 8029fe0:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029fe4:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029fe8:	f1a3 0308 	sub.w	r3, r3, #8
 8029fec:	f101 0108 	add.w	r1, r1, #8
 8029ff0:	f100 0008 	add.w	r0, r0, #8
 8029ff4:	f102 0208 	add.w	r2, r2, #8
 8029ff8:	d1c9      	bne.n	8029f8e <arm_rfft_fast_f32+0x5e>
 8029ffa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029ffe:	edd1 7a00 	vldr	s15, [r1]
 802a002:	edd1 6a01 	vldr	s13, [r1, #4]
 802a006:	6941      	ldr	r1, [r0, #20]
 802a008:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802a00c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a010:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 802a014:	ee27 7a23 	vmul.f32	s14, s14, s7
 802a018:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802a01c:	3e01      	subs	r6, #1
 802a01e:	ed82 7a00 	vstr	s14, [r2]
 802a022:	edc2 7a01 	vstr	s15, [r2, #4]
 802a026:	00f0      	lsls	r0, r6, #3
 802a028:	b3ee      	cbz	r6, 802a0a6 <arm_rfft_fast_f32+0x176>
 802a02a:	3808      	subs	r0, #8
 802a02c:	f101 0e10 	add.w	lr, r1, #16
 802a030:	4420      	add	r0, r4
 802a032:	f104 0110 	add.w	r1, r4, #16
 802a036:	f102 0c10 	add.w	ip, r2, #16
 802a03a:	ed90 7a02 	vldr	s14, [r0, #8]
 802a03e:	ed51 6a02 	vldr	s13, [r1, #-8]
 802a042:	ed1e 6a02 	vldr	s12, [lr, #-8]
 802a046:	ed90 4a03 	vldr	s8, [r0, #12]
 802a04a:	ed11 5a01 	vldr	s10, [r1, #-4]
 802a04e:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802a052:	ee76 7ac7 	vsub.f32	s15, s13, s14
 802a056:	ee74 4a05 	vadd.f32	s9, s8, s10
 802a05a:	ee26 3a27 	vmul.f32	s6, s12, s15
 802a05e:	ee77 6a26 	vadd.f32	s13, s14, s13
 802a062:	ee35 5a44 	vsub.f32	s10, s10, s8
 802a066:	ee25 7aa7 	vmul.f32	s14, s11, s15
 802a06a:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a06e:	ee77 7a05 	vadd.f32	s15, s14, s10
 802a072:	ee26 6a24 	vmul.f32	s12, s12, s9
 802a076:	ee65 5aa4 	vmul.f32	s11, s11, s9
 802a07a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802a07e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802a082:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802a086:	ee27 7a23 	vmul.f32	s14, s14, s7
 802a08a:	3e01      	subs	r6, #1
 802a08c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802a090:	ed4c 7a01 	vstr	s15, [ip, #-4]
 802a094:	f1a0 0008 	sub.w	r0, r0, #8
 802a098:	f101 0108 	add.w	r1, r1, #8
 802a09c:	f10e 0e08 	add.w	lr, lr, #8
 802a0a0:	f10c 0c08 	add.w	ip, ip, #8
 802a0a4:	d1c9      	bne.n	802a03a <arm_rfft_fast_f32+0x10a>
 802a0a6:	4638      	mov	r0, r7
 802a0a8:	4629      	mov	r1, r5
 802a0aa:	461a      	mov	r2, r3
 802a0ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a0b0:	2301      	movs	r3, #1
 802a0b2:	f000 bb31 	b.w	802a718 <arm_cfft_f32>
 802a0b6:	bf00      	nop

0802a0b8 <arm_cfft_radix8by2_f32>:
 802a0b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a0bc:	ed2d 8b08 	vpush	{d8-d11}
 802a0c0:	f8b0 e000 	ldrh.w	lr, [r0]
 802a0c4:	6842      	ldr	r2, [r0, #4]
 802a0c6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802a0ca:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 802a0ce:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 802a0d2:	4607      	mov	r7, r0
 802a0d4:	ea4f 038c 	mov.w	r3, ip, lsl #2
 802a0d8:	f000 80af 	beq.w	802a23a <arm_cfft_radix8by2_f32+0x182>
 802a0dc:	3310      	adds	r3, #16
 802a0de:	18ce      	adds	r6, r1, r3
 802a0e0:	3210      	adds	r2, #16
 802a0e2:	4443      	add	r3, r8
 802a0e4:	f101 0510 	add.w	r5, r1, #16
 802a0e8:	f108 0410 	add.w	r4, r8, #16
 802a0ec:	ed54 1a04 	vldr	s3, [r4, #-16]
 802a0f0:	ed13 4a04 	vldr	s8, [r3, #-16]
 802a0f4:	ed53 3a03 	vldr	s7, [r3, #-12]
 802a0f8:	ed53 5a02 	vldr	s11, [r3, #-8]
 802a0fc:	ed13 5a01 	vldr	s10, [r3, #-4]
 802a100:	ed54 6a03 	vldr	s13, [r4, #-12]
 802a104:	ed14 0a02 	vldr	s0, [r4, #-8]
 802a108:	ed16 2a04 	vldr	s4, [r6, #-16]
 802a10c:	ed56 2a03 	vldr	s5, [r6, #-12]
 802a110:	ed15 6a03 	vldr	s12, [r5, #-12]
 802a114:	ed15 7a01 	vldr	s14, [r5, #-4]
 802a118:	ed15 3a04 	vldr	s6, [r5, #-16]
 802a11c:	ed54 7a01 	vldr	s15, [r4, #-4]
 802a120:	ed56 0a02 	vldr	s1, [r6, #-8]
 802a124:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a128:	ed55 4a02 	vldr	s9, [r5, #-8]
 802a12c:	ee73 ba21 	vadd.f32	s23, s6, s3
 802a130:	ee36 ba26 	vadd.f32	s22, s12, s13
 802a134:	ee37 aa27 	vadd.f32	s20, s14, s15
 802a138:	ee72 9a04 	vadd.f32	s19, s4, s8
 802a13c:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802a140:	ee31 8a05 	vadd.f32	s16, s2, s10
 802a144:	ee74 aa80 	vadd.f32	s21, s9, s0
 802a148:	ee70 8aa5 	vadd.f32	s17, s1, s11
 802a14c:	ed45 ba04 	vstr	s23, [r5, #-16]
 802a150:	ed05 ba03 	vstr	s22, [r5, #-12]
 802a154:	ed45 aa02 	vstr	s21, [r5, #-8]
 802a158:	ed05 aa01 	vstr	s20, [r5, #-4]
 802a15c:	ed06 8a01 	vstr	s16, [r6, #-4]
 802a160:	ed46 9a04 	vstr	s19, [r6, #-16]
 802a164:	ed06 9a03 	vstr	s18, [r6, #-12]
 802a168:	ed46 8a02 	vstr	s17, [r6, #-8]
 802a16c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a170:	ee73 3ae2 	vsub.f32	s7, s7, s5
 802a174:	ed12 6a03 	vldr	s12, [r2, #-12]
 802a178:	ed52 2a04 	vldr	s5, [r2, #-16]
 802a17c:	ee33 3a61 	vsub.f32	s6, s6, s3
 802a180:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a184:	ee26 8a86 	vmul.f32	s16, s13, s12
 802a188:	ee24 2a06 	vmul.f32	s4, s8, s12
 802a18c:	ee63 1a22 	vmul.f32	s3, s6, s5
 802a190:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a194:	ee23 3a06 	vmul.f32	s6, s6, s12
 802a198:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802a19c:	ee23 6a86 	vmul.f32	s12, s7, s12
 802a1a0:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a1a4:	ee36 6a04 	vadd.f32	s12, s12, s8
 802a1a8:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a1ac:	ee72 3a63 	vsub.f32	s7, s4, s7
 802a1b0:	ee71 2a88 	vadd.f32	s5, s3, s16
 802a1b4:	ed44 6a03 	vstr	s13, [r4, #-12]
 802a1b8:	ed44 2a04 	vstr	s5, [r4, #-16]
 802a1bc:	ed43 3a04 	vstr	s7, [r3, #-16]
 802a1c0:	ed03 6a03 	vstr	s12, [r3, #-12]
 802a1c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a1c8:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802a1cc:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a1d0:	ed52 5a02 	vldr	s11, [r2, #-8]
 802a1d4:	ee35 6a41 	vsub.f32	s12, s10, s2
 802a1d8:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802a1dc:	ee67 3a87 	vmul.f32	s7, s15, s14
 802a1e0:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a1e4:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802a1e8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a1ec:	ee64 4a87 	vmul.f32	s9, s9, s14
 802a1f0:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802a1f4:	ee26 7a07 	vmul.f32	s14, s12, s14
 802a1f8:	ee26 6a25 	vmul.f32	s12, s12, s11
 802a1fc:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a200:	ee74 5a23 	vadd.f32	s11, s8, s7
 802a204:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a208:	ee37 7a26 	vadd.f32	s14, s14, s13
 802a20c:	f1be 0e01 	subs.w	lr, lr, #1
 802a210:	ed44 5a02 	vstr	s11, [r4, #-8]
 802a214:	f105 0510 	add.w	r5, r5, #16
 802a218:	ed44 7a01 	vstr	s15, [r4, #-4]
 802a21c:	f106 0610 	add.w	r6, r6, #16
 802a220:	ed03 6a02 	vstr	s12, [r3, #-8]
 802a224:	ed03 7a01 	vstr	s14, [r3, #-4]
 802a228:	f102 0210 	add.w	r2, r2, #16
 802a22c:	f104 0410 	add.w	r4, r4, #16
 802a230:	f103 0310 	add.w	r3, r3, #16
 802a234:	f47f af5a 	bne.w	802a0ec <arm_cfft_radix8by2_f32+0x34>
 802a238:	687a      	ldr	r2, [r7, #4]
 802a23a:	fa1f f48c 	uxth.w	r4, ip
 802a23e:	4608      	mov	r0, r1
 802a240:	2302      	movs	r3, #2
 802a242:	4621      	mov	r1, r4
 802a244:	f000 fbca 	bl	802a9dc <arm_radix8_butterfly_f32>
 802a248:	ecbd 8b08 	vpop	{d8-d11}
 802a24c:	4640      	mov	r0, r8
 802a24e:	4621      	mov	r1, r4
 802a250:	687a      	ldr	r2, [r7, #4]
 802a252:	2302      	movs	r3, #2
 802a254:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a258:	f000 bbc0 	b.w	802a9dc <arm_radix8_butterfly_f32>

0802a25c <arm_cfft_radix8by4_f32>:
 802a25c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a260:	ed2d 8b0a 	vpush	{d8-d12}
 802a264:	8802      	ldrh	r2, [r0, #0]
 802a266:	ed91 6a00 	vldr	s12, [r1]
 802a26a:	b08f      	sub	sp, #60	; 0x3c
 802a26c:	460f      	mov	r7, r1
 802a26e:	0852      	lsrs	r2, r2, #1
 802a270:	0093      	lsls	r3, r2, #2
 802a272:	900c      	str	r0, [sp, #48]	; 0x30
 802a274:	9103      	str	r1, [sp, #12]
 802a276:	6841      	ldr	r1, [r0, #4]
 802a278:	ed97 7a01 	vldr	s14, [r7, #4]
 802a27c:	4638      	mov	r0, r7
 802a27e:	4418      	add	r0, r3
 802a280:	4606      	mov	r6, r0
 802a282:	9009      	str	r0, [sp, #36]	; 0x24
 802a284:	4418      	add	r0, r3
 802a286:	edd0 6a00 	vldr	s13, [r0]
 802a28a:	edd6 3a00 	vldr	s7, [r6]
 802a28e:	edd6 2a01 	vldr	s5, [r6, #4]
 802a292:	edd0 7a01 	vldr	s15, [r0, #4]
 802a296:	900a      	str	r0, [sp, #40]	; 0x28
 802a298:	ee76 5a26 	vadd.f32	s11, s12, s13
 802a29c:	4604      	mov	r4, r0
 802a29e:	4625      	mov	r5, r4
 802a2a0:	441c      	add	r4, r3
 802a2a2:	ed94 4a00 	vldr	s8, [r4]
 802a2a6:	ed94 5a01 	vldr	s10, [r4, #4]
 802a2aa:	9401      	str	r4, [sp, #4]
 802a2ac:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802a2b0:	4630      	mov	r0, r6
 802a2b2:	ee74 4a24 	vadd.f32	s9, s8, s9
 802a2b6:	463e      	mov	r6, r7
 802a2b8:	ee14 ea90 	vmov	lr, s9
 802a2bc:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a2c0:	f846 eb08 	str.w	lr, [r6], #8
 802a2c4:	ee37 6a27 	vadd.f32	s12, s14, s15
 802a2c8:	edd0 4a01 	vldr	s9, [r0, #4]
 802a2cc:	9604      	str	r6, [sp, #16]
 802a2ce:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a2d2:	9e01      	ldr	r6, [sp, #4]
 802a2d4:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802a2d8:	ed96 2a01 	vldr	s4, [r6, #4]
 802a2dc:	ee36 7a24 	vadd.f32	s14, s12, s9
 802a2e0:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802a2e4:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802a2e8:	ee36 6a62 	vsub.f32	s12, s12, s5
 802a2ec:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802a2f0:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802a2f4:	ee73 3a45 	vsub.f32	s7, s6, s10
 802a2f8:	4604      	mov	r4, r0
 802a2fa:	ee36 6a45 	vsub.f32	s12, s12, s10
 802a2fe:	ee75 6a26 	vadd.f32	s13, s10, s13
 802a302:	46a3      	mov	fp, r4
 802a304:	ee37 7a02 	vadd.f32	s14, s14, s4
 802a308:	ee34 5a84 	vadd.f32	s10, s9, s8
 802a30c:	ee13 8a90 	vmov	r8, s7
 802a310:	46a4      	mov	ip, r4
 802a312:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802a316:	ed87 7a01 	vstr	s14, [r7, #4]
 802a31a:	f84b 8b08 	str.w	r8, [fp], #8
 802a31e:	f1ac 0704 	sub.w	r7, ip, #4
 802a322:	ed8c 5a01 	vstr	s10, [ip, #4]
 802a326:	f101 0c08 	add.w	ip, r1, #8
 802a32a:	462c      	mov	r4, r5
 802a32c:	f8cd c014 	str.w	ip, [sp, #20]
 802a330:	ee15 ca90 	vmov	ip, s11
 802a334:	f844 cb08 	str.w	ip, [r4], #8
 802a338:	9407      	str	r4, [sp, #28]
 802a33a:	f101 0410 	add.w	r4, r1, #16
 802a33e:	ed85 6a01 	vstr	s12, [r5, #4]
 802a342:	0852      	lsrs	r2, r2, #1
 802a344:	9402      	str	r4, [sp, #8]
 802a346:	462c      	mov	r4, r5
 802a348:	f101 0518 	add.w	r5, r1, #24
 802a34c:	920b      	str	r2, [sp, #44]	; 0x2c
 802a34e:	46b2      	mov	sl, r6
 802a350:	9506      	str	r5, [sp, #24]
 802a352:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802a356:	3a02      	subs	r2, #2
 802a358:	ee16 5a90 	vmov	r5, s13
 802a35c:	46b6      	mov	lr, r6
 802a35e:	4630      	mov	r0, r6
 802a360:	0852      	lsrs	r2, r2, #1
 802a362:	f84a 5b08 	str.w	r5, [sl], #8
 802a366:	f1a0 0604 	sub.w	r6, r0, #4
 802a36a:	edce 7a01 	vstr	s15, [lr, #4]
 802a36e:	9208      	str	r2, [sp, #32]
 802a370:	f000 8130 	beq.w	802a5d4 <arm_cfft_radix8by4_f32+0x378>
 802a374:	4691      	mov	r9, r2
 802a376:	9a03      	ldr	r2, [sp, #12]
 802a378:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802a37c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802a380:	3b08      	subs	r3, #8
 802a382:	f102 0510 	add.w	r5, r2, #16
 802a386:	f101 0c20 	add.w	ip, r1, #32
 802a38a:	f1a4 020c 	sub.w	r2, r4, #12
 802a38e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802a392:	4433      	add	r3, r6
 802a394:	3410      	adds	r4, #16
 802a396:	4650      	mov	r0, sl
 802a398:	4659      	mov	r1, fp
 802a39a:	ed55 3a02 	vldr	s7, [r5, #-8]
 802a39e:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a3a2:	ed91 7a00 	vldr	s14, [r1]
 802a3a6:	edd0 7a00 	vldr	s15, [r0]
 802a3aa:	ed15 4a01 	vldr	s8, [r5, #-4]
 802a3ae:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a3b2:	edd0 6a01 	vldr	s13, [r0, #4]
 802a3b6:	ed91 6a01 	vldr	s12, [r1, #4]
 802a3ba:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a3be:	ee34 0a25 	vadd.f32	s0, s8, s11
 802a3c2:	ee78 4a07 	vadd.f32	s9, s16, s14
 802a3c6:	ee74 5a65 	vsub.f32	s11, s8, s11
 802a3ca:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802a3ce:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802a3d2:	ed45 4a02 	vstr	s9, [r5, #-8]
 802a3d6:	edd1 4a01 	vldr	s9, [r1, #4]
 802a3da:	ed90 4a01 	vldr	s8, [r0, #4]
 802a3de:	ee70 4a24 	vadd.f32	s9, s0, s9
 802a3e2:	ee76 aa05 	vadd.f32	s21, s12, s10
 802a3e6:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a3ea:	ee35 aac7 	vsub.f32	s20, s11, s14
 802a3ee:	ed45 4a01 	vstr	s9, [r5, #-4]
 802a3f2:	edd6 1a00 	vldr	s3, [r6]
 802a3f6:	edd7 0a00 	vldr	s1, [r7]
 802a3fa:	ed92 4a02 	vldr	s8, [r2, #8]
 802a3fe:	edd3 3a02 	vldr	s7, [r3, #8]
 802a402:	ed93 2a01 	vldr	s4, [r3, #4]
 802a406:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a40a:	edd2 2a01 	vldr	s5, [r2, #4]
 802a40e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802a412:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802a416:	ee39 3a81 	vadd.f32	s6, s19, s2
 802a41a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802a41e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802a422:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802a426:	ee7a aae6 	vsub.f32	s21, s21, s13
 802a42a:	ee18 aa90 	vmov	sl, s17
 802a42e:	f847 a908 	str.w	sl, [r7], #-8
 802a432:	edd2 8a01 	vldr	s17, [r2, #4]
 802a436:	ed93 9a01 	vldr	s18, [r3, #4]
 802a43a:	ee73 8a28 	vadd.f32	s17, s6, s17
 802a43e:	ee3a aa27 	vadd.f32	s20, s20, s15
 802a442:	ee78 8a89 	vadd.f32	s17, s17, s18
 802a446:	ee74 0a63 	vsub.f32	s1, s8, s7
 802a44a:	edc7 8a01 	vstr	s17, [r7, #4]
 802a44e:	ed18 ba02 	vldr	s22, [r8, #-8]
 802a452:	ed58 8a01 	vldr	s17, [r8, #-4]
 802a456:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802a45a:	ee6a ba28 	vmul.f32	s23, s20, s17
 802a45e:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802a462:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802a466:	ee30 9a81 	vadd.f32	s18, s1, s2
 802a46a:	ee79 9a82 	vadd.f32	s19, s19, s4
 802a46e:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802a472:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802a476:	ee69 baa8 	vmul.f32	s23, s19, s17
 802a47a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802a47e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802a482:	ee69 8a28 	vmul.f32	s17, s18, s17
 802a486:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802a48a:	ee1c aa10 	vmov	sl, s24
 802a48e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802a492:	f841 ab08 	str.w	sl, [r1], #8
 802a496:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802a49a:	ee3b bacb 	vsub.f32	s22, s23, s22
 802a49e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802a4a2:	ee33 3a62 	vsub.f32	s6, s6, s5
 802a4a6:	ed01 aa01 	vstr	s20, [r1, #-4]
 802a4aa:	edc2 8a01 	vstr	s17, [r2, #4]
 802a4ae:	ed82 ba02 	vstr	s22, [r2, #8]
 802a4b2:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802a4b6:	ee74 3a63 	vsub.f32	s7, s8, s7
 802a4ba:	ee38 8a47 	vsub.f32	s16, s16, s14
 802a4be:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802a4c2:	ee30 0a46 	vsub.f32	s0, s0, s12
 802a4c6:	ee33 3a42 	vsub.f32	s6, s6, s4
 802a4ca:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a4ce:	ee30 0a66 	vsub.f32	s0, s0, s13
 802a4d2:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802a4d6:	ee63 8a04 	vmul.f32	s17, s6, s8
 802a4da:	ee28 aa24 	vmul.f32	s20, s16, s9
 802a4de:	ee60 9a04 	vmul.f32	s19, s0, s8
 802a4e2:	ee28 8a04 	vmul.f32	s16, s16, s8
 802a4e6:	ee20 0a24 	vmul.f32	s0, s0, s9
 802a4ea:	ee63 3a84 	vmul.f32	s7, s7, s8
 802a4ee:	ee39 4a68 	vsub.f32	s8, s18, s17
 802a4f2:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802a4f6:	ee14 aa10 	vmov	sl, s8
 802a4fa:	ee30 0a48 	vsub.f32	s0, s0, s16
 802a4fe:	ee63 4a24 	vmul.f32	s9, s6, s9
 802a502:	ed44 9a02 	vstr	s19, [r4, #-8]
 802a506:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802a50a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802a50e:	f846 a908 	str.w	sl, [r6], #-8
 802a512:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a516:	ee35 7a87 	vadd.f32	s14, s11, s14
 802a51a:	edc6 3a01 	vstr	s7, [r6, #4]
 802a51e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802a522:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a526:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802a52a:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802a52e:	ee67 5a86 	vmul.f32	s11, s15, s12
 802a532:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a536:	ee72 2a62 	vsub.f32	s5, s4, s5
 802a53a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a53e:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802a542:	ee75 5a25 	vadd.f32	s11, s10, s11
 802a546:	ee62 0a86 	vmul.f32	s1, s5, s12
 802a54a:	ee66 6a86 	vmul.f32	s13, s13, s12
 802a54e:	ee67 7a87 	vmul.f32	s15, s15, s14
 802a552:	ee21 6a06 	vmul.f32	s12, s2, s12
 802a556:	ee62 2a87 	vmul.f32	s5, s5, s14
 802a55a:	ee21 1a07 	vmul.f32	s2, s2, s14
 802a55e:	ee15 aa90 	vmov	sl, s11
 802a562:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a566:	f840 ab08 	str.w	sl, [r0], #8
 802a56a:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a56e:	ee76 2a22 	vadd.f32	s5, s12, s5
 802a572:	f1b9 0901 	subs.w	r9, r9, #1
 802a576:	ed40 7a01 	vstr	s15, [r0, #-4]
 802a57a:	f105 0508 	add.w	r5, r5, #8
 802a57e:	ed83 1a02 	vstr	s2, [r3, #8]
 802a582:	edc3 2a01 	vstr	s5, [r3, #4]
 802a586:	f108 0808 	add.w	r8, r8, #8
 802a58a:	f1a2 0208 	sub.w	r2, r2, #8
 802a58e:	f10c 0c10 	add.w	ip, ip, #16
 802a592:	f104 0408 	add.w	r4, r4, #8
 802a596:	f10e 0e18 	add.w	lr, lr, #24
 802a59a:	f1a3 0308 	sub.w	r3, r3, #8
 802a59e:	f47f aefc 	bne.w	802a39a <arm_cfft_radix8by4_f32+0x13e>
 802a5a2:	9908      	ldr	r1, [sp, #32]
 802a5a4:	9802      	ldr	r0, [sp, #8]
 802a5a6:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a5aa:	00cb      	lsls	r3, r1, #3
 802a5ac:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a5b0:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a5b4:	9102      	str	r1, [sp, #8]
 802a5b6:	9904      	ldr	r1, [sp, #16]
 802a5b8:	4419      	add	r1, r3
 802a5ba:	9104      	str	r1, [sp, #16]
 802a5bc:	9905      	ldr	r1, [sp, #20]
 802a5be:	4419      	add	r1, r3
 802a5c0:	9105      	str	r1, [sp, #20]
 802a5c2:	9907      	ldr	r1, [sp, #28]
 802a5c4:	449b      	add	fp, r3
 802a5c6:	4419      	add	r1, r3
 802a5c8:	449a      	add	sl, r3
 802a5ca:	9b06      	ldr	r3, [sp, #24]
 802a5cc:	9107      	str	r1, [sp, #28]
 802a5ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a5d2:	9306      	str	r3, [sp, #24]
 802a5d4:	9a04      	ldr	r2, [sp, #16]
 802a5d6:	9807      	ldr	r0, [sp, #28]
 802a5d8:	edd2 3a00 	vldr	s7, [r2]
 802a5dc:	ed90 4a00 	vldr	s8, [r0]
 802a5e0:	eddb 7a00 	vldr	s15, [fp]
 802a5e4:	ed9a 3a00 	vldr	s6, [sl]
 802a5e8:	edd2 4a01 	vldr	s9, [r2, #4]
 802a5ec:	ed90 7a01 	vldr	s14, [r0, #4]
 802a5f0:	ed9b 2a01 	vldr	s4, [fp, #4]
 802a5f4:	edda 5a01 	vldr	s11, [sl, #4]
 802a5f8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a5fc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a5fe:	ee73 6a84 	vadd.f32	s13, s7, s8
 802a602:	ee34 6a87 	vadd.f32	s12, s9, s14
 802a606:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802a60a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802a60e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802a612:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802a616:	ed82 5a00 	vstr	s10, [r2]
 802a61a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a61e:	edda 4a01 	vldr	s9, [sl, #4]
 802a622:	ee36 5a05 	vadd.f32	s10, s12, s10
 802a626:	ee72 3a04 	vadd.f32	s7, s4, s8
 802a62a:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a62e:	ee77 4a67 	vsub.f32	s9, s14, s15
 802a632:	ed82 5a01 	vstr	s10, [r2, #4]
 802a636:	9a05      	ldr	r2, [sp, #20]
 802a638:	ee34 5a83 	vadd.f32	s10, s9, s6
 802a63c:	edd2 1a00 	vldr	s3, [r2]
 802a640:	edd2 2a01 	vldr	s5, [r2, #4]
 802a644:	9a02      	ldr	r2, [sp, #8]
 802a646:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802a64a:	ee36 6a42 	vsub.f32	s12, s12, s4
 802a64e:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802a652:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a656:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a65a:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a65e:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a662:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a666:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802a66a:	edcb 2a00 	vstr	s5, [fp]
 802a66e:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a672:	edd2 3a01 	vldr	s7, [r2, #4]
 802a676:	ed92 5a00 	vldr	s10, [r2]
 802a67a:	9a06      	ldr	r2, [sp, #24]
 802a67c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a680:	ee36 6a65 	vsub.f32	s12, s12, s11
 802a684:	ee66 4a85 	vmul.f32	s9, s13, s10
 802a688:	ee26 5a05 	vmul.f32	s10, s12, s10
 802a68c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802a690:	ee26 6a23 	vmul.f32	s12, s12, s7
 802a694:	ee75 6a66 	vsub.f32	s13, s10, s13
 802a698:	ee34 6a86 	vadd.f32	s12, s9, s12
 802a69c:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a6a0:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a6a4:	edc0 6a01 	vstr	s13, [r0, #4]
 802a6a8:	ed80 6a00 	vstr	s12, [r0]
 802a6ac:	ed92 6a01 	vldr	s12, [r2, #4]
 802a6b0:	9803      	ldr	r0, [sp, #12]
 802a6b2:	ee77 7a43 	vsub.f32	s15, s14, s6
 802a6b6:	ee75 5a84 	vadd.f32	s11, s11, s8
 802a6ba:	ed92 7a00 	vldr	s14, [r2]
 802a6be:	ee65 6a87 	vmul.f32	s13, s11, s14
 802a6c2:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a6c6:	ee65 5a86 	vmul.f32	s11, s11, s12
 802a6ca:	ee67 7a86 	vmul.f32	s15, s15, s12
 802a6ce:	ee77 5a65 	vsub.f32	s11, s14, s11
 802a6d2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802a6d6:	edca 5a01 	vstr	s11, [sl, #4]
 802a6da:	edca 7a00 	vstr	s15, [sl]
 802a6de:	6872      	ldr	r2, [r6, #4]
 802a6e0:	4621      	mov	r1, r4
 802a6e2:	2304      	movs	r3, #4
 802a6e4:	f000 f97a 	bl	802a9dc <arm_radix8_butterfly_f32>
 802a6e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a6ea:	6872      	ldr	r2, [r6, #4]
 802a6ec:	4621      	mov	r1, r4
 802a6ee:	2304      	movs	r3, #4
 802a6f0:	f000 f974 	bl	802a9dc <arm_radix8_butterfly_f32>
 802a6f4:	980a      	ldr	r0, [sp, #40]	; 0x28
 802a6f6:	6872      	ldr	r2, [r6, #4]
 802a6f8:	4621      	mov	r1, r4
 802a6fa:	2304      	movs	r3, #4
 802a6fc:	f000 f96e 	bl	802a9dc <arm_radix8_butterfly_f32>
 802a700:	9801      	ldr	r0, [sp, #4]
 802a702:	6872      	ldr	r2, [r6, #4]
 802a704:	4621      	mov	r1, r4
 802a706:	2304      	movs	r3, #4
 802a708:	b00f      	add	sp, #60	; 0x3c
 802a70a:	ecbd 8b0a 	vpop	{d8-d12}
 802a70e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a712:	f000 b963 	b.w	802a9dc <arm_radix8_butterfly_f32>
 802a716:	bf00      	nop

0802a718 <arm_cfft_f32>:
 802a718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a71c:	2a01      	cmp	r2, #1
 802a71e:	4606      	mov	r6, r0
 802a720:	4617      	mov	r7, r2
 802a722:	460c      	mov	r4, r1
 802a724:	4698      	mov	r8, r3
 802a726:	8805      	ldrh	r5, [r0, #0]
 802a728:	d054      	beq.n	802a7d4 <arm_cfft_f32+0xbc>
 802a72a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a72e:	d04c      	beq.n	802a7ca <arm_cfft_f32+0xb2>
 802a730:	d916      	bls.n	802a760 <arm_cfft_f32+0x48>
 802a732:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802a736:	d01a      	beq.n	802a76e <arm_cfft_f32+0x56>
 802a738:	d95c      	bls.n	802a7f4 <arm_cfft_f32+0xdc>
 802a73a:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a73e:	d044      	beq.n	802a7ca <arm_cfft_f32+0xb2>
 802a740:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a744:	d105      	bne.n	802a752 <arm_cfft_f32+0x3a>
 802a746:	4620      	mov	r0, r4
 802a748:	4629      	mov	r1, r5
 802a74a:	6872      	ldr	r2, [r6, #4]
 802a74c:	2301      	movs	r3, #1
 802a74e:	f000 f945 	bl	802a9dc <arm_radix8_butterfly_f32>
 802a752:	f1b8 0f00 	cmp.w	r8, #0
 802a756:	d111      	bne.n	802a77c <arm_cfft_f32+0x64>
 802a758:	2f01      	cmp	r7, #1
 802a75a:	d016      	beq.n	802a78a <arm_cfft_f32+0x72>
 802a75c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a760:	2d20      	cmp	r5, #32
 802a762:	d032      	beq.n	802a7ca <arm_cfft_f32+0xb2>
 802a764:	d94a      	bls.n	802a7fc <arm_cfft_f32+0xe4>
 802a766:	2d40      	cmp	r5, #64	; 0x40
 802a768:	d0ed      	beq.n	802a746 <arm_cfft_f32+0x2e>
 802a76a:	2d80      	cmp	r5, #128	; 0x80
 802a76c:	d1f1      	bne.n	802a752 <arm_cfft_f32+0x3a>
 802a76e:	4630      	mov	r0, r6
 802a770:	4621      	mov	r1, r4
 802a772:	f7ff fca1 	bl	802a0b8 <arm_cfft_radix8by2_f32>
 802a776:	f1b8 0f00 	cmp.w	r8, #0
 802a77a:	d0ed      	beq.n	802a758 <arm_cfft_f32+0x40>
 802a77c:	4620      	mov	r0, r4
 802a77e:	89b1      	ldrh	r1, [r6, #12]
 802a780:	68b2      	ldr	r2, [r6, #8]
 802a782:	f7d5 fd35 	bl	80001f0 <arm_bitreversal_32>
 802a786:	2f01      	cmp	r7, #1
 802a788:	d1e8      	bne.n	802a75c <arm_cfft_f32+0x44>
 802a78a:	ee07 5a90 	vmov	s15, r5
 802a78e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a792:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a796:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a79a:	2d00      	cmp	r5, #0
 802a79c:	d0de      	beq.n	802a75c <arm_cfft_f32+0x44>
 802a79e:	f104 0108 	add.w	r1, r4, #8
 802a7a2:	2300      	movs	r3, #0
 802a7a4:	3301      	adds	r3, #1
 802a7a6:	429d      	cmp	r5, r3
 802a7a8:	f101 0108 	add.w	r1, r1, #8
 802a7ac:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a7b0:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a7b4:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a7b8:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a7bc:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a7c0:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a7c4:	d1ee      	bne.n	802a7a4 <arm_cfft_f32+0x8c>
 802a7c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a7ca:	4630      	mov	r0, r6
 802a7cc:	4621      	mov	r1, r4
 802a7ce:	f7ff fd45 	bl	802a25c <arm_cfft_radix8by4_f32>
 802a7d2:	e7be      	b.n	802a752 <arm_cfft_f32+0x3a>
 802a7d4:	b1ad      	cbz	r5, 802a802 <arm_cfft_f32+0xea>
 802a7d6:	f101 030c 	add.w	r3, r1, #12
 802a7da:	2200      	movs	r2, #0
 802a7dc:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a7e0:	3201      	adds	r2, #1
 802a7e2:	eef1 7a67 	vneg.f32	s15, s15
 802a7e6:	4295      	cmp	r5, r2
 802a7e8:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a7ec:	f103 0308 	add.w	r3, r3, #8
 802a7f0:	d1f4      	bne.n	802a7dc <arm_cfft_f32+0xc4>
 802a7f2:	e79a      	b.n	802a72a <arm_cfft_f32+0x12>
 802a7f4:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a7f8:	d0a5      	beq.n	802a746 <arm_cfft_f32+0x2e>
 802a7fa:	e7aa      	b.n	802a752 <arm_cfft_f32+0x3a>
 802a7fc:	2d10      	cmp	r5, #16
 802a7fe:	d0b6      	beq.n	802a76e <arm_cfft_f32+0x56>
 802a800:	e7a7      	b.n	802a752 <arm_cfft_f32+0x3a>
 802a802:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a806:	d894      	bhi.n	802a732 <arm_cfft_f32+0x1a>
 802a808:	e7aa      	b.n	802a760 <arm_cfft_f32+0x48>
 802a80a:	bf00      	nop

0802a80c <arm_cmplx_mag_f32>:
 802a80c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a810:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a814:	b084      	sub	sp, #16
 802a816:	d07f      	beq.n	802a918 <arm_cmplx_mag_f32+0x10c>
 802a818:	2700      	movs	r7, #0
 802a81a:	f100 0420 	add.w	r4, r0, #32
 802a81e:	f101 0510 	add.w	r5, r1, #16
 802a822:	4646      	mov	r6, r8
 802a824:	e05a      	b.n	802a8dc <arm_cmplx_mag_f32+0xd0>
 802a826:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a82a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a82e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a832:	f040 80a4 	bne.w	802a97e <arm_cmplx_mag_f32+0x172>
 802a836:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a83a:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a83e:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a842:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a846:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a84a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a84e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a856:	f2c0 808f 	blt.w	802a978 <arm_cmplx_mag_f32+0x16c>
 802a85a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a85e:	eeb4 0a40 	vcmp.f32	s0, s0
 802a862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a866:	f040 80af 	bne.w	802a9c8 <arm_cmplx_mag_f32+0x1bc>
 802a86a:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a86e:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a872:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a876:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a87a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a87e:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a882:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a886:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a88a:	db72      	blt.n	802a972 <arm_cmplx_mag_f32+0x166>
 802a88c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a890:	eeb4 0a40 	vcmp.f32	s0, s0
 802a894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a898:	f040 808c 	bne.w	802a9b4 <arm_cmplx_mag_f32+0x1a8>
 802a89c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a8a0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a8a4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a8a8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a8ac:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a8b0:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a8b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a8b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8bc:	db20      	blt.n	802a900 <arm_cmplx_mag_f32+0xf4>
 802a8be:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a8c2:	eeb4 0a40 	vcmp.f32	s0, s0
 802a8c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8ca:	d169      	bne.n	802a9a0 <arm_cmplx_mag_f32+0x194>
 802a8cc:	3e01      	subs	r6, #1
 802a8ce:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a8d2:	f104 0420 	add.w	r4, r4, #32
 802a8d6:	f105 0510 	add.w	r5, r5, #16
 802a8da:	d019      	beq.n	802a910 <arm_cmplx_mag_f32+0x104>
 802a8dc:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a8e0:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a8e4:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a8e8:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a8ec:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a8f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a8f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a8f8:	da95      	bge.n	802a826 <arm_cmplx_mag_f32+0x1a>
 802a8fa:	f845 7c10 	str.w	r7, [r5, #-16]
 802a8fe:	e79c      	b.n	802a83a <arm_cmplx_mag_f32+0x2e>
 802a900:	3e01      	subs	r6, #1
 802a902:	f845 7c04 	str.w	r7, [r5, #-4]
 802a906:	f104 0420 	add.w	r4, r4, #32
 802a90a:	f105 0510 	add.w	r5, r5, #16
 802a90e:	d1e5      	bne.n	802a8dc <arm_cmplx_mag_f32+0xd0>
 802a910:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a914:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a918:	f012 0503 	ands.w	r5, r2, #3
 802a91c:	d026      	beq.n	802a96c <arm_cmplx_mag_f32+0x160>
 802a91e:	2600      	movs	r6, #0
 802a920:	f100 0408 	add.w	r4, r0, #8
 802a924:	e00c      	b.n	802a940 <arm_cmplx_mag_f32+0x134>
 802a926:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a92a:	eeb4 0a40 	vcmp.f32	s0, s0
 802a92e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a932:	d12e      	bne.n	802a992 <arm_cmplx_mag_f32+0x186>
 802a934:	3d01      	subs	r5, #1
 802a936:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a93a:	f104 0408 	add.w	r4, r4, #8
 802a93e:	d015      	beq.n	802a96c <arm_cmplx_mag_f32+0x160>
 802a940:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a944:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a948:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a94c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a950:	3104      	adds	r1, #4
 802a952:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a956:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a95a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a95e:	dae2      	bge.n	802a926 <arm_cmplx_mag_f32+0x11a>
 802a960:	3d01      	subs	r5, #1
 802a962:	f841 6c04 	str.w	r6, [r1, #-4]
 802a966:	f104 0408 	add.w	r4, r4, #8
 802a96a:	d1e9      	bne.n	802a940 <arm_cmplx_mag_f32+0x134>
 802a96c:	b004      	add	sp, #16
 802a96e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a972:	f845 7c08 	str.w	r7, [r5, #-8]
 802a976:	e793      	b.n	802a8a0 <arm_cmplx_mag_f32+0x94>
 802a978:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a97c:	e777      	b.n	802a86e <arm_cmplx_mag_f32+0x62>
 802a97e:	eeb0 0a67 	vmov.f32	s0, s15
 802a982:	9203      	str	r2, [sp, #12]
 802a984:	9102      	str	r1, [sp, #8]
 802a986:	9001      	str	r0, [sp, #4]
 802a988:	f000 fb38 	bl	802affc <sqrtf>
 802a98c:	a801      	add	r0, sp, #4
 802a98e:	c807      	ldmia	r0, {r0, r1, r2}
 802a990:	e751      	b.n	802a836 <arm_cmplx_mag_f32+0x2a>
 802a992:	eeb0 0a67 	vmov.f32	s0, s15
 802a996:	9101      	str	r1, [sp, #4]
 802a998:	f000 fb30 	bl	802affc <sqrtf>
 802a99c:	9901      	ldr	r1, [sp, #4]
 802a99e:	e7c9      	b.n	802a934 <arm_cmplx_mag_f32+0x128>
 802a9a0:	eeb0 0a67 	vmov.f32	s0, s15
 802a9a4:	9203      	str	r2, [sp, #12]
 802a9a6:	9102      	str	r1, [sp, #8]
 802a9a8:	9001      	str	r0, [sp, #4]
 802a9aa:	f000 fb27 	bl	802affc <sqrtf>
 802a9ae:	a801      	add	r0, sp, #4
 802a9b0:	c807      	ldmia	r0, {r0, r1, r2}
 802a9b2:	e78b      	b.n	802a8cc <arm_cmplx_mag_f32+0xc0>
 802a9b4:	eeb0 0a67 	vmov.f32	s0, s15
 802a9b8:	9203      	str	r2, [sp, #12]
 802a9ba:	9102      	str	r1, [sp, #8]
 802a9bc:	9001      	str	r0, [sp, #4]
 802a9be:	f000 fb1d 	bl	802affc <sqrtf>
 802a9c2:	a801      	add	r0, sp, #4
 802a9c4:	c807      	ldmia	r0, {r0, r1, r2}
 802a9c6:	e769      	b.n	802a89c <arm_cmplx_mag_f32+0x90>
 802a9c8:	eeb0 0a67 	vmov.f32	s0, s15
 802a9cc:	9203      	str	r2, [sp, #12]
 802a9ce:	9102      	str	r1, [sp, #8]
 802a9d0:	9001      	str	r0, [sp, #4]
 802a9d2:	f000 fb13 	bl	802affc <sqrtf>
 802a9d6:	a801      	add	r0, sp, #4
 802a9d8:	c807      	ldmia	r0, {r0, r1, r2}
 802a9da:	e746      	b.n	802a86a <arm_cmplx_mag_f32+0x5e>

0802a9dc <arm_radix8_butterfly_f32>:
 802a9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a9e0:	ed2d 8b10 	vpush	{d8-d15}
 802a9e4:	b09d      	sub	sp, #116	; 0x74
 802a9e6:	461c      	mov	r4, r3
 802a9e8:	ed9f bac8 	vldr	s22, [pc, #800]	; 802ad0c <arm_radix8_butterfly_f32+0x330>
 802a9ec:	921a      	str	r2, [sp, #104]	; 0x68
 802a9ee:	1d03      	adds	r3, r0, #4
 802a9f0:	4682      	mov	sl, r0
 802a9f2:	4689      	mov	r9, r1
 802a9f4:	468b      	mov	fp, r1
 802a9f6:	931b      	str	r3, [sp, #108]	; 0x6c
 802a9f8:	9400      	str	r4, [sp, #0]
 802a9fa:	469e      	mov	lr, r3
 802a9fc:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802aa00:	005a      	lsls	r2, r3, #1
 802aa02:	18d6      	adds	r6, r2, r3
 802aa04:	18f5      	adds	r5, r6, r3
 802aa06:	9203      	str	r2, [sp, #12]
 802aa08:	195a      	adds	r2, r3, r5
 802aa0a:	18d0      	adds	r0, r2, r3
 802aa0c:	00df      	lsls	r7, r3, #3
 802aa0e:	1819      	adds	r1, r3, r0
 802aa10:	463c      	mov	r4, r7
 802aa12:	9701      	str	r7, [sp, #4]
 802aa14:	4457      	add	r7, sl
 802aa16:	930c      	str	r3, [sp, #48]	; 0x30
 802aa18:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802aa1c:	011b      	lsls	r3, r3, #4
 802aa1e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802aa22:	eb07 0c04 	add.w	ip, r7, r4
 802aa26:	9c00      	ldr	r4, [sp, #0]
 802aa28:	9302      	str	r3, [sp, #8]
 802aa2a:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802aa2e:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802aa32:	3204      	adds	r2, #4
 802aa34:	3104      	adds	r1, #4
 802aa36:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802aa3a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802aa3e:	f04f 0800 	mov.w	r8, #0
 802aa42:	eddc 7a00 	vldr	s15, [ip]
 802aa46:	edd7 6a00 	vldr	s13, [r7]
 802aa4a:	edd6 3a00 	vldr	s7, [r6]
 802aa4e:	ed5e aa01 	vldr	s21, [lr, #-4]
 802aa52:	edd5 4a00 	vldr	s9, [r5]
 802aa56:	ed90 2a00 	vldr	s4, [r0]
 802aa5a:	ed12 7a01 	vldr	s14, [r2, #-4]
 802aa5e:	ed51 0a01 	vldr	s1, [r1, #-4]
 802aa62:	ee77 8a82 	vadd.f32	s17, s15, s4
 802aa66:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802aa6a:	ee76 1a87 	vadd.f32	s3, s13, s14
 802aa6e:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802aa72:	ee31 6a84 	vadd.f32	s12, s3, s8
 802aa76:	ee33 5a28 	vadd.f32	s10, s6, s17
 802aa7a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802aa7e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802aa82:	ee35 5a46 	vsub.f32	s10, s10, s12
 802aa86:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802aa8a:	ed85 5a00 	vstr	s10, [r5]
 802aa8e:	ed96 1a01 	vldr	s2, [r6, #4]
 802aa92:	edd7 5a01 	vldr	s11, [r7, #4]
 802aa96:	ed92 aa00 	vldr	s20, [r2]
 802aa9a:	ed91 6a00 	vldr	s12, [r1]
 802aa9e:	ed9e 9a00 	vldr	s18, [lr]
 802aaa2:	ed95 5a01 	vldr	s10, [r5, #4]
 802aaa6:	eddc 6a01 	vldr	s13, [ip, #4]
 802aaaa:	edd0 9a01 	vldr	s19, [r0, #4]
 802aaae:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802aab2:	ee71 2a46 	vsub.f32	s5, s2, s12
 802aab6:	ee75 3aca 	vsub.f32	s7, s11, s20
 802aaba:	ee37 0a60 	vsub.f32	s0, s14, s1
 802aabe:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802aac2:	ee37 7a20 	vadd.f32	s14, s14, s1
 802aac6:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802aaca:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802aace:	ee79 3a05 	vadd.f32	s7, s18, s10
 802aad2:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802aad6:	ee39 5a45 	vsub.f32	s10, s18, s10
 802aada:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802aade:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802aae2:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802aae6:	ee31 6a06 	vadd.f32	s12, s2, s12
 802aaea:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802aaee:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802aaf2:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802aaf6:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802aafa:	ee33 3a68 	vsub.f32	s6, s6, s17
 802aafe:	ee36 0a88 	vadd.f32	s0, s13, s16
 802ab02:	ee75 8a86 	vadd.f32	s17, s11, s12
 802ab06:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802ab0a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802ab0e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802ab12:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802ab16:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802ab1a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802ab1e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802ab22:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802ab26:	ee75 4a22 	vadd.f32	s9, s10, s5
 802ab2a:	ee32 5a27 	vadd.f32	s10, s4, s15
 802ab2e:	ee72 7a67 	vsub.f32	s15, s4, s15
 802ab32:	ee33 8a06 	vadd.f32	s16, s6, s12
 802ab36:	ee75 2a87 	vadd.f32	s5, s11, s14
 802ab3a:	ee31 9a28 	vadd.f32	s18, s2, s17
 802ab3e:	ee33 6a46 	vsub.f32	s12, s6, s12
 802ab42:	ee74 0a61 	vsub.f32	s1, s8, s3
 802ab46:	ee33 2a80 	vadd.f32	s4, s7, s0
 802ab4a:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802ab4e:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802ab52:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802ab56:	ee31 1a68 	vsub.f32	s2, s2, s17
 802ab5a:	ee34 4a21 	vadd.f32	s8, s8, s3
 802ab5e:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802ab62:	ee74 4a85 	vadd.f32	s9, s9, s10
 802ab66:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802ab6a:	44d8      	add	r8, fp
 802ab6c:	45c1      	cmp	r9, r8
 802ab6e:	ed8e 9a00 	vstr	s18, [lr]
 802ab72:	ed85 1a01 	vstr	s2, [r5, #4]
 802ab76:	449e      	add	lr, r3
 802ab78:	ed8c 8a00 	vstr	s16, [ip]
 802ab7c:	441d      	add	r5, r3
 802ab7e:	ed80 6a00 	vstr	s12, [r0]
 802ab82:	edcc 0a01 	vstr	s1, [ip, #4]
 802ab86:	ed80 4a01 	vstr	s8, [r0, #4]
 802ab8a:	449c      	add	ip, r3
 802ab8c:	ed87 2a00 	vstr	s4, [r7]
 802ab90:	4418      	add	r0, r3
 802ab92:	ed41 3a01 	vstr	s7, [r1, #-4]
 802ab96:	ed42 2a01 	vstr	s5, [r2, #-4]
 802ab9a:	ed86 7a00 	vstr	s14, [r6]
 802ab9e:	ed87 3a01 	vstr	s6, [r7, #4]
 802aba2:	edc1 4a00 	vstr	s9, [r1]
 802aba6:	441f      	add	r7, r3
 802aba8:	edc2 5a00 	vstr	s11, [r2]
 802abac:	4419      	add	r1, r3
 802abae:	edc6 6a01 	vstr	s13, [r6, #4]
 802abb2:	441a      	add	r2, r3
 802abb4:	441e      	add	r6, r3
 802abb6:	f63f af44 	bhi.w	802aa42 <arm_radix8_butterfly_f32+0x66>
 802abba:	990c      	ldr	r1, [sp, #48]	; 0x30
 802abbc:	2907      	cmp	r1, #7
 802abbe:	4620      	mov	r0, r4
 802abc0:	f240 81e9 	bls.w	802af96 <arm_radix8_butterfly_f32+0x5ba>
 802abc4:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802abc8:	193e      	adds	r6, r7, r4
 802abca:	1935      	adds	r5, r6, r4
 802abcc:	9c03      	ldr	r4, [sp, #12]
 802abce:	9000      	str	r0, [sp, #0]
 802abd0:	4622      	mov	r2, r4
 802abd2:	3201      	adds	r2, #1
 802abd4:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802abd8:	9900      	ldr	r1, [sp, #0]
 802abda:	1828      	adds	r0, r5, r0
 802abdc:	eb00 0e01 	add.w	lr, r0, r1
 802abe0:	990c      	ldr	r1, [sp, #48]	; 0x30
 802abe2:	440a      	add	r2, r1
 802abe4:	eb04 0c01 	add.w	ip, r4, r1
 802abe8:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802abec:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802abf0:	9a00      	ldr	r2, [sp, #0]
 802abf2:	940f      	str	r4, [sp, #60]	; 0x3c
 802abf4:	00ed      	lsls	r5, r5, #3
 802abf6:	9511      	str	r5, [sp, #68]	; 0x44
 802abf8:	00d5      	lsls	r5, r2, #3
 802abfa:	950d      	str	r5, [sp, #52]	; 0x34
 802abfc:	9d01      	ldr	r5, [sp, #4]
 802abfe:	3508      	adds	r5, #8
 802ac00:	9516      	str	r5, [sp, #88]	; 0x58
 802ac02:	9d02      	ldr	r5, [sp, #8]
 802ac04:	3508      	adds	r5, #8
 802ac06:	0114      	lsls	r4, r2, #4
 802ac08:	9517      	str	r5, [sp, #92]	; 0x5c
 802ac0a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802ac0c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802ac0e:	940e      	str	r4, [sp, #56]	; 0x38
 802ac10:	00c0      	lsls	r0, r0, #3
 802ac12:	9010      	str	r0, [sp, #64]	; 0x40
 802ac14:	18aa      	adds	r2, r5, r2
 802ac16:	9207      	str	r2, [sp, #28]
 802ac18:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802ac1a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802ac1c:	18aa      	adds	r2, r5, r2
 802ac1e:	9208      	str	r2, [sp, #32]
 802ac20:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802ac22:	18aa      	adds	r2, r5, r2
 802ac24:	9209      	str	r2, [sp, #36]	; 0x24
 802ac26:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802ac2a:	f10e 0204 	add.w	r2, lr, #4
 802ac2e:	920a      	str	r2, [sp, #40]	; 0x28
 802ac30:	00c9      	lsls	r1, r1, #3
 802ac32:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802ac34:	310c      	adds	r1, #12
 802ac36:	00f6      	lsls	r6, r6, #3
 802ac38:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802ac3c:	9114      	str	r1, [sp, #80]	; 0x50
 802ac3e:	18a9      	adds	r1, r5, r2
 802ac40:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802ac42:	9612      	str	r6, [sp, #72]	; 0x48
 802ac44:	00ff      	lsls	r7, r7, #3
 802ac46:	19ae      	adds	r6, r5, r6
 802ac48:	3008      	adds	r0, #8
 802ac4a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802ac4e:	9606      	str	r6, [sp, #24]
 802ac50:	9019      	str	r0, [sp, #100]	; 0x64
 802ac52:	18aa      	adds	r2, r5, r2
 802ac54:	0164      	lsls	r4, r4, #5
 802ac56:	19ee      	adds	r6, r5, r7
 802ac58:	f10c 000c 	add.w	r0, ip, #12
 802ac5c:	9713      	str	r7, [sp, #76]	; 0x4c
 802ac5e:	9604      	str	r6, [sp, #16]
 802ac60:	9015      	str	r0, [sp, #84]	; 0x54
 802ac62:	9103      	str	r1, [sp, #12]
 802ac64:	9205      	str	r2, [sp, #20]
 802ac66:	f104 0208 	add.w	r2, r4, #8
 802ac6a:	9218      	str	r2, [sp, #96]	; 0x60
 802ac6c:	f04f 0801 	mov.w	r8, #1
 802ac70:	2200      	movs	r2, #0
 802ac72:	f102 0108 	add.w	r1, r2, #8
 802ac76:	460f      	mov	r7, r1
 802ac78:	910b      	str	r1, [sp, #44]	; 0x2c
 802ac7a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802ac7c:	188e      	adds	r6, r1, r2
 802ac7e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802ac80:	188d      	adds	r5, r1, r2
 802ac82:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802ac84:	188c      	adds	r4, r1, r2
 802ac86:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ac88:	1888      	adds	r0, r1, r2
 802ac8a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802ac8c:	eb01 0c02 	add.w	ip, r1, r2
 802ac90:	9915      	ldr	r1, [sp, #84]	; 0x54
 802ac92:	440a      	add	r2, r1
 802ac94:	9903      	ldr	r1, [sp, #12]
 802ac96:	edd1 fa00 	vldr	s31, [r1]
 802ac9a:	9905      	ldr	r1, [sp, #20]
 802ac9c:	ed91 fa00 	vldr	s30, [r1]
 802aca0:	9904      	ldr	r1, [sp, #16]
 802aca2:	edd1 ea00 	vldr	s29, [r1]
 802aca6:	9906      	ldr	r1, [sp, #24]
 802aca8:	ed91 ea00 	vldr	s28, [r1]
 802acac:	9909      	ldr	r1, [sp, #36]	; 0x24
 802acae:	edd1 da00 	vldr	s27, [r1]
 802acb2:	9908      	ldr	r1, [sp, #32]
 802acb4:	ed91 da00 	vldr	s26, [r1]
 802acb8:	9907      	ldr	r1, [sp, #28]
 802acba:	edd1 ca00 	vldr	s25, [r1]
 802acbe:	9903      	ldr	r1, [sp, #12]
 802acc0:	ed91 ca01 	vldr	s24, [r1, #4]
 802acc4:	9905      	ldr	r1, [sp, #20]
 802acc6:	edd1 ba01 	vldr	s23, [r1, #4]
 802acca:	9904      	ldr	r1, [sp, #16]
 802accc:	edd1 aa01 	vldr	s21, [r1, #4]
 802acd0:	9906      	ldr	r1, [sp, #24]
 802acd2:	ed91 aa01 	vldr	s20, [r1, #4]
 802acd6:	9909      	ldr	r1, [sp, #36]	; 0x24
 802acd8:	edd1 7a01 	vldr	s15, [r1, #4]
 802acdc:	9908      	ldr	r1, [sp, #32]
 802acde:	edcd 7a00 	vstr	s15, [sp]
 802ace2:	edd1 7a01 	vldr	s15, [r1, #4]
 802ace6:	9907      	ldr	r1, [sp, #28]
 802ace8:	edcd 7a01 	vstr	s15, [sp, #4]
 802acec:	edd1 7a01 	vldr	s15, [r1, #4]
 802acf0:	eb0a 0e07 	add.w	lr, sl, r7
 802acf4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802acf6:	edcd 7a02 	vstr	s15, [sp, #8]
 802acfa:	eb0c 010a 	add.w	r1, ip, sl
 802acfe:	4456      	add	r6, sl
 802ad00:	4455      	add	r5, sl
 802ad02:	4454      	add	r4, sl
 802ad04:	4450      	add	r0, sl
 802ad06:	4452      	add	r2, sl
 802ad08:	46c4      	mov	ip, r8
 802ad0a:	e001      	b.n	802ad10 <arm_radix8_butterfly_f32+0x334>
 802ad0c:	3f3504f3 	.word	0x3f3504f3
 802ad10:	ed96 5a00 	vldr	s10, [r6]
 802ad14:	ed52 9a01 	vldr	s19, [r2, #-4]
 802ad18:	ed11 6a01 	vldr	s12, [r1, #-4]
 802ad1c:	edd0 7a00 	vldr	s15, [r0]
 802ad20:	ed17 7a01 	vldr	s14, [r7, #-4]
 802ad24:	edde 3a00 	vldr	s7, [lr]
 802ad28:	ed94 3a00 	vldr	s6, [r4]
 802ad2c:	ed95 2a00 	vldr	s4, [r5]
 802ad30:	ed9e 0a01 	vldr	s0, [lr, #4]
 802ad34:	ee33 8a85 	vadd.f32	s16, s7, s10
 802ad38:	ee32 1a06 	vadd.f32	s2, s4, s12
 802ad3c:	ee33 4a29 	vadd.f32	s8, s6, s19
 802ad40:	ee77 4a87 	vadd.f32	s9, s15, s14
 802ad44:	ee78 1a04 	vadd.f32	s3, s16, s8
 802ad48:	ee71 6a24 	vadd.f32	s13, s2, s9
 802ad4c:	ee32 2a46 	vsub.f32	s4, s4, s12
 802ad50:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802ad54:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ad58:	ed8e 6a00 	vstr	s12, [lr]
 802ad5c:	edd0 8a01 	vldr	s17, [r0, #4]
 802ad60:	ed95 9a01 	vldr	s18, [r5, #4]
 802ad64:	edd1 2a00 	vldr	s5, [r1]
 802ad68:	ed97 7a00 	vldr	s14, [r7]
 802ad6c:	edd4 0a01 	vldr	s1, [r4, #4]
 802ad70:	ed96 6a01 	vldr	s12, [r6, #4]
 802ad74:	edd2 5a00 	vldr	s11, [r2]
 802ad78:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802ad7c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ad80:	ee39 5a62 	vsub.f32	s10, s18, s5
 802ad84:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802ad88:	ee38 4a44 	vsub.f32	s8, s16, s8
 802ad8c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802ad90:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802ad94:	ee79 2a22 	vadd.f32	s5, s18, s5
 802ad98:	ee75 8a69 	vsub.f32	s17, s10, s19
 802ad9c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802ada0:	ee35 5a29 	vadd.f32	s10, s10, s19
 802ada4:	ee72 7a67 	vsub.f32	s15, s4, s15
 802ada8:	ee30 2a06 	vadd.f32	s4, s0, s12
 802adac:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802adb0:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802adb4:	ee32 9a08 	vadd.f32	s18, s4, s16
 802adb8:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802adbc:	ee32 2a48 	vsub.f32	s4, s4, s16
 802adc0:	ee71 4a64 	vsub.f32	s9, s2, s9
 802adc4:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802adc8:	ee32 1a87 	vadd.f32	s2, s5, s14
 802adcc:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802add0:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802add4:	ee30 6a46 	vsub.f32	s12, s0, s12
 802add8:	ee73 0a29 	vadd.f32	s1, s6, s19
 802addc:	ee36 0a28 	vadd.f32	s0, s12, s17
 802ade0:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ade4:	ee32 7a64 	vsub.f32	s14, s4, s9
 802ade8:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802adec:	ee36 6a68 	vsub.f32	s12, s12, s17
 802adf0:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802adf4:	ee75 8a85 	vadd.f32	s17, s11, s10
 802adf8:	ee74 3a22 	vadd.f32	s7, s8, s5
 802adfc:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802ae00:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802ae04:	ee79 1a41 	vsub.f32	s3, s18, s2
 802ae08:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802ae0c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802ae10:	ee74 2a62 	vsub.f32	s5, s8, s5
 802ae14:	ee72 4a24 	vadd.f32	s9, s4, s9
 802ae18:	ee30 4a60 	vsub.f32	s8, s0, s1
 802ae1c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802ae20:	ee30 0a20 	vadd.f32	s0, s0, s1
 802ae24:	ee77 9a85 	vadd.f32	s19, s15, s10
 802ae28:	ee36 6a03 	vadd.f32	s12, s12, s6
 802ae2c:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802ae30:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802ae34:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802ae38:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802ae3c:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802ae40:	ee39 1a01 	vadd.f32	s2, s18, s2
 802ae44:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802ae48:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802ae4c:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802ae50:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802ae54:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802ae58:	ee35 3a03 	vadd.f32	s6, s10, s6
 802ae5c:	ee72 6a66 	vsub.f32	s13, s4, s13
 802ae60:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802ae64:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802ae68:	ed9d 4a02 	vldr	s8, [sp, #8]
 802ae6c:	ed8e 1a01 	vstr	s2, [lr, #4]
 802ae70:	ee77 3a63 	vsub.f32	s7, s14, s7
 802ae74:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802ae78:	ed9d 7a01 	vldr	s14, [sp, #4]
 802ae7c:	ed86 3a00 	vstr	s6, [r6]
 802ae80:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ae84:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ae88:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ae8c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802ae90:	ee67 2a22 	vmul.f32	s5, s14, s5
 802ae94:	ee64 1a00 	vmul.f32	s3, s8, s0
 802ae98:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ae9c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802aea0:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802aea4:	ee64 8a28 	vmul.f32	s17, s8, s17
 802aea8:	ed9d 4a00 	vldr	s8, [sp]
 802aeac:	edc6 6a01 	vstr	s13, [r6, #4]
 802aeb0:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802aeb4:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802aeb8:	ee64 9a29 	vmul.f32	s19, s8, s19
 802aebc:	ee24 4a25 	vmul.f32	s8, s8, s11
 802aec0:	ee30 7a87 	vadd.f32	s14, s1, s14
 802aec4:	ee74 4a84 	vadd.f32	s9, s9, s8
 802aec8:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802aecc:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802aed0:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802aed4:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802aed8:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802aedc:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802aee0:	ee75 1a21 	vadd.f32	s3, s10, s3
 802aee4:	ee30 0a68 	vsub.f32	s0, s0, s17
 802aee8:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802aeec:	ee70 0a84 	vadd.f32	s1, s1, s8
 802aef0:	ee36 6a67 	vsub.f32	s12, s12, s15
 802aef4:	44dc      	add	ip, fp
 802aef6:	45e1      	cmp	r9, ip
 802aef8:	ed84 9a00 	vstr	s18, [r4]
 802aefc:	edc4 3a01 	vstr	s7, [r4, #4]
 802af00:	449e      	add	lr, r3
 802af02:	ed02 7a01 	vstr	s14, [r2, #-4]
 802af06:	edc2 2a00 	vstr	s5, [r2]
 802af0a:	441e      	add	r6, r3
 802af0c:	ed85 2a00 	vstr	s4, [r5]
 802af10:	ed85 8a01 	vstr	s16, [r5, #4]
 802af14:	441c      	add	r4, r3
 802af16:	ed47 1a01 	vstr	s3, [r7, #-4]
 802af1a:	ed87 0a00 	vstr	s0, [r7]
 802af1e:	441a      	add	r2, r3
 802af20:	ed41 4a01 	vstr	s9, [r1, #-4]
 802af24:	edc1 9a00 	vstr	s19, [r1]
 802af28:	441d      	add	r5, r3
 802af2a:	edc0 0a00 	vstr	s1, [r0]
 802af2e:	441f      	add	r7, r3
 802af30:	ed80 6a01 	vstr	s12, [r0, #4]
 802af34:	4419      	add	r1, r3
 802af36:	4418      	add	r0, r3
 802af38:	f63f aeea 	bhi.w	802ad10 <arm_radix8_butterfly_f32+0x334>
 802af3c:	9a03      	ldr	r2, [sp, #12]
 802af3e:	990d      	ldr	r1, [sp, #52]	; 0x34
 802af40:	440a      	add	r2, r1
 802af42:	9203      	str	r2, [sp, #12]
 802af44:	990e      	ldr	r1, [sp, #56]	; 0x38
 802af46:	9a05      	ldr	r2, [sp, #20]
 802af48:	440a      	add	r2, r1
 802af4a:	9205      	str	r2, [sp, #20]
 802af4c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802af4e:	9a04      	ldr	r2, [sp, #16]
 802af50:	440a      	add	r2, r1
 802af52:	9204      	str	r2, [sp, #16]
 802af54:	9912      	ldr	r1, [sp, #72]	; 0x48
 802af56:	9a06      	ldr	r2, [sp, #24]
 802af58:	440a      	add	r2, r1
 802af5a:	9206      	str	r2, [sp, #24]
 802af5c:	9911      	ldr	r1, [sp, #68]	; 0x44
 802af5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802af60:	440a      	add	r2, r1
 802af62:	9209      	str	r2, [sp, #36]	; 0x24
 802af64:	9910      	ldr	r1, [sp, #64]	; 0x40
 802af66:	9a08      	ldr	r2, [sp, #32]
 802af68:	440a      	add	r2, r1
 802af6a:	9208      	str	r2, [sp, #32]
 802af6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802af6e:	9a07      	ldr	r2, [sp, #28]
 802af70:	440a      	add	r2, r1
 802af72:	9207      	str	r2, [sp, #28]
 802af74:	990c      	ldr	r1, [sp, #48]	; 0x30
 802af76:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802af78:	f108 0801 	add.w	r8, r8, #1
 802af7c:	3208      	adds	r2, #8
 802af7e:	4588      	cmp	r8, r1
 802af80:	920a      	str	r2, [sp, #40]	; 0x28
 802af82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802af84:	f47f ae75 	bne.w	802ac72 <arm_radix8_butterfly_f32+0x296>
 802af88:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802af8c:	9300      	str	r3, [sp, #0]
 802af8e:	46c3      	mov	fp, r8
 802af90:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802af94:	e532      	b.n	802a9fc <arm_radix8_butterfly_f32+0x20>
 802af96:	b01d      	add	sp, #116	; 0x74
 802af98:	ecbd 8b10 	vpop	{d8-d15}
 802af9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802afa0 <__aeabi_atexit>:
 802afa0:	460b      	mov	r3, r1
 802afa2:	4601      	mov	r1, r0
 802afa4:	4618      	mov	r0, r3
 802afa6:	f000 bef3 	b.w	802bd90 <__cxa_atexit>

0802afaa <_ZdlPvj>:
 802afaa:	f000 b812 	b.w	802afd2 <_ZdlPv>

0802afae <__cxa_guard_acquire>:
 802afae:	6803      	ldr	r3, [r0, #0]
 802afb0:	07db      	lsls	r3, r3, #31
 802afb2:	d406      	bmi.n	802afc2 <__cxa_guard_acquire+0x14>
 802afb4:	7843      	ldrb	r3, [r0, #1]
 802afb6:	b103      	cbz	r3, 802afba <__cxa_guard_acquire+0xc>
 802afb8:	deff      	udf	#255	; 0xff
 802afba:	2301      	movs	r3, #1
 802afbc:	7043      	strb	r3, [r0, #1]
 802afbe:	4618      	mov	r0, r3
 802afc0:	4770      	bx	lr
 802afc2:	2000      	movs	r0, #0
 802afc4:	4770      	bx	lr

0802afc6 <__cxa_guard_release>:
 802afc6:	2301      	movs	r3, #1
 802afc8:	6003      	str	r3, [r0, #0]
 802afca:	4770      	bx	lr

0802afcc <__cxa_pure_virtual>:
 802afcc:	b508      	push	{r3, lr}
 802afce:	f000 f80f 	bl	802aff0 <_ZSt9terminatev>

0802afd2 <_ZdlPv>:
 802afd2:	f000 be29 	b.w	802bc28 <free>

0802afd6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802afd6:	b508      	push	{r3, lr}
 802afd8:	4780      	blx	r0
 802afda:	f000 fdf1 	bl	802bbc0 <abort>
	...

0802afe0 <_ZSt13get_terminatev>:
 802afe0:	4b02      	ldr	r3, [pc, #8]	; (802afec <_ZSt13get_terminatev+0xc>)
 802afe2:	6818      	ldr	r0, [r3, #0]
 802afe4:	f3bf 8f5b 	dmb	ish
 802afe8:	4770      	bx	lr
 802afea:	bf00      	nop
 802afec:	20000108 	.word	0x20000108

0802aff0 <_ZSt9terminatev>:
 802aff0:	b508      	push	{r3, lr}
 802aff2:	f7ff fff5 	bl	802afe0 <_ZSt13get_terminatev>
 802aff6:	f7ff ffee 	bl	802afd6 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802affc <sqrtf>:
 802affc:	b508      	push	{r3, lr}
 802affe:	ed2d 8b02 	vpush	{d8}
 802b002:	eeb0 8a40 	vmov.f32	s16, s0
 802b006:	f000 f8a1 	bl	802b14c <__ieee754_sqrtf>
 802b00a:	eeb4 8a48 	vcmp.f32	s16, s16
 802b00e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b012:	d60c      	bvs.n	802b02e <sqrtf+0x32>
 802b014:	eddf 8a07 	vldr	s17, [pc, #28]	; 802b034 <sqrtf+0x38>
 802b018:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802b01c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b020:	d505      	bpl.n	802b02e <sqrtf+0x32>
 802b022:	f001 f8d3 	bl	802c1cc <__errno>
 802b026:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802b02a:	2321      	movs	r3, #33	; 0x21
 802b02c:	6003      	str	r3, [r0, #0]
 802b02e:	ecbd 8b02 	vpop	{d8}
 802b032:	bd08      	pop	{r3, pc}
 802b034:	00000000 	.word	0x00000000

0802b038 <cosf>:
 802b038:	ee10 3a10 	vmov	r3, s0
 802b03c:	b507      	push	{r0, r1, r2, lr}
 802b03e:	4a1e      	ldr	r2, [pc, #120]	; (802b0b8 <cosf+0x80>)
 802b040:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b044:	4293      	cmp	r3, r2
 802b046:	dc06      	bgt.n	802b056 <cosf+0x1e>
 802b048:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802b0bc <cosf+0x84>
 802b04c:	b003      	add	sp, #12
 802b04e:	f85d eb04 	ldr.w	lr, [sp], #4
 802b052:	f000 b903 	b.w	802b25c <__kernel_cosf>
 802b056:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802b05a:	db04      	blt.n	802b066 <cosf+0x2e>
 802b05c:	ee30 0a40 	vsub.f32	s0, s0, s0
 802b060:	b003      	add	sp, #12
 802b062:	f85d fb04 	ldr.w	pc, [sp], #4
 802b066:	4668      	mov	r0, sp
 802b068:	f000 f99e 	bl	802b3a8 <__ieee754_rem_pio2f>
 802b06c:	f000 0003 	and.w	r0, r0, #3
 802b070:	2801      	cmp	r0, #1
 802b072:	d009      	beq.n	802b088 <cosf+0x50>
 802b074:	2802      	cmp	r0, #2
 802b076:	d010      	beq.n	802b09a <cosf+0x62>
 802b078:	b9b0      	cbnz	r0, 802b0a8 <cosf+0x70>
 802b07a:	eddd 0a01 	vldr	s1, [sp, #4]
 802b07e:	ed9d 0a00 	vldr	s0, [sp]
 802b082:	f000 f8eb 	bl	802b25c <__kernel_cosf>
 802b086:	e7eb      	b.n	802b060 <cosf+0x28>
 802b088:	eddd 0a01 	vldr	s1, [sp, #4]
 802b08c:	ed9d 0a00 	vldr	s0, [sp]
 802b090:	f000 f942 	bl	802b318 <__kernel_sinf>
 802b094:	eeb1 0a40 	vneg.f32	s0, s0
 802b098:	e7e2      	b.n	802b060 <cosf+0x28>
 802b09a:	eddd 0a01 	vldr	s1, [sp, #4]
 802b09e:	ed9d 0a00 	vldr	s0, [sp]
 802b0a2:	f000 f8db 	bl	802b25c <__kernel_cosf>
 802b0a6:	e7f5      	b.n	802b094 <cosf+0x5c>
 802b0a8:	eddd 0a01 	vldr	s1, [sp, #4]
 802b0ac:	ed9d 0a00 	vldr	s0, [sp]
 802b0b0:	2001      	movs	r0, #1
 802b0b2:	f000 f931 	bl	802b318 <__kernel_sinf>
 802b0b6:	e7d3      	b.n	802b060 <cosf+0x28>
 802b0b8:	3f490fd8 	.word	0x3f490fd8
 802b0bc:	00000000 	.word	0x00000000

0802b0c0 <sinf>:
 802b0c0:	ee10 3a10 	vmov	r3, s0
 802b0c4:	b507      	push	{r0, r1, r2, lr}
 802b0c6:	4a1f      	ldr	r2, [pc, #124]	; (802b144 <sinf+0x84>)
 802b0c8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b0cc:	4293      	cmp	r3, r2
 802b0ce:	dc07      	bgt.n	802b0e0 <sinf+0x20>
 802b0d0:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802b148 <sinf+0x88>
 802b0d4:	2000      	movs	r0, #0
 802b0d6:	b003      	add	sp, #12
 802b0d8:	f85d eb04 	ldr.w	lr, [sp], #4
 802b0dc:	f000 b91c 	b.w	802b318 <__kernel_sinf>
 802b0e0:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802b0e4:	db04      	blt.n	802b0f0 <sinf+0x30>
 802b0e6:	ee30 0a40 	vsub.f32	s0, s0, s0
 802b0ea:	b003      	add	sp, #12
 802b0ec:	f85d fb04 	ldr.w	pc, [sp], #4
 802b0f0:	4668      	mov	r0, sp
 802b0f2:	f000 f959 	bl	802b3a8 <__ieee754_rem_pio2f>
 802b0f6:	f000 0003 	and.w	r0, r0, #3
 802b0fa:	2801      	cmp	r0, #1
 802b0fc:	d00a      	beq.n	802b114 <sinf+0x54>
 802b0fe:	2802      	cmp	r0, #2
 802b100:	d00f      	beq.n	802b122 <sinf+0x62>
 802b102:	b9c0      	cbnz	r0, 802b136 <sinf+0x76>
 802b104:	eddd 0a01 	vldr	s1, [sp, #4]
 802b108:	ed9d 0a00 	vldr	s0, [sp]
 802b10c:	2001      	movs	r0, #1
 802b10e:	f000 f903 	bl	802b318 <__kernel_sinf>
 802b112:	e7ea      	b.n	802b0ea <sinf+0x2a>
 802b114:	eddd 0a01 	vldr	s1, [sp, #4]
 802b118:	ed9d 0a00 	vldr	s0, [sp]
 802b11c:	f000 f89e 	bl	802b25c <__kernel_cosf>
 802b120:	e7e3      	b.n	802b0ea <sinf+0x2a>
 802b122:	eddd 0a01 	vldr	s1, [sp, #4]
 802b126:	ed9d 0a00 	vldr	s0, [sp]
 802b12a:	2001      	movs	r0, #1
 802b12c:	f000 f8f4 	bl	802b318 <__kernel_sinf>
 802b130:	eeb1 0a40 	vneg.f32	s0, s0
 802b134:	e7d9      	b.n	802b0ea <sinf+0x2a>
 802b136:	eddd 0a01 	vldr	s1, [sp, #4]
 802b13a:	ed9d 0a00 	vldr	s0, [sp]
 802b13e:	f000 f88d 	bl	802b25c <__kernel_cosf>
 802b142:	e7f5      	b.n	802b130 <sinf+0x70>
 802b144:	3f490fd8 	.word	0x3f490fd8
 802b148:	00000000 	.word	0x00000000

0802b14c <__ieee754_sqrtf>:
 802b14c:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802b150:	4770      	bx	lr
	...

0802b154 <ceilf>:
 802b154:	ee10 3a10 	vmov	r3, s0
 802b158:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b15c:	3a7f      	subs	r2, #127	; 0x7f
 802b15e:	2a16      	cmp	r2, #22
 802b160:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802b164:	dc2a      	bgt.n	802b1bc <ceilf+0x68>
 802b166:	2a00      	cmp	r2, #0
 802b168:	da11      	bge.n	802b18e <ceilf+0x3a>
 802b16a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b1d0 <ceilf+0x7c>
 802b16e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b172:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b17a:	dd05      	ble.n	802b188 <ceilf+0x34>
 802b17c:	2b00      	cmp	r3, #0
 802b17e:	db23      	blt.n	802b1c8 <ceilf+0x74>
 802b180:	2900      	cmp	r1, #0
 802b182:	bf18      	it	ne
 802b184:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802b188:	ee00 3a10 	vmov	s0, r3
 802b18c:	4770      	bx	lr
 802b18e:	4911      	ldr	r1, [pc, #68]	; (802b1d4 <ceilf+0x80>)
 802b190:	4111      	asrs	r1, r2
 802b192:	420b      	tst	r3, r1
 802b194:	d0fa      	beq.n	802b18c <ceilf+0x38>
 802b196:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b1d0 <ceilf+0x7c>
 802b19a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b19e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b1a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1a6:	ddef      	ble.n	802b188 <ceilf+0x34>
 802b1a8:	2b00      	cmp	r3, #0
 802b1aa:	bfc2      	ittt	gt
 802b1ac:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802b1b0:	fa40 f202 	asrgt.w	r2, r0, r2
 802b1b4:	189b      	addgt	r3, r3, r2
 802b1b6:	ea23 0301 	bic.w	r3, r3, r1
 802b1ba:	e7e5      	b.n	802b188 <ceilf+0x34>
 802b1bc:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b1c0:	d3e4      	bcc.n	802b18c <ceilf+0x38>
 802b1c2:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b1c6:	4770      	bx	lr
 802b1c8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802b1cc:	e7dc      	b.n	802b188 <ceilf+0x34>
 802b1ce:	bf00      	nop
 802b1d0:	7149f2ca 	.word	0x7149f2ca
 802b1d4:	007fffff 	.word	0x007fffff

0802b1d8 <floorf>:
 802b1d8:	ee10 3a10 	vmov	r3, s0
 802b1dc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b1e0:	3a7f      	subs	r2, #127	; 0x7f
 802b1e2:	2a16      	cmp	r2, #22
 802b1e4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802b1e8:	dc2a      	bgt.n	802b240 <floorf+0x68>
 802b1ea:	2a00      	cmp	r2, #0
 802b1ec:	da11      	bge.n	802b212 <floorf+0x3a>
 802b1ee:	eddf 7a18 	vldr	s15, [pc, #96]	; 802b250 <floorf+0x78>
 802b1f2:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b1f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b1fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b1fe:	dd05      	ble.n	802b20c <floorf+0x34>
 802b200:	2b00      	cmp	r3, #0
 802b202:	da23      	bge.n	802b24c <floorf+0x74>
 802b204:	4a13      	ldr	r2, [pc, #76]	; (802b254 <floorf+0x7c>)
 802b206:	2900      	cmp	r1, #0
 802b208:	bf18      	it	ne
 802b20a:	4613      	movne	r3, r2
 802b20c:	ee00 3a10 	vmov	s0, r3
 802b210:	4770      	bx	lr
 802b212:	4911      	ldr	r1, [pc, #68]	; (802b258 <floorf+0x80>)
 802b214:	4111      	asrs	r1, r2
 802b216:	420b      	tst	r3, r1
 802b218:	d0fa      	beq.n	802b210 <floorf+0x38>
 802b21a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802b250 <floorf+0x78>
 802b21e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b222:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b226:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b22a:	ddef      	ble.n	802b20c <floorf+0x34>
 802b22c:	2b00      	cmp	r3, #0
 802b22e:	bfbe      	ittt	lt
 802b230:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802b234:	fa40 f202 	asrlt.w	r2, r0, r2
 802b238:	189b      	addlt	r3, r3, r2
 802b23a:	ea23 0301 	bic.w	r3, r3, r1
 802b23e:	e7e5      	b.n	802b20c <floorf+0x34>
 802b240:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b244:	d3e4      	bcc.n	802b210 <floorf+0x38>
 802b246:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b24a:	4770      	bx	lr
 802b24c:	2300      	movs	r3, #0
 802b24e:	e7dd      	b.n	802b20c <floorf+0x34>
 802b250:	7149f2ca 	.word	0x7149f2ca
 802b254:	bf800000 	.word	0xbf800000
 802b258:	007fffff 	.word	0x007fffff

0802b25c <__kernel_cosf>:
 802b25c:	ee10 3a10 	vmov	r3, s0
 802b260:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b264:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b268:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802b26c:	da05      	bge.n	802b27a <__kernel_cosf+0x1e>
 802b26e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b272:	ee17 2a90 	vmov	r2, s15
 802b276:	2a00      	cmp	r2, #0
 802b278:	d03b      	beq.n	802b2f2 <__kernel_cosf+0x96>
 802b27a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b27e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b2f8 <__kernel_cosf+0x9c>
 802b282:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802b2fc <__kernel_cosf+0xa0>
 802b286:	4a1e      	ldr	r2, [pc, #120]	; (802b300 <__kernel_cosf+0xa4>)
 802b288:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b28c:	4293      	cmp	r3, r2
 802b28e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802b304 <__kernel_cosf+0xa8>
 802b292:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b296:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802b308 <__kernel_cosf+0xac>
 802b29a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b29e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802b30c <__kernel_cosf+0xb0>
 802b2a2:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b2a6:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802b310 <__kernel_cosf+0xb4>
 802b2aa:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b2ae:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802b2b2:	ee26 6a07 	vmul.f32	s12, s12, s14
 802b2b6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b2ba:	eee7 0a06 	vfma.f32	s1, s14, s12
 802b2be:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b2c2:	dc04      	bgt.n	802b2ce <__kernel_cosf+0x72>
 802b2c4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b2c8:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802b2cc:	4770      	bx	lr
 802b2ce:	4a11      	ldr	r2, [pc, #68]	; (802b314 <__kernel_cosf+0xb8>)
 802b2d0:	4293      	cmp	r3, r2
 802b2d2:	bfda      	itte	le
 802b2d4:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802b2d8:	ee07 3a10 	vmovle	s14, r3
 802b2dc:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802b2e0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b2e4:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802b2e8:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b2ec:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b2f0:	4770      	bx	lr
 802b2f2:	eeb0 0a66 	vmov.f32	s0, s13
 802b2f6:	4770      	bx	lr
 802b2f8:	ad47d74e 	.word	0xad47d74e
 802b2fc:	310f74f6 	.word	0x310f74f6
 802b300:	3e999999 	.word	0x3e999999
 802b304:	b493f27c 	.word	0xb493f27c
 802b308:	37d00d01 	.word	0x37d00d01
 802b30c:	bab60b61 	.word	0xbab60b61
 802b310:	3d2aaaab 	.word	0x3d2aaaab
 802b314:	3f480000 	.word	0x3f480000

0802b318 <__kernel_sinf>:
 802b318:	ee10 3a10 	vmov	r3, s0
 802b31c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b320:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b324:	da04      	bge.n	802b330 <__kernel_sinf+0x18>
 802b326:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b32a:	ee17 3a90 	vmov	r3, s15
 802b32e:	b35b      	cbz	r3, 802b388 <__kernel_sinf+0x70>
 802b330:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b334:	eddf 7a15 	vldr	s15, [pc, #84]	; 802b38c <__kernel_sinf+0x74>
 802b338:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802b390 <__kernel_sinf+0x78>
 802b33c:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b340:	eddf 7a14 	vldr	s15, [pc, #80]	; 802b394 <__kernel_sinf+0x7c>
 802b344:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b348:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802b398 <__kernel_sinf+0x80>
 802b34c:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b350:	eddf 7a12 	vldr	s15, [pc, #72]	; 802b39c <__kernel_sinf+0x84>
 802b354:	ee60 6a07 	vmul.f32	s13, s0, s14
 802b358:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b35c:	b930      	cbnz	r0, 802b36c <__kernel_sinf+0x54>
 802b35e:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802b3a0 <__kernel_sinf+0x88>
 802b362:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b366:	eea6 0a26 	vfma.f32	s0, s12, s13
 802b36a:	4770      	bx	lr
 802b36c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802b370:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802b374:	eee0 7a86 	vfma.f32	s15, s1, s12
 802b378:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802b37c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802b3a4 <__kernel_sinf+0x8c>
 802b380:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802b384:	ee30 0a60 	vsub.f32	s0, s0, s1
 802b388:	4770      	bx	lr
 802b38a:	bf00      	nop
 802b38c:	2f2ec9d3 	.word	0x2f2ec9d3
 802b390:	b2d72f34 	.word	0xb2d72f34
 802b394:	3638ef1b 	.word	0x3638ef1b
 802b398:	b9500d01 	.word	0xb9500d01
 802b39c:	3c088889 	.word	0x3c088889
 802b3a0:	be2aaaab 	.word	0xbe2aaaab
 802b3a4:	3e2aaaab 	.word	0x3e2aaaab

0802b3a8 <__ieee754_rem_pio2f>:
 802b3a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b3aa:	ee10 6a10 	vmov	r6, s0
 802b3ae:	4b86      	ldr	r3, [pc, #536]	; (802b5c8 <__ieee754_rem_pio2f+0x220>)
 802b3b0:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802b3b4:	429d      	cmp	r5, r3
 802b3b6:	b087      	sub	sp, #28
 802b3b8:	4604      	mov	r4, r0
 802b3ba:	dc05      	bgt.n	802b3c8 <__ieee754_rem_pio2f+0x20>
 802b3bc:	2300      	movs	r3, #0
 802b3be:	ed80 0a00 	vstr	s0, [r0]
 802b3c2:	6043      	str	r3, [r0, #4]
 802b3c4:	2000      	movs	r0, #0
 802b3c6:	e020      	b.n	802b40a <__ieee754_rem_pio2f+0x62>
 802b3c8:	4b80      	ldr	r3, [pc, #512]	; (802b5cc <__ieee754_rem_pio2f+0x224>)
 802b3ca:	429d      	cmp	r5, r3
 802b3cc:	dc38      	bgt.n	802b440 <__ieee754_rem_pio2f+0x98>
 802b3ce:	2e00      	cmp	r6, #0
 802b3d0:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802b5d0 <__ieee754_rem_pio2f+0x228>
 802b3d4:	4b7f      	ldr	r3, [pc, #508]	; (802b5d4 <__ieee754_rem_pio2f+0x22c>)
 802b3d6:	f025 050f 	bic.w	r5, r5, #15
 802b3da:	dd18      	ble.n	802b40e <__ieee754_rem_pio2f+0x66>
 802b3dc:	429d      	cmp	r5, r3
 802b3de:	ee70 7a47 	vsub.f32	s15, s0, s14
 802b3e2:	bf09      	itett	eq
 802b3e4:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802b5d8 <__ieee754_rem_pio2f+0x230>
 802b3e8:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802b5dc <__ieee754_rem_pio2f+0x234>
 802b3ec:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802b3f0:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802b5e0 <__ieee754_rem_pio2f+0x238>
 802b3f4:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802b3f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b3fc:	edc0 6a00 	vstr	s13, [r0]
 802b400:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b404:	edc0 7a01 	vstr	s15, [r0, #4]
 802b408:	2001      	movs	r0, #1
 802b40a:	b007      	add	sp, #28
 802b40c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b40e:	429d      	cmp	r5, r3
 802b410:	ee70 7a07 	vadd.f32	s15, s0, s14
 802b414:	bf09      	itett	eq
 802b416:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802b5d8 <__ieee754_rem_pio2f+0x230>
 802b41a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802b5dc <__ieee754_rem_pio2f+0x234>
 802b41e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802b422:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802b5e0 <__ieee754_rem_pio2f+0x238>
 802b426:	ee77 6a87 	vadd.f32	s13, s15, s14
 802b42a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b42e:	edc0 6a00 	vstr	s13, [r0]
 802b432:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b436:	edc0 7a01 	vstr	s15, [r0, #4]
 802b43a:	f04f 30ff 	mov.w	r0, #4294967295
 802b43e:	e7e4      	b.n	802b40a <__ieee754_rem_pio2f+0x62>
 802b440:	4b68      	ldr	r3, [pc, #416]	; (802b5e4 <__ieee754_rem_pio2f+0x23c>)
 802b442:	429d      	cmp	r5, r3
 802b444:	dc71      	bgt.n	802b52a <__ieee754_rem_pio2f+0x182>
 802b446:	f000 f8db 	bl	802b600 <fabsf>
 802b44a:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802b5e8 <__ieee754_rem_pio2f+0x240>
 802b44e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b452:	eee0 7a07 	vfma.f32	s15, s0, s14
 802b456:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b45a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b45e:	ee17 0a90 	vmov	r0, s15
 802b462:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b5d0 <__ieee754_rem_pio2f+0x228>
 802b466:	eea7 0a67 	vfms.f32	s0, s14, s15
 802b46a:	281f      	cmp	r0, #31
 802b46c:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b5dc <__ieee754_rem_pio2f+0x234>
 802b470:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b474:	eeb1 6a47 	vneg.f32	s12, s14
 802b478:	ee70 6a67 	vsub.f32	s13, s0, s15
 802b47c:	ee16 2a90 	vmov	r2, s13
 802b480:	dc1c      	bgt.n	802b4bc <__ieee754_rem_pio2f+0x114>
 802b482:	495a      	ldr	r1, [pc, #360]	; (802b5ec <__ieee754_rem_pio2f+0x244>)
 802b484:	1e47      	subs	r7, r0, #1
 802b486:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802b48a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802b48e:	428b      	cmp	r3, r1
 802b490:	d014      	beq.n	802b4bc <__ieee754_rem_pio2f+0x114>
 802b492:	6022      	str	r2, [r4, #0]
 802b494:	ed94 7a00 	vldr	s14, [r4]
 802b498:	ee30 0a47 	vsub.f32	s0, s0, s14
 802b49c:	2e00      	cmp	r6, #0
 802b49e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b4a2:	ed84 0a01 	vstr	s0, [r4, #4]
 802b4a6:	dab0      	bge.n	802b40a <__ieee754_rem_pio2f+0x62>
 802b4a8:	eeb1 7a47 	vneg.f32	s14, s14
 802b4ac:	eeb1 0a40 	vneg.f32	s0, s0
 802b4b0:	ed84 7a00 	vstr	s14, [r4]
 802b4b4:	ed84 0a01 	vstr	s0, [r4, #4]
 802b4b8:	4240      	negs	r0, r0
 802b4ba:	e7a6      	b.n	802b40a <__ieee754_rem_pio2f+0x62>
 802b4bc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b4c0:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802b4c4:	2908      	cmp	r1, #8
 802b4c6:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802b4ca:	dde2      	ble.n	802b492 <__ieee754_rem_pio2f+0xea>
 802b4cc:	eddf 5a42 	vldr	s11, [pc, #264]	; 802b5d8 <__ieee754_rem_pio2f+0x230>
 802b4d0:	eef0 6a40 	vmov.f32	s13, s0
 802b4d4:	eee6 6a25 	vfma.f32	s13, s12, s11
 802b4d8:	ee70 7a66 	vsub.f32	s15, s0, s13
 802b4dc:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b4e0:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802b5e0 <__ieee754_rem_pio2f+0x238>
 802b4e4:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802b4e8:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802b4ec:	ee15 2a90 	vmov	r2, s11
 802b4f0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b4f4:	1a5b      	subs	r3, r3, r1
 802b4f6:	2b19      	cmp	r3, #25
 802b4f8:	dc04      	bgt.n	802b504 <__ieee754_rem_pio2f+0x15c>
 802b4fa:	edc4 5a00 	vstr	s11, [r4]
 802b4fe:	eeb0 0a66 	vmov.f32	s0, s13
 802b502:	e7c7      	b.n	802b494 <__ieee754_rem_pio2f+0xec>
 802b504:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802b5f0 <__ieee754_rem_pio2f+0x248>
 802b508:	eeb0 0a66 	vmov.f32	s0, s13
 802b50c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802b510:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802b514:	eddf 6a37 	vldr	s13, [pc, #220]	; 802b5f4 <__ieee754_rem_pio2f+0x24c>
 802b518:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b51c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802b520:	ee30 7a67 	vsub.f32	s14, s0, s15
 802b524:	ed84 7a00 	vstr	s14, [r4]
 802b528:	e7b4      	b.n	802b494 <__ieee754_rem_pio2f+0xec>
 802b52a:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802b52e:	db06      	blt.n	802b53e <__ieee754_rem_pio2f+0x196>
 802b530:	ee70 7a40 	vsub.f32	s15, s0, s0
 802b534:	edc0 7a01 	vstr	s15, [r0, #4]
 802b538:	edc0 7a00 	vstr	s15, [r0]
 802b53c:	e742      	b.n	802b3c4 <__ieee754_rem_pio2f+0x1c>
 802b53e:	15ea      	asrs	r2, r5, #23
 802b540:	3a86      	subs	r2, #134	; 0x86
 802b542:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802b546:	ee07 3a90 	vmov	s15, r3
 802b54a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b54e:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802b5f8 <__ieee754_rem_pio2f+0x250>
 802b552:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b556:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b55a:	ed8d 7a03 	vstr	s14, [sp, #12]
 802b55e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b562:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b566:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b56a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b56e:	ed8d 7a04 	vstr	s14, [sp, #16]
 802b572:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b576:	eef5 7a40 	vcmp.f32	s15, #0.0
 802b57a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b57e:	edcd 7a05 	vstr	s15, [sp, #20]
 802b582:	d11e      	bne.n	802b5c2 <__ieee754_rem_pio2f+0x21a>
 802b584:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802b588:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b58c:	bf14      	ite	ne
 802b58e:	2302      	movne	r3, #2
 802b590:	2301      	moveq	r3, #1
 802b592:	491a      	ldr	r1, [pc, #104]	; (802b5fc <__ieee754_rem_pio2f+0x254>)
 802b594:	9101      	str	r1, [sp, #4]
 802b596:	2102      	movs	r1, #2
 802b598:	9100      	str	r1, [sp, #0]
 802b59a:	a803      	add	r0, sp, #12
 802b59c:	4621      	mov	r1, r4
 802b59e:	f000 f89d 	bl	802b6dc <__kernel_rem_pio2f>
 802b5a2:	2e00      	cmp	r6, #0
 802b5a4:	f6bf af31 	bge.w	802b40a <__ieee754_rem_pio2f+0x62>
 802b5a8:	edd4 7a00 	vldr	s15, [r4]
 802b5ac:	eef1 7a67 	vneg.f32	s15, s15
 802b5b0:	edc4 7a00 	vstr	s15, [r4]
 802b5b4:	edd4 7a01 	vldr	s15, [r4, #4]
 802b5b8:	eef1 7a67 	vneg.f32	s15, s15
 802b5bc:	edc4 7a01 	vstr	s15, [r4, #4]
 802b5c0:	e77a      	b.n	802b4b8 <__ieee754_rem_pio2f+0x110>
 802b5c2:	2303      	movs	r3, #3
 802b5c4:	e7e5      	b.n	802b592 <__ieee754_rem_pio2f+0x1ea>
 802b5c6:	bf00      	nop
 802b5c8:	3f490fd8 	.word	0x3f490fd8
 802b5cc:	4016cbe3 	.word	0x4016cbe3
 802b5d0:	3fc90f80 	.word	0x3fc90f80
 802b5d4:	3fc90fd0 	.word	0x3fc90fd0
 802b5d8:	37354400 	.word	0x37354400
 802b5dc:	37354443 	.word	0x37354443
 802b5e0:	2e85a308 	.word	0x2e85a308
 802b5e4:	43490f80 	.word	0x43490f80
 802b5e8:	3f22f984 	.word	0x3f22f984
 802b5ec:	08043a48 	.word	0x08043a48
 802b5f0:	2e85a300 	.word	0x2e85a300
 802b5f4:	248d3132 	.word	0x248d3132
 802b5f8:	43800000 	.word	0x43800000
 802b5fc:	08043ac8 	.word	0x08043ac8

0802b600 <fabsf>:
 802b600:	ee10 3a10 	vmov	r3, s0
 802b604:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b608:	ee00 3a10 	vmov	s0, r3
 802b60c:	4770      	bx	lr
	...

0802b610 <scalbnf>:
 802b610:	ee10 3a10 	vmov	r3, s0
 802b614:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802b618:	d02b      	beq.n	802b672 <scalbnf+0x62>
 802b61a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802b61e:	d302      	bcc.n	802b626 <scalbnf+0x16>
 802b620:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b624:	4770      	bx	lr
 802b626:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802b62a:	d123      	bne.n	802b674 <scalbnf+0x64>
 802b62c:	4b24      	ldr	r3, [pc, #144]	; (802b6c0 <scalbnf+0xb0>)
 802b62e:	eddf 7a25 	vldr	s15, [pc, #148]	; 802b6c4 <scalbnf+0xb4>
 802b632:	4298      	cmp	r0, r3
 802b634:	ee20 0a27 	vmul.f32	s0, s0, s15
 802b638:	db17      	blt.n	802b66a <scalbnf+0x5a>
 802b63a:	ee10 3a10 	vmov	r3, s0
 802b63e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b642:	3a19      	subs	r2, #25
 802b644:	f24c 3150 	movw	r1, #50000	; 0xc350
 802b648:	4288      	cmp	r0, r1
 802b64a:	dd15      	ble.n	802b678 <scalbnf+0x68>
 802b64c:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b6c8 <scalbnf+0xb8>
 802b650:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802b6cc <scalbnf+0xbc>
 802b654:	ee10 3a10 	vmov	r3, s0
 802b658:	eeb0 7a67 	vmov.f32	s14, s15
 802b65c:	2b00      	cmp	r3, #0
 802b65e:	bfb8      	it	lt
 802b660:	eef0 7a66 	vmovlt.f32	s15, s13
 802b664:	ee27 0a87 	vmul.f32	s0, s15, s14
 802b668:	4770      	bx	lr
 802b66a:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b6d0 <scalbnf+0xc0>
 802b66e:	ee27 0a80 	vmul.f32	s0, s15, s0
 802b672:	4770      	bx	lr
 802b674:	0dd2      	lsrs	r2, r2, #23
 802b676:	e7e5      	b.n	802b644 <scalbnf+0x34>
 802b678:	4410      	add	r0, r2
 802b67a:	28fe      	cmp	r0, #254	; 0xfe
 802b67c:	dce6      	bgt.n	802b64c <scalbnf+0x3c>
 802b67e:	2800      	cmp	r0, #0
 802b680:	dd06      	ble.n	802b690 <scalbnf+0x80>
 802b682:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b686:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b68a:	ee00 3a10 	vmov	s0, r3
 802b68e:	4770      	bx	lr
 802b690:	f110 0f16 	cmn.w	r0, #22
 802b694:	da09      	bge.n	802b6aa <scalbnf+0x9a>
 802b696:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b6d0 <scalbnf+0xc0>
 802b69a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802b6d4 <scalbnf+0xc4>
 802b69e:	ee10 3a10 	vmov	r3, s0
 802b6a2:	eeb0 7a67 	vmov.f32	s14, s15
 802b6a6:	2b00      	cmp	r3, #0
 802b6a8:	e7d9      	b.n	802b65e <scalbnf+0x4e>
 802b6aa:	3019      	adds	r0, #25
 802b6ac:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b6b0:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b6b4:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802b6d8 <scalbnf+0xc8>
 802b6b8:	ee07 3a90 	vmov	s15, r3
 802b6bc:	e7d7      	b.n	802b66e <scalbnf+0x5e>
 802b6be:	bf00      	nop
 802b6c0:	ffff3cb0 	.word	0xffff3cb0
 802b6c4:	4c000000 	.word	0x4c000000
 802b6c8:	7149f2ca 	.word	0x7149f2ca
 802b6cc:	f149f2ca 	.word	0xf149f2ca
 802b6d0:	0da24260 	.word	0x0da24260
 802b6d4:	8da24260 	.word	0x8da24260
 802b6d8:	33000000 	.word	0x33000000

0802b6dc <__kernel_rem_pio2f>:
 802b6dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b6e0:	ed2d 8b04 	vpush	{d8-d9}
 802b6e4:	b0d9      	sub	sp, #356	; 0x164
 802b6e6:	4688      	mov	r8, r1
 802b6e8:	9002      	str	r0, [sp, #8]
 802b6ea:	49b8      	ldr	r1, [pc, #736]	; (802b9cc <__kernel_rem_pio2f+0x2f0>)
 802b6ec:	9866      	ldr	r0, [sp, #408]	; 0x198
 802b6ee:	9301      	str	r3, [sp, #4]
 802b6f0:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802b6f4:	9901      	ldr	r1, [sp, #4]
 802b6f6:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802b6f8:	f101 3bff 	add.w	fp, r1, #4294967295
 802b6fc:	1d11      	adds	r1, r2, #4
 802b6fe:	db25      	blt.n	802b74c <__kernel_rem_pio2f+0x70>
 802b700:	1ed0      	subs	r0, r2, #3
 802b702:	bf48      	it	mi
 802b704:	1d10      	addmi	r0, r2, #4
 802b706:	10c0      	asrs	r0, r0, #3
 802b708:	1c45      	adds	r5, r0, #1
 802b70a:	00e9      	lsls	r1, r5, #3
 802b70c:	eba0 070b 	sub.w	r7, r0, fp
 802b710:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802b714:	9103      	str	r1, [sp, #12]
 802b716:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802b71a:	eb0a 0c0b 	add.w	ip, sl, fp
 802b71e:	ae1c      	add	r6, sp, #112	; 0x70
 802b720:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802b724:	2400      	movs	r4, #0
 802b726:	4564      	cmp	r4, ip
 802b728:	dd12      	ble.n	802b750 <__kernel_rem_pio2f+0x74>
 802b72a:	9901      	ldr	r1, [sp, #4]
 802b72c:	ac1c      	add	r4, sp, #112	; 0x70
 802b72e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802b732:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802b736:	f04f 0c00 	mov.w	ip, #0
 802b73a:	45d4      	cmp	ip, sl
 802b73c:	dc27      	bgt.n	802b78e <__kernel_rem_pio2f+0xb2>
 802b73e:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b742:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802b746:	4627      	mov	r7, r4
 802b748:	2600      	movs	r6, #0
 802b74a:	e016      	b.n	802b77a <__kernel_rem_pio2f+0x9e>
 802b74c:	2000      	movs	r0, #0
 802b74e:	e7db      	b.n	802b708 <__kernel_rem_pio2f+0x2c>
 802b750:	42e7      	cmn	r7, r4
 802b752:	bf5d      	ittte	pl
 802b754:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b758:	ee07 1a90 	vmovpl	s15, r1
 802b75c:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b760:	eef0 7a47 	vmovmi.f32	s15, s14
 802b764:	ece6 7a01 	vstmia	r6!, {s15}
 802b768:	3401      	adds	r4, #1
 802b76a:	e7dc      	b.n	802b726 <__kernel_rem_pio2f+0x4a>
 802b76c:	ecfe 6a01 	vldmia	lr!, {s13}
 802b770:	ed97 7a00 	vldr	s14, [r7]
 802b774:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b778:	3601      	adds	r6, #1
 802b77a:	455e      	cmp	r6, fp
 802b77c:	f1a7 0704 	sub.w	r7, r7, #4
 802b780:	ddf4      	ble.n	802b76c <__kernel_rem_pio2f+0x90>
 802b782:	ece9 7a01 	vstmia	r9!, {s15}
 802b786:	f10c 0c01 	add.w	ip, ip, #1
 802b78a:	3404      	adds	r4, #4
 802b78c:	e7d5      	b.n	802b73a <__kernel_rem_pio2f+0x5e>
 802b78e:	a908      	add	r1, sp, #32
 802b790:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b794:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b798:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b9d8 <__kernel_rem_pio2f+0x2fc>
 802b79c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b9d4 <__kernel_rem_pio2f+0x2f8>
 802b7a0:	9105      	str	r1, [sp, #20]
 802b7a2:	9304      	str	r3, [sp, #16]
 802b7a4:	4656      	mov	r6, sl
 802b7a6:	00b3      	lsls	r3, r6, #2
 802b7a8:	9306      	str	r3, [sp, #24]
 802b7aa:	ab58      	add	r3, sp, #352	; 0x160
 802b7ac:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b7b0:	ac08      	add	r4, sp, #32
 802b7b2:	ab44      	add	r3, sp, #272	; 0x110
 802b7b4:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b7b8:	46a4      	mov	ip, r4
 802b7ba:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b7be:	4637      	mov	r7, r6
 802b7c0:	2f00      	cmp	r7, #0
 802b7c2:	f1a0 0004 	sub.w	r0, r0, #4
 802b7c6:	dc4a      	bgt.n	802b85e <__kernel_rem_pio2f+0x182>
 802b7c8:	4628      	mov	r0, r5
 802b7ca:	9207      	str	r2, [sp, #28]
 802b7cc:	f7ff ff20 	bl	802b610 <scalbnf>
 802b7d0:	eeb0 8a40 	vmov.f32	s16, s0
 802b7d4:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b7d8:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b7dc:	f7ff fcfc 	bl	802b1d8 <floorf>
 802b7e0:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b7e4:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b7e8:	2d00      	cmp	r5, #0
 802b7ea:	9a07      	ldr	r2, [sp, #28]
 802b7ec:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b7f0:	ee17 9a90 	vmov	r9, s15
 802b7f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b7f8:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b7fc:	dd41      	ble.n	802b882 <__kernel_rem_pio2f+0x1a6>
 802b7fe:	f106 3cff 	add.w	ip, r6, #4294967295
 802b802:	ab08      	add	r3, sp, #32
 802b804:	f1c5 0e08 	rsb	lr, r5, #8
 802b808:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b80c:	fa47 f00e 	asr.w	r0, r7, lr
 802b810:	4481      	add	r9, r0
 802b812:	fa00 f00e 	lsl.w	r0, r0, lr
 802b816:	1a3f      	subs	r7, r7, r0
 802b818:	f1c5 0007 	rsb	r0, r5, #7
 802b81c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b820:	4107      	asrs	r7, r0
 802b822:	2f00      	cmp	r7, #0
 802b824:	dd3c      	ble.n	802b8a0 <__kernel_rem_pio2f+0x1c4>
 802b826:	f04f 0e00 	mov.w	lr, #0
 802b82a:	f109 0901 	add.w	r9, r9, #1
 802b82e:	4671      	mov	r1, lr
 802b830:	4576      	cmp	r6, lr
 802b832:	dc67      	bgt.n	802b904 <__kernel_rem_pio2f+0x228>
 802b834:	2d00      	cmp	r5, #0
 802b836:	dd03      	ble.n	802b840 <__kernel_rem_pio2f+0x164>
 802b838:	2d01      	cmp	r5, #1
 802b83a:	d074      	beq.n	802b926 <__kernel_rem_pio2f+0x24a>
 802b83c:	2d02      	cmp	r5, #2
 802b83e:	d07b      	beq.n	802b938 <__kernel_rem_pio2f+0x25c>
 802b840:	2f02      	cmp	r7, #2
 802b842:	d12d      	bne.n	802b8a0 <__kernel_rem_pio2f+0x1c4>
 802b844:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b848:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b84c:	b341      	cbz	r1, 802b8a0 <__kernel_rem_pio2f+0x1c4>
 802b84e:	4628      	mov	r0, r5
 802b850:	9207      	str	r2, [sp, #28]
 802b852:	f7ff fedd 	bl	802b610 <scalbnf>
 802b856:	9a07      	ldr	r2, [sp, #28]
 802b858:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b85c:	e020      	b.n	802b8a0 <__kernel_rem_pio2f+0x1c4>
 802b85e:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b862:	3f01      	subs	r7, #1
 802b864:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b868:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b86c:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b870:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b874:	ecac 0a01 	vstmia	ip!, {s0}
 802b878:	ed90 0a00 	vldr	s0, [r0]
 802b87c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b880:	e79e      	b.n	802b7c0 <__kernel_rem_pio2f+0xe4>
 802b882:	d105      	bne.n	802b890 <__kernel_rem_pio2f+0x1b4>
 802b884:	1e70      	subs	r0, r6, #1
 802b886:	ab08      	add	r3, sp, #32
 802b888:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b88c:	11ff      	asrs	r7, r7, #7
 802b88e:	e7c8      	b.n	802b822 <__kernel_rem_pio2f+0x146>
 802b890:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b894:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b898:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b89c:	da30      	bge.n	802b900 <__kernel_rem_pio2f+0x224>
 802b89e:	2700      	movs	r7, #0
 802b8a0:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b8a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b8a8:	f040 809a 	bne.w	802b9e0 <__kernel_rem_pio2f+0x304>
 802b8ac:	1e74      	subs	r4, r6, #1
 802b8ae:	46a4      	mov	ip, r4
 802b8b0:	2100      	movs	r1, #0
 802b8b2:	45d4      	cmp	ip, sl
 802b8b4:	da47      	bge.n	802b946 <__kernel_rem_pio2f+0x26a>
 802b8b6:	2900      	cmp	r1, #0
 802b8b8:	d063      	beq.n	802b982 <__kernel_rem_pio2f+0x2a6>
 802b8ba:	ab08      	add	r3, sp, #32
 802b8bc:	3d08      	subs	r5, #8
 802b8be:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b8c2:	2b00      	cmp	r3, #0
 802b8c4:	d07f      	beq.n	802b9c6 <__kernel_rem_pio2f+0x2ea>
 802b8c6:	4628      	mov	r0, r5
 802b8c8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b8cc:	f7ff fea0 	bl	802b610 <scalbnf>
 802b8d0:	1c63      	adds	r3, r4, #1
 802b8d2:	aa44      	add	r2, sp, #272	; 0x110
 802b8d4:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b9d8 <__kernel_rem_pio2f+0x2fc>
 802b8d8:	0099      	lsls	r1, r3, #2
 802b8da:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b8de:	4623      	mov	r3, r4
 802b8e0:	2b00      	cmp	r3, #0
 802b8e2:	f280 80ad 	bge.w	802ba40 <__kernel_rem_pio2f+0x364>
 802b8e6:	4623      	mov	r3, r4
 802b8e8:	2b00      	cmp	r3, #0
 802b8ea:	f2c0 80cb 	blt.w	802ba84 <__kernel_rem_pio2f+0x3a8>
 802b8ee:	aa44      	add	r2, sp, #272	; 0x110
 802b8f0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b8f4:	4e36      	ldr	r6, [pc, #216]	; (802b9d0 <__kernel_rem_pio2f+0x2f4>)
 802b8f6:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802b8fa:	2000      	movs	r0, #0
 802b8fc:	1ae2      	subs	r2, r4, r3
 802b8fe:	e0b6      	b.n	802ba6e <__kernel_rem_pio2f+0x392>
 802b900:	2702      	movs	r7, #2
 802b902:	e790      	b.n	802b826 <__kernel_rem_pio2f+0x14a>
 802b904:	6820      	ldr	r0, [r4, #0]
 802b906:	b949      	cbnz	r1, 802b91c <__kernel_rem_pio2f+0x240>
 802b908:	b118      	cbz	r0, 802b912 <__kernel_rem_pio2f+0x236>
 802b90a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b90e:	6020      	str	r0, [r4, #0]
 802b910:	2001      	movs	r0, #1
 802b912:	f10e 0e01 	add.w	lr, lr, #1
 802b916:	3404      	adds	r4, #4
 802b918:	4601      	mov	r1, r0
 802b91a:	e789      	b.n	802b830 <__kernel_rem_pio2f+0x154>
 802b91c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b920:	6020      	str	r0, [r4, #0]
 802b922:	4608      	mov	r0, r1
 802b924:	e7f5      	b.n	802b912 <__kernel_rem_pio2f+0x236>
 802b926:	1e74      	subs	r4, r6, #1
 802b928:	ab08      	add	r3, sp, #32
 802b92a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b92e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b932:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b936:	e783      	b.n	802b840 <__kernel_rem_pio2f+0x164>
 802b938:	1e74      	subs	r4, r6, #1
 802b93a:	ab08      	add	r3, sp, #32
 802b93c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b940:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b944:	e7f5      	b.n	802b932 <__kernel_rem_pio2f+0x256>
 802b946:	ab08      	add	r3, sp, #32
 802b948:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b94c:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b950:	4301      	orrs	r1, r0
 802b952:	e7ae      	b.n	802b8b2 <__kernel_rem_pio2f+0x1d6>
 802b954:	3001      	adds	r0, #1
 802b956:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b95a:	2f00      	cmp	r7, #0
 802b95c:	d0fa      	beq.n	802b954 <__kernel_rem_pio2f+0x278>
 802b95e:	9b06      	ldr	r3, [sp, #24]
 802b960:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b964:	eb0d 0403 	add.w	r4, sp, r3
 802b968:	9b01      	ldr	r3, [sp, #4]
 802b96a:	18f7      	adds	r7, r6, r3
 802b96c:	ab1c      	add	r3, sp, #112	; 0x70
 802b96e:	f106 0c01 	add.w	ip, r6, #1
 802b972:	3c4c      	subs	r4, #76	; 0x4c
 802b974:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b978:	4430      	add	r0, r6
 802b97a:	4560      	cmp	r0, ip
 802b97c:	da04      	bge.n	802b988 <__kernel_rem_pio2f+0x2ac>
 802b97e:	4606      	mov	r6, r0
 802b980:	e711      	b.n	802b7a6 <__kernel_rem_pio2f+0xca>
 802b982:	9c05      	ldr	r4, [sp, #20]
 802b984:	2001      	movs	r0, #1
 802b986:	e7e6      	b.n	802b956 <__kernel_rem_pio2f+0x27a>
 802b988:	9b04      	ldr	r3, [sp, #16]
 802b98a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b98e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b992:	9306      	str	r3, [sp, #24]
 802b994:	ee07 3a90 	vmov	s15, r3
 802b998:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b99c:	2600      	movs	r6, #0
 802b99e:	ece7 7a01 	vstmia	r7!, {s15}
 802b9a2:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802b9a6:	46b9      	mov	r9, r7
 802b9a8:	455e      	cmp	r6, fp
 802b9aa:	dd04      	ble.n	802b9b6 <__kernel_rem_pio2f+0x2da>
 802b9ac:	ece4 7a01 	vstmia	r4!, {s15}
 802b9b0:	f10c 0c01 	add.w	ip, ip, #1
 802b9b4:	e7e1      	b.n	802b97a <__kernel_rem_pio2f+0x29e>
 802b9b6:	ecfe 6a01 	vldmia	lr!, {s13}
 802b9ba:	ed39 7a01 	vldmdb	r9!, {s14}
 802b9be:	3601      	adds	r6, #1
 802b9c0:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b9c4:	e7f0      	b.n	802b9a8 <__kernel_rem_pio2f+0x2cc>
 802b9c6:	3c01      	subs	r4, #1
 802b9c8:	e777      	b.n	802b8ba <__kernel_rem_pio2f+0x1de>
 802b9ca:	bf00      	nop
 802b9cc:	08043e0c 	.word	0x08043e0c
 802b9d0:	08043de0 	.word	0x08043de0
 802b9d4:	43800000 	.word	0x43800000
 802b9d8:	3b800000 	.word	0x3b800000
 802b9dc:	00000000 	.word	0x00000000
 802b9e0:	9b03      	ldr	r3, [sp, #12]
 802b9e2:	eeb0 0a48 	vmov.f32	s0, s16
 802b9e6:	1a98      	subs	r0, r3, r2
 802b9e8:	f7ff fe12 	bl	802b610 <scalbnf>
 802b9ec:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b9d4 <__kernel_rem_pio2f+0x2f8>
 802b9f0:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b9f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b9f8:	db19      	blt.n	802ba2e <__kernel_rem_pio2f+0x352>
 802b9fa:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b9d8 <__kernel_rem_pio2f+0x2fc>
 802b9fe:	ee60 7a27 	vmul.f32	s15, s0, s15
 802ba02:	aa08      	add	r2, sp, #32
 802ba04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ba08:	1c74      	adds	r4, r6, #1
 802ba0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ba0e:	3508      	adds	r5, #8
 802ba10:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802ba14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802ba18:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ba1c:	ee10 3a10 	vmov	r3, s0
 802ba20:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802ba24:	ee17 3a90 	vmov	r3, s15
 802ba28:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802ba2c:	e74b      	b.n	802b8c6 <__kernel_rem_pio2f+0x1ea>
 802ba2e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802ba32:	aa08      	add	r2, sp, #32
 802ba34:	ee10 3a10 	vmov	r3, s0
 802ba38:	4634      	mov	r4, r6
 802ba3a:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802ba3e:	e742      	b.n	802b8c6 <__kernel_rem_pio2f+0x1ea>
 802ba40:	a808      	add	r0, sp, #32
 802ba42:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802ba46:	9001      	str	r0, [sp, #4]
 802ba48:	ee07 0a90 	vmov	s15, r0
 802ba4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802ba50:	3b01      	subs	r3, #1
 802ba52:	ee67 7a80 	vmul.f32	s15, s15, s0
 802ba56:	ee20 0a07 	vmul.f32	s0, s0, s14
 802ba5a:	ed62 7a01 	vstmdb	r2!, {s15}
 802ba5e:	e73f      	b.n	802b8e0 <__kernel_rem_pio2f+0x204>
 802ba60:	ecf6 6a01 	vldmia	r6!, {s13}
 802ba64:	ecb5 7a01 	vldmia	r5!, {s14}
 802ba68:	eee6 7a87 	vfma.f32	s15, s13, s14
 802ba6c:	3001      	adds	r0, #1
 802ba6e:	4550      	cmp	r0, sl
 802ba70:	dc01      	bgt.n	802ba76 <__kernel_rem_pio2f+0x39a>
 802ba72:	4290      	cmp	r0, r2
 802ba74:	ddf4      	ble.n	802ba60 <__kernel_rem_pio2f+0x384>
 802ba76:	a858      	add	r0, sp, #352	; 0x160
 802ba78:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802ba7c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802ba80:	3b01      	subs	r3, #1
 802ba82:	e731      	b.n	802b8e8 <__kernel_rem_pio2f+0x20c>
 802ba84:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802ba86:	2b02      	cmp	r3, #2
 802ba88:	dc09      	bgt.n	802ba9e <__kernel_rem_pio2f+0x3c2>
 802ba8a:	2b00      	cmp	r3, #0
 802ba8c:	dc2b      	bgt.n	802bae6 <__kernel_rem_pio2f+0x40a>
 802ba8e:	d044      	beq.n	802bb1a <__kernel_rem_pio2f+0x43e>
 802ba90:	f009 0007 	and.w	r0, r9, #7
 802ba94:	b059      	add	sp, #356	; 0x164
 802ba96:	ecbd 8b04 	vpop	{d8-d9}
 802ba9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ba9e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802baa0:	2b03      	cmp	r3, #3
 802baa2:	d1f5      	bne.n	802ba90 <__kernel_rem_pio2f+0x3b4>
 802baa4:	aa30      	add	r2, sp, #192	; 0xc0
 802baa6:	1f0b      	subs	r3, r1, #4
 802baa8:	4413      	add	r3, r2
 802baaa:	461a      	mov	r2, r3
 802baac:	4620      	mov	r0, r4
 802baae:	2800      	cmp	r0, #0
 802bab0:	f1a2 0204 	sub.w	r2, r2, #4
 802bab4:	dc52      	bgt.n	802bb5c <__kernel_rem_pio2f+0x480>
 802bab6:	4622      	mov	r2, r4
 802bab8:	2a01      	cmp	r2, #1
 802baba:	f1a3 0304 	sub.w	r3, r3, #4
 802babe:	dc5d      	bgt.n	802bb7c <__kernel_rem_pio2f+0x4a0>
 802bac0:	ab30      	add	r3, sp, #192	; 0xc0
 802bac2:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802bac6:	440b      	add	r3, r1
 802bac8:	2c01      	cmp	r4, #1
 802baca:	dc67      	bgt.n	802bb9c <__kernel_rem_pio2f+0x4c0>
 802bacc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802bad0:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802bad4:	2f00      	cmp	r7, #0
 802bad6:	d167      	bne.n	802bba8 <__kernel_rem_pio2f+0x4cc>
 802bad8:	edc8 6a00 	vstr	s13, [r8]
 802badc:	ed88 7a01 	vstr	s14, [r8, #4]
 802bae0:	edc8 7a02 	vstr	s15, [r8, #8]
 802bae4:	e7d4      	b.n	802ba90 <__kernel_rem_pio2f+0x3b4>
 802bae6:	ab30      	add	r3, sp, #192	; 0xc0
 802bae8:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802baec:	440b      	add	r3, r1
 802baee:	4622      	mov	r2, r4
 802baf0:	2a00      	cmp	r2, #0
 802baf2:	da24      	bge.n	802bb3e <__kernel_rem_pio2f+0x462>
 802baf4:	b34f      	cbz	r7, 802bb4a <__kernel_rem_pio2f+0x46e>
 802baf6:	eef1 7a47 	vneg.f32	s15, s14
 802bafa:	edc8 7a00 	vstr	s15, [r8]
 802bafe:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802bb02:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bb06:	aa31      	add	r2, sp, #196	; 0xc4
 802bb08:	2301      	movs	r3, #1
 802bb0a:	429c      	cmp	r4, r3
 802bb0c:	da20      	bge.n	802bb50 <__kernel_rem_pio2f+0x474>
 802bb0e:	b10f      	cbz	r7, 802bb14 <__kernel_rem_pio2f+0x438>
 802bb10:	eef1 7a67 	vneg.f32	s15, s15
 802bb14:	edc8 7a01 	vstr	s15, [r8, #4]
 802bb18:	e7ba      	b.n	802ba90 <__kernel_rem_pio2f+0x3b4>
 802bb1a:	ab30      	add	r3, sp, #192	; 0xc0
 802bb1c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b9dc <__kernel_rem_pio2f+0x300>
 802bb20:	440b      	add	r3, r1
 802bb22:	2c00      	cmp	r4, #0
 802bb24:	da05      	bge.n	802bb32 <__kernel_rem_pio2f+0x456>
 802bb26:	b10f      	cbz	r7, 802bb2c <__kernel_rem_pio2f+0x450>
 802bb28:	eef1 7a67 	vneg.f32	s15, s15
 802bb2c:	edc8 7a00 	vstr	s15, [r8]
 802bb30:	e7ae      	b.n	802ba90 <__kernel_rem_pio2f+0x3b4>
 802bb32:	ed33 7a01 	vldmdb	r3!, {s14}
 802bb36:	3c01      	subs	r4, #1
 802bb38:	ee77 7a87 	vadd.f32	s15, s15, s14
 802bb3c:	e7f1      	b.n	802bb22 <__kernel_rem_pio2f+0x446>
 802bb3e:	ed73 7a01 	vldmdb	r3!, {s15}
 802bb42:	3a01      	subs	r2, #1
 802bb44:	ee37 7a27 	vadd.f32	s14, s14, s15
 802bb48:	e7d2      	b.n	802baf0 <__kernel_rem_pio2f+0x414>
 802bb4a:	eef0 7a47 	vmov.f32	s15, s14
 802bb4e:	e7d4      	b.n	802bafa <__kernel_rem_pio2f+0x41e>
 802bb50:	ecb2 7a01 	vldmia	r2!, {s14}
 802bb54:	3301      	adds	r3, #1
 802bb56:	ee77 7a87 	vadd.f32	s15, s15, s14
 802bb5a:	e7d6      	b.n	802bb0a <__kernel_rem_pio2f+0x42e>
 802bb5c:	edd2 7a00 	vldr	s15, [r2]
 802bb60:	edd2 6a01 	vldr	s13, [r2, #4]
 802bb64:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bb68:	3801      	subs	r0, #1
 802bb6a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bb6e:	ed82 7a00 	vstr	s14, [r2]
 802bb72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802bb76:	edc2 7a01 	vstr	s15, [r2, #4]
 802bb7a:	e798      	b.n	802baae <__kernel_rem_pio2f+0x3d2>
 802bb7c:	edd3 7a00 	vldr	s15, [r3]
 802bb80:	edd3 6a01 	vldr	s13, [r3, #4]
 802bb84:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802bb88:	3a01      	subs	r2, #1
 802bb8a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802bb8e:	ed83 7a00 	vstr	s14, [r3]
 802bb92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802bb96:	edc3 7a01 	vstr	s15, [r3, #4]
 802bb9a:	e78d      	b.n	802bab8 <__kernel_rem_pio2f+0x3dc>
 802bb9c:	ed33 7a01 	vldmdb	r3!, {s14}
 802bba0:	3c01      	subs	r4, #1
 802bba2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802bba6:	e78f      	b.n	802bac8 <__kernel_rem_pio2f+0x3ec>
 802bba8:	eef1 6a66 	vneg.f32	s13, s13
 802bbac:	eeb1 7a47 	vneg.f32	s14, s14
 802bbb0:	edc8 6a00 	vstr	s13, [r8]
 802bbb4:	ed88 7a01 	vstr	s14, [r8, #4]
 802bbb8:	eef1 7a67 	vneg.f32	s15, s15
 802bbbc:	e790      	b.n	802bae0 <__kernel_rem_pio2f+0x404>
 802bbbe:	bf00      	nop

0802bbc0 <abort>:
 802bbc0:	b508      	push	{r3, lr}
 802bbc2:	2006      	movs	r0, #6
 802bbc4:	f000 fa3a 	bl	802c03c <raise>
 802bbc8:	2001      	movs	r0, #1
 802bbca:	f7d6 f8a1 	bl	8001d10 <_exit>
	...

0802bbd0 <__assert_func>:
 802bbd0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802bbd2:	4614      	mov	r4, r2
 802bbd4:	461a      	mov	r2, r3
 802bbd6:	4b09      	ldr	r3, [pc, #36]	; (802bbfc <__assert_func+0x2c>)
 802bbd8:	681b      	ldr	r3, [r3, #0]
 802bbda:	4605      	mov	r5, r0
 802bbdc:	68d8      	ldr	r0, [r3, #12]
 802bbde:	b14c      	cbz	r4, 802bbf4 <__assert_func+0x24>
 802bbe0:	4b07      	ldr	r3, [pc, #28]	; (802bc00 <__assert_func+0x30>)
 802bbe2:	9100      	str	r1, [sp, #0]
 802bbe4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802bbe8:	4906      	ldr	r1, [pc, #24]	; (802bc04 <__assert_func+0x34>)
 802bbea:	462b      	mov	r3, r5
 802bbec:	f000 f982 	bl	802bef4 <fiprintf>
 802bbf0:	f7ff ffe6 	bl	802bbc0 <abort>
 802bbf4:	4b04      	ldr	r3, [pc, #16]	; (802bc08 <__assert_func+0x38>)
 802bbf6:	461c      	mov	r4, r3
 802bbf8:	e7f3      	b.n	802bbe2 <__assert_func+0x12>
 802bbfa:	bf00      	nop
 802bbfc:	20000164 	.word	0x20000164
 802bc00:	08043e18 	.word	0x08043e18
 802bc04:	08043e25 	.word	0x08043e25
 802bc08:	08043e53 	.word	0x08043e53

0802bc0c <atexit>:
 802bc0c:	2300      	movs	r3, #0
 802bc0e:	4601      	mov	r1, r0
 802bc10:	461a      	mov	r2, r3
 802bc12:	4618      	mov	r0, r3
 802bc14:	f000 bb16 	b.w	802c244 <__register_exitproc>

0802bc18 <malloc>:
 802bc18:	4b02      	ldr	r3, [pc, #8]	; (802bc24 <malloc+0xc>)
 802bc1a:	4601      	mov	r1, r0
 802bc1c:	6818      	ldr	r0, [r3, #0]
 802bc1e:	f000 b82b 	b.w	802bc78 <_malloc_r>
 802bc22:	bf00      	nop
 802bc24:	20000164 	.word	0x20000164

0802bc28 <free>:
 802bc28:	4b02      	ldr	r3, [pc, #8]	; (802bc34 <free+0xc>)
 802bc2a:	4601      	mov	r1, r0
 802bc2c:	6818      	ldr	r0, [r3, #0]
 802bc2e:	f000 bb67 	b.w	802c300 <_free_r>
 802bc32:	bf00      	nop
 802bc34:	20000164 	.word	0x20000164

0802bc38 <sbrk_aligned>:
 802bc38:	b570      	push	{r4, r5, r6, lr}
 802bc3a:	4e0e      	ldr	r6, [pc, #56]	; (802bc74 <sbrk_aligned+0x3c>)
 802bc3c:	460c      	mov	r4, r1
 802bc3e:	6831      	ldr	r1, [r6, #0]
 802bc40:	4605      	mov	r5, r0
 802bc42:	b911      	cbnz	r1, 802bc4a <sbrk_aligned+0x12>
 802bc44:	f000 faa0 	bl	802c188 <_sbrk_r>
 802bc48:	6030      	str	r0, [r6, #0]
 802bc4a:	4621      	mov	r1, r4
 802bc4c:	4628      	mov	r0, r5
 802bc4e:	f000 fa9b 	bl	802c188 <_sbrk_r>
 802bc52:	1c43      	adds	r3, r0, #1
 802bc54:	d00a      	beq.n	802bc6c <sbrk_aligned+0x34>
 802bc56:	1cc4      	adds	r4, r0, #3
 802bc58:	f024 0403 	bic.w	r4, r4, #3
 802bc5c:	42a0      	cmp	r0, r4
 802bc5e:	d007      	beq.n	802bc70 <sbrk_aligned+0x38>
 802bc60:	1a21      	subs	r1, r4, r0
 802bc62:	4628      	mov	r0, r5
 802bc64:	f000 fa90 	bl	802c188 <_sbrk_r>
 802bc68:	3001      	adds	r0, #1
 802bc6a:	d101      	bne.n	802bc70 <sbrk_aligned+0x38>
 802bc6c:	f04f 34ff 	mov.w	r4, #4294967295
 802bc70:	4620      	mov	r0, r4
 802bc72:	bd70      	pop	{r4, r5, r6, pc}
 802bc74:	20014194 	.word	0x20014194

0802bc78 <_malloc_r>:
 802bc78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bc7c:	1ccd      	adds	r5, r1, #3
 802bc7e:	f025 0503 	bic.w	r5, r5, #3
 802bc82:	3508      	adds	r5, #8
 802bc84:	2d0c      	cmp	r5, #12
 802bc86:	bf38      	it	cc
 802bc88:	250c      	movcc	r5, #12
 802bc8a:	2d00      	cmp	r5, #0
 802bc8c:	4607      	mov	r7, r0
 802bc8e:	db01      	blt.n	802bc94 <_malloc_r+0x1c>
 802bc90:	42a9      	cmp	r1, r5
 802bc92:	d905      	bls.n	802bca0 <_malloc_r+0x28>
 802bc94:	230c      	movs	r3, #12
 802bc96:	603b      	str	r3, [r7, #0]
 802bc98:	2600      	movs	r6, #0
 802bc9a:	4630      	mov	r0, r6
 802bc9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bca0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802bd74 <_malloc_r+0xfc>
 802bca4:	f000 f868 	bl	802bd78 <__malloc_lock>
 802bca8:	f8d8 3000 	ldr.w	r3, [r8]
 802bcac:	461c      	mov	r4, r3
 802bcae:	bb5c      	cbnz	r4, 802bd08 <_malloc_r+0x90>
 802bcb0:	4629      	mov	r1, r5
 802bcb2:	4638      	mov	r0, r7
 802bcb4:	f7ff ffc0 	bl	802bc38 <sbrk_aligned>
 802bcb8:	1c43      	adds	r3, r0, #1
 802bcba:	4604      	mov	r4, r0
 802bcbc:	d155      	bne.n	802bd6a <_malloc_r+0xf2>
 802bcbe:	f8d8 4000 	ldr.w	r4, [r8]
 802bcc2:	4626      	mov	r6, r4
 802bcc4:	2e00      	cmp	r6, #0
 802bcc6:	d145      	bne.n	802bd54 <_malloc_r+0xdc>
 802bcc8:	2c00      	cmp	r4, #0
 802bcca:	d048      	beq.n	802bd5e <_malloc_r+0xe6>
 802bccc:	6823      	ldr	r3, [r4, #0]
 802bcce:	4631      	mov	r1, r6
 802bcd0:	4638      	mov	r0, r7
 802bcd2:	eb04 0903 	add.w	r9, r4, r3
 802bcd6:	f000 fa57 	bl	802c188 <_sbrk_r>
 802bcda:	4581      	cmp	r9, r0
 802bcdc:	d13f      	bne.n	802bd5e <_malloc_r+0xe6>
 802bcde:	6821      	ldr	r1, [r4, #0]
 802bce0:	1a6d      	subs	r5, r5, r1
 802bce2:	4629      	mov	r1, r5
 802bce4:	4638      	mov	r0, r7
 802bce6:	f7ff ffa7 	bl	802bc38 <sbrk_aligned>
 802bcea:	3001      	adds	r0, #1
 802bcec:	d037      	beq.n	802bd5e <_malloc_r+0xe6>
 802bcee:	6823      	ldr	r3, [r4, #0]
 802bcf0:	442b      	add	r3, r5
 802bcf2:	6023      	str	r3, [r4, #0]
 802bcf4:	f8d8 3000 	ldr.w	r3, [r8]
 802bcf8:	2b00      	cmp	r3, #0
 802bcfa:	d038      	beq.n	802bd6e <_malloc_r+0xf6>
 802bcfc:	685a      	ldr	r2, [r3, #4]
 802bcfe:	42a2      	cmp	r2, r4
 802bd00:	d12b      	bne.n	802bd5a <_malloc_r+0xe2>
 802bd02:	2200      	movs	r2, #0
 802bd04:	605a      	str	r2, [r3, #4]
 802bd06:	e00f      	b.n	802bd28 <_malloc_r+0xb0>
 802bd08:	6822      	ldr	r2, [r4, #0]
 802bd0a:	1b52      	subs	r2, r2, r5
 802bd0c:	d41f      	bmi.n	802bd4e <_malloc_r+0xd6>
 802bd0e:	2a0b      	cmp	r2, #11
 802bd10:	d917      	bls.n	802bd42 <_malloc_r+0xca>
 802bd12:	1961      	adds	r1, r4, r5
 802bd14:	42a3      	cmp	r3, r4
 802bd16:	6025      	str	r5, [r4, #0]
 802bd18:	bf18      	it	ne
 802bd1a:	6059      	strne	r1, [r3, #4]
 802bd1c:	6863      	ldr	r3, [r4, #4]
 802bd1e:	bf08      	it	eq
 802bd20:	f8c8 1000 	streq.w	r1, [r8]
 802bd24:	5162      	str	r2, [r4, r5]
 802bd26:	604b      	str	r3, [r1, #4]
 802bd28:	4638      	mov	r0, r7
 802bd2a:	f104 060b 	add.w	r6, r4, #11
 802bd2e:	f000 f829 	bl	802bd84 <__malloc_unlock>
 802bd32:	f026 0607 	bic.w	r6, r6, #7
 802bd36:	1d23      	adds	r3, r4, #4
 802bd38:	1af2      	subs	r2, r6, r3
 802bd3a:	d0ae      	beq.n	802bc9a <_malloc_r+0x22>
 802bd3c:	1b9b      	subs	r3, r3, r6
 802bd3e:	50a3      	str	r3, [r4, r2]
 802bd40:	e7ab      	b.n	802bc9a <_malloc_r+0x22>
 802bd42:	42a3      	cmp	r3, r4
 802bd44:	6862      	ldr	r2, [r4, #4]
 802bd46:	d1dd      	bne.n	802bd04 <_malloc_r+0x8c>
 802bd48:	f8c8 2000 	str.w	r2, [r8]
 802bd4c:	e7ec      	b.n	802bd28 <_malloc_r+0xb0>
 802bd4e:	4623      	mov	r3, r4
 802bd50:	6864      	ldr	r4, [r4, #4]
 802bd52:	e7ac      	b.n	802bcae <_malloc_r+0x36>
 802bd54:	4634      	mov	r4, r6
 802bd56:	6876      	ldr	r6, [r6, #4]
 802bd58:	e7b4      	b.n	802bcc4 <_malloc_r+0x4c>
 802bd5a:	4613      	mov	r3, r2
 802bd5c:	e7cc      	b.n	802bcf8 <_malloc_r+0x80>
 802bd5e:	230c      	movs	r3, #12
 802bd60:	603b      	str	r3, [r7, #0]
 802bd62:	4638      	mov	r0, r7
 802bd64:	f000 f80e 	bl	802bd84 <__malloc_unlock>
 802bd68:	e797      	b.n	802bc9a <_malloc_r+0x22>
 802bd6a:	6025      	str	r5, [r4, #0]
 802bd6c:	e7dc      	b.n	802bd28 <_malloc_r+0xb0>
 802bd6e:	605b      	str	r3, [r3, #4]
 802bd70:	deff      	udf	#255	; 0xff
 802bd72:	bf00      	nop
 802bd74:	20014190 	.word	0x20014190

0802bd78 <__malloc_lock>:
 802bd78:	4801      	ldr	r0, [pc, #4]	; (802bd80 <__malloc_lock+0x8>)
 802bd7a:	f000 ba52 	b.w	802c222 <__retarget_lock_acquire_recursive>
 802bd7e:	bf00      	nop
 802bd80:	200142d9 	.word	0x200142d9

0802bd84 <__malloc_unlock>:
 802bd84:	4801      	ldr	r0, [pc, #4]	; (802bd8c <__malloc_unlock+0x8>)
 802bd86:	f000 ba4d 	b.w	802c224 <__retarget_lock_release_recursive>
 802bd8a:	bf00      	nop
 802bd8c:	200142d9 	.word	0x200142d9

0802bd90 <__cxa_atexit>:
 802bd90:	b510      	push	{r4, lr}
 802bd92:	4c05      	ldr	r4, [pc, #20]	; (802bda8 <__cxa_atexit+0x18>)
 802bd94:	4613      	mov	r3, r2
 802bd96:	b12c      	cbz	r4, 802bda4 <__cxa_atexit+0x14>
 802bd98:	460a      	mov	r2, r1
 802bd9a:	4601      	mov	r1, r0
 802bd9c:	2002      	movs	r0, #2
 802bd9e:	f000 fa51 	bl	802c244 <__register_exitproc>
 802bda2:	bd10      	pop	{r4, pc}
 802bda4:	4620      	mov	r0, r4
 802bda6:	e7fc      	b.n	802bda2 <__cxa_atexit+0x12>
 802bda8:	0802c245 	.word	0x0802c245

0802bdac <std>:
 802bdac:	2300      	movs	r3, #0
 802bdae:	b510      	push	{r4, lr}
 802bdb0:	4604      	mov	r4, r0
 802bdb2:	e9c0 3300 	strd	r3, r3, [r0]
 802bdb6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802bdba:	6083      	str	r3, [r0, #8]
 802bdbc:	8181      	strh	r1, [r0, #12]
 802bdbe:	6643      	str	r3, [r0, #100]	; 0x64
 802bdc0:	81c2      	strh	r2, [r0, #14]
 802bdc2:	6183      	str	r3, [r0, #24]
 802bdc4:	4619      	mov	r1, r3
 802bdc6:	2208      	movs	r2, #8
 802bdc8:	305c      	adds	r0, #92	; 0x5c
 802bdca:	f000 f906 	bl	802bfda <memset>
 802bdce:	4b0d      	ldr	r3, [pc, #52]	; (802be04 <std+0x58>)
 802bdd0:	6263      	str	r3, [r4, #36]	; 0x24
 802bdd2:	4b0d      	ldr	r3, [pc, #52]	; (802be08 <std+0x5c>)
 802bdd4:	62a3      	str	r3, [r4, #40]	; 0x28
 802bdd6:	4b0d      	ldr	r3, [pc, #52]	; (802be0c <std+0x60>)
 802bdd8:	62e3      	str	r3, [r4, #44]	; 0x2c
 802bdda:	4b0d      	ldr	r3, [pc, #52]	; (802be10 <std+0x64>)
 802bddc:	6323      	str	r3, [r4, #48]	; 0x30
 802bdde:	4b0d      	ldr	r3, [pc, #52]	; (802be14 <std+0x68>)
 802bde0:	6224      	str	r4, [r4, #32]
 802bde2:	429c      	cmp	r4, r3
 802bde4:	d006      	beq.n	802bdf4 <std+0x48>
 802bde6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802bdea:	4294      	cmp	r4, r2
 802bdec:	d002      	beq.n	802bdf4 <std+0x48>
 802bdee:	33d0      	adds	r3, #208	; 0xd0
 802bdf0:	429c      	cmp	r4, r3
 802bdf2:	d105      	bne.n	802be00 <std+0x54>
 802bdf4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802bdf8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bdfc:	f000 ba10 	b.w	802c220 <__retarget_lock_init_recursive>
 802be00:	bd10      	pop	{r4, pc}
 802be02:	bf00      	nop
 802be04:	0802bf55 	.word	0x0802bf55
 802be08:	0802bf77 	.word	0x0802bf77
 802be0c:	0802bfaf 	.word	0x0802bfaf
 802be10:	0802bfd3 	.word	0x0802bfd3
 802be14:	20014198 	.word	0x20014198

0802be18 <stdio_exit_handler>:
 802be18:	4a02      	ldr	r2, [pc, #8]	; (802be24 <stdio_exit_handler+0xc>)
 802be1a:	4903      	ldr	r1, [pc, #12]	; (802be28 <stdio_exit_handler+0x10>)
 802be1c:	4803      	ldr	r0, [pc, #12]	; (802be2c <stdio_exit_handler+0x14>)
 802be1e:	f000 b87b 	b.w	802bf18 <_fwalk_sglue>
 802be22:	bf00      	nop
 802be24:	2000010c 	.word	0x2000010c
 802be28:	0802ca4d 	.word	0x0802ca4d
 802be2c:	20000118 	.word	0x20000118

0802be30 <cleanup_stdio>:
 802be30:	6841      	ldr	r1, [r0, #4]
 802be32:	4b0c      	ldr	r3, [pc, #48]	; (802be64 <cleanup_stdio+0x34>)
 802be34:	4299      	cmp	r1, r3
 802be36:	b510      	push	{r4, lr}
 802be38:	4604      	mov	r4, r0
 802be3a:	d001      	beq.n	802be40 <cleanup_stdio+0x10>
 802be3c:	f000 fe06 	bl	802ca4c <_fflush_r>
 802be40:	68a1      	ldr	r1, [r4, #8]
 802be42:	4b09      	ldr	r3, [pc, #36]	; (802be68 <cleanup_stdio+0x38>)
 802be44:	4299      	cmp	r1, r3
 802be46:	d002      	beq.n	802be4e <cleanup_stdio+0x1e>
 802be48:	4620      	mov	r0, r4
 802be4a:	f000 fdff 	bl	802ca4c <_fflush_r>
 802be4e:	68e1      	ldr	r1, [r4, #12]
 802be50:	4b06      	ldr	r3, [pc, #24]	; (802be6c <cleanup_stdio+0x3c>)
 802be52:	4299      	cmp	r1, r3
 802be54:	d004      	beq.n	802be60 <cleanup_stdio+0x30>
 802be56:	4620      	mov	r0, r4
 802be58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802be5c:	f000 bdf6 	b.w	802ca4c <_fflush_r>
 802be60:	bd10      	pop	{r4, pc}
 802be62:	bf00      	nop
 802be64:	20014198 	.word	0x20014198
 802be68:	20014200 	.word	0x20014200
 802be6c:	20014268 	.word	0x20014268

0802be70 <global_stdio_init.part.0>:
 802be70:	b510      	push	{r4, lr}
 802be72:	4b0b      	ldr	r3, [pc, #44]	; (802bea0 <global_stdio_init.part.0+0x30>)
 802be74:	4c0b      	ldr	r4, [pc, #44]	; (802bea4 <global_stdio_init.part.0+0x34>)
 802be76:	4a0c      	ldr	r2, [pc, #48]	; (802bea8 <global_stdio_init.part.0+0x38>)
 802be78:	601a      	str	r2, [r3, #0]
 802be7a:	4620      	mov	r0, r4
 802be7c:	2200      	movs	r2, #0
 802be7e:	2104      	movs	r1, #4
 802be80:	f7ff ff94 	bl	802bdac <std>
 802be84:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802be88:	2201      	movs	r2, #1
 802be8a:	2109      	movs	r1, #9
 802be8c:	f7ff ff8e 	bl	802bdac <std>
 802be90:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802be94:	2202      	movs	r2, #2
 802be96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802be9a:	2112      	movs	r1, #18
 802be9c:	f7ff bf86 	b.w	802bdac <std>
 802bea0:	200142d0 	.word	0x200142d0
 802bea4:	20014198 	.word	0x20014198
 802bea8:	0802be19 	.word	0x0802be19

0802beac <__sfp_lock_acquire>:
 802beac:	4801      	ldr	r0, [pc, #4]	; (802beb4 <__sfp_lock_acquire+0x8>)
 802beae:	f000 b9b8 	b.w	802c222 <__retarget_lock_acquire_recursive>
 802beb2:	bf00      	nop
 802beb4:	200142da 	.word	0x200142da

0802beb8 <__sfp_lock_release>:
 802beb8:	4801      	ldr	r0, [pc, #4]	; (802bec0 <__sfp_lock_release+0x8>)
 802beba:	f000 b9b3 	b.w	802c224 <__retarget_lock_release_recursive>
 802bebe:	bf00      	nop
 802bec0:	200142da 	.word	0x200142da

0802bec4 <__sinit>:
 802bec4:	b510      	push	{r4, lr}
 802bec6:	4604      	mov	r4, r0
 802bec8:	f7ff fff0 	bl	802beac <__sfp_lock_acquire>
 802becc:	6a23      	ldr	r3, [r4, #32]
 802bece:	b11b      	cbz	r3, 802bed8 <__sinit+0x14>
 802bed0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bed4:	f7ff bff0 	b.w	802beb8 <__sfp_lock_release>
 802bed8:	4b04      	ldr	r3, [pc, #16]	; (802beec <__sinit+0x28>)
 802beda:	6223      	str	r3, [r4, #32]
 802bedc:	4b04      	ldr	r3, [pc, #16]	; (802bef0 <__sinit+0x2c>)
 802bede:	681b      	ldr	r3, [r3, #0]
 802bee0:	2b00      	cmp	r3, #0
 802bee2:	d1f5      	bne.n	802bed0 <__sinit+0xc>
 802bee4:	f7ff ffc4 	bl	802be70 <global_stdio_init.part.0>
 802bee8:	e7f2      	b.n	802bed0 <__sinit+0xc>
 802beea:	bf00      	nop
 802beec:	0802be31 	.word	0x0802be31
 802bef0:	200142d0 	.word	0x200142d0

0802bef4 <fiprintf>:
 802bef4:	b40e      	push	{r1, r2, r3}
 802bef6:	b503      	push	{r0, r1, lr}
 802bef8:	4601      	mov	r1, r0
 802befa:	ab03      	add	r3, sp, #12
 802befc:	4805      	ldr	r0, [pc, #20]	; (802bf14 <fiprintf+0x20>)
 802befe:	f853 2b04 	ldr.w	r2, [r3], #4
 802bf02:	6800      	ldr	r0, [r0, #0]
 802bf04:	9301      	str	r3, [sp, #4]
 802bf06:	f000 fa71 	bl	802c3ec <_vfiprintf_r>
 802bf0a:	b002      	add	sp, #8
 802bf0c:	f85d eb04 	ldr.w	lr, [sp], #4
 802bf10:	b003      	add	sp, #12
 802bf12:	4770      	bx	lr
 802bf14:	20000164 	.word	0x20000164

0802bf18 <_fwalk_sglue>:
 802bf18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bf1c:	4607      	mov	r7, r0
 802bf1e:	4688      	mov	r8, r1
 802bf20:	4614      	mov	r4, r2
 802bf22:	2600      	movs	r6, #0
 802bf24:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802bf28:	f1b9 0901 	subs.w	r9, r9, #1
 802bf2c:	d505      	bpl.n	802bf3a <_fwalk_sglue+0x22>
 802bf2e:	6824      	ldr	r4, [r4, #0]
 802bf30:	2c00      	cmp	r4, #0
 802bf32:	d1f7      	bne.n	802bf24 <_fwalk_sglue+0xc>
 802bf34:	4630      	mov	r0, r6
 802bf36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bf3a:	89ab      	ldrh	r3, [r5, #12]
 802bf3c:	2b01      	cmp	r3, #1
 802bf3e:	d907      	bls.n	802bf50 <_fwalk_sglue+0x38>
 802bf40:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802bf44:	3301      	adds	r3, #1
 802bf46:	d003      	beq.n	802bf50 <_fwalk_sglue+0x38>
 802bf48:	4629      	mov	r1, r5
 802bf4a:	4638      	mov	r0, r7
 802bf4c:	47c0      	blx	r8
 802bf4e:	4306      	orrs	r6, r0
 802bf50:	3568      	adds	r5, #104	; 0x68
 802bf52:	e7e9      	b.n	802bf28 <_fwalk_sglue+0x10>

0802bf54 <__sread>:
 802bf54:	b510      	push	{r4, lr}
 802bf56:	460c      	mov	r4, r1
 802bf58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bf5c:	f000 f8ee 	bl	802c13c <_read_r>
 802bf60:	2800      	cmp	r0, #0
 802bf62:	bfab      	itete	ge
 802bf64:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802bf66:	89a3      	ldrhlt	r3, [r4, #12]
 802bf68:	181b      	addge	r3, r3, r0
 802bf6a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802bf6e:	bfac      	ite	ge
 802bf70:	6563      	strge	r3, [r4, #84]	; 0x54
 802bf72:	81a3      	strhlt	r3, [r4, #12]
 802bf74:	bd10      	pop	{r4, pc}

0802bf76 <__swrite>:
 802bf76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bf7a:	461f      	mov	r7, r3
 802bf7c:	898b      	ldrh	r3, [r1, #12]
 802bf7e:	05db      	lsls	r3, r3, #23
 802bf80:	4605      	mov	r5, r0
 802bf82:	460c      	mov	r4, r1
 802bf84:	4616      	mov	r6, r2
 802bf86:	d505      	bpl.n	802bf94 <__swrite+0x1e>
 802bf88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bf8c:	2302      	movs	r3, #2
 802bf8e:	2200      	movs	r2, #0
 802bf90:	f000 f8c2 	bl	802c118 <_lseek_r>
 802bf94:	89a3      	ldrh	r3, [r4, #12]
 802bf96:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802bf9a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802bf9e:	81a3      	strh	r3, [r4, #12]
 802bfa0:	4632      	mov	r2, r6
 802bfa2:	463b      	mov	r3, r7
 802bfa4:	4628      	mov	r0, r5
 802bfa6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802bfaa:	f000 b8fd 	b.w	802c1a8 <_write_r>

0802bfae <__sseek>:
 802bfae:	b510      	push	{r4, lr}
 802bfb0:	460c      	mov	r4, r1
 802bfb2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bfb6:	f000 f8af 	bl	802c118 <_lseek_r>
 802bfba:	1c43      	adds	r3, r0, #1
 802bfbc:	89a3      	ldrh	r3, [r4, #12]
 802bfbe:	bf15      	itete	ne
 802bfc0:	6560      	strne	r0, [r4, #84]	; 0x54
 802bfc2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802bfc6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802bfca:	81a3      	strheq	r3, [r4, #12]
 802bfcc:	bf18      	it	ne
 802bfce:	81a3      	strhne	r3, [r4, #12]
 802bfd0:	bd10      	pop	{r4, pc}

0802bfd2 <__sclose>:
 802bfd2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bfd6:	f000 b839 	b.w	802c04c <_close_r>

0802bfda <memset>:
 802bfda:	4402      	add	r2, r0
 802bfdc:	4603      	mov	r3, r0
 802bfde:	4293      	cmp	r3, r2
 802bfe0:	d100      	bne.n	802bfe4 <memset+0xa>
 802bfe2:	4770      	bx	lr
 802bfe4:	f803 1b01 	strb.w	r1, [r3], #1
 802bfe8:	e7f9      	b.n	802bfde <memset+0x4>

0802bfea <_raise_r>:
 802bfea:	291f      	cmp	r1, #31
 802bfec:	b538      	push	{r3, r4, r5, lr}
 802bfee:	4604      	mov	r4, r0
 802bff0:	460d      	mov	r5, r1
 802bff2:	d904      	bls.n	802bffe <_raise_r+0x14>
 802bff4:	2316      	movs	r3, #22
 802bff6:	6003      	str	r3, [r0, #0]
 802bff8:	f04f 30ff 	mov.w	r0, #4294967295
 802bffc:	bd38      	pop	{r3, r4, r5, pc}
 802bffe:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802c000:	b112      	cbz	r2, 802c008 <_raise_r+0x1e>
 802c002:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802c006:	b94b      	cbnz	r3, 802c01c <_raise_r+0x32>
 802c008:	4620      	mov	r0, r4
 802c00a:	f000 f8bb 	bl	802c184 <_getpid_r>
 802c00e:	462a      	mov	r2, r5
 802c010:	4601      	mov	r1, r0
 802c012:	4620      	mov	r0, r4
 802c014:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802c018:	f000 b8a2 	b.w	802c160 <_kill_r>
 802c01c:	2b01      	cmp	r3, #1
 802c01e:	d00a      	beq.n	802c036 <_raise_r+0x4c>
 802c020:	1c59      	adds	r1, r3, #1
 802c022:	d103      	bne.n	802c02c <_raise_r+0x42>
 802c024:	2316      	movs	r3, #22
 802c026:	6003      	str	r3, [r0, #0]
 802c028:	2001      	movs	r0, #1
 802c02a:	e7e7      	b.n	802bffc <_raise_r+0x12>
 802c02c:	2400      	movs	r4, #0
 802c02e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802c032:	4628      	mov	r0, r5
 802c034:	4798      	blx	r3
 802c036:	2000      	movs	r0, #0
 802c038:	e7e0      	b.n	802bffc <_raise_r+0x12>
	...

0802c03c <raise>:
 802c03c:	4b02      	ldr	r3, [pc, #8]	; (802c048 <raise+0xc>)
 802c03e:	4601      	mov	r1, r0
 802c040:	6818      	ldr	r0, [r3, #0]
 802c042:	f7ff bfd2 	b.w	802bfea <_raise_r>
 802c046:	bf00      	nop
 802c048:	20000164 	.word	0x20000164

0802c04c <_close_r>:
 802c04c:	b538      	push	{r3, r4, r5, lr}
 802c04e:	4d06      	ldr	r5, [pc, #24]	; (802c068 <_close_r+0x1c>)
 802c050:	2300      	movs	r3, #0
 802c052:	4604      	mov	r4, r0
 802c054:	4608      	mov	r0, r1
 802c056:	602b      	str	r3, [r5, #0]
 802c058:	f7d5 fe7c 	bl	8001d54 <_close>
 802c05c:	1c43      	adds	r3, r0, #1
 802c05e:	d102      	bne.n	802c066 <_close_r+0x1a>
 802c060:	682b      	ldr	r3, [r5, #0]
 802c062:	b103      	cbz	r3, 802c066 <_close_r+0x1a>
 802c064:	6023      	str	r3, [r4, #0]
 802c066:	bd38      	pop	{r3, r4, r5, pc}
 802c068:	200142d4 	.word	0x200142d4

0802c06c <_reclaim_reent>:
 802c06c:	4b29      	ldr	r3, [pc, #164]	; (802c114 <_reclaim_reent+0xa8>)
 802c06e:	681b      	ldr	r3, [r3, #0]
 802c070:	4283      	cmp	r3, r0
 802c072:	b570      	push	{r4, r5, r6, lr}
 802c074:	4604      	mov	r4, r0
 802c076:	d04b      	beq.n	802c110 <_reclaim_reent+0xa4>
 802c078:	69c3      	ldr	r3, [r0, #28]
 802c07a:	b143      	cbz	r3, 802c08e <_reclaim_reent+0x22>
 802c07c:	68db      	ldr	r3, [r3, #12]
 802c07e:	2b00      	cmp	r3, #0
 802c080:	d144      	bne.n	802c10c <_reclaim_reent+0xa0>
 802c082:	69e3      	ldr	r3, [r4, #28]
 802c084:	6819      	ldr	r1, [r3, #0]
 802c086:	b111      	cbz	r1, 802c08e <_reclaim_reent+0x22>
 802c088:	4620      	mov	r0, r4
 802c08a:	f000 f939 	bl	802c300 <_free_r>
 802c08e:	6961      	ldr	r1, [r4, #20]
 802c090:	b111      	cbz	r1, 802c098 <_reclaim_reent+0x2c>
 802c092:	4620      	mov	r0, r4
 802c094:	f000 f934 	bl	802c300 <_free_r>
 802c098:	69e1      	ldr	r1, [r4, #28]
 802c09a:	b111      	cbz	r1, 802c0a2 <_reclaim_reent+0x36>
 802c09c:	4620      	mov	r0, r4
 802c09e:	f000 f92f 	bl	802c300 <_free_r>
 802c0a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802c0a4:	b111      	cbz	r1, 802c0ac <_reclaim_reent+0x40>
 802c0a6:	4620      	mov	r0, r4
 802c0a8:	f000 f92a 	bl	802c300 <_free_r>
 802c0ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c0ae:	b111      	cbz	r1, 802c0b6 <_reclaim_reent+0x4a>
 802c0b0:	4620      	mov	r0, r4
 802c0b2:	f000 f925 	bl	802c300 <_free_r>
 802c0b6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802c0b8:	b111      	cbz	r1, 802c0c0 <_reclaim_reent+0x54>
 802c0ba:	4620      	mov	r0, r4
 802c0bc:	f000 f920 	bl	802c300 <_free_r>
 802c0c0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802c0c2:	b111      	cbz	r1, 802c0ca <_reclaim_reent+0x5e>
 802c0c4:	4620      	mov	r0, r4
 802c0c6:	f000 f91b 	bl	802c300 <_free_r>
 802c0ca:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802c0cc:	b111      	cbz	r1, 802c0d4 <_reclaim_reent+0x68>
 802c0ce:	4620      	mov	r0, r4
 802c0d0:	f000 f916 	bl	802c300 <_free_r>
 802c0d4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802c0d6:	b111      	cbz	r1, 802c0de <_reclaim_reent+0x72>
 802c0d8:	4620      	mov	r0, r4
 802c0da:	f000 f911 	bl	802c300 <_free_r>
 802c0de:	6a23      	ldr	r3, [r4, #32]
 802c0e0:	b1b3      	cbz	r3, 802c110 <_reclaim_reent+0xa4>
 802c0e2:	4620      	mov	r0, r4
 802c0e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802c0e8:	4718      	bx	r3
 802c0ea:	5949      	ldr	r1, [r1, r5]
 802c0ec:	b941      	cbnz	r1, 802c100 <_reclaim_reent+0x94>
 802c0ee:	3504      	adds	r5, #4
 802c0f0:	69e3      	ldr	r3, [r4, #28]
 802c0f2:	2d80      	cmp	r5, #128	; 0x80
 802c0f4:	68d9      	ldr	r1, [r3, #12]
 802c0f6:	d1f8      	bne.n	802c0ea <_reclaim_reent+0x7e>
 802c0f8:	4620      	mov	r0, r4
 802c0fa:	f000 f901 	bl	802c300 <_free_r>
 802c0fe:	e7c0      	b.n	802c082 <_reclaim_reent+0x16>
 802c100:	680e      	ldr	r6, [r1, #0]
 802c102:	4620      	mov	r0, r4
 802c104:	f000 f8fc 	bl	802c300 <_free_r>
 802c108:	4631      	mov	r1, r6
 802c10a:	e7ef      	b.n	802c0ec <_reclaim_reent+0x80>
 802c10c:	2500      	movs	r5, #0
 802c10e:	e7ef      	b.n	802c0f0 <_reclaim_reent+0x84>
 802c110:	bd70      	pop	{r4, r5, r6, pc}
 802c112:	bf00      	nop
 802c114:	20000164 	.word	0x20000164

0802c118 <_lseek_r>:
 802c118:	b538      	push	{r3, r4, r5, lr}
 802c11a:	4d07      	ldr	r5, [pc, #28]	; (802c138 <_lseek_r+0x20>)
 802c11c:	4604      	mov	r4, r0
 802c11e:	4608      	mov	r0, r1
 802c120:	4611      	mov	r1, r2
 802c122:	2200      	movs	r2, #0
 802c124:	602a      	str	r2, [r5, #0]
 802c126:	461a      	mov	r2, r3
 802c128:	f7d5 fe20 	bl	8001d6c <_lseek>
 802c12c:	1c43      	adds	r3, r0, #1
 802c12e:	d102      	bne.n	802c136 <_lseek_r+0x1e>
 802c130:	682b      	ldr	r3, [r5, #0]
 802c132:	b103      	cbz	r3, 802c136 <_lseek_r+0x1e>
 802c134:	6023      	str	r3, [r4, #0]
 802c136:	bd38      	pop	{r3, r4, r5, pc}
 802c138:	200142d4 	.word	0x200142d4

0802c13c <_read_r>:
 802c13c:	b538      	push	{r3, r4, r5, lr}
 802c13e:	4d07      	ldr	r5, [pc, #28]	; (802c15c <_read_r+0x20>)
 802c140:	4604      	mov	r4, r0
 802c142:	4608      	mov	r0, r1
 802c144:	4611      	mov	r1, r2
 802c146:	2200      	movs	r2, #0
 802c148:	602a      	str	r2, [r5, #0]
 802c14a:	461a      	mov	r2, r3
 802c14c:	f7d5 fde6 	bl	8001d1c <_read>
 802c150:	1c43      	adds	r3, r0, #1
 802c152:	d102      	bne.n	802c15a <_read_r+0x1e>
 802c154:	682b      	ldr	r3, [r5, #0]
 802c156:	b103      	cbz	r3, 802c15a <_read_r+0x1e>
 802c158:	6023      	str	r3, [r4, #0]
 802c15a:	bd38      	pop	{r3, r4, r5, pc}
 802c15c:	200142d4 	.word	0x200142d4

0802c160 <_kill_r>:
 802c160:	b538      	push	{r3, r4, r5, lr}
 802c162:	4d07      	ldr	r5, [pc, #28]	; (802c180 <_kill_r+0x20>)
 802c164:	2300      	movs	r3, #0
 802c166:	4604      	mov	r4, r0
 802c168:	4608      	mov	r0, r1
 802c16a:	4611      	mov	r1, r2
 802c16c:	602b      	str	r3, [r5, #0]
 802c16e:	f7d5 fdc7 	bl	8001d00 <_kill>
 802c172:	1c43      	adds	r3, r0, #1
 802c174:	d102      	bne.n	802c17c <_kill_r+0x1c>
 802c176:	682b      	ldr	r3, [r5, #0]
 802c178:	b103      	cbz	r3, 802c17c <_kill_r+0x1c>
 802c17a:	6023      	str	r3, [r4, #0]
 802c17c:	bd38      	pop	{r3, r4, r5, pc}
 802c17e:	bf00      	nop
 802c180:	200142d4 	.word	0x200142d4

0802c184 <_getpid_r>:
 802c184:	f7d5 bdba 	b.w	8001cfc <_getpid>

0802c188 <_sbrk_r>:
 802c188:	b538      	push	{r3, r4, r5, lr}
 802c18a:	4d06      	ldr	r5, [pc, #24]	; (802c1a4 <_sbrk_r+0x1c>)
 802c18c:	2300      	movs	r3, #0
 802c18e:	4604      	mov	r4, r0
 802c190:	4608      	mov	r0, r1
 802c192:	602b      	str	r3, [r5, #0]
 802c194:	f7d5 fdec 	bl	8001d70 <_sbrk>
 802c198:	1c43      	adds	r3, r0, #1
 802c19a:	d102      	bne.n	802c1a2 <_sbrk_r+0x1a>
 802c19c:	682b      	ldr	r3, [r5, #0]
 802c19e:	b103      	cbz	r3, 802c1a2 <_sbrk_r+0x1a>
 802c1a0:	6023      	str	r3, [r4, #0]
 802c1a2:	bd38      	pop	{r3, r4, r5, pc}
 802c1a4:	200142d4 	.word	0x200142d4

0802c1a8 <_write_r>:
 802c1a8:	b538      	push	{r3, r4, r5, lr}
 802c1aa:	4d07      	ldr	r5, [pc, #28]	; (802c1c8 <_write_r+0x20>)
 802c1ac:	4604      	mov	r4, r0
 802c1ae:	4608      	mov	r0, r1
 802c1b0:	4611      	mov	r1, r2
 802c1b2:	2200      	movs	r2, #0
 802c1b4:	602a      	str	r2, [r5, #0]
 802c1b6:	461a      	mov	r2, r3
 802c1b8:	f7d5 fdbe 	bl	8001d38 <_write>
 802c1bc:	1c43      	adds	r3, r0, #1
 802c1be:	d102      	bne.n	802c1c6 <_write_r+0x1e>
 802c1c0:	682b      	ldr	r3, [r5, #0]
 802c1c2:	b103      	cbz	r3, 802c1c6 <_write_r+0x1e>
 802c1c4:	6023      	str	r3, [r4, #0]
 802c1c6:	bd38      	pop	{r3, r4, r5, pc}
 802c1c8:	200142d4 	.word	0x200142d4

0802c1cc <__errno>:
 802c1cc:	4b01      	ldr	r3, [pc, #4]	; (802c1d4 <__errno+0x8>)
 802c1ce:	6818      	ldr	r0, [r3, #0]
 802c1d0:	4770      	bx	lr
 802c1d2:	bf00      	nop
 802c1d4:	20000164 	.word	0x20000164

0802c1d8 <__libc_init_array>:
 802c1d8:	b570      	push	{r4, r5, r6, lr}
 802c1da:	4d0d      	ldr	r5, [pc, #52]	; (802c210 <__libc_init_array+0x38>)
 802c1dc:	4c0d      	ldr	r4, [pc, #52]	; (802c214 <__libc_init_array+0x3c>)
 802c1de:	1b64      	subs	r4, r4, r5
 802c1e0:	10a4      	asrs	r4, r4, #2
 802c1e2:	2600      	movs	r6, #0
 802c1e4:	42a6      	cmp	r6, r4
 802c1e6:	d109      	bne.n	802c1fc <__libc_init_array+0x24>
 802c1e8:	4d0b      	ldr	r5, [pc, #44]	; (802c218 <__libc_init_array+0x40>)
 802c1ea:	4c0c      	ldr	r4, [pc, #48]	; (802c21c <__libc_init_array+0x44>)
 802c1ec:	f000 fd70 	bl	802ccd0 <_init>
 802c1f0:	1b64      	subs	r4, r4, r5
 802c1f2:	10a4      	asrs	r4, r4, #2
 802c1f4:	2600      	movs	r6, #0
 802c1f6:	42a6      	cmp	r6, r4
 802c1f8:	d105      	bne.n	802c206 <__libc_init_array+0x2e>
 802c1fa:	bd70      	pop	{r4, r5, r6, pc}
 802c1fc:	f855 3b04 	ldr.w	r3, [r5], #4
 802c200:	4798      	blx	r3
 802c202:	3601      	adds	r6, #1
 802c204:	e7ee      	b.n	802c1e4 <__libc_init_array+0xc>
 802c206:	f855 3b04 	ldr.w	r3, [r5], #4
 802c20a:	4798      	blx	r3
 802c20c:	3601      	adds	r6, #1
 802c20e:	e7f2      	b.n	802c1f6 <__libc_init_array+0x1e>
 802c210:	080cd548 	.word	0x080cd548
 802c214:	080cd548 	.word	0x080cd548
 802c218:	080cd548 	.word	0x080cd548
 802c21c:	080cd55c 	.word	0x080cd55c

0802c220 <__retarget_lock_init_recursive>:
 802c220:	4770      	bx	lr

0802c222 <__retarget_lock_acquire_recursive>:
 802c222:	4770      	bx	lr

0802c224 <__retarget_lock_release_recursive>:
 802c224:	4770      	bx	lr

0802c226 <memcpy>:
 802c226:	440a      	add	r2, r1
 802c228:	4291      	cmp	r1, r2
 802c22a:	f100 33ff 	add.w	r3, r0, #4294967295
 802c22e:	d100      	bne.n	802c232 <memcpy+0xc>
 802c230:	4770      	bx	lr
 802c232:	b510      	push	{r4, lr}
 802c234:	f811 4b01 	ldrb.w	r4, [r1], #1
 802c238:	f803 4f01 	strb.w	r4, [r3, #1]!
 802c23c:	4291      	cmp	r1, r2
 802c23e:	d1f9      	bne.n	802c234 <memcpy+0xe>
 802c240:	bd10      	pop	{r4, pc}
	...

0802c244 <__register_exitproc>:
 802c244:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c248:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802c2fc <__register_exitproc+0xb8>
 802c24c:	4606      	mov	r6, r0
 802c24e:	f8d8 0000 	ldr.w	r0, [r8]
 802c252:	461f      	mov	r7, r3
 802c254:	460d      	mov	r5, r1
 802c256:	4691      	mov	r9, r2
 802c258:	f7ff ffe3 	bl	802c222 <__retarget_lock_acquire_recursive>
 802c25c:	4b23      	ldr	r3, [pc, #140]	; (802c2ec <__register_exitproc+0xa8>)
 802c25e:	681c      	ldr	r4, [r3, #0]
 802c260:	b934      	cbnz	r4, 802c270 <__register_exitproc+0x2c>
 802c262:	4c23      	ldr	r4, [pc, #140]	; (802c2f0 <__register_exitproc+0xac>)
 802c264:	601c      	str	r4, [r3, #0]
 802c266:	4b23      	ldr	r3, [pc, #140]	; (802c2f4 <__register_exitproc+0xb0>)
 802c268:	b113      	cbz	r3, 802c270 <__register_exitproc+0x2c>
 802c26a:	681b      	ldr	r3, [r3, #0]
 802c26c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802c270:	6863      	ldr	r3, [r4, #4]
 802c272:	2b1f      	cmp	r3, #31
 802c274:	dd07      	ble.n	802c286 <__register_exitproc+0x42>
 802c276:	f8d8 0000 	ldr.w	r0, [r8]
 802c27a:	f7ff ffd3 	bl	802c224 <__retarget_lock_release_recursive>
 802c27e:	f04f 30ff 	mov.w	r0, #4294967295
 802c282:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c286:	b32e      	cbz	r6, 802c2d4 <__register_exitproc+0x90>
 802c288:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802c28c:	b968      	cbnz	r0, 802c2aa <__register_exitproc+0x66>
 802c28e:	4b1a      	ldr	r3, [pc, #104]	; (802c2f8 <__register_exitproc+0xb4>)
 802c290:	2b00      	cmp	r3, #0
 802c292:	d0f0      	beq.n	802c276 <__register_exitproc+0x32>
 802c294:	f44f 7084 	mov.w	r0, #264	; 0x108
 802c298:	f7ff fcbe 	bl	802bc18 <malloc>
 802c29c:	2800      	cmp	r0, #0
 802c29e:	d0ea      	beq.n	802c276 <__register_exitproc+0x32>
 802c2a0:	2300      	movs	r3, #0
 802c2a2:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802c2a6:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802c2aa:	6863      	ldr	r3, [r4, #4]
 802c2ac:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802c2b0:	2201      	movs	r2, #1
 802c2b2:	409a      	lsls	r2, r3
 802c2b4:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802c2b8:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802c2bc:	4313      	orrs	r3, r2
 802c2be:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802c2c2:	2e02      	cmp	r6, #2
 802c2c4:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802c2c8:	bf02      	ittt	eq
 802c2ca:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802c2ce:	4313      	orreq	r3, r2
 802c2d0:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802c2d4:	6863      	ldr	r3, [r4, #4]
 802c2d6:	f8d8 0000 	ldr.w	r0, [r8]
 802c2da:	1c5a      	adds	r2, r3, #1
 802c2dc:	3302      	adds	r3, #2
 802c2de:	6062      	str	r2, [r4, #4]
 802c2e0:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802c2e4:	f7ff ff9e 	bl	802c224 <__retarget_lock_release_recursive>
 802c2e8:	2000      	movs	r0, #0
 802c2ea:	e7ca      	b.n	802c282 <__register_exitproc+0x3e>
 802c2ec:	20014368 	.word	0x20014368
 802c2f0:	200142dc 	.word	0x200142dc
 802c2f4:	08043e54 	.word	0x08043e54
 802c2f8:	0802bc19 	.word	0x0802bc19
 802c2fc:	20000168 	.word	0x20000168

0802c300 <_free_r>:
 802c300:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c302:	2900      	cmp	r1, #0
 802c304:	d044      	beq.n	802c390 <_free_r+0x90>
 802c306:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c30a:	9001      	str	r0, [sp, #4]
 802c30c:	2b00      	cmp	r3, #0
 802c30e:	f1a1 0404 	sub.w	r4, r1, #4
 802c312:	bfb8      	it	lt
 802c314:	18e4      	addlt	r4, r4, r3
 802c316:	f7ff fd2f 	bl	802bd78 <__malloc_lock>
 802c31a:	4a1e      	ldr	r2, [pc, #120]	; (802c394 <_free_r+0x94>)
 802c31c:	9801      	ldr	r0, [sp, #4]
 802c31e:	6813      	ldr	r3, [r2, #0]
 802c320:	b933      	cbnz	r3, 802c330 <_free_r+0x30>
 802c322:	6063      	str	r3, [r4, #4]
 802c324:	6014      	str	r4, [r2, #0]
 802c326:	b003      	add	sp, #12
 802c328:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c32c:	f7ff bd2a 	b.w	802bd84 <__malloc_unlock>
 802c330:	42a3      	cmp	r3, r4
 802c332:	d908      	bls.n	802c346 <_free_r+0x46>
 802c334:	6825      	ldr	r5, [r4, #0]
 802c336:	1961      	adds	r1, r4, r5
 802c338:	428b      	cmp	r3, r1
 802c33a:	bf01      	itttt	eq
 802c33c:	6819      	ldreq	r1, [r3, #0]
 802c33e:	685b      	ldreq	r3, [r3, #4]
 802c340:	1949      	addeq	r1, r1, r5
 802c342:	6021      	streq	r1, [r4, #0]
 802c344:	e7ed      	b.n	802c322 <_free_r+0x22>
 802c346:	461a      	mov	r2, r3
 802c348:	685b      	ldr	r3, [r3, #4]
 802c34a:	b10b      	cbz	r3, 802c350 <_free_r+0x50>
 802c34c:	42a3      	cmp	r3, r4
 802c34e:	d9fa      	bls.n	802c346 <_free_r+0x46>
 802c350:	6811      	ldr	r1, [r2, #0]
 802c352:	1855      	adds	r5, r2, r1
 802c354:	42a5      	cmp	r5, r4
 802c356:	d10b      	bne.n	802c370 <_free_r+0x70>
 802c358:	6824      	ldr	r4, [r4, #0]
 802c35a:	4421      	add	r1, r4
 802c35c:	1854      	adds	r4, r2, r1
 802c35e:	42a3      	cmp	r3, r4
 802c360:	6011      	str	r1, [r2, #0]
 802c362:	d1e0      	bne.n	802c326 <_free_r+0x26>
 802c364:	681c      	ldr	r4, [r3, #0]
 802c366:	685b      	ldr	r3, [r3, #4]
 802c368:	6053      	str	r3, [r2, #4]
 802c36a:	440c      	add	r4, r1
 802c36c:	6014      	str	r4, [r2, #0]
 802c36e:	e7da      	b.n	802c326 <_free_r+0x26>
 802c370:	d902      	bls.n	802c378 <_free_r+0x78>
 802c372:	230c      	movs	r3, #12
 802c374:	6003      	str	r3, [r0, #0]
 802c376:	e7d6      	b.n	802c326 <_free_r+0x26>
 802c378:	6825      	ldr	r5, [r4, #0]
 802c37a:	1961      	adds	r1, r4, r5
 802c37c:	428b      	cmp	r3, r1
 802c37e:	bf04      	itt	eq
 802c380:	6819      	ldreq	r1, [r3, #0]
 802c382:	685b      	ldreq	r3, [r3, #4]
 802c384:	6063      	str	r3, [r4, #4]
 802c386:	bf04      	itt	eq
 802c388:	1949      	addeq	r1, r1, r5
 802c38a:	6021      	streq	r1, [r4, #0]
 802c38c:	6054      	str	r4, [r2, #4]
 802c38e:	e7ca      	b.n	802c326 <_free_r+0x26>
 802c390:	b003      	add	sp, #12
 802c392:	bd30      	pop	{r4, r5, pc}
 802c394:	20014190 	.word	0x20014190

0802c398 <__sfputc_r>:
 802c398:	6893      	ldr	r3, [r2, #8]
 802c39a:	3b01      	subs	r3, #1
 802c39c:	2b00      	cmp	r3, #0
 802c39e:	b410      	push	{r4}
 802c3a0:	6093      	str	r3, [r2, #8]
 802c3a2:	da08      	bge.n	802c3b6 <__sfputc_r+0x1e>
 802c3a4:	6994      	ldr	r4, [r2, #24]
 802c3a6:	42a3      	cmp	r3, r4
 802c3a8:	db01      	blt.n	802c3ae <__sfputc_r+0x16>
 802c3aa:	290a      	cmp	r1, #10
 802c3ac:	d103      	bne.n	802c3b6 <__sfputc_r+0x1e>
 802c3ae:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c3b2:	f000 bb73 	b.w	802ca9c <__swbuf_r>
 802c3b6:	6813      	ldr	r3, [r2, #0]
 802c3b8:	1c58      	adds	r0, r3, #1
 802c3ba:	6010      	str	r0, [r2, #0]
 802c3bc:	7019      	strb	r1, [r3, #0]
 802c3be:	4608      	mov	r0, r1
 802c3c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c3c4:	4770      	bx	lr

0802c3c6 <__sfputs_r>:
 802c3c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c3c8:	4606      	mov	r6, r0
 802c3ca:	460f      	mov	r7, r1
 802c3cc:	4614      	mov	r4, r2
 802c3ce:	18d5      	adds	r5, r2, r3
 802c3d0:	42ac      	cmp	r4, r5
 802c3d2:	d101      	bne.n	802c3d8 <__sfputs_r+0x12>
 802c3d4:	2000      	movs	r0, #0
 802c3d6:	e007      	b.n	802c3e8 <__sfputs_r+0x22>
 802c3d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c3dc:	463a      	mov	r2, r7
 802c3de:	4630      	mov	r0, r6
 802c3e0:	f7ff ffda 	bl	802c398 <__sfputc_r>
 802c3e4:	1c43      	adds	r3, r0, #1
 802c3e6:	d1f3      	bne.n	802c3d0 <__sfputs_r+0xa>
 802c3e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c3ec <_vfiprintf_r>:
 802c3ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c3f0:	460d      	mov	r5, r1
 802c3f2:	b09d      	sub	sp, #116	; 0x74
 802c3f4:	4614      	mov	r4, r2
 802c3f6:	4698      	mov	r8, r3
 802c3f8:	4606      	mov	r6, r0
 802c3fa:	b118      	cbz	r0, 802c404 <_vfiprintf_r+0x18>
 802c3fc:	6a03      	ldr	r3, [r0, #32]
 802c3fe:	b90b      	cbnz	r3, 802c404 <_vfiprintf_r+0x18>
 802c400:	f7ff fd60 	bl	802bec4 <__sinit>
 802c404:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c406:	07d9      	lsls	r1, r3, #31
 802c408:	d405      	bmi.n	802c416 <_vfiprintf_r+0x2a>
 802c40a:	89ab      	ldrh	r3, [r5, #12]
 802c40c:	059a      	lsls	r2, r3, #22
 802c40e:	d402      	bmi.n	802c416 <_vfiprintf_r+0x2a>
 802c410:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c412:	f7ff ff06 	bl	802c222 <__retarget_lock_acquire_recursive>
 802c416:	89ab      	ldrh	r3, [r5, #12]
 802c418:	071b      	lsls	r3, r3, #28
 802c41a:	d501      	bpl.n	802c420 <_vfiprintf_r+0x34>
 802c41c:	692b      	ldr	r3, [r5, #16]
 802c41e:	b99b      	cbnz	r3, 802c448 <_vfiprintf_r+0x5c>
 802c420:	4629      	mov	r1, r5
 802c422:	4630      	mov	r0, r6
 802c424:	f000 fb78 	bl	802cb18 <__swsetup_r>
 802c428:	b170      	cbz	r0, 802c448 <_vfiprintf_r+0x5c>
 802c42a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c42c:	07dc      	lsls	r4, r3, #31
 802c42e:	d504      	bpl.n	802c43a <_vfiprintf_r+0x4e>
 802c430:	f04f 30ff 	mov.w	r0, #4294967295
 802c434:	b01d      	add	sp, #116	; 0x74
 802c436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c43a:	89ab      	ldrh	r3, [r5, #12]
 802c43c:	0598      	lsls	r0, r3, #22
 802c43e:	d4f7      	bmi.n	802c430 <_vfiprintf_r+0x44>
 802c440:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c442:	f7ff feef 	bl	802c224 <__retarget_lock_release_recursive>
 802c446:	e7f3      	b.n	802c430 <_vfiprintf_r+0x44>
 802c448:	2300      	movs	r3, #0
 802c44a:	9309      	str	r3, [sp, #36]	; 0x24
 802c44c:	2320      	movs	r3, #32
 802c44e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c452:	f8cd 800c 	str.w	r8, [sp, #12]
 802c456:	2330      	movs	r3, #48	; 0x30
 802c458:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802c60c <_vfiprintf_r+0x220>
 802c45c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c460:	f04f 0901 	mov.w	r9, #1
 802c464:	4623      	mov	r3, r4
 802c466:	469a      	mov	sl, r3
 802c468:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c46c:	b10a      	cbz	r2, 802c472 <_vfiprintf_r+0x86>
 802c46e:	2a25      	cmp	r2, #37	; 0x25
 802c470:	d1f9      	bne.n	802c466 <_vfiprintf_r+0x7a>
 802c472:	ebba 0b04 	subs.w	fp, sl, r4
 802c476:	d00b      	beq.n	802c490 <_vfiprintf_r+0xa4>
 802c478:	465b      	mov	r3, fp
 802c47a:	4622      	mov	r2, r4
 802c47c:	4629      	mov	r1, r5
 802c47e:	4630      	mov	r0, r6
 802c480:	f7ff ffa1 	bl	802c3c6 <__sfputs_r>
 802c484:	3001      	adds	r0, #1
 802c486:	f000 80a9 	beq.w	802c5dc <_vfiprintf_r+0x1f0>
 802c48a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c48c:	445a      	add	r2, fp
 802c48e:	9209      	str	r2, [sp, #36]	; 0x24
 802c490:	f89a 3000 	ldrb.w	r3, [sl]
 802c494:	2b00      	cmp	r3, #0
 802c496:	f000 80a1 	beq.w	802c5dc <_vfiprintf_r+0x1f0>
 802c49a:	2300      	movs	r3, #0
 802c49c:	f04f 32ff 	mov.w	r2, #4294967295
 802c4a0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c4a4:	f10a 0a01 	add.w	sl, sl, #1
 802c4a8:	9304      	str	r3, [sp, #16]
 802c4aa:	9307      	str	r3, [sp, #28]
 802c4ac:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c4b0:	931a      	str	r3, [sp, #104]	; 0x68
 802c4b2:	4654      	mov	r4, sl
 802c4b4:	2205      	movs	r2, #5
 802c4b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c4ba:	4854      	ldr	r0, [pc, #336]	; (802c60c <_vfiprintf_r+0x220>)
 802c4bc:	f7d3 fef8 	bl	80002b0 <memchr>
 802c4c0:	9a04      	ldr	r2, [sp, #16]
 802c4c2:	b9d8      	cbnz	r0, 802c4fc <_vfiprintf_r+0x110>
 802c4c4:	06d1      	lsls	r1, r2, #27
 802c4c6:	bf44      	itt	mi
 802c4c8:	2320      	movmi	r3, #32
 802c4ca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c4ce:	0713      	lsls	r3, r2, #28
 802c4d0:	bf44      	itt	mi
 802c4d2:	232b      	movmi	r3, #43	; 0x2b
 802c4d4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c4d8:	f89a 3000 	ldrb.w	r3, [sl]
 802c4dc:	2b2a      	cmp	r3, #42	; 0x2a
 802c4de:	d015      	beq.n	802c50c <_vfiprintf_r+0x120>
 802c4e0:	9a07      	ldr	r2, [sp, #28]
 802c4e2:	4654      	mov	r4, sl
 802c4e4:	2000      	movs	r0, #0
 802c4e6:	f04f 0c0a 	mov.w	ip, #10
 802c4ea:	4621      	mov	r1, r4
 802c4ec:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c4f0:	3b30      	subs	r3, #48	; 0x30
 802c4f2:	2b09      	cmp	r3, #9
 802c4f4:	d94d      	bls.n	802c592 <_vfiprintf_r+0x1a6>
 802c4f6:	b1b0      	cbz	r0, 802c526 <_vfiprintf_r+0x13a>
 802c4f8:	9207      	str	r2, [sp, #28]
 802c4fa:	e014      	b.n	802c526 <_vfiprintf_r+0x13a>
 802c4fc:	eba0 0308 	sub.w	r3, r0, r8
 802c500:	fa09 f303 	lsl.w	r3, r9, r3
 802c504:	4313      	orrs	r3, r2
 802c506:	9304      	str	r3, [sp, #16]
 802c508:	46a2      	mov	sl, r4
 802c50a:	e7d2      	b.n	802c4b2 <_vfiprintf_r+0xc6>
 802c50c:	9b03      	ldr	r3, [sp, #12]
 802c50e:	1d19      	adds	r1, r3, #4
 802c510:	681b      	ldr	r3, [r3, #0]
 802c512:	9103      	str	r1, [sp, #12]
 802c514:	2b00      	cmp	r3, #0
 802c516:	bfbb      	ittet	lt
 802c518:	425b      	neglt	r3, r3
 802c51a:	f042 0202 	orrlt.w	r2, r2, #2
 802c51e:	9307      	strge	r3, [sp, #28]
 802c520:	9307      	strlt	r3, [sp, #28]
 802c522:	bfb8      	it	lt
 802c524:	9204      	strlt	r2, [sp, #16]
 802c526:	7823      	ldrb	r3, [r4, #0]
 802c528:	2b2e      	cmp	r3, #46	; 0x2e
 802c52a:	d10c      	bne.n	802c546 <_vfiprintf_r+0x15a>
 802c52c:	7863      	ldrb	r3, [r4, #1]
 802c52e:	2b2a      	cmp	r3, #42	; 0x2a
 802c530:	d134      	bne.n	802c59c <_vfiprintf_r+0x1b0>
 802c532:	9b03      	ldr	r3, [sp, #12]
 802c534:	1d1a      	adds	r2, r3, #4
 802c536:	681b      	ldr	r3, [r3, #0]
 802c538:	9203      	str	r2, [sp, #12]
 802c53a:	2b00      	cmp	r3, #0
 802c53c:	bfb8      	it	lt
 802c53e:	f04f 33ff 	movlt.w	r3, #4294967295
 802c542:	3402      	adds	r4, #2
 802c544:	9305      	str	r3, [sp, #20]
 802c546:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802c61c <_vfiprintf_r+0x230>
 802c54a:	7821      	ldrb	r1, [r4, #0]
 802c54c:	2203      	movs	r2, #3
 802c54e:	4650      	mov	r0, sl
 802c550:	f7d3 feae 	bl	80002b0 <memchr>
 802c554:	b138      	cbz	r0, 802c566 <_vfiprintf_r+0x17a>
 802c556:	9b04      	ldr	r3, [sp, #16]
 802c558:	eba0 000a 	sub.w	r0, r0, sl
 802c55c:	2240      	movs	r2, #64	; 0x40
 802c55e:	4082      	lsls	r2, r0
 802c560:	4313      	orrs	r3, r2
 802c562:	3401      	adds	r4, #1
 802c564:	9304      	str	r3, [sp, #16]
 802c566:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c56a:	4829      	ldr	r0, [pc, #164]	; (802c610 <_vfiprintf_r+0x224>)
 802c56c:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c570:	2206      	movs	r2, #6
 802c572:	f7d3 fe9d 	bl	80002b0 <memchr>
 802c576:	2800      	cmp	r0, #0
 802c578:	d03f      	beq.n	802c5fa <_vfiprintf_r+0x20e>
 802c57a:	4b26      	ldr	r3, [pc, #152]	; (802c614 <_vfiprintf_r+0x228>)
 802c57c:	bb1b      	cbnz	r3, 802c5c6 <_vfiprintf_r+0x1da>
 802c57e:	9b03      	ldr	r3, [sp, #12]
 802c580:	3307      	adds	r3, #7
 802c582:	f023 0307 	bic.w	r3, r3, #7
 802c586:	3308      	adds	r3, #8
 802c588:	9303      	str	r3, [sp, #12]
 802c58a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c58c:	443b      	add	r3, r7
 802c58e:	9309      	str	r3, [sp, #36]	; 0x24
 802c590:	e768      	b.n	802c464 <_vfiprintf_r+0x78>
 802c592:	fb0c 3202 	mla	r2, ip, r2, r3
 802c596:	460c      	mov	r4, r1
 802c598:	2001      	movs	r0, #1
 802c59a:	e7a6      	b.n	802c4ea <_vfiprintf_r+0xfe>
 802c59c:	2300      	movs	r3, #0
 802c59e:	3401      	adds	r4, #1
 802c5a0:	9305      	str	r3, [sp, #20]
 802c5a2:	4619      	mov	r1, r3
 802c5a4:	f04f 0c0a 	mov.w	ip, #10
 802c5a8:	4620      	mov	r0, r4
 802c5aa:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c5ae:	3a30      	subs	r2, #48	; 0x30
 802c5b0:	2a09      	cmp	r2, #9
 802c5b2:	d903      	bls.n	802c5bc <_vfiprintf_r+0x1d0>
 802c5b4:	2b00      	cmp	r3, #0
 802c5b6:	d0c6      	beq.n	802c546 <_vfiprintf_r+0x15a>
 802c5b8:	9105      	str	r1, [sp, #20]
 802c5ba:	e7c4      	b.n	802c546 <_vfiprintf_r+0x15a>
 802c5bc:	fb0c 2101 	mla	r1, ip, r1, r2
 802c5c0:	4604      	mov	r4, r0
 802c5c2:	2301      	movs	r3, #1
 802c5c4:	e7f0      	b.n	802c5a8 <_vfiprintf_r+0x1bc>
 802c5c6:	ab03      	add	r3, sp, #12
 802c5c8:	9300      	str	r3, [sp, #0]
 802c5ca:	462a      	mov	r2, r5
 802c5cc:	4b12      	ldr	r3, [pc, #72]	; (802c618 <_vfiprintf_r+0x22c>)
 802c5ce:	a904      	add	r1, sp, #16
 802c5d0:	4630      	mov	r0, r6
 802c5d2:	f3af 8000 	nop.w
 802c5d6:	4607      	mov	r7, r0
 802c5d8:	1c78      	adds	r0, r7, #1
 802c5da:	d1d6      	bne.n	802c58a <_vfiprintf_r+0x19e>
 802c5dc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c5de:	07d9      	lsls	r1, r3, #31
 802c5e0:	d405      	bmi.n	802c5ee <_vfiprintf_r+0x202>
 802c5e2:	89ab      	ldrh	r3, [r5, #12]
 802c5e4:	059a      	lsls	r2, r3, #22
 802c5e6:	d402      	bmi.n	802c5ee <_vfiprintf_r+0x202>
 802c5e8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c5ea:	f7ff fe1b 	bl	802c224 <__retarget_lock_release_recursive>
 802c5ee:	89ab      	ldrh	r3, [r5, #12]
 802c5f0:	065b      	lsls	r3, r3, #25
 802c5f2:	f53f af1d 	bmi.w	802c430 <_vfiprintf_r+0x44>
 802c5f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c5f8:	e71c      	b.n	802c434 <_vfiprintf_r+0x48>
 802c5fa:	ab03      	add	r3, sp, #12
 802c5fc:	9300      	str	r3, [sp, #0]
 802c5fe:	462a      	mov	r2, r5
 802c600:	4b05      	ldr	r3, [pc, #20]	; (802c618 <_vfiprintf_r+0x22c>)
 802c602:	a904      	add	r1, sp, #16
 802c604:	4630      	mov	r0, r6
 802c606:	f000 f879 	bl	802c6fc <_printf_i>
 802c60a:	e7e4      	b.n	802c5d6 <_vfiprintf_r+0x1ea>
 802c60c:	08043e58 	.word	0x08043e58
 802c610:	08043e62 	.word	0x08043e62
 802c614:	00000000 	.word	0x00000000
 802c618:	0802c3c7 	.word	0x0802c3c7
 802c61c:	08043e5e 	.word	0x08043e5e

0802c620 <_printf_common>:
 802c620:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c624:	4616      	mov	r6, r2
 802c626:	4699      	mov	r9, r3
 802c628:	688a      	ldr	r2, [r1, #8]
 802c62a:	690b      	ldr	r3, [r1, #16]
 802c62c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802c630:	4293      	cmp	r3, r2
 802c632:	bfb8      	it	lt
 802c634:	4613      	movlt	r3, r2
 802c636:	6033      	str	r3, [r6, #0]
 802c638:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802c63c:	4607      	mov	r7, r0
 802c63e:	460c      	mov	r4, r1
 802c640:	b10a      	cbz	r2, 802c646 <_printf_common+0x26>
 802c642:	3301      	adds	r3, #1
 802c644:	6033      	str	r3, [r6, #0]
 802c646:	6823      	ldr	r3, [r4, #0]
 802c648:	0699      	lsls	r1, r3, #26
 802c64a:	bf42      	ittt	mi
 802c64c:	6833      	ldrmi	r3, [r6, #0]
 802c64e:	3302      	addmi	r3, #2
 802c650:	6033      	strmi	r3, [r6, #0]
 802c652:	6825      	ldr	r5, [r4, #0]
 802c654:	f015 0506 	ands.w	r5, r5, #6
 802c658:	d106      	bne.n	802c668 <_printf_common+0x48>
 802c65a:	f104 0a19 	add.w	sl, r4, #25
 802c65e:	68e3      	ldr	r3, [r4, #12]
 802c660:	6832      	ldr	r2, [r6, #0]
 802c662:	1a9b      	subs	r3, r3, r2
 802c664:	42ab      	cmp	r3, r5
 802c666:	dc26      	bgt.n	802c6b6 <_printf_common+0x96>
 802c668:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802c66c:	1e13      	subs	r3, r2, #0
 802c66e:	6822      	ldr	r2, [r4, #0]
 802c670:	bf18      	it	ne
 802c672:	2301      	movne	r3, #1
 802c674:	0692      	lsls	r2, r2, #26
 802c676:	d42b      	bmi.n	802c6d0 <_printf_common+0xb0>
 802c678:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c67c:	4649      	mov	r1, r9
 802c67e:	4638      	mov	r0, r7
 802c680:	47c0      	blx	r8
 802c682:	3001      	adds	r0, #1
 802c684:	d01e      	beq.n	802c6c4 <_printf_common+0xa4>
 802c686:	6823      	ldr	r3, [r4, #0]
 802c688:	6922      	ldr	r2, [r4, #16]
 802c68a:	f003 0306 	and.w	r3, r3, #6
 802c68e:	2b04      	cmp	r3, #4
 802c690:	bf02      	ittt	eq
 802c692:	68e5      	ldreq	r5, [r4, #12]
 802c694:	6833      	ldreq	r3, [r6, #0]
 802c696:	1aed      	subeq	r5, r5, r3
 802c698:	68a3      	ldr	r3, [r4, #8]
 802c69a:	bf0c      	ite	eq
 802c69c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c6a0:	2500      	movne	r5, #0
 802c6a2:	4293      	cmp	r3, r2
 802c6a4:	bfc4      	itt	gt
 802c6a6:	1a9b      	subgt	r3, r3, r2
 802c6a8:	18ed      	addgt	r5, r5, r3
 802c6aa:	2600      	movs	r6, #0
 802c6ac:	341a      	adds	r4, #26
 802c6ae:	42b5      	cmp	r5, r6
 802c6b0:	d11a      	bne.n	802c6e8 <_printf_common+0xc8>
 802c6b2:	2000      	movs	r0, #0
 802c6b4:	e008      	b.n	802c6c8 <_printf_common+0xa8>
 802c6b6:	2301      	movs	r3, #1
 802c6b8:	4652      	mov	r2, sl
 802c6ba:	4649      	mov	r1, r9
 802c6bc:	4638      	mov	r0, r7
 802c6be:	47c0      	blx	r8
 802c6c0:	3001      	adds	r0, #1
 802c6c2:	d103      	bne.n	802c6cc <_printf_common+0xac>
 802c6c4:	f04f 30ff 	mov.w	r0, #4294967295
 802c6c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c6cc:	3501      	adds	r5, #1
 802c6ce:	e7c6      	b.n	802c65e <_printf_common+0x3e>
 802c6d0:	18e1      	adds	r1, r4, r3
 802c6d2:	1c5a      	adds	r2, r3, #1
 802c6d4:	2030      	movs	r0, #48	; 0x30
 802c6d6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c6da:	4422      	add	r2, r4
 802c6dc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c6e0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c6e4:	3302      	adds	r3, #2
 802c6e6:	e7c7      	b.n	802c678 <_printf_common+0x58>
 802c6e8:	2301      	movs	r3, #1
 802c6ea:	4622      	mov	r2, r4
 802c6ec:	4649      	mov	r1, r9
 802c6ee:	4638      	mov	r0, r7
 802c6f0:	47c0      	blx	r8
 802c6f2:	3001      	adds	r0, #1
 802c6f4:	d0e6      	beq.n	802c6c4 <_printf_common+0xa4>
 802c6f6:	3601      	adds	r6, #1
 802c6f8:	e7d9      	b.n	802c6ae <_printf_common+0x8e>
	...

0802c6fc <_printf_i>:
 802c6fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c700:	7e0f      	ldrb	r7, [r1, #24]
 802c702:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c704:	2f78      	cmp	r7, #120	; 0x78
 802c706:	4691      	mov	r9, r2
 802c708:	4680      	mov	r8, r0
 802c70a:	460c      	mov	r4, r1
 802c70c:	469a      	mov	sl, r3
 802c70e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c712:	d807      	bhi.n	802c724 <_printf_i+0x28>
 802c714:	2f62      	cmp	r7, #98	; 0x62
 802c716:	d80a      	bhi.n	802c72e <_printf_i+0x32>
 802c718:	2f00      	cmp	r7, #0
 802c71a:	f000 80d4 	beq.w	802c8c6 <_printf_i+0x1ca>
 802c71e:	2f58      	cmp	r7, #88	; 0x58
 802c720:	f000 80c0 	beq.w	802c8a4 <_printf_i+0x1a8>
 802c724:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c728:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c72c:	e03a      	b.n	802c7a4 <_printf_i+0xa8>
 802c72e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c732:	2b15      	cmp	r3, #21
 802c734:	d8f6      	bhi.n	802c724 <_printf_i+0x28>
 802c736:	a101      	add	r1, pc, #4	; (adr r1, 802c73c <_printf_i+0x40>)
 802c738:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c73c:	0802c795 	.word	0x0802c795
 802c740:	0802c7a9 	.word	0x0802c7a9
 802c744:	0802c725 	.word	0x0802c725
 802c748:	0802c725 	.word	0x0802c725
 802c74c:	0802c725 	.word	0x0802c725
 802c750:	0802c725 	.word	0x0802c725
 802c754:	0802c7a9 	.word	0x0802c7a9
 802c758:	0802c725 	.word	0x0802c725
 802c75c:	0802c725 	.word	0x0802c725
 802c760:	0802c725 	.word	0x0802c725
 802c764:	0802c725 	.word	0x0802c725
 802c768:	0802c8ad 	.word	0x0802c8ad
 802c76c:	0802c7d5 	.word	0x0802c7d5
 802c770:	0802c867 	.word	0x0802c867
 802c774:	0802c725 	.word	0x0802c725
 802c778:	0802c725 	.word	0x0802c725
 802c77c:	0802c8cf 	.word	0x0802c8cf
 802c780:	0802c725 	.word	0x0802c725
 802c784:	0802c7d5 	.word	0x0802c7d5
 802c788:	0802c725 	.word	0x0802c725
 802c78c:	0802c725 	.word	0x0802c725
 802c790:	0802c86f 	.word	0x0802c86f
 802c794:	682b      	ldr	r3, [r5, #0]
 802c796:	1d1a      	adds	r2, r3, #4
 802c798:	681b      	ldr	r3, [r3, #0]
 802c79a:	602a      	str	r2, [r5, #0]
 802c79c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c7a0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c7a4:	2301      	movs	r3, #1
 802c7a6:	e09f      	b.n	802c8e8 <_printf_i+0x1ec>
 802c7a8:	6820      	ldr	r0, [r4, #0]
 802c7aa:	682b      	ldr	r3, [r5, #0]
 802c7ac:	0607      	lsls	r7, r0, #24
 802c7ae:	f103 0104 	add.w	r1, r3, #4
 802c7b2:	6029      	str	r1, [r5, #0]
 802c7b4:	d501      	bpl.n	802c7ba <_printf_i+0xbe>
 802c7b6:	681e      	ldr	r6, [r3, #0]
 802c7b8:	e003      	b.n	802c7c2 <_printf_i+0xc6>
 802c7ba:	0646      	lsls	r6, r0, #25
 802c7bc:	d5fb      	bpl.n	802c7b6 <_printf_i+0xba>
 802c7be:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c7c2:	2e00      	cmp	r6, #0
 802c7c4:	da03      	bge.n	802c7ce <_printf_i+0xd2>
 802c7c6:	232d      	movs	r3, #45	; 0x2d
 802c7c8:	4276      	negs	r6, r6
 802c7ca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c7ce:	485a      	ldr	r0, [pc, #360]	; (802c938 <_printf_i+0x23c>)
 802c7d0:	230a      	movs	r3, #10
 802c7d2:	e012      	b.n	802c7fa <_printf_i+0xfe>
 802c7d4:	682b      	ldr	r3, [r5, #0]
 802c7d6:	6820      	ldr	r0, [r4, #0]
 802c7d8:	1d19      	adds	r1, r3, #4
 802c7da:	6029      	str	r1, [r5, #0]
 802c7dc:	0605      	lsls	r5, r0, #24
 802c7de:	d501      	bpl.n	802c7e4 <_printf_i+0xe8>
 802c7e0:	681e      	ldr	r6, [r3, #0]
 802c7e2:	e002      	b.n	802c7ea <_printf_i+0xee>
 802c7e4:	0641      	lsls	r1, r0, #25
 802c7e6:	d5fb      	bpl.n	802c7e0 <_printf_i+0xe4>
 802c7e8:	881e      	ldrh	r6, [r3, #0]
 802c7ea:	4853      	ldr	r0, [pc, #332]	; (802c938 <_printf_i+0x23c>)
 802c7ec:	2f6f      	cmp	r7, #111	; 0x6f
 802c7ee:	bf0c      	ite	eq
 802c7f0:	2308      	moveq	r3, #8
 802c7f2:	230a      	movne	r3, #10
 802c7f4:	2100      	movs	r1, #0
 802c7f6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c7fa:	6865      	ldr	r5, [r4, #4]
 802c7fc:	60a5      	str	r5, [r4, #8]
 802c7fe:	2d00      	cmp	r5, #0
 802c800:	bfa2      	ittt	ge
 802c802:	6821      	ldrge	r1, [r4, #0]
 802c804:	f021 0104 	bicge.w	r1, r1, #4
 802c808:	6021      	strge	r1, [r4, #0]
 802c80a:	b90e      	cbnz	r6, 802c810 <_printf_i+0x114>
 802c80c:	2d00      	cmp	r5, #0
 802c80e:	d04b      	beq.n	802c8a8 <_printf_i+0x1ac>
 802c810:	4615      	mov	r5, r2
 802c812:	fbb6 f1f3 	udiv	r1, r6, r3
 802c816:	fb03 6711 	mls	r7, r3, r1, r6
 802c81a:	5dc7      	ldrb	r7, [r0, r7]
 802c81c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c820:	4637      	mov	r7, r6
 802c822:	42bb      	cmp	r3, r7
 802c824:	460e      	mov	r6, r1
 802c826:	d9f4      	bls.n	802c812 <_printf_i+0x116>
 802c828:	2b08      	cmp	r3, #8
 802c82a:	d10b      	bne.n	802c844 <_printf_i+0x148>
 802c82c:	6823      	ldr	r3, [r4, #0]
 802c82e:	07de      	lsls	r6, r3, #31
 802c830:	d508      	bpl.n	802c844 <_printf_i+0x148>
 802c832:	6923      	ldr	r3, [r4, #16]
 802c834:	6861      	ldr	r1, [r4, #4]
 802c836:	4299      	cmp	r1, r3
 802c838:	bfde      	ittt	le
 802c83a:	2330      	movle	r3, #48	; 0x30
 802c83c:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c840:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c844:	1b52      	subs	r2, r2, r5
 802c846:	6122      	str	r2, [r4, #16]
 802c848:	f8cd a000 	str.w	sl, [sp]
 802c84c:	464b      	mov	r3, r9
 802c84e:	aa03      	add	r2, sp, #12
 802c850:	4621      	mov	r1, r4
 802c852:	4640      	mov	r0, r8
 802c854:	f7ff fee4 	bl	802c620 <_printf_common>
 802c858:	3001      	adds	r0, #1
 802c85a:	d14a      	bne.n	802c8f2 <_printf_i+0x1f6>
 802c85c:	f04f 30ff 	mov.w	r0, #4294967295
 802c860:	b004      	add	sp, #16
 802c862:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c866:	6823      	ldr	r3, [r4, #0]
 802c868:	f043 0320 	orr.w	r3, r3, #32
 802c86c:	6023      	str	r3, [r4, #0]
 802c86e:	4833      	ldr	r0, [pc, #204]	; (802c93c <_printf_i+0x240>)
 802c870:	2778      	movs	r7, #120	; 0x78
 802c872:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c876:	6823      	ldr	r3, [r4, #0]
 802c878:	6829      	ldr	r1, [r5, #0]
 802c87a:	061f      	lsls	r7, r3, #24
 802c87c:	f851 6b04 	ldr.w	r6, [r1], #4
 802c880:	d402      	bmi.n	802c888 <_printf_i+0x18c>
 802c882:	065f      	lsls	r7, r3, #25
 802c884:	bf48      	it	mi
 802c886:	b2b6      	uxthmi	r6, r6
 802c888:	07df      	lsls	r7, r3, #31
 802c88a:	bf48      	it	mi
 802c88c:	f043 0320 	orrmi.w	r3, r3, #32
 802c890:	6029      	str	r1, [r5, #0]
 802c892:	bf48      	it	mi
 802c894:	6023      	strmi	r3, [r4, #0]
 802c896:	b91e      	cbnz	r6, 802c8a0 <_printf_i+0x1a4>
 802c898:	6823      	ldr	r3, [r4, #0]
 802c89a:	f023 0320 	bic.w	r3, r3, #32
 802c89e:	6023      	str	r3, [r4, #0]
 802c8a0:	2310      	movs	r3, #16
 802c8a2:	e7a7      	b.n	802c7f4 <_printf_i+0xf8>
 802c8a4:	4824      	ldr	r0, [pc, #144]	; (802c938 <_printf_i+0x23c>)
 802c8a6:	e7e4      	b.n	802c872 <_printf_i+0x176>
 802c8a8:	4615      	mov	r5, r2
 802c8aa:	e7bd      	b.n	802c828 <_printf_i+0x12c>
 802c8ac:	682b      	ldr	r3, [r5, #0]
 802c8ae:	6826      	ldr	r6, [r4, #0]
 802c8b0:	6961      	ldr	r1, [r4, #20]
 802c8b2:	1d18      	adds	r0, r3, #4
 802c8b4:	6028      	str	r0, [r5, #0]
 802c8b6:	0635      	lsls	r5, r6, #24
 802c8b8:	681b      	ldr	r3, [r3, #0]
 802c8ba:	d501      	bpl.n	802c8c0 <_printf_i+0x1c4>
 802c8bc:	6019      	str	r1, [r3, #0]
 802c8be:	e002      	b.n	802c8c6 <_printf_i+0x1ca>
 802c8c0:	0670      	lsls	r0, r6, #25
 802c8c2:	d5fb      	bpl.n	802c8bc <_printf_i+0x1c0>
 802c8c4:	8019      	strh	r1, [r3, #0]
 802c8c6:	2300      	movs	r3, #0
 802c8c8:	6123      	str	r3, [r4, #16]
 802c8ca:	4615      	mov	r5, r2
 802c8cc:	e7bc      	b.n	802c848 <_printf_i+0x14c>
 802c8ce:	682b      	ldr	r3, [r5, #0]
 802c8d0:	1d1a      	adds	r2, r3, #4
 802c8d2:	602a      	str	r2, [r5, #0]
 802c8d4:	681d      	ldr	r5, [r3, #0]
 802c8d6:	6862      	ldr	r2, [r4, #4]
 802c8d8:	2100      	movs	r1, #0
 802c8da:	4628      	mov	r0, r5
 802c8dc:	f7d3 fce8 	bl	80002b0 <memchr>
 802c8e0:	b108      	cbz	r0, 802c8e6 <_printf_i+0x1ea>
 802c8e2:	1b40      	subs	r0, r0, r5
 802c8e4:	6060      	str	r0, [r4, #4]
 802c8e6:	6863      	ldr	r3, [r4, #4]
 802c8e8:	6123      	str	r3, [r4, #16]
 802c8ea:	2300      	movs	r3, #0
 802c8ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c8f0:	e7aa      	b.n	802c848 <_printf_i+0x14c>
 802c8f2:	6923      	ldr	r3, [r4, #16]
 802c8f4:	462a      	mov	r2, r5
 802c8f6:	4649      	mov	r1, r9
 802c8f8:	4640      	mov	r0, r8
 802c8fa:	47d0      	blx	sl
 802c8fc:	3001      	adds	r0, #1
 802c8fe:	d0ad      	beq.n	802c85c <_printf_i+0x160>
 802c900:	6823      	ldr	r3, [r4, #0]
 802c902:	079b      	lsls	r3, r3, #30
 802c904:	d413      	bmi.n	802c92e <_printf_i+0x232>
 802c906:	68e0      	ldr	r0, [r4, #12]
 802c908:	9b03      	ldr	r3, [sp, #12]
 802c90a:	4298      	cmp	r0, r3
 802c90c:	bfb8      	it	lt
 802c90e:	4618      	movlt	r0, r3
 802c910:	e7a6      	b.n	802c860 <_printf_i+0x164>
 802c912:	2301      	movs	r3, #1
 802c914:	4632      	mov	r2, r6
 802c916:	4649      	mov	r1, r9
 802c918:	4640      	mov	r0, r8
 802c91a:	47d0      	blx	sl
 802c91c:	3001      	adds	r0, #1
 802c91e:	d09d      	beq.n	802c85c <_printf_i+0x160>
 802c920:	3501      	adds	r5, #1
 802c922:	68e3      	ldr	r3, [r4, #12]
 802c924:	9903      	ldr	r1, [sp, #12]
 802c926:	1a5b      	subs	r3, r3, r1
 802c928:	42ab      	cmp	r3, r5
 802c92a:	dcf2      	bgt.n	802c912 <_printf_i+0x216>
 802c92c:	e7eb      	b.n	802c906 <_printf_i+0x20a>
 802c92e:	2500      	movs	r5, #0
 802c930:	f104 0619 	add.w	r6, r4, #25
 802c934:	e7f5      	b.n	802c922 <_printf_i+0x226>
 802c936:	bf00      	nop
 802c938:	08043e69 	.word	0x08043e69
 802c93c:	08043e7a 	.word	0x08043e7a

0802c940 <__sflush_r>:
 802c940:	898a      	ldrh	r2, [r1, #12]
 802c942:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c946:	4605      	mov	r5, r0
 802c948:	0710      	lsls	r0, r2, #28
 802c94a:	460c      	mov	r4, r1
 802c94c:	d458      	bmi.n	802ca00 <__sflush_r+0xc0>
 802c94e:	684b      	ldr	r3, [r1, #4]
 802c950:	2b00      	cmp	r3, #0
 802c952:	dc05      	bgt.n	802c960 <__sflush_r+0x20>
 802c954:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c956:	2b00      	cmp	r3, #0
 802c958:	dc02      	bgt.n	802c960 <__sflush_r+0x20>
 802c95a:	2000      	movs	r0, #0
 802c95c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c960:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c962:	2e00      	cmp	r6, #0
 802c964:	d0f9      	beq.n	802c95a <__sflush_r+0x1a>
 802c966:	2300      	movs	r3, #0
 802c968:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c96c:	682f      	ldr	r7, [r5, #0]
 802c96e:	6a21      	ldr	r1, [r4, #32]
 802c970:	602b      	str	r3, [r5, #0]
 802c972:	d032      	beq.n	802c9da <__sflush_r+0x9a>
 802c974:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c976:	89a3      	ldrh	r3, [r4, #12]
 802c978:	075a      	lsls	r2, r3, #29
 802c97a:	d505      	bpl.n	802c988 <__sflush_r+0x48>
 802c97c:	6863      	ldr	r3, [r4, #4]
 802c97e:	1ac0      	subs	r0, r0, r3
 802c980:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c982:	b10b      	cbz	r3, 802c988 <__sflush_r+0x48>
 802c984:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c986:	1ac0      	subs	r0, r0, r3
 802c988:	2300      	movs	r3, #0
 802c98a:	4602      	mov	r2, r0
 802c98c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c98e:	6a21      	ldr	r1, [r4, #32]
 802c990:	4628      	mov	r0, r5
 802c992:	47b0      	blx	r6
 802c994:	1c43      	adds	r3, r0, #1
 802c996:	89a3      	ldrh	r3, [r4, #12]
 802c998:	d106      	bne.n	802c9a8 <__sflush_r+0x68>
 802c99a:	6829      	ldr	r1, [r5, #0]
 802c99c:	291d      	cmp	r1, #29
 802c99e:	d82b      	bhi.n	802c9f8 <__sflush_r+0xb8>
 802c9a0:	4a29      	ldr	r2, [pc, #164]	; (802ca48 <__sflush_r+0x108>)
 802c9a2:	410a      	asrs	r2, r1
 802c9a4:	07d6      	lsls	r6, r2, #31
 802c9a6:	d427      	bmi.n	802c9f8 <__sflush_r+0xb8>
 802c9a8:	2200      	movs	r2, #0
 802c9aa:	6062      	str	r2, [r4, #4]
 802c9ac:	04d9      	lsls	r1, r3, #19
 802c9ae:	6922      	ldr	r2, [r4, #16]
 802c9b0:	6022      	str	r2, [r4, #0]
 802c9b2:	d504      	bpl.n	802c9be <__sflush_r+0x7e>
 802c9b4:	1c42      	adds	r2, r0, #1
 802c9b6:	d101      	bne.n	802c9bc <__sflush_r+0x7c>
 802c9b8:	682b      	ldr	r3, [r5, #0]
 802c9ba:	b903      	cbnz	r3, 802c9be <__sflush_r+0x7e>
 802c9bc:	6560      	str	r0, [r4, #84]	; 0x54
 802c9be:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c9c0:	602f      	str	r7, [r5, #0]
 802c9c2:	2900      	cmp	r1, #0
 802c9c4:	d0c9      	beq.n	802c95a <__sflush_r+0x1a>
 802c9c6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c9ca:	4299      	cmp	r1, r3
 802c9cc:	d002      	beq.n	802c9d4 <__sflush_r+0x94>
 802c9ce:	4628      	mov	r0, r5
 802c9d0:	f7ff fc96 	bl	802c300 <_free_r>
 802c9d4:	2000      	movs	r0, #0
 802c9d6:	6360      	str	r0, [r4, #52]	; 0x34
 802c9d8:	e7c0      	b.n	802c95c <__sflush_r+0x1c>
 802c9da:	2301      	movs	r3, #1
 802c9dc:	4628      	mov	r0, r5
 802c9de:	47b0      	blx	r6
 802c9e0:	1c41      	adds	r1, r0, #1
 802c9e2:	d1c8      	bne.n	802c976 <__sflush_r+0x36>
 802c9e4:	682b      	ldr	r3, [r5, #0]
 802c9e6:	2b00      	cmp	r3, #0
 802c9e8:	d0c5      	beq.n	802c976 <__sflush_r+0x36>
 802c9ea:	2b1d      	cmp	r3, #29
 802c9ec:	d001      	beq.n	802c9f2 <__sflush_r+0xb2>
 802c9ee:	2b16      	cmp	r3, #22
 802c9f0:	d101      	bne.n	802c9f6 <__sflush_r+0xb6>
 802c9f2:	602f      	str	r7, [r5, #0]
 802c9f4:	e7b1      	b.n	802c95a <__sflush_r+0x1a>
 802c9f6:	89a3      	ldrh	r3, [r4, #12]
 802c9f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c9fc:	81a3      	strh	r3, [r4, #12]
 802c9fe:	e7ad      	b.n	802c95c <__sflush_r+0x1c>
 802ca00:	690f      	ldr	r7, [r1, #16]
 802ca02:	2f00      	cmp	r7, #0
 802ca04:	d0a9      	beq.n	802c95a <__sflush_r+0x1a>
 802ca06:	0793      	lsls	r3, r2, #30
 802ca08:	680e      	ldr	r6, [r1, #0]
 802ca0a:	bf08      	it	eq
 802ca0c:	694b      	ldreq	r3, [r1, #20]
 802ca0e:	600f      	str	r7, [r1, #0]
 802ca10:	bf18      	it	ne
 802ca12:	2300      	movne	r3, #0
 802ca14:	eba6 0807 	sub.w	r8, r6, r7
 802ca18:	608b      	str	r3, [r1, #8]
 802ca1a:	f1b8 0f00 	cmp.w	r8, #0
 802ca1e:	dd9c      	ble.n	802c95a <__sflush_r+0x1a>
 802ca20:	6a21      	ldr	r1, [r4, #32]
 802ca22:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802ca24:	4643      	mov	r3, r8
 802ca26:	463a      	mov	r2, r7
 802ca28:	4628      	mov	r0, r5
 802ca2a:	47b0      	blx	r6
 802ca2c:	2800      	cmp	r0, #0
 802ca2e:	dc06      	bgt.n	802ca3e <__sflush_r+0xfe>
 802ca30:	89a3      	ldrh	r3, [r4, #12]
 802ca32:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802ca36:	81a3      	strh	r3, [r4, #12]
 802ca38:	f04f 30ff 	mov.w	r0, #4294967295
 802ca3c:	e78e      	b.n	802c95c <__sflush_r+0x1c>
 802ca3e:	4407      	add	r7, r0
 802ca40:	eba8 0800 	sub.w	r8, r8, r0
 802ca44:	e7e9      	b.n	802ca1a <__sflush_r+0xda>
 802ca46:	bf00      	nop
 802ca48:	dfbffffe 	.word	0xdfbffffe

0802ca4c <_fflush_r>:
 802ca4c:	b538      	push	{r3, r4, r5, lr}
 802ca4e:	690b      	ldr	r3, [r1, #16]
 802ca50:	4605      	mov	r5, r0
 802ca52:	460c      	mov	r4, r1
 802ca54:	b913      	cbnz	r3, 802ca5c <_fflush_r+0x10>
 802ca56:	2500      	movs	r5, #0
 802ca58:	4628      	mov	r0, r5
 802ca5a:	bd38      	pop	{r3, r4, r5, pc}
 802ca5c:	b118      	cbz	r0, 802ca66 <_fflush_r+0x1a>
 802ca5e:	6a03      	ldr	r3, [r0, #32]
 802ca60:	b90b      	cbnz	r3, 802ca66 <_fflush_r+0x1a>
 802ca62:	f7ff fa2f 	bl	802bec4 <__sinit>
 802ca66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ca6a:	2b00      	cmp	r3, #0
 802ca6c:	d0f3      	beq.n	802ca56 <_fflush_r+0xa>
 802ca6e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ca70:	07d0      	lsls	r0, r2, #31
 802ca72:	d404      	bmi.n	802ca7e <_fflush_r+0x32>
 802ca74:	0599      	lsls	r1, r3, #22
 802ca76:	d402      	bmi.n	802ca7e <_fflush_r+0x32>
 802ca78:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ca7a:	f7ff fbd2 	bl	802c222 <__retarget_lock_acquire_recursive>
 802ca7e:	4628      	mov	r0, r5
 802ca80:	4621      	mov	r1, r4
 802ca82:	f7ff ff5d 	bl	802c940 <__sflush_r>
 802ca86:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ca88:	07da      	lsls	r2, r3, #31
 802ca8a:	4605      	mov	r5, r0
 802ca8c:	d4e4      	bmi.n	802ca58 <_fflush_r+0xc>
 802ca8e:	89a3      	ldrh	r3, [r4, #12]
 802ca90:	059b      	lsls	r3, r3, #22
 802ca92:	d4e1      	bmi.n	802ca58 <_fflush_r+0xc>
 802ca94:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ca96:	f7ff fbc5 	bl	802c224 <__retarget_lock_release_recursive>
 802ca9a:	e7dd      	b.n	802ca58 <_fflush_r+0xc>

0802ca9c <__swbuf_r>:
 802ca9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ca9e:	460e      	mov	r6, r1
 802caa0:	4614      	mov	r4, r2
 802caa2:	4605      	mov	r5, r0
 802caa4:	b118      	cbz	r0, 802caae <__swbuf_r+0x12>
 802caa6:	6a03      	ldr	r3, [r0, #32]
 802caa8:	b90b      	cbnz	r3, 802caae <__swbuf_r+0x12>
 802caaa:	f7ff fa0b 	bl	802bec4 <__sinit>
 802caae:	69a3      	ldr	r3, [r4, #24]
 802cab0:	60a3      	str	r3, [r4, #8]
 802cab2:	89a3      	ldrh	r3, [r4, #12]
 802cab4:	071a      	lsls	r2, r3, #28
 802cab6:	d525      	bpl.n	802cb04 <__swbuf_r+0x68>
 802cab8:	6923      	ldr	r3, [r4, #16]
 802caba:	b31b      	cbz	r3, 802cb04 <__swbuf_r+0x68>
 802cabc:	6823      	ldr	r3, [r4, #0]
 802cabe:	6922      	ldr	r2, [r4, #16]
 802cac0:	1a98      	subs	r0, r3, r2
 802cac2:	6963      	ldr	r3, [r4, #20]
 802cac4:	b2f6      	uxtb	r6, r6
 802cac6:	4283      	cmp	r3, r0
 802cac8:	4637      	mov	r7, r6
 802caca:	dc04      	bgt.n	802cad6 <__swbuf_r+0x3a>
 802cacc:	4621      	mov	r1, r4
 802cace:	4628      	mov	r0, r5
 802cad0:	f7ff ffbc 	bl	802ca4c <_fflush_r>
 802cad4:	b9e0      	cbnz	r0, 802cb10 <__swbuf_r+0x74>
 802cad6:	68a3      	ldr	r3, [r4, #8]
 802cad8:	3b01      	subs	r3, #1
 802cada:	60a3      	str	r3, [r4, #8]
 802cadc:	6823      	ldr	r3, [r4, #0]
 802cade:	1c5a      	adds	r2, r3, #1
 802cae0:	6022      	str	r2, [r4, #0]
 802cae2:	701e      	strb	r6, [r3, #0]
 802cae4:	6962      	ldr	r2, [r4, #20]
 802cae6:	1c43      	adds	r3, r0, #1
 802cae8:	429a      	cmp	r2, r3
 802caea:	d004      	beq.n	802caf6 <__swbuf_r+0x5a>
 802caec:	89a3      	ldrh	r3, [r4, #12]
 802caee:	07db      	lsls	r3, r3, #31
 802caf0:	d506      	bpl.n	802cb00 <__swbuf_r+0x64>
 802caf2:	2e0a      	cmp	r6, #10
 802caf4:	d104      	bne.n	802cb00 <__swbuf_r+0x64>
 802caf6:	4621      	mov	r1, r4
 802caf8:	4628      	mov	r0, r5
 802cafa:	f7ff ffa7 	bl	802ca4c <_fflush_r>
 802cafe:	b938      	cbnz	r0, 802cb10 <__swbuf_r+0x74>
 802cb00:	4638      	mov	r0, r7
 802cb02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802cb04:	4621      	mov	r1, r4
 802cb06:	4628      	mov	r0, r5
 802cb08:	f000 f806 	bl	802cb18 <__swsetup_r>
 802cb0c:	2800      	cmp	r0, #0
 802cb0e:	d0d5      	beq.n	802cabc <__swbuf_r+0x20>
 802cb10:	f04f 37ff 	mov.w	r7, #4294967295
 802cb14:	e7f4      	b.n	802cb00 <__swbuf_r+0x64>
	...

0802cb18 <__swsetup_r>:
 802cb18:	b538      	push	{r3, r4, r5, lr}
 802cb1a:	4b2a      	ldr	r3, [pc, #168]	; (802cbc4 <__swsetup_r+0xac>)
 802cb1c:	4605      	mov	r5, r0
 802cb1e:	6818      	ldr	r0, [r3, #0]
 802cb20:	460c      	mov	r4, r1
 802cb22:	b118      	cbz	r0, 802cb2c <__swsetup_r+0x14>
 802cb24:	6a03      	ldr	r3, [r0, #32]
 802cb26:	b90b      	cbnz	r3, 802cb2c <__swsetup_r+0x14>
 802cb28:	f7ff f9cc 	bl	802bec4 <__sinit>
 802cb2c:	89a3      	ldrh	r3, [r4, #12]
 802cb2e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cb32:	0718      	lsls	r0, r3, #28
 802cb34:	d422      	bmi.n	802cb7c <__swsetup_r+0x64>
 802cb36:	06d9      	lsls	r1, r3, #27
 802cb38:	d407      	bmi.n	802cb4a <__swsetup_r+0x32>
 802cb3a:	2309      	movs	r3, #9
 802cb3c:	602b      	str	r3, [r5, #0]
 802cb3e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802cb42:	81a3      	strh	r3, [r4, #12]
 802cb44:	f04f 30ff 	mov.w	r0, #4294967295
 802cb48:	e034      	b.n	802cbb4 <__swsetup_r+0x9c>
 802cb4a:	0758      	lsls	r0, r3, #29
 802cb4c:	d512      	bpl.n	802cb74 <__swsetup_r+0x5c>
 802cb4e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802cb50:	b141      	cbz	r1, 802cb64 <__swsetup_r+0x4c>
 802cb52:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802cb56:	4299      	cmp	r1, r3
 802cb58:	d002      	beq.n	802cb60 <__swsetup_r+0x48>
 802cb5a:	4628      	mov	r0, r5
 802cb5c:	f7ff fbd0 	bl	802c300 <_free_r>
 802cb60:	2300      	movs	r3, #0
 802cb62:	6363      	str	r3, [r4, #52]	; 0x34
 802cb64:	89a3      	ldrh	r3, [r4, #12]
 802cb66:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802cb6a:	81a3      	strh	r3, [r4, #12]
 802cb6c:	2300      	movs	r3, #0
 802cb6e:	6063      	str	r3, [r4, #4]
 802cb70:	6923      	ldr	r3, [r4, #16]
 802cb72:	6023      	str	r3, [r4, #0]
 802cb74:	89a3      	ldrh	r3, [r4, #12]
 802cb76:	f043 0308 	orr.w	r3, r3, #8
 802cb7a:	81a3      	strh	r3, [r4, #12]
 802cb7c:	6923      	ldr	r3, [r4, #16]
 802cb7e:	b94b      	cbnz	r3, 802cb94 <__swsetup_r+0x7c>
 802cb80:	89a3      	ldrh	r3, [r4, #12]
 802cb82:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802cb86:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802cb8a:	d003      	beq.n	802cb94 <__swsetup_r+0x7c>
 802cb8c:	4621      	mov	r1, r4
 802cb8e:	4628      	mov	r0, r5
 802cb90:	f000 f840 	bl	802cc14 <__smakebuf_r>
 802cb94:	89a0      	ldrh	r0, [r4, #12]
 802cb96:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802cb9a:	f010 0301 	ands.w	r3, r0, #1
 802cb9e:	d00a      	beq.n	802cbb6 <__swsetup_r+0x9e>
 802cba0:	2300      	movs	r3, #0
 802cba2:	60a3      	str	r3, [r4, #8]
 802cba4:	6963      	ldr	r3, [r4, #20]
 802cba6:	425b      	negs	r3, r3
 802cba8:	61a3      	str	r3, [r4, #24]
 802cbaa:	6923      	ldr	r3, [r4, #16]
 802cbac:	b943      	cbnz	r3, 802cbc0 <__swsetup_r+0xa8>
 802cbae:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802cbb2:	d1c4      	bne.n	802cb3e <__swsetup_r+0x26>
 802cbb4:	bd38      	pop	{r3, r4, r5, pc}
 802cbb6:	0781      	lsls	r1, r0, #30
 802cbb8:	bf58      	it	pl
 802cbba:	6963      	ldrpl	r3, [r4, #20]
 802cbbc:	60a3      	str	r3, [r4, #8]
 802cbbe:	e7f4      	b.n	802cbaa <__swsetup_r+0x92>
 802cbc0:	2000      	movs	r0, #0
 802cbc2:	e7f7      	b.n	802cbb4 <__swsetup_r+0x9c>
 802cbc4:	20000164 	.word	0x20000164

0802cbc8 <__swhatbuf_r>:
 802cbc8:	b570      	push	{r4, r5, r6, lr}
 802cbca:	460c      	mov	r4, r1
 802cbcc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802cbd0:	2900      	cmp	r1, #0
 802cbd2:	b096      	sub	sp, #88	; 0x58
 802cbd4:	4615      	mov	r5, r2
 802cbd6:	461e      	mov	r6, r3
 802cbd8:	da0d      	bge.n	802cbf6 <__swhatbuf_r+0x2e>
 802cbda:	89a3      	ldrh	r3, [r4, #12]
 802cbdc:	f013 0f80 	tst.w	r3, #128	; 0x80
 802cbe0:	f04f 0100 	mov.w	r1, #0
 802cbe4:	bf0c      	ite	eq
 802cbe6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802cbea:	2340      	movne	r3, #64	; 0x40
 802cbec:	2000      	movs	r0, #0
 802cbee:	6031      	str	r1, [r6, #0]
 802cbf0:	602b      	str	r3, [r5, #0]
 802cbf2:	b016      	add	sp, #88	; 0x58
 802cbf4:	bd70      	pop	{r4, r5, r6, pc}
 802cbf6:	466a      	mov	r2, sp
 802cbf8:	f000 f848 	bl	802cc8c <_fstat_r>
 802cbfc:	2800      	cmp	r0, #0
 802cbfe:	dbec      	blt.n	802cbda <__swhatbuf_r+0x12>
 802cc00:	9901      	ldr	r1, [sp, #4]
 802cc02:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802cc06:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802cc0a:	4259      	negs	r1, r3
 802cc0c:	4159      	adcs	r1, r3
 802cc0e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802cc12:	e7eb      	b.n	802cbec <__swhatbuf_r+0x24>

0802cc14 <__smakebuf_r>:
 802cc14:	898b      	ldrh	r3, [r1, #12]
 802cc16:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802cc18:	079d      	lsls	r5, r3, #30
 802cc1a:	4606      	mov	r6, r0
 802cc1c:	460c      	mov	r4, r1
 802cc1e:	d507      	bpl.n	802cc30 <__smakebuf_r+0x1c>
 802cc20:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802cc24:	6023      	str	r3, [r4, #0]
 802cc26:	6123      	str	r3, [r4, #16]
 802cc28:	2301      	movs	r3, #1
 802cc2a:	6163      	str	r3, [r4, #20]
 802cc2c:	b002      	add	sp, #8
 802cc2e:	bd70      	pop	{r4, r5, r6, pc}
 802cc30:	ab01      	add	r3, sp, #4
 802cc32:	466a      	mov	r2, sp
 802cc34:	f7ff ffc8 	bl	802cbc8 <__swhatbuf_r>
 802cc38:	9900      	ldr	r1, [sp, #0]
 802cc3a:	4605      	mov	r5, r0
 802cc3c:	4630      	mov	r0, r6
 802cc3e:	f7ff f81b 	bl	802bc78 <_malloc_r>
 802cc42:	b948      	cbnz	r0, 802cc58 <__smakebuf_r+0x44>
 802cc44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cc48:	059a      	lsls	r2, r3, #22
 802cc4a:	d4ef      	bmi.n	802cc2c <__smakebuf_r+0x18>
 802cc4c:	f023 0303 	bic.w	r3, r3, #3
 802cc50:	f043 0302 	orr.w	r3, r3, #2
 802cc54:	81a3      	strh	r3, [r4, #12]
 802cc56:	e7e3      	b.n	802cc20 <__smakebuf_r+0xc>
 802cc58:	89a3      	ldrh	r3, [r4, #12]
 802cc5a:	6020      	str	r0, [r4, #0]
 802cc5c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802cc60:	81a3      	strh	r3, [r4, #12]
 802cc62:	9b00      	ldr	r3, [sp, #0]
 802cc64:	6163      	str	r3, [r4, #20]
 802cc66:	9b01      	ldr	r3, [sp, #4]
 802cc68:	6120      	str	r0, [r4, #16]
 802cc6a:	b15b      	cbz	r3, 802cc84 <__smakebuf_r+0x70>
 802cc6c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802cc70:	4630      	mov	r0, r6
 802cc72:	f000 f81d 	bl	802ccb0 <_isatty_r>
 802cc76:	b128      	cbz	r0, 802cc84 <__smakebuf_r+0x70>
 802cc78:	89a3      	ldrh	r3, [r4, #12]
 802cc7a:	f023 0303 	bic.w	r3, r3, #3
 802cc7e:	f043 0301 	orr.w	r3, r3, #1
 802cc82:	81a3      	strh	r3, [r4, #12]
 802cc84:	89a3      	ldrh	r3, [r4, #12]
 802cc86:	431d      	orrs	r5, r3
 802cc88:	81a5      	strh	r5, [r4, #12]
 802cc8a:	e7cf      	b.n	802cc2c <__smakebuf_r+0x18>

0802cc8c <_fstat_r>:
 802cc8c:	b538      	push	{r3, r4, r5, lr}
 802cc8e:	4d07      	ldr	r5, [pc, #28]	; (802ccac <_fstat_r+0x20>)
 802cc90:	2300      	movs	r3, #0
 802cc92:	4604      	mov	r4, r0
 802cc94:	4608      	mov	r0, r1
 802cc96:	4611      	mov	r1, r2
 802cc98:	602b      	str	r3, [r5, #0]
 802cc9a:	f7d5 f85f 	bl	8001d5c <_fstat>
 802cc9e:	1c43      	adds	r3, r0, #1
 802cca0:	d102      	bne.n	802cca8 <_fstat_r+0x1c>
 802cca2:	682b      	ldr	r3, [r5, #0]
 802cca4:	b103      	cbz	r3, 802cca8 <_fstat_r+0x1c>
 802cca6:	6023      	str	r3, [r4, #0]
 802cca8:	bd38      	pop	{r3, r4, r5, pc}
 802ccaa:	bf00      	nop
 802ccac:	200142d4 	.word	0x200142d4

0802ccb0 <_isatty_r>:
 802ccb0:	b538      	push	{r3, r4, r5, lr}
 802ccb2:	4d06      	ldr	r5, [pc, #24]	; (802cccc <_isatty_r+0x1c>)
 802ccb4:	2300      	movs	r3, #0
 802ccb6:	4604      	mov	r4, r0
 802ccb8:	4608      	mov	r0, r1
 802ccba:	602b      	str	r3, [r5, #0]
 802ccbc:	f7d5 f854 	bl	8001d68 <_isatty>
 802ccc0:	1c43      	adds	r3, r0, #1
 802ccc2:	d102      	bne.n	802ccca <_isatty_r+0x1a>
 802ccc4:	682b      	ldr	r3, [r5, #0]
 802ccc6:	b103      	cbz	r3, 802ccca <_isatty_r+0x1a>
 802ccc8:	6023      	str	r3, [r4, #0]
 802ccca:	bd38      	pop	{r3, r4, r5, pc}
 802cccc:	200142d4 	.word	0x200142d4

0802ccd0 <_init>:
 802ccd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ccd2:	bf00      	nop
 802ccd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802ccd6:	bc08      	pop	{r3}
 802ccd8:	469e      	mov	lr, r3
 802ccda:	4770      	bx	lr

0802ccdc <_fini>:
 802ccdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ccde:	bf00      	nop
 802cce0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cce2:	bc08      	pop	{r3}
 802cce4:	469e      	mov	lr, r3
 802cce6:	4770      	bx	lr
